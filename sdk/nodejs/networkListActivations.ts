// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the `akamai.NetworkListActivations` resource to activate a network list in either the STAGING or PRODUCTION
 * environment.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const networkListsFilter = akamai.getNetworkLists({
 *     name: _var.network_list,
 * });
 * const activation = new akamai.NetworkListActivations("activation", {
 *     networkListId: networkListsFilter.then(networkListsFilter => networkListsFilter.lists?[0]),
 *     network: "STAGING",
 *     notes: "TEST Notes",
 *     notificationEmails: ["user@example.com"],
 * });
 * ```
 */
export class NetworkListActivations extends pulumi.CustomResource {
    /**
     * Get an existing NetworkListActivations resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkListActivationsState, opts?: pulumi.CustomResourceOptions): NetworkListActivations {
        return new NetworkListActivations(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/networkListActivations:NetworkListActivations';

    /**
     * Returns true if the given object is an instance of NetworkListActivations.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkListActivations {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkListActivations.__pulumiType;
    }

    public readonly activate!: pulumi.Output<boolean | undefined>;
    /**
     * The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to
     * `STAGING`.
     */
    public readonly network!: pulumi.Output<string | undefined>;
    /**
     * The ID of the network list to be activated
     */
    public readonly networkListId!: pulumi.Output<string>;
    /**
     * A comment describing the activation.
     */
    public readonly notes!: pulumi.Output<string | undefined>;
    /**
     * A bracketed, comma-separated list of email addresses that will be notified when the
     * operation is complete.
     */
    public readonly notificationEmails!: pulumi.Output<string[]>;
    /**
     * The string `ACTIVATED` if the activation was successful, or a string identifying the reason why the network
     * list was not activated.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a NetworkListActivations resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkListActivationsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkListActivationsArgs | NetworkListActivationsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkListActivationsState | undefined;
            resourceInputs["activate"] = state ? state.activate : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["networkListId"] = state ? state.networkListId : undefined;
            resourceInputs["notes"] = state ? state.notes : undefined;
            resourceInputs["notificationEmails"] = state ? state.notificationEmails : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as NetworkListActivationsArgs | undefined;
            if ((!args || args.networkListId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkListId'");
            }
            if ((!args || args.notificationEmails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notificationEmails'");
            }
            resourceInputs["activate"] = args ? args.activate : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["networkListId"] = args ? args.networkListId : undefined;
            resourceInputs["notes"] = args ? args.notes : undefined;
            resourceInputs["notificationEmails"] = args ? args.notificationEmails : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkListActivations.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkListActivations resources.
 */
export interface NetworkListActivationsState {
    activate?: pulumi.Input<boolean>;
    /**
     * The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to
     * `STAGING`.
     */
    network?: pulumi.Input<string>;
    /**
     * The ID of the network list to be activated
     */
    networkListId?: pulumi.Input<string>;
    /**
     * A comment describing the activation.
     */
    notes?: pulumi.Input<string>;
    /**
     * A bracketed, comma-separated list of email addresses that will be notified when the
     * operation is complete.
     */
    notificationEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The string `ACTIVATED` if the activation was successful, or a string identifying the reason why the network
     * list was not activated.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkListActivations resource.
 */
export interface NetworkListActivationsArgs {
    activate?: pulumi.Input<boolean>;
    /**
     * The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to
     * `STAGING`.
     */
    network?: pulumi.Input<string>;
    /**
     * The ID of the network list to be activated
     */
    networkListId: pulumi.Input<string>;
    /**
     * A comment describing the activation.
     */
    notes?: pulumi.Input<string>;
    /**
     * A bracketed, comma-separated list of email addresses that will be notified when the
     * operation is complete.
     */
    notificationEmails: pulumi.Input<pulumi.Input<string>[]>;
}
