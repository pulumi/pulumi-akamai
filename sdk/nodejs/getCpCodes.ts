// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCpCodes(args: GetCpCodesArgs, opts?: pulumi.InvokeOptions): Promise<GetCpCodesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getCpCodes:getCpCodes", {
        "contractId": args.contractId,
        "filterByName": args.filterByName,
        "filterByProductId": args.filterByProductId,
        "groupId": args.groupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCpCodes.
 */
export interface GetCpCodesArgs {
    contractId: string;
    filterByName?: string;
    filterByProductId?: string;
    groupId: string;
}

/**
 * A collection of values returned by getCpCodes.
 */
export interface GetCpCodesResult {
    readonly accountId: string;
    readonly contractId: string;
    readonly cpCodes: outputs.GetCpCodesCpCode[];
    readonly filterByName?: string;
    readonly filterByProductId?: string;
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
export function getCpCodesOutput(args: GetCpCodesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCpCodesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("akamai:index/getCpCodes:getCpCodes", {
        "contractId": args.contractId,
        "filterByName": args.filterByName,
        "filterByProductId": args.filterByProductId,
        "groupId": args.groupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCpCodes.
 */
export interface GetCpCodesOutputArgs {
    contractId: pulumi.Input<string>;
    filterByName?: pulumi.Input<string>;
    filterByProductId?: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
}
