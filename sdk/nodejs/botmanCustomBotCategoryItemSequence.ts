// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BotmanCustomBotCategoryItemSequence extends pulumi.CustomResource {
    /**
     * Get an existing BotmanCustomBotCategoryItemSequence resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BotmanCustomBotCategoryItemSequenceState, opts?: pulumi.CustomResourceOptions): BotmanCustomBotCategoryItemSequence {
        return new BotmanCustomBotCategoryItemSequence(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/botmanCustomBotCategoryItemSequence:BotmanCustomBotCategoryItemSequence';

    /**
     * Returns true if the given object is an instance of BotmanCustomBotCategoryItemSequence.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BotmanCustomBotCategoryItemSequence {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BotmanCustomBotCategoryItemSequence.__pulumiType;
    }

    /**
     * Unique identifiers of bots in this category, sorted in preferred order
     */
    public readonly botIds!: pulumi.Output<string[]>;
    /**
     * Unique identifier of the bot category
     */
    public readonly categoryId!: pulumi.Output<string>;
    /**
     * Unique identifier of the security configuration
     */
    public readonly configId!: pulumi.Output<number>;

    /**
     * Create a BotmanCustomBotCategoryItemSequence resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotmanCustomBotCategoryItemSequenceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BotmanCustomBotCategoryItemSequenceArgs | BotmanCustomBotCategoryItemSequenceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BotmanCustomBotCategoryItemSequenceState | undefined;
            resourceInputs["botIds"] = state ? state.botIds : undefined;
            resourceInputs["categoryId"] = state ? state.categoryId : undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
        } else {
            const args = argsOrState as BotmanCustomBotCategoryItemSequenceArgs | undefined;
            if ((!args || args.botIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botIds'");
            }
            if ((!args || args.categoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'categoryId'");
            }
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            resourceInputs["botIds"] = args ? args.botIds : undefined;
            resourceInputs["categoryId"] = args ? args.categoryId : undefined;
            resourceInputs["configId"] = args ? args.configId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BotmanCustomBotCategoryItemSequence.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BotmanCustomBotCategoryItemSequence resources.
 */
export interface BotmanCustomBotCategoryItemSequenceState {
    /**
     * Unique identifiers of bots in this category, sorted in preferred order
     */
    botIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique identifier of the bot category
     */
    categoryId?: pulumi.Input<string>;
    /**
     * Unique identifier of the security configuration
     */
    configId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a BotmanCustomBotCategoryItemSequence resource.
 */
export interface BotmanCustomBotCategoryItemSequenceArgs {
    /**
     * Unique identifiers of bots in this category, sorted in preferred order
     */
    botIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique identifier of the bot category
     */
    categoryId: pulumi.Input<string>;
    /**
     * Unique identifier of the security configuration
     */
    configId: pulumi.Input<number>;
}
