// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEdgeWorkersResourceTier(args: GetEdgeWorkersResourceTierArgs, opts?: pulumi.InvokeOptions): Promise<GetEdgeWorkersResourceTierResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getEdgeWorkersResourceTier:getEdgeWorkersResourceTier", {
        "contractId": args.contractId,
        "resourceTierName": args.resourceTierName,
    }, opts);
}

/**
 * A collection of arguments for invoking getEdgeWorkersResourceTier.
 */
export interface GetEdgeWorkersResourceTierArgs {
    contractId: string;
    resourceTierName: string;
}

/**
 * A collection of values returned by getEdgeWorkersResourceTier.
 */
export interface GetEdgeWorkersResourceTierResult {
    readonly contractId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resourceTierId: number;
    readonly resourceTierName: string;
}
export function getEdgeWorkersResourceTierOutput(args: GetEdgeWorkersResourceTierOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEdgeWorkersResourceTierResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("akamai:index/getEdgeWorkersResourceTier:getEdgeWorkersResourceTier", {
        "contractId": args.contractId,
        "resourceTierName": args.resourceTierName,
    }, opts);
}

/**
 * A collection of arguments for invoking getEdgeWorkersResourceTier.
 */
export interface GetEdgeWorkersResourceTierOutputArgs {
    contractId: pulumi.Input<string>;
    resourceTierName: pulumi.Input<string>;
}
