// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMtlskeystoreAccountCaCertificates(args?: GetMtlskeystoreAccountCaCertificatesArgs, opts?: pulumi.InvokeOptions): Promise<GetMtlskeystoreAccountCaCertificatesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getMtlskeystoreAccountCaCertificates:getMtlskeystoreAccountCaCertificates", {
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getMtlskeystoreAccountCaCertificates.
 */
export interface GetMtlskeystoreAccountCaCertificatesArgs {
    statuses?: string[];
}

/**
 * A collection of values returned by getMtlskeystoreAccountCaCertificates.
 */
export interface GetMtlskeystoreAccountCaCertificatesResult {
    readonly certificates: outputs.GetMtlskeystoreAccountCaCertificatesCertificate[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly statuses?: string[];
}
export function getMtlskeystoreAccountCaCertificatesOutput(args?: GetMtlskeystoreAccountCaCertificatesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMtlskeystoreAccountCaCertificatesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("akamai:index/getMtlskeystoreAccountCaCertificates:getMtlskeystoreAccountCaCertificates", {
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getMtlskeystoreAccountCaCertificates.
 */
export interface GetMtlskeystoreAccountCaCertificatesOutputArgs {
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
