// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IamCidrBlock extends pulumi.CustomResource {
    /**
     * Get an existing IamCidrBlock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamCidrBlockState, opts?: pulumi.CustomResourceOptions): IamCidrBlock {
        return new IamCidrBlock(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/iamCidrBlock:IamCidrBlock';

    /**
     * Returns true if the given object is an instance of IamCidrBlock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamCidrBlock {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamCidrBlock.__pulumiType;
    }

    /**
     * Specifies activities available for the CIDR block.
     */
    declare public /*out*/ readonly actions: pulumi.Output<outputs.IamCidrBlockActions>;
    /**
     * The value of an IP address or IP address range.
     */
    declare public readonly cidrBlock: pulumi.Output<string>;
    /**
     * Unique identifier for each CIDR block.
     */
    declare public /*out*/ readonly cidrBlockId: pulumi.Output<number>;
    /**
     * Descriptive label you provide for the CIDR block.
     */
    declare public readonly comments: pulumi.Output<string | undefined>;
    /**
     * The user who created the CIDR block.
     */
    declare public /*out*/ readonly createdBy: pulumi.Output<string>;
    /**
     * ISO 8601 timestamp indicating when the CIDR block was created.
     */
    declare public /*out*/ readonly createdDate: pulumi.Output<string>;
    /**
     * Enables the CIDR block on the account.
     */
    declare public readonly enabled: pulumi.Output<boolean>;
    /**
     * The user who last edited the CIDR block.
     */
    declare public /*out*/ readonly modifiedBy: pulumi.Output<string>;
    /**
     * ISO 8601 timestamp indicating when the CIDR block was last modified.
     */
    declare public /*out*/ readonly modifiedDate: pulumi.Output<string>;

    /**
     * Create a IamCidrBlock resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamCidrBlockArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamCidrBlockArgs | IamCidrBlockState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamCidrBlockState | undefined;
            resourceInputs["actions"] = state?.actions;
            resourceInputs["cidrBlock"] = state?.cidrBlock;
            resourceInputs["cidrBlockId"] = state?.cidrBlockId;
            resourceInputs["comments"] = state?.comments;
            resourceInputs["createdBy"] = state?.createdBy;
            resourceInputs["createdDate"] = state?.createdDate;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["modifiedBy"] = state?.modifiedBy;
            resourceInputs["modifiedDate"] = state?.modifiedDate;
        } else {
            const args = argsOrState as IamCidrBlockArgs | undefined;
            if (args?.cidrBlock === undefined && !opts.urn) {
                throw new Error("Missing required property 'cidrBlock'");
            }
            if (args?.enabled === undefined && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            resourceInputs["cidrBlock"] = args?.cidrBlock;
            resourceInputs["comments"] = args?.comments;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["actions"] = undefined /*out*/;
            resourceInputs["cidrBlockId"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["modifiedBy"] = undefined /*out*/;
            resourceInputs["modifiedDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamCidrBlock.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IamCidrBlock resources.
 */
export interface IamCidrBlockState {
    /**
     * Specifies activities available for the CIDR block.
     */
    actions?: pulumi.Input<inputs.IamCidrBlockActions>;
    /**
     * The value of an IP address or IP address range.
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * Unique identifier for each CIDR block.
     */
    cidrBlockId?: pulumi.Input<number>;
    /**
     * Descriptive label you provide for the CIDR block.
     */
    comments?: pulumi.Input<string>;
    /**
     * The user who created the CIDR block.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * ISO 8601 timestamp indicating when the CIDR block was created.
     */
    createdDate?: pulumi.Input<string>;
    /**
     * Enables the CIDR block on the account.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The user who last edited the CIDR block.
     */
    modifiedBy?: pulumi.Input<string>;
    /**
     * ISO 8601 timestamp indicating when the CIDR block was last modified.
     */
    modifiedDate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IamCidrBlock resource.
 */
export interface IamCidrBlockArgs {
    /**
     * The value of an IP address or IP address range.
     */
    cidrBlock: pulumi.Input<string>;
    /**
     * Descriptive label you provide for the CIDR block.
     */
    comments?: pulumi.Input<string>;
    /**
     * Enables the CIDR block on the account.
     */
    enabled: pulumi.Input<boolean>;
}
