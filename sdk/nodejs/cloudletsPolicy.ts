// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the `akamai.CloudletsPolicy` resource to create and version a policy. For each Cloudlet instance on your contract, there can be any number of policies. A single policy is associated with a single property configuration. Within a policy version you define the rules that determine when the Cloudlet executes. You may want to create a new version of a policy to support a different business requirement, or to test new functionality.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const example = new akamai.CloudletsPolicy("example", {
 *     cloudletCode: "ER",
 *     description: "policy description",
 *     groupId: "grp_123",
 *     matchRules: `  [
 *   {
 *     "name": "rule1",
 *     "type": "erMatchRule",
 *     "useRelativeUrl": "none",
 *     "statusCode": 301,
 *     "redirectURL": "https://www.example.com",
 *     "matchURL": "example.com",
 *     "useIncomingQueryString": false,
 *     "useIncomingSchemeAndHost": true
 *   },
 *   {
 *     "name": "rule2",
 *     "type": "erMatchRule",
 *     "matches": [
 *       {
 *         "matchType": "hostname",
 *         "matchValue": "3333.dom",
 *         "matchOperator": "equals",
 *         "caseSensitive": true,
 *         "negate": false
 *       }
 *     ],
 *     "useRelativeUrl": "none",
 *     "statusCode": 301,
 *     "redirectURL": "https://www.example.com",
 *     "useIncomingQueryString": false,
 *     "useIncomingSchemeAndHost": true
 *   }
 * ]
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * Basic usagehcl resource "akamai_cloudlets_policy" "example" {
 *
 * # (resource arguments)
 *
 *  } You can import your Akamai Cloudlets policy using a policy name. For example
 *
 * ```sh
 *  $ pulumi import akamai:index/cloudletsPolicy:CloudletsPolicy example policy1
 * ```
 */
export class CloudletsPolicy extends pulumi.CustomResource {
    /**
     * Get an existing CloudletsPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudletsPolicyState, opts?: pulumi.CustomResourceOptions): CloudletsPolicy {
        return new CloudletsPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/cloudletsPolicy:CloudletsPolicy';

    /**
     * Returns true if the given object is an instance of CloudletsPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudletsPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudletsPolicy.__pulumiType;
    }

    /**
     * The two- or three- character code for the type of Cloudlet, either `ALB` for Application Load Balancer or `ER` for Edge Redirector.
     */
    public readonly cloudletCode!: pulumi.Output<string>;
    /**
     * A unique identifier that corresponds to a Cloudlets policy type, either `0` for Edge Redirector or `9` for Application Load Balancer.
     */
    public /*out*/ readonly cloudletId!: pulumi.Output<number>;
    /**
     * The description of this specific policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Defines the group association for the policy. You must have edit privileges for the group.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * The version of the Cloudlet-specific `matchRules`.
     */
    public readonly matchRuleFormat!: pulumi.Output<string | undefined>;
    /**
     * A JSON structure that defines the rules for this policy
     */
    public readonly matchRules!: pulumi.Output<string | undefined>;
    /**
     * The unique name of the policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The version number of the policy.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;
    /**
     * A JSON-encoded list of warnings.
     */
    public /*out*/ readonly warnings!: pulumi.Output<string>;

    /**
     * Create a CloudletsPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudletsPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudletsPolicyArgs | CloudletsPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudletsPolicyState | undefined;
            resourceInputs["cloudletCode"] = state ? state.cloudletCode : undefined;
            resourceInputs["cloudletId"] = state ? state.cloudletId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["matchRuleFormat"] = state ? state.matchRuleFormat : undefined;
            resourceInputs["matchRules"] = state ? state.matchRules : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["warnings"] = state ? state.warnings : undefined;
        } else {
            const args = argsOrState as CloudletsPolicyArgs | undefined;
            if ((!args || args.cloudletCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudletCode'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            resourceInputs["cloudletCode"] = args ? args.cloudletCode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["matchRuleFormat"] = args ? args.matchRuleFormat : undefined;
            resourceInputs["matchRules"] = args ? args.matchRules : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["cloudletId"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
            resourceInputs["warnings"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudletsPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudletsPolicy resources.
 */
export interface CloudletsPolicyState {
    /**
     * The two- or three- character code for the type of Cloudlet, either `ALB` for Application Load Balancer or `ER` for Edge Redirector.
     */
    cloudletCode?: pulumi.Input<string>;
    /**
     * A unique identifier that corresponds to a Cloudlets policy type, either `0` for Edge Redirector or `9` for Application Load Balancer.
     */
    cloudletId?: pulumi.Input<number>;
    /**
     * The description of this specific policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Defines the group association for the policy. You must have edit privileges for the group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The version of the Cloudlet-specific `matchRules`.
     */
    matchRuleFormat?: pulumi.Input<string>;
    /**
     * A JSON structure that defines the rules for this policy
     */
    matchRules?: pulumi.Input<string>;
    /**
     * The unique name of the policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The version number of the policy.
     */
    version?: pulumi.Input<number>;
    /**
     * A JSON-encoded list of warnings.
     */
    warnings?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudletsPolicy resource.
 */
export interface CloudletsPolicyArgs {
    /**
     * The two- or three- character code for the type of Cloudlet, either `ALB` for Application Load Balancer or `ER` for Edge Redirector.
     */
    cloudletCode: pulumi.Input<string>;
    /**
     * The description of this specific policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Defines the group association for the policy. You must have edit privileges for the group.
     */
    groupId: pulumi.Input<string>;
    /**
     * The version of the Cloudlet-specific `matchRules`.
     */
    matchRuleFormat?: pulumi.Input<string>;
    /**
     * A JSON structure that defines the rules for this policy
     */
    matchRules?: pulumi.Input<string>;
    /**
     * The unique name of the policy.
     */
    name?: pulumi.Input<string>;
}
