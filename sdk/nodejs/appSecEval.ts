// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Scopes**: Security policy
 *
 * Issues an evaluation mode command (`Start`, `Stop`, `Restart`, `Update`, or `Complete`) to a security configuration.
 * Evaluation mode is used for testing and fine-tuning your Kona Rule Set rules and configuration settings.
 * In evaluation mode rules are triggered by events, but the only thing those rules do is record the actions they *would* have taken had the event occurred on the production network.
 *
 * **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/eval](https://techdocs.akamai.com/application-security/reference/post-policy-eval)
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const evalOperation = new akamai.AppSecEval("evalOperation", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     securityPolicyId: "gms1_134637",
 *     evalOperation: "START",
 * });
 * export const evalModeEvaluatingRuleset = evalOperation.evaluatingRuleset;
 * export const evalModeExpirationDate = evalOperation.expirationDate;
 * export const evalModeCurrentRuleset = evalOperation.currentRuleset;
 * export const evalModeStatus = evalOperation.evalStatus;
 * ```
 * ## Output Options
 *
 * The following options can be used to determine the information returned, and how that returned information is formatted:
 *
 * - `evaluationRuleset`. Versioning information for the Kona Rule Set being evaluated.
 * - `expirationDate`. Date when the evaluation period ends.
 * - `currentRuleset`. Versioning information for the Kona Rule Set currently in use on the production network.
 * - `evalStatus`. If **true**, an evaluation is currently in progress; if **false**, evaluation is either paused or is not running.
 */
export class AppSecEval extends pulumi.CustomResource {
    /**
     * Get an existing AppSecEval resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecEvalState, opts?: pulumi.CustomResourceOptions): AppSecEval {
        return new AppSecEval(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecEval:AppSecEval';

    /**
     * Returns true if the given object is an instance of AppSecEval.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecEval {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecEval.__pulumiType;
    }

    /**
     * . Unique identifier of the security configuration where evaluation mode will take place (or is currently taking place).
     */
    public readonly configId!: pulumi.Output<number>;
    public /*out*/ readonly currentRuleset!: pulumi.Output<string>;
    /**
     * . Set to **ASE_AUTO** to have your Kona Rule Set rules automatically updated during the evaluation period; set to **ASE_MANUAL** if you want to manually update your evaluation rules. Note that this option is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.
     */
    public readonly evalMode!: pulumi.Output<string | undefined>;
    /**
     * . Evaluation mode operation. Allowed values are:
     * - **START**. Starts evaluation mode. By default, evaluation mode runs for four weeks.
     * - **STOP**, Pauses evaluation mode without upgrading the Kona Rule Set on your production network.
     * - **RESTART**. Resumes an evaluation trial that was paused by using the **STOP** command.
     * - **UPDATE**. Upgrades the Kona Rule Set rules in the evaluation ruleset to their latest versions.
     * - **COMPLETE**. Concludes the evaluation period (even if the four-week trial mode is not over) and automatically upgrades the Kona Rule Set on your production network to the same rule set you just finished evaluating.
     */
    public readonly evalOperation!: pulumi.Output<string>;
    public /*out*/ readonly evalStatus!: pulumi.Output<string>;
    public /*out*/ readonly evaluatingRuleset!: pulumi.Output<string>;
    public /*out*/ readonly expirationDate!: pulumi.Output<string>;
    /**
     * . Unique identifier of the security policy associated with the evaluation process.
     */
    public readonly securityPolicyId!: pulumi.Output<string>;

    /**
     * Create a AppSecEval resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecEvalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecEvalArgs | AppSecEvalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecEvalState | undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["currentRuleset"] = state ? state.currentRuleset : undefined;
            resourceInputs["evalMode"] = state ? state.evalMode : undefined;
            resourceInputs["evalOperation"] = state ? state.evalOperation : undefined;
            resourceInputs["evalStatus"] = state ? state.evalStatus : undefined;
            resourceInputs["evaluatingRuleset"] = state ? state.evaluatingRuleset : undefined;
            resourceInputs["expirationDate"] = state ? state.expirationDate : undefined;
            resourceInputs["securityPolicyId"] = state ? state.securityPolicyId : undefined;
        } else {
            const args = argsOrState as AppSecEvalArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.evalOperation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'evalOperation'");
            }
            if ((!args || args.securityPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicyId'");
            }
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["evalMode"] = args ? args.evalMode : undefined;
            resourceInputs["evalOperation"] = args ? args.evalOperation : undefined;
            resourceInputs["securityPolicyId"] = args ? args.securityPolicyId : undefined;
            resourceInputs["currentRuleset"] = undefined /*out*/;
            resourceInputs["evalStatus"] = undefined /*out*/;
            resourceInputs["evaluatingRuleset"] = undefined /*out*/;
            resourceInputs["expirationDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppSecEval.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecEval resources.
 */
export interface AppSecEvalState {
    /**
     * . Unique identifier of the security configuration where evaluation mode will take place (or is currently taking place).
     */
    configId?: pulumi.Input<number>;
    currentRuleset?: pulumi.Input<string>;
    /**
     * . Set to **ASE_AUTO** to have your Kona Rule Set rules automatically updated during the evaluation period; set to **ASE_MANUAL** if you want to manually update your evaluation rules. Note that this option is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.
     */
    evalMode?: pulumi.Input<string>;
    /**
     * . Evaluation mode operation. Allowed values are:
     * - **START**. Starts evaluation mode. By default, evaluation mode runs for four weeks.
     * - **STOP**, Pauses evaluation mode without upgrading the Kona Rule Set on your production network.
     * - **RESTART**. Resumes an evaluation trial that was paused by using the **STOP** command.
     * - **UPDATE**. Upgrades the Kona Rule Set rules in the evaluation ruleset to their latest versions.
     * - **COMPLETE**. Concludes the evaluation period (even if the four-week trial mode is not over) and automatically upgrades the Kona Rule Set on your production network to the same rule set you just finished evaluating.
     */
    evalOperation?: pulumi.Input<string>;
    evalStatus?: pulumi.Input<string>;
    evaluatingRuleset?: pulumi.Input<string>;
    expirationDate?: pulumi.Input<string>;
    /**
     * . Unique identifier of the security policy associated with the evaluation process.
     */
    securityPolicyId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppSecEval resource.
 */
export interface AppSecEvalArgs {
    /**
     * . Unique identifier of the security configuration where evaluation mode will take place (or is currently taking place).
     */
    configId: pulumi.Input<number>;
    /**
     * . Set to **ASE_AUTO** to have your Kona Rule Set rules automatically updated during the evaluation period; set to **ASE_MANUAL** if you want to manually update your evaluation rules. Note that this option is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.
     */
    evalMode?: pulumi.Input<string>;
    /**
     * . Evaluation mode operation. Allowed values are:
     * - **START**. Starts evaluation mode. By default, evaluation mode runs for four weeks.
     * - **STOP**, Pauses evaluation mode without upgrading the Kona Rule Set on your production network.
     * - **RESTART**. Resumes an evaluation trial that was paused by using the **STOP** command.
     * - **UPDATE**. Upgrades the Kona Rule Set rules in the evaluation ruleset to their latest versions.
     * - **COMPLETE**. Concludes the evaluation period (even if the four-week trial mode is not over) and automatically upgrades the Kona Rule Set on your production network to the same rule set you just finished evaluating.
     */
    evalOperation: pulumi.Input<string>;
    /**
     * . Unique identifier of the security policy associated with the evaluation process.
     */
    securityPolicyId: pulumi.Input<string>;
}
