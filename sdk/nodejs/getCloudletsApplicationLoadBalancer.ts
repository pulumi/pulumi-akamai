// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudletsApplicationLoadBalancer(args: GetCloudletsApplicationLoadBalancerArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudletsApplicationLoadBalancerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getCloudletsApplicationLoadBalancer:getCloudletsApplicationLoadBalancer", {
        "originId": args.originId,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudletsApplicationLoadBalancer.
 */
export interface GetCloudletsApplicationLoadBalancerArgs {
    originId: string;
    version?: number;
}

/**
 * A collection of values returned by getCloudletsApplicationLoadBalancer.
 */
export interface GetCloudletsApplicationLoadBalancerResult {
    readonly balancingType: string;
    readonly createdBy: string;
    readonly createdDate: string;
    readonly dataCenters: outputs.GetCloudletsApplicationLoadBalancerDataCenter[];
    readonly deleted: boolean;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly immutable: boolean;
    readonly lastModifiedBy: string;
    readonly lastModifiedDate: string;
    readonly livenessSettings: outputs.GetCloudletsApplicationLoadBalancerLivenessSetting[];
    readonly originId: string;
    readonly type: string;
    readonly version?: number;
    readonly warnings: string;
}
export function getCloudletsApplicationLoadBalancerOutput(args: GetCloudletsApplicationLoadBalancerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudletsApplicationLoadBalancerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("akamai:index/getCloudletsApplicationLoadBalancer:getCloudletsApplicationLoadBalancer", {
        "originId": args.originId,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudletsApplicationLoadBalancer.
 */
export interface GetCloudletsApplicationLoadBalancerOutputArgs {
    originId: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}
