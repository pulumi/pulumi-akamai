// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamApiClient(args?: GetIamApiClientArgs, opts?: pulumi.InvokeOptions): Promise<GetIamApiClientResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getIamApiClient:getIamApiClient", {
        "clientId": args.clientId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamApiClient.
 */
export interface GetIamApiClientArgs {
    clientId?: string;
}

/**
 * A collection of values returned by getIamApiClient.
 */
export interface GetIamApiClientResult {
    readonly accessToken: string;
    readonly actions: outputs.GetIamApiClientActions;
    readonly activeCredentialCount: number;
    readonly allowAccountSwitch: boolean;
    readonly apiAccess: outputs.GetIamApiClientApiAccess;
    readonly authorizedUsers: string[];
    readonly baseUrl: string;
    readonly canAutoCreateCredential: boolean;
    readonly clientDescription: string;
    readonly clientId?: string;
    readonly clientName: string;
    readonly clientType: string;
    readonly createdBy: string;
    readonly createdDate: string;
    readonly credentials: outputs.GetIamApiClientCredential[];
    readonly groupAccess: outputs.GetIamApiClientGroupAccess;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipAcl: outputs.GetIamApiClientIpAcl;
    readonly isLocked: boolean;
    readonly notificationEmails: string[];
    readonly purgeOptions: outputs.GetIamApiClientPurgeOptions;
}
export function getIamApiClientOutput(args?: GetIamApiClientOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIamApiClientResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("akamai:index/getIamApiClient:getIamApiClient", {
        "clientId": args.clientId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamApiClient.
 */
export interface GetIamApiClientOutputArgs {
    clientId?: pulumi.Input<string>;
}
