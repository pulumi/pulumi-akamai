// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EdgekvGroupItems extends pulumi.CustomResource {
    /**
     * Get an existing EdgekvGroupItems resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgekvGroupItemsState, opts?: pulumi.CustomResourceOptions): EdgekvGroupItems {
        return new EdgekvGroupItems(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/edgekvGroupItems:EdgekvGroupItems';

    /**
     * Returns true if the given object is an instance of EdgekvGroupItems.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgekvGroupItems {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgekvGroupItems.__pulumiType;
    }

    /**
     * The name of the EdgeKV group.
     */
    declare public readonly groupName: pulumi.Output<string>;
    /**
     * A map of items within the specified group. Each item consists of an item key and a value.
     */
    declare public readonly items: pulumi.Output<{[key: string]: string}>;
    /**
     * The name for the EdgeKV namespace.
     */
    declare public readonly namespaceName: pulumi.Output<string>;
    /**
     * The network against which to execute the API request.
     */
    declare public readonly network: pulumi.Output<string>;
    /**
     * Enables to set timeout for processing
     */
    declare public readonly timeouts: pulumi.Output<outputs.EdgekvGroupItemsTimeouts | undefined>;

    /**
     * Create a EdgekvGroupItems resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgekvGroupItemsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgekvGroupItemsArgs | EdgekvGroupItemsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgekvGroupItemsState | undefined;
            resourceInputs["groupName"] = state?.groupName;
            resourceInputs["items"] = state?.items;
            resourceInputs["namespaceName"] = state?.namespaceName;
            resourceInputs["network"] = state?.network;
            resourceInputs["timeouts"] = state?.timeouts;
        } else {
            const args = argsOrState as EdgekvGroupItemsArgs | undefined;
            if (args?.groupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            if (args?.items === undefined && !opts.urn) {
                throw new Error("Missing required property 'items'");
            }
            if (args?.namespaceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespaceName'");
            }
            if (args?.network === undefined && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["groupName"] = args?.groupName;
            resourceInputs["items"] = args?.items;
            resourceInputs["namespaceName"] = args?.namespaceName;
            resourceInputs["network"] = args?.network;
            resourceInputs["timeouts"] = args?.timeouts;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgekvGroupItems.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EdgekvGroupItems resources.
 */
export interface EdgekvGroupItemsState {
    /**
     * The name of the EdgeKV group.
     */
    groupName?: pulumi.Input<string>;
    /**
     * A map of items within the specified group. Each item consists of an item key and a value.
     */
    items?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name for the EdgeKV namespace.
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * The network against which to execute the API request.
     */
    network?: pulumi.Input<string>;
    /**
     * Enables to set timeout for processing
     */
    timeouts?: pulumi.Input<inputs.EdgekvGroupItemsTimeouts>;
}

/**
 * The set of arguments for constructing a EdgekvGroupItems resource.
 */
export interface EdgekvGroupItemsArgs {
    /**
     * The name of the EdgeKV group.
     */
    groupName: pulumi.Input<string>;
    /**
     * A map of items within the specified group. Each item consists of an item key and a value.
     */
    items: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name for the EdgeKV namespace.
     */
    namespaceName: pulumi.Input<string>;
    /**
     * The network against which to execute the API request.
     */
    network: pulumi.Input<string>;
    /**
     * Enables to set timeout for processing
     */
    timeouts?: pulumi.Input<inputs.EdgekvGroupItemsTimeouts>;
}
