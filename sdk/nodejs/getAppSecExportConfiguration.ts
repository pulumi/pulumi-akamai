// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Scopes**: Security configuration and version
 *
 * Returns comprehensive details about a security configuration, including rate policies, security policies, rules, hostnames, and match targets.
 *
 * **Related API Endpoint**: [/appsec/v1/export/configs/{configId}/versions/{versionNumber}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getconfigurationversionexport)
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const export = Promise.all([configuration, configuration]).then(([configuration, configuration1]) => akamai.getAppSecExportConfiguration({
 *     configId: configuration.configId,
 *     version: configuration1.latestVersion,
 *     searches: [
 *         "securityPolicies",
 *         "selectedHosts",
 *     ],
 * }));
 * export const json = _export.then(_export => _export.json);
 * export const text = _export.then(_export => _export.outputText);
 * ```
 * ## Output Options
 *
 * The following options can be used to determine the information returned, and how that returned information is formatted:
 *
 * - `json`. Complete set of information about the specified security configuration version in JSON format. Includes the types available for the `search` parameter as well as additional fields such as `createDate` and `createdBy`.
 * - `outputText`. Tabular report showing the types of data specified in the `search` parameter. Valid only if the `search` parameter references at least one type.
 */
export function getAppSecExportConfiguration(args: GetAppSecExportConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetAppSecExportConfigurationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("akamai:index/getAppSecExportConfiguration:getAppSecExportConfiguration", {
        "configId": args.configId,
        "searches": args.searches,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppSecExportConfiguration.
 */
export interface GetAppSecExportConfigurationArgs {
    /**
     * . Unique identifier of the security configuration you want to return information for.
     */
    configId: number;
    /**
     * . JSON array of strings specifying the types of information to be retrieved. Allowed values include:
     * > - **AdvancedSettingsLogging**
     * > - **AdvancedSettingsPrefetch**
     * > - **ApiRequestConstraints**
     * > - **AttackGroup**
     * > - **AttackGroupConditionException**
     * > - **Eval**
     * > - **EvalRuleConditionException**
     * > - **CustomDeny**
     * > - **CustomRule**
     * > - **CustomRuleAction**
     * > - **IPGeoFirewall**
     * > - **MatchTarget**
     * > - **PenaltyBox**
     * > - **RatePolicy**
     * > - **RatePolicyAction**
     * > - **ReputationProfile**
     * > - **ReputationProfileAction**
     * > - **Rule**
     * > - **RuleConditionException**
     * > - **SecurityPolicy**
     * > - **SiemSettings**
     * > - **SlowPost**
     */
    searches?: string[];
    /**
     * . Version number of the security configuration.
     */
    version: number;
}

/**
 * A collection of values returned by getAppSecExportConfiguration.
 */
export interface GetAppSecExportConfigurationResult {
    readonly configId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly json: string;
    readonly outputText: string;
    readonly searches?: string[];
    readonly version: number;
}

export function getAppSecExportConfigurationOutput(args: GetAppSecExportConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppSecExportConfigurationResult> {
    return pulumi.output(args).apply(a => getAppSecExportConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getAppSecExportConfiguration.
 */
export interface GetAppSecExportConfigurationOutputArgs {
    /**
     * . Unique identifier of the security configuration you want to return information for.
     */
    configId: pulumi.Input<number>;
    /**
     * . JSON array of strings specifying the types of information to be retrieved. Allowed values include:
     * > - **AdvancedSettingsLogging**
     * > - **AdvancedSettingsPrefetch**
     * > - **ApiRequestConstraints**
     * > - **AttackGroup**
     * > - **AttackGroupConditionException**
     * > - **Eval**
     * > - **EvalRuleConditionException**
     * > - **CustomDeny**
     * > - **CustomRule**
     * > - **CustomRuleAction**
     * > - **IPGeoFirewall**
     * > - **MatchTarget**
     * > - **PenaltyBox**
     * > - **RatePolicy**
     * > - **RatePolicyAction**
     * > - **ReputationProfile**
     * > - **ReputationProfileAction**
     * > - **Rule**
     * > - **RuleConditionException**
     * > - **SecurityPolicy**
     * > - **SiemSettings**
     * > - **SlowPost**
     */
    searches?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * . Version number of the security configuration.
     */
    version: pulumi.Input<number>;
}
