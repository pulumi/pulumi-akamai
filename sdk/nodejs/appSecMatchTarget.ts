// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AppSecMatchTarget extends pulumi.CustomResource {
    /**
     * Get an existing AppSecMatchTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecMatchTargetState, opts?: pulumi.CustomResourceOptions): AppSecMatchTarget {
        return new AppSecMatchTarget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecMatchTarget:AppSecMatchTarget';

    /**
     * Returns true if the given object is an instance of AppSecMatchTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecMatchTarget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecMatchTarget.__pulumiType;
    }

    /**
     * Unique identifier of the security configuration
     */
    declare public readonly configId: pulumi.Output<number>;
    /**
     * JSON-formatted definition of the match target
     */
    declare public readonly matchTarget: pulumi.Output<string>;
    /**
     * Unique identifier of the match target
     */
    declare public /*out*/ readonly matchTargetId: pulumi.Output<number>;

    /**
     * Create a AppSecMatchTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecMatchTargetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecMatchTargetArgs | AppSecMatchTargetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecMatchTargetState | undefined;
            resourceInputs["configId"] = state?.configId;
            resourceInputs["matchTarget"] = state?.matchTarget;
            resourceInputs["matchTargetId"] = state?.matchTargetId;
        } else {
            const args = argsOrState as AppSecMatchTargetArgs | undefined;
            if (args?.configId === undefined && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if (args?.matchTarget === undefined && !opts.urn) {
                throw new Error("Missing required property 'matchTarget'");
            }
            resourceInputs["configId"] = args?.configId;
            resourceInputs["matchTarget"] = args?.matchTarget;
            resourceInputs["matchTargetId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppSecMatchTarget.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecMatchTarget resources.
 */
export interface AppSecMatchTargetState {
    /**
     * Unique identifier of the security configuration
     */
    configId?: pulumi.Input<number>;
    /**
     * JSON-formatted definition of the match target
     */
    matchTarget?: pulumi.Input<string>;
    /**
     * Unique identifier of the match target
     */
    matchTargetId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AppSecMatchTarget resource.
 */
export interface AppSecMatchTargetArgs {
    /**
     * Unique identifier of the security configuration
     */
    configId: pulumi.Input<number>;
    /**
     * JSON-formatted definition of the match target
     */
    matchTarget: pulumi.Input<string>;
}
