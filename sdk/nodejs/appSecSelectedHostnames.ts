// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Scopes**: Security configuration
 *
 * Modifies the list of hostnames protected under by a security configuration.
 *
 * **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/selected-hostnames](https://techdocs.akamai.com/application-security/reference/put-selected-hostnames-per-config)
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const appsecselectedhostnames = new akamai.AppSecSelectedHostnames("appsecselectedhostnames", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     hostnames: ["example.com"],
 *     mode: "APPEND",
 * });
 * ```
 */
export class AppSecSelectedHostnames extends pulumi.CustomResource {
    /**
     * Get an existing AppSecSelectedHostnames resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecSelectedHostnamesState, opts?: pulumi.CustomResourceOptions): AppSecSelectedHostnames {
        return new AppSecSelectedHostnames(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecSelectedHostnames:AppSecSelectedHostnames';

    /**
     * Returns true if the given object is an instance of AppSecSelectedHostnames.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecSelectedHostnames {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecSelectedHostnames.__pulumiType;
    }

    /**
     * . Unique identifier of the security configuration associated with the hostnames.
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * . JSON array of hostnames to be added or removed from the protected hosts list.
     */
    public readonly hostnames!: pulumi.Output<string[]>;
    /**
     * . Indicates how the `hostnames` array is to be applied. Allowed values are:
     * - **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.
     * - **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.
     * - **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.
     */
    public readonly mode!: pulumi.Output<string>;

    /**
     * Create a AppSecSelectedHostnames resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecSelectedHostnamesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecSelectedHostnamesArgs | AppSecSelectedHostnamesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecSelectedHostnamesState | undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["hostnames"] = state ? state.hostnames : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
        } else {
            const args = argsOrState as AppSecSelectedHostnamesArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.hostnames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostnames'");
            }
            if ((!args || args.mode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mode'");
            }
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["hostnames"] = args ? args.hostnames : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppSecSelectedHostnames.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecSelectedHostnames resources.
 */
export interface AppSecSelectedHostnamesState {
    /**
     * . Unique identifier of the security configuration associated with the hostnames.
     */
    configId?: pulumi.Input<number>;
    /**
     * . JSON array of hostnames to be added or removed from the protected hosts list.
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * . Indicates how the `hostnames` array is to be applied. Allowed values are:
     * - **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.
     * - **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.
     * - **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.
     */
    mode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppSecSelectedHostnames resource.
 */
export interface AppSecSelectedHostnamesArgs {
    /**
     * . Unique identifier of the security configuration associated with the hostnames.
     */
    configId: pulumi.Input<number>;
    /**
     * . JSON array of hostnames to be added or removed from the protected hosts list.
     */
    hostnames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * . Indicates how the `hostnames` array is to be applied. Allowed values are:
     * - **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.
     * - **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.
     * - **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.
     */
    mode: pulumi.Input<string>;
}
