// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EdgeHostName extends pulumi.CustomResource {
    /**
     * Get an existing EdgeHostName resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeHostNameState, opts?: pulumi.CustomResourceOptions): EdgeHostName {
        return new EdgeHostName(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/edgeHostName:EdgeHostName';

    /**
     * Returns true if the given object is an instance of EdgeHostName.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeHostName {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeHostName.__pulumiType;
    }

    declare public readonly certificate: pulumi.Output<number | undefined>;
    declare public readonly contractId: pulumi.Output<string>;
    declare public readonly edgeHostname: pulumi.Output<string>;
    declare public readonly groupId: pulumi.Output<string>;
    declare public readonly ipBehavior: pulumi.Output<string>;
    declare public readonly productId: pulumi.Output<string>;
    /**
     * Email address that should receive updates on the IP behavior update request.
     */
    declare public readonly statusUpdateEmails: pulumi.Output<string[] | undefined>;
    /**
     * Enables to set timeout for processing
     */
    declare public readonly timeouts: pulumi.Output<outputs.EdgeHostNameTimeouts | undefined>;
    /**
     * The time to live, or number of seconds to keep an edge hostname assigned to a map or target. If not provided default value for product is used.
     */
    declare public readonly ttl: pulumi.Output<number | undefined>;
    /**
     * A JSON encoded list of use cases
     */
    declare public readonly useCases: pulumi.Output<string | undefined>;

    /**
     * Create a EdgeHostName resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeHostNameArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeHostNameArgs | EdgeHostNameState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgeHostNameState | undefined;
            resourceInputs["certificate"] = state?.certificate;
            resourceInputs["contractId"] = state?.contractId;
            resourceInputs["edgeHostname"] = state?.edgeHostname;
            resourceInputs["groupId"] = state?.groupId;
            resourceInputs["ipBehavior"] = state?.ipBehavior;
            resourceInputs["productId"] = state?.productId;
            resourceInputs["statusUpdateEmails"] = state?.statusUpdateEmails;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["ttl"] = state?.ttl;
            resourceInputs["useCases"] = state?.useCases;
        } else {
            const args = argsOrState as EdgeHostNameArgs | undefined;
            if (args?.contractId === undefined && !opts.urn) {
                throw new Error("Missing required property 'contractId'");
            }
            if (args?.edgeHostname === undefined && !opts.urn) {
                throw new Error("Missing required property 'edgeHostname'");
            }
            if (args?.groupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if (args?.ipBehavior === undefined && !opts.urn) {
                throw new Error("Missing required property 'ipBehavior'");
            }
            resourceInputs["certificate"] = args?.certificate;
            resourceInputs["contractId"] = args?.contractId;
            resourceInputs["edgeHostname"] = args?.edgeHostname;
            resourceInputs["groupId"] = args?.groupId;
            resourceInputs["ipBehavior"] = args?.ipBehavior;
            resourceInputs["productId"] = args?.productId;
            resourceInputs["statusUpdateEmails"] = args?.statusUpdateEmails;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["ttl"] = args?.ttl;
            resourceInputs["useCases"] = args?.useCases;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "akamai:properties/edgeHostName:EdgeHostName" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(EdgeHostName.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EdgeHostName resources.
 */
export interface EdgeHostNameState {
    certificate?: pulumi.Input<number>;
    contractId?: pulumi.Input<string>;
    edgeHostname?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    ipBehavior?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    /**
     * Email address that should receive updates on the IP behavior update request.
     */
    statusUpdateEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enables to set timeout for processing
     */
    timeouts?: pulumi.Input<inputs.EdgeHostNameTimeouts>;
    /**
     * The time to live, or number of seconds to keep an edge hostname assigned to a map or target. If not provided default value for product is used.
     */
    ttl?: pulumi.Input<number>;
    /**
     * A JSON encoded list of use cases
     */
    useCases?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EdgeHostName resource.
 */
export interface EdgeHostNameArgs {
    certificate?: pulumi.Input<number>;
    contractId: pulumi.Input<string>;
    edgeHostname: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    ipBehavior: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    /**
     * Email address that should receive updates on the IP behavior update request.
     */
    statusUpdateEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enables to set timeout for processing
     */
    timeouts?: pulumi.Input<inputs.EdgeHostNameTimeouts>;
    /**
     * The time to live, or number of seconds to keep an edge hostname assigned to a map or target. If not provided default value for product is used.
     */
    ttl?: pulumi.Input<number>;
    /**
     * A JSON encoded list of use cases
     */
    useCases?: pulumi.Input<string>;
}
