// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Scopes**: Security policy
 *
 * Modifies the penalty box settings for a security policy. When using automated attack groups, and when the penalty box is enabled, clients that trigger an attack group  are placed in the “penalty box.” That means that, for the next 10 minutes, all requests from that client are ignored.
 *
 * **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/match-targets/sequence](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putpenaltybox)
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const penaltyBox = new akamai.AppSecPenaltyBox("penaltyBox", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     securityPolicyId: "gms1_134637",
 *     penaltyBoxProtection: true,
 *     penaltyBoxAction: "deny",
 * });
 * ```
 */
export class AppSecPenaltyBox extends pulumi.CustomResource {
    /**
     * Get an existing AppSecPenaltyBox resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecPenaltyBoxState, opts?: pulumi.CustomResourceOptions): AppSecPenaltyBox {
        return new AppSecPenaltyBox(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecPenaltyBox:AppSecPenaltyBox';

    /**
     * Returns true if the given object is an instance of AppSecPenaltyBox.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecPenaltyBox {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecPenaltyBox.__pulumiType;
    }

    /**
     * . Unique identifier of the security configuration associated with the penalty box settings being modified.
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * . Action taken any time penalty box protection is triggered. Allowed values are:
     * - **alert**. Record the event,
     * - **deny**. Block the request.
     * - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action.
     */
    public readonly penaltyBoxAction!: pulumi.Output<string>;
    /**
     * . Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.
     */
    public readonly penaltyBoxProtection!: pulumi.Output<boolean>;
    /**
     * . Unique identifier of the security policy associated with the penalty box settings being modified.
     */
    public readonly securityPolicyId!: pulumi.Output<string>;

    /**
     * Create a AppSecPenaltyBox resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecPenaltyBoxArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecPenaltyBoxArgs | AppSecPenaltyBoxState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecPenaltyBoxState | undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["penaltyBoxAction"] = state ? state.penaltyBoxAction : undefined;
            resourceInputs["penaltyBoxProtection"] = state ? state.penaltyBoxProtection : undefined;
            resourceInputs["securityPolicyId"] = state ? state.securityPolicyId : undefined;
        } else {
            const args = argsOrState as AppSecPenaltyBoxArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.penaltyBoxAction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'penaltyBoxAction'");
            }
            if ((!args || args.penaltyBoxProtection === undefined) && !opts.urn) {
                throw new Error("Missing required property 'penaltyBoxProtection'");
            }
            if ((!args || args.securityPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicyId'");
            }
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["penaltyBoxAction"] = args ? args.penaltyBoxAction : undefined;
            resourceInputs["penaltyBoxProtection"] = args ? args.penaltyBoxProtection : undefined;
            resourceInputs["securityPolicyId"] = args ? args.securityPolicyId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppSecPenaltyBox.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecPenaltyBox resources.
 */
export interface AppSecPenaltyBoxState {
    /**
     * . Unique identifier of the security configuration associated with the penalty box settings being modified.
     */
    configId?: pulumi.Input<number>;
    /**
     * . Action taken any time penalty box protection is triggered. Allowed values are:
     * - **alert**. Record the event,
     * - **deny**. Block the request.
     * - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action.
     */
    penaltyBoxAction?: pulumi.Input<string>;
    /**
     * . Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.
     */
    penaltyBoxProtection?: pulumi.Input<boolean>;
    /**
     * . Unique identifier of the security policy associated with the penalty box settings being modified.
     */
    securityPolicyId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppSecPenaltyBox resource.
 */
export interface AppSecPenaltyBoxArgs {
    /**
     * . Unique identifier of the security configuration associated with the penalty box settings being modified.
     */
    configId: pulumi.Input<number>;
    /**
     * . Action taken any time penalty box protection is triggered. Allowed values are:
     * - **alert**. Record the event,
     * - **deny**. Block the request.
     * - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action.
     */
    penaltyBoxAction: pulumi.Input<string>;
    /**
     * . Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.
     */
    penaltyBoxProtection: pulumi.Input<boolean>;
    /**
     * . Unique identifier of the security policy associated with the penalty box settings being modified.
     */
    securityPolicyId: pulumi.Input<string>;
}
