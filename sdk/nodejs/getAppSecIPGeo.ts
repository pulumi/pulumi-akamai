// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppSecIPGeo(args: GetAppSecIPGeoArgs, opts?: pulumi.InvokeOptions): Promise<GetAppSecIPGeoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getAppSecIPGeo:getAppSecIPGeo", {
        "configId": args.configId,
        "securityPolicyId": args.securityPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppSecIPGeo.
 */
export interface GetAppSecIPGeoArgs {
    configId: number;
    securityPolicyId: string;
}

/**
 * A collection of values returned by getAppSecIPGeo.
 */
export interface GetAppSecIPGeoResult {
    readonly asnNetworkLists: string[];
    readonly configId: number;
    readonly exceptionIpNetworkLists: string[];
    readonly geoNetworkLists: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipNetworkLists: string[];
    readonly mode: string;
    readonly outputText: string;
    readonly securityPolicyId: string;
    readonly ukraineGeoControlAction: string;
}
export function getAppSecIPGeoOutput(args: GetAppSecIPGeoOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAppSecIPGeoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("akamai:index/getAppSecIPGeo:getAppSecIPGeo", {
        "configId": args.configId,
        "securityPolicyId": args.securityPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppSecIPGeo.
 */
export interface GetAppSecIPGeoOutputArgs {
    configId: pulumi.Input<number>;
    securityPolicyId: pulumi.Input<string>;
}
