// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `akamai.EdgeKv` resource lets you control EdgeKV database functions outside EdgeWorkers JavaScript code. Refer to the [EdgeKV documentation](https://techdocs.akamai.com/edgekv/docs/welcome-to-edgekv) for more information.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const testStaging = new akamai.EdgeKv("testStaging", {
 *     geoLocation: "US",
 *     groupId: 4284,
 *     initialDatas: [{
 *         group: "translations",
 *         key: "lang",
 *         value: "English",
 *     }],
 *     namespaceName: "Marketing",
 *     network: "staging",
 *     retentionInSeconds: 15724800,
 * });
 * ```
 * ## Attributes reference
 *
 * There are no supported arguments for this resource.
 */
export class EdgeKv extends pulumi.CustomResource {
    /**
     * Get an existing EdgeKv resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeKvState, opts?: pulumi.CustomResourceOptions): EdgeKv {
        return new EdgeKv(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/edgeKv:EdgeKv';

    /**
     * Returns true if the given object is an instance of EdgeKv.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeKv {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeKv.__pulumiType;
    }

    /**
     * Storage location for data when creating a namespace on the production network. This can help optimize performance by storing data where most or all of your users are located. The value defaults to `US` on the `STAGING` and `PRODUCTION` networks. For a list of supported geoLocations on the `PRODUCTION` network refer to the [EdgeKV documentation](https://techdocs.akamai.com/edgekv/docs/edgekv-data-model#namespace).
     */
    public readonly geoLocation!: pulumi.Output<string | undefined>;
    /**
     * (Required) The `group ID` for the EdgeKV namespace. This numeric value will be required in the next EdgeKV API version.
     */
    public readonly groupId!: pulumi.Output<number>;
    /**
     * List of key-value pairs called items to initialize the namespace. These items are valid only for database creation, updates are ignored.
     */
    public readonly initialDatas!: pulumi.Output<outputs.EdgeKvInitialData[] | undefined>;
    /**
     * (Required) The name of the namespace.
     */
    public readonly namespaceName!: pulumi.Output<string>;
    /**
     * The network you want to activate the EdgeKV database on. For the Staging network, specify either `STAGING`, `STAG`, or `S`. For the Production network, specify either `PRODUCTION`, `PROD`, or `P`. All values are case insensitive.
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * (Required) Retention period for data in this namespace, or 0 for indefinite. An update of this value will just affect new EdgeKV items.
     */
    public readonly retentionInSeconds!: pulumi.Output<number>;

    /**
     * Create a EdgeKv resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeKvArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeKvArgs | EdgeKvState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgeKvState | undefined;
            resourceInputs["geoLocation"] = state ? state.geoLocation : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["initialDatas"] = state ? state.initialDatas : undefined;
            resourceInputs["namespaceName"] = state ? state.namespaceName : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["retentionInSeconds"] = state ? state.retentionInSeconds : undefined;
        } else {
            const args = argsOrState as EdgeKvArgs | undefined;
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.namespaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespaceName'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if ((!args || args.retentionInSeconds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retentionInSeconds'");
            }
            resourceInputs["geoLocation"] = args ? args.geoLocation : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["initialDatas"] = args ? args.initialDatas : undefined;
            resourceInputs["namespaceName"] = args ? args.namespaceName : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["retentionInSeconds"] = args ? args.retentionInSeconds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgeKv.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EdgeKv resources.
 */
export interface EdgeKvState {
    /**
     * Storage location for data when creating a namespace on the production network. This can help optimize performance by storing data where most or all of your users are located. The value defaults to `US` on the `STAGING` and `PRODUCTION` networks. For a list of supported geoLocations on the `PRODUCTION` network refer to the [EdgeKV documentation](https://techdocs.akamai.com/edgekv/docs/edgekv-data-model#namespace).
     */
    geoLocation?: pulumi.Input<string>;
    /**
     * (Required) The `group ID` for the EdgeKV namespace. This numeric value will be required in the next EdgeKV API version.
     */
    groupId?: pulumi.Input<number>;
    /**
     * List of key-value pairs called items to initialize the namespace. These items are valid only for database creation, updates are ignored.
     */
    initialDatas?: pulumi.Input<pulumi.Input<inputs.EdgeKvInitialData>[]>;
    /**
     * (Required) The name of the namespace.
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * The network you want to activate the EdgeKV database on. For the Staging network, specify either `STAGING`, `STAG`, or `S`. For the Production network, specify either `PRODUCTION`, `PROD`, or `P`. All values are case insensitive.
     */
    network?: pulumi.Input<string>;
    /**
     * (Required) Retention period for data in this namespace, or 0 for indefinite. An update of this value will just affect new EdgeKV items.
     */
    retentionInSeconds?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a EdgeKv resource.
 */
export interface EdgeKvArgs {
    /**
     * Storage location for data when creating a namespace on the production network. This can help optimize performance by storing data where most or all of your users are located. The value defaults to `US` on the `STAGING` and `PRODUCTION` networks. For a list of supported geoLocations on the `PRODUCTION` network refer to the [EdgeKV documentation](https://techdocs.akamai.com/edgekv/docs/edgekv-data-model#namespace).
     */
    geoLocation?: pulumi.Input<string>;
    /**
     * (Required) The `group ID` for the EdgeKV namespace. This numeric value will be required in the next EdgeKV API version.
     */
    groupId: pulumi.Input<number>;
    /**
     * List of key-value pairs called items to initialize the namespace. These items are valid only for database creation, updates are ignored.
     */
    initialDatas?: pulumi.Input<pulumi.Input<inputs.EdgeKvInitialData>[]>;
    /**
     * (Required) The name of the namespace.
     */
    namespaceName: pulumi.Input<string>;
    /**
     * The network you want to activate the EdgeKV database on. For the Staging network, specify either `STAGING`, `STAG`, or `S`. For the Production network, specify either `PRODUCTION`, `PROD`, or `P`. All values are case insensitive.
     */
    network: pulumi.Input<string>;
    /**
     * (Required) Retention period for data in this namespace, or 0 for indefinite. An update of this value will just affect new EdgeKV items.
     */
    retentionInSeconds: pulumi.Input<number>;
}
