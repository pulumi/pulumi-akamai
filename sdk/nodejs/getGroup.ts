// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the `akamai.getGroup` data source to get a group by name.
 *
 * Each account features a hierarchy of groups, which control access to your
 * Akamai configurations and help consolidate reporting functions, typically
 * mapping to an organizational hierarchy. Using either Control Center or the
 * [Identity Management: User Administration API](https://techdocs.akamai.com/iam-api/reference/api),
 * account administrators can assign properties to specific groups, each with
 * its own set of users and accompanying roles.
 *
 * ## Attributes reference
 *
 * This data source returns this attribute:
 *
 * * `id` - The group's unique ID, including the `grp_` prefix.
 */
export function getGroup(args?: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getGroup:getGroup", {
        "contract": args.contract,
        "contractId": args.contractId,
        "groupName": args.groupName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupArgs {
    /**
     * Replaced by `contractId`. Maintained for legacy purposes.
     *
     * @deprecated The setting "contract" has been deprecated.
     */
    contract?: string;
    /**
     * (Required) A contract's unique ID, including the `ctr_` prefix.
     */
    contractId?: string;
    /**
     * The group name.
     */
    groupName?: string;
    /**
     * Replaced by `groupName`. Maintained for legacy purposes.
     *
     * @deprecated The setting "name" has been deprecated.
     */
    name?: string;
}

/**
 * A collection of values returned by getGroup.
 */
export interface GetGroupResult {
    /**
     * @deprecated The setting "contract" has been deprecated.
     */
    readonly contract: string;
    readonly contractId: string;
    readonly groupName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * @deprecated The setting "name" has been deprecated.
     */
    readonly name: string;
}
/**
 * Use the `akamai.getGroup` data source to get a group by name.
 *
 * Each account features a hierarchy of groups, which control access to your
 * Akamai configurations and help consolidate reporting functions, typically
 * mapping to an organizational hierarchy. Using either Control Center or the
 * [Identity Management: User Administration API](https://techdocs.akamai.com/iam-api/reference/api),
 * account administrators can assign properties to specific groups, each with
 * its own set of users and accompanying roles.
 *
 * ## Attributes reference
 *
 * This data source returns this attribute:
 *
 * * `id` - The group's unique ID, including the `grp_` prefix.
 */
export function getGroupOutput(args?: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult> {
    return pulumi.output(args).apply((a: any) => getGroup(a, opts))
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupOutputArgs {
    /**
     * Replaced by `contractId`. Maintained for legacy purposes.
     *
     * @deprecated The setting "contract" has been deprecated.
     */
    contract?: pulumi.Input<string>;
    /**
     * (Required) A contract's unique ID, including the `ctr_` prefix.
     */
    contractId?: pulumi.Input<string>;
    /**
     * The group name.
     */
    groupName?: pulumi.Input<string>;
    /**
     * Replaced by `groupName`. Maintained for legacy purposes.
     *
     * @deprecated The setting "name" has been deprecated.
     */
    name?: pulumi.Input<string>;
}
