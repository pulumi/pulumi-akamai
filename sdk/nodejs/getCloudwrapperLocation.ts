// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudwrapperLocation(args: GetCloudwrapperLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudwrapperLocationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getCloudwrapperLocation:getCloudwrapperLocation", {
        "locationName": args.locationName,
        "trafficType": args.trafficType,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudwrapperLocation.
 */
export interface GetCloudwrapperLocationArgs {
    locationName: string;
    trafficType: string;
}

/**
 * A collection of values returned by getCloudwrapperLocation.
 */
export interface GetCloudwrapperLocationResult {
    /**
     * @deprecated Required by the terraform plugin testing framework, always set to `akamai_cloudwrapper_location`
     */
    readonly id: string;
    readonly locationId: string;
    readonly locationName: string;
    readonly trafficType: string;
    readonly trafficTypeId: number;
}
export function getCloudwrapperLocationOutput(args: GetCloudwrapperLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudwrapperLocationResult> {
    return pulumi.output(args).apply((a: any) => getCloudwrapperLocation(a, opts))
}

/**
 * A collection of arguments for invoking getCloudwrapperLocation.
 */
export interface GetCloudwrapperLocationOutputArgs {
    locationName: pulumi.Input<string>;
    trafficType: pulumi.Input<string>;
}
