// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Every policy version specifies the match rules that govern how the Cloudlet is used. Matches specify conditions that need to be met in the incoming request.
 *
 * Use the `akamai.getCloudletsApplicationLoadBalancerMatchRule` data source to build a match rule JSON object for the Application Load Balancer Cloudlet.
 *
 * ## Basic usage
 *
 * This example returns the JSON-encoded rules for the Application Load Balancer Cloudlet:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const example = pulumi.output(akamai.getCloudletsApplicationLoadBalancerMatchRule({
 *     matchRules: [{
 *         end: 1645037845,
 *         forwardSettings: [{
 *             originId: "alb_test_1",
 *         }],
 *         matchUrl: "example.com",
 *         matches: [{
 *             caseSensitive: false,
 *             matchOperator: "equals",
 *             matchType: "method",
 *             negate: false,
 *             objectMatchValues: [{
 *                 type: "simple",
 *                 values: ["GET"],
 *             }],
 *         }],
 *         name: "rule",
 *         start: 1644865045,
 *     }],
 * }));
 * ```
 *
 * ## Attributes reference
 *
 * This data source returns these attributes:
 *
 * * `type` - The type of Cloudlet the rule is for.
 * * `json` - A `matchRules` JSON structure generated from the API schema that defines the rules for this policy.
 */
export function getCloudletsApplicationLoadBalancerMatchRule(args?: GetCloudletsApplicationLoadBalancerMatchRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudletsApplicationLoadBalancerMatchRuleResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("akamai:index/getCloudletsApplicationLoadBalancerMatchRule:getCloudletsApplicationLoadBalancerMatchRule", {
        "matchRules": args.matchRules,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudletsApplicationLoadBalancerMatchRule.
 */
export interface GetCloudletsApplicationLoadBalancerMatchRuleArgs {
    /**
     * - (Optional) A list of Cloudlet-specific match rules for a policy.
     */
    matchRules?: inputs.GetCloudletsApplicationLoadBalancerMatchRuleMatchRule[];
}

/**
 * A collection of values returned by getCloudletsApplicationLoadBalancerMatchRule.
 */
export interface GetCloudletsApplicationLoadBalancerMatchRuleResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly json: string;
    readonly matchRules?: outputs.GetCloudletsApplicationLoadBalancerMatchRuleMatchRule[];
}

export function getCloudletsApplicationLoadBalancerMatchRuleOutput(args?: GetCloudletsApplicationLoadBalancerMatchRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudletsApplicationLoadBalancerMatchRuleResult> {
    return pulumi.output(args).apply(a => getCloudletsApplicationLoadBalancerMatchRule(a, opts))
}

/**
 * A collection of arguments for invoking getCloudletsApplicationLoadBalancerMatchRule.
 */
export interface GetCloudletsApplicationLoadBalancerMatchRuleOutputArgs {
    /**
     * - (Optional) A list of Cloudlet-specific match rules for a policy.
     */
    matchRules?: pulumi.Input<pulumi.Input<inputs.GetCloudletsApplicationLoadBalancerMatchRuleMatchRuleArgs>[]>;
}
