// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Scopes**: Security policy
 *
 * Modifies slow POST protection settings for a security configuration and security policy. Slow POST protections help defend a site against attacks that try to tie up the site by using extremely slow requests and responses.
 *
 * **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/slow-post](https://techdocs.akamai.com/application-security/reference/put-policy-slow-post)
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const slowPost = new akamai.AppSecSlowPost("slowPost", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     securityPolicyId: "gms1_134637",
 *     slowRateAction: "alert",
 *     slowRateThresholdRate: 10,
 *     slowRateThresholdPeriod: 30,
 *     durationThresholdTimeout: 20,
 * });
 * ```
 */
export class AppSecSlowPost extends pulumi.CustomResource {
    /**
     * Get an existing AppSecSlowPost resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecSlowPostState, opts?: pulumi.CustomResourceOptions): AppSecSlowPost {
        return new AppSecSlowPost(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecSlowPost:AppSecSlowPost';

    /**
     * Returns true if the given object is an instance of AppSecSlowPost.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecSlowPost {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecSlowPost.__pulumiType;
    }

    /**
     * . Unique identifier of the security configuration associated with the slow POST settings being modified.
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * . Maximum amount of time (in seconds) that the first eight kilobytes of the POST body must be received in to avoid triggering the specified action.
     */
    public readonly durationThresholdTimeout!: pulumi.Output<number | undefined>;
    /**
     * . Unique identifier of the security policy associated with the slow POST settings being modified.
     */
    public readonly securityPolicyId!: pulumi.Output<string>;
    /**
     * . Action to be taken if slow POST protection is triggered. Allowed values are:
     * - **alert**. Record the event.
     * - **abort**. Block the request.
     */
    public readonly slowRateAction!: pulumi.Output<string>;
    /**
     * . Amount of time (in seconds) that the server should allow a request before marking the request as being too slow.
     */
    public readonly slowRateThresholdPeriod!: pulumi.Output<number | undefined>;
    /**
     * . Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered.
     */
    public readonly slowRateThresholdRate!: pulumi.Output<number | undefined>;

    /**
     * Create a AppSecSlowPost resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecSlowPostArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecSlowPostArgs | AppSecSlowPostState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecSlowPostState | undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["durationThresholdTimeout"] = state ? state.durationThresholdTimeout : undefined;
            resourceInputs["securityPolicyId"] = state ? state.securityPolicyId : undefined;
            resourceInputs["slowRateAction"] = state ? state.slowRateAction : undefined;
            resourceInputs["slowRateThresholdPeriod"] = state ? state.slowRateThresholdPeriod : undefined;
            resourceInputs["slowRateThresholdRate"] = state ? state.slowRateThresholdRate : undefined;
        } else {
            const args = argsOrState as AppSecSlowPostArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.securityPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicyId'");
            }
            if ((!args || args.slowRateAction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slowRateAction'");
            }
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["durationThresholdTimeout"] = args ? args.durationThresholdTimeout : undefined;
            resourceInputs["securityPolicyId"] = args ? args.securityPolicyId : undefined;
            resourceInputs["slowRateAction"] = args ? args.slowRateAction : undefined;
            resourceInputs["slowRateThresholdPeriod"] = args ? args.slowRateThresholdPeriod : undefined;
            resourceInputs["slowRateThresholdRate"] = args ? args.slowRateThresholdRate : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppSecSlowPost.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecSlowPost resources.
 */
export interface AppSecSlowPostState {
    /**
     * . Unique identifier of the security configuration associated with the slow POST settings being modified.
     */
    configId?: pulumi.Input<number>;
    /**
     * . Maximum amount of time (in seconds) that the first eight kilobytes of the POST body must be received in to avoid triggering the specified action.
     */
    durationThresholdTimeout?: pulumi.Input<number>;
    /**
     * . Unique identifier of the security policy associated with the slow POST settings being modified.
     */
    securityPolicyId?: pulumi.Input<string>;
    /**
     * . Action to be taken if slow POST protection is triggered. Allowed values are:
     * - **alert**. Record the event.
     * - **abort**. Block the request.
     */
    slowRateAction?: pulumi.Input<string>;
    /**
     * . Amount of time (in seconds) that the server should allow a request before marking the request as being too slow.
     */
    slowRateThresholdPeriod?: pulumi.Input<number>;
    /**
     * . Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered.
     */
    slowRateThresholdRate?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AppSecSlowPost resource.
 */
export interface AppSecSlowPostArgs {
    /**
     * . Unique identifier of the security configuration associated with the slow POST settings being modified.
     */
    configId: pulumi.Input<number>;
    /**
     * . Maximum amount of time (in seconds) that the first eight kilobytes of the POST body must be received in to avoid triggering the specified action.
     */
    durationThresholdTimeout?: pulumi.Input<number>;
    /**
     * . Unique identifier of the security policy associated with the slow POST settings being modified.
     */
    securityPolicyId: pulumi.Input<string>;
    /**
     * . Action to be taken if slow POST protection is triggered. Allowed values are:
     * - **alert**. Record the event.
     * - **abort**. Block the request.
     */
    slowRateAction: pulumi.Input<string>;
    /**
     * . Amount of time (in seconds) that the server should allow a request before marking the request as being too slow.
     */
    slowRateThresholdPeriod?: pulumi.Input<number>;
    /**
     * . Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered.
     */
    slowRateThresholdRate?: pulumi.Input<number>;
}
