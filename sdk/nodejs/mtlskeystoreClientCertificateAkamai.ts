// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MtlskeystoreClientCertificateAkamai extends pulumi.CustomResource {
    /**
     * Get an existing MtlskeystoreClientCertificateAkamai resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MtlskeystoreClientCertificateAkamaiState, opts?: pulumi.CustomResourceOptions): MtlskeystoreClientCertificateAkamai {
        return new MtlskeystoreClientCertificateAkamai(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/mtlskeystoreClientCertificateAkamai:MtlskeystoreClientCertificateAkamai';

    /**
     * Returns true if the given object is an instance of MtlskeystoreClientCertificateAkamai.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MtlskeystoreClientCertificateAkamai {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MtlskeystoreClientCertificateAkamai.__pulumiType;
    }

    /**
     * The unique identifier of the client certificate.
     */
    declare public /*out*/ readonly certificateId: pulumi.Output<number>;
    /**
     * The name of the client certificate. Must be between 1 and 64 characters.
     */
    declare public readonly certificateName: pulumi.Output<string>;
    /**
     * The contract assigned to the client certificate. Must have a length of at least 1.
     */
    declare public readonly contractId: pulumi.Output<string>;
    /**
     * The user who created the client certificate. Read-only.
     */
    declare public /*out*/ readonly createdBy: pulumi.Output<string>;
    /**
     * An ISO 8601 timestamp indicating the client certificate's creation. Read-only.
     */
    declare public /*out*/ readonly createdDate: pulumi.Output<string>;
    /**
     * Unique identifier for the `current` client certificate version.
     */
    declare public /*out*/ readonly currentGuid: pulumi.Output<string>;
    /**
     * Specifies the type of network to deploy the client certificate. Possible values: `CORE`, `RUSSIA_AND_CORE`, or `CHINA_AND_CORE`.
     */
    declare public readonly geography: pulumi.Output<string>;
    /**
     * The group assigned to the client certificate. Must be greater than or equal to 0.
     */
    declare public readonly groupId: pulumi.Output<number>;
    /**
     * The cryptographic algorithm used for key generation. Possible values: `RSA` or `ECDSA`.
     */
    declare public readonly keyAlgorithm: pulumi.Output<string>;
    /**
     * The email addresses to notify for client certificate-related issues. Must have at least one email address.
     */
    declare public readonly notificationEmails: pulumi.Output<string[]>;
    /**
     * Unique identifier for the `previous` client certificate version.
     */
    declare public /*out*/ readonly previousGuid: pulumi.Output<string>;
    /**
     * Identifies the network deployment type. Possible values: `STANDARD_TLS` or `ENHANCED_TLS`.
     */
    declare public readonly secureNetwork: pulumi.Output<string>;
    /**
     * The CA certificateâ€™s key value details. The `CN` attribute is required and included in the subject. When not specified, the subject is constructed in this format: `/C=US/O=Akamai Technologies, Inc./OU={vcd_id} {contract_id} {group_id}/CN={certificate_name}/`.
     */
    declare public readonly subject: pulumi.Output<string>;
    /**
     * A list of client certificate versions. Each version represents a specific iteration of the client certificate.
     */
    declare public /*out*/ readonly versions: pulumi.Output<outputs.MtlskeystoreClientCertificateAkamaiVersion[]>;

    /**
     * Create a MtlskeystoreClientCertificateAkamai resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MtlskeystoreClientCertificateAkamaiArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MtlskeystoreClientCertificateAkamaiArgs | MtlskeystoreClientCertificateAkamaiState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MtlskeystoreClientCertificateAkamaiState | undefined;
            resourceInputs["certificateId"] = state?.certificateId;
            resourceInputs["certificateName"] = state?.certificateName;
            resourceInputs["contractId"] = state?.contractId;
            resourceInputs["createdBy"] = state?.createdBy;
            resourceInputs["createdDate"] = state?.createdDate;
            resourceInputs["currentGuid"] = state?.currentGuid;
            resourceInputs["geography"] = state?.geography;
            resourceInputs["groupId"] = state?.groupId;
            resourceInputs["keyAlgorithm"] = state?.keyAlgorithm;
            resourceInputs["notificationEmails"] = state?.notificationEmails;
            resourceInputs["previousGuid"] = state?.previousGuid;
            resourceInputs["secureNetwork"] = state?.secureNetwork;
            resourceInputs["subject"] = state?.subject;
            resourceInputs["versions"] = state?.versions;
        } else {
            const args = argsOrState as MtlskeystoreClientCertificateAkamaiArgs | undefined;
            if (args?.certificateName === undefined && !opts.urn) {
                throw new Error("Missing required property 'certificateName'");
            }
            if (args?.contractId === undefined && !opts.urn) {
                throw new Error("Missing required property 'contractId'");
            }
            if (args?.geography === undefined && !opts.urn) {
                throw new Error("Missing required property 'geography'");
            }
            if (args?.groupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if (args?.notificationEmails === undefined && !opts.urn) {
                throw new Error("Missing required property 'notificationEmails'");
            }
            if (args?.secureNetwork === undefined && !opts.urn) {
                throw new Error("Missing required property 'secureNetwork'");
            }
            resourceInputs["certificateName"] = args?.certificateName;
            resourceInputs["contractId"] = args?.contractId;
            resourceInputs["geography"] = args?.geography;
            resourceInputs["groupId"] = args?.groupId;
            resourceInputs["keyAlgorithm"] = args?.keyAlgorithm;
            resourceInputs["notificationEmails"] = args?.notificationEmails;
            resourceInputs["secureNetwork"] = args?.secureNetwork;
            resourceInputs["subject"] = args?.subject;
            resourceInputs["certificateId"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["currentGuid"] = undefined /*out*/;
            resourceInputs["previousGuid"] = undefined /*out*/;
            resourceInputs["versions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MtlskeystoreClientCertificateAkamai.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MtlskeystoreClientCertificateAkamai resources.
 */
export interface MtlskeystoreClientCertificateAkamaiState {
    /**
     * The unique identifier of the client certificate.
     */
    certificateId?: pulumi.Input<number>;
    /**
     * The name of the client certificate. Must be between 1 and 64 characters.
     */
    certificateName?: pulumi.Input<string>;
    /**
     * The contract assigned to the client certificate. Must have a length of at least 1.
     */
    contractId?: pulumi.Input<string>;
    /**
     * The user who created the client certificate. Read-only.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * An ISO 8601 timestamp indicating the client certificate's creation. Read-only.
     */
    createdDate?: pulumi.Input<string>;
    /**
     * Unique identifier for the `current` client certificate version.
     */
    currentGuid?: pulumi.Input<string>;
    /**
     * Specifies the type of network to deploy the client certificate. Possible values: `CORE`, `RUSSIA_AND_CORE`, or `CHINA_AND_CORE`.
     */
    geography?: pulumi.Input<string>;
    /**
     * The group assigned to the client certificate. Must be greater than or equal to 0.
     */
    groupId?: pulumi.Input<number>;
    /**
     * The cryptographic algorithm used for key generation. Possible values: `RSA` or `ECDSA`.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The email addresses to notify for client certificate-related issues. Must have at least one email address.
     */
    notificationEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique identifier for the `previous` client certificate version.
     */
    previousGuid?: pulumi.Input<string>;
    /**
     * Identifies the network deployment type. Possible values: `STANDARD_TLS` or `ENHANCED_TLS`.
     */
    secureNetwork?: pulumi.Input<string>;
    /**
     * The CA certificateâ€™s key value details. The `CN` attribute is required and included in the subject. When not specified, the subject is constructed in this format: `/C=US/O=Akamai Technologies, Inc./OU={vcd_id} {contract_id} {group_id}/CN={certificate_name}/`.
     */
    subject?: pulumi.Input<string>;
    /**
     * A list of client certificate versions. Each version represents a specific iteration of the client certificate.
     */
    versions?: pulumi.Input<pulumi.Input<inputs.MtlskeystoreClientCertificateAkamaiVersion>[]>;
}

/**
 * The set of arguments for constructing a MtlskeystoreClientCertificateAkamai resource.
 */
export interface MtlskeystoreClientCertificateAkamaiArgs {
    /**
     * The name of the client certificate. Must be between 1 and 64 characters.
     */
    certificateName: pulumi.Input<string>;
    /**
     * The contract assigned to the client certificate. Must have a length of at least 1.
     */
    contractId: pulumi.Input<string>;
    /**
     * Specifies the type of network to deploy the client certificate. Possible values: `CORE`, `RUSSIA_AND_CORE`, or `CHINA_AND_CORE`.
     */
    geography: pulumi.Input<string>;
    /**
     * The group assigned to the client certificate. Must be greater than or equal to 0.
     */
    groupId: pulumi.Input<number>;
    /**
     * The cryptographic algorithm used for key generation. Possible values: `RSA` or `ECDSA`.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The email addresses to notify for client certificate-related issues. Must have at least one email address.
     */
    notificationEmails: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifies the network deployment type. Possible values: `STANDARD_TLS` or `ENHANCED_TLS`.
     */
    secureNetwork: pulumi.Input<string>;
    /**
     * The CA certificateâ€™s key value details. The `CN` attribute is required and included in the subject. When not specified, the subject is constructed in this format: `/C=US/O=Akamai Technologies, Inc./OU={vcd_id} {contract_id} {group_id}/CN={certificate_name}/`.
     */
    subject?: pulumi.Input<string>;
}
