// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Scopes**: Security policy
 *
 * Returns the slow POST protection settings for the specified security configuration and policy. Slow POST protections help defend a site against attacks that try to tie up the site by using extremely slow requests and responses: the idea is to keep the site occupied waiting for these requests and responses to finish instead of being occupied with new (and legitimate) transactions.
 *
 * **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/slow-post](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getslowpostprotectionsettings)
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const slowPost = configuration.then(configuration => akamai.getAppSecSlowPost({
 *     configId: configuration.configId,
 *     securityPolicyId: "gms1_134637",
 * }));
 * export const slowPostOutputText = slowPost.then(slowPost => slowPost.outputText);
 * ```
 * ## Output Options
 *
 * The following options can be used to determine the information returned, and how that returned information is formatted:
 *
 * - `outputText`. Tabular report including the following:
 *   - **ACTION**. Action taken any time slow POST protection is triggered. Valid values are:
 *     - **alert**. Record the event.
 *     - **abort**. Block the request.
 *   - **SLOW_RATE_THRESHOLD RATE**. Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered.
 *   - **SLOW_RATE_THRESHOLD PERIOD**. Amount of time (in seconds) that the server should allow a request before marking the request as being too slow
 *   - **DURATION_THRESHOLD TIMEOUT**. Maximum amount of time (in seconds) that the first eight kilobytes of the POST body must be received in order to avoid triggering the specified action.
 */
export function getAppSecSlowPost(args: GetAppSecSlowPostArgs, opts?: pulumi.InvokeOptions): Promise<GetAppSecSlowPostResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("akamai:index/getAppSecSlowPost:getAppSecSlowPost", {
        "configId": args.configId,
        "securityPolicyId": args.securityPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppSecSlowPost.
 */
export interface GetAppSecSlowPostArgs {
    /**
     * . Unique identifier of the security configuration associated with the slow POST settings.
     */
    configId: number;
    /**
     * . Unique identifier of the security policy associated with the slow POST settings.
     */
    securityPolicyId: string;
}

/**
 * A collection of values returned by getAppSecSlowPost.
 */
export interface GetAppSecSlowPostResult {
    readonly configId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly json: string;
    readonly outputText: string;
    readonly securityPolicyId: string;
}

export function getAppSecSlowPostOutput(args: GetAppSecSlowPostOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppSecSlowPostResult> {
    return pulumi.output(args).apply(a => getAppSecSlowPost(a, opts))
}

/**
 * A collection of arguments for invoking getAppSecSlowPost.
 */
export interface GetAppSecSlowPostOutputArgs {
    /**
     * . Unique identifier of the security configuration associated with the slow POST settings.
     */
    configId: pulumi.Input<number>;
    /**
     * . Unique identifier of the security policy associated with the slow POST settings.
     */
    securityPolicyId: pulumi.Input<string>;
}
