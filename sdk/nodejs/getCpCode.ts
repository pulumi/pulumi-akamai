// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCpCode(args: GetCpCodeArgs, opts?: pulumi.InvokeOptions): Promise<GetCpCodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getCpCode:getCpCode", {
        "contract": args.contract,
        "contractId": args.contractId,
        "group": args.group,
        "groupId": args.groupId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCpCode.
 */
export interface GetCpCodeArgs {
    /**
     * Replaced by `contractId`. Maintained for legacy purposes.
     *
     * @deprecated The setting "contract" has been deprecated.
     */
    contract?: string;
    /**
     * (Required) A contract's unique ID, including the `ctr_` prefix.
     */
    contractId?: string;
    /**
     * Replaced by `groupId`. Maintained for legacy purposes.
     *
     * @deprecated The setting "group" has been deprecated.
     */
    group?: string;
    /**
     * The group's unique ID, including the `grp_` prefix.
     */
    groupId?: string;
    /**
     * The name of the CP code.
     */
    name: string;
}

/**
 * A collection of values returned by getCpCode.
 */
export interface GetCpCodeResult {
    /**
     * @deprecated The setting "contract" has been deprecated.
     */
    readonly contract: string;
    readonly contractId: string;
    /**
     * @deprecated The setting "group" has been deprecated.
     */
    readonly group: string;
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly productIds: string[];
}
export function getCpCodeOutput(args: GetCpCodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCpCodeResult> {
    return pulumi.output(args).apply((a: any) => getCpCode(a, opts))
}

/**
 * A collection of arguments for invoking getCpCode.
 */
export interface GetCpCodeOutputArgs {
    /**
     * Replaced by `contractId`. Maintained for legacy purposes.
     *
     * @deprecated The setting "contract" has been deprecated.
     */
    contract?: pulumi.Input<string>;
    /**
     * (Required) A contract's unique ID, including the `ctr_` prefix.
     */
    contractId?: pulumi.Input<string>;
    /**
     * Replaced by `groupId`. Maintained for legacy purposes.
     *
     * @deprecated The setting "group" has been deprecated.
     */
    group?: pulumi.Input<string>;
    /**
     * The group's unique ID, including the `grp_` prefix.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the CP code.
     */
    name: pulumi.Input<string>;
}
