// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Scopes**: Rule
 *
 * Modifies a Kona Rule Set rule's action, conditions, and exceptions.
 *
 * **Related API Endpoints**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rules/{ruleId}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleaction) *and* [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rules/{ruleId}/condition-exception](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception)
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 * import * from "fs";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const rule = new akamai.AppSecRule("rule", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     securityPolicyId: "gms1_134637",
 *     ruleId: 60029316,
 *     ruleAction: "deny",
 *     conditionException: fs.readFileSync(`${path.module}/condition_exception.json`),
 * });
 * ```
 */
export class AppSecRule extends pulumi.CustomResource {
    /**
     * Get an existing AppSecRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecRuleState, opts?: pulumi.CustomResourceOptions): AppSecRule {
        return new AppSecRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecRule:AppSecRule';

    /**
     * Returns true if the given object is an instance of AppSecRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecRule.__pulumiType;
    }

    /**
     * . Path to a JSON file containing a description of the conditions and exceptions to be associated with a rule. You can view a sample JSON file in the [Modify the conditions and exceptions of a rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception) section of the Application Security API documentation.
     */
    public readonly conditionException!: pulumi.Output<string | undefined>;
    /**
     * . Unique identifier of the security configuration associated with the Kona Rule Set rule being modified.
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * . Action to be taken anytime the rule is triggered. Allowed values are:
     */
    public readonly ruleAction!: pulumi.Output<string | undefined>;
    /**
     * . Unique identifier of the rule being modified.
     */
    public readonly ruleId!: pulumi.Output<number>;
    /**
     * . Unique identifier of the security policy associated with the Kona Rule Set rule being modified.
     */
    public readonly securityPolicyId!: pulumi.Output<string>;

    /**
     * Create a AppSecRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecRuleArgs | AppSecRuleState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecRuleState | undefined;
            inputs["conditionException"] = state ? state.conditionException : undefined;
            inputs["configId"] = state ? state.configId : undefined;
            inputs["ruleAction"] = state ? state.ruleAction : undefined;
            inputs["ruleId"] = state ? state.ruleId : undefined;
            inputs["securityPolicyId"] = state ? state.securityPolicyId : undefined;
        } else {
            const args = argsOrState as AppSecRuleArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.ruleId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleId'");
            }
            if ((!args || args.securityPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicyId'");
            }
            inputs["conditionException"] = args ? args.conditionException : undefined;
            inputs["configId"] = args ? args.configId : undefined;
            inputs["ruleAction"] = args ? args.ruleAction : undefined;
            inputs["ruleId"] = args ? args.ruleId : undefined;
            inputs["securityPolicyId"] = args ? args.securityPolicyId : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AppSecRule.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecRule resources.
 */
export interface AppSecRuleState {
    /**
     * . Path to a JSON file containing a description of the conditions and exceptions to be associated with a rule. You can view a sample JSON file in the [Modify the conditions and exceptions of a rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception) section of the Application Security API documentation.
     */
    conditionException?: pulumi.Input<string>;
    /**
     * . Unique identifier of the security configuration associated with the Kona Rule Set rule being modified.
     */
    configId?: pulumi.Input<number>;
    /**
     * . Action to be taken anytime the rule is triggered. Allowed values are:
     */
    ruleAction?: pulumi.Input<string>;
    /**
     * . Unique identifier of the rule being modified.
     */
    ruleId?: pulumi.Input<number>;
    /**
     * . Unique identifier of the security policy associated with the Kona Rule Set rule being modified.
     */
    securityPolicyId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppSecRule resource.
 */
export interface AppSecRuleArgs {
    /**
     * . Path to a JSON file containing a description of the conditions and exceptions to be associated with a rule. You can view a sample JSON file in the [Modify the conditions and exceptions of a rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception) section of the Application Security API documentation.
     */
    conditionException?: pulumi.Input<string>;
    /**
     * . Unique identifier of the security configuration associated with the Kona Rule Set rule being modified.
     */
    configId: pulumi.Input<number>;
    /**
     * . Action to be taken anytime the rule is triggered. Allowed values are:
     */
    ruleAction?: pulumi.Input<string>;
    /**
     * . Unique identifier of the rule being modified.
     */
    ruleId: pulumi.Input<number>;
    /**
     * . Unique identifier of the security policy associated with the Kona Rule Set rule being modified.
     */
    securityPolicyId: pulumi.Input<string>;
}
