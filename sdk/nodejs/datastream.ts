// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Datastream extends pulumi.CustomResource {
    /**
     * Get an existing Datastream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatastreamState, opts?: pulumi.CustomResourceOptions): Datastream {
        return new Datastream(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/datastream:Datastream';

    /**
     * Returns true if the given object is an instance of Datastream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Datastream {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Datastream.__pulumiType;
    }

    /**
     * Defining if stream should be active or not
     */
    public readonly active!: pulumi.Output<boolean>;
    public readonly azureConnector!: pulumi.Output<outputs.DatastreamAzureConnector | undefined>;
    /**
     * Identifies if stream needs to collect midgress data
     */
    public readonly collectMidgress!: pulumi.Output<boolean | undefined>;
    /**
     * Identifies the contract that has access to the product
     */
    public readonly contractId!: pulumi.Output<string>;
    /**
     * The username who created the stream
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The date and time when the stream was created
     */
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    public readonly datadogConnector!: pulumi.Output<outputs.DatastreamDatadogConnector | undefined>;
    /**
     * A list of data set fields selected from the associated template that the stream monitors in logs. The order of the
     * identifiers define how the value for these fields appear in the log lines
     */
    public readonly datasetFields!: pulumi.Output<number[]>;
    /**
     * Provides information about the configuration related to logs (format, file names, delivery frequency)
     */
    public readonly deliveryConfiguration!: pulumi.Output<outputs.DatastreamDeliveryConfiguration>;
    public readonly elasticsearchConnector!: pulumi.Output<outputs.DatastreamElasticsearchConnector | undefined>;
    public readonly gcsConnector!: pulumi.Output<outputs.DatastreamGcsConnector | undefined>;
    /**
     * Identifies the group that has access to the product and for which the stream configuration was created
     */
    public readonly groupId!: pulumi.Output<string>;
    public readonly httpsConnector!: pulumi.Output<outputs.DatastreamHttpsConnector | undefined>;
    /**
     * Identifies the latest active configuration version of the stream
     */
    public /*out*/ readonly latestVersion!: pulumi.Output<number>;
    public readonly logglyConnector!: pulumi.Output<outputs.DatastreamLogglyConnector | undefined>;
    /**
     * The username who modified the stream
     */
    public /*out*/ readonly modifiedBy!: pulumi.Output<string>;
    /**
     * The date and time when the stream was modified
     */
    public /*out*/ readonly modifiedDate!: pulumi.Output<string>;
    public readonly newRelicConnector!: pulumi.Output<outputs.DatastreamNewRelicConnector | undefined>;
    /**
     * List of email addresses where the system sends notifications about activations and deactivations of the stream
     */
    public readonly notificationEmails!: pulumi.Output<string[] | undefined>;
    public readonly oracleConnector!: pulumi.Output<outputs.DatastreamOracleConnector | undefined>;
    /**
     * The configuration in JSON format that can be copy-pasted into PAPI configuration to enable datastream behavior
     */
    public /*out*/ readonly papiJson!: pulumi.Output<string>;
    /**
     * The ID of the product for which the stream was created
     */
    public /*out*/ readonly productId!: pulumi.Output<string>;
    /**
     * Identifies the properties monitored in the stream
     */
    public readonly properties!: pulumi.Output<string[]>;
    public readonly s3Connector!: pulumi.Output<outputs.DatastreamS3Connector | undefined>;
    public readonly splunkConnector!: pulumi.Output<outputs.DatastreamSplunkConnector | undefined>;
    /**
     * The name of the stream
     */
    public readonly streamName!: pulumi.Output<string>;
    /**
     * Identifies the configuration version of the stream
     */
    public /*out*/ readonly streamVersion!: pulumi.Output<number>;
    public readonly sumologicConnector!: pulumi.Output<outputs.DatastreamSumologicConnector | undefined>;

    /**
     * Create a Datastream resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatastreamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatastreamArgs | DatastreamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatastreamState | undefined;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["azureConnector"] = state ? state.azureConnector : undefined;
            resourceInputs["collectMidgress"] = state ? state.collectMidgress : undefined;
            resourceInputs["contractId"] = state ? state.contractId : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["datadogConnector"] = state ? state.datadogConnector : undefined;
            resourceInputs["datasetFields"] = state ? state.datasetFields : undefined;
            resourceInputs["deliveryConfiguration"] = state ? state.deliveryConfiguration : undefined;
            resourceInputs["elasticsearchConnector"] = state ? state.elasticsearchConnector : undefined;
            resourceInputs["gcsConnector"] = state ? state.gcsConnector : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["httpsConnector"] = state ? state.httpsConnector : undefined;
            resourceInputs["latestVersion"] = state ? state.latestVersion : undefined;
            resourceInputs["logglyConnector"] = state ? state.logglyConnector : undefined;
            resourceInputs["modifiedBy"] = state ? state.modifiedBy : undefined;
            resourceInputs["modifiedDate"] = state ? state.modifiedDate : undefined;
            resourceInputs["newRelicConnector"] = state ? state.newRelicConnector : undefined;
            resourceInputs["notificationEmails"] = state ? state.notificationEmails : undefined;
            resourceInputs["oracleConnector"] = state ? state.oracleConnector : undefined;
            resourceInputs["papiJson"] = state ? state.papiJson : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["s3Connector"] = state ? state.s3Connector : undefined;
            resourceInputs["splunkConnector"] = state ? state.splunkConnector : undefined;
            resourceInputs["streamName"] = state ? state.streamName : undefined;
            resourceInputs["streamVersion"] = state ? state.streamVersion : undefined;
            resourceInputs["sumologicConnector"] = state ? state.sumologicConnector : undefined;
        } else {
            const args = argsOrState as DatastreamArgs | undefined;
            if ((!args || args.active === undefined) && !opts.urn) {
                throw new Error("Missing required property 'active'");
            }
            if ((!args || args.contractId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contractId'");
            }
            if ((!args || args.datasetFields === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datasetFields'");
            }
            if ((!args || args.deliveryConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deliveryConfiguration'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.properties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'properties'");
            }
            if ((!args || args.streamName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'streamName'");
            }
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["azureConnector"] = args ? args.azureConnector : undefined;
            resourceInputs["collectMidgress"] = args ? args.collectMidgress : undefined;
            resourceInputs["contractId"] = args ? args.contractId : undefined;
            resourceInputs["datadogConnector"] = args ? args.datadogConnector : undefined;
            resourceInputs["datasetFields"] = args ? args.datasetFields : undefined;
            resourceInputs["deliveryConfiguration"] = args ? args.deliveryConfiguration : undefined;
            resourceInputs["elasticsearchConnector"] = args ? args.elasticsearchConnector : undefined;
            resourceInputs["gcsConnector"] = args ? args.gcsConnector : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["httpsConnector"] = args ? args.httpsConnector : undefined;
            resourceInputs["logglyConnector"] = args ? args.logglyConnector : undefined;
            resourceInputs["newRelicConnector"] = args ? args.newRelicConnector : undefined;
            resourceInputs["notificationEmails"] = args ? args.notificationEmails : undefined;
            resourceInputs["oracleConnector"] = args ? args.oracleConnector : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["s3Connector"] = args ? args.s3Connector : undefined;
            resourceInputs["splunkConnector"] = args ? args.splunkConnector : undefined;
            resourceInputs["streamName"] = args ? args.streamName : undefined;
            resourceInputs["sumologicConnector"] = args ? args.sumologicConnector : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["latestVersion"] = undefined /*out*/;
            resourceInputs["modifiedBy"] = undefined /*out*/;
            resourceInputs["modifiedDate"] = undefined /*out*/;
            resourceInputs["papiJson"] = undefined /*out*/;
            resourceInputs["productId"] = undefined /*out*/;
            resourceInputs["streamVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Datastream.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Datastream resources.
 */
export interface DatastreamState {
    /**
     * Defining if stream should be active or not
     */
    active?: pulumi.Input<boolean>;
    azureConnector?: pulumi.Input<inputs.DatastreamAzureConnector>;
    /**
     * Identifies if stream needs to collect midgress data
     */
    collectMidgress?: pulumi.Input<boolean>;
    /**
     * Identifies the contract that has access to the product
     */
    contractId?: pulumi.Input<string>;
    /**
     * The username who created the stream
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The date and time when the stream was created
     */
    createdDate?: pulumi.Input<string>;
    datadogConnector?: pulumi.Input<inputs.DatastreamDatadogConnector>;
    /**
     * A list of data set fields selected from the associated template that the stream monitors in logs. The order of the
     * identifiers define how the value for these fields appear in the log lines
     */
    datasetFields?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Provides information about the configuration related to logs (format, file names, delivery frequency)
     */
    deliveryConfiguration?: pulumi.Input<inputs.DatastreamDeliveryConfiguration>;
    elasticsearchConnector?: pulumi.Input<inputs.DatastreamElasticsearchConnector>;
    gcsConnector?: pulumi.Input<inputs.DatastreamGcsConnector>;
    /**
     * Identifies the group that has access to the product and for which the stream configuration was created
     */
    groupId?: pulumi.Input<string>;
    httpsConnector?: pulumi.Input<inputs.DatastreamHttpsConnector>;
    /**
     * Identifies the latest active configuration version of the stream
     */
    latestVersion?: pulumi.Input<number>;
    logglyConnector?: pulumi.Input<inputs.DatastreamLogglyConnector>;
    /**
     * The username who modified the stream
     */
    modifiedBy?: pulumi.Input<string>;
    /**
     * The date and time when the stream was modified
     */
    modifiedDate?: pulumi.Input<string>;
    newRelicConnector?: pulumi.Input<inputs.DatastreamNewRelicConnector>;
    /**
     * List of email addresses where the system sends notifications about activations and deactivations of the stream
     */
    notificationEmails?: pulumi.Input<pulumi.Input<string>[]>;
    oracleConnector?: pulumi.Input<inputs.DatastreamOracleConnector>;
    /**
     * The configuration in JSON format that can be copy-pasted into PAPI configuration to enable datastream behavior
     */
    papiJson?: pulumi.Input<string>;
    /**
     * The ID of the product for which the stream was created
     */
    productId?: pulumi.Input<string>;
    /**
     * Identifies the properties monitored in the stream
     */
    properties?: pulumi.Input<pulumi.Input<string>[]>;
    s3Connector?: pulumi.Input<inputs.DatastreamS3Connector>;
    splunkConnector?: pulumi.Input<inputs.DatastreamSplunkConnector>;
    /**
     * The name of the stream
     */
    streamName?: pulumi.Input<string>;
    /**
     * Identifies the configuration version of the stream
     */
    streamVersion?: pulumi.Input<number>;
    sumologicConnector?: pulumi.Input<inputs.DatastreamSumologicConnector>;
}

/**
 * The set of arguments for constructing a Datastream resource.
 */
export interface DatastreamArgs {
    /**
     * Defining if stream should be active or not
     */
    active: pulumi.Input<boolean>;
    azureConnector?: pulumi.Input<inputs.DatastreamAzureConnector>;
    /**
     * Identifies if stream needs to collect midgress data
     */
    collectMidgress?: pulumi.Input<boolean>;
    /**
     * Identifies the contract that has access to the product
     */
    contractId: pulumi.Input<string>;
    datadogConnector?: pulumi.Input<inputs.DatastreamDatadogConnector>;
    /**
     * A list of data set fields selected from the associated template that the stream monitors in logs. The order of the
     * identifiers define how the value for these fields appear in the log lines
     */
    datasetFields: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Provides information about the configuration related to logs (format, file names, delivery frequency)
     */
    deliveryConfiguration: pulumi.Input<inputs.DatastreamDeliveryConfiguration>;
    elasticsearchConnector?: pulumi.Input<inputs.DatastreamElasticsearchConnector>;
    gcsConnector?: pulumi.Input<inputs.DatastreamGcsConnector>;
    /**
     * Identifies the group that has access to the product and for which the stream configuration was created
     */
    groupId: pulumi.Input<string>;
    httpsConnector?: pulumi.Input<inputs.DatastreamHttpsConnector>;
    logglyConnector?: pulumi.Input<inputs.DatastreamLogglyConnector>;
    newRelicConnector?: pulumi.Input<inputs.DatastreamNewRelicConnector>;
    /**
     * List of email addresses where the system sends notifications about activations and deactivations of the stream
     */
    notificationEmails?: pulumi.Input<pulumi.Input<string>[]>;
    oracleConnector?: pulumi.Input<inputs.DatastreamOracleConnector>;
    /**
     * Identifies the properties monitored in the stream
     */
    properties: pulumi.Input<pulumi.Input<string>[]>;
    s3Connector?: pulumi.Input<inputs.DatastreamS3Connector>;
    splunkConnector?: pulumi.Input<inputs.DatastreamSplunkConnector>;
    /**
     * The name of the stream
     */
    streamName: pulumi.Input<string>;
    sumologicConnector?: pulumi.Input<inputs.DatastreamSumologicConnector>;
}
