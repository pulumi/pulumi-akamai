// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the `akamai.CloudletsPolicyActivation` resource to activate a specific version of a Cloudlet policy. An activation deploys the version to either the Akamai staging or production network. You can activate a specific version multiple times if you need to.
 *
 * Before activating on production, activate on staging first. This way you can detect any problems in staging before your changes progress to production.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const example = new akamai.CloudletsPolicyActivation("example", {
 *     associatedProperties: [
 *         "Property_1",
 *         "Property_2",
 *         "Property_3",
 *     ],
 *     network: "staging",
 *     policyId: 1234,
 *     version: 1,
 * });
 * ```
 * If you're handling two `akamai.CloudletsPolicyActivation` resources in the same configuration file with the same `policyId`, but different `network` arguments (for example, `production` and `staging`), you need to add `dependsOn` to the production resource. See the example:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const stag = new akamai.CloudletsPolicyActivation("stag", {
 *     policyId: 1234567,
 *     network: "staging",
 *     version: 1,
 *     associatedProperties: [
 *         "Property_1",
 *         "Property_2",
 *     ],
 * });
 * const prod = new akamai.CloudletsPolicyActivation("prod", {
 *     policyId: 1234567,
 *     network: "production",
 *     version: 1,
 *     associatedProperties: [
 *         "Property_1",
 *         "Property_2",
 *     ],
 * }, {
 *     dependsOn: [stag],
 * });
 * ```
 */
export class CloudletsPolicyActivation extends pulumi.CustomResource {
    /**
     * Get an existing CloudletsPolicyActivation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudletsPolicyActivationState, opts?: pulumi.CustomResourceOptions): CloudletsPolicyActivation {
        return new CloudletsPolicyActivation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/cloudletsPolicyActivation:CloudletsPolicyActivation';

    /**
     * Returns true if the given object is an instance of CloudletsPolicyActivation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudletsPolicyActivation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudletsPolicyActivation.__pulumiType;
    }

    /**
     * A set of property identifiers related to this Cloudlet policy. You can't activate a Cloudlet policy if it doesn't have any properties associated with it.
     */
    public readonly associatedProperties!: pulumi.Output<string[]>;
    /**
     * The network you want to activate the policy version on. For the Staging network, specify either `staging`, `stag`, or `s`. For the Production network, specify either `production`, `prod`, or `p`. All values are case insensitive.
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * An identifier for the Cloudlet policy you want to activate.
     */
    public readonly policyId!: pulumi.Output<number>;
    /**
     * The activation status for this Cloudlet policy.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The Cloudlet policy version you want to activate.
     */
    public readonly version!: pulumi.Output<number>;

    /**
     * Create a CloudletsPolicyActivation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudletsPolicyActivationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudletsPolicyActivationArgs | CloudletsPolicyActivationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudletsPolicyActivationState | undefined;
            resourceInputs["associatedProperties"] = state ? state.associatedProperties : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CloudletsPolicyActivationArgs | undefined;
            if ((!args || args.associatedProperties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'associatedProperties'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if ((!args || args.policyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyId'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["associatedProperties"] = args ? args.associatedProperties : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["policyId"] = args ? args.policyId : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudletsPolicyActivation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudletsPolicyActivation resources.
 */
export interface CloudletsPolicyActivationState {
    /**
     * A set of property identifiers related to this Cloudlet policy. You can't activate a Cloudlet policy if it doesn't have any properties associated with it.
     */
    associatedProperties?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The network you want to activate the policy version on. For the Staging network, specify either `staging`, `stag`, or `s`. For the Production network, specify either `production`, `prod`, or `p`. All values are case insensitive.
     */
    network?: pulumi.Input<string>;
    /**
     * An identifier for the Cloudlet policy you want to activate.
     */
    policyId?: pulumi.Input<number>;
    /**
     * The activation status for this Cloudlet policy.
     */
    status?: pulumi.Input<string>;
    /**
     * The Cloudlet policy version you want to activate.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CloudletsPolicyActivation resource.
 */
export interface CloudletsPolicyActivationArgs {
    /**
     * A set of property identifiers related to this Cloudlet policy. You can't activate a Cloudlet policy if it doesn't have any properties associated with it.
     */
    associatedProperties: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The network you want to activate the policy version on. For the Staging network, specify either `staging`, `stag`, or `s`. For the Production network, specify either `production`, `prod`, or `p`. All values are case insensitive.
     */
    network: pulumi.Input<string>;
    /**
     * An identifier for the Cloudlet policy you want to activate.
     */
    policyId: pulumi.Input<number>;
    /**
     * The Cloudlet policy version you want to activate.
     */
    version: pulumi.Input<number>;
}
