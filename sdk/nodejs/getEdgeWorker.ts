// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEdgeWorker(args: GetEdgeWorkerArgs, opts?: pulumi.InvokeOptions): Promise<GetEdgeWorkerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getEdgeWorker:getEdgeWorker", {
        "edgeworkerId": args.edgeworkerId,
        "localBundle": args.localBundle,
    }, opts);
}

/**
 * A collection of arguments for invoking getEdgeWorker.
 */
export interface GetEdgeWorkerArgs {
    edgeworkerId: number;
    localBundle?: string;
}

/**
 * A collection of values returned by getEdgeWorker.
 */
export interface GetEdgeWorkerResult {
    readonly edgeworkerId: number;
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly localBundle?: string;
    readonly localBundleHash: string;
    readonly name: string;
    readonly resourceTierId: number;
    readonly version: string;
    readonly warnings: string[];
}
export function getEdgeWorkerOutput(args: GetEdgeWorkerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEdgeWorkerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("akamai:index/getEdgeWorker:getEdgeWorker", {
        "edgeworkerId": args.edgeworkerId,
        "localBundle": args.localBundle,
    }, opts);
}

/**
 * A collection of arguments for invoking getEdgeWorker.
 */
export interface GetEdgeWorkerOutputArgs {
    edgeworkerId: pulumi.Input<number>;
    localBundle?: pulumi.Input<string>;
}
