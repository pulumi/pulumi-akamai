// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEdgeWorkerActivation(args: GetEdgeWorkerActivationArgs, opts?: pulumi.InvokeOptions): Promise<GetEdgeWorkerActivationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getEdgeWorkerActivation:getEdgeWorkerActivation", {
        "edgeworkerId": args.edgeworkerId,
        "network": args.network,
    }, opts);
}

/**
 * A collection of arguments for invoking getEdgeWorkerActivation.
 */
export interface GetEdgeWorkerActivationArgs {
    edgeworkerId: number;
    network: string;
}

/**
 * A collection of values returned by getEdgeWorkerActivation.
 */
export interface GetEdgeWorkerActivationResult {
    readonly activationId: number;
    readonly edgeworkerId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly network: string;
    readonly version: string;
}
export function getEdgeWorkerActivationOutput(args: GetEdgeWorkerActivationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEdgeWorkerActivationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("akamai:index/getEdgeWorkerActivation:getEdgeWorkerActivation", {
        "edgeworkerId": args.edgeworkerId,
        "network": args.network,
    }, opts);
}

/**
 * A collection of arguments for invoking getEdgeWorkerActivation.
 */
export interface GetEdgeWorkerActivationOutputArgs {
    edgeworkerId: pulumi.Input<number>;
    network: pulumi.Input<string>;
}
