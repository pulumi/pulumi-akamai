// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ClientlistActivation extends pulumi.CustomResource {
    /**
     * Get an existing ClientlistActivation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClientlistActivationState, opts?: pulumi.CustomResourceOptions): ClientlistActivation {
        return new ClientlistActivation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/clientlistActivation:ClientlistActivation';

    /**
     * Returns true if the given object is an instance of ClientlistActivation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClientlistActivation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClientlistActivation.__pulumiType;
    }

    /**
     * A brief description for the activation.
     */
    declare public readonly comments: pulumi.Output<string | undefined>;
    /**
     * The client list unique identifier.
     */
    declare public readonly listId: pulumi.Output<string>;
    /**
     * The network environment where you activate your client list: either STAGING or PRODUCTION.
     */
    declare public readonly network: pulumi.Output<string>;
    /**
     * Users to notify via email.
     */
    declare public readonly notificationRecipients: pulumi.Output<string[] | undefined>;
    /**
     * Identifies the Siebel ticket, if the activation is linked to one.
     */
    declare public readonly siebelTicketId: pulumi.Output<string | undefined>;
    /**
     * The current activation status, either ACTIVE, INACTIVE, MODIFIED, PENDING_ACTIVATION, PENDING_DEACTIVATION, or FAILED.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The client list version.
     */
    declare public readonly version: pulumi.Output<number>;

    /**
     * Create a ClientlistActivation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClientlistActivationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClientlistActivationArgs | ClientlistActivationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClientlistActivationState | undefined;
            resourceInputs["comments"] = state?.comments;
            resourceInputs["listId"] = state?.listId;
            resourceInputs["network"] = state?.network;
            resourceInputs["notificationRecipients"] = state?.notificationRecipients;
            resourceInputs["siebelTicketId"] = state?.siebelTicketId;
            resourceInputs["status"] = state?.status;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as ClientlistActivationArgs | undefined;
            if (args?.listId === undefined && !opts.urn) {
                throw new Error("Missing required property 'listId'");
            }
            if (args?.network === undefined && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if (args?.version === undefined && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["comments"] = args?.comments;
            resourceInputs["listId"] = args?.listId;
            resourceInputs["network"] = args?.network;
            resourceInputs["notificationRecipients"] = args?.notificationRecipients;
            resourceInputs["siebelTicketId"] = args?.siebelTicketId;
            resourceInputs["version"] = args?.version;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClientlistActivation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClientlistActivation resources.
 */
export interface ClientlistActivationState {
    /**
     * A brief description for the activation.
     */
    comments?: pulumi.Input<string>;
    /**
     * The client list unique identifier.
     */
    listId?: pulumi.Input<string>;
    /**
     * The network environment where you activate your client list: either STAGING or PRODUCTION.
     */
    network?: pulumi.Input<string>;
    /**
     * Users to notify via email.
     */
    notificationRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifies the Siebel ticket, if the activation is linked to one.
     */
    siebelTicketId?: pulumi.Input<string>;
    /**
     * The current activation status, either ACTIVE, INACTIVE, MODIFIED, PENDING_ACTIVATION, PENDING_DEACTIVATION, or FAILED.
     */
    status?: pulumi.Input<string>;
    /**
     * The client list version.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ClientlistActivation resource.
 */
export interface ClientlistActivationArgs {
    /**
     * A brief description for the activation.
     */
    comments?: pulumi.Input<string>;
    /**
     * The client list unique identifier.
     */
    listId: pulumi.Input<string>;
    /**
     * The network environment where you activate your client list: either STAGING or PRODUCTION.
     */
    network: pulumi.Input<string>;
    /**
     * Users to notify via email.
     */
    notificationRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifies the Siebel ticket, if the activation is linked to one.
     */
    siebelTicketId?: pulumi.Input<string>;
    /**
     * The client list version.
     */
    version: pulumi.Input<number>;
}
