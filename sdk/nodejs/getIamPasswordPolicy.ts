// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamPasswordPolicy(opts?: pulumi.InvokeOptions): Promise<GetIamPasswordPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getIamPasswordPolicy:getIamPasswordPolicy", {
    }, opts);
}

/**
 * A collection of values returned by getIamPasswordPolicy.
 */
export interface GetIamPasswordPolicyResult {
    readonly caseDif: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maxRepeating: number;
    readonly minDigits: number;
    readonly minLength: number;
    readonly minLetters: number;
    readonly minNonAlpha: number;
    readonly minReuse: number;
    readonly pwClass: string;
    readonly rotateFrequency: number;
}
export function getIamPasswordPolicyOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIamPasswordPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("akamai:index/getIamPasswordPolicy:getIamPasswordPolicy", {
    }, opts);
}
