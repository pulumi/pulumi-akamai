// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudwrapperLocations(args?: GetCloudwrapperLocationsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudwrapperLocationsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getCloudwrapperLocations:getCloudwrapperLocations", {
        "locations": args.locations,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudwrapperLocations.
 */
export interface GetCloudwrapperLocationsArgs {
    locations?: inputs.GetCloudwrapperLocationsLocation[];
}

/**
 * A collection of values returned by getCloudwrapperLocations.
 */
export interface GetCloudwrapperLocationsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly locations?: outputs.GetCloudwrapperLocationsLocation[];
}
export function getCloudwrapperLocationsOutput(args?: GetCloudwrapperLocationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudwrapperLocationsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("akamai:index/getCloudwrapperLocations:getCloudwrapperLocations", {
        "locations": args.locations,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudwrapperLocations.
 */
export interface GetCloudwrapperLocationsOutputArgs {
    locations?: pulumi.Input<pulumi.Input<inputs.GetCloudwrapperLocationsLocationArgs>[]>;
}
