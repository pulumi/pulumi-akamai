// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AppSecMalwarePolicy extends pulumi.CustomResource {
    /**
     * Get an existing AppSecMalwarePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecMalwarePolicyState, opts?: pulumi.CustomResourceOptions): AppSecMalwarePolicy {
        return new AppSecMalwarePolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecMalwarePolicy:AppSecMalwarePolicy';

    /**
     * Returns true if the given object is an instance of AppSecMalwarePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecMalwarePolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecMalwarePolicy.__pulumiType;
    }

    /**
     * Unique identifier of the security configuration
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * JSON-formatted definition of the malware policy
     */
    public readonly malwarePolicy!: pulumi.Output<string>;
    /**
     * Unique identifier of the malware policy
     */
    public /*out*/ readonly malwarePolicyId!: pulumi.Output<number>;

    /**
     * Create a AppSecMalwarePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecMalwarePolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecMalwarePolicyArgs | AppSecMalwarePolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecMalwarePolicyState | undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["malwarePolicy"] = state ? state.malwarePolicy : undefined;
            resourceInputs["malwarePolicyId"] = state ? state.malwarePolicyId : undefined;
        } else {
            const args = argsOrState as AppSecMalwarePolicyArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.malwarePolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'malwarePolicy'");
            }
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["malwarePolicy"] = args ? args.malwarePolicy : undefined;
            resourceInputs["malwarePolicyId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppSecMalwarePolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecMalwarePolicy resources.
 */
export interface AppSecMalwarePolicyState {
    /**
     * Unique identifier of the security configuration
     */
    configId?: pulumi.Input<number>;
    /**
     * JSON-formatted definition of the malware policy
     */
    malwarePolicy?: pulumi.Input<string>;
    /**
     * Unique identifier of the malware policy
     */
    malwarePolicyId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AppSecMalwarePolicy resource.
 */
export interface AppSecMalwarePolicyArgs {
    /**
     * Unique identifier of the security configuration
     */
    configId: pulumi.Input<number>;
    /**
     * JSON-formatted definition of the malware policy
     */
    malwarePolicy: pulumi.Input<string>;
}
