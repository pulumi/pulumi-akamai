// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Scopes**: Custom rule
 *
 * Associates an action with a custom rule. Custom rules are rules that you define yourself and are not part of the Kona Rule Set.
 *
 * **Related API Endpoint**: [/appsec/v1/configs/{configId}/custom-rules](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putactionruleid)
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const createCustomRuleAction = new akamai.AppSecCustomRuleAction("createCustomRuleAction", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     securityPolicyId: "gms1_134637",
 *     customRuleId: 12345,
 *     customRuleAction: "alert",
 * });
 * export const customRuleId = createCustomRuleAction.customRuleId;
 * ```
 */
export class AppSecCustomRuleAction extends pulumi.CustomResource {
    /**
     * Get an existing AppSecCustomRuleAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecCustomRuleActionState, opts?: pulumi.CustomResourceOptions): AppSecCustomRuleAction {
        return new AppSecCustomRuleAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecCustomRuleAction:AppSecCustomRuleAction';

    /**
     * Returns true if the given object is an instance of AppSecCustomRuleAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecCustomRuleAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecCustomRuleAction.__pulumiType;
    }

    /**
     * . Unique identifier of the security configuration associated with the custom rule action being modified.
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * . Action to be taken when the custom rule is invoked. Allowed values are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action.
     */
    public readonly customRuleAction!: pulumi.Output<string>;
    /**
     * . Unique identifier of the custom rule whose action is being modified.
     */
    public readonly customRuleId!: pulumi.Output<number>;
    /**
     * . Unique identifier of the security policy associated with the custom rule action being modified d.
     */
    public readonly securityPolicyId!: pulumi.Output<string>;

    /**
     * Create a AppSecCustomRuleAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecCustomRuleActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecCustomRuleActionArgs | AppSecCustomRuleActionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecCustomRuleActionState | undefined;
            inputs["configId"] = state ? state.configId : undefined;
            inputs["customRuleAction"] = state ? state.customRuleAction : undefined;
            inputs["customRuleId"] = state ? state.customRuleId : undefined;
            inputs["securityPolicyId"] = state ? state.securityPolicyId : undefined;
        } else {
            const args = argsOrState as AppSecCustomRuleActionArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.customRuleAction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customRuleAction'");
            }
            if ((!args || args.customRuleId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customRuleId'");
            }
            if ((!args || args.securityPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicyId'");
            }
            inputs["configId"] = args ? args.configId : undefined;
            inputs["customRuleAction"] = args ? args.customRuleAction : undefined;
            inputs["customRuleId"] = args ? args.customRuleId : undefined;
            inputs["securityPolicyId"] = args ? args.securityPolicyId : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AppSecCustomRuleAction.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecCustomRuleAction resources.
 */
export interface AppSecCustomRuleActionState {
    /**
     * . Unique identifier of the security configuration associated with the custom rule action being modified.
     */
    configId?: pulumi.Input<number>;
    /**
     * . Action to be taken when the custom rule is invoked. Allowed values are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action.
     */
    customRuleAction?: pulumi.Input<string>;
    /**
     * . Unique identifier of the custom rule whose action is being modified.
     */
    customRuleId?: pulumi.Input<number>;
    /**
     * . Unique identifier of the security policy associated with the custom rule action being modified d.
     */
    securityPolicyId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppSecCustomRuleAction resource.
 */
export interface AppSecCustomRuleActionArgs {
    /**
     * . Unique identifier of the security configuration associated with the custom rule action being modified.
     */
    configId: pulumi.Input<number>;
    /**
     * . Action to be taken when the custom rule is invoked. Allowed values are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action.
     */
    customRuleAction: pulumi.Input<string>;
    /**
     * . Unique identifier of the custom rule whose action is being modified.
     */
    customRuleId: pulumi.Input<number>;
    /**
     * . Unique identifier of the security policy associated with the custom rule action being modified d.
     */
    securityPolicyId: pulumi.Input<string>;
}
