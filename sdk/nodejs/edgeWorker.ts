// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class EdgeWorker extends pulumi.CustomResource {
    /**
     * Get an existing EdgeWorker resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeWorkerState, opts?: pulumi.CustomResourceOptions): EdgeWorker {
        return new EdgeWorker(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/edgeWorker:EdgeWorker';

    /**
     * Returns true if the given object is an instance of EdgeWorker.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeWorker {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeWorker.__pulumiType;
    }

    /**
     * The unique identifier of the EdgeWorker
     */
    public /*out*/ readonly edgeworkerId!: pulumi.Output<number>;
    /**
     * Defines the group association for the EdgeWorker
     */
    public readonly groupId!: pulumi.Output<number>;
    /**
     * The path to the EdgeWorkers tgz code bundle
     */
    public readonly localBundle!: pulumi.Output<string | undefined>;
    /**
     * The local bundle hash for the EdgeWorker
     */
    public /*out*/ readonly localBundleHash!: pulumi.Output<string>;
    /**
     * The EdgeWorker name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The unique identifier of a resource tier
     */
    public readonly resourceTierId!: pulumi.Output<number>;
    /**
     * The bundle version
     */
    public /*out*/ readonly version!: pulumi.Output<string>;
    /**
     * The list of warnings returned by EdgeWorker validation
     */
    public /*out*/ readonly warnings!: pulumi.Output<string[]>;

    /**
     * Create a EdgeWorker resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeWorkerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeWorkerArgs | EdgeWorkerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgeWorkerState | undefined;
            resourceInputs["edgeworkerId"] = state ? state.edgeworkerId : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["localBundle"] = state ? state.localBundle : undefined;
            resourceInputs["localBundleHash"] = state ? state.localBundleHash : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceTierId"] = state ? state.resourceTierId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["warnings"] = state ? state.warnings : undefined;
        } else {
            const args = argsOrState as EdgeWorkerArgs | undefined;
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.resourceTierId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceTierId'");
            }
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["localBundle"] = args ? args.localBundle : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceTierId"] = args ? args.resourceTierId : undefined;
            resourceInputs["edgeworkerId"] = undefined /*out*/;
            resourceInputs["localBundleHash"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
            resourceInputs["warnings"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgeWorker.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EdgeWorker resources.
 */
export interface EdgeWorkerState {
    /**
     * The unique identifier of the EdgeWorker
     */
    edgeworkerId?: pulumi.Input<number>;
    /**
     * Defines the group association for the EdgeWorker
     */
    groupId?: pulumi.Input<number>;
    /**
     * The path to the EdgeWorkers tgz code bundle
     */
    localBundle?: pulumi.Input<string>;
    /**
     * The local bundle hash for the EdgeWorker
     */
    localBundleHash?: pulumi.Input<string>;
    /**
     * The EdgeWorker name
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier of a resource tier
     */
    resourceTierId?: pulumi.Input<number>;
    /**
     * The bundle version
     */
    version?: pulumi.Input<string>;
    /**
     * The list of warnings returned by EdgeWorker validation
     */
    warnings?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a EdgeWorker resource.
 */
export interface EdgeWorkerArgs {
    /**
     * Defines the group association for the EdgeWorker
     */
    groupId: pulumi.Input<number>;
    /**
     * The path to the EdgeWorkers tgz code bundle
     */
    localBundle?: pulumi.Input<string>;
    /**
     * The EdgeWorker name
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier of a resource tier
     */
    resourceTierId: pulumi.Input<number>;
}
