// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use the `akamai.PropertyIncludeActivation` resource to activate your include and make available to a property.
 *
 * ## Basic usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const myExample = new akamai.PropertyIncludeActivation("myExample", {
 *     contractId: "C-0N7RAC7",
 *     groupId: "X112233",
 *     includeId: "inc_X12345",
 *     network: "STAGING",
 *     notifyEmails: [
 *         "example@example.com",
 *         "example2@example.com",
 *     ],
 *     version: 1,
 * });
 * ```
 *
 * ## Attributes reference
 *
 * This resource returns this attribute:
 *
 * * `validations` -Â The validation information in JSON format.
 */
export class PropertyIncludeActivation extends pulumi.CustomResource {
    /**
     * Get an existing PropertyIncludeActivation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PropertyIncludeActivationState, opts?: pulumi.CustomResourceOptions): PropertyIncludeActivation {
        return new PropertyIncludeActivation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/propertyIncludeActivation:PropertyIncludeActivation';

    /**
     * Returns true if the given object is an instance of PropertyIncludeActivation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PropertyIncludeActivation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PropertyIncludeActivation.__pulumiType;
    }

    /**
     * (Optional) Automatically acknowledge all rule warnings for activation and continue.
     */
    public readonly autoAcknowledgeRuleWarnings!: pulumi.Output<boolean | undefined>;
    /**
     * Provides an audit record when activating on a production network
     */
    public readonly complianceRecord!: pulumi.Output<outputs.PropertyIncludeActivationComplianceRecord | undefined>;
    /**
     * (Required) A contract's unique ID, including the optional `ctr_` prefix.
     */
    public readonly contractId!: pulumi.Output<string>;
    /**
     * (Required) A group's unique ID, including the optional `grp_` prefix.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * (Required) An include's unique ID with the optional `inc_` prefix.
     */
    public readonly includeId!: pulumi.Output<string>;
    /**
     * (Required) The network for which the activation will be performed.
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * (Optional) A log message assigned to the activation request.
     */
    public readonly note!: pulumi.Output<string | undefined>;
    /**
     * (Required) The list of email addresses to notify when the activation status changes.
     */
    public readonly notifyEmails!: pulumi.Output<string[]>;
    /**
     * The validation information in JSON format
     */
    public /*out*/ readonly validations!: pulumi.Output<string>;
    /**
     * (Required) The version of the include you want to activate.
     */
    public readonly version!: pulumi.Output<number>;

    /**
     * Create a PropertyIncludeActivation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PropertyIncludeActivationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PropertyIncludeActivationArgs | PropertyIncludeActivationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PropertyIncludeActivationState | undefined;
            resourceInputs["autoAcknowledgeRuleWarnings"] = state ? state.autoAcknowledgeRuleWarnings : undefined;
            resourceInputs["complianceRecord"] = state ? state.complianceRecord : undefined;
            resourceInputs["contractId"] = state ? state.contractId : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["includeId"] = state ? state.includeId : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["note"] = state ? state.note : undefined;
            resourceInputs["notifyEmails"] = state ? state.notifyEmails : undefined;
            resourceInputs["validations"] = state ? state.validations : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as PropertyIncludeActivationArgs | undefined;
            if ((!args || args.contractId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contractId'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.includeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'includeId'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if ((!args || args.notifyEmails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notifyEmails'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["autoAcknowledgeRuleWarnings"] = args ? args.autoAcknowledgeRuleWarnings : undefined;
            resourceInputs["complianceRecord"] = args ? args.complianceRecord : undefined;
            resourceInputs["contractId"] = args ? args.contractId : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["includeId"] = args ? args.includeId : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["note"] = args ? args.note : undefined;
            resourceInputs["notifyEmails"] = args ? args.notifyEmails : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["validations"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PropertyIncludeActivation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PropertyIncludeActivation resources.
 */
export interface PropertyIncludeActivationState {
    /**
     * (Optional) Automatically acknowledge all rule warnings for activation and continue.
     */
    autoAcknowledgeRuleWarnings?: pulumi.Input<boolean>;
    /**
     * Provides an audit record when activating on a production network
     */
    complianceRecord?: pulumi.Input<inputs.PropertyIncludeActivationComplianceRecord>;
    /**
     * (Required) A contract's unique ID, including the optional `ctr_` prefix.
     */
    contractId?: pulumi.Input<string>;
    /**
     * (Required) A group's unique ID, including the optional `grp_` prefix.
     */
    groupId?: pulumi.Input<string>;
    /**
     * (Required) An include's unique ID with the optional `inc_` prefix.
     */
    includeId?: pulumi.Input<string>;
    /**
     * (Required) The network for which the activation will be performed.
     */
    network?: pulumi.Input<string>;
    /**
     * (Optional) A log message assigned to the activation request.
     */
    note?: pulumi.Input<string>;
    /**
     * (Required) The list of email addresses to notify when the activation status changes.
     */
    notifyEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The validation information in JSON format
     */
    validations?: pulumi.Input<string>;
    /**
     * (Required) The version of the include you want to activate.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PropertyIncludeActivation resource.
 */
export interface PropertyIncludeActivationArgs {
    /**
     * (Optional) Automatically acknowledge all rule warnings for activation and continue.
     */
    autoAcknowledgeRuleWarnings?: pulumi.Input<boolean>;
    /**
     * Provides an audit record when activating on a production network
     */
    complianceRecord?: pulumi.Input<inputs.PropertyIncludeActivationComplianceRecord>;
    /**
     * (Required) A contract's unique ID, including the optional `ctr_` prefix.
     */
    contractId: pulumi.Input<string>;
    /**
     * (Required) A group's unique ID, including the optional `grp_` prefix.
     */
    groupId: pulumi.Input<string>;
    /**
     * (Required) An include's unique ID with the optional `inc_` prefix.
     */
    includeId: pulumi.Input<string>;
    /**
     * (Required) The network for which the activation will be performed.
     */
    network: pulumi.Input<string>;
    /**
     * (Optional) A log message assigned to the activation request.
     */
    note?: pulumi.Input<string>;
    /**
     * (Required) The list of email addresses to notify when the activation status changes.
     */
    notifyEmails: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Required) The version of the include you want to activate.
     */
    version: pulumi.Input<number>;
}
