// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * @deprecated akamai.properties/cpcode.CpCode has been deprecated in favor of akamai.index/cpcode.CpCode
 */
export class CpCode extends pulumi.CustomResource {
    /**
     * Get an existing CpCode resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CpCodeState, opts?: pulumi.CustomResourceOptions): CpCode {
        pulumi.log.warn("CpCode is deprecated: akamai.properties/cpcode.CpCode has been deprecated in favor of akamai.index/cpcode.CpCode")
        return new CpCode(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:properties/cpCode:CpCode';

    /**
     * Returns true if the given object is an instance of CpCode.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CpCode {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CpCode.__pulumiType;
    }

    /**
     * @deprecated The setting "contract" has been deprecated.
     */
    public readonly contract!: pulumi.Output<string>;
    public readonly contractId!: pulumi.Output<string>;
    /**
     * @deprecated The setting "group" has been deprecated.
     */
    public readonly group!: pulumi.Output<string>;
    public readonly groupId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    /**
     * @deprecated The setting "product" has been deprecated.
     */
    public readonly product!: pulumi.Output<string>;
    public readonly productId!: pulumi.Output<string>;

    /**
     * Create a CpCode resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated akamai.properties/cpcode.CpCode has been deprecated in favor of akamai.index/cpcode.CpCode */
    constructor(name: string, args?: CpCodeArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated akamai.properties/cpcode.CpCode has been deprecated in favor of akamai.index/cpcode.CpCode */
    constructor(name: string, argsOrState?: CpCodeArgs | CpCodeState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("CpCode is deprecated: akamai.properties/cpcode.CpCode has been deprecated in favor of akamai.index/cpcode.CpCode")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CpCodeState | undefined;
            resourceInputs["contract"] = state ? state.contract : undefined;
            resourceInputs["contractId"] = state ? state.contractId : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["product"] = state ? state.product : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
        } else {
            const args = argsOrState as CpCodeArgs | undefined;
            resourceInputs["contract"] = args ? args.contract : undefined;
            resourceInputs["contractId"] = args ? args.contractId : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["product"] = args ? args.product : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CpCode.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CpCode resources.
 */
export interface CpCodeState {
    /**
     * @deprecated The setting "contract" has been deprecated.
     */
    contract?: pulumi.Input<string>;
    contractId?: pulumi.Input<string>;
    /**
     * @deprecated The setting "group" has been deprecated.
     */
    group?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * @deprecated The setting "product" has been deprecated.
     */
    product?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CpCode resource.
 */
export interface CpCodeArgs {
    /**
     * @deprecated The setting "contract" has been deprecated.
     */
    contract?: pulumi.Input<string>;
    contractId?: pulumi.Input<string>;
    /**
     * @deprecated The setting "group" has been deprecated.
     */
    group?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * @deprecated The setting "product" has been deprecated.
     */
    product?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
}
