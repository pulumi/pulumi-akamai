// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudwrapperCapacities(args?: GetCloudwrapperCapacitiesArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudwrapperCapacitiesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getCloudwrapperCapacities:getCloudwrapperCapacities", {
        "capacities": args.capacities,
        "contractIds": args.contractIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudwrapperCapacities.
 */
export interface GetCloudwrapperCapacitiesArgs {
    capacities?: inputs.GetCloudwrapperCapacitiesCapacity[];
    contractIds?: string[];
}

/**
 * A collection of values returned by getCloudwrapperCapacities.
 */
export interface GetCloudwrapperCapacitiesResult {
    readonly capacities?: outputs.GetCloudwrapperCapacitiesCapacity[];
    readonly contractIds?: string[];
    /**
     * @deprecated Required by the terraform plugin testing framework, always set to `akamai_cloudwrapper_capacities`.
     */
    readonly id: string;
}
export function getCloudwrapperCapacitiesOutput(args?: GetCloudwrapperCapacitiesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudwrapperCapacitiesResult> {
    return pulumi.output(args).apply((a: any) => getCloudwrapperCapacities(a, opts))
}

/**
 * A collection of arguments for invoking getCloudwrapperCapacities.
 */
export interface GetCloudwrapperCapacitiesOutputArgs {
    capacities?: pulumi.Input<pulumi.Input<inputs.GetCloudwrapperCapacitiesCapacityArgs>[]>;
    contractIds?: pulumi.Input<pulumi.Input<string>[]>;
}
