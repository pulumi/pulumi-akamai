// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudletsApplicationLoadBalancerActivation extends pulumi.CustomResource {
    /**
     * Get an existing CloudletsApplicationLoadBalancerActivation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudletsApplicationLoadBalancerActivationState, opts?: pulumi.CustomResourceOptions): CloudletsApplicationLoadBalancerActivation {
        return new CloudletsApplicationLoadBalancerActivation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/cloudletsApplicationLoadBalancerActivation:CloudletsApplicationLoadBalancerActivation';

    /**
     * Returns true if the given object is an instance of CloudletsApplicationLoadBalancerActivation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudletsApplicationLoadBalancerActivation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudletsApplicationLoadBalancerActivation.__pulumiType;
    }

    /**
     * The network you want to activate the application load balancer version on (options are Staging and Production)
     */
    declare public readonly network: pulumi.Output<string>;
    /**
     * The conditional origin’s unique identifier
     */
    declare public readonly originId: pulumi.Output<string>;
    /**
     * Activation status for this application load balancer
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Enables to set timeout for processing
     */
    declare public readonly timeouts: pulumi.Output<outputs.CloudletsApplicationLoadBalancerActivationTimeouts | undefined>;
    /**
     * Cloudlets application load balancer version you want to activate
     */
    declare public readonly version: pulumi.Output<number>;

    /**
     * Create a CloudletsApplicationLoadBalancerActivation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudletsApplicationLoadBalancerActivationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudletsApplicationLoadBalancerActivationArgs | CloudletsApplicationLoadBalancerActivationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudletsApplicationLoadBalancerActivationState | undefined;
            resourceInputs["network"] = state?.network;
            resourceInputs["originId"] = state?.originId;
            resourceInputs["status"] = state?.status;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as CloudletsApplicationLoadBalancerActivationArgs | undefined;
            if (args?.network === undefined && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if (args?.originId === undefined && !opts.urn) {
                throw new Error("Missing required property 'originId'");
            }
            if (args?.version === undefined && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["network"] = args?.network;
            resourceInputs["originId"] = args?.originId;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["version"] = args?.version;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudletsApplicationLoadBalancerActivation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudletsApplicationLoadBalancerActivation resources.
 */
export interface CloudletsApplicationLoadBalancerActivationState {
    /**
     * The network you want to activate the application load balancer version on (options are Staging and Production)
     */
    network?: pulumi.Input<string>;
    /**
     * The conditional origin’s unique identifier
     */
    originId?: pulumi.Input<string>;
    /**
     * Activation status for this application load balancer
     */
    status?: pulumi.Input<string>;
    /**
     * Enables to set timeout for processing
     */
    timeouts?: pulumi.Input<inputs.CloudletsApplicationLoadBalancerActivationTimeouts>;
    /**
     * Cloudlets application load balancer version you want to activate
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CloudletsApplicationLoadBalancerActivation resource.
 */
export interface CloudletsApplicationLoadBalancerActivationArgs {
    /**
     * The network you want to activate the application load balancer version on (options are Staging and Production)
     */
    network: pulumi.Input<string>;
    /**
     * The conditional origin’s unique identifier
     */
    originId: pulumi.Input<string>;
    /**
     * Enables to set timeout for processing
     */
    timeouts?: pulumi.Input<inputs.CloudletsApplicationLoadBalancerActivationTimeouts>;
    /**
     * Cloudlets application load balancer version you want to activate
     */
    version: pulumi.Input<number>;
}
