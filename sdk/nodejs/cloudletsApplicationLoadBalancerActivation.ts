// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the `akamai.CloudletsApplicationLoadBalancerActivation` resource to activate the Application Load Balancer Cloudlet configuration. An activation deploys the configuration version to either the Akamai staging or production network. You can activate a specific version multiple times if you need to.
 *
 * Before activating on production, activate on staging first. This way you can detect any problems in staging before your changes progress to production.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const example = new akamai.CloudletsApplicationLoadBalancerActivation("example", {
 *     originId: "alb_test_1",
 *     network: "staging",
 *     version: 1,
 * });
 * export const status = example.status;
 * ```
 */
export class CloudletsApplicationLoadBalancerActivation extends pulumi.CustomResource {
    /**
     * Get an existing CloudletsApplicationLoadBalancerActivation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudletsApplicationLoadBalancerActivationState, opts?: pulumi.CustomResourceOptions): CloudletsApplicationLoadBalancerActivation {
        return new CloudletsApplicationLoadBalancerActivation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/cloudletsApplicationLoadBalancerActivation:CloudletsApplicationLoadBalancerActivation';

    /**
     * Returns true if the given object is an instance of CloudletsApplicationLoadBalancerActivation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudletsApplicationLoadBalancerActivation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudletsApplicationLoadBalancerActivation.__pulumiType;
    }

    /**
     * The network you want to activate the policy version on, either `staging`, `stag`,  and `s` for the Staging network, or `production`, `prod`, and `p` for the Production network. All values are case insensitive.
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * The identifier of an origin that represents the data center. The Conditional Origin, which is defined in Property Manager, must have an origin type of either `CUSTOMER` or `NET_STORAGE` set in the `origin` behavior. See property rules for more information.
     */
    public readonly originId!: pulumi.Output<string>;
    /**
     * The activation status for this load balancing configuration.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The Application Load Balancer Cloudlet configuration version you want to activate.
     */
    public readonly version!: pulumi.Output<number>;

    /**
     * Create a CloudletsApplicationLoadBalancerActivation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudletsApplicationLoadBalancerActivationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudletsApplicationLoadBalancerActivationArgs | CloudletsApplicationLoadBalancerActivationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudletsApplicationLoadBalancerActivationState | undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["originId"] = state ? state.originId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CloudletsApplicationLoadBalancerActivationArgs | undefined;
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if ((!args || args.originId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originId'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["originId"] = args ? args.originId : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudletsApplicationLoadBalancerActivation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudletsApplicationLoadBalancerActivation resources.
 */
export interface CloudletsApplicationLoadBalancerActivationState {
    /**
     * The network you want to activate the policy version on, either `staging`, `stag`,  and `s` for the Staging network, or `production`, `prod`, and `p` for the Production network. All values are case insensitive.
     */
    network?: pulumi.Input<string>;
    /**
     * The identifier of an origin that represents the data center. The Conditional Origin, which is defined in Property Manager, must have an origin type of either `CUSTOMER` or `NET_STORAGE` set in the `origin` behavior. See property rules for more information.
     */
    originId?: pulumi.Input<string>;
    /**
     * The activation status for this load balancing configuration.
     */
    status?: pulumi.Input<string>;
    /**
     * The Application Load Balancer Cloudlet configuration version you want to activate.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CloudletsApplicationLoadBalancerActivation resource.
 */
export interface CloudletsApplicationLoadBalancerActivationArgs {
    /**
     * The network you want to activate the policy version on, either `staging`, `stag`,  and `s` for the Staging network, or `production`, `prod`, and `p` for the Production network. All values are case insensitive.
     */
    network: pulumi.Input<string>;
    /**
     * The identifier of an origin that represents the data center. The Conditional Origin, which is defined in Property Manager, must have an origin type of either `CUSTOMER` or `NET_STORAGE` set in the `origin` behavior. See property rules for more information.
     */
    originId: pulumi.Input<string>;
    /**
     * The Application Load Balancer Cloudlet configuration version you want to activate.
     */
    version: pulumi.Input<number>;
}
