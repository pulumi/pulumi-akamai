// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AppsecSecurityPolicyDefaultProtections extends pulumi.CustomResource {
    /**
     * Get an existing AppsecSecurityPolicyDefaultProtections resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppsecSecurityPolicyDefaultProtectionsState, opts?: pulumi.CustomResourceOptions): AppsecSecurityPolicyDefaultProtections {
        return new AppsecSecurityPolicyDefaultProtections(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appsecSecurityPolicyDefaultProtections:AppsecSecurityPolicyDefaultProtections';

    /**
     * Returns true if the given object is an instance of AppsecSecurityPolicyDefaultProtections.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppsecSecurityPolicyDefaultProtections {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppsecSecurityPolicyDefaultProtections.__pulumiType;
    }

    /**
     * Unique identifier of the security configuration
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * Unique identifier of the new security policy
     */
    public /*out*/ readonly securityPolicyId!: pulumi.Output<string>;
    /**
     * Name of the new security policy
     */
    public readonly securityPolicyName!: pulumi.Output<string>;
    /**
     * Four-character alphanumeric string prefix used in creating the security policy ID
     */
    public readonly securityPolicyPrefix!: pulumi.Output<string>;

    /**
     * Create a AppsecSecurityPolicyDefaultProtections resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppsecSecurityPolicyDefaultProtectionsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppsecSecurityPolicyDefaultProtectionsArgs | AppsecSecurityPolicyDefaultProtectionsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppsecSecurityPolicyDefaultProtectionsState | undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["securityPolicyId"] = state ? state.securityPolicyId : undefined;
            resourceInputs["securityPolicyName"] = state ? state.securityPolicyName : undefined;
            resourceInputs["securityPolicyPrefix"] = state ? state.securityPolicyPrefix : undefined;
        } else {
            const args = argsOrState as AppsecSecurityPolicyDefaultProtectionsArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.securityPolicyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicyName'");
            }
            if ((!args || args.securityPolicyPrefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicyPrefix'");
            }
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["securityPolicyName"] = args ? args.securityPolicyName : undefined;
            resourceInputs["securityPolicyPrefix"] = args ? args.securityPolicyPrefix : undefined;
            resourceInputs["securityPolicyId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppsecSecurityPolicyDefaultProtections.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppsecSecurityPolicyDefaultProtections resources.
 */
export interface AppsecSecurityPolicyDefaultProtectionsState {
    /**
     * Unique identifier of the security configuration
     */
    configId?: pulumi.Input<number>;
    /**
     * Unique identifier of the new security policy
     */
    securityPolicyId?: pulumi.Input<string>;
    /**
     * Name of the new security policy
     */
    securityPolicyName?: pulumi.Input<string>;
    /**
     * Four-character alphanumeric string prefix used in creating the security policy ID
     */
    securityPolicyPrefix?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppsecSecurityPolicyDefaultProtections resource.
 */
export interface AppsecSecurityPolicyDefaultProtectionsArgs {
    /**
     * Unique identifier of the security configuration
     */
    configId: pulumi.Input<number>;
    /**
     * Name of the new security policy
     */
    securityPolicyName: pulumi.Input<string>;
    /**
     * Four-character alphanumeric string prefix used in creating the security policy ID
     */
    securityPolicyPrefix: pulumi.Input<string>;
}
