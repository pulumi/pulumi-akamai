// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    /// <summary>
    /// Use the `akamai.PropertyInclude` resource to create an include and its rule tree.
    /// 
    /// ## Basic usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myExample = new Akamai.PropertyInclude("myExample", new()
    ///     {
    ///         ContractId = "ctr_1-AB123",
    ///         GroupId = "grp_12345",
    ///         ProductId = "prd_123456",
    ///         RuleFormat = "v2022-10-18",
    ///         Type = "MICROSERVICES",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Attributes reference
    /// 
    /// This resource returns these attributes:
    /// 
    /// * `rule_errors` - Rule's validation errors. You need to resolve returned errors, as they block an activation.
    /// * `rule_warnings` - Rule's validation warnings. You can activate a version that yields less severe warnings.
    /// * `latest_version` - Returns the most recent version of the include.
    /// * `staging_version` - The include version currently activated on the staging network.
    /// * `production_version` - The include version currently activated on the production network.
    /// </summary>
    [AkamaiResourceType("akamai:index/propertyInclude:PropertyInclude")]
    public partial class PropertyInclude : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Required) A contract's unique ID, including the optional `ctr_` prefix.
        /// </summary>
        [Output("contractId")]
        public Output<string> ContractId { get; private set; } = null!;

        /// <summary>
        /// (Required) A group's unique ID, including the optional `grp_` prefix.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// Specifies the most recent version of the include
        /// </summary>
        [Output("latestVersion")]
        public Output<int> LatestVersion { get; private set; } = null!;

        /// <summary>
        /// (Required) The descriptive name for the include.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The product assigned to the include
        /// </summary>
        [Output("productId")]
        public Output<string?> ProductId { get; private set; } = null!;

        /// <summary>
        /// The most recent version to be activated to the production network
        /// </summary>
        [Output("productionVersion")]
        public Output<string> ProductionVersion { get; private set; } = null!;

        /// <summary>
        /// Rule validation errors
        /// </summary>
        [Output("ruleErrors")]
        public Output<string> RuleErrors { get; private set; } = null!;

        /// <summary>
        /// (Required) Indicates the versioned set of features and criteria. See [Rule format schemas](https://techdocs.akamai.com/property-mgr/reference/rule-format-schemas) to learn more.
        /// </summary>
        [Output("ruleFormat")]
        public Output<string> RuleFormat { get; private set; } = null!;

        /// <summary>
        /// Rule validation warnings
        /// </summary>
        [Output("ruleWarnings")]
        public Output<string> RuleWarnings { get; private set; } = null!;

        /// <summary>
        /// (Optional) Include's rules as JSON.
        /// </summary>
        [Output("rules")]
        public Output<string> Rules { get; private set; } = null!;

        /// <summary>
        /// The most recent version to be activated to the staging network
        /// </summary>
        [Output("stagingVersion")]
        public Output<string> StagingVersion { get; private set; } = null!;

        /// <summary>
        /// (Required) Specifies the type of the include, either `MICROSERVICES` or `COMMON_SETTINGS`. Use this field for filtering. `MICROSERVICES` allow different teams to work independently on different parts of a single site. `COMMON_SETTINGS` includes are useful for configurations that share a large number of settings, often managed by a central team.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a PropertyInclude resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PropertyInclude(string name, PropertyIncludeArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/propertyInclude:PropertyInclude", name, args ?? new PropertyIncludeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PropertyInclude(string name, Input<string> id, PropertyIncludeState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/propertyInclude:PropertyInclude", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PropertyInclude resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PropertyInclude Get(string name, Input<string> id, PropertyIncludeState? state = null, CustomResourceOptions? options = null)
        {
            return new PropertyInclude(name, id, state, options);
        }
    }

    public sealed class PropertyIncludeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Required) A contract's unique ID, including the optional `ctr_` prefix.
        /// </summary>
        [Input("contractId", required: true)]
        public Input<string> ContractId { get; set; } = null!;

        /// <summary>
        /// (Required) A group's unique ID, including the optional `grp_` prefix.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// (Required) The descriptive name for the include.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The product assigned to the include
        /// </summary>
        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        /// <summary>
        /// (Required) Indicates the versioned set of features and criteria. See [Rule format schemas](https://techdocs.akamai.com/property-mgr/reference/rule-format-schemas) to learn more.
        /// </summary>
        [Input("ruleFormat", required: true)]
        public Input<string> RuleFormat { get; set; } = null!;

        /// <summary>
        /// (Optional) Include's rules as JSON.
        /// </summary>
        [Input("rules")]
        public Input<string>? Rules { get; set; }

        /// <summary>
        /// (Required) Specifies the type of the include, either `MICROSERVICES` or `COMMON_SETTINGS`. Use this field for filtering. `MICROSERVICES` allow different teams to work independently on different parts of a single site. `COMMON_SETTINGS` includes are useful for configurations that share a large number of settings, often managed by a central team.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public PropertyIncludeArgs()
        {
        }
        public static new PropertyIncludeArgs Empty => new PropertyIncludeArgs();
    }

    public sealed class PropertyIncludeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Required) A contract's unique ID, including the optional `ctr_` prefix.
        /// </summary>
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        /// <summary>
        /// (Required) A group's unique ID, including the optional `grp_` prefix.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// Specifies the most recent version of the include
        /// </summary>
        [Input("latestVersion")]
        public Input<int>? LatestVersion { get; set; }

        /// <summary>
        /// (Required) The descriptive name for the include.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The product assigned to the include
        /// </summary>
        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        /// <summary>
        /// The most recent version to be activated to the production network
        /// </summary>
        [Input("productionVersion")]
        public Input<string>? ProductionVersion { get; set; }

        /// <summary>
        /// Rule validation errors
        /// </summary>
        [Input("ruleErrors")]
        public Input<string>? RuleErrors { get; set; }

        /// <summary>
        /// (Required) Indicates the versioned set of features and criteria. See [Rule format schemas](https://techdocs.akamai.com/property-mgr/reference/rule-format-schemas) to learn more.
        /// </summary>
        [Input("ruleFormat")]
        public Input<string>? RuleFormat { get; set; }

        /// <summary>
        /// Rule validation warnings
        /// </summary>
        [Input("ruleWarnings")]
        public Input<string>? RuleWarnings { get; set; }

        /// <summary>
        /// (Optional) Include's rules as JSON.
        /// </summary>
        [Input("rules")]
        public Input<string>? Rules { get; set; }

        /// <summary>
        /// The most recent version to be activated to the staging network
        /// </summary>
        [Input("stagingVersion")]
        public Input<string>? StagingVersion { get; set; }

        /// <summary>
        /// (Required) Specifies the type of the include, either `MICROSERVICES` or `COMMON_SETTINGS`. Use this field for filtering. `MICROSERVICES` allow different teams to work independently on different parts of a single site. `COMMON_SETTINGS` includes are useful for configurations that share a large number of settings, often managed by a central team.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public PropertyIncludeState()
        {
        }
        public static new PropertyIncludeState Empty => new PropertyIncludeState();
    }
}
