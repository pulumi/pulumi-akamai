// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetIamAccountSwitchKeys
    {
        public static Task<GetIamAccountSwitchKeysResult> InvokeAsync(GetIamAccountSwitchKeysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIamAccountSwitchKeysResult>("akamai:index/getIamAccountSwitchKeys:getIamAccountSwitchKeys", args ?? new GetIamAccountSwitchKeysArgs(), options.WithDefaults());

        public static Output<GetIamAccountSwitchKeysResult> Invoke(GetIamAccountSwitchKeysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamAccountSwitchKeysResult>("akamai:index/getIamAccountSwitchKeys:getIamAccountSwitchKeys", args ?? new GetIamAccountSwitchKeysInvokeArgs(), options.WithDefaults());

        public static Output<GetIamAccountSwitchKeysResult> Invoke(GetIamAccountSwitchKeysInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamAccountSwitchKeysResult>("akamai:index/getIamAccountSwitchKeys:getIamAccountSwitchKeys", args ?? new GetIamAccountSwitchKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIamAccountSwitchKeysArgs : global::Pulumi.InvokeArgs
    {
        [Input("clientId")]
        public string? ClientId { get; set; }

        [Input("filter")]
        public string? Filter { get; set; }

        public GetIamAccountSwitchKeysArgs()
        {
        }
        public static new GetIamAccountSwitchKeysArgs Empty => new GetIamAccountSwitchKeysArgs();
    }

    public sealed class GetIamAccountSwitchKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("filter")]
        public Input<string>? Filter { get; set; }

        public GetIamAccountSwitchKeysInvokeArgs()
        {
        }
        public static new GetIamAccountSwitchKeysInvokeArgs Empty => new GetIamAccountSwitchKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetIamAccountSwitchKeysResult
    {
        public readonly ImmutableArray<Outputs.GetIamAccountSwitchKeysAccountSwitchKeyResult> AccountSwitchKeys;
        public readonly string? ClientId;
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetIamAccountSwitchKeysResult(
            ImmutableArray<Outputs.GetIamAccountSwitchKeysAccountSwitchKeyResult> accountSwitchKeys,

            string? clientId,

            string? filter,

            string id)
        {
            AccountSwitchKeys = accountSwitchKeys;
            ClientId = clientId;
            Filter = filter;
            Id = id;
        }
    }
}
