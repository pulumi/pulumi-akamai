// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetAppSecReputationProfiles
    {
        /// <summary>
        /// **Scopes**: Security configuration; reputation profile
        /// 
        /// Returns information about your reputation profiles. Reputation profiles grade the security risk of an IP address based on previous activities associated with that address. Depending on the reputation score, and depending on how your configuration has been set up, requests from a specific IP address can trigger an alert, or even be blocked.
        /// 
        /// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/reputation-profiles](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getreputationprofiles)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
        ///         {
        ///             Name = "Documentation",
        ///         }));
        ///         var reputationProfiles = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///         })));
        ///         this.ReputationProfilesOutput = reputationProfiles.Apply(reputationProfiles =&gt; reputationProfiles.OutputText);
        ///         this.ReputationProfilesJson = reputationProfiles.Apply(reputationProfiles =&gt; reputationProfiles.Json);
        ///         var reputationProfile = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///             ReputationProfileId = 12345,
        ///         })));
        ///         this.ReputationProfileJson = reputationProfile.Apply(reputationProfile =&gt; reputationProfile.Json);
        ///         this.ReputationProfileOutput = reputationProfile.Apply(reputationProfile =&gt; reputationProfile.OutputText);
        ///     }
        /// 
        ///     [Output("reputationProfilesOutput")]
        ///     public Output&lt;string&gt; ReputationProfilesOutput { get; set; }
        ///     [Output("reputationProfilesJson")]
        ///     public Output&lt;string&gt; ReputationProfilesJson { get; set; }
        ///     [Output("reputationProfileJson")]
        ///     public Output&lt;string&gt; ReputationProfileJson { get; set; }
        ///     [Output("reputationProfileOutput")]
        ///     public Output&lt;string&gt; ReputationProfileOutput { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Output Options
        /// 
        /// The following options can be used to determine the information returned, and how that returned information is formatted:
        /// 
        /// - `output_text`. Tabular report of the details about the specified reputation profile or profiles.
        /// - `json`. JSON-formatted report of the details about the specified reputation profile or profiles.
        /// </summary>
        public static Task<GetAppSecReputationProfilesResult> InvokeAsync(GetAppSecReputationProfilesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAppSecReputationProfilesResult>("akamai:index/getAppSecReputationProfiles:getAppSecReputationProfiles", args ?? new GetAppSecReputationProfilesArgs(), options.WithDefaults());

        /// <summary>
        /// **Scopes**: Security configuration; reputation profile
        /// 
        /// Returns information about your reputation profiles. Reputation profiles grade the security risk of an IP address based on previous activities associated with that address. Depending on the reputation score, and depending on how your configuration has been set up, requests from a specific IP address can trigger an alert, or even be blocked.
        /// 
        /// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/reputation-profiles](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getreputationprofiles)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
        ///         {
        ///             Name = "Documentation",
        ///         }));
        ///         var reputationProfiles = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///         })));
        ///         this.ReputationProfilesOutput = reputationProfiles.Apply(reputationProfiles =&gt; reputationProfiles.OutputText);
        ///         this.ReputationProfilesJson = reputationProfiles.Apply(reputationProfiles =&gt; reputationProfiles.Json);
        ///         var reputationProfile = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///             ReputationProfileId = 12345,
        ///         })));
        ///         this.ReputationProfileJson = reputationProfile.Apply(reputationProfile =&gt; reputationProfile.Json);
        ///         this.ReputationProfileOutput = reputationProfile.Apply(reputationProfile =&gt; reputationProfile.OutputText);
        ///     }
        /// 
        ///     [Output("reputationProfilesOutput")]
        ///     public Output&lt;string&gt; ReputationProfilesOutput { get; set; }
        ///     [Output("reputationProfilesJson")]
        ///     public Output&lt;string&gt; ReputationProfilesJson { get; set; }
        ///     [Output("reputationProfileJson")]
        ///     public Output&lt;string&gt; ReputationProfileJson { get; set; }
        ///     [Output("reputationProfileOutput")]
        ///     public Output&lt;string&gt; ReputationProfileOutput { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Output Options
        /// 
        /// The following options can be used to determine the information returned, and how that returned information is formatted:
        /// 
        /// - `output_text`. Tabular report of the details about the specified reputation profile or profiles.
        /// - `json`. JSON-formatted report of the details about the specified reputation profile or profiles.
        /// </summary>
        public static Output<GetAppSecReputationProfilesResult> Invoke(GetAppSecReputationProfilesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAppSecReputationProfilesResult>("akamai:index/getAppSecReputationProfiles:getAppSecReputationProfiles", args ?? new GetAppSecReputationProfilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppSecReputationProfilesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the reputation profiles.
        /// </summary>
        [Input("configId", required: true)]
        public int ConfigId { get; set; }

        /// <summary>
        /// . Unique identifier of the reputation profile you want to return information for. If not included, information is returned for all your reputation profiles.
        /// </summary>
        [Input("reputationProfileId")]
        public int? ReputationProfileId { get; set; }

        public GetAppSecReputationProfilesArgs()
        {
        }
    }

    public sealed class GetAppSecReputationProfilesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the reputation profiles.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// . Unique identifier of the reputation profile you want to return information for. If not included, information is returned for all your reputation profiles.
        /// </summary>
        [Input("reputationProfileId")]
        public Input<int>? ReputationProfileId { get; set; }

        public GetAppSecReputationProfilesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAppSecReputationProfilesResult
    {
        public readonly int ConfigId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly string OutputText;
        public readonly int? ReputationProfileId;

        [OutputConstructor]
        private GetAppSecReputationProfilesResult(
            int configId,

            string id,

            string json,

            string outputText,

            int? reputationProfileId)
        {
            ConfigId = configId;
            Id = id;
            Json = json;
            OutputText = outputText;
            ReputationProfileId = reputationProfileId;
        }
    }
}
