// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetCpCode
    {
        /// <summary>
        /// Use the `akamai.CpCode` data source to retrieve the ID for a content provider (CP) code.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Akamai.GetCpCode.InvokeAsync(new Akamai.GetCpCodeArgs
        ///         {
        ///             ContractId = "ctr_1-AB123",
        ///             GroupId = "grp_123",
        ///             Name = "my cpcode name",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// Here's a real-world example that includes other data sources as dependencies:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var groupName = "example group name";
        ///         var cpcodeName = "My CP code Name";
        ///         var exampleContract = Output.Create(Akamai.GetContract.InvokeAsync(new Akamai.GetContractArgs
        ///         {
        ///             GroupName = groupName,
        ///         }));
        ///         var exampleGroup = exampleContract.Apply(exampleContract =&gt; Output.Create(Akamai.GetGroup.InvokeAsync(new Akamai.GetGroupArgs
        ///         {
        ///             GroupName = groupName,
        ///             ContractId = exampleContract.Id,
        ///         })));
        ///         var exampleCpCode = Output.Tuple(exampleGroup, exampleContract).Apply(values =&gt;
        ///         {
        ///             var exampleGroup = values.Item1;
        ///             var exampleContract = values.Item2;
        ///             return Output.Create(Akamai.GetCpCode.InvokeAsync(new Akamai.GetCpCodeArgs
        ///             {
        ///                 Name = cpcodeName,
        ///                 GroupId = exampleGroup.Id,
        ///                 ContractId = exampleContract.Id,
        ///             }));
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference
        /// 
        /// This data source returns these attributes:
        /// 
        /// * `id` - The ID of the CP code, including the `cpc_` prefix.
        /// * `product_ids` - An array of product IDs associated with this CP code. Each ID returned includes the `prd_` prefix.
        /// </summary>
        public static Task<GetCpCodeResult> InvokeAsync(GetCpCodeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCpCodeResult>("akamai:index/getCpCode:getCpCode", args ?? new GetCpCodeArgs(), options.WithDefaults());

        /// <summary>
        /// Use the `akamai.CpCode` data source to retrieve the ID for a content provider (CP) code.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Akamai.GetCpCode.InvokeAsync(new Akamai.GetCpCodeArgs
        ///         {
        ///             ContractId = "ctr_1-AB123",
        ///             GroupId = "grp_123",
        ///             Name = "my cpcode name",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// Here's a real-world example that includes other data sources as dependencies:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var groupName = "example group name";
        ///         var cpcodeName = "My CP code Name";
        ///         var exampleContract = Output.Create(Akamai.GetContract.InvokeAsync(new Akamai.GetContractArgs
        ///         {
        ///             GroupName = groupName,
        ///         }));
        ///         var exampleGroup = exampleContract.Apply(exampleContract =&gt; Output.Create(Akamai.GetGroup.InvokeAsync(new Akamai.GetGroupArgs
        ///         {
        ///             GroupName = groupName,
        ///             ContractId = exampleContract.Id,
        ///         })));
        ///         var exampleCpCode = Output.Tuple(exampleGroup, exampleContract).Apply(values =&gt;
        ///         {
        ///             var exampleGroup = values.Item1;
        ///             var exampleContract = values.Item2;
        ///             return Output.Create(Akamai.GetCpCode.InvokeAsync(new Akamai.GetCpCodeArgs
        ///             {
        ///                 Name = cpcodeName,
        ///                 GroupId = exampleGroup.Id,
        ///                 ContractId = exampleContract.Id,
        ///             }));
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference
        /// 
        /// This data source returns these attributes:
        /// 
        /// * `id` - The ID of the CP code, including the `cpc_` prefix.
        /// * `product_ids` - An array of product IDs associated with this CP code. Each ID returned includes the `prd_` prefix.
        /// </summary>
        public static Output<GetCpCodeResult> Invoke(GetCpCodeInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCpCodeResult>("akamai:index/getCpCode:getCpCode", args ?? new GetCpCodeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCpCodeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Replaced by `contract_id`. Maintained for legacy purposes.
        /// </summary>
        [Input("contract")]
        public string? Contract { get; set; }

        /// <summary>
        /// - (Required) A contract's unique ID, including the `ctr_` prefix.
        /// </summary>
        [Input("contractId")]
        public string? ContractId { get; set; }

        /// <summary>
        /// Replaced by `group_id`. Maintained for legacy purposes.
        /// </summary>
        [Input("group")]
        public string? Group { get; set; }

        /// <summary>
        /// The group's unique ID, including the `grp_` prefix.
        /// </summary>
        [Input("groupId")]
        public string? GroupId { get; set; }

        /// <summary>
        /// The name of the CP code.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetCpCodeArgs()
        {
        }
    }

    public sealed class GetCpCodeInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Replaced by `contract_id`. Maintained for legacy purposes.
        /// </summary>
        [Input("contract")]
        public Input<string>? Contract { get; set; }

        /// <summary>
        /// - (Required) A contract's unique ID, including the `ctr_` prefix.
        /// </summary>
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        /// <summary>
        /// Replaced by `group_id`. Maintained for legacy purposes.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// The group's unique ID, including the `grp_` prefix.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The name of the CP code.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetCpCodeInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCpCodeResult
    {
        public readonly string Contract;
        public readonly string ContractId;
        public readonly string Group;
        public readonly string GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly ImmutableArray<string> ProductIds;

        [OutputConstructor]
        private GetCpCodeResult(
            string contract,

            string contractId,

            string group,

            string groupId,

            string id,

            string name,

            ImmutableArray<string> productIds)
        {
            Contract = contract;
            ContractId = contractId;
            Group = group;
            GroupId = groupId;
            Id = id;
            Name = name;
            ProductIds = productIds;
        }
    }
}
