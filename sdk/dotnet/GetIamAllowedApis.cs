// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetIamAllowedApis
    {
        public static Task<GetIamAllowedApisResult> InvokeAsync(GetIamAllowedApisArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIamAllowedApisResult>("akamai:index/getIamAllowedApis:getIamAllowedApis", args ?? new GetIamAllowedApisArgs(), options.WithDefaults());

        public static Output<GetIamAllowedApisResult> Invoke(GetIamAllowedApisInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamAllowedApisResult>("akamai:index/getIamAllowedApis:getIamAllowedApis", args ?? new GetIamAllowedApisInvokeArgs(), options.WithDefaults());

        public static Output<GetIamAllowedApisResult> Invoke(GetIamAllowedApisInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamAllowedApisResult>("akamai:index/getIamAllowedApis:getIamAllowedApis", args ?? new GetIamAllowedApisInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIamAllowedApisArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowAccountSwitch")]
        public bool? AllowAccountSwitch { get; set; }

        [Input("clientType")]
        public string? ClientType { get; set; }

        [Input("username", required: true)]
        public string Username { get; set; } = null!;

        public GetIamAllowedApisArgs()
        {
        }
        public static new GetIamAllowedApisArgs Empty => new GetIamAllowedApisArgs();
    }

    public sealed class GetIamAllowedApisInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowAccountSwitch")]
        public Input<bool>? AllowAccountSwitch { get; set; }

        [Input("clientType")]
        public Input<string>? ClientType { get; set; }

        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public GetIamAllowedApisInvokeArgs()
        {
        }
        public static new GetIamAllowedApisInvokeArgs Empty => new GetIamAllowedApisInvokeArgs();
    }


    [OutputType]
    public sealed class GetIamAllowedApisResult
    {
        public readonly bool? AllowAccountSwitch;
        public readonly ImmutableArray<Outputs.GetIamAllowedApisAllowedApiResult> AllowedApis;
        public readonly string? ClientType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Username;

        [OutputConstructor]
        private GetIamAllowedApisResult(
            bool? allowAccountSwitch,

            ImmutableArray<Outputs.GetIamAllowedApisAllowedApiResult> allowedApis,

            string? clientType,

            string id,

            string username)
        {
            AllowAccountSwitch = allowAccountSwitch;
            AllowedApis = allowedApis;
            ClientType = clientType;
            Id = id;
            Username = username;
        }
    }
}
