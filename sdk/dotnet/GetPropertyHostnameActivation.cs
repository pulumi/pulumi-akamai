// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetPropertyHostnameActivation
    {
        public static Task<GetPropertyHostnameActivationResult> InvokeAsync(GetPropertyHostnameActivationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPropertyHostnameActivationResult>("akamai:index/getPropertyHostnameActivation:getPropertyHostnameActivation", args ?? new GetPropertyHostnameActivationArgs(), options.WithDefaults());

        public static Output<GetPropertyHostnameActivationResult> Invoke(GetPropertyHostnameActivationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPropertyHostnameActivationResult>("akamai:index/getPropertyHostnameActivation:getPropertyHostnameActivation", args ?? new GetPropertyHostnameActivationInvokeArgs(), options.WithDefaults());

        public static Output<GetPropertyHostnameActivationResult> Invoke(GetPropertyHostnameActivationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPropertyHostnameActivationResult>("akamai:index/getPropertyHostnameActivation:getPropertyHostnameActivation", args ?? new GetPropertyHostnameActivationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPropertyHostnameActivationArgs : global::Pulumi.InvokeArgs
    {
        [Input("contractId")]
        public string? ContractId { get; set; }

        [Input("groupId")]
        public string? GroupId { get; set; }

        [Input("hostnameActivationId", required: true)]
        public string HostnameActivationId { get; set; } = null!;

        [Input("includeHostnames")]
        public bool? IncludeHostnames { get; set; }

        [Input("propertyId", required: true)]
        public string PropertyId { get; set; } = null!;

        public GetPropertyHostnameActivationArgs()
        {
        }
        public static new GetPropertyHostnameActivationArgs Empty => new GetPropertyHostnameActivationArgs();
    }

    public sealed class GetPropertyHostnameActivationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("hostnameActivationId", required: true)]
        public Input<string> HostnameActivationId { get; set; } = null!;

        [Input("includeHostnames")]
        public Input<bool>? IncludeHostnames { get; set; }

        [Input("propertyId", required: true)]
        public Input<string> PropertyId { get; set; } = null!;

        public GetPropertyHostnameActivationInvokeArgs()
        {
        }
        public static new GetPropertyHostnameActivationInvokeArgs Empty => new GetPropertyHostnameActivationInvokeArgs();
    }


    [OutputType]
    public sealed class GetPropertyHostnameActivationResult
    {
        public readonly string AccountId;
        public readonly string ActivationType;
        public readonly string ContractId;
        public readonly string GroupId;
        public readonly string HostnameActivationId;
        public readonly ImmutableArray<Outputs.GetPropertyHostnameActivationHostnameResult> Hostnames;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludeHostnames;
        public readonly string Network;
        public readonly string Note;
        public readonly ImmutableArray<string> NotifyEmails;
        public readonly string PropertyId;
        public readonly string PropertyName;
        public readonly string Status;
        public readonly string SubmitDate;
        public readonly string UpdateDate;

        [OutputConstructor]
        private GetPropertyHostnameActivationResult(
            string accountId,

            string activationType,

            string contractId,

            string groupId,

            string hostnameActivationId,

            ImmutableArray<Outputs.GetPropertyHostnameActivationHostnameResult> hostnames,

            string id,

            bool? includeHostnames,

            string network,

            string note,

            ImmutableArray<string> notifyEmails,

            string propertyId,

            string propertyName,

            string status,

            string submitDate,

            string updateDate)
        {
            AccountId = accountId;
            ActivationType = activationType;
            ContractId = contractId;
            GroupId = groupId;
            HostnameActivationId = hostnameActivationId;
            Hostnames = hostnames;
            Id = id;
            IncludeHostnames = includeHostnames;
            Network = network;
            Note = note;
            NotifyEmails = notifyEmails;
            PropertyId = propertyId;
            PropertyName = propertyName;
            Status = status;
            SubmitDate = submitDate;
            UpdateDate = updateDate;
        }
    }
}
