// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetCloudletsPolicy
    {
        public static Task<GetCloudletsPolicyResult> InvokeAsync(GetCloudletsPolicyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudletsPolicyResult>("akamai:index/getCloudletsPolicy:getCloudletsPolicy", args ?? new GetCloudletsPolicyArgs(), options.WithDefaults());

        public static Output<GetCloudletsPolicyResult> Invoke(GetCloudletsPolicyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudletsPolicyResult>("akamai:index/getCloudletsPolicy:getCloudletsPolicy", args ?? new GetCloudletsPolicyInvokeArgs(), options.WithDefaults());

        public static Output<GetCloudletsPolicyResult> Invoke(GetCloudletsPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudletsPolicyResult>("akamai:index/getCloudletsPolicy:getCloudletsPolicy", args ?? new GetCloudletsPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudletsPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public string? Name { get; set; }

        [Input("policyId")]
        public int? PolicyId { get; set; }

        [Input("version")]
        public int? Version { get; set; }

        public GetCloudletsPolicyArgs()
        {
        }
        public static new GetCloudletsPolicyArgs Empty => new GetCloudletsPolicyArgs();
    }

    public sealed class GetCloudletsPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("policyId")]
        public Input<int>? PolicyId { get; set; }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public GetCloudletsPolicyInvokeArgs()
        {
        }
        public static new GetCloudletsPolicyInvokeArgs Empty => new GetCloudletsPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudletsPolicyResult
    {
        public readonly ImmutableArray<Outputs.GetCloudletsPolicyActivationResult> Activations;
        public readonly string ApiVersion;
        public readonly string CloudletCode;
        public readonly int CloudletId;
        public readonly string Description;
        public readonly int GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string MatchRuleFormat;
        public readonly string MatchRules;
        public readonly string Name;
        public readonly int PolicyId;
        public readonly int RevisionId;
        public readonly bool RulesLocked;
        public readonly int? Version;
        public readonly string VersionDescription;
        public readonly string Warnings;

        [OutputConstructor]
        private GetCloudletsPolicyResult(
            ImmutableArray<Outputs.GetCloudletsPolicyActivationResult> activations,

            string apiVersion,

            string cloudletCode,

            int cloudletId,

            string description,

            int groupId,

            string id,

            string matchRuleFormat,

            string matchRules,

            string name,

            int policyId,

            int revisionId,

            bool rulesLocked,

            int? version,

            string versionDescription,

            string warnings)
        {
            Activations = activations;
            ApiVersion = apiVersion;
            CloudletCode = cloudletCode;
            CloudletId = cloudletId;
            Description = description;
            GroupId = groupId;
            Id = id;
            MatchRuleFormat = matchRuleFormat;
            MatchRules = matchRules;
            Name = name;
            PolicyId = policyId;
            RevisionId = revisionId;
            RulesLocked = rulesLocked;
            Version = version;
            VersionDescription = versionDescription;
            Warnings = warnings;
        }
    }
}
