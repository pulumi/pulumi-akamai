// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/appSecWafMode:AppSecWafMode")]
    public partial class AppSecWafMode : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Unique identifier of the security configuration
        /// </summary>
        [Output("configId")]
        public Output<int> ConfigId { get; private set; } = null!;

        /// <summary>
        /// Versioning information for the current Kona Rule Set
        /// </summary>
        [Output("currentRuleset")]
        public Output<string> CurrentRuleset { get; private set; } = null!;

        /// <summary>
        /// Date on which the evaluation period ends, if applicable
        /// </summary>
        [Output("evalExpirationDate")]
        public Output<string> EvalExpirationDate { get; private set; } = null!;

        /// <summary>
        /// Versioning information for the Kona Rule Set being evaluated, if applicable
        /// </summary>
        [Output("evalRuleset")]
        public Output<string> EvalRuleset { get; private set; } = null!;

        /// <summary>
        /// Whether an evaluation is currently in progress
        /// </summary>
        [Output("evalStatus")]
        public Output<string> EvalStatus { get; private set; } = null!;

        /// <summary>
        /// How Kona Rule Set rules should be upgraded (KRS, AAG, ASE_MANUAL or ASE_AUTO)
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// Text representation
        /// </summary>
        [Output("outputText")]
        public Output<string> OutputText { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the security policy
        /// </summary>
        [Output("securityPolicyId")]
        public Output<string> SecurityPolicyId { get; private set; } = null!;


        /// <summary>
        /// Create a AppSecWafMode resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppSecWafMode(string name, AppSecWafModeArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/appSecWafMode:AppSecWafMode", name, args ?? new AppSecWafModeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppSecWafMode(string name, Input<string> id, AppSecWafModeState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/appSecWafMode:AppSecWafMode", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppSecWafMode resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppSecWafMode Get(string name, Input<string> id, AppSecWafModeState? state = null, CustomResourceOptions? options = null)
        {
            return new AppSecWafMode(name, id, state, options);
        }
    }

    public sealed class AppSecWafModeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique identifier of the security configuration
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// How Kona Rule Set rules should be upgraded (KRS, AAG, ASE_MANUAL or ASE_AUTO)
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        /// <summary>
        /// Unique identifier of the security policy
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public Input<string> SecurityPolicyId { get; set; } = null!;

        public AppSecWafModeArgs()
        {
        }
        public static new AppSecWafModeArgs Empty => new AppSecWafModeArgs();
    }

    public sealed class AppSecWafModeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique identifier of the security configuration
        /// </summary>
        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        /// <summary>
        /// Versioning information for the current Kona Rule Set
        /// </summary>
        [Input("currentRuleset")]
        public Input<string>? CurrentRuleset { get; set; }

        /// <summary>
        /// Date on which the evaluation period ends, if applicable
        /// </summary>
        [Input("evalExpirationDate")]
        public Input<string>? EvalExpirationDate { get; set; }

        /// <summary>
        /// Versioning information for the Kona Rule Set being evaluated, if applicable
        /// </summary>
        [Input("evalRuleset")]
        public Input<string>? EvalRuleset { get; set; }

        /// <summary>
        /// Whether an evaluation is currently in progress
        /// </summary>
        [Input("evalStatus")]
        public Input<string>? EvalStatus { get; set; }

        /// <summary>
        /// How Kona Rule Set rules should be upgraded (KRS, AAG, ASE_MANUAL or ASE_AUTO)
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Text representation
        /// </summary>
        [Input("outputText")]
        public Input<string>? OutputText { get; set; }

        /// <summary>
        /// Unique identifier of the security policy
        /// </summary>
        [Input("securityPolicyId")]
        public Input<string>? SecurityPolicyId { get; set; }

        public AppSecWafModeState()
        {
        }
        public static new AppSecWafModeState Empty => new AppSecWafModeState();
    }
}
