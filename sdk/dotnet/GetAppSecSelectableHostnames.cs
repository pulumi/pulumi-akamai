// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetAppSecSelectableHostnames
    {
        public static Task<GetAppSecSelectableHostnamesResult> InvokeAsync(GetAppSecSelectableHostnamesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppSecSelectableHostnamesResult>("akamai:index/getAppSecSelectableHostnames:getAppSecSelectableHostnames", args ?? new GetAppSecSelectableHostnamesArgs(), options.WithDefaults());

        public static Output<GetAppSecSelectableHostnamesResult> Invoke(GetAppSecSelectableHostnamesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppSecSelectableHostnamesResult>("akamai:index/getAppSecSelectableHostnames:getAppSecSelectableHostnames", args ?? new GetAppSecSelectableHostnamesInvokeArgs(), options.WithDefaults());

        public static Output<GetAppSecSelectableHostnamesResult> Invoke(GetAppSecSelectableHostnamesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppSecSelectableHostnamesResult>("akamai:index/getAppSecSelectableHostnames:getAppSecSelectableHostnames", args ?? new GetAppSecSelectableHostnamesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppSecSelectableHostnamesArgs : global::Pulumi.InvokeArgs
    {
        [Input("activeInProduction")]
        public bool? ActiveInProduction { get; set; }

        [Input("activeInStaging")]
        public bool? ActiveInStaging { get; set; }

        [Input("configId")]
        public int? ConfigId { get; set; }

        [Input("contractid")]
        public string? Contractid { get; set; }

        [Input("groupid")]
        public int? Groupid { get; set; }

        public GetAppSecSelectableHostnamesArgs()
        {
        }
        public static new GetAppSecSelectableHostnamesArgs Empty => new GetAppSecSelectableHostnamesArgs();
    }

    public sealed class GetAppSecSelectableHostnamesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("activeInProduction")]
        public Input<bool>? ActiveInProduction { get; set; }

        [Input("activeInStaging")]
        public Input<bool>? ActiveInStaging { get; set; }

        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        [Input("contractid")]
        public Input<string>? Contractid { get; set; }

        [Input("groupid")]
        public Input<int>? Groupid { get; set; }

        public GetAppSecSelectableHostnamesInvokeArgs()
        {
        }
        public static new GetAppSecSelectableHostnamesInvokeArgs Empty => new GetAppSecSelectableHostnamesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppSecSelectableHostnamesResult
    {
        public readonly bool? ActiveInProduction;
        public readonly bool? ActiveInStaging;
        public readonly int? ConfigId;
        public readonly string? Contractid;
        public readonly int? Groupid;
        public readonly ImmutableArray<string> Hostnames;
        public readonly string HostnamesJson;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string OutputText;

        [OutputConstructor]
        private GetAppSecSelectableHostnamesResult(
            bool? activeInProduction,

            bool? activeInStaging,

            int? configId,

            string? contractid,

            int? groupid,

            ImmutableArray<string> hostnames,

            string hostnamesJson,

            string id,

            string outputText)
        {
            ActiveInProduction = activeInProduction;
            ActiveInStaging = activeInStaging;
            ConfigId = configId;
            Contractid = contractid;
            Groupid = groupid;
            Hostnames = hostnames;
            HostnamesJson = hostnamesJson;
            Id = id;
            OutputText = outputText;
        }
    }
}
