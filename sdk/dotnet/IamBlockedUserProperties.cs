// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/iamBlockedUserProperties:IamBlockedUserProperties")]
    public partial class IamBlockedUserProperties : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of properties to block for a user.
        /// </summary>
        [Output("blockedProperties")]
        public Output<ImmutableArray<int>> BlockedProperties { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for a group.
        /// </summary>
        [Output("groupId")]
        public Output<int> GroupId { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.
        /// </summary>
        [Output("identityId")]
        public Output<string> IdentityId { get; private set; } = null!;


        /// <summary>
        /// Create a IamBlockedUserProperties resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamBlockedUserProperties(string name, IamBlockedUserPropertiesArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/iamBlockedUserProperties:IamBlockedUserProperties", name, args ?? new IamBlockedUserPropertiesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IamBlockedUserProperties(string name, Input<string> id, IamBlockedUserPropertiesState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/iamBlockedUserProperties:IamBlockedUserProperties", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IamBlockedUserProperties resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IamBlockedUserProperties Get(string name, Input<string> id, IamBlockedUserPropertiesState? state = null, CustomResourceOptions? options = null)
        {
            return new IamBlockedUserProperties(name, id, state, options);
        }
    }

    public sealed class IamBlockedUserPropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("blockedProperties", required: true)]
        private InputList<int>? _blockedProperties;

        /// <summary>
        /// List of properties to block for a user.
        /// </summary>
        public InputList<int> BlockedProperties
        {
            get => _blockedProperties ?? (_blockedProperties = new InputList<int>());
            set => _blockedProperties = value;
        }

        /// <summary>
        /// A unique identifier for a group.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<int> GroupId { get; set; } = null!;

        /// <summary>
        /// A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.
        /// </summary>
        [Input("identityId", required: true)]
        public Input<string> IdentityId { get; set; } = null!;

        public IamBlockedUserPropertiesArgs()
        {
        }
        public static new IamBlockedUserPropertiesArgs Empty => new IamBlockedUserPropertiesArgs();
    }

    public sealed class IamBlockedUserPropertiesState : global::Pulumi.ResourceArgs
    {
        [Input("blockedProperties")]
        private InputList<int>? _blockedProperties;

        /// <summary>
        /// List of properties to block for a user.
        /// </summary>
        public InputList<int> BlockedProperties
        {
            get => _blockedProperties ?? (_blockedProperties = new InputList<int>());
            set => _blockedProperties = value;
        }

        /// <summary>
        /// A unique identifier for a group.
        /// </summary>
        [Input("groupId")]
        public Input<int>? GroupId { get; set; }

        /// <summary>
        /// A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID.
        /// </summary>
        [Input("identityId")]
        public Input<string>? IdentityId { get; set; }

        public IamBlockedUserPropertiesState()
        {
        }
        public static new IamBlockedUserPropertiesState Empty => new IamBlockedUserPropertiesState();
    }
}
