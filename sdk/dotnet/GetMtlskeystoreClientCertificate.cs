// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetMtlskeystoreClientCertificate
    {
        public static Task<GetMtlskeystoreClientCertificateResult> InvokeAsync(GetMtlskeystoreClientCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMtlskeystoreClientCertificateResult>("akamai:index/getMtlskeystoreClientCertificate:getMtlskeystoreClientCertificate", args ?? new GetMtlskeystoreClientCertificateArgs(), options.WithDefaults());

        public static Output<GetMtlskeystoreClientCertificateResult> Invoke(GetMtlskeystoreClientCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMtlskeystoreClientCertificateResult>("akamai:index/getMtlskeystoreClientCertificate:getMtlskeystoreClientCertificate", args ?? new GetMtlskeystoreClientCertificateInvokeArgs(), options.WithDefaults());

        public static Output<GetMtlskeystoreClientCertificateResult> Invoke(GetMtlskeystoreClientCertificateInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMtlskeystoreClientCertificateResult>("akamai:index/getMtlskeystoreClientCertificate:getMtlskeystoreClientCertificate", args ?? new GetMtlskeystoreClientCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMtlskeystoreClientCertificateArgs : global::Pulumi.InvokeArgs
    {
        [Input("certificateId", required: true)]
        public int CertificateId { get; set; }

        [Input("includeAssociatedProperties")]
        public bool? IncludeAssociatedProperties { get; set; }

        public GetMtlskeystoreClientCertificateArgs()
        {
        }
        public static new GetMtlskeystoreClientCertificateArgs Empty => new GetMtlskeystoreClientCertificateArgs();
    }

    public sealed class GetMtlskeystoreClientCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("certificateId", required: true)]
        public Input<int> CertificateId { get; set; } = null!;

        [Input("includeAssociatedProperties")]
        public Input<bool>? IncludeAssociatedProperties { get; set; }

        public GetMtlskeystoreClientCertificateInvokeArgs()
        {
        }
        public static new GetMtlskeystoreClientCertificateInvokeArgs Empty => new GetMtlskeystoreClientCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetMtlskeystoreClientCertificateResult
    {
        public readonly int CertificateId;
        public readonly string CertificateName;
        public readonly string CreatedBy;
        public readonly string CreatedDate;
        public readonly Outputs.GetMtlskeystoreClientCertificateCurrentResult Current;
        public readonly string Geography;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludeAssociatedProperties;
        public readonly string KeyAlgorithm;
        public readonly ImmutableArray<string> NotificationEmails;
        public readonly Outputs.GetMtlskeystoreClientCertificatePreviousResult Previous;
        public readonly string SecureNetwork;
        public readonly string Signer;
        public readonly string Subject;
        public readonly ImmutableArray<Outputs.GetMtlskeystoreClientCertificateVersionResult> Versions;

        [OutputConstructor]
        private GetMtlskeystoreClientCertificateResult(
            int certificateId,

            string certificateName,

            string createdBy,

            string createdDate,

            Outputs.GetMtlskeystoreClientCertificateCurrentResult current,

            string geography,

            string id,

            bool? includeAssociatedProperties,

            string keyAlgorithm,

            ImmutableArray<string> notificationEmails,

            Outputs.GetMtlskeystoreClientCertificatePreviousResult previous,

            string secureNetwork,

            string signer,

            string subject,

            ImmutableArray<Outputs.GetMtlskeystoreClientCertificateVersionResult> versions)
        {
            CertificateId = certificateId;
            CertificateName = certificateName;
            CreatedBy = createdBy;
            CreatedDate = createdDate;
            Current = current;
            Geography = geography;
            Id = id;
            IncludeAssociatedProperties = includeAssociatedProperties;
            KeyAlgorithm = keyAlgorithm;
            NotificationEmails = notificationEmails;
            Previous = previous;
            SecureNetwork = secureNetwork;
            Signer = signer;
            Subject = subject;
            Versions = versions;
        }
    }
}
