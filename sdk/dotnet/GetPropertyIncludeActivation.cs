// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetPropertyIncludeActivation
    {
        public static Task<GetPropertyIncludeActivationResult> InvokeAsync(GetPropertyIncludeActivationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPropertyIncludeActivationResult>("akamai:index/getPropertyIncludeActivation:getPropertyIncludeActivation", args ?? new GetPropertyIncludeActivationArgs(), options.WithDefaults());

        public static Output<GetPropertyIncludeActivationResult> Invoke(GetPropertyIncludeActivationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPropertyIncludeActivationResult>("akamai:index/getPropertyIncludeActivation:getPropertyIncludeActivation", args ?? new GetPropertyIncludeActivationInvokeArgs(), options.WithDefaults());

        public static Output<GetPropertyIncludeActivationResult> Invoke(GetPropertyIncludeActivationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPropertyIncludeActivationResult>("akamai:index/getPropertyIncludeActivation:getPropertyIncludeActivation", args ?? new GetPropertyIncludeActivationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPropertyIncludeActivationArgs : global::Pulumi.InvokeArgs
    {
        [Input("contractId", required: true)]
        public string ContractId { get; set; } = null!;

        [Input("groupId", required: true)]
        public string GroupId { get; set; } = null!;

        [Input("includeId", required: true)]
        public string IncludeId { get; set; } = null!;

        [Input("network", required: true)]
        public string Network { get; set; } = null!;

        public GetPropertyIncludeActivationArgs()
        {
        }
        public static new GetPropertyIncludeActivationArgs Empty => new GetPropertyIncludeActivationArgs();
    }

    public sealed class GetPropertyIncludeActivationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("contractId", required: true)]
        public Input<string> ContractId { get; set; } = null!;

        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        [Input("includeId", required: true)]
        public Input<string> IncludeId { get; set; } = null!;

        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        public GetPropertyIncludeActivationInvokeArgs()
        {
        }
        public static new GetPropertyIncludeActivationInvokeArgs Empty => new GetPropertyIncludeActivationInvokeArgs();
    }


    [OutputType]
    public sealed class GetPropertyIncludeActivationResult
    {
        public readonly string ContractId;
        public readonly string GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IncludeId;
        public readonly string Name;
        public readonly string Network;
        public readonly string Note;
        public readonly ImmutableArray<string> NotifyEmails;
        public readonly string Version;

        [OutputConstructor]
        private GetPropertyIncludeActivationResult(
            string contractId,

            string groupId,

            string id,

            string includeId,

            string name,

            string network,

            string note,

            ImmutableArray<string> notifyEmails,

            string version)
        {
            ContractId = contractId;
            GroupId = groupId;
            Id = id;
            IncludeId = includeId;
            Name = name;
            Network = network;
            Note = note;
            NotifyEmails = notifyEmails;
            Version = version;
        }
    }
}
