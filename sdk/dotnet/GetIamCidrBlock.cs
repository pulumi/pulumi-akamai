// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetIamCidrBlock
    {
        public static Task<GetIamCidrBlockResult> InvokeAsync(GetIamCidrBlockArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIamCidrBlockResult>("akamai:index/getIamCidrBlock:getIamCidrBlock", args ?? new GetIamCidrBlockArgs(), options.WithDefaults());

        public static Output<GetIamCidrBlockResult> Invoke(GetIamCidrBlockInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamCidrBlockResult>("akamai:index/getIamCidrBlock:getIamCidrBlock", args ?? new GetIamCidrBlockInvokeArgs(), options.WithDefaults());

        public static Output<GetIamCidrBlockResult> Invoke(GetIamCidrBlockInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamCidrBlockResult>("akamai:index/getIamCidrBlock:getIamCidrBlock", args ?? new GetIamCidrBlockInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIamCidrBlockArgs : global::Pulumi.InvokeArgs
    {
        [Input("cidrBlockId", required: true)]
        public int CidrBlockId { get; set; }

        public GetIamCidrBlockArgs()
        {
        }
        public static new GetIamCidrBlockArgs Empty => new GetIamCidrBlockArgs();
    }

    public sealed class GetIamCidrBlockInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("cidrBlockId", required: true)]
        public Input<int> CidrBlockId { get; set; } = null!;

        public GetIamCidrBlockInvokeArgs()
        {
        }
        public static new GetIamCidrBlockInvokeArgs Empty => new GetIamCidrBlockInvokeArgs();
    }


    [OutputType]
    public sealed class GetIamCidrBlockResult
    {
        public readonly Outputs.GetIamCidrBlockActionsResult Actions;
        public readonly string CidrBlock;
        public readonly int CidrBlockId;
        public readonly string Comments;
        public readonly string CreatedBy;
        public readonly string CreatedDate;
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ModifiedBy;
        public readonly string ModifiedDate;

        [OutputConstructor]
        private GetIamCidrBlockResult(
            Outputs.GetIamCidrBlockActionsResult actions,

            string cidrBlock,

            int cidrBlockId,

            string comments,

            string createdBy,

            string createdDate,

            bool enabled,

            string id,

            string modifiedBy,

            string modifiedDate)
        {
            Actions = actions;
            CidrBlock = cidrBlock;
            CidrBlockId = cidrBlockId;
            Comments = comments;
            CreatedBy = createdBy;
            CreatedDate = createdDate;
            Enabled = enabled;
            Id = id;
            ModifiedBy = modifiedBy;
            ModifiedDate = modifiedDate;
        }
    }
}
