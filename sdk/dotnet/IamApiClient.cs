// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/iamApiClient:IamApiClient")]
    public partial class IamApiClient : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The part of the client secret that identifies your API client and lets you access applications and resources.
        /// </summary>
        [Output("accessToken")]
        public Output<string> AccessToken { get; private set; } = null!;

        /// <summary>
        /// Specifies activities available for the API client.
        /// </summary>
        [Output("actions")]
        public Output<Outputs.IamApiClientActions> Actions { get; private set; } = null!;

        /// <summary>
        /// The number of credentials active for the API client. When the count is zero, you can delete the API client without
        /// interruption.
        /// </summary>
        [Output("activeCredentialCount")]
        public Output<int> ActiveCredentialCount { get; private set; } = null!;

        /// <summary>
        /// Enables the API client to manage more than one account.
        /// </summary>
        [Output("allowAccountSwitch")]
        public Output<bool> AllowAccountSwitch { get; private set; } = null!;

        /// <summary>
        /// The APIs the API client can access.
        /// </summary>
        [Output("apiAccess")]
        public Output<Outputs.IamApiClientApiAccess> ApiAccess { get; private set; } = null!;

        /// <summary>
        /// The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single
        /// username in an array.
        /// </summary>
        [Output("authorizedUsers")]
        public Output<ImmutableArray<string>> AuthorizedUsers { get; private set; } = null!;

        /// <summary>
        /// The base URL for the service.
        /// </summary>
        [Output("baseUrl")]
        public Output<string> BaseUrl { get; private set; } = null!;

        /// <summary>
        /// Whether the API client can create a credential for a new API client. The default is false.
        /// </summary>
        [Output("canAutoCreateCredential")]
        public Output<bool> CanAutoCreateCredential { get; private set; } = null!;

        /// <summary>
        /// A human-readable description of the API client.
        /// </summary>
        [Output("clientDescription")]
        public Output<string> ClientDescription { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for the API client.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// A human-readable name for the API client.
        /// </summary>
        [Output("clientName")]
        public Output<string> ClientName { get; private set; } = null!;

        /// <summary>
        /// Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the
        /// credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials.
        /// </summary>
        [Output("clientType")]
        public Output<string> ClientType { get; private set; } = null!;

        /// <summary>
        /// The user who created the API client.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The ISO 8601 timestamp indicating when the API client was created.
        /// </summary>
        [Output("createdDate")]
        public Output<string> CreatedDate { get; private set; } = null!;

        [Output("credential")]
        public Output<Outputs.IamApiClientCredential> Credential { get; private set; } = null!;

        /// <summary>
        /// Specifies the API client's group access.
        /// </summary>
        [Output("groupAccess")]
        public Output<Outputs.IamApiClientGroupAccess> GroupAccess { get; private set; } = null!;

        /// <summary>
        /// Specifies the API client's IP list restriction.
        /// </summary>
        [Output("ipAcl")]
        public Output<Outputs.IamApiClientIpAcl?> IpAcl { get; private set; } = null!;

        /// <summary>
        /// Whether to lock or unlock the API client.
        /// </summary>
        [Output("lock")]
        public Output<bool> Lock { get; private set; } = null!;

        /// <summary>
        /// Email addresses to notify users when credentials expire.
        /// </summary>
        [Output("notificationEmails")]
        public Output<ImmutableArray<string>> NotificationEmails { get; private set; } = null!;

        /// <summary>
        /// Configures the API client to access the Fast Purge API. Provide it only if the `apis` attribute includes an `api_name`
        /// of `CCU API`.
        /// </summary>
        [Output("purgeOptions")]
        public Output<Outputs.IamApiClientPurgeOptions?> PurgeOptions { get; private set; } = null!;


        /// <summary>
        /// Create a IamApiClient resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamApiClient(string name, IamApiClientArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/iamApiClient:IamApiClient", name, args ?? new IamApiClientArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IamApiClient(string name, Input<string> id, IamApiClientState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/iamApiClient:IamApiClient", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "accessToken",
                    "baseUrl",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IamApiClient resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IamApiClient Get(string name, Input<string> id, IamApiClientState? state = null, CustomResourceOptions? options = null)
        {
            return new IamApiClient(name, id, state, options);
        }
    }

    public sealed class IamApiClientArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables the API client to manage more than one account.
        /// </summary>
        [Input("allowAccountSwitch")]
        public Input<bool>? AllowAccountSwitch { get; set; }

        /// <summary>
        /// The APIs the API client can access.
        /// </summary>
        [Input("apiAccess", required: true)]
        public Input<Inputs.IamApiClientApiAccessArgs> ApiAccess { get; set; } = null!;

        [Input("authorizedUsers", required: true)]
        private InputList<string>? _authorizedUsers;

        /// <summary>
        /// The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single
        /// username in an array.
        /// </summary>
        public InputList<string> AuthorizedUsers
        {
            get => _authorizedUsers ?? (_authorizedUsers = new InputList<string>());
            set => _authorizedUsers = value;
        }

        /// <summary>
        /// Whether the API client can create a credential for a new API client. The default is false.
        /// </summary>
        [Input("canAutoCreateCredential")]
        public Input<bool>? CanAutoCreateCredential { get; set; }

        /// <summary>
        /// A human-readable description of the API client.
        /// </summary>
        [Input("clientDescription")]
        public Input<string>? ClientDescription { get; set; }

        /// <summary>
        /// A human-readable name for the API client.
        /// </summary>
        [Input("clientName", required: true)]
        public Input<string> ClientName { get; set; } = null!;

        /// <summary>
        /// Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the
        /// credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials.
        /// </summary>
        [Input("clientType", required: true)]
        public Input<string> ClientType { get; set; } = null!;

        [Input("credential", required: true)]
        public Input<Inputs.IamApiClientCredentialArgs> Credential { get; set; } = null!;

        /// <summary>
        /// Specifies the API client's group access.
        /// </summary>
        [Input("groupAccess", required: true)]
        public Input<Inputs.IamApiClientGroupAccessArgs> GroupAccess { get; set; } = null!;

        /// <summary>
        /// Specifies the API client's IP list restriction.
        /// </summary>
        [Input("ipAcl")]
        public Input<Inputs.IamApiClientIpAclArgs>? IpAcl { get; set; }

        /// <summary>
        /// Whether to lock or unlock the API client.
        /// </summary>
        [Input("lock")]
        public Input<bool>? Lock { get; set; }

        [Input("notificationEmails")]
        private InputList<string>? _notificationEmails;

        /// <summary>
        /// Email addresses to notify users when credentials expire.
        /// </summary>
        public InputList<string> NotificationEmails
        {
            get => _notificationEmails ?? (_notificationEmails = new InputList<string>());
            set => _notificationEmails = value;
        }

        /// <summary>
        /// Configures the API client to access the Fast Purge API. Provide it only if the `apis` attribute includes an `api_name`
        /// of `CCU API`.
        /// </summary>
        [Input("purgeOptions")]
        public Input<Inputs.IamApiClientPurgeOptionsArgs>? PurgeOptions { get; set; }

        public IamApiClientArgs()
        {
        }
        public static new IamApiClientArgs Empty => new IamApiClientArgs();
    }

    public sealed class IamApiClientState : global::Pulumi.ResourceArgs
    {
        [Input("accessToken")]
        private Input<string>? _accessToken;

        /// <summary>
        /// The part of the client secret that identifies your API client and lets you access applications and resources.
        /// </summary>
        public Input<string>? AccessToken
        {
            get => _accessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies activities available for the API client.
        /// </summary>
        [Input("actions")]
        public Input<Inputs.IamApiClientActionsGetArgs>? Actions { get; set; }

        /// <summary>
        /// The number of credentials active for the API client. When the count is zero, you can delete the API client without
        /// interruption.
        /// </summary>
        [Input("activeCredentialCount")]
        public Input<int>? ActiveCredentialCount { get; set; }

        /// <summary>
        /// Enables the API client to manage more than one account.
        /// </summary>
        [Input("allowAccountSwitch")]
        public Input<bool>? AllowAccountSwitch { get; set; }

        /// <summary>
        /// The APIs the API client can access.
        /// </summary>
        [Input("apiAccess")]
        public Input<Inputs.IamApiClientApiAccessGetArgs>? ApiAccess { get; set; }

        [Input("authorizedUsers")]
        private InputList<string>? _authorizedUsers;

        /// <summary>
        /// The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single
        /// username in an array.
        /// </summary>
        public InputList<string> AuthorizedUsers
        {
            get => _authorizedUsers ?? (_authorizedUsers = new InputList<string>());
            set => _authorizedUsers = value;
        }

        [Input("baseUrl")]
        private Input<string>? _baseUrl;

        /// <summary>
        /// The base URL for the service.
        /// </summary>
        public Input<string>? BaseUrl
        {
            get => _baseUrl;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _baseUrl = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Whether the API client can create a credential for a new API client. The default is false.
        /// </summary>
        [Input("canAutoCreateCredential")]
        public Input<bool>? CanAutoCreateCredential { get; set; }

        /// <summary>
        /// A human-readable description of the API client.
        /// </summary>
        [Input("clientDescription")]
        public Input<string>? ClientDescription { get; set; }

        /// <summary>
        /// A unique identifier for the API client.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// A human-readable name for the API client.
        /// </summary>
        [Input("clientName")]
        public Input<string>? ClientName { get; set; }

        /// <summary>
        /// Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the
        /// credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials.
        /// </summary>
        [Input("clientType")]
        public Input<string>? ClientType { get; set; }

        /// <summary>
        /// The user who created the API client.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The ISO 8601 timestamp indicating when the API client was created.
        /// </summary>
        [Input("createdDate")]
        public Input<string>? CreatedDate { get; set; }

        [Input("credential")]
        public Input<Inputs.IamApiClientCredentialGetArgs>? Credential { get; set; }

        /// <summary>
        /// Specifies the API client's group access.
        /// </summary>
        [Input("groupAccess")]
        public Input<Inputs.IamApiClientGroupAccessGetArgs>? GroupAccess { get; set; }

        /// <summary>
        /// Specifies the API client's IP list restriction.
        /// </summary>
        [Input("ipAcl")]
        public Input<Inputs.IamApiClientIpAclGetArgs>? IpAcl { get; set; }

        /// <summary>
        /// Whether to lock or unlock the API client.
        /// </summary>
        [Input("lock")]
        public Input<bool>? Lock { get; set; }

        [Input("notificationEmails")]
        private InputList<string>? _notificationEmails;

        /// <summary>
        /// Email addresses to notify users when credentials expire.
        /// </summary>
        public InputList<string> NotificationEmails
        {
            get => _notificationEmails ?? (_notificationEmails = new InputList<string>());
            set => _notificationEmails = value;
        }

        /// <summary>
        /// Configures the API client to access the Fast Purge API. Provide it only if the `apis` attribute includes an `api_name`
        /// of `CCU API`.
        /// </summary>
        [Input("purgeOptions")]
        public Input<Inputs.IamApiClientPurgeOptionsGetArgs>? PurgeOptions { get; set; }

        public IamApiClientState()
        {
        }
        public static new IamApiClientState Empty => new IamApiClientState();
    }
}
