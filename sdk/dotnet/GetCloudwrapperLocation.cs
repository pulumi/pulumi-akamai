// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetCloudwrapperLocation
    {
        public static Task<GetCloudwrapperLocationResult> InvokeAsync(GetCloudwrapperLocationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudwrapperLocationResult>("akamai:index/getCloudwrapperLocation:getCloudwrapperLocation", args ?? new GetCloudwrapperLocationArgs(), options.WithDefaults());

        public static Output<GetCloudwrapperLocationResult> Invoke(GetCloudwrapperLocationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudwrapperLocationResult>("akamai:index/getCloudwrapperLocation:getCloudwrapperLocation", args ?? new GetCloudwrapperLocationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudwrapperLocationArgs : global::Pulumi.InvokeArgs
    {
        [Input("locationName", required: true)]
        public string LocationName { get; set; } = null!;

        [Input("trafficType", required: true)]
        public string TrafficType { get; set; } = null!;

        public GetCloudwrapperLocationArgs()
        {
        }
        public static new GetCloudwrapperLocationArgs Empty => new GetCloudwrapperLocationArgs();
    }

    public sealed class GetCloudwrapperLocationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("locationName", required: true)]
        public Input<string> LocationName { get; set; } = null!;

        [Input("trafficType", required: true)]
        public Input<string> TrafficType { get; set; } = null!;

        public GetCloudwrapperLocationInvokeArgs()
        {
        }
        public static new GetCloudwrapperLocationInvokeArgs Empty => new GetCloudwrapperLocationInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudwrapperLocationResult
    {
        public readonly string Id;
        public readonly string LocationId;
        public readonly string LocationName;
        public readonly string TrafficType;
        public readonly int TrafficTypeId;

        [OutputConstructor]
        private GetCloudwrapperLocationResult(
            string id,

            string locationId,

            string locationName,

            string trafficType,

            int trafficTypeId)
        {
            Id = id;
            LocationId = locationId;
            LocationName = locationName;
            TrafficType = trafficType;
            TrafficTypeId = trafficTypeId;
        }
    }
}
