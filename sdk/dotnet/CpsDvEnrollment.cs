// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/cpsDvEnrollment:CpsDvEnrollment")]
    public partial class CpsDvEnrollment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether acknowledge warnings before certificate verification
        /// </summary>
        [Output("acknowledgePreVerificationWarnings")]
        public Output<bool?> AcknowledgePreVerificationWarnings { get; private set; } = null!;

        /// <summary>
        /// Contact information for the certificate administrator to use at organization
        /// </summary>
        [Output("adminContact")]
        public Output<Outputs.CpsDvEnrollmentAdminContact> AdminContact { get; private set; } = null!;

        /// <summary>
        /// Allow to duplicate common name
        /// </summary>
        [Output("allowDuplicateCommonName")]
        public Output<bool?> AllowDuplicateCommonName { get; private set; } = null!;

        /// <summary>
        /// Certificate trust chain type
        /// </summary>
        [Output("certificateChainType")]
        public Output<string?> CertificateChainType { get; private set; } = null!;

        /// <summary>
        /// Certificate type of enrollment
        /// </summary>
        [Output("certificateType")]
        public Output<string> CertificateType { get; private set; } = null!;

        /// <summary>
        /// Common name used for enrollment
        /// </summary>
        [Output("commonName")]
        public Output<string> CommonName { get; private set; } = null!;

        /// <summary>
        /// Contract ID for which enrollment is retrieved
        /// </summary>
        [Output("contractId")]
        public Output<string> ContractId { get; private set; } = null!;

        /// <summary>
        /// Certificate signing request generated during enrollment creation
        /// </summary>
        [Output("csr")]
        public Output<Outputs.CpsDvEnrollmentCsr> Csr { get; private set; } = null!;

        /// <summary>
        /// DNS challenge information
        /// </summary>
        [Output("dnsChallenges")]
        public Output<ImmutableArray<Outputs.CpsDvEnrollmentDnsChallenge>> DnsChallenges { get; private set; } = null!;

        /// <summary>
        /// HTTP challenge information
        /// </summary>
        [Output("httpChallenges")]
        public Output<ImmutableArray<Outputs.CpsDvEnrollmentHttpChallenge>> HttpChallenges { get; private set; } = null!;

        /// <summary>
        /// Settings containing network information and TLS Metadata used by CPS
        /// </summary>
        [Output("networkConfiguration")]
        public Output<Outputs.CpsDvEnrollmentNetworkConfiguration> NetworkConfiguration { get; private set; } = null!;

        /// <summary>
        /// Organization information
        /// </summary>
        [Output("organization")]
        public Output<Outputs.CpsDvEnrollmentOrganization> Organization { get; private set; } = null!;

        /// <summary>
        /// The registration authority or certificate authority (CA) used to obtain a certificate
        /// </summary>
        [Output("registrationAuthority")]
        public Output<string> RegistrationAuthority { get; private set; } = null!;

        /// <summary>
        /// List of SANs
        /// </summary>
        [Output("sans")]
        public Output<ImmutableArray<string>> Sans { get; private set; } = null!;

        /// <summary>
        /// Type of TLS deployment network
        /// </summary>
        [Output("secureNetwork")]
        public Output<string> SecureNetwork { get; private set; } = null!;

        /// <summary>
        /// SHA algorithm type
        /// </summary>
        [Output("signatureAlgorithm")]
        public Output<string> SignatureAlgorithm { get; private set; } = null!;

        /// <summary>
        /// Whether Server Name Indication is used for enrollment
        /// </summary>
        [Output("sniOnly")]
        public Output<bool> SniOnly { get; private set; } = null!;

        /// <summary>
        /// Contact information for an administrator at Akamai
        /// </summary>
        [Output("techContact")]
        public Output<Outputs.CpsDvEnrollmentTechContact> TechContact { get; private set; } = null!;

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Output("timeouts")]
        public Output<Outputs.CpsDvEnrollmentTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// Enrolment validation type
        /// </summary>
        [Output("validationType")]
        public Output<string> ValidationType { get; private set; } = null!;


        /// <summary>
        /// Create a CpsDvEnrollment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CpsDvEnrollment(string name, CpsDvEnrollmentArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/cpsDvEnrollment:CpsDvEnrollment", name, args ?? new CpsDvEnrollmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CpsDvEnrollment(string name, Input<string> id, CpsDvEnrollmentState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/cpsDvEnrollment:CpsDvEnrollment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CpsDvEnrollment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CpsDvEnrollment Get(string name, Input<string> id, CpsDvEnrollmentState? state = null, CustomResourceOptions? options = null)
        {
            return new CpsDvEnrollment(name, id, state, options);
        }
    }

    public sealed class CpsDvEnrollmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether acknowledge warnings before certificate verification
        /// </summary>
        [Input("acknowledgePreVerificationWarnings")]
        public Input<bool>? AcknowledgePreVerificationWarnings { get; set; }

        /// <summary>
        /// Contact information for the certificate administrator to use at organization
        /// </summary>
        [Input("adminContact", required: true)]
        public Input<Inputs.CpsDvEnrollmentAdminContactArgs> AdminContact { get; set; } = null!;

        /// <summary>
        /// Allow to duplicate common name
        /// </summary>
        [Input("allowDuplicateCommonName")]
        public Input<bool>? AllowDuplicateCommonName { get; set; }

        /// <summary>
        /// Certificate trust chain type
        /// </summary>
        [Input("certificateChainType")]
        public Input<string>? CertificateChainType { get; set; }

        /// <summary>
        /// Common name used for enrollment
        /// </summary>
        [Input("commonName", required: true)]
        public Input<string> CommonName { get; set; } = null!;

        /// <summary>
        /// Contract ID for which enrollment is retrieved
        /// </summary>
        [Input("contractId", required: true)]
        public Input<string> ContractId { get; set; } = null!;

        /// <summary>
        /// Certificate signing request generated during enrollment creation
        /// </summary>
        [Input("csr", required: true)]
        public Input<Inputs.CpsDvEnrollmentCsrArgs> Csr { get; set; } = null!;

        /// <summary>
        /// Settings containing network information and TLS Metadata used by CPS
        /// </summary>
        [Input("networkConfiguration", required: true)]
        public Input<Inputs.CpsDvEnrollmentNetworkConfigurationArgs> NetworkConfiguration { get; set; } = null!;

        /// <summary>
        /// Organization information
        /// </summary>
        [Input("organization", required: true)]
        public Input<Inputs.CpsDvEnrollmentOrganizationArgs> Organization { get; set; } = null!;

        [Input("sans")]
        private InputList<string>? _sans;

        /// <summary>
        /// List of SANs
        /// </summary>
        public InputList<string> Sans
        {
            get => _sans ?? (_sans = new InputList<string>());
            set => _sans = value;
        }

        /// <summary>
        /// Type of TLS deployment network
        /// </summary>
        [Input("secureNetwork", required: true)]
        public Input<string> SecureNetwork { get; set; } = null!;

        /// <summary>
        /// SHA algorithm type
        /// </summary>
        [Input("signatureAlgorithm", required: true)]
        public Input<string> SignatureAlgorithm { get; set; } = null!;

        /// <summary>
        /// Whether Server Name Indication is used for enrollment
        /// </summary>
        [Input("sniOnly", required: true)]
        public Input<bool> SniOnly { get; set; } = null!;

        /// <summary>
        /// Contact information for an administrator at Akamai
        /// </summary>
        [Input("techContact", required: true)]
        public Input<Inputs.CpsDvEnrollmentTechContactArgs> TechContact { get; set; } = null!;

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Input("timeouts")]
        public Input<Inputs.CpsDvEnrollmentTimeoutsArgs>? Timeouts { get; set; }

        public CpsDvEnrollmentArgs()
        {
        }
        public static new CpsDvEnrollmentArgs Empty => new CpsDvEnrollmentArgs();
    }

    public sealed class CpsDvEnrollmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether acknowledge warnings before certificate verification
        /// </summary>
        [Input("acknowledgePreVerificationWarnings")]
        public Input<bool>? AcknowledgePreVerificationWarnings { get; set; }

        /// <summary>
        /// Contact information for the certificate administrator to use at organization
        /// </summary>
        [Input("adminContact")]
        public Input<Inputs.CpsDvEnrollmentAdminContactGetArgs>? AdminContact { get; set; }

        /// <summary>
        /// Allow to duplicate common name
        /// </summary>
        [Input("allowDuplicateCommonName")]
        public Input<bool>? AllowDuplicateCommonName { get; set; }

        /// <summary>
        /// Certificate trust chain type
        /// </summary>
        [Input("certificateChainType")]
        public Input<string>? CertificateChainType { get; set; }

        /// <summary>
        /// Certificate type of enrollment
        /// </summary>
        [Input("certificateType")]
        public Input<string>? CertificateType { get; set; }

        /// <summary>
        /// Common name used for enrollment
        /// </summary>
        [Input("commonName")]
        public Input<string>? CommonName { get; set; }

        /// <summary>
        /// Contract ID for which enrollment is retrieved
        /// </summary>
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        /// <summary>
        /// Certificate signing request generated during enrollment creation
        /// </summary>
        [Input("csr")]
        public Input<Inputs.CpsDvEnrollmentCsrGetArgs>? Csr { get; set; }

        [Input("dnsChallenges")]
        private InputList<Inputs.CpsDvEnrollmentDnsChallengeGetArgs>? _dnsChallenges;

        /// <summary>
        /// DNS challenge information
        /// </summary>
        public InputList<Inputs.CpsDvEnrollmentDnsChallengeGetArgs> DnsChallenges
        {
            get => _dnsChallenges ?? (_dnsChallenges = new InputList<Inputs.CpsDvEnrollmentDnsChallengeGetArgs>());
            set => _dnsChallenges = value;
        }

        [Input("httpChallenges")]
        private InputList<Inputs.CpsDvEnrollmentHttpChallengeGetArgs>? _httpChallenges;

        /// <summary>
        /// HTTP challenge information
        /// </summary>
        public InputList<Inputs.CpsDvEnrollmentHttpChallengeGetArgs> HttpChallenges
        {
            get => _httpChallenges ?? (_httpChallenges = new InputList<Inputs.CpsDvEnrollmentHttpChallengeGetArgs>());
            set => _httpChallenges = value;
        }

        /// <summary>
        /// Settings containing network information and TLS Metadata used by CPS
        /// </summary>
        [Input("networkConfiguration")]
        public Input<Inputs.CpsDvEnrollmentNetworkConfigurationGetArgs>? NetworkConfiguration { get; set; }

        /// <summary>
        /// Organization information
        /// </summary>
        [Input("organization")]
        public Input<Inputs.CpsDvEnrollmentOrganizationGetArgs>? Organization { get; set; }

        /// <summary>
        /// The registration authority or certificate authority (CA) used to obtain a certificate
        /// </summary>
        [Input("registrationAuthority")]
        public Input<string>? RegistrationAuthority { get; set; }

        [Input("sans")]
        private InputList<string>? _sans;

        /// <summary>
        /// List of SANs
        /// </summary>
        public InputList<string> Sans
        {
            get => _sans ?? (_sans = new InputList<string>());
            set => _sans = value;
        }

        /// <summary>
        /// Type of TLS deployment network
        /// </summary>
        [Input("secureNetwork")]
        public Input<string>? SecureNetwork { get; set; }

        /// <summary>
        /// SHA algorithm type
        /// </summary>
        [Input("signatureAlgorithm")]
        public Input<string>? SignatureAlgorithm { get; set; }

        /// <summary>
        /// Whether Server Name Indication is used for enrollment
        /// </summary>
        [Input("sniOnly")]
        public Input<bool>? SniOnly { get; set; }

        /// <summary>
        /// Contact information for an administrator at Akamai
        /// </summary>
        [Input("techContact")]
        public Input<Inputs.CpsDvEnrollmentTechContactGetArgs>? TechContact { get; set; }

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Input("timeouts")]
        public Input<Inputs.CpsDvEnrollmentTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// Enrolment validation type
        /// </summary>
        [Input("validationType")]
        public Input<string>? ValidationType { get; set; }

        public CpsDvEnrollmentState()
        {
        }
        public static new CpsDvEnrollmentState Empty => new CpsDvEnrollmentState();
    }
}
