// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/edgeKv:EdgeKv")]
    public partial class EdgeKv : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Storage location for data
        /// </summary>
        [Output("geoLocation")]
        public Output<string?> GeoLocation { get; private set; } = null!;

        /// <summary>
        /// Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.
        /// </summary>
        [Output("groupId")]
        public Output<int> GroupId { get; private set; } = null!;

        /// <summary>
        /// List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.
        /// </summary>
        [Output("initialDatas")]
        public Output<ImmutableArray<Outputs.EdgeKvInitialData>> InitialDatas { get; private set; } = null!;

        /// <summary>
        /// Name for the EKV namespace
        /// </summary>
        [Output("namespaceName")]
        public Output<string> NamespaceName { get; private set; } = null!;

        /// <summary>
        /// The network on which the namespace will be activated
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// Retention period for data in this namespace. An update of this value will just affect new EKV items.
        /// </summary>
        [Output("retentionInSeconds")]
        public Output<int> RetentionInSeconds { get; private set; } = null!;


        /// <summary>
        /// Create a EdgeKv resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgeKv(string name, EdgeKvArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/edgeKv:EdgeKv", name, args ?? new EdgeKvArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgeKv(string name, Input<string> id, EdgeKvState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/edgeKv:EdgeKv", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgeKv resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgeKv Get(string name, Input<string> id, EdgeKvState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgeKv(name, id, state, options);
        }
    }

    public sealed class EdgeKvArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Storage location for data
        /// </summary>
        [Input("geoLocation")]
        public Input<string>? GeoLocation { get; set; }

        /// <summary>
        /// Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<int> GroupId { get; set; } = null!;

        [Input("initialDatas")]
        private InputList<Inputs.EdgeKvInitialDataArgs>? _initialDatas;

        /// <summary>
        /// List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.
        /// </summary>
        [Obsolete(@"The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead.")]
        public InputList<Inputs.EdgeKvInitialDataArgs> InitialDatas
        {
            get => _initialDatas ?? (_initialDatas = new InputList<Inputs.EdgeKvInitialDataArgs>());
            set => _initialDatas = value;
        }

        /// <summary>
        /// Name for the EKV namespace
        /// </summary>
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        /// <summary>
        /// The network on which the namespace will be activated
        /// </summary>
        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        /// <summary>
        /// Retention period for data in this namespace. An update of this value will just affect new EKV items.
        /// </summary>
        [Input("retentionInSeconds", required: true)]
        public Input<int> RetentionInSeconds { get; set; } = null!;

        public EdgeKvArgs()
        {
        }
        public static new EdgeKvArgs Empty => new EdgeKvArgs();
    }

    public sealed class EdgeKvState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Storage location for data
        /// </summary>
        [Input("geoLocation")]
        public Input<string>? GeoLocation { get; set; }

        /// <summary>
        /// Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.
        /// </summary>
        [Input("groupId")]
        public Input<int>? GroupId { get; set; }

        [Input("initialDatas")]
        private InputList<Inputs.EdgeKvInitialDataGetArgs>? _initialDatas;

        /// <summary>
        /// List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.
        /// </summary>
        [Obsolete(@"The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead.")]
        public InputList<Inputs.EdgeKvInitialDataGetArgs> InitialDatas
        {
            get => _initialDatas ?? (_initialDatas = new InputList<Inputs.EdgeKvInitialDataGetArgs>());
            set => _initialDatas = value;
        }

        /// <summary>
        /// Name for the EKV namespace
        /// </summary>
        [Input("namespaceName")]
        public Input<string>? NamespaceName { get; set; }

        /// <summary>
        /// The network on which the namespace will be activated
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// Retention period for data in this namespace. An update of this value will just affect new EKV items.
        /// </summary>
        [Input("retentionInSeconds")]
        public Input<int>? RetentionInSeconds { get; set; }

        public EdgeKvState()
        {
        }
        public static new EdgeKvState Empty => new EdgeKvState();
    }
}
