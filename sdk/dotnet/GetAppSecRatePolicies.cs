// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetAppSecRatePolicies
    {
        /// <summary>
        /// **Scopes**: Security configuration; rate policy
        /// 
        /// Returns information about your rate policies. Rate polices help you monitor and moderate the number and rate of all the requests you receive; in turn, this helps you prevent your website from being overwhelmed by a dramatic, and unexpected, surge in traffic.
        /// 
        /// **Related API Endpoint:** [/appsec/v1/configs/{configId}/versions/{versionNumber}/rate-policies](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getratepolicies)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
        ///         {
        ///             Name = "Documentation",
        ///         }));
        ///         var ratePolicies = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecRatePolicies.InvokeAsync(new Akamai.GetAppSecRatePoliciesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///         })));
        ///         this.RatePoliciesOutput = ratePolicies.Apply(ratePolicies =&gt; ratePolicies.OutputText);
        ///         this.RatePoliciesJson = ratePolicies.Apply(ratePolicies =&gt; ratePolicies.Json);
        ///         var ratePolicy = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecRatePolicies.InvokeAsync(new Akamai.GetAppSecRatePoliciesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///             RatePolicyId = 122149,
        ///         })));
        ///         this.RatePolicyJson = ratePolicy.Apply(ratePolicy =&gt; ratePolicy.Json);
        ///         this.RatePolicyOutput = ratePolicy.Apply(ratePolicy =&gt; ratePolicy.OutputText);
        ///     }
        /// 
        ///     [Output("ratePoliciesOutput")]
        ///     public Output&lt;string&gt; RatePoliciesOutput { get; set; }
        ///     [Output("ratePoliciesJson")]
        ///     public Output&lt;string&gt; RatePoliciesJson { get; set; }
        ///     [Output("ratePolicyJson")]
        ///     public Output&lt;string&gt; RatePolicyJson { get; set; }
        ///     [Output("ratePolicyOutput")]
        ///     public Output&lt;string&gt; RatePolicyOutput { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Output Options
        /// 
        /// The following options can be used to determine the information returned, and how that returned information is formatted:
        /// 
        /// - `output_text`. Tabular report showing the ID and name of the rate policies.
        /// - `json`. JSON-formatted list of the rate policy information.
        /// </summary>
        public static Task<GetAppSecRatePoliciesResult> InvokeAsync(GetAppSecRatePoliciesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAppSecRatePoliciesResult>("akamai:index/getAppSecRatePolicies:getAppSecRatePolicies", args ?? new GetAppSecRatePoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// **Scopes**: Security configuration; rate policy
        /// 
        /// Returns information about your rate policies. Rate polices help you monitor and moderate the number and rate of all the requests you receive; in turn, this helps you prevent your website from being overwhelmed by a dramatic, and unexpected, surge in traffic.
        /// 
        /// **Related API Endpoint:** [/appsec/v1/configs/{configId}/versions/{versionNumber}/rate-policies](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getratepolicies)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
        ///         {
        ///             Name = "Documentation",
        ///         }));
        ///         var ratePolicies = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecRatePolicies.InvokeAsync(new Akamai.GetAppSecRatePoliciesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///         })));
        ///         this.RatePoliciesOutput = ratePolicies.Apply(ratePolicies =&gt; ratePolicies.OutputText);
        ///         this.RatePoliciesJson = ratePolicies.Apply(ratePolicies =&gt; ratePolicies.Json);
        ///         var ratePolicy = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecRatePolicies.InvokeAsync(new Akamai.GetAppSecRatePoliciesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///             RatePolicyId = 122149,
        ///         })));
        ///         this.RatePolicyJson = ratePolicy.Apply(ratePolicy =&gt; ratePolicy.Json);
        ///         this.RatePolicyOutput = ratePolicy.Apply(ratePolicy =&gt; ratePolicy.OutputText);
        ///     }
        /// 
        ///     [Output("ratePoliciesOutput")]
        ///     public Output&lt;string&gt; RatePoliciesOutput { get; set; }
        ///     [Output("ratePoliciesJson")]
        ///     public Output&lt;string&gt; RatePoliciesJson { get; set; }
        ///     [Output("ratePolicyJson")]
        ///     public Output&lt;string&gt; RatePolicyJson { get; set; }
        ///     [Output("ratePolicyOutput")]
        ///     public Output&lt;string&gt; RatePolicyOutput { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Output Options
        /// 
        /// The following options can be used to determine the information returned, and how that returned information is formatted:
        /// 
        /// - `output_text`. Tabular report showing the ID and name of the rate policies.
        /// - `json`. JSON-formatted list of the rate policy information.
        /// </summary>
        public static Output<GetAppSecRatePoliciesResult> Invoke(GetAppSecRatePoliciesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAppSecRatePoliciesResult>("akamai:index/getAppSecRatePolicies:getAppSecRatePolicies", args ?? new GetAppSecRatePoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppSecRatePoliciesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the rate policies.
        /// </summary>
        [Input("configId", required: true)]
        public int ConfigId { get; set; }

        /// <summary>
        /// . Unique identifier of the rate policy you want to return information for. If not included, information is returned for all your rate policies.
        /// </summary>
        [Input("ratePolicyId")]
        public int? RatePolicyId { get; set; }

        public GetAppSecRatePoliciesArgs()
        {
        }
    }

    public sealed class GetAppSecRatePoliciesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the rate policies.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// . Unique identifier of the rate policy you want to return information for. If not included, information is returned for all your rate policies.
        /// </summary>
        [Input("ratePolicyId")]
        public Input<int>? RatePolicyId { get; set; }

        public GetAppSecRatePoliciesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAppSecRatePoliciesResult
    {
        public readonly int ConfigId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly string OutputText;
        public readonly int? RatePolicyId;

        [OutputConstructor]
        private GetAppSecRatePoliciesResult(
            int configId,

            string id,

            string json,

            string outputText,

            int? ratePolicyId)
        {
            ConfigId = configId;
            Id = id;
            Json = json;
            OutputText = outputText;
            RatePolicyId = ratePolicyId;
        }
    }
}
