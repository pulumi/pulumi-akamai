// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/cloudAccessKey:CloudAccessKey")]
    public partial class CloudAccessKey : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the access key.
        /// </summary>
        [Output("accessKeyName")]
        public Output<string> AccessKeyName { get; private set; } = null!;

        /// <summary>
        /// The unique identifier Akamai assigns to an access key.
        /// </summary>
        [Output("accessKeyUid")]
        public Output<int> AccessKeyUid { get; private set; } = null!;

        /// <summary>
        /// The type of cloud provider signing process used to authenticate API requests. Two options are available:
        /// "AWS4_HMAC_SHA256" or "GOOG4_HMAC_SHA256".
        /// </summary>
        [Output("authenticationMethod")]
        public Output<string> AuthenticationMethod { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the contract assigned to the access key
        /// </summary>
        [Output("contractId")]
        public Output<string> ContractId { get; private set; } = null!;

        /// <summary>
        /// The combination of a `cloud_access_key_id` and a `cloud_secret_access_key` used to sign API requests. This pair can be
        /// identified as access key version. Access key can contain only two access key versions at specific time (defined as
        /// credentialsA and credentialsB).
        /// </summary>
        [Output("credentialsA")]
        public Output<Outputs.CloudAccessKeyCredentialsA?> CredentialsA { get; private set; } = null!;

        /// <summary>
        /// The combination of a `cloud_access_key_id` and a `cloud_secret_access_key` used to sign API requests. This pair can be
        /// identified as access key version. Access key can contain only two access key versions at specific time (defined as
        /// credentialsA and credentialsB).
        /// </summary>
        [Output("credentialsB")]
        public Output<Outputs.CloudAccessKeyCredentialsB?> CredentialsB { get; private set; } = null!;

        /// <summary>
        /// The unique identifier assigned to the access control group assigned to the access key
        /// </summary>
        [Output("groupId")]
        public Output<int> GroupId { get; private set; } = null!;

        /// <summary>
        /// The secure networks that you assigned the access key to during creation
        /// </summary>
        [Output("networkConfiguration")]
        public Output<Outputs.CloudAccessKeyNetworkConfiguration> NetworkConfiguration { get; private set; } = null!;

        /// <summary>
        /// Value of `version_guid` field for credentials marked as primary
        /// </summary>
        [Output("primaryGuid")]
        public Output<string> PrimaryGuid { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.CloudAccessKeyTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a CloudAccessKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudAccessKey(string name, CloudAccessKeyArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/cloudAccessKey:CloudAccessKey", name, args ?? new CloudAccessKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudAccessKey(string name, Input<string> id, CloudAccessKeyState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/cloudAccessKey:CloudAccessKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudAccessKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudAccessKey Get(string name, Input<string> id, CloudAccessKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudAccessKey(name, id, state, options);
        }
    }

    public sealed class CloudAccessKeyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the access key.
        /// </summary>
        [Input("accessKeyName", required: true)]
        public Input<string> AccessKeyName { get; set; } = null!;

        /// <summary>
        /// The type of cloud provider signing process used to authenticate API requests. Two options are available:
        /// "AWS4_HMAC_SHA256" or "GOOG4_HMAC_SHA256".
        /// </summary>
        [Input("authenticationMethod", required: true)]
        public Input<string> AuthenticationMethod { get; set; } = null!;

        /// <summary>
        /// The unique identifier for the contract assigned to the access key
        /// </summary>
        [Input("contractId", required: true)]
        public Input<string> ContractId { get; set; } = null!;

        /// <summary>
        /// The combination of a `cloud_access_key_id` and a `cloud_secret_access_key` used to sign API requests. This pair can be
        /// identified as access key version. Access key can contain only two access key versions at specific time (defined as
        /// credentialsA and credentialsB).
        /// </summary>
        [Input("credentialsA")]
        public Input<Inputs.CloudAccessKeyCredentialsAArgs>? CredentialsA { get; set; }

        /// <summary>
        /// The combination of a `cloud_access_key_id` and a `cloud_secret_access_key` used to sign API requests. This pair can be
        /// identified as access key version. Access key can contain only two access key versions at specific time (defined as
        /// credentialsA and credentialsB).
        /// </summary>
        [Input("credentialsB")]
        public Input<Inputs.CloudAccessKeyCredentialsBArgs>? CredentialsB { get; set; }

        /// <summary>
        /// The unique identifier assigned to the access control group assigned to the access key
        /// </summary>
        [Input("groupId", required: true)]
        public Input<int> GroupId { get; set; } = null!;

        /// <summary>
        /// The secure networks that you assigned the access key to during creation
        /// </summary>
        [Input("networkConfiguration", required: true)]
        public Input<Inputs.CloudAccessKeyNetworkConfigurationArgs> NetworkConfiguration { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.CloudAccessKeyTimeoutsArgs>? Timeouts { get; set; }

        public CloudAccessKeyArgs()
        {
        }
        public static new CloudAccessKeyArgs Empty => new CloudAccessKeyArgs();
    }

    public sealed class CloudAccessKeyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the access key.
        /// </summary>
        [Input("accessKeyName")]
        public Input<string>? AccessKeyName { get; set; }

        /// <summary>
        /// The unique identifier Akamai assigns to an access key.
        /// </summary>
        [Input("accessKeyUid")]
        public Input<int>? AccessKeyUid { get; set; }

        /// <summary>
        /// The type of cloud provider signing process used to authenticate API requests. Two options are available:
        /// "AWS4_HMAC_SHA256" or "GOOG4_HMAC_SHA256".
        /// </summary>
        [Input("authenticationMethod")]
        public Input<string>? AuthenticationMethod { get; set; }

        /// <summary>
        /// The unique identifier for the contract assigned to the access key
        /// </summary>
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        /// <summary>
        /// The combination of a `cloud_access_key_id` and a `cloud_secret_access_key` used to sign API requests. This pair can be
        /// identified as access key version. Access key can contain only two access key versions at specific time (defined as
        /// credentialsA and credentialsB).
        /// </summary>
        [Input("credentialsA")]
        public Input<Inputs.CloudAccessKeyCredentialsAGetArgs>? CredentialsA { get; set; }

        /// <summary>
        /// The combination of a `cloud_access_key_id` and a `cloud_secret_access_key` used to sign API requests. This pair can be
        /// identified as access key version. Access key can contain only two access key versions at specific time (defined as
        /// credentialsA and credentialsB).
        /// </summary>
        [Input("credentialsB")]
        public Input<Inputs.CloudAccessKeyCredentialsBGetArgs>? CredentialsB { get; set; }

        /// <summary>
        /// The unique identifier assigned to the access control group assigned to the access key
        /// </summary>
        [Input("groupId")]
        public Input<int>? GroupId { get; set; }

        /// <summary>
        /// The secure networks that you assigned the access key to during creation
        /// </summary>
        [Input("networkConfiguration")]
        public Input<Inputs.CloudAccessKeyNetworkConfigurationGetArgs>? NetworkConfiguration { get; set; }

        /// <summary>
        /// Value of `version_guid` field for credentials marked as primary
        /// </summary>
        [Input("primaryGuid")]
        public Input<string>? PrimaryGuid { get; set; }

        [Input("timeouts")]
        public Input<Inputs.CloudAccessKeyTimeoutsGetArgs>? Timeouts { get; set; }

        public CloudAccessKeyState()
        {
        }
        public static new CloudAccessKeyState Empty => new CloudAccessKeyState();
    }
}
