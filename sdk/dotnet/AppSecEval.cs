// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/appSecEval:AppSecEval")]
    public partial class AppSecEval : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Unique identifier of the security configuration
        /// </summary>
        [Output("configId")]
        public Output<int> ConfigId { get; private set; } = null!;

        /// <summary>
        /// Versioning information for the Kona Rule Set currently in use in production
        /// </summary>
        [Output("currentRuleset")]
        public Output<string> CurrentRuleset { get; private set; } = null!;

        /// <summary>
        /// Evaluation mode (ASE_AUTO or ASE_MANUAL)
        /// </summary>
        [Output("evalMode")]
        public Output<string?> EvalMode { get; private set; } = null!;

        /// <summary>
        /// Evaluation mode operation (START, STOP, RESTART, UPDATE or COMPLETE)
        /// </summary>
        [Output("evalOperation")]
        public Output<string> EvalOperation { get; private set; } = null!;

        /// <summary>
        /// Whether an evaluation is currently in progress
        /// </summary>
        [Output("evalStatus")]
        public Output<string> EvalStatus { get; private set; } = null!;

        /// <summary>
        /// Versioning information for the Kona Rule Set being evaluated
        /// </summary>
        [Output("evaluatingRuleset")]
        public Output<string> EvaluatingRuleset { get; private set; } = null!;

        /// <summary>
        /// Date when the evaluation period ends
        /// </summary>
        [Output("expirationDate")]
        public Output<string> ExpirationDate { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the security policy
        /// </summary>
        [Output("securityPolicyId")]
        public Output<string> SecurityPolicyId { get; private set; } = null!;


        /// <summary>
        /// Create a AppSecEval resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppSecEval(string name, AppSecEvalArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/appSecEval:AppSecEval", name, args ?? new AppSecEvalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppSecEval(string name, Input<string> id, AppSecEvalState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/appSecEval:AppSecEval", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppSecEval resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppSecEval Get(string name, Input<string> id, AppSecEvalState? state = null, CustomResourceOptions? options = null)
        {
            return new AppSecEval(name, id, state, options);
        }
    }

    public sealed class AppSecEvalArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique identifier of the security configuration
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// Evaluation mode (ASE_AUTO or ASE_MANUAL)
        /// </summary>
        [Input("evalMode")]
        public Input<string>? EvalMode { get; set; }

        /// <summary>
        /// Evaluation mode operation (START, STOP, RESTART, UPDATE or COMPLETE)
        /// </summary>
        [Input("evalOperation", required: true)]
        public Input<string> EvalOperation { get; set; } = null!;

        /// <summary>
        /// Unique identifier of the security policy
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public Input<string> SecurityPolicyId { get; set; } = null!;

        public AppSecEvalArgs()
        {
        }
        public static new AppSecEvalArgs Empty => new AppSecEvalArgs();
    }

    public sealed class AppSecEvalState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique identifier of the security configuration
        /// </summary>
        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        /// <summary>
        /// Versioning information for the Kona Rule Set currently in use in production
        /// </summary>
        [Input("currentRuleset")]
        public Input<string>? CurrentRuleset { get; set; }

        /// <summary>
        /// Evaluation mode (ASE_AUTO or ASE_MANUAL)
        /// </summary>
        [Input("evalMode")]
        public Input<string>? EvalMode { get; set; }

        /// <summary>
        /// Evaluation mode operation (START, STOP, RESTART, UPDATE or COMPLETE)
        /// </summary>
        [Input("evalOperation")]
        public Input<string>? EvalOperation { get; set; }

        /// <summary>
        /// Whether an evaluation is currently in progress
        /// </summary>
        [Input("evalStatus")]
        public Input<string>? EvalStatus { get; set; }

        /// <summary>
        /// Versioning information for the Kona Rule Set being evaluated
        /// </summary>
        [Input("evaluatingRuleset")]
        public Input<string>? EvaluatingRuleset { get; set; }

        /// <summary>
        /// Date when the evaluation period ends
        /// </summary>
        [Input("expirationDate")]
        public Input<string>? ExpirationDate { get; set; }

        /// <summary>
        /// Unique identifier of the security policy
        /// </summary>
        [Input("securityPolicyId")]
        public Input<string>? SecurityPolicyId { get; set; }

        public AppSecEvalState()
        {
        }
        public static new AppSecEvalState Empty => new AppSecEvalState();
    }
}
