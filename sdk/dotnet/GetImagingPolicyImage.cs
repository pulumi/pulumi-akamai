// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetImagingPolicyImage
    {
        public static Task<GetImagingPolicyImageResult> InvokeAsync(GetImagingPolicyImageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImagingPolicyImageResult>("akamai:index/getImagingPolicyImage:getImagingPolicyImage", args ?? new GetImagingPolicyImageArgs(), options.WithDefaults());

        public static Output<GetImagingPolicyImageResult> Invoke(GetImagingPolicyImageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImagingPolicyImageResult>("akamai:index/getImagingPolicyImage:getImagingPolicyImage", args ?? new GetImagingPolicyImageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImagingPolicyImageArgs : global::Pulumi.InvokeArgs
    {
        [Input("policy", required: true)]
        public Inputs.GetImagingPolicyImagePolicyArgs Policy { get; set; } = null!;

        public GetImagingPolicyImageArgs()
        {
        }
        public static new GetImagingPolicyImageArgs Empty => new GetImagingPolicyImageArgs();
    }

    public sealed class GetImagingPolicyImageInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("policy", required: true)]
        public Input<Inputs.GetImagingPolicyImagePolicyInputArgs> Policy { get; set; } = null!;

        public GetImagingPolicyImageInvokeArgs()
        {
        }
        public static new GetImagingPolicyImageInvokeArgs Empty => new GetImagingPolicyImageInvokeArgs();
    }


    [OutputType]
    public sealed class GetImagingPolicyImageResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly Outputs.GetImagingPolicyImagePolicyResult Policy;

        [OutputConstructor]
        private GetImagingPolicyImageResult(
            string id,

            string json,

            Outputs.GetImagingPolicyImagePolicyResult policy)
        {
            Id = id;
            Json = json;
            Policy = policy;
        }
    }
}
