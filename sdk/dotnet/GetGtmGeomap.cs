// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetGtmGeomap
    {
        public static Task<GetGtmGeomapResult> InvokeAsync(GetGtmGeomapArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGtmGeomapResult>("akamai:index/getGtmGeomap:getGtmGeomap", args ?? new GetGtmGeomapArgs(), options.WithDefaults());

        public static Output<GetGtmGeomapResult> Invoke(GetGtmGeomapInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGtmGeomapResult>("akamai:index/getGtmGeomap:getGtmGeomap", args ?? new GetGtmGeomapInvokeArgs(), options.WithDefaults());

        public static Output<GetGtmGeomapResult> Invoke(GetGtmGeomapInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGtmGeomapResult>("akamai:index/getGtmGeomap:getGtmGeomap", args ?? new GetGtmGeomapInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGtmGeomapArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        [Input("mapName", required: true)]
        public string MapName { get; set; } = null!;

        public GetGtmGeomapArgs()
        {
        }
        public static new GetGtmGeomapArgs Empty => new GetGtmGeomapArgs();
    }

    public sealed class GetGtmGeomapInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("mapName", required: true)]
        public Input<string> MapName { get; set; } = null!;

        public GetGtmGeomapInvokeArgs()
        {
        }
        public static new GetGtmGeomapInvokeArgs Empty => new GetGtmGeomapInvokeArgs();
    }


    [OutputType]
    public sealed class GetGtmGeomapResult
    {
        public readonly ImmutableArray<Outputs.GetGtmGeomapAssignmentResult> Assignments;
        public readonly Outputs.GetGtmGeomapDefaultDatacenterResult DefaultDatacenter;
        public readonly string Domain;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetGtmGeomapLinkResult> Links;
        public readonly string MapName;

        [OutputConstructor]
        private GetGtmGeomapResult(
            ImmutableArray<Outputs.GetGtmGeomapAssignmentResult> assignments,

            Outputs.GetGtmGeomapDefaultDatacenterResult defaultDatacenter,

            string domain,

            string id,

            ImmutableArray<Outputs.GetGtmGeomapLinkResult> links,

            string mapName)
        {
            Assignments = assignments;
            DefaultDatacenter = defaultDatacenter;
            Domain = domain;
            Id = id;
            Links = links;
            MapName = mapName;
        }
    }
}
