// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetPropertyRulesBuilderRulesV20240212BehaviorBossBeaconingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A space-separated set of error patterns that trigger beacons to conditional feeds. Each pattern can include wildcards, where `?` matches a single character and `*` matches zero or more characters. For example, `*CONNECT* *DENIED*` matches two different words as substrings.
        /// </summary>
        [Input("conditionalErrorPattern")]
        public string? ConditionalErrorPattern { get; set; }

        [Input("conditionalHttpStatuses")]
        private List<string>? _conditionalHttpStatuses;

        /// <summary>
        /// Specifies the set of response status codes or ranges that trigger the beacon.
        /// </summary>
        public List<string> ConditionalHttpStatuses
        {
            get => _conditionalHttpStatuses ?? (_conditionalHttpStatuses = new List<string>());
            set => _conditionalHttpStatuses = value;
        }

        /// <summary>
        /// Specifies a conditional sampling frequency or disables beacons.
        /// </summary>
        [Input("conditionalSamplingFrequency")]
        public string? ConditionalSamplingFrequency { get; set; }

        /// <summary>
        /// The space-separated list of CP codes that trigger the beacons. You need to specify the same set of CP codes within BOSS.
        /// </summary>
        [Input("cpcodes")]
        public string? Cpcodes { get; set; }

        /// <summary>
        /// Enable diagnostic data beacons.
        /// </summary>
        [Input("enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Specify when to trigger a beacon.
        /// </summary>
        [Input("forwardType")]
        public string? ForwardType { get; set; }

        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        [Input("locked")]
        public bool? Locked { get; set; }

        /// <summary>
        /// Specify when to trigger a beacon.
        /// </summary>
        [Input("requestType")]
        public string? RequestType { get; set; }

        /// <summary>
        /// Specifies a sampling frequency or disables beacons.
        /// </summary>
        [Input("samplingFrequency")]
        public string? SamplingFrequency { get; set; }

        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        [Input("templateUuid")]
        public string? TemplateUuid { get; set; }

        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        [Input("uuid")]
        public string? Uuid { get; set; }

        public GetPropertyRulesBuilderRulesV20240212BehaviorBossBeaconingArgs()
        {
        }
        public static new GetPropertyRulesBuilderRulesV20240212BehaviorBossBeaconingArgs Empty => new GetPropertyRulesBuilderRulesV20240212BehaviorBossBeaconingArgs();
    }
}
