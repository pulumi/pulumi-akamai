// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyVariableInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default value of the variable if no query parameter is provided. It needs to be one of the `enumOptions` if any are provided.
        /// </summary>
        [Input("defaultValue", required: true)]
        public Input<string> DefaultValue { get; set; } = null!;

        [Input("enumOptions")]
        private InputList<Inputs.GetImagingPolicyImagePolicyVariableEnumOptionInputArgs>? _enumOptions;
        public InputList<Inputs.GetImagingPolicyImagePolicyVariableEnumOptionInputArgs> EnumOptions
        {
            get => _enumOptions ?? (_enumOptions = new InputList<Inputs.GetImagingPolicyImagePolicyVariableEnumOptionInputArgs>());
            set => _enumOptions = value;
        }

        /// <summary>
        /// The name of the variable, also available as the query parameter name to set the variable's value dynamically. Use up to 50 alphanumeric characters.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// A postfix added to the value provided for the variable, or to the default value.
        /// </summary>
        [Input("postfix")]
        public Input<string>? Postfix { get; set; }

        /// <summary>
        /// A prefix added to the value provided for the variable, or to the default value.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// The type of value for the variable.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetImagingPolicyImagePolicyVariableInputArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyVariableInputArgs Empty => new GetImagingPolicyImagePolicyVariableInputArgs();
    }
}
