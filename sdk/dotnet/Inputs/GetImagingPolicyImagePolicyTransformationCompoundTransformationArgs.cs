// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationCompoundTransformationInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("appends")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendInputArgs>? _appends;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendInputArgs> Appends
        {
            get => _appends ?? (_appends = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendInputArgs>());
            set => _appends = value;
        }

        [Input("aspectCrops")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationAspectCropInputArgs>? _aspectCrops;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationAspectCropInputArgs> AspectCrops
        {
            get => _aspectCrops ?? (_aspectCrops = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationAspectCropInputArgs>());
            set => _aspectCrops = value;
        }

        [Input("backgroundColors")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationBackgroundColorInputArgs>? _backgroundColors;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationBackgroundColorInputArgs> BackgroundColors
        {
            get => _backgroundColors ?? (_backgroundColors = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationBackgroundColorInputArgs>());
            set => _backgroundColors = value;
        }

        [Input("blurs")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationBlurInputArgs>? _blurs;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationBlurInputArgs> Blurs
        {
            get => _blurs ?? (_blurs = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationBlurInputArgs>());
            set => _blurs = value;
        }

        [Input("chromaKeys")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationChromaKeyInputArgs>? _chromaKeys;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationChromaKeyInputArgs> ChromaKeys
        {
            get => _chromaKeys ?? (_chromaKeys = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationChromaKeyInputArgs>());
            set => _chromaKeys = value;
        }

        [Input("composites")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationCompositeInputArgs>? _composites;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationCompositeInputArgs> Composites
        {
            get => _composites ?? (_composites = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationCompositeInputArgs>());
            set => _composites = value;
        }

        [Input("compounds")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationCompoundInputArgs>? _compounds;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationCompoundInputArgs> Compounds
        {
            get => _compounds ?? (_compounds = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationCompoundInputArgs>());
            set => _compounds = value;
        }

        [Input("contrasts")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationContrastInputArgs>? _contrasts;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationContrastInputArgs> Contrasts
        {
            get => _contrasts ?? (_contrasts = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationContrastInputArgs>());
            set => _contrasts = value;
        }

        [Input("crops")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationCropInputArgs>? _crops;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationCropInputArgs> Crops
        {
            get => _crops ?? (_crops = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationCropInputArgs>());
            set => _crops = value;
        }

        [Input("faceCrops")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFaceCropInputArgs>? _faceCrops;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFaceCropInputArgs> FaceCrops
        {
            get => _faceCrops ?? (_faceCrops = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFaceCropInputArgs>());
            set => _faceCrops = value;
        }

        [Input("featureCrops")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFeatureCropInputArgs>? _featureCrops;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFeatureCropInputArgs> FeatureCrops
        {
            get => _featureCrops ?? (_featureCrops = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFeatureCropInputArgs>());
            set => _featureCrops = value;
        }

        [Input("fitAndFills")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillInputArgs>? _fitAndFills;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillInputArgs> FitAndFills
        {
            get => _fitAndFills ?? (_fitAndFills = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillInputArgs>());
            set => _fitAndFills = value;
        }

        [Input("goops")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationGoopInputArgs>? _goops;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationGoopInputArgs> Goops
        {
            get => _goops ?? (_goops = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationGoopInputArgs>());
            set => _goops = value;
        }

        [Input("grayscales")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationGrayscaleInputArgs>? _grayscales;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationGrayscaleInputArgs> Grayscales
        {
            get => _grayscales ?? (_grayscales = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationGrayscaleInputArgs>());
            set => _grayscales = value;
        }

        [Input("hsls")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationHslInputArgs>? _hsls;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationHslInputArgs> Hsls
        {
            get => _hsls ?? (_hsls = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationHslInputArgs>());
            set => _hsls = value;
        }

        [Input("hsvs")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationHsvInputArgs>? _hsvs;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationHsvInputArgs> Hsvs
        {
            get => _hsvs ?? (_hsvs = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationHsvInputArgs>());
            set => _hsvs = value;
        }

        [Input("ifDimensions")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionInputArgs>? _ifDimensions;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionInputArgs> IfDimensions
        {
            get => _ifDimensions ?? (_ifDimensions = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionInputArgs>());
            set => _ifDimensions = value;
        }

        [Input("ifOrientations")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationInputArgs>? _ifOrientations;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationInputArgs> IfOrientations
        {
            get => _ifOrientations ?? (_ifOrientations = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationInputArgs>());
            set => _ifOrientations = value;
        }

        [Input("imQueries")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationImQueryInputArgs>? _imQueries;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationImQueryInputArgs> ImQueries
        {
            get => _imQueries ?? (_imQueries = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationImQueryInputArgs>());
            set => _imQueries = value;
        }

        [Input("maxColors")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationMaxColorInputArgs>? _maxColors;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationMaxColorInputArgs> MaxColors
        {
            get => _maxColors ?? (_maxColors = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationMaxColorInputArgs>());
            set => _maxColors = value;
        }

        [Input("mirrors")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationMirrorInputArgs>? _mirrors;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationMirrorInputArgs> Mirrors
        {
            get => _mirrors ?? (_mirrors = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationMirrorInputArgs>());
            set => _mirrors = value;
        }

        [Input("monoHues")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationMonoHueInputArgs>? _monoHues;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationMonoHueInputArgs> MonoHues
        {
            get => _monoHues ?? (_monoHues = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationMonoHueInputArgs>());
            set => _monoHues = value;
        }

        [Input("opacities")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationOpacityInputArgs>? _opacities;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationOpacityInputArgs> Opacities
        {
            get => _opacities ?? (_opacities = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationOpacityInputArgs>());
            set => _opacities = value;
        }

        [Input("regionOfInterestCrops")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropInputArgs>? _regionOfInterestCrops;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropInputArgs> RegionOfInterestCrops
        {
            get => _regionOfInterestCrops ?? (_regionOfInterestCrops = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropInputArgs>());
            set => _regionOfInterestCrops = value;
        }

        [Input("relativeCrops")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRelativeCropInputArgs>? _relativeCrops;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRelativeCropInputArgs> RelativeCrops
        {
            get => _relativeCrops ?? (_relativeCrops = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRelativeCropInputArgs>());
            set => _relativeCrops = value;
        }

        [Input("removeColors")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRemoveColorInputArgs>? _removeColors;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRemoveColorInputArgs> RemoveColors
        {
            get => _removeColors ?? (_removeColors = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRemoveColorInputArgs>());
            set => _removeColors = value;
        }

        [Input("resizes")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationResizeInputArgs>? _resizes;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationResizeInputArgs> Resizes
        {
            get => _resizes ?? (_resizes = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationResizeInputArgs>());
            set => _resizes = value;
        }

        [Input("rotates")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRotateInputArgs>? _rotates;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRotateInputArgs> Rotates
        {
            get => _rotates ?? (_rotates = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRotateInputArgs>());
            set => _rotates = value;
        }

        [Input("scales")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationScaleInputArgs>? _scales;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationScaleInputArgs> Scales
        {
            get => _scales ?? (_scales = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationScaleInputArgs>());
            set => _scales = value;
        }

        [Input("shears")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationShearsInputArgs>? _shears;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationShearsInputArgs> Shears
        {
            get => _shears ?? (_shears = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationShearsInputArgs>());
            set => _shears = value;
        }

        [Input("trims")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationTrimInputArgs>? _trims;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationTrimInputArgs> Trims
        {
            get => _trims ?? (_trims = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationTrimInputArgs>());
            set => _trims = value;
        }

        [Input("unsharpMasks")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationUnsharpMaskInputArgs>? _unsharpMasks;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationUnsharpMaskInputArgs> UnsharpMasks
        {
            get => _unsharpMasks ?? (_unsharpMasks = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationUnsharpMaskInputArgs>());
            set => _unsharpMasks = value;
        }

        public GetImagingPolicyImagePolicyTransformationCompoundTransformationInputArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationCompoundTransformationInputArgs Empty => new GetImagingPolicyImagePolicyTransformationCompoundTransformationInputArgs();
    }
}
