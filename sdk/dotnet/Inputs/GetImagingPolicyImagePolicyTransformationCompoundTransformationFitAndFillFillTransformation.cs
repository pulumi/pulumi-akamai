// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationArgs : global::Pulumi.InvokeArgs
    {
        [Input("appends")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationAppendArgs>? _appends;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationAppendArgs> Appends
        {
            get => _appends ?? (_appends = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationAppendArgs>());
            set => _appends = value;
        }

        [Input("aspectCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationAspectCropArgs>? _aspectCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationAspectCropArgs> AspectCrops
        {
            get => _aspectCrops ?? (_aspectCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationAspectCropArgs>());
            set => _aspectCrops = value;
        }

        [Input("backgroundColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationBackgroundColorArgs>? _backgroundColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationBackgroundColorArgs> BackgroundColors
        {
            get => _backgroundColors ?? (_backgroundColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationBackgroundColorArgs>());
            set => _backgroundColors = value;
        }

        [Input("blurs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationBlurArgs>? _blurs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationBlurArgs> Blurs
        {
            get => _blurs ?? (_blurs = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationBlurArgs>());
            set => _blurs = value;
        }

        [Input("chromaKeys")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationChromaKeyArgs>? _chromaKeys;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationChromaKeyArgs> ChromaKeys
        {
            get => _chromaKeys ?? (_chromaKeys = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationChromaKeyArgs>());
            set => _chromaKeys = value;
        }

        [Input("composites")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationCompositeArgs>? _composites;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationCompositeArgs> Composites
        {
            get => _composites ?? (_composites = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationCompositeArgs>());
            set => _composites = value;
        }

        [Input("compounds")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationCompoundArgs>? _compounds;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationCompoundArgs> Compounds
        {
            get => _compounds ?? (_compounds = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationCompoundArgs>());
            set => _compounds = value;
        }

        [Input("contrasts")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationContrastArgs>? _contrasts;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationContrastArgs> Contrasts
        {
            get => _contrasts ?? (_contrasts = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationContrastArgs>());
            set => _contrasts = value;
        }

        [Input("crops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationCropArgs>? _crops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationCropArgs> Crops
        {
            get => _crops ?? (_crops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationCropArgs>());
            set => _crops = value;
        }

        [Input("faceCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationFaceCropArgs>? _faceCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationFaceCropArgs> FaceCrops
        {
            get => _faceCrops ?? (_faceCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationFaceCropArgs>());
            set => _faceCrops = value;
        }

        [Input("featureCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationFeatureCropArgs>? _featureCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationFeatureCropArgs> FeatureCrops
        {
            get => _featureCrops ?? (_featureCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationFeatureCropArgs>());
            set => _featureCrops = value;
        }

        [Input("fitAndFills")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationFitAndFillArgs>? _fitAndFills;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationFitAndFillArgs> FitAndFills
        {
            get => _fitAndFills ?? (_fitAndFills = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationFitAndFillArgs>());
            set => _fitAndFills = value;
        }

        [Input("goops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationGoopArgs>? _goops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationGoopArgs> Goops
        {
            get => _goops ?? (_goops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationGoopArgs>());
            set => _goops = value;
        }

        [Input("grayscales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationGrayscaleArgs>? _grayscales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationGrayscaleArgs> Grayscales
        {
            get => _grayscales ?? (_grayscales = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationGrayscaleArgs>());
            set => _grayscales = value;
        }

        [Input("hsls")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationHslArgs>? _hsls;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationHslArgs> Hsls
        {
            get => _hsls ?? (_hsls = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationHslArgs>());
            set => _hsls = value;
        }

        [Input("hsvs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationHsvArgs>? _hsvs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationHsvArgs> Hsvs
        {
            get => _hsvs ?? (_hsvs = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationHsvArgs>());
            set => _hsvs = value;
        }

        [Input("ifDimensions")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationIfDimensionArgs>? _ifDimensions;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationIfDimensionArgs> IfDimensions
        {
            get => _ifDimensions ?? (_ifDimensions = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationIfDimensionArgs>());
            set => _ifDimensions = value;
        }

        [Input("ifOrientations")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationIfOrientationArgs>? _ifOrientations;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationIfOrientationArgs> IfOrientations
        {
            get => _ifOrientations ?? (_ifOrientations = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationIfOrientationArgs>());
            set => _ifOrientations = value;
        }

        [Input("imQueries")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationImQueryArgs>? _imQueries;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationImQueryArgs> ImQueries
        {
            get => _imQueries ?? (_imQueries = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationImQueryArgs>());
            set => _imQueries = value;
        }

        [Input("maxColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationMaxColorArgs>? _maxColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationMaxColorArgs> MaxColors
        {
            get => _maxColors ?? (_maxColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationMaxColorArgs>());
            set => _maxColors = value;
        }

        [Input("mirrors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationMirrorArgs>? _mirrors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationMirrorArgs> Mirrors
        {
            get => _mirrors ?? (_mirrors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationMirrorArgs>());
            set => _mirrors = value;
        }

        [Input("monoHues")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationMonoHueArgs>? _monoHues;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationMonoHueArgs> MonoHues
        {
            get => _monoHues ?? (_monoHues = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationMonoHueArgs>());
            set => _monoHues = value;
        }

        [Input("opacities")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacityArgs>? _opacities;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacityArgs> Opacities
        {
            get => _opacities ?? (_opacities = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacityArgs>());
            set => _opacities = value;
        }

        [Input("regionOfInterestCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRegionOfInterestCropArgs>? _regionOfInterestCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRegionOfInterestCropArgs> RegionOfInterestCrops
        {
            get => _regionOfInterestCrops ?? (_regionOfInterestCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRegionOfInterestCropArgs>());
            set => _regionOfInterestCrops = value;
        }

        [Input("relativeCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRelativeCropArgs>? _relativeCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRelativeCropArgs> RelativeCrops
        {
            get => _relativeCrops ?? (_relativeCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRelativeCropArgs>());
            set => _relativeCrops = value;
        }

        [Input("removeColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRemoveColorArgs>? _removeColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRemoveColorArgs> RemoveColors
        {
            get => _removeColors ?? (_removeColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRemoveColorArgs>());
            set => _removeColors = value;
        }

        [Input("resizes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationResizeArgs>? _resizes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationResizeArgs> Resizes
        {
            get => _resizes ?? (_resizes = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationResizeArgs>());
            set => _resizes = value;
        }

        [Input("rotates")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRotateArgs>? _rotates;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRotateArgs> Rotates
        {
            get => _rotates ?? (_rotates = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationRotateArgs>());
            set => _rotates = value;
        }

        [Input("scales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationScaleArgs>? _scales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationScaleArgs> Scales
        {
            get => _scales ?? (_scales = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationScaleArgs>());
            set => _scales = value;
        }

        [Input("shears")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationShearsArgs>? _shears;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationShearsArgs> Shears
        {
            get => _shears ?? (_shears = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationShearsArgs>());
            set => _shears = value;
        }

        [Input("trims")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationTrimArgs>? _trims;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationTrimArgs> Trims
        {
            get => _trims ?? (_trims = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationTrimArgs>());
            set => _trims = value;
        }

        [Input("unsharpMasks")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationUnsharpMaskArgs>? _unsharpMasks;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationUnsharpMaskArgs> UnsharpMasks
        {
            get => _unsharpMasks ?? (_unsharpMasks = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationUnsharpMaskArgs>());
            set => _unsharpMasks = value;
        }

        public GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationArgs Empty => new GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationArgs();
    }
}
