// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationArgs : global::Pulumi.InvokeArgs
    {
        [Input("appends")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationAppendArgs>? _appends;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationAppendArgs> Appends
        {
            get => _appends ?? (_appends = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationAppendArgs>());
            set => _appends = value;
        }

        [Input("aspectCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationAspectCropArgs>? _aspectCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationAspectCropArgs> AspectCrops
        {
            get => _aspectCrops ?? (_aspectCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationAspectCropArgs>());
            set => _aspectCrops = value;
        }

        [Input("backgroundColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationBackgroundColorArgs>? _backgroundColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationBackgroundColorArgs> BackgroundColors
        {
            get => _backgroundColors ?? (_backgroundColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationBackgroundColorArgs>());
            set => _backgroundColors = value;
        }

        [Input("blurs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationBlurArgs>? _blurs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationBlurArgs> Blurs
        {
            get => _blurs ?? (_blurs = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationBlurArgs>());
            set => _blurs = value;
        }

        [Input("chromaKeys")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationChromaKeyArgs>? _chromaKeys;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationChromaKeyArgs> ChromaKeys
        {
            get => _chromaKeys ?? (_chromaKeys = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationChromaKeyArgs>());
            set => _chromaKeys = value;
        }

        [Input("composites")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationCompositeArgs>? _composites;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationCompositeArgs> Composites
        {
            get => _composites ?? (_composites = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationCompositeArgs>());
            set => _composites = value;
        }

        [Input("compounds")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationCompoundArgs>? _compounds;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationCompoundArgs> Compounds
        {
            get => _compounds ?? (_compounds = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationCompoundArgs>());
            set => _compounds = value;
        }

        [Input("contrasts")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationContrastArgs>? _contrasts;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationContrastArgs> Contrasts
        {
            get => _contrasts ?? (_contrasts = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationContrastArgs>());
            set => _contrasts = value;
        }

        [Input("crops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationCropArgs>? _crops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationCropArgs> Crops
        {
            get => _crops ?? (_crops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationCropArgs>());
            set => _crops = value;
        }

        [Input("faceCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationFaceCropArgs>? _faceCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationFaceCropArgs> FaceCrops
        {
            get => _faceCrops ?? (_faceCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationFaceCropArgs>());
            set => _faceCrops = value;
        }

        [Input("featureCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationFeatureCropArgs>? _featureCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationFeatureCropArgs> FeatureCrops
        {
            get => _featureCrops ?? (_featureCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationFeatureCropArgs>());
            set => _featureCrops = value;
        }

        [Input("fitAndFills")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationFitAndFillArgs>? _fitAndFills;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationFitAndFillArgs> FitAndFills
        {
            get => _fitAndFills ?? (_fitAndFills = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationFitAndFillArgs>());
            set => _fitAndFills = value;
        }

        [Input("goops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationGoopArgs>? _goops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationGoopArgs> Goops
        {
            get => _goops ?? (_goops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationGoopArgs>());
            set => _goops = value;
        }

        [Input("grayscales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationGrayscaleArgs>? _grayscales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationGrayscaleArgs> Grayscales
        {
            get => _grayscales ?? (_grayscales = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationGrayscaleArgs>());
            set => _grayscales = value;
        }

        [Input("hsls")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationHslArgs>? _hsls;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationHslArgs> Hsls
        {
            get => _hsls ?? (_hsls = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationHslArgs>());
            set => _hsls = value;
        }

        [Input("hsvs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationHsvArgs>? _hsvs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationHsvArgs> Hsvs
        {
            get => _hsvs ?? (_hsvs = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationHsvArgs>());
            set => _hsvs = value;
        }

        [Input("ifDimensions")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationIfDimensionArgs>? _ifDimensions;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationIfDimensionArgs> IfDimensions
        {
            get => _ifDimensions ?? (_ifDimensions = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationIfDimensionArgs>());
            set => _ifDimensions = value;
        }

        [Input("ifOrientations")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationIfOrientationArgs>? _ifOrientations;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationIfOrientationArgs> IfOrientations
        {
            get => _ifOrientations ?? (_ifOrientations = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationIfOrientationArgs>());
            set => _ifOrientations = value;
        }

        [Input("imQueries")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationImQueryArgs>? _imQueries;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationImQueryArgs> ImQueries
        {
            get => _imQueries ?? (_imQueries = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationImQueryArgs>());
            set => _imQueries = value;
        }

        [Input("maxColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationMaxColorArgs>? _maxColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationMaxColorArgs> MaxColors
        {
            get => _maxColors ?? (_maxColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationMaxColorArgs>());
            set => _maxColors = value;
        }

        [Input("mirrors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationMirrorArgs>? _mirrors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationMirrorArgs> Mirrors
        {
            get => _mirrors ?? (_mirrors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationMirrorArgs>());
            set => _mirrors = value;
        }

        [Input("monoHues")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationMonoHueArgs>? _monoHues;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationMonoHueArgs> MonoHues
        {
            get => _monoHues ?? (_monoHues = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationMonoHueArgs>());
            set => _monoHues = value;
        }

        [Input("opacities")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationOpacityArgs>? _opacities;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationOpacityArgs> Opacities
        {
            get => _opacities ?? (_opacities = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationOpacityArgs>());
            set => _opacities = value;
        }

        [Input("regionOfInterestCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRegionOfInterestCropArgs>? _regionOfInterestCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRegionOfInterestCropArgs> RegionOfInterestCrops
        {
            get => _regionOfInterestCrops ?? (_regionOfInterestCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRegionOfInterestCropArgs>());
            set => _regionOfInterestCrops = value;
        }

        [Input("relativeCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRelativeCropArgs>? _relativeCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRelativeCropArgs> RelativeCrops
        {
            get => _relativeCrops ?? (_relativeCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRelativeCropArgs>());
            set => _relativeCrops = value;
        }

        [Input("removeColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRemoveColorArgs>? _removeColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRemoveColorArgs> RemoveColors
        {
            get => _removeColors ?? (_removeColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRemoveColorArgs>());
            set => _removeColors = value;
        }

        [Input("resizes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationResizeArgs>? _resizes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationResizeArgs> Resizes
        {
            get => _resizes ?? (_resizes = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationResizeArgs>());
            set => _resizes = value;
        }

        [Input("rotates")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRotateArgs>? _rotates;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRotateArgs> Rotates
        {
            get => _rotates ?? (_rotates = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationRotateArgs>());
            set => _rotates = value;
        }

        [Input("scales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationScaleArgs>? _scales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationScaleArgs> Scales
        {
            get => _scales ?? (_scales = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationScaleArgs>());
            set => _scales = value;
        }

        [Input("shears")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationShearsArgs>? _shears;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationShearsArgs> Shears
        {
            get => _shears ?? (_shears = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationShearsArgs>());
            set => _shears = value;
        }

        [Input("trims")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationTrimArgs>? _trims;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationTrimArgs> Trims
        {
            get => _trims ?? (_trims = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationTrimArgs>());
            set => _trims = value;
        }

        [Input("unsharpMasks")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationUnsharpMaskArgs>? _unsharpMasks;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationUnsharpMaskArgs> UnsharpMasks
        {
            get => _unsharpMasks ?? (_unsharpMasks = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationUnsharpMaskArgs>());
            set => _unsharpMasks = value;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationArgs Empty => new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeCompoundTransformationArgs();
    }
}
