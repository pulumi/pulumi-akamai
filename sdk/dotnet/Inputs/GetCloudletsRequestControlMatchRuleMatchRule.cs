// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetCloudletsRequestControlMatchRuleMatchRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Required) If set to `allow`, the request is sent to origin when all conditions are true. If set to `deny`, the request is denied when all conditions are true. If set to `denybranded`, the request is denied and rerouted according to the Request Control behavior settings.
        /// </summary>
        [Input("allowDeny", required: true)]
        public string AllowDeny { get; set; } = null!;

        /// <summary>
        /// (Optional) Whether to disable a rule. When a rule is disabled it's not evaluated against incoming requests.
        /// </summary>
        [Input("disabled")]
        public bool? Disabled { get; set; }

        /// <summary>
        /// (Optional) The end time for this match. Specify the value in UTC in seconds since the epoch.
        /// </summary>
        [Input("end")]
        public int? End { get; set; }

        [Input("matches")]
        private List<Inputs.GetCloudletsRequestControlMatchRuleMatchRuleMatchArgs>? _matches;

        /// <summary>
        /// (Optional) A list of conditions to apply to a Cloudlet, including:
        /// </summary>
        public List<Inputs.GetCloudletsRequestControlMatchRuleMatchRuleMatchArgs> Matches
        {
            get => _matches ?? (_matches = new List<Inputs.GetCloudletsRequestControlMatchRuleMatchRuleMatchArgs>());
            set => _matches = value;
        }

        /// <summary>
        /// (Optional) Match on all incoming requests.
        /// </summary>
        [Input("matchesAlways")]
        public bool? MatchesAlways { get; set; }

        /// <summary>
        /// (Optional) If you're using a `match_type` that supports name attributes, specify the part the incoming request to match on, either `cookie`, `header`, `parameter`, or `query`.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// (Optional) The start time for this match. Specify the value in UTC in seconds since the epoch.
        /// </summary>
        [Input("start")]
        public int? Start { get; set; }

        /// <summary>
        /// (Required) The type of the array, either `object` or `simple`. Use the `simple` option when adding only an array of string-based values.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetCloudletsRequestControlMatchRuleMatchRuleArgs()
        {
        }
        public static new GetCloudletsRequestControlMatchRuleMatchRuleArgs Empty => new GetCloudletsRequestControlMatchRuleMatchRuleArgs();
    }
}
