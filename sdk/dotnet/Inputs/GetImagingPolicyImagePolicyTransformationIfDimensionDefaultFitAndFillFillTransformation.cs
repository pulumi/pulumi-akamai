// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationArgs : global::Pulumi.InvokeArgs
    {
        [Input("appends")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationAppendArgs>? _appends;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationAppendArgs> Appends
        {
            get => _appends ?? (_appends = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationAppendArgs>());
            set => _appends = value;
        }

        [Input("aspectCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationAspectCropArgs>? _aspectCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationAspectCropArgs> AspectCrops
        {
            get => _aspectCrops ?? (_aspectCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationAspectCropArgs>());
            set => _aspectCrops = value;
        }

        [Input("backgroundColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationBackgroundColorArgs>? _backgroundColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationBackgroundColorArgs> BackgroundColors
        {
            get => _backgroundColors ?? (_backgroundColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationBackgroundColorArgs>());
            set => _backgroundColors = value;
        }

        [Input("blurs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationBlurArgs>? _blurs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationBlurArgs> Blurs
        {
            get => _blurs ?? (_blurs = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationBlurArgs>());
            set => _blurs = value;
        }

        [Input("chromaKeys")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationChromaKeyArgs>? _chromaKeys;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationChromaKeyArgs> ChromaKeys
        {
            get => _chromaKeys ?? (_chromaKeys = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationChromaKeyArgs>());
            set => _chromaKeys = value;
        }

        [Input("composites")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationCompositeArgs>? _composites;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationCompositeArgs> Composites
        {
            get => _composites ?? (_composites = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationCompositeArgs>());
            set => _composites = value;
        }

        [Input("compounds")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationCompoundArgs>? _compounds;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationCompoundArgs> Compounds
        {
            get => _compounds ?? (_compounds = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationCompoundArgs>());
            set => _compounds = value;
        }

        [Input("contrasts")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationContrastArgs>? _contrasts;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationContrastArgs> Contrasts
        {
            get => _contrasts ?? (_contrasts = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationContrastArgs>());
            set => _contrasts = value;
        }

        [Input("crops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationCropArgs>? _crops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationCropArgs> Crops
        {
            get => _crops ?? (_crops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationCropArgs>());
            set => _crops = value;
        }

        [Input("faceCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationFaceCropArgs>? _faceCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationFaceCropArgs> FaceCrops
        {
            get => _faceCrops ?? (_faceCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationFaceCropArgs>());
            set => _faceCrops = value;
        }

        [Input("featureCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationFeatureCropArgs>? _featureCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationFeatureCropArgs> FeatureCrops
        {
            get => _featureCrops ?? (_featureCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationFeatureCropArgs>());
            set => _featureCrops = value;
        }

        [Input("fitAndFills")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationFitAndFillArgs>? _fitAndFills;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationFitAndFillArgs> FitAndFills
        {
            get => _fitAndFills ?? (_fitAndFills = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationFitAndFillArgs>());
            set => _fitAndFills = value;
        }

        [Input("goops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationGoopArgs>? _goops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationGoopArgs> Goops
        {
            get => _goops ?? (_goops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationGoopArgs>());
            set => _goops = value;
        }

        [Input("grayscales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationGrayscaleArgs>? _grayscales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationGrayscaleArgs> Grayscales
        {
            get => _grayscales ?? (_grayscales = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationGrayscaleArgs>());
            set => _grayscales = value;
        }

        [Input("hsls")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationHslArgs>? _hsls;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationHslArgs> Hsls
        {
            get => _hsls ?? (_hsls = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationHslArgs>());
            set => _hsls = value;
        }

        [Input("hsvs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationHsvArgs>? _hsvs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationHsvArgs> Hsvs
        {
            get => _hsvs ?? (_hsvs = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationHsvArgs>());
            set => _hsvs = value;
        }

        [Input("ifDimensions")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationIfDimensionArgs>? _ifDimensions;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationIfDimensionArgs> IfDimensions
        {
            get => _ifDimensions ?? (_ifDimensions = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationIfDimensionArgs>());
            set => _ifDimensions = value;
        }

        [Input("ifOrientations")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationIfOrientationArgs>? _ifOrientations;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationIfOrientationArgs> IfOrientations
        {
            get => _ifOrientations ?? (_ifOrientations = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationIfOrientationArgs>());
            set => _ifOrientations = value;
        }

        [Input("imQueries")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationImQueryArgs>? _imQueries;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationImQueryArgs> ImQueries
        {
            get => _imQueries ?? (_imQueries = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationImQueryArgs>());
            set => _imQueries = value;
        }

        [Input("maxColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationMaxColorArgs>? _maxColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationMaxColorArgs> MaxColors
        {
            get => _maxColors ?? (_maxColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationMaxColorArgs>());
            set => _maxColors = value;
        }

        [Input("mirrors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationMirrorArgs>? _mirrors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationMirrorArgs> Mirrors
        {
            get => _mirrors ?? (_mirrors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationMirrorArgs>());
            set => _mirrors = value;
        }

        [Input("monoHues")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationMonoHueArgs>? _monoHues;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationMonoHueArgs> MonoHues
        {
            get => _monoHues ?? (_monoHues = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationMonoHueArgs>());
            set => _monoHues = value;
        }

        [Input("opacities")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationOpacityArgs>? _opacities;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationOpacityArgs> Opacities
        {
            get => _opacities ?? (_opacities = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationOpacityArgs>());
            set => _opacities = value;
        }

        [Input("regionOfInterestCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRegionOfInterestCropArgs>? _regionOfInterestCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRegionOfInterestCropArgs> RegionOfInterestCrops
        {
            get => _regionOfInterestCrops ?? (_regionOfInterestCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRegionOfInterestCropArgs>());
            set => _regionOfInterestCrops = value;
        }

        [Input("relativeCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRelativeCropArgs>? _relativeCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRelativeCropArgs> RelativeCrops
        {
            get => _relativeCrops ?? (_relativeCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRelativeCropArgs>());
            set => _relativeCrops = value;
        }

        [Input("removeColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRemoveColorArgs>? _removeColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRemoveColorArgs> RemoveColors
        {
            get => _removeColors ?? (_removeColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRemoveColorArgs>());
            set => _removeColors = value;
        }

        [Input("resizes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationResizeArgs>? _resizes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationResizeArgs> Resizes
        {
            get => _resizes ?? (_resizes = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationResizeArgs>());
            set => _resizes = value;
        }

        [Input("rotates")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRotateArgs>? _rotates;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRotateArgs> Rotates
        {
            get => _rotates ?? (_rotates = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationRotateArgs>());
            set => _rotates = value;
        }

        [Input("scales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationScaleArgs>? _scales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationScaleArgs> Scales
        {
            get => _scales ?? (_scales = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationScaleArgs>());
            set => _scales = value;
        }

        [Input("shears")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationShearsArgs>? _shears;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationShearsArgs> Shears
        {
            get => _shears ?? (_shears = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationShearsArgs>());
            set => _shears = value;
        }

        [Input("trims")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationTrimArgs>? _trims;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationTrimArgs> Trims
        {
            get => _trims ?? (_trims = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationTrimArgs>());
            set => _trims = value;
        }

        [Input("unsharpMasks")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationUnsharpMaskArgs>? _unsharpMasks;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationUnsharpMaskArgs> UnsharpMasks
        {
            get => _unsharpMasks ?? (_unsharpMasks = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationUnsharpMaskArgs>());
            set => _unsharpMasks = value;
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationArgs Empty => new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultFitAndFillFillTransformationArgs();
    }
}
