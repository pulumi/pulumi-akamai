// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanArgs : global::Pulumi.InvokeArgs
    {
        [Input("appends")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanAppendArgs>? _appends;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanAppendArgs> Appends
        {
            get => _appends ?? (_appends = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanAppendArgs>());
            set => _appends = value;
        }

        [Input("aspectCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanAspectCropArgs>? _aspectCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanAspectCropArgs> AspectCrops
        {
            get => _aspectCrops ?? (_aspectCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanAspectCropArgs>());
            set => _aspectCrops = value;
        }

        [Input("backgroundColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanBackgroundColorArgs>? _backgroundColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanBackgroundColorArgs> BackgroundColors
        {
            get => _backgroundColors ?? (_backgroundColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanBackgroundColorArgs>());
            set => _backgroundColors = value;
        }

        [Input("blurs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanBlurArgs>? _blurs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanBlurArgs> Blurs
        {
            get => _blurs ?? (_blurs = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanBlurArgs>());
            set => _blurs = value;
        }

        [Input("chromaKeys")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanChromaKeyArgs>? _chromaKeys;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanChromaKeyArgs> ChromaKeys
        {
            get => _chromaKeys ?? (_chromaKeys = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanChromaKeyArgs>());
            set => _chromaKeys = value;
        }

        [Input("composites")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanCompositeArgs>? _composites;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanCompositeArgs> Composites
        {
            get => _composites ?? (_composites = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanCompositeArgs>());
            set => _composites = value;
        }

        [Input("compounds")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanCompoundArgs>? _compounds;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanCompoundArgs> Compounds
        {
            get => _compounds ?? (_compounds = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanCompoundArgs>());
            set => _compounds = value;
        }

        [Input("contrasts")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanContrastArgs>? _contrasts;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanContrastArgs> Contrasts
        {
            get => _contrasts ?? (_contrasts = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanContrastArgs>());
            set => _contrasts = value;
        }

        [Input("crops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanCropArgs>? _crops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanCropArgs> Crops
        {
            get => _crops ?? (_crops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanCropArgs>());
            set => _crops = value;
        }

        [Input("faceCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanFaceCropArgs>? _faceCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanFaceCropArgs> FaceCrops
        {
            get => _faceCrops ?? (_faceCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanFaceCropArgs>());
            set => _faceCrops = value;
        }

        [Input("featureCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanFeatureCropArgs>? _featureCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanFeatureCropArgs> FeatureCrops
        {
            get => _featureCrops ?? (_featureCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanFeatureCropArgs>());
            set => _featureCrops = value;
        }

        [Input("fitAndFills")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanFitAndFillArgs>? _fitAndFills;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanFitAndFillArgs> FitAndFills
        {
            get => _fitAndFills ?? (_fitAndFills = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanFitAndFillArgs>());
            set => _fitAndFills = value;
        }

        [Input("goops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanGoopArgs>? _goops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanGoopArgs> Goops
        {
            get => _goops ?? (_goops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanGoopArgs>());
            set => _goops = value;
        }

        [Input("grayscales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanGrayscaleArgs>? _grayscales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanGrayscaleArgs> Grayscales
        {
            get => _grayscales ?? (_grayscales = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanGrayscaleArgs>());
            set => _grayscales = value;
        }

        [Input("hsls")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanHslArgs>? _hsls;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanHslArgs> Hsls
        {
            get => _hsls ?? (_hsls = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanHslArgs>());
            set => _hsls = value;
        }

        [Input("hsvs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanHsvArgs>? _hsvs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanHsvArgs> Hsvs
        {
            get => _hsvs ?? (_hsvs = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanHsvArgs>());
            set => _hsvs = value;
        }

        [Input("ifDimensions")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanIfDimensionArgs>? _ifDimensions;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanIfDimensionArgs> IfDimensions
        {
            get => _ifDimensions ?? (_ifDimensions = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanIfDimensionArgs>());
            set => _ifDimensions = value;
        }

        [Input("ifOrientations")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanIfOrientationArgs>? _ifOrientations;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanIfOrientationArgs> IfOrientations
        {
            get => _ifOrientations ?? (_ifOrientations = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanIfOrientationArgs>());
            set => _ifOrientations = value;
        }

        [Input("imQueries")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanImQueryArgs>? _imQueries;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanImQueryArgs> ImQueries
        {
            get => _imQueries ?? (_imQueries = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanImQueryArgs>());
            set => _imQueries = value;
        }

        [Input("maxColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanMaxColorArgs>? _maxColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanMaxColorArgs> MaxColors
        {
            get => _maxColors ?? (_maxColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanMaxColorArgs>());
            set => _maxColors = value;
        }

        [Input("mirrors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanMirrorArgs>? _mirrors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanMirrorArgs> Mirrors
        {
            get => _mirrors ?? (_mirrors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanMirrorArgs>());
            set => _mirrors = value;
        }

        [Input("monoHues")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanMonoHueArgs>? _monoHues;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanMonoHueArgs> MonoHues
        {
            get => _monoHues ?? (_monoHues = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanMonoHueArgs>());
            set => _monoHues = value;
        }

        [Input("opacities")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanOpacityArgs>? _opacities;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanOpacityArgs> Opacities
        {
            get => _opacities ?? (_opacities = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanOpacityArgs>());
            set => _opacities = value;
        }

        [Input("regionOfInterestCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRegionOfInterestCropArgs>? _regionOfInterestCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRegionOfInterestCropArgs> RegionOfInterestCrops
        {
            get => _regionOfInterestCrops ?? (_regionOfInterestCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRegionOfInterestCropArgs>());
            set => _regionOfInterestCrops = value;
        }

        [Input("relativeCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRelativeCropArgs>? _relativeCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRelativeCropArgs> RelativeCrops
        {
            get => _relativeCrops ?? (_relativeCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRelativeCropArgs>());
            set => _relativeCrops = value;
        }

        [Input("removeColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRemoveColorArgs>? _removeColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRemoveColorArgs> RemoveColors
        {
            get => _removeColors ?? (_removeColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRemoveColorArgs>());
            set => _removeColors = value;
        }

        [Input("resizes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanResizeArgs>? _resizes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanResizeArgs> Resizes
        {
            get => _resizes ?? (_resizes = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanResizeArgs>());
            set => _resizes = value;
        }

        [Input("rotates")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRotateArgs>? _rotates;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRotateArgs> Rotates
        {
            get => _rotates ?? (_rotates = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanRotateArgs>());
            set => _rotates = value;
        }

        [Input("scales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanScaleArgs>? _scales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanScaleArgs> Scales
        {
            get => _scales ?? (_scales = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanScaleArgs>());
            set => _scales = value;
        }

        [Input("shears")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanShearsArgs>? _shears;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanShearsArgs> Shears
        {
            get => _shears ?? (_shears = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanShearsArgs>());
            set => _shears = value;
        }

        [Input("trims")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanTrimArgs>? _trims;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanTrimArgs> Trims
        {
            get => _trims ?? (_trims = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanTrimArgs>());
            set => _trims = value;
        }

        [Input("unsharpMasks")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanUnsharpMaskArgs>? _unsharpMasks;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanUnsharpMaskArgs> UnsharpMasks
        {
            get => _unsharpMasks ?? (_unsharpMasks = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanUnsharpMaskArgs>());
            set => _unsharpMasks = value;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanArgs Empty => new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionGreaterThanArgs();
    }
}
