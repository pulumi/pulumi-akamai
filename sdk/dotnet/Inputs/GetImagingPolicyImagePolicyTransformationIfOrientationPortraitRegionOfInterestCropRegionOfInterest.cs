// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestArgs : global::Pulumi.InvokeArgs
    {
        [Input("circleShapes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestCircleShapeArgs>? _circleShapes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestCircleShapeArgs> CircleShapes
        {
            get => _circleShapes ?? (_circleShapes = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestCircleShapeArgs>());
            set => _circleShapes = value;
        }

        [Input("pointShapes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestPointShapeArgs>? _pointShapes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestPointShapeArgs> PointShapes
        {
            get => _pointShapes ?? (_pointShapes = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestPointShapeArgs>());
            set => _pointShapes = value;
        }

        [Input("polygonShapes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestPolygonShapeArgs>? _polygonShapes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestPolygonShapeArgs> PolygonShapes
        {
            get => _polygonShapes ?? (_polygonShapes = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestPolygonShapeArgs>());
            set => _polygonShapes = value;
        }

        [Input("rectangleShapes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestRectangleShapeArgs>? _rectangleShapes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestRectangleShapeArgs> RectangleShapes
        {
            get => _rectangleShapes ?? (_rectangleShapes = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestRectangleShapeArgs>());
            set => _rectangleShapes = value;
        }

        [Input("unionShapes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs>? _unionShapes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs> UnionShapes
        {
            get => _unionShapes ?? (_unionShapes = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs>());
            set => _unionShapes = value;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestArgs Empty => new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestArgs();
    }
}
