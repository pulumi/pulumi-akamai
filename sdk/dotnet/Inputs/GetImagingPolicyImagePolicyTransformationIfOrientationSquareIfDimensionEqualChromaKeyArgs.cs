// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfDimensionEqualChromaKeyInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("hue")]
        public Input<string>? Hue { get; set; }

        [Input("hueFeather")]
        public Input<string>? HueFeather { get; set; }

        [Input("hueFeatherVar")]
        public Input<string>? HueFeatherVar { get; set; }

        [Input("hueTolerance")]
        public Input<string>? HueTolerance { get; set; }

        [Input("hueToleranceVar")]
        public Input<string>? HueToleranceVar { get; set; }

        [Input("hueVar")]
        public Input<string>? HueVar { get; set; }

        [Input("lightnessFeather")]
        public Input<string>? LightnessFeather { get; set; }

        [Input("lightnessFeatherVar")]
        public Input<string>? LightnessFeatherVar { get; set; }

        [Input("lightnessTolerance")]
        public Input<string>? LightnessTolerance { get; set; }

        [Input("lightnessToleranceVar")]
        public Input<string>? LightnessToleranceVar { get; set; }

        [Input("saturationFeather")]
        public Input<string>? SaturationFeather { get; set; }

        [Input("saturationFeatherVar")]
        public Input<string>? SaturationFeatherVar { get; set; }

        [Input("saturationTolerance")]
        public Input<string>? SaturationTolerance { get; set; }

        [Input("saturationToleranceVar")]
        public Input<string>? SaturationToleranceVar { get; set; }

        public GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfDimensionEqualChromaKeyInputArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfDimensionEqualChromaKeyInputArgs Empty => new GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfDimensionEqualChromaKeyInputArgs();
    }
}
