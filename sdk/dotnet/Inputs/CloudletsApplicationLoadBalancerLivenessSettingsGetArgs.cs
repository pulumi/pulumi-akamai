// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class CloudletsApplicationLoadBalancerLivenessSettingsGetArgs : Pulumi.ResourceArgs
    {
        [Input("additionalHeaders")]
        private InputMap<string>? _additionalHeaders;

        /// <summary>
        /// Maps additional case-insensitive HTTP header names included to the liveness testing requests.
        /// </summary>
        public InputMap<string> AdditionalHeaders
        {
            get => _additionalHeaders ?? (_additionalHeaders = new InputMap<string>());
            set => _additionalHeaders = value;
        }

        /// <summary>
        /// The Host header for the liveness HTTP request.
        /// </summary>
        [Input("hostHeader")]
        public Input<string>? HostHeader { get; set; }

        /// <summary>
        /// The frequency of liveness tests. Defaults to 60 seconds, minimum is 10 seconds.
        /// </summary>
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        /// <summary>
        /// The path to the test object used for liveness testing. The function of the test object is to help determine whether the data center is functioning.
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        /// <summary>
        /// Whether to validate the origin certificate for an HTTPS request.
        /// </summary>
        [Input("peerCertificateVerification")]
        public Input<bool>? PeerCertificateVerification { get; set; }

        /// <summary>
        /// The port for the test object. The default port is 80, which is standard for HTTP. Enter 443 if you are using HTTPS.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The protocol or scheme for the database, either `HTTP` or `HTTPS`.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// The request used for TCP and TCPS tests.
        /// </summary>
        [Input("requestString")]
        public Input<string>? RequestString { get; set; }

        /// <summary>
        /// The response used for TCP and TCPS tests.
        /// </summary>
        [Input("responseString")]
        public Input<string>? ResponseString { get; set; }

        /// <summary>
        /// If set to `true`, marks the liveness test as failed when the request returns a 3xx (redirection) status code.
        /// </summary>
        [Input("status3xxFailure")]
        public Input<bool>? Status3xxFailure { get; set; }

        /// <summary>
        /// If set to `true`, marks the liveness test as failed when the request returns a 4xx (client error) status code.
        /// </summary>
        [Input("status4xxFailure")]
        public Input<bool>? Status4xxFailure { get; set; }

        /// <summary>
        /// If set to `true`, marks the liveness test as failed when the request returns a 5xx (server error) status code.
        /// </summary>
        [Input("status5xxFailure")]
        public Input<bool>? Status5xxFailure { get; set; }

        /// <summary>
        /// The number of seconds the system waits before failing the liveness test.
        /// </summary>
        [Input("timeout")]
        public Input<double>? Timeout { get; set; }

        public CloudletsApplicationLoadBalancerLivenessSettingsGetArgs()
        {
        }
    }
}
