// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationSmartCropInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When enabled, the SmartCrop transformation doesn't actually execute. Instead, it outlines found faces or features, the region of interest, and the crop area.
        /// </summary>
        [Input("debug")]
        public Input<string>? Debug { get; set; }

        /// <summary>
        /// When enabled, the SmartCrop transformation doesn't actually execute. Instead, it outlines found faces or features, the region of interest, and the crop area.
        /// </summary>
        [Input("debugVar")]
        public Input<string>? DebugVar { get; set; }

        /// <summary>
        /// The height in pixels of the output image relative to the specified `Style` value.
        /// </summary>
        [Input("height")]
        public Input<string>? Height { get; set; }

        /// <summary>
        /// The height in pixels of the output image relative to the specified `Style` value.
        /// </summary>
        [Input("heightVar")]
        public Input<string>? HeightVar { get; set; }

        /// <summary>
        /// Whether to sacrifice any image fidelity for transformation performance.
        /// </summary>
        [Input("sloppy")]
        public Input<string>? Sloppy { get; set; }

        /// <summary>
        /// Whether to sacrifice any image fidelity for transformation performance.
        /// </summary>
        [Input("sloppyVar")]
        public Input<string>? SloppyVar { get; set; }

        /// <summary>
        /// Specifies how to crop or scale a crop area for the specified area of interest in the source image, `Fill` by default. The output image resizes to the specified `Width` and `Height` values. A value of `Crop` places raw crop around the point of interest.  A value of `Fill` scales the crop area to include as much of the image and point of interest as possible, relative to the specified `Width` and `Height` values. A value of `Zoom` scales the crop area as small as possible to fit the point of interest, relative to the specified `Width` and `Height` values.
        /// </summary>
        [Input("style")]
        public Input<string>? Style { get; set; }

        /// <summary>
        /// Specifies how to crop or scale a crop area for the specified area of interest in the source image, `Fill` by default. The output image resizes to the specified `Width` and `Height` values. A value of `Crop` places raw crop around the point of interest.  A value of `Fill` scales the crop area to include as much of the image and point of interest as possible, relative to the specified `Width` and `Height` values. A value of `Zoom` scales the crop area as small as possible to fit the point of interest, relative to the specified `Width` and `Height` values.
        /// </summary>
        [Input("styleVar")]
        public Input<string>? StyleVar { get; set; }

        /// <summary>
        /// The width in pixels of the output image relative to the specified `Style` value.
        /// </summary>
        [Input("width")]
        public Input<string>? Width { get; set; }

        /// <summary>
        /// The width in pixels of the output image relative to the specified `Style` value.
        /// </summary>
        [Input("widthVar")]
        public Input<string>? WidthVar { get; set; }

        public GetImagingPolicyImagePolicyTransformationSmartCropInputArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationSmartCropInputArgs Empty => new GetImagingPolicyImagePolicyTransformationSmartCropInputArgs();
    }
}
