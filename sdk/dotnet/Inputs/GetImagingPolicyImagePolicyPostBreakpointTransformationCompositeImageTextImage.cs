// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The main fill color of the text.
        /// </summary>
        [Input("fill")]
        public string? Fill { get; set; }

        /// <summary>
        /// The main fill color of the text.
        /// </summary>
        [Input("fillVar")]
        public string? FillVar { get; set; }

        /// <summary>
        /// The size in pixels to render the text.
        /// </summary>
        [Input("size")]
        public string? Size { get; set; }

        /// <summary>
        /// The size in pixels to render the text.
        /// </summary>
        [Input("sizeVar")]
        public string? SizeVar { get; set; }

        /// <summary>
        /// The color for the outline of the text.
        /// </summary>
        [Input("stroke")]
        public string? Stroke { get; set; }

        /// <summary>
        /// The thickness in points for the outline of the text.
        /// </summary>
        [Input("strokeSize")]
        public string? StrokeSize { get; set; }

        /// <summary>
        /// The thickness in points for the outline of the text.
        /// </summary>
        [Input("strokeSizeVar")]
        public string? StrokeSizeVar { get; set; }

        /// <summary>
        /// The color for the outline of the text.
        /// </summary>
        [Input("strokeVar")]
        public string? StrokeVar { get; set; }

        /// <summary>
        /// The line of text to render.
        /// </summary>
        [Input("text")]
        public string? Text { get; set; }

        /// <summary>
        /// The line of text to render.
        /// </summary>
        [Input("textVar")]
        public string? TextVar { get; set; }

        [Input("transformation")]
        public Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationArgs? Transformation { get; set; }

        /// <summary>
        /// The font family to apply to the text image. This may be a URL to a TrueType or WOFF (v1) typeface, or a string that refers to one of the standard built-in browser fonts.
        /// </summary>
        [Input("typeface")]
        public string? Typeface { get; set; }

        /// <summary>
        /// The font family to apply to the text image. This may be a URL to a TrueType or WOFF (v1) typeface, or a string that refers to one of the standard built-in browser fonts.
        /// </summary>
        [Input("typefaceVar")]
        public string? TypefaceVar { get; set; }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImageArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImageArgs Empty => new GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImageArgs();
    }
}
