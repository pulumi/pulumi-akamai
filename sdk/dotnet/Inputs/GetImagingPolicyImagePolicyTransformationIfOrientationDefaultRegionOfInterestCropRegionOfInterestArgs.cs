// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("circleShapes")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestCircleShapeInputArgs>? _circleShapes;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestCircleShapeInputArgs> CircleShapes
        {
            get => _circleShapes ?? (_circleShapes = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestCircleShapeInputArgs>());
            set => _circleShapes = value;
        }

        [Input("pointShapes")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestPointShapeInputArgs>? _pointShapes;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestPointShapeInputArgs> PointShapes
        {
            get => _pointShapes ?? (_pointShapes = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestPointShapeInputArgs>());
            set => _pointShapes = value;
        }

        [Input("polygonShapes")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestPolygonShapeInputArgs>? _polygonShapes;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestPolygonShapeInputArgs> PolygonShapes
        {
            get => _polygonShapes ?? (_polygonShapes = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestPolygonShapeInputArgs>());
            set => _polygonShapes = value;
        }

        [Input("rectangleShapes")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestRectangleShapeInputArgs>? _rectangleShapes;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestRectangleShapeInputArgs> RectangleShapes
        {
            get => _rectangleShapes ?? (_rectangleShapes = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestRectangleShapeInputArgs>());
            set => _rectangleShapes = value;
        }

        [Input("unionShapes")]
        private InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestUnionShapeInputArgs>? _unionShapes;
        public InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestUnionShapeInputArgs> UnionShapes
        {
            get => _unionShapes ?? (_unionShapes = new InputList<Inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestUnionShapeInputArgs>());
            set => _unionShapes = value;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestInputArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestInputArgs Empty => new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultRegionOfInterestCropRegionOfInterestInputArgs();
    }
}
