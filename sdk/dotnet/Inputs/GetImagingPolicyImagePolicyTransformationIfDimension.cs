// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationIfDimensionArgs : global::Pulumi.InvokeArgs
    {
        [Input("default")]
        public Inputs.GetImagingPolicyImagePolicyTransformationArgs? Default { get; set; }

        /// <summary>
        /// The dimension to use to select the transformation, either `height`, `width`, or `both`.
        /// </summary>
        [Input("dimension")]
        public string? Dimension { get; set; }

        /// <summary>
        /// The dimension to use to select the transformation, either `height`, `width`, or `both`.
        /// </summary>
        [Input("dimensionVar")]
        public string? DimensionVar { get; set; }

        [Input("equal")]
        public Inputs.GetImagingPolicyImagePolicyTransformationArgs? Equal { get; set; }

        [Input("greaterThan")]
        public Inputs.GetImagingPolicyImagePolicyTransformationArgs? GreaterThan { get; set; }

        [Input("lessThan")]
        public Inputs.GetImagingPolicyImagePolicyTransformationArgs? LessThan { get; set; }

        /// <summary>
        /// The value to compare against the source image dimension. For example, if the image dimension is less than the value the lessThan transformation is applied.
        /// </summary>
        [Input("value")]
        public string? Value { get; set; }

        /// <summary>
        /// The value to compare against the source image dimension. For example, if the image dimension is less than the value the lessThan transformation is applied.
        /// </summary>
        [Input("valueVar")]
        public string? ValueVar { get; set; }

        public GetImagingPolicyImagePolicyTransformationIfDimensionArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationIfDimensionArgs Empty => new GetImagingPolicyImagePolicyTransformationIfDimensionArgs();
    }
}
