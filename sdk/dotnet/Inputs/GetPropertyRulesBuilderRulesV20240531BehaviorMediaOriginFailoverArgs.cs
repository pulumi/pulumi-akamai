// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetPropertyRulesBuilderRulesV20240531BehaviorMediaOriginFailoverInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When enabled, caches the error response.
        /// </summary>
        [Input("cacheErrorResponse")]
        public Input<bool>? CacheErrorResponse { get; set; }

        /// <summary>
        /// This sets error response's TTL.
        /// </summary>
        [Input("cacheWindow")]
        public Input<string>? CacheWindow { get; set; }

        /// <summary>
        /// Specifies the response code served to the client.
        /// </summary>
        [Input("clientResponseCode")]
        public Input<string>? ClientResponseCode { get; set; }

        /// <summary>
        /// Allows you to configure failover settings when the origin has content errors.
        /// </summary>
        [Input("detectObjectUnavailable")]
        public Input<bool>? DetectObjectUnavailable { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("detectObjectUnavailableTitle")]
        public Input<string>? DetectObjectUnavailableTitle { get; set; }

        /// <summary>
        /// Allows you to configure failover settings when the origin server responds with errors.
        /// </summary>
        [Input("detectOriginUnavailable")]
        public Input<bool>? DetectOriginUnavailable { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("detectOriginUnavailableTitle")]
        public Input<string>? DetectOriginUnavailableTitle { get; set; }

        /// <summary>
        /// Allows you to configure what happens when the origin is unresponsive.
        /// </summary>
        [Input("detectOriginUnresponsive")]
        public Input<bool>? DetectOriginUnresponsive { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("detectOriginUnresponsiveTitle")]
        public Input<string>? DetectOriginUnresponsiveTitle { get; set; }

        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        /// <summary>
        /// This specifies the redirect's destination hostname.
        /// </summary>
        [Input("objectUnavailableAlternateHost")]
        public Input<string>? ObjectUnavailableAlternateHost { get; set; }

        /// <summary>
        /// This specifies the origin hostname.
        /// </summary>
        [Input("objectUnavailableBackupHost")]
        public Input<string>? ObjectUnavailableBackupHost { get; set; }

        /// <summary>
        /// Enabling this blacklists the origin's IP address.
        /// </summary>
        [Input("objectUnavailableBlacklistOriginIp")]
        public Input<bool>? ObjectUnavailableBlacklistOriginIp { get; set; }

        /// <summary>
        /// This sets the delay before blacklisting an IP address.
        /// </summary>
        [Input("objectUnavailableBlacklistWindow")]
        public Input<string>? ObjectUnavailableBlacklistWindow { get; set; }

        /// <summary>
        /// Changes the request protocol.
        /// </summary>
        [Input("objectUnavailableChangeProtocol")]
        public Input<bool>? ObjectUnavailableChangeProtocol { get; set; }

        /// <summary>
        /// Specify `RESPONSE_CODES`, the only available option.
        /// </summary>
        [Input("objectUnavailableDetectionLevel")]
        public Input<string>? ObjectUnavailableDetectionLevel { get; set; }

        /// <summary>
        /// Enabling this includes the original set of query parameters.
        /// </summary>
        [Input("objectUnavailableIncludeQueryString")]
        public Input<bool>? ObjectUnavailableIncludeQueryString { get; set; }

        /// <summary>
        /// This specifies the path to form the new URL.
        /// </summary>
        [Input("objectUnavailableModifiedPath")]
        public Input<string>? ObjectUnavailableModifiedPath { get; set; }

        /// <summary>
        /// Enabling this allows you to modify the request path.
        /// </summary>
        [Input("objectUnavailableModifyRequestPath")]
        public Input<bool>? ObjectUnavailableModifyRequestPath { get; set; }

        /// <summary>
        /// Specifies either the `HTTP` or `HTTPS` protocol.
        /// </summary>
        [Input("objectUnavailableProtocol")]
        public Input<string>? ObjectUnavailableProtocol { get; set; }

        /// <summary>
        /// This sets the recovery option.
        /// </summary>
        [Input("objectUnavailableRecovery")]
        public Input<string>? ObjectUnavailableRecovery { get; set; }

        /// <summary>
        /// Specifies a redirect response code.
        /// </summary>
        [Input("objectUnavailableRedirectMethod")]
        public Input<int>? ObjectUnavailableRedirectMethod { get; set; }

        [Input("objectUnavailableResponseCodes")]
        private InputList<string>? _objectUnavailableResponseCodes;

        /// <summary>
        /// Specifies the set of response codes identifying when there are content errors.
        /// </summary>
        public InputList<string> ObjectUnavailableResponseCodes
        {
            get => _objectUnavailableResponseCodes ?? (_objectUnavailableResponseCodes = new InputList<string>());
            set => _objectUnavailableResponseCodes = value;
        }

        /// <summary>
        /// Sets how many times to retry.
        /// </summary>
        [Input("objectUnavailableRetryLimit")]
        public Input<string>? ObjectUnavailableRetryLimit { get; set; }

        /// <summary>
        /// This specifies the redirect's destination hostname.
        /// </summary>
        [Input("originUnavailableAlternateHost")]
        public Input<string>? OriginUnavailableAlternateHost { get; set; }

        /// <summary>
        /// This specifies the origin hostname.
        /// </summary>
        [Input("originUnavailableBackupHost")]
        public Input<string>? OriginUnavailableBackupHost { get; set; }

        /// <summary>
        /// Enabling this blacklists the origin's IP address.
        /// </summary>
        [Input("originUnavailableBlacklistOriginIp")]
        public Input<bool>? OriginUnavailableBlacklistOriginIp { get; set; }

        /// <summary>
        /// This sets the delay before blacklisting an IP address.
        /// </summary>
        [Input("originUnavailableBlacklistWindow")]
        public Input<string>? OriginUnavailableBlacklistWindow { get; set; }

        /// <summary>
        /// Modifies the request protocol.
        /// </summary>
        [Input("originUnavailableChangeProtocol")]
        public Input<bool>? OriginUnavailableChangeProtocol { get; set; }

        /// <summary>
        /// Specify `RESPONSE_CODES`, the only available option.
        /// </summary>
        [Input("originUnavailableDetectionLevel")]
        public Input<string>? OriginUnavailableDetectionLevel { get; set; }

        /// <summary>
        /// Enabling this includes the original set of query parameters.
        /// </summary>
        [Input("originUnavailableIncludeQueryString")]
        public Input<bool>? OriginUnavailableIncludeQueryString { get; set; }

        /// <summary>
        /// This specifies the path to form the new URL.
        /// </summary>
        [Input("originUnavailableModifiedPath")]
        public Input<string>? OriginUnavailableModifiedPath { get; set; }

        /// <summary>
        /// Modifies the request path.
        /// </summary>
        [Input("originUnavailableModifyRequestPath")]
        public Input<bool>? OriginUnavailableModifyRequestPath { get; set; }

        /// <summary>
        /// Specifies either the `HTTP` or `HTTPS` protocol.
        /// </summary>
        [Input("originUnavailableProtocol")]
        public Input<string>? OriginUnavailableProtocol { get; set; }

        /// <summary>
        /// This sets the recovery option.
        /// </summary>
        [Input("originUnavailableRecovery")]
        public Input<string>? OriginUnavailableRecovery { get; set; }

        /// <summary>
        /// Specifies either a redirect response code.
        /// </summary>
        [Input("originUnavailableRedirectMethod")]
        public Input<int>? OriginUnavailableRedirectMethod { get; set; }

        [Input("originUnavailableResponseCodes")]
        private InputList<string>? _originUnavailableResponseCodes;

        /// <summary>
        /// Specifies the set of response codes identifying when the origin responds with errors.
        /// </summary>
        public InputList<string> OriginUnavailableResponseCodes
        {
            get => _originUnavailableResponseCodes ?? (_originUnavailableResponseCodes = new InputList<string>());
            set => _originUnavailableResponseCodes = value;
        }

        /// <summary>
        /// Sets how many times to retry.
        /// </summary>
        [Input("originUnavailableRetryLimit")]
        public Input<string>? OriginUnavailableRetryLimit { get; set; }

        /// <summary>
        /// This specifies the redirect's destination hostname.
        /// </summary>
        [Input("originUnresponsiveAlternateHost")]
        public Input<string>? OriginUnresponsiveAlternateHost { get; set; }

        /// <summary>
        /// This specifies the origin hostname.
        /// </summary>
        [Input("originUnresponsiveBackupHost")]
        public Input<string>? OriginUnresponsiveBackupHost { get; set; }

        /// <summary>
        /// Enabling this blacklists the origin's IP address.
        /// </summary>
        [Input("originUnresponsiveBlacklistOriginIp")]
        public Input<bool>? OriginUnresponsiveBlacklistOriginIp { get; set; }

        /// <summary>
        /// This sets the delay before blacklisting an IP address.
        /// </summary>
        [Input("originUnresponsiveBlacklistWindow")]
        public Input<string>? OriginUnresponsiveBlacklistWindow { get; set; }

        /// <summary>
        /// This allows you to change the request protocol.
        /// </summary>
        [Input("originUnresponsiveChangeProtocol")]
        public Input<bool>? OriginUnresponsiveChangeProtocol { get; set; }

        /// <summary>
        /// Specify the level of response to slow origin connections.
        /// </summary>
        [Input("originUnresponsiveDetectionLevel")]
        public Input<string>? OriginUnresponsiveDetectionLevel { get; set; }

        /// <summary>
        /// Enabling this includes the original set of query parameters.
        /// </summary>
        [Input("originUnresponsiveIncludeQueryString")]
        public Input<bool>? OriginUnresponsiveIncludeQueryString { get; set; }

        /// <summary>
        /// This specifies the path to form the new URL.
        /// </summary>
        [Input("originUnresponsiveModifiedPath")]
        public Input<string>? OriginUnresponsiveModifiedPath { get; set; }

        /// <summary>
        /// Modifies the request path.
        /// </summary>
        [Input("originUnresponsiveModifyRequestPath")]
        public Input<bool>? OriginUnresponsiveModifyRequestPath { get; set; }

        /// <summary>
        /// Specifies which protocol to use.
        /// </summary>
        [Input("originUnresponsiveProtocol")]
        public Input<string>? OriginUnresponsiveProtocol { get; set; }

        /// <summary>
        /// This sets the recovery option.
        /// </summary>
        [Input("originUnresponsiveRecovery")]
        public Input<string>? OriginUnresponsiveRecovery { get; set; }

        /// <summary>
        /// Specifies the redirect response code.
        /// </summary>
        [Input("originUnresponsiveRedirectMethod")]
        public Input<int>? OriginUnresponsiveRedirectMethod { get; set; }

        /// <summary>
        /// Sets how many times to retry.
        /// </summary>
        [Input("originUnresponsiveRetryLimit")]
        public Input<string>? OriginUnresponsiveRetryLimit { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("otherOptions")]
        public Input<string>? OtherOptions { get; set; }

        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        [Input("templateUuid")]
        public Input<string>? TemplateUuid { get; set; }

        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public GetPropertyRulesBuilderRulesV20240531BehaviorMediaOriginFailoverInputArgs()
        {
        }
        public static new GetPropertyRulesBuilderRulesV20240531BehaviorMediaOriginFailoverInputArgs Empty => new GetPropertyRulesBuilderRulesV20240531BehaviorMediaOriginFailoverInputArgs();
    }
}
