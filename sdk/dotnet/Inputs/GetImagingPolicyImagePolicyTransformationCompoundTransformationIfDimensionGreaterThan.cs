// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanArgs : global::Pulumi.InvokeArgs
    {
        [Input("appends")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAppendArgs>? _appends;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAppendArgs> Appends
        {
            get => _appends ?? (_appends = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAppendArgs>());
            set => _appends = value;
        }

        [Input("aspectCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAspectCropArgs>? _aspectCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAspectCropArgs> AspectCrops
        {
            get => _aspectCrops ?? (_aspectCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAspectCropArgs>());
            set => _aspectCrops = value;
        }

        [Input("backgroundColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanBackgroundColorArgs>? _backgroundColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanBackgroundColorArgs> BackgroundColors
        {
            get => _backgroundColors ?? (_backgroundColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanBackgroundColorArgs>());
            set => _backgroundColors = value;
        }

        [Input("blurs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanBlurArgs>? _blurs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanBlurArgs> Blurs
        {
            get => _blurs ?? (_blurs = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanBlurArgs>());
            set => _blurs = value;
        }

        [Input("chromaKeys")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanChromaKeyArgs>? _chromaKeys;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanChromaKeyArgs> ChromaKeys
        {
            get => _chromaKeys ?? (_chromaKeys = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanChromaKeyArgs>());
            set => _chromaKeys = value;
        }

        [Input("composites")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanCompositeArgs>? _composites;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanCompositeArgs> Composites
        {
            get => _composites ?? (_composites = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanCompositeArgs>());
            set => _composites = value;
        }

        [Input("compounds")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanCompoundArgs>? _compounds;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanCompoundArgs> Compounds
        {
            get => _compounds ?? (_compounds = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanCompoundArgs>());
            set => _compounds = value;
        }

        [Input("contrasts")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanContrastArgs>? _contrasts;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanContrastArgs> Contrasts
        {
            get => _contrasts ?? (_contrasts = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanContrastArgs>());
            set => _contrasts = value;
        }

        [Input("crops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanCropArgs>? _crops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanCropArgs> Crops
        {
            get => _crops ?? (_crops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanCropArgs>());
            set => _crops = value;
        }

        [Input("faceCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanFaceCropArgs>? _faceCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanFaceCropArgs> FaceCrops
        {
            get => _faceCrops ?? (_faceCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanFaceCropArgs>());
            set => _faceCrops = value;
        }

        [Input("featureCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanFeatureCropArgs>? _featureCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanFeatureCropArgs> FeatureCrops
        {
            get => _featureCrops ?? (_featureCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanFeatureCropArgs>());
            set => _featureCrops = value;
        }

        [Input("fitAndFills")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanFitAndFillArgs>? _fitAndFills;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanFitAndFillArgs> FitAndFills
        {
            get => _fitAndFills ?? (_fitAndFills = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanFitAndFillArgs>());
            set => _fitAndFills = value;
        }

        [Input("goops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanGoopArgs>? _goops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanGoopArgs> Goops
        {
            get => _goops ?? (_goops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanGoopArgs>());
            set => _goops = value;
        }

        [Input("grayscales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanGrayscaleArgs>? _grayscales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanGrayscaleArgs> Grayscales
        {
            get => _grayscales ?? (_grayscales = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanGrayscaleArgs>());
            set => _grayscales = value;
        }

        [Input("hsls")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanHslArgs>? _hsls;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanHslArgs> Hsls
        {
            get => _hsls ?? (_hsls = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanHslArgs>());
            set => _hsls = value;
        }

        [Input("hsvs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanHsvArgs>? _hsvs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanHsvArgs> Hsvs
        {
            get => _hsvs ?? (_hsvs = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanHsvArgs>());
            set => _hsvs = value;
        }

        [Input("ifDimensions")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanIfDimensionArgs>? _ifDimensions;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanIfDimensionArgs> IfDimensions
        {
            get => _ifDimensions ?? (_ifDimensions = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanIfDimensionArgs>());
            set => _ifDimensions = value;
        }

        [Input("ifOrientations")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationArgs>? _ifOrientations;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationArgs> IfOrientations
        {
            get => _ifOrientations ?? (_ifOrientations = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationArgs>());
            set => _ifOrientations = value;
        }

        [Input("imQueries")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanImQueryArgs>? _imQueries;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanImQueryArgs> ImQueries
        {
            get => _imQueries ?? (_imQueries = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanImQueryArgs>());
            set => _imQueries = value;
        }

        [Input("maxColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanMaxColorArgs>? _maxColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanMaxColorArgs> MaxColors
        {
            get => _maxColors ?? (_maxColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanMaxColorArgs>());
            set => _maxColors = value;
        }

        [Input("mirrors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanMirrorArgs>? _mirrors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanMirrorArgs> Mirrors
        {
            get => _mirrors ?? (_mirrors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanMirrorArgs>());
            set => _mirrors = value;
        }

        [Input("monoHues")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanMonoHueArgs>? _monoHues;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanMonoHueArgs> MonoHues
        {
            get => _monoHues ?? (_monoHues = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanMonoHueArgs>());
            set => _monoHues = value;
        }

        [Input("opacities")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanOpacityArgs>? _opacities;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanOpacityArgs> Opacities
        {
            get => _opacities ?? (_opacities = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanOpacityArgs>());
            set => _opacities = value;
        }

        [Input("regionOfInterestCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCropArgs>? _regionOfInterestCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCropArgs> RegionOfInterestCrops
        {
            get => _regionOfInterestCrops ?? (_regionOfInterestCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCropArgs>());
            set => _regionOfInterestCrops = value;
        }

        [Input("relativeCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRelativeCropArgs>? _relativeCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRelativeCropArgs> RelativeCrops
        {
            get => _relativeCrops ?? (_relativeCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRelativeCropArgs>());
            set => _relativeCrops = value;
        }

        [Input("removeColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRemoveColorArgs>? _removeColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRemoveColorArgs> RemoveColors
        {
            get => _removeColors ?? (_removeColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRemoveColorArgs>());
            set => _removeColors = value;
        }

        [Input("resizes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanResizeArgs>? _resizes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanResizeArgs> Resizes
        {
            get => _resizes ?? (_resizes = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanResizeArgs>());
            set => _resizes = value;
        }

        [Input("rotates")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRotateArgs>? _rotates;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRotateArgs> Rotates
        {
            get => _rotates ?? (_rotates = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRotateArgs>());
            set => _rotates = value;
        }

        [Input("scales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanScaleArgs>? _scales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanScaleArgs> Scales
        {
            get => _scales ?? (_scales = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanScaleArgs>());
            set => _scales = value;
        }

        [Input("shears")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanShearsArgs>? _shears;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanShearsArgs> Shears
        {
            get => _shears ?? (_shears = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanShearsArgs>());
            set => _shears = value;
        }

        [Input("trims")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanTrimArgs>? _trims;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanTrimArgs> Trims
        {
            get => _trims ?? (_trims = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanTrimArgs>());
            set => _trims = value;
        }

        [Input("unsharpMasks")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanUnsharpMaskArgs>? _unsharpMasks;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanUnsharpMaskArgs> UnsharpMasks
        {
            get => _unsharpMasks ?? (_unsharpMasks = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanUnsharpMaskArgs>());
            set => _unsharpMasks = value;
        }

        public GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanArgs Empty => new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanArgs();
    }
}
