// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetGtmDomainsDomainArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The contract's identifier, with which the domain is associated.
        /// </summary>
        [Input("acgId", required: true)]
        public string AcgId { get; set; } = null!;

        /// <summary>
        /// 'PENDING' when a change has been made but not yet propagated; 'COMPLETE' when the last configuration change has propagated successfully; 'DENIED' if the domain configuration failed validation; 'DELETED' if the domain has been deleted.
        /// </summary>
        [Input("activationState", required: true)]
        public string ActivationState { get; set; } = null!;

        /// <summary>
        /// UUID that identifies a version of the domain configuration.
        /// </summary>
        [Input("changeId", required: true)]
        public string ChangeId { get; set; } = null!;

        /// <summary>
        /// UUID for delete request during domain deletion. Null if the domain is not being deleted.
        /// </summary>
        [Input("deleteRequestId", required: true)]
        public string DeleteRequestId { get; set; } = null!;

        /// <summary>
        /// An ISO 8601 timestamp that indicates the time of the last domain change.
        /// </summary>
        [Input("lastModified", required: true)]
        public string LastModified { get; set; } = null!;

        /// <summary>
        /// The email address of the administrator who made the last change to the domain.
        /// </summary>
        [Input("lastModifiedBy", required: true)]
        public string LastModifiedBy { get; set; } = null!;

        [Input("links")]
        private List<Inputs.GetGtmDomainsDomainLinkArgs>? _links;

        /// <summary>
        /// Provides a URL path that allows direct navigation to the domain.
        /// </summary>
        public List<Inputs.GetGtmDomainsDomainLinkArgs> Links
        {
            get => _links ?? (_links = new List<Inputs.GetGtmDomainsDomainLinkArgs>());
            set => _links = value;
        }

        /// <summary>
        /// A descriptive note about changes to the domain.
        /// </summary>
        [Input("modificationComments", required: true)]
        public string ModificationComments { get; set; } = null!;

        /// <summary>
        /// A unique domain name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// If set (true) we will sign the domain's resource records so that they can be validated by a validating resolver.
        /// </summary>
        [Input("signAndServe", required: true)]
        public bool SignAndServe { get; set; }

        /// <summary>
        /// The signing algorithm to use for signAndServe. One of the following values: RSA_SHA1, RSA_SHA256, RSA_SHA512, ECDSA_P256_SHA256, ECDSA_P384_SHA384, ED25519, ED448.
        /// </summary>
        [Input("signAndServeAlgorithm", required: true)]
        public string SignAndServeAlgorithm { get; set; } = null!;

        /// <summary>
        /// The current status of the domain.
        /// </summary>
        [Input("status", required: true)]
        public string Status { get; set; } = null!;

        public GetGtmDomainsDomainArgs()
        {
        }
        public static new GetGtmDomainsDomainArgs Empty => new GetGtmDomainsDomainArgs();
    }
}
