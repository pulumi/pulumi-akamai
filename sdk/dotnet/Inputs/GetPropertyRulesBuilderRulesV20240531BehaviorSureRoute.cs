// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetPropertyRulesBuilderRulesV20240531BehaviorSureRouteArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowFcmParentOverride")]
        public bool? AllowFcmParentOverride { get; set; }

        /// <summary>
        /// If `type` is `CUSTOM_MAP`, this specifies the map string provided to you by Akamai Professional Services, or included as part of the `Site Shield` product.
        /// </summary>
        [Input("customMap")]
        public string? CustomMap { get; set; }

        /// <summary>
        /// This specifies a hostname under which to cache race results. This may be useful when a property corresponds to many origin hostnames. By default, SureRoute would launch races for each origin, but consolidating under a single hostname runs only one race.
        /// </summary>
        [Input("customStatKey")]
        public string? CustomStatKey { get; set; }

        /// <summary>
        /// When disabled, caches race results under the race destination's hostname. If enabled, use `customStatKey` to specify a custom hostname.
        /// </summary>
        [Input("enableCustomKey")]
        public bool? EnableCustomKey { get; set; }

        /// <summary>
        /// Enables the SureRoute behavior, to optimize delivery of non-cached content.
        /// </summary>
        [Input("enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Forces SureRoute to use SSL when requesting the origin's test object, appropriate if your origin does not respond to HTTP requests, or responds with a redirect to HTTPS.
        /// </summary>
        [Input("forceSslForward")]
        public bool? ForceSslForward { get; set; }

        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        [Input("locked")]
        public bool? Locked { get; set; }

        /// <summary>
        /// Specifies the time-to-live to preserve SureRoute race results, typically `30m`. If traffic exceeds a certain threshold after TTL expires, the overflow is routed directly to the origin, not necessarily optimally. If traffic remains under the threshold, the route is determined by the winner of the most recent race.
        /// </summary>
        [Input("raceStatTtl")]
        public string? RaceStatTtl { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("srDownloadLinkTitle")]
        public string? SrDownloadLinkTitle { get; set; }

        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        [Input("templateUuid")]
        public string? TemplateUuid { get; set; }

        /// <summary>
        /// Specifies the path and filename for your origin's test object to use in races to test routes.
        /// </summary>
        [Input("testObjectUrl")]
        public string? TestObjectUrl { get; set; }

        /// <summary>
        /// If `toHostStatus` is `OTHER`, this specifies the custom `Host` header to use when requesting the SureRoute test object.
        /// </summary>
        [Input("toHost")]
        public string? ToHost { get; set; }

        /// <summary>
        /// Specifies which hostname to use.
        /// </summary>
        [Input("toHostStatus")]
        public string? ToHostStatus { get; set; }

        /// <summary>
        /// Specifies the set of edge servers used to test routes.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        [Input("uuid")]
        public string? Uuid { get; set; }

        public GetPropertyRulesBuilderRulesV20240531BehaviorSureRouteArgs()
        {
        }
        public static new GetPropertyRulesBuilderRulesV20240531BehaviorSureRouteArgs Empty => new GetPropertyRulesBuilderRulesV20240531BehaviorSureRouteArgs();
    }
}
