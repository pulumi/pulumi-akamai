// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Generates a custom `Image and Video Manager API` token to apply a corresponding policy to this set of images. The token consists of a descriptive label (the `policyToken`) concatenated with a property-specific identifier that's generated when you save the property. The API registers the token when you activate the property.
        /// </summary>
        [Input("advanced")]
        public Input<bool>? Advanced { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("apiReferenceTitle")]
        public Input<string>? ApiReferenceTitle { get; set; }

        /// <summary>
        /// Specify whether to convert images to the best file type for the requesting device, based on its user agent and the initial image file. This produces the smallest file size possible that retains image quality.
        /// </summary>
        [Input("applyBestFileType")]
        public Input<bool>? ApplyBestFileType { get; set; }

        /// <summary>
        /// Assigns a CP code to track traffic and billing for original images that the Image and Video Manager has not modified. You only need to provide the initial `id`, stripping any `cpc_` prefix to pass the integer to the rule tree. Additional CP code details may reflect back in subsequent read-only data.
        /// </summary>
        [Input("cpCodeOriginal")]
        public Input<Inputs.GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerCpCodeOriginalInputArgs>? CpCodeOriginal { get; set; }

        /// <summary>
        /// Assigns a separate CP code to track traffic and billing for derived images. You only need to provide the initial `id`, stripping any `cpc_` prefix to pass the integer to the rule tree. Additional CP code details may reflect back in subsequent read-only data.
        /// </summary>
        [Input("cpCodeTransformed")]
        public Input<Inputs.GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerCpCodeTransformedInputArgs>? CpCodeTransformed { get; set; }

        /// <summary>
        /// Enable image management capabilities and generate a corresponding API token.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        /// <summary>
        /// Identifies the existing policy set configured with `Image and Video Manager API`.
        /// </summary>
        [Input("policySet")]
        public Input<string>? PolicySet { get; set; }

        /// <summary>
        /// Assign a prefix label to help match the policy token to this set of images, limited to 32 alphanumeric or underscore characters. If you don't specify a label, `default` becomes the prefix.
        /// </summary>
        [Input("policyToken")]
        public Input<string>? PolicyToken { get; set; }

        /// <summary>
        /// Specify the default policy identifier, which is registered with the `Image and Video Manager API` once you activate this property.  The `advanced` option needs to be inactive.
        /// </summary>
        [Input("policyTokenDefault")]
        public Input<string>? PolicyTokenDefault { get; set; }

        /// <summary>
        /// Specify whether to scale down images to the maximum screen resolution, as determined by the rendering device's user agent.  Note that enabling this may affect screen layout in unexpected ways.
        /// </summary>
        [Input("resize")]
        public Input<bool>? Resize { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("settingsTitle")]
        public Input<string>? SettingsTitle { get; set; }

        /// <summary>
        /// Specifies a location for your site's heaviest traffic, for use in caching derivatives on edge servers.
        /// </summary>
        [Input("superCacheRegion")]
        public Input<string>? SuperCacheRegion { get; set; }

        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        [Input("templateUuid")]
        public Input<string>? TemplateUuid { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("trafficTitle")]
        public Input<string>? TrafficTitle { get; set; }

        /// <summary>
        /// Whether to use a previously created policy set that may be referenced in other properties, or create a new policy set to use with this property. A policy set can be shared across multiple properties belonging to the same contract. The behavior populates any changes to the policy set across all properties that reference that set.
        /// </summary>
        [Input("useExistingPolicySet")]
        public Input<bool>? UseExistingPolicySet { get; set; }

        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerInputArgs()
        {
        }
        public static new GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerInputArgs Empty => new GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerInputArgs();
    }
}
