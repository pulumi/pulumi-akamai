// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageArgs : global::Pulumi.InvokeArgs
    {
        [Input("boxImages")]
        private List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageBoxImageArgs>? _boxImages;
        public List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageBoxImageArgs> BoxImages
        {
            get => _boxImages ?? (_boxImages = new List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageBoxImageArgs>());
            set => _boxImages = value;
        }

        [Input("circleImages")]
        private List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageCircleImageArgs>? _circleImages;
        public List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageCircleImageArgs> CircleImages
        {
            get => _circleImages ?? (_circleImages = new List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageCircleImageArgs>());
            set => _circleImages = value;
        }

        [Input("textImages")]
        private List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageTextImageArgs>? _textImages;
        public List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageTextImageArgs> TextImages
        {
            get => _textImages ?? (_textImages = new List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageTextImageArgs>());
            set => _textImages = value;
        }

        [Input("urlImages")]
        private List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageUrlImageArgs>? _urlImages;
        public List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageUrlImageArgs> UrlImages
        {
            get => _urlImages ?? (_urlImages = new List<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageUrlImageArgs>());
            set => _urlImages = value;
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageArgs Empty => new GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanCompositeImageArgs();
    }
}
