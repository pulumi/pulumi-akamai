// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("boxImages")]
        private InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageBoxImageInputArgs>? _boxImages;
        public InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageBoxImageInputArgs> BoxImages
        {
            get => _boxImages ?? (_boxImages = new InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageBoxImageInputArgs>());
            set => _boxImages = value;
        }

        [Input("circleImages")]
        private InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageCircleImageInputArgs>? _circleImages;
        public InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageCircleImageInputArgs> CircleImages
        {
            get => _circleImages ?? (_circleImages = new InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageCircleImageInputArgs>());
            set => _circleImages = value;
        }

        [Input("textImages")]
        private InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageTextImageInputArgs>? _textImages;
        public InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageTextImageInputArgs> TextImages
        {
            get => _textImages ?? (_textImages = new InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageTextImageInputArgs>());
            set => _textImages = value;
        }

        [Input("urlImages")]
        private InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageUrlImageInputArgs>? _urlImages;
        public InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageUrlImageInputArgs> UrlImages
        {
            get => _urlImages ?? (_urlImages = new InputList<Inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageUrlImageInputArgs>());
            set => _urlImages = value;
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageInputArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageInputArgs Empty => new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompositeImageInputArgs();
    }
}
