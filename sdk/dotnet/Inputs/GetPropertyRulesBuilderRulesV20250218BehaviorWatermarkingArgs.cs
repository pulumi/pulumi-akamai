// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetPropertyRulesBuilderRulesV20250218BehaviorWatermarkingInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When you work with your watermarking vendor, you can apply several preprocessing methods to your content. See the `AMD help` for more information. Use this option to specify the location of the `A` and `B` variant segments.
        /// </summary>
        [Input("abVariantLocation")]
        public Input<string>? AbVariantLocation { get; set; }

        /// <summary>
        /// Provides the primary password used to encrypt patterns in your watermarking tokens.
        /// </summary>
        [Input("decryptionPassword1")]
        public Input<string>? DecryptionPassword1 { get; set; }

        /// <summary>
        /// Provides the secondary password you can use to rotate passwords.
        /// </summary>
        [Input("decryptionPassword2")]
        public Input<string>? DecryptionPassword2 { get; set; }

        /// <summary>
        /// Specifies a label that corresponds to the primary password.
        /// </summary>
        [Input("decryptionPasswordId1")]
        public Input<string>? DecryptionPasswordId1 { get; set; }

        /// <summary>
        /// Specifies a label for the secondary password, used in rotation scenarios to identify which password to use for decryption.
        /// </summary>
        [Input("decryptionPasswordId2")]
        public Input<string>? DecryptionPasswordId2 { get; set; }

        /// <summary>
        /// Enables the watermarking behavior.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("miscellaneousSettingsTitle")]
        public Input<string>? MiscellaneousSettingsTitle { get; set; }

        /// <summary>
        /// If patterns in your watermarking tokens have been encrypted, enabling this allows you to provide values to decrypt them.
        /// </summary>
        [Input("patternDecryptionEnable")]
        public Input<bool>? PatternDecryptionEnable { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("patternEncryptionTitle")]
        public Input<string>? PatternEncryptionTitle { get; set; }

        /// <summary>
        /// When enabled, you can verify the signature in your watermarking token.
        /// </summary>
        [Input("signatureVerificationEnable")]
        public Input<bool>? SignatureVerificationEnable { get; set; }

        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        [Input("templateUuid")]
        public Input<string>? TemplateUuid { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("tokenSigningTitle")]
        public Input<string>? TokenSigningTitle { get; set; }

        /// <summary>
        /// When you work with your watermarking vendor, you can apply several preprocessing methods to your content. See the `AMD help` for more information. With the standard `filename-prefix AB naming` preprocessing method, the watermarking vendor creates two variants of the original segment content and labels them as an `A` and `B` segment in the filename. If you selected the `unlabeled A variant` preprocessing method, enabling this option tells your configuration to use the original filename segment content as your `A` variant.
        /// </summary>
        [Input("useOriginalAsA")]
        public Input<bool>? UseOriginalAsA { get; set; }

        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        /// <summary>
        /// Specifies a unique identifier for the first public key.
        /// </summary>
        [Input("verificationKeyId1")]
        public Input<string>? VerificationKeyId1 { get; set; }

        /// <summary>
        /// Specifies a unique identifier for the optional second public key.
        /// </summary>
        [Input("verificationKeyId2")]
        public Input<string>? VerificationKeyId2 { get; set; }

        /// <summary>
        /// Specifies the first public key in its entirety.
        /// </summary>
        [Input("verificationPublicKey1")]
        public Input<string>? VerificationPublicKey1 { get; set; }

        /// <summary>
        /// Specifies the optional second public key in its entirety. Specify a second key to enable rotation.
        /// </summary>
        [Input("verificationPublicKey2")]
        public Input<string>? VerificationPublicKey2 { get; set; }

        public GetPropertyRulesBuilderRulesV20250218BehaviorWatermarkingInputArgs()
        {
        }
        public static new GetPropertyRulesBuilderRulesV20250218BehaviorWatermarkingInputArgs Empty => new GetPropertyRulesBuilderRulesV20250218BehaviorWatermarkingInputArgs();
    }
}
