// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class DatastreamSumologicConnectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("collectorCode", required: true)]
        private Input<string>? _collectorCode;

        /// <summary>
        /// The unique HTTP collector code of Sumo Logic endpoint
        /// </summary>
        public Input<string>? CollectorCode
        {
            get => _collectorCode;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _collectorCode = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Indicates whether the logs should be compressed
        /// </summary>
        [Input("compressLogs")]
        public Input<bool>? CompressLogs { get; set; }

        /// <summary>
        /// Content type to pass in the log file header
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// The name of custom header passed with the request to the destination
        /// </summary>
        [Input("customHeaderName")]
        public Input<string>? CustomHeaderName { get; set; }

        /// <summary>
        /// The custom header's contents passed with the request to the destination
        /// </summary>
        [Input("customHeaderValue")]
        public Input<string>? CustomHeaderValue { get; set; }

        /// <summary>
        /// The name of the connector
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The Sumo Logic collection endpoint where logs will be stored
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        public DatastreamSumologicConnectorArgs()
        {
        }
        public static new DatastreamSumologicConnectorArgs Empty => new DatastreamSumologicConnectorArgs();
    }
}
