// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationArgs : global::Pulumi.InvokeArgs
    {
        [Input("appends")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationAppendArgs>? _appends;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationAppendArgs> Appends
        {
            get => _appends ?? (_appends = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationAppendArgs>());
            set => _appends = value;
        }

        [Input("aspectCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationAspectCropArgs>? _aspectCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationAspectCropArgs> AspectCrops
        {
            get => _aspectCrops ?? (_aspectCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationAspectCropArgs>());
            set => _aspectCrops = value;
        }

        [Input("backgroundColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationBackgroundColorArgs>? _backgroundColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationBackgroundColorArgs> BackgroundColors
        {
            get => _backgroundColors ?? (_backgroundColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationBackgroundColorArgs>());
            set => _backgroundColors = value;
        }

        [Input("blurs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationBlurArgs>? _blurs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationBlurArgs> Blurs
        {
            get => _blurs ?? (_blurs = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationBlurArgs>());
            set => _blurs = value;
        }

        [Input("chromaKeys")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationChromaKeyArgs>? _chromaKeys;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationChromaKeyArgs> ChromaKeys
        {
            get => _chromaKeys ?? (_chromaKeys = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationChromaKeyArgs>());
            set => _chromaKeys = value;
        }

        [Input("composites")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationCompositeArgs>? _composites;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationCompositeArgs> Composites
        {
            get => _composites ?? (_composites = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationCompositeArgs>());
            set => _composites = value;
        }

        [Input("compounds")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationCompoundArgs>? _compounds;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationCompoundArgs> Compounds
        {
            get => _compounds ?? (_compounds = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationCompoundArgs>());
            set => _compounds = value;
        }

        [Input("contrasts")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationContrastArgs>? _contrasts;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationContrastArgs> Contrasts
        {
            get => _contrasts ?? (_contrasts = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationContrastArgs>());
            set => _contrasts = value;
        }

        [Input("crops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationCropArgs>? _crops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationCropArgs> Crops
        {
            get => _crops ?? (_crops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationCropArgs>());
            set => _crops = value;
        }

        [Input("faceCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationFaceCropArgs>? _faceCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationFaceCropArgs> FaceCrops
        {
            get => _faceCrops ?? (_faceCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationFaceCropArgs>());
            set => _faceCrops = value;
        }

        [Input("featureCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationFeatureCropArgs>? _featureCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationFeatureCropArgs> FeatureCrops
        {
            get => _featureCrops ?? (_featureCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationFeatureCropArgs>());
            set => _featureCrops = value;
        }

        [Input("fitAndFills")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationFitAndFillArgs>? _fitAndFills;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationFitAndFillArgs> FitAndFills
        {
            get => _fitAndFills ?? (_fitAndFills = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationFitAndFillArgs>());
            set => _fitAndFills = value;
        }

        [Input("goops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationGoopArgs>? _goops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationGoopArgs> Goops
        {
            get => _goops ?? (_goops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationGoopArgs>());
            set => _goops = value;
        }

        [Input("grayscales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationGrayscaleArgs>? _grayscales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationGrayscaleArgs> Grayscales
        {
            get => _grayscales ?? (_grayscales = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationGrayscaleArgs>());
            set => _grayscales = value;
        }

        [Input("hsls")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationHslArgs>? _hsls;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationHslArgs> Hsls
        {
            get => _hsls ?? (_hsls = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationHslArgs>());
            set => _hsls = value;
        }

        [Input("hsvs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationHsvArgs>? _hsvs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationHsvArgs> Hsvs
        {
            get => _hsvs ?? (_hsvs = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationHsvArgs>());
            set => _hsvs = value;
        }

        [Input("ifDimensions")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationIfDimensionArgs>? _ifDimensions;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationIfDimensionArgs> IfDimensions
        {
            get => _ifDimensions ?? (_ifDimensions = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationIfDimensionArgs>());
            set => _ifDimensions = value;
        }

        [Input("ifOrientations")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationIfOrientationArgs>? _ifOrientations;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationIfOrientationArgs> IfOrientations
        {
            get => _ifOrientations ?? (_ifOrientations = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationIfOrientationArgs>());
            set => _ifOrientations = value;
        }

        [Input("imQueries")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationImQueryArgs>? _imQueries;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationImQueryArgs> ImQueries
        {
            get => _imQueries ?? (_imQueries = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationImQueryArgs>());
            set => _imQueries = value;
        }

        [Input("maxColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationMaxColorArgs>? _maxColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationMaxColorArgs> MaxColors
        {
            get => _maxColors ?? (_maxColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationMaxColorArgs>());
            set => _maxColors = value;
        }

        [Input("mirrors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationMirrorArgs>? _mirrors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationMirrorArgs> Mirrors
        {
            get => _mirrors ?? (_mirrors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationMirrorArgs>());
            set => _mirrors = value;
        }

        [Input("monoHues")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationMonoHueArgs>? _monoHues;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationMonoHueArgs> MonoHues
        {
            get => _monoHues ?? (_monoHues = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationMonoHueArgs>());
            set => _monoHues = value;
        }

        [Input("opacities")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationOpacityArgs>? _opacities;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationOpacityArgs> Opacities
        {
            get => _opacities ?? (_opacities = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationOpacityArgs>());
            set => _opacities = value;
        }

        [Input("regionOfInterestCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRegionOfInterestCropArgs>? _regionOfInterestCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRegionOfInterestCropArgs> RegionOfInterestCrops
        {
            get => _regionOfInterestCrops ?? (_regionOfInterestCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRegionOfInterestCropArgs>());
            set => _regionOfInterestCrops = value;
        }

        [Input("relativeCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRelativeCropArgs>? _relativeCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRelativeCropArgs> RelativeCrops
        {
            get => _relativeCrops ?? (_relativeCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRelativeCropArgs>());
            set => _relativeCrops = value;
        }

        [Input("removeColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRemoveColorArgs>? _removeColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRemoveColorArgs> RemoveColors
        {
            get => _removeColors ?? (_removeColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRemoveColorArgs>());
            set => _removeColors = value;
        }

        [Input("resizes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationResizeArgs>? _resizes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationResizeArgs> Resizes
        {
            get => _resizes ?? (_resizes = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationResizeArgs>());
            set => _resizes = value;
        }

        [Input("rotates")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRotateArgs>? _rotates;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRotateArgs> Rotates
        {
            get => _rotates ?? (_rotates = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationRotateArgs>());
            set => _rotates = value;
        }

        [Input("scales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationScaleArgs>? _scales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationScaleArgs> Scales
        {
            get => _scales ?? (_scales = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationScaleArgs>());
            set => _scales = value;
        }

        [Input("shears")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationShearsArgs>? _shears;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationShearsArgs> Shears
        {
            get => _shears ?? (_shears = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationShearsArgs>());
            set => _shears = value;
        }

        [Input("trims")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationTrimArgs>? _trims;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationTrimArgs> Trims
        {
            get => _trims ?? (_trims = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationTrimArgs>());
            set => _trims = value;
        }

        [Input("unsharpMasks")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationUnsharpMaskArgs>? _unsharpMasks;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationUnsharpMaskArgs> UnsharpMasks
        {
            get => _unsharpMasks ?? (_unsharpMasks = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationUnsharpMaskArgs>());
            set => _unsharpMasks = value;
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationArgs Empty => new GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanFitAndFillFillTransformationArgs();
    }
}
