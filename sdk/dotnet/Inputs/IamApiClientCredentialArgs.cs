// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class IamApiClientCredentialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Actions available on the API client's credentials.
        /// </summary>
        [Input("actions")]
        public Input<Inputs.IamApiClientCredentialActionsArgs>? Actions { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// The client secret.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientToken")]
        private Input<string>? _clientToken;

        /// <summary>
        /// The part of the credential that identifies the API client.
        /// </summary>
        public Input<string>? ClientToken
        {
            get => _clientToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The ISO 8601 timestamp indicating when the credential was created.
        /// </summary>
        [Input("createdOn")]
        public Input<string>? CreatedOn { get; set; }

        /// <summary>
        /// A unique identifier of the credential.
        /// </summary>
        [Input("credentialId")]
        public Input<int>? CredentialId { get; set; }

        /// <summary>
        /// A human-readable description for the credential.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ISO 8601 timestamp indicating when the credential expires. The default expiration date is two years from the creation date.
        /// </summary>
        [Input("expiresOn")]
        public Input<string>? ExpiresOn { get; set; }

        /// <summary>
        /// Whether a credential is 'ACTIVE', 'INACTIVE', or 'DELETED'. Can be updated to 'ACTIVE' or 'INACTIVE' only.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public IamApiClientCredentialArgs()
        {
        }
        public static new IamApiClientCredentialArgs Empty => new IamApiClientCredentialArgs();
    }
}
