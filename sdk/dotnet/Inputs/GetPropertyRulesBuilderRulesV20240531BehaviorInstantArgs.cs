// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetPropertyRulesBuilderRulesV20240531BehaviorInstantInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("customLinkRelations")]
        private InputList<string>? _customLinkRelations;

        /// <summary>
        /// Specify link relation values that activate the prefetching behavior. For example, specifying `fetch` allows you to use shorter `rel="fetch"` markup.
        /// </summary>
        public InputList<string> CustomLinkRelations
        {
            get => _customLinkRelations ?? (_customLinkRelations = new InputList<string>());
            set => _customLinkRelations = value;
        }

        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        /// <summary>
        /// When enabled, applies prefetching only to objects already set to be cacheable, for example using the `caching` behavior. Only applies to content with the `tieredDistribution` behavior enabled.
        /// </summary>
        [Input("prefetchCacheable")]
        public Input<bool>? PrefetchCacheable { get; set; }

        /// <summary>
        /// Allows edge servers to prefetch additional HTML pages while pages that link to them are being delivered. This only applies to links from `&lt;a&gt;` or `&lt;link&gt;` tags with the appropriate link relation attribute.
        /// </summary>
        [Input("prefetchHtml")]
        public Input<bool>? PrefetchHtml { get; set; }

        /// <summary>
        /// Allows otherwise non-cacheable `no-store` content to prefetch if the URL path ends with `/` to indicate a request for a default file, or if the extension matches the value of the `prefetchNoStoreExtensions` option. Only applies to content with the `sureRoute` behavior enabled.
        /// </summary>
        [Input("prefetchNoStore")]
        public Input<bool>? PrefetchNoStore { get; set; }

        [Input("prefetchNoStoreExtensions")]
        private InputList<string>? _prefetchNoStoreExtensions;

        /// <summary>
        /// Specifies a set of file extensions for which the `prefetchNoStore` option is allowed.
        /// </summary>
        public InputList<string> PrefetchNoStoreExtensions
        {
            get => _prefetchNoStoreExtensions ?? (_prefetchNoStoreExtensions = new InputList<string>());
            set => _prefetchNoStoreExtensions = value;
        }

        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        [Input("templateUuid")]
        public Input<string>? TemplateUuid { get; set; }

        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public GetPropertyRulesBuilderRulesV20240531BehaviorInstantInputArgs()
        {
        }
        public static new GetPropertyRulesBuilderRulesV20240531BehaviorInstantInputArgs Empty => new GetPropertyRulesBuilderRulesV20240531BehaviorInstantInputArgs();
    }
}
