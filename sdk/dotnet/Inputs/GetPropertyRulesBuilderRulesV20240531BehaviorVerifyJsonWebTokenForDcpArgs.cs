// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetPropertyRulesBuilderRulesV20240531BehaviorVerifyJsonWebTokenForDcpInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This specifies the authorization group name.
        /// </summary>
        [Input("authorizations")]
        public Input<string>? Authorizations { get; set; }

        /// <summary>
        /// This specifies the claim name.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// The JWT value comes from the `X-Akamai-DCP-Token` header by default.  Enabling this option allows you to extract it from another header name that you specify.
        /// </summary>
        [Input("customHeader")]
        public Input<bool>? CustomHeader { get; set; }

        /// <summary>
        /// Verifies JWTs signed with the ES256 algorithm. This signature helps to ensure that the token hasn't been tampered with.
        /// </summary>
        [Input("enableEs256")]
        public Input<bool>? EnableEs256 { get; set; }

        /// <summary>
        /// Verifies JWTs signed with the RS256 algorithm. This signature helps to ensure that the token hasn't been tampered with.
        /// </summary>
        [Input("enableRs256")]
        public Input<bool>? EnableRs256 { get; set; }

        /// <summary>
        /// Allows you to extract the authorization groups stored in the JWT.
        /// </summary>
        [Input("extractAuthorizations")]
        public Input<bool>? ExtractAuthorizations { get; set; }

        /// <summary>
        /// Allows you to extract the client ID claim name stored in JWT.
        /// </summary>
        [Input("extractClientId")]
        public Input<bool>? ExtractClientId { get; set; }

        /// <summary>
        /// Specifies where to get the JWT value from.
        /// </summary>
        [Input("extractLocation")]
        public Input<string>? ExtractLocation { get; set; }

        /// <summary>
        /// Allows you to extract the user name stored in the JWT.
        /// </summary>
        [Input("extractUserName")]
        public Input<bool>? ExtractUserName { get; set; }

        /// <summary>
        /// This specifies the name of the header to extract the JWT value from.
        /// </summary>
        [Input("headerName")]
        public Input<string>? HeaderName { get; set; }

        /// <summary>
        /// An identifier for the JWT keys collection.
        /// </summary>
        [Input("jwt")]
        public Input<string>? Jwt { get; set; }

        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        /// <summary>
        /// Specifies the primary location to extract the JWT value from. If the specified option doesn't include the JWTs, the system checks the secondary one.
        /// </summary>
        [Input("primaryLocation")]
        public Input<string>? PrimaryLocation { get; set; }

        /// <summary>
        /// Specifies the name of the query parameter from which to extract the JWT value.
        /// </summary>
        [Input("queryParameterName")]
        public Input<string>? QueryParameterName { get; set; }

        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        [Input("templateUuid")]
        public Input<string>? TemplateUuid { get; set; }

        /// <summary>
        /// This specifies the user name.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public GetPropertyRulesBuilderRulesV20240531BehaviorVerifyJsonWebTokenForDcpInputArgs()
        {
        }
        public static new GetPropertyRulesBuilderRulesV20240531BehaviorVerifyJsonWebTokenForDcpInputArgs Empty => new GetPropertyRulesBuilderRulesV20240531BehaviorVerifyJsonWebTokenForDcpInputArgs();
    }
}
