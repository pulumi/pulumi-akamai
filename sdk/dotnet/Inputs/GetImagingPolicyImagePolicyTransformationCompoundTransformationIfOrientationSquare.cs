// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareArgs : global::Pulumi.InvokeArgs
    {
        [Input("appends")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareAppendArgs>? _appends;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareAppendArgs> Appends
        {
            get => _appends ?? (_appends = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareAppendArgs>());
            set => _appends = value;
        }

        [Input("aspectCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareAspectCropArgs>? _aspectCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareAspectCropArgs> AspectCrops
        {
            get => _aspectCrops ?? (_aspectCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareAspectCropArgs>());
            set => _aspectCrops = value;
        }

        [Input("backgroundColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareBackgroundColorArgs>? _backgroundColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareBackgroundColorArgs> BackgroundColors
        {
            get => _backgroundColors ?? (_backgroundColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareBackgroundColorArgs>());
            set => _backgroundColors = value;
        }

        [Input("blurs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareBlurArgs>? _blurs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareBlurArgs> Blurs
        {
            get => _blurs ?? (_blurs = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareBlurArgs>());
            set => _blurs = value;
        }

        [Input("chromaKeys")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareChromaKeyArgs>? _chromaKeys;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareChromaKeyArgs> ChromaKeys
        {
            get => _chromaKeys ?? (_chromaKeys = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareChromaKeyArgs>());
            set => _chromaKeys = value;
        }

        [Input("composites")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCompositeArgs>? _composites;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCompositeArgs> Composites
        {
            get => _composites ?? (_composites = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCompositeArgs>());
            set => _composites = value;
        }

        [Input("compounds")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCompoundArgs>? _compounds;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCompoundArgs> Compounds
        {
            get => _compounds ?? (_compounds = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCompoundArgs>());
            set => _compounds = value;
        }

        [Input("contrasts")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareContrastArgs>? _contrasts;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareContrastArgs> Contrasts
        {
            get => _contrasts ?? (_contrasts = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareContrastArgs>());
            set => _contrasts = value;
        }

        [Input("crops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCropArgs>? _crops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCropArgs> Crops
        {
            get => _crops ?? (_crops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCropArgs>());
            set => _crops = value;
        }

        [Input("faceCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFaceCropArgs>? _faceCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFaceCropArgs> FaceCrops
        {
            get => _faceCrops ?? (_faceCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFaceCropArgs>());
            set => _faceCrops = value;
        }

        [Input("featureCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFeatureCropArgs>? _featureCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFeatureCropArgs> FeatureCrops
        {
            get => _featureCrops ?? (_featureCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFeatureCropArgs>());
            set => _featureCrops = value;
        }

        [Input("fitAndFills")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFitAndFillArgs>? _fitAndFills;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFitAndFillArgs> FitAndFills
        {
            get => _fitAndFills ?? (_fitAndFills = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFitAndFillArgs>());
            set => _fitAndFills = value;
        }

        [Input("goops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareGoopArgs>? _goops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareGoopArgs> Goops
        {
            get => _goops ?? (_goops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareGoopArgs>());
            set => _goops = value;
        }

        [Input("grayscales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareGrayscaleArgs>? _grayscales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareGrayscaleArgs> Grayscales
        {
            get => _grayscales ?? (_grayscales = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareGrayscaleArgs>());
            set => _grayscales = value;
        }

        [Input("hsls")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareHslArgs>? _hsls;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareHslArgs> Hsls
        {
            get => _hsls ?? (_hsls = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareHslArgs>());
            set => _hsls = value;
        }

        [Input("hsvs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareHsvArgs>? _hsvs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareHsvArgs> Hsvs
        {
            get => _hsvs ?? (_hsvs = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareHsvArgs>());
            set => _hsvs = value;
        }

        [Input("ifDimensions")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareIfDimensionArgs>? _ifDimensions;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareIfDimensionArgs> IfDimensions
        {
            get => _ifDimensions ?? (_ifDimensions = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareIfDimensionArgs>());
            set => _ifDimensions = value;
        }

        [Input("ifOrientations")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareIfOrientationArgs>? _ifOrientations;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareIfOrientationArgs> IfOrientations
        {
            get => _ifOrientations ?? (_ifOrientations = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareIfOrientationArgs>());
            set => _ifOrientations = value;
        }

        [Input("imQueries")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareImQueryArgs>? _imQueries;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareImQueryArgs> ImQueries
        {
            get => _imQueries ?? (_imQueries = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareImQueryArgs>());
            set => _imQueries = value;
        }

        [Input("maxColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMaxColorArgs>? _maxColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMaxColorArgs> MaxColors
        {
            get => _maxColors ?? (_maxColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMaxColorArgs>());
            set => _maxColors = value;
        }

        [Input("mirrors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMirrorArgs>? _mirrors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMirrorArgs> Mirrors
        {
            get => _mirrors ?? (_mirrors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMirrorArgs>());
            set => _mirrors = value;
        }

        [Input("monoHues")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMonoHueArgs>? _monoHues;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMonoHueArgs> MonoHues
        {
            get => _monoHues ?? (_monoHues = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMonoHueArgs>());
            set => _monoHues = value;
        }

        [Input("opacities")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareOpacityArgs>? _opacities;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareOpacityArgs> Opacities
        {
            get => _opacities ?? (_opacities = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareOpacityArgs>());
            set => _opacities = value;
        }

        [Input("regionOfInterestCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRegionOfInterestCropArgs>? _regionOfInterestCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRegionOfInterestCropArgs> RegionOfInterestCrops
        {
            get => _regionOfInterestCrops ?? (_regionOfInterestCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRegionOfInterestCropArgs>());
            set => _regionOfInterestCrops = value;
        }

        [Input("relativeCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRelativeCropArgs>? _relativeCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRelativeCropArgs> RelativeCrops
        {
            get => _relativeCrops ?? (_relativeCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRelativeCropArgs>());
            set => _relativeCrops = value;
        }

        [Input("removeColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRemoveColorArgs>? _removeColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRemoveColorArgs> RemoveColors
        {
            get => _removeColors ?? (_removeColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRemoveColorArgs>());
            set => _removeColors = value;
        }

        [Input("resizes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareResizeArgs>? _resizes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareResizeArgs> Resizes
        {
            get => _resizes ?? (_resizes = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareResizeArgs>());
            set => _resizes = value;
        }

        [Input("rotates")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRotateArgs>? _rotates;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRotateArgs> Rotates
        {
            get => _rotates ?? (_rotates = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRotateArgs>());
            set => _rotates = value;
        }

        [Input("scales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareScaleArgs>? _scales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareScaleArgs> Scales
        {
            get => _scales ?? (_scales = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareScaleArgs>());
            set => _scales = value;
        }

        [Input("shears")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareShearsArgs>? _shears;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareShearsArgs> Shears
        {
            get => _shears ?? (_shears = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareShearsArgs>());
            set => _shears = value;
        }

        [Input("trims")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareTrimArgs>? _trims;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareTrimArgs> Trims
        {
            get => _trims ?? (_trims = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareTrimArgs>());
            set => _trims = value;
        }

        [Input("unsharpMasks")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareUnsharpMaskArgs>? _unsharpMasks;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareUnsharpMaskArgs> UnsharpMasks
        {
            get => _unsharpMasks ?? (_unsharpMasks = new List<Inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareUnsharpMaskArgs>());
            set => _unsharpMasks = value;
        }

        public GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareArgs Empty => new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareArgs();
    }
}
