// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetCloudwrapperConfigurationsConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Represents the threshold for sending alerts.
        /// </summary>
        [Input("capacityAlertsThreshold", required: true)]
        public int CapacityAlertsThreshold { get; set; }

        /// <summary>
        /// Additional information provided by user which can help to differentiate or track changes of the configuration.
        /// </summary>
        [Input("comments", required: true)]
        public string Comments { get; set; } = null!;

        /// <summary>
        /// Name of the configuration.
        /// </summary>
        [Input("configName", required: true)]
        public string ConfigName { get; set; } = null!;

        /// <summary>
        /// Contract ID with Cloud Wrapper entitlement.
        /// </summary>
        [Input("contractId", required: true)]
        public string ContractId { get; set; } = null!;

        /// <summary>
        /// Unique identifier of a Cloud Wrapper configuration.
        /// </summary>
        [Input("id", required: true)]
        public int Id { get; set; }

        /// <summary>
        /// User to last activate the configuration.
        /// </summary>
        [Input("lastActivatedBy", required: true)]
        public string LastActivatedBy { get; set; } = null!;

        /// <summary>
        /// ISO format date that represents when the configuration was last activated successfully.
        /// </summary>
        [Input("lastActivatedDate", required: true)]
        public string LastActivatedDate { get; set; } = null!;

        /// <summary>
        /// User to last modify the configuration.
        /// </summary>
        [Input("lastUpdatedBy", required: true)]
        public string LastUpdatedBy { get; set; } = null!;

        /// <summary>
        /// ISO format date that represents when the configuration was last edited.
        /// </summary>
        [Input("lastUpdatedDate", required: true)]
        public string LastUpdatedDate { get; set; } = null!;

        [Input("locations")]
        private List<Inputs.GetCloudwrapperConfigurationsConfigurationLocationArgs>? _locations;

        /// <summary>
        /// List of all unused properties.
        /// </summary>
        public List<Inputs.GetCloudwrapperConfigurationsConfigurationLocationArgs> Locations
        {
            get => _locations ?? (_locations = new List<Inputs.GetCloudwrapperConfigurationsConfigurationLocationArgs>());
            set => _locations = value;
        }

        /// <summary>
        /// Specify details about the Multi CDN settings.
        /// </summary>
        [Input("multiCdnSettings")]
        public Inputs.GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsArgs? MultiCdnSettings { get; set; }

        [Input("notificationEmails", required: true)]
        private List<string>? _notificationEmails;

        /// <summary>
        /// Email addresses to receive notifications.
        /// </summary>
        public List<string> NotificationEmails
        {
            get => _notificationEmails ?? (_notificationEmails = new List<string>());
            set => _notificationEmails = value;
        }

        [Input("propertyIds", required: true)]
        private List<string>? _propertyIds;

        /// <summary>
        /// List of properties belonging to media delivery products. Properties need to be unique across configurations.
        /// </summary>
        public List<string> PropertyIds
        {
            get => _propertyIds ?? (_propertyIds = new List<string>());
            set => _propertyIds = value;
        }

        /// <summary>
        /// Retain idle objects beyond their max idle lifetime.
        /// </summary>
        [Input("retainIdleObjects", required: true)]
        public bool RetainIdleObjects { get; set; }

        /// <summary>
        /// Current state of the provisioning of the configuration, either SAVED, IN_PROGRESS, ACTIVE, DELETE_IN_PROGRESS, or FAILED.
        /// </summary>
        [Input("status", required: true)]
        public string Status { get; set; } = null!;

        public GetCloudwrapperConfigurationsConfigurationArgs()
        {
        }
        public static new GetCloudwrapperConfigurationsConfigurationArgs Empty => new GetCloudwrapperConfigurationsConfigurationArgs();
    }
}
