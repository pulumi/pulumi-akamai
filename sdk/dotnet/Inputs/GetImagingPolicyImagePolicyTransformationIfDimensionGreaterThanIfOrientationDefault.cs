// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultArgs : global::Pulumi.InvokeArgs
    {
        [Input("appends")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultAppendArgs>? _appends;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultAppendArgs> Appends
        {
            get => _appends ?? (_appends = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultAppendArgs>());
            set => _appends = value;
        }

        [Input("aspectCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultAspectCropArgs>? _aspectCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultAspectCropArgs> AspectCrops
        {
            get => _aspectCrops ?? (_aspectCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultAspectCropArgs>());
            set => _aspectCrops = value;
        }

        [Input("backgroundColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultBackgroundColorArgs>? _backgroundColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultBackgroundColorArgs> BackgroundColors
        {
            get => _backgroundColors ?? (_backgroundColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultBackgroundColorArgs>());
            set => _backgroundColors = value;
        }

        [Input("blurs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultBlurArgs>? _blurs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultBlurArgs> Blurs
        {
            get => _blurs ?? (_blurs = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultBlurArgs>());
            set => _blurs = value;
        }

        [Input("chromaKeys")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultChromaKeyArgs>? _chromaKeys;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultChromaKeyArgs> ChromaKeys
        {
            get => _chromaKeys ?? (_chromaKeys = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultChromaKeyArgs>());
            set => _chromaKeys = value;
        }

        [Input("composites")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultCompositeArgs>? _composites;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultCompositeArgs> Composites
        {
            get => _composites ?? (_composites = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultCompositeArgs>());
            set => _composites = value;
        }

        [Input("compounds")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultCompoundArgs>? _compounds;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultCompoundArgs> Compounds
        {
            get => _compounds ?? (_compounds = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultCompoundArgs>());
            set => _compounds = value;
        }

        [Input("contrasts")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultContrastArgs>? _contrasts;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultContrastArgs> Contrasts
        {
            get => _contrasts ?? (_contrasts = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultContrastArgs>());
            set => _contrasts = value;
        }

        [Input("crops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultCropArgs>? _crops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultCropArgs> Crops
        {
            get => _crops ?? (_crops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultCropArgs>());
            set => _crops = value;
        }

        [Input("faceCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultFaceCropArgs>? _faceCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultFaceCropArgs> FaceCrops
        {
            get => _faceCrops ?? (_faceCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultFaceCropArgs>());
            set => _faceCrops = value;
        }

        [Input("featureCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultFeatureCropArgs>? _featureCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultFeatureCropArgs> FeatureCrops
        {
            get => _featureCrops ?? (_featureCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultFeatureCropArgs>());
            set => _featureCrops = value;
        }

        [Input("fitAndFills")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultFitAndFillArgs>? _fitAndFills;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultFitAndFillArgs> FitAndFills
        {
            get => _fitAndFills ?? (_fitAndFills = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultFitAndFillArgs>());
            set => _fitAndFills = value;
        }

        [Input("goops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultGoopArgs>? _goops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultGoopArgs> Goops
        {
            get => _goops ?? (_goops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultGoopArgs>());
            set => _goops = value;
        }

        [Input("grayscales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultGrayscaleArgs>? _grayscales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultGrayscaleArgs> Grayscales
        {
            get => _grayscales ?? (_grayscales = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultGrayscaleArgs>());
            set => _grayscales = value;
        }

        [Input("hsls")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultHslArgs>? _hsls;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultHslArgs> Hsls
        {
            get => _hsls ?? (_hsls = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultHslArgs>());
            set => _hsls = value;
        }

        [Input("hsvs")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultHsvArgs>? _hsvs;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultHsvArgs> Hsvs
        {
            get => _hsvs ?? (_hsvs = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultHsvArgs>());
            set => _hsvs = value;
        }

        [Input("ifDimensions")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultIfDimensionArgs>? _ifDimensions;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultIfDimensionArgs> IfDimensions
        {
            get => _ifDimensions ?? (_ifDimensions = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultIfDimensionArgs>());
            set => _ifDimensions = value;
        }

        [Input("ifOrientations")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultIfOrientationArgs>? _ifOrientations;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultIfOrientationArgs> IfOrientations
        {
            get => _ifOrientations ?? (_ifOrientations = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultIfOrientationArgs>());
            set => _ifOrientations = value;
        }

        [Input("imQueries")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultImQueryArgs>? _imQueries;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultImQueryArgs> ImQueries
        {
            get => _imQueries ?? (_imQueries = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultImQueryArgs>());
            set => _imQueries = value;
        }

        [Input("maxColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultMaxColorArgs>? _maxColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultMaxColorArgs> MaxColors
        {
            get => _maxColors ?? (_maxColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultMaxColorArgs>());
            set => _maxColors = value;
        }

        [Input("mirrors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultMirrorArgs>? _mirrors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultMirrorArgs> Mirrors
        {
            get => _mirrors ?? (_mirrors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultMirrorArgs>());
            set => _mirrors = value;
        }

        [Input("monoHues")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultMonoHueArgs>? _monoHues;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultMonoHueArgs> MonoHues
        {
            get => _monoHues ?? (_monoHues = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultMonoHueArgs>());
            set => _monoHues = value;
        }

        [Input("opacities")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultOpacityArgs>? _opacities;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultOpacityArgs> Opacities
        {
            get => _opacities ?? (_opacities = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultOpacityArgs>());
            set => _opacities = value;
        }

        [Input("regionOfInterestCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRegionOfInterestCropArgs>? _regionOfInterestCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRegionOfInterestCropArgs> RegionOfInterestCrops
        {
            get => _regionOfInterestCrops ?? (_regionOfInterestCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRegionOfInterestCropArgs>());
            set => _regionOfInterestCrops = value;
        }

        [Input("relativeCrops")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRelativeCropArgs>? _relativeCrops;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRelativeCropArgs> RelativeCrops
        {
            get => _relativeCrops ?? (_relativeCrops = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRelativeCropArgs>());
            set => _relativeCrops = value;
        }

        [Input("removeColors")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRemoveColorArgs>? _removeColors;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRemoveColorArgs> RemoveColors
        {
            get => _removeColors ?? (_removeColors = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRemoveColorArgs>());
            set => _removeColors = value;
        }

        [Input("resizes")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultResizeArgs>? _resizes;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultResizeArgs> Resizes
        {
            get => _resizes ?? (_resizes = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultResizeArgs>());
            set => _resizes = value;
        }

        [Input("rotates")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRotateArgs>? _rotates;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRotateArgs> Rotates
        {
            get => _rotates ?? (_rotates = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultRotateArgs>());
            set => _rotates = value;
        }

        [Input("scales")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultScaleArgs>? _scales;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultScaleArgs> Scales
        {
            get => _scales ?? (_scales = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultScaleArgs>());
            set => _scales = value;
        }

        [Input("shears")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultShearsArgs>? _shears;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultShearsArgs> Shears
        {
            get => _shears ?? (_shears = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultShearsArgs>());
            set => _shears = value;
        }

        [Input("trims")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultTrimArgs>? _trims;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultTrimArgs> Trims
        {
            get => _trims ?? (_trims = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultTrimArgs>());
            set => _trims = value;
        }

        [Input("unsharpMasks")]
        private List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultUnsharpMaskArgs>? _unsharpMasks;
        public List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultUnsharpMaskArgs> UnsharpMasks
        {
            get => _unsharpMasks ?? (_unsharpMasks = new List<Inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultUnsharpMaskArgs>());
            set => _unsharpMasks = value;
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultArgs()
        {
        }
        public static new GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultArgs Empty => new GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationDefaultArgs();
    }
}
