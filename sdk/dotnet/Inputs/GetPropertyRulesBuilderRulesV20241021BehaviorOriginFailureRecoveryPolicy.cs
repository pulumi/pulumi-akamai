// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Inputs
{

    public sealed class GetPropertyRulesBuilderRulesV20241021BehaviorOriginFailureRecoveryPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Synchronizes content between the primary and backup origins, byte for byte.
        /// </summary>
        [Input("binaryEquivalentContent")]
        public bool? BinaryEquivalentContent { get; set; }

        /// <summary>
        /// Temporarily blocks an origin IP address that experienced a certain number of failures. When an IP address is blocked, the `configName` established for `originResponsivenessRecoveryConfigName` is applied.
        /// </summary>
        [Input("enableIpAvoidance")]
        public bool? EnableIpAvoidance { get; set; }

        /// <summary>
        /// Activates and configures a recovery policy.
        /// </summary>
        [Input("enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Defines the number of failures that need to occur to an origin address before it's blocked.
        /// </summary>
        [Input("ipAvoidanceErrorThreshold")]
        public int? IpAvoidanceErrorThreshold { get; set; }

        /// <summary>
        /// Defines the number of seconds after which the IP address is removed from the blocklist.
        /// </summary>
        [Input("ipAvoidanceRetryInterval")]
        public int? IpAvoidanceRetryInterval { get; set; }

        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        [Input("locked")]
        public bool? Locked { get; set; }

        /// <summary>
        /// Enables continuous monitoring of connectivity to the origin. If necessary, applies retry or recovery actions.
        /// </summary>
        [Input("monitorOriginResponsiveness")]
        public bool? MonitorOriginResponsiveness { get; set; }

        [Input("monitorResponseCodes1s")]
        private List<string>? _monitorResponseCodes1s;

        /// <summary>
        /// Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can't use the same codes here.
        /// </summary>
        public List<string> MonitorResponseCodes1s
        {
            get => _monitorResponseCodes1s ?? (_monitorResponseCodes1s = new List<string>());
            set => _monitorResponseCodes1s = value;
        }

        [Input("monitorResponseCodes2s")]
        private List<string>? _monitorResponseCodes2s;

        /// <summary>
        /// Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can't use the same codes here.
        /// </summary>
        public List<string> MonitorResponseCodes2s
        {
            get => _monitorResponseCodes2s ?? (_monitorResponseCodes2s = new List<string>());
            set => _monitorResponseCodes2s = value;
        }

        [Input("monitorResponseCodes3s")]
        private List<string>? _monitorResponseCodes3s;

        /// <summary>
        /// Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can't use the same codes here..
        /// </summary>
        public List<string> MonitorResponseCodes3s
        {
            get => _monitorResponseCodes3s ?? (_monitorResponseCodes3s = new List<string>());
            set => _monitorResponseCodes3s = value;
        }

        /// <summary>
        /// Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
        /// </summary>
        [Input("monitorStatusCodes1")]
        public bool? MonitorStatusCodes1 { get; set; }

        /// <summary>
        /// Enables the recovery action for the response codes you define.
        /// </summary>
        [Input("monitorStatusCodes1EnableRecovery")]
        public bool? MonitorStatusCodes1EnableRecovery { get; set; }

        /// <summary>
        /// When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
        /// </summary>
        [Input("monitorStatusCodes1EnableRetry")]
        public bool? MonitorStatusCodes1EnableRetry { get; set; }

        /// <summary>
        /// Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
        /// </summary>
        [Input("monitorStatusCodes1RecoveryConfigName")]
        public string? MonitorStatusCodes1RecoveryConfigName { get; set; }

        /// <summary>
        /// Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
        /// </summary>
        [Input("monitorStatusCodes2")]
        public bool? MonitorStatusCodes2 { get; set; }

        /// <summary>
        /// Enables the recovery action for the response codes you define.
        /// </summary>
        [Input("monitorStatusCodes2EnableRecovery")]
        public bool? MonitorStatusCodes2EnableRecovery { get; set; }

        /// <summary>
        /// When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
        /// </summary>
        [Input("monitorStatusCodes2EnableRetry")]
        public bool? MonitorStatusCodes2EnableRetry { get; set; }

        /// <summary>
        /// Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
        /// </summary>
        [Input("monitorStatusCodes2RecoveryConfigName")]
        public string? MonitorStatusCodes2RecoveryConfigName { get; set; }

        /// <summary>
        /// Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
        /// </summary>
        [Input("monitorStatusCodes3")]
        public bool? MonitorStatusCodes3 { get; set; }

        /// <summary>
        /// Enables the recovery action for the response codes you define.
        /// </summary>
        [Input("monitorStatusCodes3EnableRecovery")]
        public bool? MonitorStatusCodes3EnableRecovery { get; set; }

        /// <summary>
        /// When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
        /// </summary>
        [Input("monitorStatusCodes3EnableRetry")]
        public bool? MonitorStatusCodes3EnableRetry { get; set; }

        /// <summary>
        /// Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
        /// </summary>
        [Input("monitorStatusCodes3RecoveryConfigName")]
        public string? MonitorStatusCodes3RecoveryConfigName { get; set; }

        /// <summary>
        /// Specify a custom timeout, from 1 to 10 seconds.
        /// </summary>
        [Input("originResponsivenessCustomTimeout")]
        public int? OriginResponsivenessCustomTimeout { get; set; }

        /// <summary>
        /// Enables a recovery action for a specific failure condition.
        /// </summary>
        [Input("originResponsivenessEnableRecovery")]
        public bool? OriginResponsivenessEnableRecovery { get; set; }

        /// <summary>
        /// If a specific failure condition applies, attempts a retry on the same origin before executing the recovery method.
        /// </summary>
        [Input("originResponsivenessEnableRetry")]
        public bool? OriginResponsivenessEnableRetry { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("originResponsivenessMonitoring")]
        public string? OriginResponsivenessMonitoring { get; set; }

        /// <summary>
        /// Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
        /// </summary>
        [Input("originResponsivenessRecoveryConfigName")]
        public string? OriginResponsivenessRecoveryConfigName { get; set; }

        /// <summary>
        /// The timeout threshold that triggers a retry or recovery action.
        /// </summary>
        [Input("originResponsivenessTimeout")]
        public string? OriginResponsivenessTimeout { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("statusCodeMonitoring1")]
        public string? StatusCodeMonitoring1 { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("statusCodeMonitoring2")]
        public string? StatusCodeMonitoring2 { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("statusCodeMonitoring3")]
        public string? StatusCodeMonitoring3 { get; set; }

        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        [Input("templateUuid")]
        public string? TemplateUuid { get; set; }

        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        [Input("tuningParameters")]
        public string? TuningParameters { get; set; }

        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        [Input("uuid")]
        public string? Uuid { get; set; }

        public GetPropertyRulesBuilderRulesV20241021BehaviorOriginFailureRecoveryPolicyArgs()
        {
        }
        public static new GetPropertyRulesBuilderRulesV20241021BehaviorOriginFailureRecoveryPolicyArgs Empty => new GetPropertyRulesBuilderRulesV20241021BehaviorOriginFailureRecoveryPolicyArgs();
    }
}
