// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/networkListSubscription:NetworkListSubscription")]
    public partial class NetworkListSubscription : global::Pulumi.CustomResource
    {
        [Output("networkLists")]
        public Output<ImmutableArray<string>> NetworkLists { get; private set; } = null!;

        [Output("recipients")]
        public Output<ImmutableArray<string>> Recipients { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkListSubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkListSubscription(string name, NetworkListSubscriptionArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/networkListSubscription:NetworkListSubscription", name, args ?? new NetworkListSubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkListSubscription(string name, Input<string> id, NetworkListSubscriptionState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/networkListSubscription:NetworkListSubscription", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkListSubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkListSubscription Get(string name, Input<string> id, NetworkListSubscriptionState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkListSubscription(name, id, state, options);
        }
    }

    public sealed class NetworkListSubscriptionArgs : global::Pulumi.ResourceArgs
    {
        [Input("networkLists", required: true)]
        private InputList<string>? _networkLists;
        public InputList<string> NetworkLists
        {
            get => _networkLists ?? (_networkLists = new InputList<string>());
            set => _networkLists = value;
        }

        [Input("recipients", required: true)]
        private InputList<string>? _recipients;
        public InputList<string> Recipients
        {
            get => _recipients ?? (_recipients = new InputList<string>());
            set => _recipients = value;
        }

        public NetworkListSubscriptionArgs()
        {
        }
        public static new NetworkListSubscriptionArgs Empty => new NetworkListSubscriptionArgs();
    }

    public sealed class NetworkListSubscriptionState : global::Pulumi.ResourceArgs
    {
        [Input("networkLists")]
        private InputList<string>? _networkLists;
        public InputList<string> NetworkLists
        {
            get => _networkLists ?? (_networkLists = new InputList<string>());
            set => _networkLists = value;
        }

        [Input("recipients")]
        private InputList<string>? _recipients;
        public InputList<string> Recipients
        {
            get => _recipients ?? (_recipients = new InputList<string>());
            set => _recipients = value;
        }

        public NetworkListSubscriptionState()
        {
        }
        public static new NetworkListSubscriptionState Empty => new NetworkListSubscriptionState();
    }
}
