// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/cloudwrapperConfiguration:CloudwrapperConfiguration")]
    public partial class CloudwrapperConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
        /// </summary>
        [Output("capacityAlertsThreshold")]
        public Output<int?> CapacityAlertsThreshold { get; private set; } = null!;

        /// <summary>
        /// Additional information you provide to differentiate or track changes of the configuration.
        /// </summary>
        [Output("comments")]
        public Output<string> Comments { get; private set; } = null!;

        /// <summary>
        /// Name of the configuration.
        /// </summary>
        [Output("configName")]
        public Output<string> ConfigName { get; private set; } = null!;

        /// <summary>
        /// Contract ID having Cloud Wrapper entitlement.
        /// </summary>
        [Output("contractId")]
        public Output<string> ContractId { get; private set; } = null!;

        /// <summary>
        /// List of locations to use with the configuration.
        /// </summary>
        [Output("locations")]
        public Output<ImmutableArray<Outputs.CloudwrapperConfigurationLocation>> Locations { get; private set; } = null!;

        /// <summary>
        /// Email addresses to use for notifications.
        /// </summary>
        [Output("notificationEmails")]
        public Output<ImmutableArray<string>> NotificationEmails { get; private set; } = null!;

        /// <summary>
        /// List of properties belonging to eligible products.
        /// </summary>
        [Output("propertyIds")]
        public Output<ImmutableArray<string>> PropertyIds { get; private set; } = null!;

        /// <summary>
        /// Retain idle objects beyond their max idle lifetime.
        /// </summary>
        [Output("retainIdleObjects")]
        public Output<bool> RetainIdleObjects { get; private set; } = null!;

        /// <summary>
        /// Unique hash value of the configuration.
        /// </summary>
        [Output("revision")]
        public Output<string> Revision { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.CloudwrapperConfigurationTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a CloudwrapperConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudwrapperConfiguration(string name, CloudwrapperConfigurationArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/cloudwrapperConfiguration:CloudwrapperConfiguration", name, args ?? new CloudwrapperConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudwrapperConfiguration(string name, Input<string> id, CloudwrapperConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/cloudwrapperConfiguration:CloudwrapperConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudwrapperConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudwrapperConfiguration Get(string name, Input<string> id, CloudwrapperConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudwrapperConfiguration(name, id, state, options);
        }
    }

    public sealed class CloudwrapperConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
        /// </summary>
        [Input("capacityAlertsThreshold")]
        public Input<int>? CapacityAlertsThreshold { get; set; }

        /// <summary>
        /// Additional information you provide to differentiate or track changes of the configuration.
        /// </summary>
        [Input("comments", required: true)]
        public Input<string> Comments { get; set; } = null!;

        /// <summary>
        /// Name of the configuration.
        /// </summary>
        [Input("configName", required: true)]
        public Input<string> ConfigName { get; set; } = null!;

        /// <summary>
        /// Contract ID having Cloud Wrapper entitlement.
        /// </summary>
        [Input("contractId", required: true)]
        public Input<string> ContractId { get; set; } = null!;

        [Input("locations")]
        private InputList<Inputs.CloudwrapperConfigurationLocationArgs>? _locations;

        /// <summary>
        /// List of locations to use with the configuration.
        /// </summary>
        public InputList<Inputs.CloudwrapperConfigurationLocationArgs> Locations
        {
            get => _locations ?? (_locations = new InputList<Inputs.CloudwrapperConfigurationLocationArgs>());
            set => _locations = value;
        }

        [Input("notificationEmails")]
        private InputList<string>? _notificationEmails;

        /// <summary>
        /// Email addresses to use for notifications.
        /// </summary>
        public InputList<string> NotificationEmails
        {
            get => _notificationEmails ?? (_notificationEmails = new InputList<string>());
            set => _notificationEmails = value;
        }

        [Input("propertyIds", required: true)]
        private InputList<string>? _propertyIds;

        /// <summary>
        /// List of properties belonging to eligible products.
        /// </summary>
        public InputList<string> PropertyIds
        {
            get => _propertyIds ?? (_propertyIds = new InputList<string>());
            set => _propertyIds = value;
        }

        /// <summary>
        /// Retain idle objects beyond their max idle lifetime.
        /// </summary>
        [Input("retainIdleObjects")]
        public Input<bool>? RetainIdleObjects { get; set; }

        [Input("timeouts")]
        public Input<Inputs.CloudwrapperConfigurationTimeoutsArgs>? Timeouts { get; set; }

        public CloudwrapperConfigurationArgs()
        {
        }
        public static new CloudwrapperConfigurationArgs Empty => new CloudwrapperConfigurationArgs();
    }

    public sealed class CloudwrapperConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
        /// </summary>
        [Input("capacityAlertsThreshold")]
        public Input<int>? CapacityAlertsThreshold { get; set; }

        /// <summary>
        /// Additional information you provide to differentiate or track changes of the configuration.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// Name of the configuration.
        /// </summary>
        [Input("configName")]
        public Input<string>? ConfigName { get; set; }

        /// <summary>
        /// Contract ID having Cloud Wrapper entitlement.
        /// </summary>
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        [Input("locations")]
        private InputList<Inputs.CloudwrapperConfigurationLocationGetArgs>? _locations;

        /// <summary>
        /// List of locations to use with the configuration.
        /// </summary>
        public InputList<Inputs.CloudwrapperConfigurationLocationGetArgs> Locations
        {
            get => _locations ?? (_locations = new InputList<Inputs.CloudwrapperConfigurationLocationGetArgs>());
            set => _locations = value;
        }

        [Input("notificationEmails")]
        private InputList<string>? _notificationEmails;

        /// <summary>
        /// Email addresses to use for notifications.
        /// </summary>
        public InputList<string> NotificationEmails
        {
            get => _notificationEmails ?? (_notificationEmails = new InputList<string>());
            set => _notificationEmails = value;
        }

        [Input("propertyIds")]
        private InputList<string>? _propertyIds;

        /// <summary>
        /// List of properties belonging to eligible products.
        /// </summary>
        public InputList<string> PropertyIds
        {
            get => _propertyIds ?? (_propertyIds = new InputList<string>());
            set => _propertyIds = value;
        }

        /// <summary>
        /// Retain idle objects beyond their max idle lifetime.
        /// </summary>
        [Input("retainIdleObjects")]
        public Input<bool>? RetainIdleObjects { get; set; }

        /// <summary>
        /// Unique hash value of the configuration.
        /// </summary>
        [Input("revision")]
        public Input<string>? Revision { get; set; }

        [Input("timeouts")]
        public Input<Inputs.CloudwrapperConfigurationTimeoutsGetArgs>? Timeouts { get; set; }

        public CloudwrapperConfigurationState()
        {
        }
        public static new CloudwrapperConfigurationState Empty => new CloudwrapperConfigurationState();
    }
}
