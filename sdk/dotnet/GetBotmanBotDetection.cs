// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetBotmanBotDetection
    {
        public static Task<GetBotmanBotDetectionResult> InvokeAsync(GetBotmanBotDetectionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBotmanBotDetectionResult>("akamai:index/getBotmanBotDetection:getBotmanBotDetection", args ?? new GetBotmanBotDetectionArgs(), options.WithDefaults());

        public static Output<GetBotmanBotDetectionResult> Invoke(GetBotmanBotDetectionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBotmanBotDetectionResult>("akamai:index/getBotmanBotDetection:getBotmanBotDetection", args ?? new GetBotmanBotDetectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBotmanBotDetectionArgs : global::Pulumi.InvokeArgs
    {
        [Input("detectionName")]
        public string? DetectionName { get; set; }

        public GetBotmanBotDetectionArgs()
        {
        }
        public static new GetBotmanBotDetectionArgs Empty => new GetBotmanBotDetectionArgs();
    }

    public sealed class GetBotmanBotDetectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("detectionName")]
        public Input<string>? DetectionName { get; set; }

        public GetBotmanBotDetectionInvokeArgs()
        {
        }
        public static new GetBotmanBotDetectionInvokeArgs Empty => new GetBotmanBotDetectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetBotmanBotDetectionResult
    {
        public readonly string? DetectionName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;

        [OutputConstructor]
        private GetBotmanBotDetectionResult(
            string? detectionName,

            string id,

            string json)
        {
            DetectionName = detectionName;
            Id = id;
            Json = json;
        }
    }
}
