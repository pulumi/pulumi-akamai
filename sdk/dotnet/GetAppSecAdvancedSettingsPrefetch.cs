// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetAppSecAdvancedSettingsPrefetch
    {
        /// <summary>
        /// **Scopes**: Security configuration
        /// 
        /// Returns information about your prefetch request settings. By default, Web Application Firewall inspects only external requests — requests originating outside of your firewall or Akamai's edge servers. When prefetch is enabled, requests between your origin servers and Akamai's edge servers can also be inspected by the firewall. The returned information is described in the [PrefetchRequest members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#deb7220d) section of the Application Security API.
        /// 
        /// **Related** **API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/advanced-settings/prefetch](https://techdocs.akamai.com/application-security/reference/get-advanced-settings-prefetch)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
        ///         {
        ///             Name = "Documentation",
        ///         }));
        ///         var prefetch = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecAdvancedSettingsPrefetch.InvokeAsync(new Akamai.GetAppSecAdvancedSettingsPrefetchArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///         })));
        ///         this.AdvancedSettingsPrefetchOutput = prefetch.Apply(prefetch =&gt; prefetch.OutputText);
        ///         this.AdvancedSettingsPrefetchJson = prefetch.Apply(prefetch =&gt; prefetch.Json);
        ///     }
        /// 
        ///     [Output("advancedSettingsPrefetchOutput")]
        ///     public Output&lt;string&gt; AdvancedSettingsPrefetchOutput { get; set; }
        ///     [Output("advancedSettingsPrefetchJson")]
        ///     public Output&lt;string&gt; AdvancedSettingsPrefetchJson { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Output Options
        /// 
        /// The following options can be used to determine the information returned, and how that returned information is formatted:
        /// 
        /// - `json`. JSON-formatted list of information about the prefetch request settings.
        /// - `output_text`. Tabular report showing the prefetch request settings.
        /// </summary>
        public static Task<GetAppSecAdvancedSettingsPrefetchResult> InvokeAsync(GetAppSecAdvancedSettingsPrefetchArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAppSecAdvancedSettingsPrefetchResult>("akamai:index/getAppSecAdvancedSettingsPrefetch:getAppSecAdvancedSettingsPrefetch", args ?? new GetAppSecAdvancedSettingsPrefetchArgs(), options.WithDefaults());

        /// <summary>
        /// **Scopes**: Security configuration
        /// 
        /// Returns information about your prefetch request settings. By default, Web Application Firewall inspects only external requests — requests originating outside of your firewall or Akamai's edge servers. When prefetch is enabled, requests between your origin servers and Akamai's edge servers can also be inspected by the firewall. The returned information is described in the [PrefetchRequest members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#deb7220d) section of the Application Security API.
        /// 
        /// **Related** **API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/advanced-settings/prefetch](https://techdocs.akamai.com/application-security/reference/get-advanced-settings-prefetch)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
        ///         {
        ///             Name = "Documentation",
        ///         }));
        ///         var prefetch = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecAdvancedSettingsPrefetch.InvokeAsync(new Akamai.GetAppSecAdvancedSettingsPrefetchArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///         })));
        ///         this.AdvancedSettingsPrefetchOutput = prefetch.Apply(prefetch =&gt; prefetch.OutputText);
        ///         this.AdvancedSettingsPrefetchJson = prefetch.Apply(prefetch =&gt; prefetch.Json);
        ///     }
        /// 
        ///     [Output("advancedSettingsPrefetchOutput")]
        ///     public Output&lt;string&gt; AdvancedSettingsPrefetchOutput { get; set; }
        ///     [Output("advancedSettingsPrefetchJson")]
        ///     public Output&lt;string&gt; AdvancedSettingsPrefetchJson { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Output Options
        /// 
        /// The following options can be used to determine the information returned, and how that returned information is formatted:
        /// 
        /// - `json`. JSON-formatted list of information about the prefetch request settings.
        /// - `output_text`. Tabular report showing the prefetch request settings.
        /// </summary>
        public static Output<GetAppSecAdvancedSettingsPrefetchResult> Invoke(GetAppSecAdvancedSettingsPrefetchInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAppSecAdvancedSettingsPrefetchResult>("akamai:index/getAppSecAdvancedSettingsPrefetch:getAppSecAdvancedSettingsPrefetch", args ?? new GetAppSecAdvancedSettingsPrefetchInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppSecAdvancedSettingsPrefetchArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the prefetch settings.
        /// </summary>
        [Input("configId", required: true)]
        public int ConfigId { get; set; }

        public GetAppSecAdvancedSettingsPrefetchArgs()
        {
        }
    }

    public sealed class GetAppSecAdvancedSettingsPrefetchInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the prefetch settings.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        public GetAppSecAdvancedSettingsPrefetchInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAppSecAdvancedSettingsPrefetchResult
    {
        public readonly int ConfigId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly string OutputText;

        [OutputConstructor]
        private GetAppSecAdvancedSettingsPrefetchResult(
            int configId,

            string id,

            string json,

            string outputText)
        {
            ConfigId = configId;
            Id = id;
            Json = json;
            OutputText = outputText;
        }
    }
}
