// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetAppSecAttackGroups
    {
        public static Task<GetAppSecAttackGroupsResult> InvokeAsync(GetAppSecAttackGroupsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAppSecAttackGroupsResult>("akamai:index/getAppSecAttackGroups:getAppSecAttackGroups", args ?? new GetAppSecAttackGroupsArgs(), options.WithDefaults());

        public static Output<GetAppSecAttackGroupsResult> Invoke(GetAppSecAttackGroupsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAppSecAttackGroupsResult>("akamai:index/getAppSecAttackGroups:getAppSecAttackGroups", args ?? new GetAppSecAttackGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppSecAttackGroupsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// . Unique name of the attack group you want to return information for. If not included, information is returned for all your attack groups.
        /// </summary>
        [Input("attackGroup")]
        public string? AttackGroup { get; set; }

        /// <summary>
        /// . Unique identifier of the security configuration associated with the attack group.
        /// </summary>
        [Input("configId", required: true)]
        public int ConfigId { get; set; }

        /// <summary>
        /// . Unique identifier of the security policy associated with the attack group.
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public string SecurityPolicyId { get; set; } = null!;

        public GetAppSecAttackGroupsArgs()
        {
        }
    }

    public sealed class GetAppSecAttackGroupsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// . Unique name of the attack group you want to return information for. If not included, information is returned for all your attack groups.
        /// </summary>
        [Input("attackGroup")]
        public Input<string>? AttackGroup { get; set; }

        /// <summary>
        /// . Unique identifier of the security configuration associated with the attack group.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// . Unique identifier of the security policy associated with the attack group.
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public Input<string> SecurityPolicyId { get; set; } = null!;

        public GetAppSecAttackGroupsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAppSecAttackGroupsResult
    {
        public readonly string? AttackGroup;
        public readonly string AttackGroupAction;
        public readonly string ConditionException;
        public readonly int ConfigId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly string OutputText;
        public readonly string SecurityPolicyId;

        [OutputConstructor]
        private GetAppSecAttackGroupsResult(
            string? attackGroup,

            string attackGroupAction,

            string conditionException,

            int configId,

            string id,

            string json,

            string outputText,

            string securityPolicyId)
        {
            AttackGroup = attackGroup;
            AttackGroupAction = attackGroupAction;
            ConditionException = conditionException;
            ConfigId = configId;
            Id = id;
            Json = json;
            OutputText = outputText;
            SecurityPolicyId = securityPolicyId;
        }
    }
}
