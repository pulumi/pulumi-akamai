// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/cloudletsPolicy:CloudletsPolicy")]
    public partial class CloudletsPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Code for the type of Cloudlet (ALB, AP, AS, CD, ER, FR, IG, or VP)
        /// </summary>
        [Output("cloudletCode")]
        public Output<string> CloudletCode { get; private set; } = null!;

        /// <summary>
        /// An integer that corresponds to a Cloudlets policy type (0 or 9)
        /// </summary>
        [Output("cloudletId")]
        public Output<int> CloudletId { get; private set; } = null!;

        /// <summary>
        /// The description of this specific policy
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Defines the group association for the policy. You must have edit privileges for the group
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The version of the Cloudlet specific matchRules
        /// </summary>
        [Output("matchRuleFormat")]
        public Output<string?> MatchRuleFormat { get; private set; } = null!;

        /// <summary>
        /// A JSON structure that defines the rules for this policy
        /// </summary>
        [Output("matchRules")]
        public Output<string?> MatchRules { get; private set; } = null!;

        /// <summary>
        /// The name of the policy. The name must be unique
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Output("timeouts")]
        public Output<Outputs.CloudletsPolicyTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The version number of the policy
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;

        /// <summary>
        /// A JSON encoded list of warnings
        /// </summary>
        [Output("warnings")]
        public Output<string> Warnings { get; private set; } = null!;


        /// <summary>
        /// Create a CloudletsPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudletsPolicy(string name, CloudletsPolicyArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/cloudletsPolicy:CloudletsPolicy", name, args ?? new CloudletsPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudletsPolicy(string name, Input<string> id, CloudletsPolicyState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/cloudletsPolicy:CloudletsPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudletsPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudletsPolicy Get(string name, Input<string> id, CloudletsPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudletsPolicy(name, id, state, options);
        }
    }

    public sealed class CloudletsPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Code for the type of Cloudlet (ALB, AP, AS, CD, ER, FR, IG, or VP)
        /// </summary>
        [Input("cloudletCode", required: true)]
        public Input<string> CloudletCode { get; set; } = null!;

        /// <summary>
        /// The description of this specific policy
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Defines the group association for the policy. You must have edit privileges for the group
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The version of the Cloudlet specific matchRules
        /// </summary>
        [Input("matchRuleFormat")]
        public Input<string>? MatchRuleFormat { get; set; }

        /// <summary>
        /// A JSON structure that defines the rules for this policy
        /// </summary>
        [Input("matchRules")]
        public Input<string>? MatchRules { get; set; }

        /// <summary>
        /// The name of the policy. The name must be unique
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Input("timeouts")]
        public Input<Inputs.CloudletsPolicyTimeoutsArgs>? Timeouts { get; set; }

        public CloudletsPolicyArgs()
        {
        }
        public static new CloudletsPolicyArgs Empty => new CloudletsPolicyArgs();
    }

    public sealed class CloudletsPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Code for the type of Cloudlet (ALB, AP, AS, CD, ER, FR, IG, or VP)
        /// </summary>
        [Input("cloudletCode")]
        public Input<string>? CloudletCode { get; set; }

        /// <summary>
        /// An integer that corresponds to a Cloudlets policy type (0 or 9)
        /// </summary>
        [Input("cloudletId")]
        public Input<int>? CloudletId { get; set; }

        /// <summary>
        /// The description of this specific policy
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Defines the group association for the policy. You must have edit privileges for the group
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The version of the Cloudlet specific matchRules
        /// </summary>
        [Input("matchRuleFormat")]
        public Input<string>? MatchRuleFormat { get; set; }

        /// <summary>
        /// A JSON structure that defines the rules for this policy
        /// </summary>
        [Input("matchRules")]
        public Input<string>? MatchRules { get; set; }

        /// <summary>
        /// The name of the policy. The name must be unique
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Input("timeouts")]
        public Input<Inputs.CloudletsPolicyTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The version number of the policy
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        /// <summary>
        /// A JSON encoded list of warnings
        /// </summary>
        [Input("warnings")]
        public Input<string>? Warnings { get; set; }

        public CloudletsPolicyState()
        {
        }
        public static new CloudletsPolicyState Empty => new CloudletsPolicyState();
    }
}
