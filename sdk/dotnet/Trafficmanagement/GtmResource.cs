// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Trafficmanagement
{
    [Obsolete(@"akamai.trafficmanagement/gtmresource.GtmResource has been deprecated in favor of akamai.index/gtmresource.GtmResource")]
    [AkamaiResourceType("akamai:trafficmanagement/gtmResource:GtmResource")]
    public partial class GtmResource : global::Pulumi.CustomResource
    {
        [Output("aggregationType")]
        public Output<string> AggregationType { get; private set; } = null!;

        [Output("constrainedProperty")]
        public Output<string?> ConstrainedProperty { get; private set; } = null!;

        [Output("decayRate")]
        public Output<double?> DecayRate { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        [Output("hostHeader")]
        public Output<string?> HostHeader { get; private set; } = null!;

        [Output("leaderString")]
        public Output<string?> LeaderString { get; private set; } = null!;

        [Output("leastSquaresDecay")]
        public Output<double?> LeastSquaresDecay { get; private set; } = null!;

        [Output("loadImbalancePercentage")]
        public Output<double?> LoadImbalancePercentage { get; private set; } = null!;

        [Output("maxUMultiplicativeIncrement")]
        public Output<double?> MaxUMultiplicativeIncrement { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("resourceInstances")]
        public Output<ImmutableArray<Outputs.GtmResourceResourceInstance>> ResourceInstances { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("upperBound")]
        public Output<int?> UpperBound { get; private set; } = null!;

        [Output("waitOnComplete")]
        public Output<bool?> WaitOnComplete { get; private set; } = null!;


        /// <summary>
        /// Create a GtmResource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GtmResource(string name, GtmResourceArgs args, CustomResourceOptions? options = null)
            : base("akamai:trafficmanagement/gtmResource:GtmResource", name, args ?? new GtmResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GtmResource(string name, Input<string> id, GtmResourceState? state = null, CustomResourceOptions? options = null)
            : base("akamai:trafficmanagement/gtmResource:GtmResource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GtmResource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GtmResource Get(string name, Input<string> id, GtmResourceState? state = null, CustomResourceOptions? options = null)
        {
            return new GtmResource(name, id, state, options);
        }
    }

    public sealed class GtmResourceArgs : global::Pulumi.ResourceArgs
    {
        [Input("aggregationType", required: true)]
        public Input<string> AggregationType { get; set; } = null!;

        [Input("constrainedProperty")]
        public Input<string>? ConstrainedProperty { get; set; }

        [Input("decayRate")]
        public Input<double>? DecayRate { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("hostHeader")]
        public Input<string>? HostHeader { get; set; }

        [Input("leaderString")]
        public Input<string>? LeaderString { get; set; }

        [Input("leastSquaresDecay")]
        public Input<double>? LeastSquaresDecay { get; set; }

        [Input("loadImbalancePercentage")]
        public Input<double>? LoadImbalancePercentage { get; set; }

        [Input("maxUMultiplicativeIncrement")]
        public Input<double>? MaxUMultiplicativeIncrement { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resourceInstances")]
        private InputList<Inputs.GtmResourceResourceInstanceArgs>? _resourceInstances;
        public InputList<Inputs.GtmResourceResourceInstanceArgs> ResourceInstances
        {
            get => _resourceInstances ?? (_resourceInstances = new InputList<Inputs.GtmResourceResourceInstanceArgs>());
            set => _resourceInstances = value;
        }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("upperBound")]
        public Input<int>? UpperBound { get; set; }

        [Input("waitOnComplete")]
        public Input<bool>? WaitOnComplete { get; set; }

        public GtmResourceArgs()
        {
        }
        public static new GtmResourceArgs Empty => new GtmResourceArgs();
    }

    public sealed class GtmResourceState : global::Pulumi.ResourceArgs
    {
        [Input("aggregationType")]
        public Input<string>? AggregationType { get; set; }

        [Input("constrainedProperty")]
        public Input<string>? ConstrainedProperty { get; set; }

        [Input("decayRate")]
        public Input<double>? DecayRate { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("hostHeader")]
        public Input<string>? HostHeader { get; set; }

        [Input("leaderString")]
        public Input<string>? LeaderString { get; set; }

        [Input("leastSquaresDecay")]
        public Input<double>? LeastSquaresDecay { get; set; }

        [Input("loadImbalancePercentage")]
        public Input<double>? LoadImbalancePercentage { get; set; }

        [Input("maxUMultiplicativeIncrement")]
        public Input<double>? MaxUMultiplicativeIncrement { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resourceInstances")]
        private InputList<Inputs.GtmResourceResourceInstanceGetArgs>? _resourceInstances;
        public InputList<Inputs.GtmResourceResourceInstanceGetArgs> ResourceInstances
        {
            get => _resourceInstances ?? (_resourceInstances = new InputList<Inputs.GtmResourceResourceInstanceGetArgs>());
            set => _resourceInstances = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("upperBound")]
        public Input<int>? UpperBound { get; set; }

        [Input("waitOnComplete")]
        public Input<bool>? WaitOnComplete { get; set; }

        public GtmResourceState()
        {
        }
        public static new GtmResourceState Empty => new GtmResourceState();
    }
}
