// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetGtmGeomaps
    {
        public static Task<GetGtmGeomapsResult> InvokeAsync(GetGtmGeomapsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGtmGeomapsResult>("akamai:index/getGtmGeomaps:getGtmGeomaps", args ?? new GetGtmGeomapsArgs(), options.WithDefaults());

        public static Output<GetGtmGeomapsResult> Invoke(GetGtmGeomapsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGtmGeomapsResult>("akamai:index/getGtmGeomaps:getGtmGeomaps", args ?? new GetGtmGeomapsInvokeArgs(), options.WithDefaults());

        public static Output<GetGtmGeomapsResult> Invoke(GetGtmGeomapsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGtmGeomapsResult>("akamai:index/getGtmGeomaps:getGtmGeomaps", args ?? new GetGtmGeomapsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGtmGeomapsArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        public GetGtmGeomapsArgs()
        {
        }
        public static new GetGtmGeomapsArgs Empty => new GetGtmGeomapsArgs();
    }

    public sealed class GetGtmGeomapsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        public GetGtmGeomapsInvokeArgs()
        {
        }
        public static new GetGtmGeomapsInvokeArgs Empty => new GetGtmGeomapsInvokeArgs();
    }


    [OutputType]
    public sealed class GetGtmGeomapsResult
    {
        public readonly string Domain;
        public readonly ImmutableArray<Outputs.GetGtmGeomapsGeoMapResult> GeoMaps;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetGtmGeomapsResult(
            string domain,

            ImmutableArray<Outputs.GetGtmGeomapsGeoMapResult> geoMaps,

            string id)
        {
            Domain = domain;
            GeoMaps = geoMaps;
            Id = id;
        }
    }
}
