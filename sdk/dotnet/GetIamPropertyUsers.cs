// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetIamPropertyUsers
    {
        public static Task<GetIamPropertyUsersResult> InvokeAsync(GetIamPropertyUsersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIamPropertyUsersResult>("akamai:index/getIamPropertyUsers:getIamPropertyUsers", args ?? new GetIamPropertyUsersArgs(), options.WithDefaults());

        public static Output<GetIamPropertyUsersResult> Invoke(GetIamPropertyUsersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamPropertyUsersResult>("akamai:index/getIamPropertyUsers:getIamPropertyUsers", args ?? new GetIamPropertyUsersInvokeArgs(), options.WithDefaults());

        public static Output<GetIamPropertyUsersResult> Invoke(GetIamPropertyUsersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamPropertyUsersResult>("akamai:index/getIamPropertyUsers:getIamPropertyUsers", args ?? new GetIamPropertyUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIamPropertyUsersArgs : global::Pulumi.InvokeArgs
    {
        [Input("assetId", required: true)]
        public string AssetId { get; set; } = null!;

        [Input("userType")]
        public string? UserType { get; set; }

        public GetIamPropertyUsersArgs()
        {
        }
        public static new GetIamPropertyUsersArgs Empty => new GetIamPropertyUsersArgs();
    }

    public sealed class GetIamPropertyUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("assetId", required: true)]
        public Input<string> AssetId { get; set; } = null!;

        [Input("userType")]
        public Input<string>? UserType { get; set; }

        public GetIamPropertyUsersInvokeArgs()
        {
        }
        public static new GetIamPropertyUsersInvokeArgs Empty => new GetIamPropertyUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetIamPropertyUsersResult
    {
        public readonly string AssetId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? UserType;
        public readonly ImmutableArray<Outputs.GetIamPropertyUsersUserResult> Users;

        [OutputConstructor]
        private GetIamPropertyUsersResult(
            string assetId,

            string id,

            string? userType,

            ImmutableArray<Outputs.GetIamPropertyUsersUserResult> users)
        {
            AssetId = assetId;
            Id = id;
            UserType = userType;
            Users = users;
        }
    }
}
