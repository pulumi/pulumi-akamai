// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    /// <summary>
    /// Use the `akamai.CloudletsPolicyActivation` resource to activate a specific version of a Cloudlet policy. An activation deploys the version to either the Akamai staging or production network. You can activate a specific version multiple times if you need to.
    /// 
    /// Before activating on production, activate on staging first. This way you can detect any problems in staging before your changes progress to production.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Akamai.CloudletsPolicyActivation("example", new Akamai.CloudletsPolicyActivationArgs
    ///         {
    ///             AssociatedProperties = 
    ///             {
    ///                 "Property_1",
    ///                 "Property_2",
    ///                 "Property_3",
    ///             },
    ///             Network = "staging",
    ///             PolicyId = 1234,
    ///             Version = 1,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// If you're handling two `akamai.CloudletsPolicyActivation` resources in the same configuration file with the same `policy_id`, but different `network` arguments (for example, `production` and `staging`), you need to add `depends_on` to the production resource. See the example:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var stag = new Akamai.CloudletsPolicyActivation("stag", new Akamai.CloudletsPolicyActivationArgs
    ///         {
    ///             PolicyId = 1234567,
    ///             Network = "staging",
    ///             Version = 1,
    ///             AssociatedProperties = 
    ///             {
    ///                 "Property_1",
    ///                 "Property_2",
    ///             },
    ///         });
    ///         var prod = new Akamai.CloudletsPolicyActivation("prod", new Akamai.CloudletsPolicyActivationArgs
    ///         {
    ///             PolicyId = 1234567,
    ///             Network = "production",
    ///             Version = 1,
    ///             AssociatedProperties = 
    ///             {
    ///                 "Property_1",
    ///                 "Property_2",
    ///             },
    ///         }, new CustomResourceOptions
    ///         {
    ///             DependsOn = 
    ///             {
    ///                 stag,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [AkamaiResourceType("akamai:index/cloudletsPolicyActivation:CloudletsPolicyActivation")]
    public partial class CloudletsPolicyActivation : Pulumi.CustomResource
    {
        /// <summary>
        /// A set of property identifiers related to this Cloudlet policy. You can't activate a Cloudlet policy if it doesn't have any properties associated with it.
        /// </summary>
        [Output("associatedProperties")]
        public Output<ImmutableArray<string>> AssociatedProperties { get; private set; } = null!;

        /// <summary>
        /// The network you want to activate the policy version on. For the Staging network, specify either `staging`, `stag`, or `s`. For the Production network, specify either `production`, `prod`, or `p`. All values are case insensitive.
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// An identifier for the Cloudlet policy you want to activate.
        /// </summary>
        [Output("policyId")]
        public Output<int> PolicyId { get; private set; } = null!;

        /// <summary>
        /// The activation status for this Cloudlet policy.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The Cloudlet policy version you want to activate.
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CloudletsPolicyActivation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudletsPolicyActivation(string name, CloudletsPolicyActivationArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/cloudletsPolicyActivation:CloudletsPolicyActivation", name, args ?? new CloudletsPolicyActivationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudletsPolicyActivation(string name, Input<string> id, CloudletsPolicyActivationState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/cloudletsPolicyActivation:CloudletsPolicyActivation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudletsPolicyActivation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudletsPolicyActivation Get(string name, Input<string> id, CloudletsPolicyActivationState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudletsPolicyActivation(name, id, state, options);
        }
    }

    public sealed class CloudletsPolicyActivationArgs : Pulumi.ResourceArgs
    {
        [Input("associatedProperties", required: true)]
        private InputList<string>? _associatedProperties;

        /// <summary>
        /// A set of property identifiers related to this Cloudlet policy. You can't activate a Cloudlet policy if it doesn't have any properties associated with it.
        /// </summary>
        public InputList<string> AssociatedProperties
        {
            get => _associatedProperties ?? (_associatedProperties = new InputList<string>());
            set => _associatedProperties = value;
        }

        /// <summary>
        /// The network you want to activate the policy version on. For the Staging network, specify either `staging`, `stag`, or `s`. For the Production network, specify either `production`, `prod`, or `p`. All values are case insensitive.
        /// </summary>
        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        /// <summary>
        /// An identifier for the Cloudlet policy you want to activate.
        /// </summary>
        [Input("policyId", required: true)]
        public Input<int> PolicyId { get; set; } = null!;

        /// <summary>
        /// The Cloudlet policy version you want to activate.
        /// </summary>
        [Input("version", required: true)]
        public Input<int> Version { get; set; } = null!;

        public CloudletsPolicyActivationArgs()
        {
        }
    }

    public sealed class CloudletsPolicyActivationState : Pulumi.ResourceArgs
    {
        [Input("associatedProperties")]
        private InputList<string>? _associatedProperties;

        /// <summary>
        /// A set of property identifiers related to this Cloudlet policy. You can't activate a Cloudlet policy if it doesn't have any properties associated with it.
        /// </summary>
        public InputList<string> AssociatedProperties
        {
            get => _associatedProperties ?? (_associatedProperties = new InputList<string>());
            set => _associatedProperties = value;
        }

        /// <summary>
        /// The network you want to activate the policy version on. For the Staging network, specify either `staging`, `stag`, or `s`. For the Production network, specify either `production`, `prod`, or `p`. All values are case insensitive.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// An identifier for the Cloudlet policy you want to activate.
        /// </summary>
        [Input("policyId")]
        public Input<int>? PolicyId { get; set; }

        /// <summary>
        /// The activation status for this Cloudlet policy.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The Cloudlet policy version you want to activate.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CloudletsPolicyActivationState()
        {
        }
    }
}
