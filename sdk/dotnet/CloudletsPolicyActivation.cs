// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/cloudletsPolicyActivation:CloudletsPolicyActivation")]
    public partial class CloudletsPolicyActivation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set of property IDs to link to this Cloudlets policy
        /// </summary>
        [Output("associatedProperties")]
        public Output<ImmutableArray<string>> AssociatedProperties { get; private set; } = null!;

        /// <summary>
        /// The network you want to activate the policy version on (options are Staging and Production)
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// ID of the Cloudlets policy you want to activate
        /// </summary>
        [Output("policyId")]
        public Output<int> PolicyId { get; private set; } = null!;

        /// <summary>
        /// Activation status for this Cloudlets policy
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Output("timeouts")]
        public Output<Outputs.CloudletsPolicyActivationTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// Cloudlets policy version you want to activate
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CloudletsPolicyActivation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudletsPolicyActivation(string name, CloudletsPolicyActivationArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/cloudletsPolicyActivation:CloudletsPolicyActivation", name, args ?? new CloudletsPolicyActivationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudletsPolicyActivation(string name, Input<string> id, CloudletsPolicyActivationState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/cloudletsPolicyActivation:CloudletsPolicyActivation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudletsPolicyActivation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudletsPolicyActivation Get(string name, Input<string> id, CloudletsPolicyActivationState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudletsPolicyActivation(name, id, state, options);
        }
    }

    public sealed class CloudletsPolicyActivationArgs : global::Pulumi.ResourceArgs
    {
        [Input("associatedProperties", required: true)]
        private InputList<string>? _associatedProperties;

        /// <summary>
        /// Set of property IDs to link to this Cloudlets policy
        /// </summary>
        public InputList<string> AssociatedProperties
        {
            get => _associatedProperties ?? (_associatedProperties = new InputList<string>());
            set => _associatedProperties = value;
        }

        /// <summary>
        /// The network you want to activate the policy version on (options are Staging and Production)
        /// </summary>
        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        /// <summary>
        /// ID of the Cloudlets policy you want to activate
        /// </summary>
        [Input("policyId", required: true)]
        public Input<int> PolicyId { get; set; } = null!;

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Input("timeouts")]
        public Input<Inputs.CloudletsPolicyActivationTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// Cloudlets policy version you want to activate
        /// </summary>
        [Input("version", required: true)]
        public Input<int> Version { get; set; } = null!;

        public CloudletsPolicyActivationArgs()
        {
        }
        public static new CloudletsPolicyActivationArgs Empty => new CloudletsPolicyActivationArgs();
    }

    public sealed class CloudletsPolicyActivationState : global::Pulumi.ResourceArgs
    {
        [Input("associatedProperties")]
        private InputList<string>? _associatedProperties;

        /// <summary>
        /// Set of property IDs to link to this Cloudlets policy
        /// </summary>
        public InputList<string> AssociatedProperties
        {
            get => _associatedProperties ?? (_associatedProperties = new InputList<string>());
            set => _associatedProperties = value;
        }

        /// <summary>
        /// The network you want to activate the policy version on (options are Staging and Production)
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// ID of the Cloudlets policy you want to activate
        /// </summary>
        [Input("policyId")]
        public Input<int>? PolicyId { get; set; }

        /// <summary>
        /// Activation status for this Cloudlets policy
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Input("timeouts")]
        public Input<Inputs.CloudletsPolicyActivationTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// Cloudlets policy version you want to activate
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CloudletsPolicyActivationState()
        {
        }
        public static new CloudletsPolicyActivationState Empty => new CloudletsPolicyActivationState();
    }
}
