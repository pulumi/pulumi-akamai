// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Properties
{
    [Obsolete(@"akamai.properties/edgehostname.EdgeHostName has been deprecated in favor of akamai.index/edgehostname.EdgeHostName")]
    [AkamaiResourceType("akamai:properties/edgeHostName:EdgeHostName")]
    public partial class EdgeHostName : global::Pulumi.CustomResource
    {
        [Output("certificate")]
        public Output<int?> Certificate { get; private set; } = null!;

        [Output("contract")]
        public Output<string> Contract { get; private set; } = null!;

        [Output("contractId")]
        public Output<string> ContractId { get; private set; } = null!;

        [Output("edgeHostname")]
        public Output<string> EdgeHostname { get; private set; } = null!;

        [Output("group")]
        public Output<string> Group { get; private set; } = null!;

        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        [Output("ipBehavior")]
        public Output<string> IpBehavior { get; private set; } = null!;

        [Output("product")]
        public Output<string> Product { get; private set; } = null!;

        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        /// <summary>
        /// Email address that should receive updates on the IP behavior update request. Required for update operation.
        /// </summary>
        [Output("statusUpdateEmails")]
        public Output<ImmutableArray<string>> StatusUpdateEmails { get; private set; } = null!;

        /// <summary>
        /// A JSON encoded list of use cases
        /// </summary>
        [Output("useCases")]
        public Output<string?> UseCases { get; private set; } = null!;


        /// <summary>
        /// Create a EdgeHostName resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgeHostName(string name, EdgeHostNameArgs args, CustomResourceOptions? options = null)
            : base("akamai:properties/edgeHostName:EdgeHostName", name, args ?? new EdgeHostNameArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgeHostName(string name, Input<string> id, EdgeHostNameState? state = null, CustomResourceOptions? options = null)
            : base("akamai:properties/edgeHostName:EdgeHostName", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgeHostName resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgeHostName Get(string name, Input<string> id, EdgeHostNameState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgeHostName(name, id, state, options);
        }
    }

    public sealed class EdgeHostNameArgs : global::Pulumi.ResourceArgs
    {
        [Input("certificate")]
        public Input<int>? Certificate { get; set; }

        [Input("contract")]
        public Input<string>? Contract { get; set; }

        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        [Input("edgeHostname", required: true)]
        public Input<string> EdgeHostname { get; set; } = null!;

        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("ipBehavior", required: true)]
        public Input<string> IpBehavior { get; set; } = null!;

        [Input("product")]
        public Input<string>? Product { get; set; }

        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        [Input("statusUpdateEmails")]
        private InputList<string>? _statusUpdateEmails;

        /// <summary>
        /// Email address that should receive updates on the IP behavior update request. Required for update operation.
        /// </summary>
        public InputList<string> StatusUpdateEmails
        {
            get => _statusUpdateEmails ?? (_statusUpdateEmails = new InputList<string>());
            set => _statusUpdateEmails = value;
        }

        /// <summary>
        /// A JSON encoded list of use cases
        /// </summary>
        [Input("useCases")]
        public Input<string>? UseCases { get; set; }

        public EdgeHostNameArgs()
        {
        }
        public static new EdgeHostNameArgs Empty => new EdgeHostNameArgs();
    }

    public sealed class EdgeHostNameState : global::Pulumi.ResourceArgs
    {
        [Input("certificate")]
        public Input<int>? Certificate { get; set; }

        [Input("contract")]
        public Input<string>? Contract { get; set; }

        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        [Input("edgeHostname")]
        public Input<string>? EdgeHostname { get; set; }

        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("ipBehavior")]
        public Input<string>? IpBehavior { get; set; }

        [Input("product")]
        public Input<string>? Product { get; set; }

        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        [Input("statusUpdateEmails")]
        private InputList<string>? _statusUpdateEmails;

        /// <summary>
        /// Email address that should receive updates on the IP behavior update request. Required for update operation.
        /// </summary>
        public InputList<string> StatusUpdateEmails
        {
            get => _statusUpdateEmails ?? (_statusUpdateEmails = new InputList<string>());
            set => _statusUpdateEmails = value;
        }

        /// <summary>
        /// A JSON encoded list of use cases
        /// </summary>
        [Input("useCases")]
        public Input<string>? UseCases { get; set; }

        public EdgeHostNameState()
        {
        }
        public static new EdgeHostNameState Empty => new EdgeHostNameState();
    }
}
