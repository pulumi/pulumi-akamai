// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Properties
{
    /// <summary>
    /// The `akamai.Property` resource represents an Akamai property configuration.
    /// This resource lets you to create, update, and activate properties on the
    /// Akamai platform.
    /// 
    /// Akamai's edge network caches your web assets near to servers that request them.
    /// A property provides the main way to control how edge servers respond to various
    /// kinds of requests for those assets. Properties apply rules to a set of hostnames,
    /// and you can only apply one property at a time to any given hostname. Each property
    /// is assigned to a product, which determines which behaviors you can use. Each
    /// property's default rule needs a valid content provider (CP) code assigned to bill
    /// and report for the service.
    /// 
    /// &gt; **Note** In version 0.10 and earlier of this resource, it also controlled content provider (CP) codes, origin settings, rules, and hostname associations. Starting with version 1.0.0, this logic is broken out into individual resources.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Akamai.Property("example", new()
    ///     {
    ///         ProductId = "prd_SPM",
    ///         ContractId = @var.Contractid,
    ///         GroupId = @var.Groupid,
    ///         Hostnames = new[]
    ///         {
    ///             new Akamai.Inputs.PropertyHostnameArgs
    ///             {
    ///                 CnameFrom = "example.com",
    ///                 CnameTo = "example.com.edgekey.net",
    ///                 CertProvisioningType = "DEFAULT",
    ///             },
    ///             new Akamai.Inputs.PropertyHostnameArgs
    ///             {
    ///                 CnameFrom = "www.example.com",
    ///                 CnameTo = "example.com.edgesuite.net",
    ///                 CertProvisioningType = "CPS_MANAGED",
    ///             },
    ///         },
    ///         RuleFormat = "v2020-03-04",
    ///         Rules = data.Akamai_property_rules_template.Example.Json,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Basic Usagehcl resource "akamai_property" "example" {
    /// 
    /// # (resource arguments)
    /// 
    ///  } You can import the latest Akamai property version by using either the `property_id` or a comma-delimited string of the property, contract, and group IDs. You'll need to enter the string of IDs if the property belongs to multiple groups or contracts. If using the string of IDs, you need to enter them in this order`property_id,contract_id,group_id` To import a specific property version, pass additional parameters, either* `LATEST` to import the latest version of the property, regardless of whether it's active or not. This works the same as providing just the `property_id` or a string of the property, contract, and group IDs, which is the default behavior. * `PRODUCTION`, `PROD`, or `P` to import the latest version activated on the production environment. * `STAGING`, `STAGE`, `STAG`, or `S` to import the latest version activated on the staging environment. * Version number or version number with the `ver_` prefix to import a specific property version. For example `3` and `ver_3` correspond to the same version number. Here are some examples for the latest property version
    /// 
    /// ```sh
    ///  $ pulumi import akamai:properties/property:Property example prp_123
    /// ```
    /// 
    ///  Or
    /// 
    /// ```sh
    ///  $ pulumi import akamai:properties/property:Property example prp_123,ctr_1-AB123,grp_123
    /// ```
    /// 
    ///  Here are some examples for the latest active property version on the production network
    /// 
    /// ```sh
    ///  $ pulumi import akamai:properties/property:Property example prp_123,P
    /// ```
    /// 
    ///  Or
    /// 
    /// ```sh
    ///  $ pulumi import akamai:properties/property:Property example prp_123,ctr_1-AB123,grp_123,PROD
    /// ```
    /// 
    ///  Here are some examples for the specific property version
    /// 
    /// ```sh
    ///  $ pulumi import akamai:properties/property:Property example prp_123,3
    /// ```
    /// 
    ///  Or
    /// 
    /// ```sh
    ///  $ pulumi import akamai:properties/property:Property example prp_123,ctr_1-AB123,grp_123,ver_3
    /// ```
    /// </summary>
    [Obsolete(@"akamai.properties.Property has been deprecated in favor of akamai.Property")]
    [AkamaiResourceType("akamai:properties/property:Property")]
    public partial class Property : global::Pulumi.CustomResource
    {
        [Output("contacts")]
        public Output<ImmutableArray<string>> Contacts { get; private set; } = null!;

        /// <summary>
        /// Replaced by `contract_id`. Maintained for legacy purposes.
        /// </summary>
        [Output("contract")]
        public Output<string> Contract { get; private set; } = null!;

        /// <summary>
        /// (Required) A contract's unique ID, including the `ctr_` prefix.
        /// </summary>
        [Output("contractId")]
        public Output<string> ContractId { get; private set; } = null!;

        [Output("cpCode")]
        public Output<string?> CpCode { get; private set; } = null!;

        /// <summary>
        /// Replaced by `group_id`. Maintained for legacy purposes.
        /// </summary>
        [Output("group")]
        public Output<string> Group { get; private set; } = null!;

        /// <summary>
        /// (Required) A group's unique ID, including the `grp_` prefix.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// A mapping of public hostnames to edge hostnames. See the `akamai.getPropertyHostnames` data source for details on the necessary DNS configuration.
        /// </summary>
        [Output("hostnames")]
        public Output<ImmutableArray<Outputs.PropertyHostname>> Hostnames { get; private set; } = null!;

        [Output("isSecure")]
        public Output<bool?> IsSecure { get; private set; } = null!;

        /// <summary>
        /// The version of the property you've created or updated rules for. The Akamai Provider always uses the latest version or creates a new version if latest is not editable.
        /// </summary>
        [Output("latestVersion")]
        public Output<int> LatestVersion { get; private set; } = null!;

        /// <summary>
        /// The property name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("origins")]
        public Output<ImmutableArray<Outputs.PropertyOrigin>> Origins { get; private set; } = null!;

        /// <summary>
        /// Optional argument replaced by the now required `product_id`. Maintained for legacy purposes.
        /// </summary>
        [Output("product")]
        public Output<string> Product { get; private set; } = null!;

        /// <summary>
        /// Product ID to be assigned to the Property
        /// </summary>
        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        /// <summary>
        /// The current version of the property active on the Akamai production network.
        /// </summary>
        [Output("productionVersion")]
        public Output<int> ProductionVersion { get; private set; } = null!;

        /// <summary>
        /// Required property's version to be read
        /// </summary>
        [Output("readVersion")]
        public Output<int> ReadVersion { get; private set; } = null!;

        /// <summary>
        /// The contents of `errors` field returned by the API. For more information see [Errors](https://techdocs.akamai.com/property-mgr/reference/api-errors) in the PAPI documentation.
        /// </summary>
        [Output("ruleErrors")]
        public Output<ImmutableArray<Outputs.PropertyRuleError>> RuleErrors { get; private set; } = null!;

        /// <summary>
        /// The [rule format](https://techdocs.akamai.com/property-mgr/reference/get-rule-formats) to use. Uses the latest rule format by default.
        /// </summary>
        [Output("ruleFormat")]
        public Output<string> RuleFormat { get; private set; } = null!;

        /// <summary>
        /// (Deprecated) Rule warnings are no longer maintained in the state file. You can still see the warnings in logs.
        /// </summary>
        [Output("ruleWarnings")]
        public Output<ImmutableArray<Outputs.PropertyRuleWarning>> RuleWarnings { get; private set; } = null!;

        /// <summary>
        /// A JSON-encoded rule tree for a given property. For this argument, you need to enter a complete JSON rule tree, unless you set up a series of JSON templates. See the `akamai.getPropertyRules` data source.
        /// </summary>
        [Output("rules")]
        public Output<string> Rules { get; private set; } = null!;

        /// <summary>
        /// The current version of the property active on the Akamai staging network.
        /// </summary>
        [Output("stagingVersion")]
        public Output<int> StagingVersion { get; private set; } = null!;

        [Output("variables")]
        public Output<string?> Variables { get; private set; } = null!;


        /// <summary>
        /// Create a Property resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Property(string name, PropertyArgs? args = null, CustomResourceOptions? options = null)
            : base("akamai:properties/property:Property", name, args ?? new PropertyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Property(string name, Input<string> id, PropertyState? state = null, CustomResourceOptions? options = null)
            : base("akamai:properties/property:Property", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Property resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Property Get(string name, Input<string> id, PropertyState? state = null, CustomResourceOptions? options = null)
        {
            return new Property(name, id, state, options);
        }
    }

    public sealed class PropertyArgs : global::Pulumi.ResourceArgs
    {
        [Input("contacts")]
        private InputList<string>? _contacts;
        [Obsolete(@"The setting ""contact"" has been deprecated.")]
        public InputList<string> Contacts
        {
            get => _contacts ?? (_contacts = new InputList<string>());
            set => _contacts = value;
        }

        /// <summary>
        /// Replaced by `contract_id`. Maintained for legacy purposes.
        /// </summary>
        [Input("contract")]
        public Input<string>? Contract { get; set; }

        /// <summary>
        /// (Required) A contract's unique ID, including the `ctr_` prefix.
        /// </summary>
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        [Input("cpCode")]
        public Input<string>? CpCode { get; set; }

        /// <summary>
        /// Replaced by `group_id`. Maintained for legacy purposes.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// (Required) A group's unique ID, including the `grp_` prefix.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("hostnames")]
        private InputList<Inputs.PropertyHostnameArgs>? _hostnames;

        /// <summary>
        /// A mapping of public hostnames to edge hostnames. See the `akamai.getPropertyHostnames` data source for details on the necessary DNS configuration.
        /// </summary>
        public InputList<Inputs.PropertyHostnameArgs> Hostnames
        {
            get => _hostnames ?? (_hostnames = new InputList<Inputs.PropertyHostnameArgs>());
            set => _hostnames = value;
        }

        [Input("isSecure")]
        public Input<bool>? IsSecure { get; set; }

        /// <summary>
        /// The property name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("origins")]
        private InputList<Inputs.PropertyOriginArgs>? _origins;
        [Obsolete(@"The setting ""origin"" has been deprecated.")]
        public InputList<Inputs.PropertyOriginArgs> Origins
        {
            get => _origins ?? (_origins = new InputList<Inputs.PropertyOriginArgs>());
            set => _origins = value;
        }

        /// <summary>
        /// Optional argument replaced by the now required `product_id`. Maintained for legacy purposes.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        /// <summary>
        /// Product ID to be assigned to the Property
        /// </summary>
        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        /// <summary>
        /// The [rule format](https://techdocs.akamai.com/property-mgr/reference/get-rule-formats) to use. Uses the latest rule format by default.
        /// </summary>
        [Input("ruleFormat")]
        public Input<string>? RuleFormat { get; set; }

        [Input("ruleWarnings")]
        private InputList<Inputs.PropertyRuleWarningArgs>? _ruleWarnings;

        /// <summary>
        /// (Deprecated) Rule warnings are no longer maintained in the state file. You can still see the warnings in logs.
        /// </summary>
        [Obsolete(@"Rule warnings will not be set in state anymore")]
        public InputList<Inputs.PropertyRuleWarningArgs> RuleWarnings
        {
            get => _ruleWarnings ?? (_ruleWarnings = new InputList<Inputs.PropertyRuleWarningArgs>());
            set => _ruleWarnings = value;
        }

        /// <summary>
        /// A JSON-encoded rule tree for a given property. For this argument, you need to enter a complete JSON rule tree, unless you set up a series of JSON templates. See the `akamai.getPropertyRules` data source.
        /// </summary>
        [Input("rules")]
        public Input<string>? Rules { get; set; }

        [Input("variables")]
        public Input<string>? Variables { get; set; }

        public PropertyArgs()
        {
        }
        public static new PropertyArgs Empty => new PropertyArgs();
    }

    public sealed class PropertyState : global::Pulumi.ResourceArgs
    {
        [Input("contacts")]
        private InputList<string>? _contacts;
        [Obsolete(@"The setting ""contact"" has been deprecated.")]
        public InputList<string> Contacts
        {
            get => _contacts ?? (_contacts = new InputList<string>());
            set => _contacts = value;
        }

        /// <summary>
        /// Replaced by `contract_id`. Maintained for legacy purposes.
        /// </summary>
        [Input("contract")]
        public Input<string>? Contract { get; set; }

        /// <summary>
        /// (Required) A contract's unique ID, including the `ctr_` prefix.
        /// </summary>
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        [Input("cpCode")]
        public Input<string>? CpCode { get; set; }

        /// <summary>
        /// Replaced by `group_id`. Maintained for legacy purposes.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// (Required) A group's unique ID, including the `grp_` prefix.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("hostnames")]
        private InputList<Inputs.PropertyHostnameGetArgs>? _hostnames;

        /// <summary>
        /// A mapping of public hostnames to edge hostnames. See the `akamai.getPropertyHostnames` data source for details on the necessary DNS configuration.
        /// </summary>
        public InputList<Inputs.PropertyHostnameGetArgs> Hostnames
        {
            get => _hostnames ?? (_hostnames = new InputList<Inputs.PropertyHostnameGetArgs>());
            set => _hostnames = value;
        }

        [Input("isSecure")]
        public Input<bool>? IsSecure { get; set; }

        /// <summary>
        /// The version of the property you've created or updated rules for. The Akamai Provider always uses the latest version or creates a new version if latest is not editable.
        /// </summary>
        [Input("latestVersion")]
        public Input<int>? LatestVersion { get; set; }

        /// <summary>
        /// The property name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("origins")]
        private InputList<Inputs.PropertyOriginGetArgs>? _origins;
        [Obsolete(@"The setting ""origin"" has been deprecated.")]
        public InputList<Inputs.PropertyOriginGetArgs> Origins
        {
            get => _origins ?? (_origins = new InputList<Inputs.PropertyOriginGetArgs>());
            set => _origins = value;
        }

        /// <summary>
        /// Optional argument replaced by the now required `product_id`. Maintained for legacy purposes.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        /// <summary>
        /// Product ID to be assigned to the Property
        /// </summary>
        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        /// <summary>
        /// The current version of the property active on the Akamai production network.
        /// </summary>
        [Input("productionVersion")]
        public Input<int>? ProductionVersion { get; set; }

        /// <summary>
        /// Required property's version to be read
        /// </summary>
        [Input("readVersion")]
        public Input<int>? ReadVersion { get; set; }

        [Input("ruleErrors")]
        private InputList<Inputs.PropertyRuleErrorGetArgs>? _ruleErrors;

        /// <summary>
        /// The contents of `errors` field returned by the API. For more information see [Errors](https://techdocs.akamai.com/property-mgr/reference/api-errors) in the PAPI documentation.
        /// </summary>
        public InputList<Inputs.PropertyRuleErrorGetArgs> RuleErrors
        {
            get => _ruleErrors ?? (_ruleErrors = new InputList<Inputs.PropertyRuleErrorGetArgs>());
            set => _ruleErrors = value;
        }

        /// <summary>
        /// The [rule format](https://techdocs.akamai.com/property-mgr/reference/get-rule-formats) to use. Uses the latest rule format by default.
        /// </summary>
        [Input("ruleFormat")]
        public Input<string>? RuleFormat { get; set; }

        [Input("ruleWarnings")]
        private InputList<Inputs.PropertyRuleWarningGetArgs>? _ruleWarnings;

        /// <summary>
        /// (Deprecated) Rule warnings are no longer maintained in the state file. You can still see the warnings in logs.
        /// </summary>
        [Obsolete(@"Rule warnings will not be set in state anymore")]
        public InputList<Inputs.PropertyRuleWarningGetArgs> RuleWarnings
        {
            get => _ruleWarnings ?? (_ruleWarnings = new InputList<Inputs.PropertyRuleWarningGetArgs>());
            set => _ruleWarnings = value;
        }

        /// <summary>
        /// A JSON-encoded rule tree for a given property. For this argument, you need to enter a complete JSON rule tree, unless you set up a series of JSON templates. See the `akamai.getPropertyRules` data source.
        /// </summary>
        [Input("rules")]
        public Input<string>? Rules { get; set; }

        /// <summary>
        /// The current version of the property active on the Akamai staging network.
        /// </summary>
        [Input("stagingVersion")]
        public Input<int>? StagingVersion { get; set; }

        [Input("variables")]
        public Input<string>? Variables { get; set; }

        public PropertyState()
        {
        }
        public static new PropertyState Empty => new PropertyState();
    }
}
