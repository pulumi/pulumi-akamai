// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/imagingPolicySet:ImagingPolicySet")]
    public partial class ImagingPolicySet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The unique identifier for the Akamai Contract containing the Policy Set(s)
        /// </summary>
        [Output("contractId")]
        public Output<string> ContractId { get; private set; } = null!;

        /// <summary>
        /// A friendly name for the Policy Set
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The geographic region which media using this Policy Set is optimized for
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The type of media this Policy Set manages
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ImagingPolicySet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImagingPolicySet(string name, ImagingPolicySetArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/imagingPolicySet:ImagingPolicySet", name, args ?? new ImagingPolicySetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImagingPolicySet(string name, Input<string> id, ImagingPolicySetState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/imagingPolicySet:ImagingPolicySet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImagingPolicySet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImagingPolicySet Get(string name, Input<string> id, ImagingPolicySetState? state = null, CustomResourceOptions? options = null)
        {
            return new ImagingPolicySet(name, id, state, options);
        }
    }

    public sealed class ImagingPolicySetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier for the Akamai Contract containing the Policy Set(s)
        /// </summary>
        [Input("contractId", required: true)]
        public Input<string> ContractId { get; set; } = null!;

        /// <summary>
        /// A friendly name for the Policy Set
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The geographic region which media using this Policy Set is optimized for
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// The type of media this Policy Set manages
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ImagingPolicySetArgs()
        {
        }
        public static new ImagingPolicySetArgs Empty => new ImagingPolicySetArgs();
    }

    public sealed class ImagingPolicySetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier for the Akamai Contract containing the Policy Set(s)
        /// </summary>
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        /// <summary>
        /// A friendly name for the Policy Set
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The geographic region which media using this Policy Set is optimized for
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The type of media this Policy Set manages
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ImagingPolicySetState()
        {
        }
        public static new ImagingPolicySetState Empty => new ImagingPolicySetState();
    }
}
