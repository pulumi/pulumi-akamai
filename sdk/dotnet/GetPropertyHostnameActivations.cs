// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetPropertyHostnameActivations
    {
        public static Task<GetPropertyHostnameActivationsResult> InvokeAsync(GetPropertyHostnameActivationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPropertyHostnameActivationsResult>("akamai:index/getPropertyHostnameActivations:getPropertyHostnameActivations", args ?? new GetPropertyHostnameActivationsArgs(), options.WithDefaults());

        public static Output<GetPropertyHostnameActivationsResult> Invoke(GetPropertyHostnameActivationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPropertyHostnameActivationsResult>("akamai:index/getPropertyHostnameActivations:getPropertyHostnameActivations", args ?? new GetPropertyHostnameActivationsInvokeArgs(), options.WithDefaults());

        public static Output<GetPropertyHostnameActivationsResult> Invoke(GetPropertyHostnameActivationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPropertyHostnameActivationsResult>("akamai:index/getPropertyHostnameActivations:getPropertyHostnameActivations", args ?? new GetPropertyHostnameActivationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPropertyHostnameActivationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("contractId")]
        public string? ContractId { get; set; }

        [Input("groupId")]
        public string? GroupId { get; set; }

        [Input("network")]
        public string? Network { get; set; }

        [Input("propertyId", required: true)]
        public string PropertyId { get; set; } = null!;

        public GetPropertyHostnameActivationsArgs()
        {
        }
        public static new GetPropertyHostnameActivationsArgs Empty => new GetPropertyHostnameActivationsArgs();
    }

    public sealed class GetPropertyHostnameActivationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("network")]
        public Input<string>? Network { get; set; }

        [Input("propertyId", required: true)]
        public Input<string> PropertyId { get; set; } = null!;

        public GetPropertyHostnameActivationsInvokeArgs()
        {
        }
        public static new GetPropertyHostnameActivationsInvokeArgs Empty => new GetPropertyHostnameActivationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPropertyHostnameActivationsResult
    {
        public readonly string AccountId;
        public readonly string ContractId;
        public readonly string GroupId;
        public readonly ImmutableArray<Outputs.GetPropertyHostnameActivationsHostnameActivationResult> HostnameActivations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Network;
        public readonly string PropertyId;
        public readonly string PropertyName;

        [OutputConstructor]
        private GetPropertyHostnameActivationsResult(
            string accountId,

            string contractId,

            string groupId,

            ImmutableArray<Outputs.GetPropertyHostnameActivationsHostnameActivationResult> hostnameActivations,

            string id,

            string? network,

            string propertyId,

            string propertyName)
        {
            AccountId = accountId;
            ContractId = contractId;
            GroupId = groupId;
            HostnameActivations = hostnameActivations;
            Id = id;
            Network = network;
            PropertyId = propertyId;
            PropertyName = propertyName;
        }
    }
}
