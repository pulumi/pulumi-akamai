// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    /// <summary>
    /// Use the `akamai.IamRole` resource to list and create roles for users. Roles are lists of permissions that are explicitly tied to both a user and a group. Users need roles to act on objects in a group.
    /// 
    /// ## Basic usage
    /// 
    /// This example returns information on available roles:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Akamai.IamRole("example", new Akamai.IamRoleArgs
    ///         {
    ///             Description = "This role will allow you to view",
    ///             GrantedRoles = 2051,
    ///             Type = "custom",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Attributes reference
    /// 
    /// This resource returns this attribute:
    /// 
    /// * `type` - The type indicates whether the role is `standard`, provided by Akamai, or `custom` for the account.
    /// </summary>
    [AkamaiResourceType("akamai:index/iamRole:IamRole")]
    public partial class IamRole : Pulumi.CustomResource
    {
        /// <summary>
        /// The description for a role.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The list of existing unique identifiers for the granted roles. Each identifier must be a unique integer.
        /// </summary>
        [Output("grantedRoles")]
        public Output<ImmutableArray<int>> GrantedRoles { get; private set; } = null!;

        /// <summary>
        /// The name you supply for a role.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The role type which indicates whether it's a standard role provided by Akamai or a custom role for the account
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a IamRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamRole(string name, IamRoleArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/iamRole:IamRole", name, args ?? new IamRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IamRole(string name, Input<string> id, IamRoleState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/iamRole:IamRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IamRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IamRole Get(string name, Input<string> id, IamRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new IamRole(name, id, state, options);
        }
    }

    public sealed class IamRoleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description for a role.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("grantedRoles", required: true)]
        private InputList<int>? _grantedRoles;

        /// <summary>
        /// The list of existing unique identifiers for the granted roles. Each identifier must be a unique integer.
        /// </summary>
        public InputList<int> GrantedRoles
        {
            get => _grantedRoles ?? (_grantedRoles = new InputList<int>());
            set => _grantedRoles = value;
        }

        /// <summary>
        /// The name you supply for a role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The role type which indicates whether it's a standard role provided by Akamai or a custom role for the account
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public IamRoleArgs()
        {
        }
    }

    public sealed class IamRoleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description for a role.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("grantedRoles")]
        private InputList<int>? _grantedRoles;

        /// <summary>
        /// The list of existing unique identifiers for the granted roles. Each identifier must be a unique integer.
        /// </summary>
        public InputList<int> GrantedRoles
        {
            get => _grantedRoles ?? (_grantedRoles = new InputList<int>());
            set => _grantedRoles = value;
        }

        /// <summary>
        /// The name you supply for a role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The role type which indicates whether it's a standard role provided by Akamai or a custom role for the account
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public IamRoleState()
        {
        }
    }
}
