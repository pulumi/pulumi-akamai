// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetGtmDatacenters
    {
        public static Task<GetGtmDatacentersResult> InvokeAsync(GetGtmDatacentersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGtmDatacentersResult>("akamai:index/getGtmDatacenters:getGtmDatacenters", args ?? new GetGtmDatacentersArgs(), options.WithDefaults());

        public static Output<GetGtmDatacentersResult> Invoke(GetGtmDatacentersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGtmDatacentersResult>("akamai:index/getGtmDatacenters:getGtmDatacenters", args ?? new GetGtmDatacentersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGtmDatacentersArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        public GetGtmDatacentersArgs()
        {
        }
        public static new GetGtmDatacentersArgs Empty => new GetGtmDatacentersArgs();
    }

    public sealed class GetGtmDatacentersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        public GetGtmDatacentersInvokeArgs()
        {
        }
        public static new GetGtmDatacentersInvokeArgs Empty => new GetGtmDatacentersInvokeArgs();
    }


    [OutputType]
    public sealed class GetGtmDatacentersResult
    {
        public readonly ImmutableArray<Outputs.GetGtmDatacentersDatacenterResult> Datacenters;
        public readonly string Domain;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetGtmDatacentersResult(
            ImmutableArray<Outputs.GetGtmDatacentersDatacenterResult> datacenters,

            string domain,

            string id)
        {
            Datacenters = datacenters;
            Domain = domain;
            Id = id;
        }
    }
}
