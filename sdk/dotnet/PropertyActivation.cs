// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/propertyActivation:PropertyActivation")]
    public partial class PropertyActivation : global::Pulumi.CustomResource
    {
        [Output("activationId")]
        public Output<string> ActivationId { get; private set; } = null!;

        /// <summary>
        /// Automatically acknowledge all rule warnings for activation to continue. Default is false
        /// </summary>
        [Output("autoAcknowledgeRuleWarnings")]
        public Output<bool?> AutoAcknowledgeRuleWarnings { get; private set; } = null!;

        /// <summary>
        /// Provides an audit record when activating on a production network
        /// </summary>
        [Output("complianceRecord")]
        public Output<Outputs.PropertyActivationComplianceRecord?> ComplianceRecord { get; private set; } = null!;

        [Output("contacts")]
        public Output<ImmutableArray<string>> Contacts { get; private set; } = null!;

        [Output("errors")]
        public Output<string> Errors { get; private set; } = null!;

        [Output("network")]
        public Output<string?> Network { get; private set; } = null!;

        /// <summary>
        /// assigns a log message to the activation request
        /// </summary>
        [Output("note")]
        public Output<string?> Note { get; private set; } = null!;

        [Output("propertyId")]
        public Output<string> PropertyId { get; private set; } = null!;

        [Output("ruleErrors")]
        public Output<ImmutableArray<Outputs.PropertyActivationRuleError>> RuleErrors { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Output("timeouts")]
        public Output<Outputs.PropertyActivationTimeouts?> Timeouts { get; private set; } = null!;

        [Output("version")]
        public Output<int> Version { get; private set; } = null!;

        [Output("warnings")]
        public Output<string> Warnings { get; private set; } = null!;


        /// <summary>
        /// Create a PropertyActivation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PropertyActivation(string name, PropertyActivationArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/propertyActivation:PropertyActivation", name, args ?? new PropertyActivationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PropertyActivation(string name, Input<string> id, PropertyActivationState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/propertyActivation:PropertyActivation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "akamai:properties/propertyActivation:PropertyActivation"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PropertyActivation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PropertyActivation Get(string name, Input<string> id, PropertyActivationState? state = null, CustomResourceOptions? options = null)
        {
            return new PropertyActivation(name, id, state, options);
        }
    }

    public sealed class PropertyActivationArgs : global::Pulumi.ResourceArgs
    {
        [Input("activationId")]
        public Input<string>? ActivationId { get; set; }

        /// <summary>
        /// Automatically acknowledge all rule warnings for activation to continue. Default is false
        /// </summary>
        [Input("autoAcknowledgeRuleWarnings")]
        public Input<bool>? AutoAcknowledgeRuleWarnings { get; set; }

        /// <summary>
        /// Provides an audit record when activating on a production network
        /// </summary>
        [Input("complianceRecord")]
        public Input<Inputs.PropertyActivationComplianceRecordArgs>? ComplianceRecord { get; set; }

        [Input("contacts", required: true)]
        private InputList<string>? _contacts;
        public InputList<string> Contacts
        {
            get => _contacts ?? (_contacts = new InputList<string>());
            set => _contacts = value;
        }

        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// assigns a log message to the activation request
        /// </summary>
        [Input("note")]
        public Input<string>? Note { get; set; }

        [Input("propertyId", required: true)]
        public Input<string> PropertyId { get; set; } = null!;

        [Input("ruleErrors")]
        private InputList<Inputs.PropertyActivationRuleErrorArgs>? _ruleErrors;
        public InputList<Inputs.PropertyActivationRuleErrorArgs> RuleErrors
        {
            get => _ruleErrors ?? (_ruleErrors = new InputList<Inputs.PropertyActivationRuleErrorArgs>());
            set => _ruleErrors = value;
        }

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Input("timeouts")]
        public Input<Inputs.PropertyActivationTimeoutsArgs>? Timeouts { get; set; }

        [Input("version", required: true)]
        public Input<int> Version { get; set; } = null!;

        public PropertyActivationArgs()
        {
        }
        public static new PropertyActivationArgs Empty => new PropertyActivationArgs();
    }

    public sealed class PropertyActivationState : global::Pulumi.ResourceArgs
    {
        [Input("activationId")]
        public Input<string>? ActivationId { get; set; }

        /// <summary>
        /// Automatically acknowledge all rule warnings for activation to continue. Default is false
        /// </summary>
        [Input("autoAcknowledgeRuleWarnings")]
        public Input<bool>? AutoAcknowledgeRuleWarnings { get; set; }

        /// <summary>
        /// Provides an audit record when activating on a production network
        /// </summary>
        [Input("complianceRecord")]
        public Input<Inputs.PropertyActivationComplianceRecordGetArgs>? ComplianceRecord { get; set; }

        [Input("contacts")]
        private InputList<string>? _contacts;
        public InputList<string> Contacts
        {
            get => _contacts ?? (_contacts = new InputList<string>());
            set => _contacts = value;
        }

        [Input("errors")]
        public Input<string>? Errors { get; set; }

        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// assigns a log message to the activation request
        /// </summary>
        [Input("note")]
        public Input<string>? Note { get; set; }

        [Input("propertyId")]
        public Input<string>? PropertyId { get; set; }

        [Input("ruleErrors")]
        private InputList<Inputs.PropertyActivationRuleErrorGetArgs>? _ruleErrors;
        public InputList<Inputs.PropertyActivationRuleErrorGetArgs> RuleErrors
        {
            get => _ruleErrors ?? (_ruleErrors = new InputList<Inputs.PropertyActivationRuleErrorGetArgs>());
            set => _ruleErrors = value;
        }

        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Enables to set timeout for processing
        /// </summary>
        [Input("timeouts")]
        public Input<Inputs.PropertyActivationTimeoutsGetArgs>? Timeouts { get; set; }

        [Input("version")]
        public Input<int>? Version { get; set; }

        [Input("warnings")]
        public Input<string>? Warnings { get; set; }

        public PropertyActivationState()
        {
        }
        public static new PropertyActivationState Empty => new PropertyActivationState();
    }
}
