// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    [AkamaiResourceType("akamai:index/imagingPolicyImage:ImagingPolicyImage")]
    public partial class ImagingPolicyImage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// With this flag set to false, the user can perform modifications on staging without affecting the version already saved
        /// to production. With this flag set to true, the policy will be saved on the production network. It is possible to change
        /// it back to false only when there are any changes to the policy qualifying it for the new version.
        /// </summary>
        [Output("activateOnProduction")]
        public Output<bool?> ActivateOnProduction { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for the Akamai Contract containing the Policy Set(s)
        /// </summary>
        [Output("contractId")]
        public Output<string> ContractId { get; private set; } = null!;

        /// <summary>
        /// A JSON encoded policy
        /// </summary>
        [Output("json")]
        public Output<string> Json { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for a Policy. It is not possible to modify the id of the policy.
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for the Image &amp; Video Manager Policy Set.
        /// </summary>
        [Output("policysetId")]
        public Output<string> PolicysetId { get; private set; } = null!;

        /// <summary>
        /// The version number of this policy version
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ImagingPolicyImage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImagingPolicyImage(string name, ImagingPolicyImageArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/imagingPolicyImage:ImagingPolicyImage", name, args ?? new ImagingPolicyImageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImagingPolicyImage(string name, Input<string> id, ImagingPolicyImageState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/imagingPolicyImage:ImagingPolicyImage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImagingPolicyImage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImagingPolicyImage Get(string name, Input<string> id, ImagingPolicyImageState? state = null, CustomResourceOptions? options = null)
        {
            return new ImagingPolicyImage(name, id, state, options);
        }
    }

    public sealed class ImagingPolicyImageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// With this flag set to false, the user can perform modifications on staging without affecting the version already saved
        /// to production. With this flag set to true, the policy will be saved on the production network. It is possible to change
        /// it back to false only when there are any changes to the policy qualifying it for the new version.
        /// </summary>
        [Input("activateOnProduction")]
        public Input<bool>? ActivateOnProduction { get; set; }

        /// <summary>
        /// Unique identifier for the Akamai Contract containing the Policy Set(s)
        /// </summary>
        [Input("contractId", required: true)]
        public Input<string> ContractId { get; set; } = null!;

        /// <summary>
        /// A JSON encoded policy
        /// </summary>
        [Input("json", required: true)]
        public Input<string> Json { get; set; } = null!;

        /// <summary>
        /// Unique identifier for a Policy. It is not possible to modify the id of the policy.
        /// </summary>
        [Input("policyId", required: true)]
        public Input<string> PolicyId { get; set; } = null!;

        /// <summary>
        /// Unique identifier for the Image &amp; Video Manager Policy Set.
        /// </summary>
        [Input("policysetId", required: true)]
        public Input<string> PolicysetId { get; set; } = null!;

        public ImagingPolicyImageArgs()
        {
        }
        public static new ImagingPolicyImageArgs Empty => new ImagingPolicyImageArgs();
    }

    public sealed class ImagingPolicyImageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// With this flag set to false, the user can perform modifications on staging without affecting the version already saved
        /// to production. With this flag set to true, the policy will be saved on the production network. It is possible to change
        /// it back to false only when there are any changes to the policy qualifying it for the new version.
        /// </summary>
        [Input("activateOnProduction")]
        public Input<bool>? ActivateOnProduction { get; set; }

        /// <summary>
        /// Unique identifier for the Akamai Contract containing the Policy Set(s)
        /// </summary>
        [Input("contractId")]
        public Input<string>? ContractId { get; set; }

        /// <summary>
        /// A JSON encoded policy
        /// </summary>
        [Input("json")]
        public Input<string>? Json { get; set; }

        /// <summary>
        /// Unique identifier for a Policy. It is not possible to modify the id of the policy.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// Unique identifier for the Image &amp; Video Manager Policy Set.
        /// </summary>
        [Input("policysetId")]
        public Input<string>? PolicysetId { get; set; }

        /// <summary>
        /// The version number of this policy version
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public ImagingPolicyImageState()
        {
        }
        public static new ImagingPolicyImageState Empty => new ImagingPolicyImageState();
    }
}
