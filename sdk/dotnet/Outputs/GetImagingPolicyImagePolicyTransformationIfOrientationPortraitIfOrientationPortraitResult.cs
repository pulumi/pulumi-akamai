// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitResult
    {
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitAppendResult> Appends;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitAspectCropResult> AspectCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitBackgroundColorResult> BackgroundColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitBlurResult> Blurs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitChromaKeyResult> ChromaKeys;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitCompositeResult> Composites;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitCompoundResult> Compounds;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitContrastResult> Contrasts;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitCropResult> Crops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitFaceCropResult> FaceCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitFeatureCropResult> FeatureCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitFitAndFillResult> FitAndFills;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitGoopResult> Goops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitGrayscaleResult> Grayscales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitHslResult> Hsls;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitHsvResult> Hsvs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitIfDimensionResult> IfDimensions;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationResult> IfOrientations;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitImQueryResult> ImQueries;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitMaxColorResult> MaxColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitMirrorResult> Mirrors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitMonoHueResult> MonoHues;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitOpacityResult> Opacities;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitRegionOfInterestCropResult> RegionOfInterestCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitRelativeCropResult> RelativeCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitRemoveColorResult> RemoveColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitResizeResult> Resizes;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitRotateResult> Rotates;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitScaleResult> Scales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitShearsResult> Shears;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitTrimResult> Trims;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitUnsharpMaskResult> UnsharpMasks;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitResult(
            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitAppendResult> appends,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitAspectCropResult> aspectCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitBackgroundColorResult> backgroundColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitBlurResult> blurs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitChromaKeyResult> chromaKeys,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitCompositeResult> composites,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitCompoundResult> compounds,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitContrastResult> contrasts,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitCropResult> crops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitFaceCropResult> faceCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitFeatureCropResult> featureCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitFitAndFillResult> fitAndFills,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitGoopResult> goops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitGrayscaleResult> grayscales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitHslResult> hsls,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitHsvResult> hsvs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitIfDimensionResult> ifDimensions,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationResult> ifOrientations,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitImQueryResult> imQueries,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitMaxColorResult> maxColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitMirrorResult> mirrors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitMonoHueResult> monoHues,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitOpacityResult> opacities,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitRegionOfInterestCropResult> regionOfInterestCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitRelativeCropResult> relativeCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitRemoveColorResult> removeColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitResizeResult> resizes,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitRotateResult> rotates,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitScaleResult> scales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitShearsResult> shears,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitTrimResult> trims,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationPortraitUnsharpMaskResult> unsharpMasks)
        {
            Appends = appends;
            AspectCrops = aspectCrops;
            BackgroundColors = backgroundColors;
            Blurs = blurs;
            ChromaKeys = chromaKeys;
            Composites = composites;
            Compounds = compounds;
            Contrasts = contrasts;
            Crops = crops;
            FaceCrops = faceCrops;
            FeatureCrops = featureCrops;
            FitAndFills = fitAndFills;
            Goops = goops;
            Grayscales = grayscales;
            Hsls = hsls;
            Hsvs = hsvs;
            IfDimensions = ifDimensions;
            IfOrientations = ifOrientations;
            ImQueries = imQueries;
            MaxColors = maxColors;
            Mirrors = mirrors;
            MonoHues = monoHues;
            Opacities = opacities;
            RegionOfInterestCrops = regionOfInterestCrops;
            RelativeCrops = relativeCrops;
            RemoveColors = removeColors;
            Resizes = resizes;
            Rotates = rotates;
            Scales = scales;
            Shears = shears;
            Trims = trims;
            UnsharpMasks = unsharpMasks;
        }
    }
}
