// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class IamApiClientCredential
    {
        /// <summary>
        /// Actions available on the API client's credentials.
        /// </summary>
        public readonly Outputs.IamApiClientCredentialActions? Actions;
        /// <summary>
        /// The client secret.
        /// </summary>
        public readonly string? ClientSecret;
        /// <summary>
        /// The part of the credential that identifies the API client.
        /// </summary>
        public readonly string? ClientToken;
        /// <summary>
        /// The ISO 8601 timestamp indicating when the credential was created.
        /// </summary>
        public readonly string? CreatedOn;
        /// <summary>
        /// A unique identifier of the credential.
        /// </summary>
        public readonly int? CredentialId;
        /// <summary>
        /// A human-readable description for the credential.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The ISO 8601 timestamp indicating when the credential expires. The default expiration date is two years from the creation date.
        /// </summary>
        public readonly string? ExpiresOn;
        /// <summary>
        /// Whether a credential is 'ACTIVE', 'INACTIVE', or 'DELETED'. Can be updated to 'ACTIVE' or 'INACTIVE' only.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private IamApiClientCredential(
            Outputs.IamApiClientCredentialActions? actions,

            string? clientSecret,

            string? clientToken,

            string? createdOn,

            int? credentialId,

            string? description,

            string? expiresOn,

            string? status)
        {
            Actions = actions;
            ClientSecret = clientSecret;
            ClientToken = clientToken;
            CreatedOn = createdOn;
            CredentialId = credentialId;
            Description = description;
            ExpiresOn = expiresOn;
            Status = status;
        }
    }
}
