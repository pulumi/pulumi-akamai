// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingResult
    {
        public readonly string? AbVariantLocation;
        public readonly string? DecryptionPassword1;
        public readonly string? DecryptionPassword2;
        public readonly string? DecryptionPasswordId1;
        public readonly string? DecryptionPasswordId2;
        public readonly bool? Enable;
        public readonly bool? Locked;
        public readonly string? MiscellaneousSettingsTitle;
        public readonly bool? PatternDecryptionEnable;
        public readonly string? PatternEncryptionTitle;
        public readonly bool? SignatureVerificationEnable;
        public readonly string? TemplateUuid;
        public readonly string? TokenSigningTitle;
        public readonly bool? UseOriginalAsA;
        public readonly string? Uuid;
        public readonly string? VerificationKeyId1;
        public readonly string? VerificationKeyId2;
        public readonly string? VerificationPublicKey1;
        public readonly string? VerificationPublicKey2;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingResult(
            string? abVariantLocation,

            string? decryptionPassword1,

            string? decryptionPassword2,

            string? decryptionPasswordId1,

            string? decryptionPasswordId2,

            bool? enable,

            bool? locked,

            string? miscellaneousSettingsTitle,

            bool? patternDecryptionEnable,

            string? patternEncryptionTitle,

            bool? signatureVerificationEnable,

            string? templateUuid,

            string? tokenSigningTitle,

            bool? useOriginalAsA,

            string? uuid,

            string? verificationKeyId1,

            string? verificationKeyId2,

            string? verificationPublicKey1,

            string? verificationPublicKey2)
        {
            AbVariantLocation = abVariantLocation;
            DecryptionPassword1 = decryptionPassword1;
            DecryptionPassword2 = decryptionPassword2;
            DecryptionPasswordId1 = decryptionPasswordId1;
            DecryptionPasswordId2 = decryptionPasswordId2;
            Enable = enable;
            Locked = locked;
            MiscellaneousSettingsTitle = miscellaneousSettingsTitle;
            PatternDecryptionEnable = patternDecryptionEnable;
            PatternEncryptionTitle = patternEncryptionTitle;
            SignatureVerificationEnable = signatureVerificationEnable;
            TemplateUuid = templateUuid;
            TokenSigningTitle = tokenSigningTitle;
            UseOriginalAsA = useOriginalAsA;
            Uuid = uuid;
            VerificationKeyId1 = verificationKeyId1;
            VerificationKeyId2 = verificationKeyId2;
            VerificationPublicKey1 = verificationPublicKey1;
            VerificationPublicKey2 = verificationPublicKey2;
        }
    }
}
