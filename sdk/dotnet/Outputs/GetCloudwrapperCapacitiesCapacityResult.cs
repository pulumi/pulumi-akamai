// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetCloudwrapperCapacitiesCapacityResult
    {
        /// <summary>
        /// Capacity allocated for the location.
        /// </summary>
        public readonly Outputs.GetCloudwrapperCapacitiesCapacityApprovedResult Approved;
        /// <summary>
        /// Capacity already assigned to Cloud Wrapper configurations.
        /// </summary>
        public readonly Outputs.GetCloudwrapperCapacitiesCapacityAssignedResult Assigned;
        /// <summary>
        /// Contract ID having Cloud Wrapper entitlement.
        /// </summary>
        public readonly string ContractId;
        /// <summary>
        /// Unique identifier of the configured location.
        /// </summary>
        public readonly int LocationId;
        /// <summary>
        /// Name of the location.
        /// </summary>
        public readonly string LocationName;
        /// <summary>
        /// The type of property this capacity is related to.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Capacity value that can be assigned to Cloud Wrapper configurations.
        /// </summary>
        public readonly Outputs.GetCloudwrapperCapacitiesCapacityUnassignedResult Unassigned;

        [OutputConstructor]
        private GetCloudwrapperCapacitiesCapacityResult(
            Outputs.GetCloudwrapperCapacitiesCapacityApprovedResult approved,

            Outputs.GetCloudwrapperCapacitiesCapacityAssignedResult assigned,

            string contractId,

            int locationId,

            string locationName,

            string type,

            Outputs.GetCloudwrapperCapacitiesCapacityUnassignedResult unassigned)
        {
            Approved = approved;
            Assigned = assigned;
            ContractId = contractId;
            LocationId = locationId;
            LocationName = locationName;
            Type = type;
            Unassigned = unassigned;
        }
    }
}
