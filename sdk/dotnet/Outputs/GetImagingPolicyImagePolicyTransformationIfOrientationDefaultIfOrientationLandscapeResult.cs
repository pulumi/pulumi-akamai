// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeResult
    {
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeAppendResult> Appends;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeAspectCropResult> AspectCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeBackgroundColorResult> BackgroundColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeBlurResult> Blurs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeChromaKeyResult> ChromaKeys;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeCompositeResult> Composites;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeCompoundResult> Compounds;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeContrastResult> Contrasts;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeCropResult> Crops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeFaceCropResult> FaceCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeFeatureCropResult> FeatureCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeFitAndFillResult> FitAndFills;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeGoopResult> Goops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeGrayscaleResult> Grayscales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeHslResult> Hsls;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeHsvResult> Hsvs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeIfDimensionResult> IfDimensions;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeIfOrientationResult> IfOrientations;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeImQueryResult> ImQueries;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeMaxColorResult> MaxColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeMirrorResult> Mirrors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeMonoHueResult> MonoHues;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeOpacityResult> Opacities;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeRegionOfInterestCropResult> RegionOfInterestCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeRelativeCropResult> RelativeCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeRemoveColorResult> RemoveColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeResizeResult> Resizes;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeRotateResult> Rotates;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeScaleResult> Scales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeShearsResult> Shears;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeTrimResult> Trims;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeUnsharpMaskResult> UnsharpMasks;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeResult(
            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeAppendResult> appends,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeAspectCropResult> aspectCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeBackgroundColorResult> backgroundColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeBlurResult> blurs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeChromaKeyResult> chromaKeys,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeCompositeResult> composites,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeCompoundResult> compounds,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeContrastResult> contrasts,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeCropResult> crops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeFaceCropResult> faceCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeFeatureCropResult> featureCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeFitAndFillResult> fitAndFills,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeGoopResult> goops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeGrayscaleResult> grayscales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeHslResult> hsls,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeHsvResult> hsvs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeIfDimensionResult> ifDimensions,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeIfOrientationResult> ifOrientations,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeImQueryResult> imQueries,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeMaxColorResult> maxColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeMirrorResult> mirrors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeMonoHueResult> monoHues,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeOpacityResult> opacities,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeRegionOfInterestCropResult> regionOfInterestCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeRelativeCropResult> relativeCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeRemoveColorResult> removeColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeResizeResult> resizes,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeRotateResult> rotates,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeScaleResult> scales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeShearsResult> shears,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeTrimResult> trims,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationLandscapeUnsharpMaskResult> unsharpMasks)
        {
            Appends = appends;
            AspectCrops = aspectCrops;
            BackgroundColors = backgroundColors;
            Blurs = blurs;
            ChromaKeys = chromaKeys;
            Composites = composites;
            Compounds = compounds;
            Contrasts = contrasts;
            Crops = crops;
            FaceCrops = faceCrops;
            FeatureCrops = featureCrops;
            FitAndFills = fitAndFills;
            Goops = goops;
            Grayscales = grayscales;
            Hsls = hsls;
            Hsvs = hsvs;
            IfDimensions = ifDimensions;
            IfOrientations = ifOrientations;
            ImQueries = imQueries;
            MaxColors = maxColors;
            Mirrors = mirrors;
            MonoHues = monoHues;
            Opacities = opacities;
            RegionOfInterestCrops = regionOfInterestCrops;
            RelativeCrops = relativeCrops;
            RemoveColors = removeColors;
            Resizes = resizes;
            Rotates = rotates;
            Scales = scales;
            Shears = shears;
            Trims = trims;
            UnsharpMasks = unsharpMasks;
        }
    }
}
