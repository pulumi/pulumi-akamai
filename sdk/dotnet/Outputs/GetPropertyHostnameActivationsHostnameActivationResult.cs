// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyHostnameActivationsHostnameActivationResult
    {
        /// <summary>
        /// The activation type, either `ACTIVATE` or `DEACTIVATE`.
        /// </summary>
        public readonly string ActivationType;
        /// <summary>
        /// The ISO 8601 timestamp property hostname activation's unique identifier.
        /// </summary>
        public readonly string HostnameActivationId;
        /// <summary>
        /// The network of activation, either `STAGING` or `PRODUCTION`.`
        /// </summary>
        public readonly string Network;
        /// <summary>
        /// Assigns a log message to the activation request.
        /// </summary>
        public readonly string Note;
        /// <summary>
        /// Email addresses to notify when the activation status changes.
        /// </summary>
        public readonly ImmutableArray<string> NotifyEmails;
        /// <summary>
        /// The activation's status. `ACTIVE` if currently serving traffic. `INACTIVE` if another activation has superseded this one. `PENDING` if not yet active. `ABORTED` if the client followed up with a `DELETE` request in time. `FAILED` if the activation causes a range of edge network errors that may cause a fallback to the previous activation. `PENDING_DEACTIVATION` or `DEACTIVATED` when the `activation_type` is `DEACTIVATE` to no longer serve traffic.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The timestamp indicating when the activation was initiated.
        /// </summary>
        public readonly string SubmitDate;
        /// <summary>
        /// The ISO 8601 timestamp indicating when the status last changed.
        /// </summary>
        public readonly string UpdateDate;

        [OutputConstructor]
        private GetPropertyHostnameActivationsHostnameActivationResult(
            string activationType,

            string hostnameActivationId,

            string network,

            string note,

            ImmutableArray<string> notifyEmails,

            string status,

            string submitDate,

            string updateDate)
        {
            ActivationType = activationType;
            HostnameActivationId = hostnameActivationId;
            Network = network;
            Note = note;
            NotifyEmails = notifyEmails;
            Status = status;
            SubmitDate = submitDate;
            UpdateDate = updateDate;
        }
    }
}
