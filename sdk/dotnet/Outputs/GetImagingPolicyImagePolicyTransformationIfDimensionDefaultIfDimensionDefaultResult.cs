// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultResult
    {
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultAppendResult> Appends;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultAspectCropResult> AspectCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultBackgroundColorResult> BackgroundColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultBlurResult> Blurs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultChromaKeyResult> ChromaKeys;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultCompositeResult> Composites;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultCompoundResult> Compounds;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultContrastResult> Contrasts;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultCropResult> Crops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultFaceCropResult> FaceCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultFeatureCropResult> FeatureCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultFitAndFillResult> FitAndFills;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultGoopResult> Goops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultGrayscaleResult> Grayscales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultHslResult> Hsls;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultHsvResult> Hsvs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultIfDimensionResult> IfDimensions;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultIfOrientationResult> IfOrientations;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultImQueryResult> ImQueries;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultMaxColorResult> MaxColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultMirrorResult> Mirrors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultMonoHueResult> MonoHues;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultOpacityResult> Opacities;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultRegionOfInterestCropResult> RegionOfInterestCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultRelativeCropResult> RelativeCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultRemoveColorResult> RemoveColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultResizeResult> Resizes;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultRotateResult> Rotates;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultScaleResult> Scales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultShearsResult> Shears;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultTrimResult> Trims;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultUnsharpMaskResult> UnsharpMasks;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultResult(
            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultAppendResult> appends,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultAspectCropResult> aspectCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultBackgroundColorResult> backgroundColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultBlurResult> blurs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultChromaKeyResult> chromaKeys,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultCompositeResult> composites,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultCompoundResult> compounds,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultContrastResult> contrasts,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultCropResult> crops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultFaceCropResult> faceCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultFeatureCropResult> featureCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultFitAndFillResult> fitAndFills,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultGoopResult> goops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultGrayscaleResult> grayscales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultHslResult> hsls,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultHsvResult> hsvs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultIfDimensionResult> ifDimensions,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultIfOrientationResult> ifOrientations,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultImQueryResult> imQueries,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultMaxColorResult> maxColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultMirrorResult> mirrors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultMonoHueResult> monoHues,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultOpacityResult> opacities,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultRegionOfInterestCropResult> regionOfInterestCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultRelativeCropResult> relativeCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultRemoveColorResult> removeColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultResizeResult> resizes,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultRotateResult> rotates,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultScaleResult> scales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultShearsResult> shears,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultTrimResult> trims,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfDimensionDefaultUnsharpMaskResult> unsharpMasks)
        {
            Appends = appends;
            AspectCrops = aspectCrops;
            BackgroundColors = backgroundColors;
            Blurs = blurs;
            ChromaKeys = chromaKeys;
            Composites = composites;
            Compounds = compounds;
            Contrasts = contrasts;
            Crops = crops;
            FaceCrops = faceCrops;
            FeatureCrops = featureCrops;
            FitAndFills = fitAndFills;
            Goops = goops;
            Grayscales = grayscales;
            Hsls = hsls;
            Hsvs = hsvs;
            IfDimensions = ifDimensions;
            IfOrientations = ifOrientations;
            ImQueries = imQueries;
            MaxColors = maxColors;
            Mirrors = mirrors;
            MonoHues = monoHues;
            Opacities = opacities;
            RegionOfInterestCrops = regionOfInterestCrops;
            RelativeCrops = relativeCrops;
            RemoveColors = removeColors;
            Resizes = resizes;
            Rotates = rotates;
            Scales = scales;
            Shears = shears;
            Trims = trims;
            UnsharpMasks = unsharpMasks;
        }
    }
}
