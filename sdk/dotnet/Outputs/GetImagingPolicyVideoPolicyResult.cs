// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyVideoPolicyResult
    {
        /// <summary>
        /// The breakpoint widths (in pixels) to use to create derivative images/videos.
        /// </summary>
        public readonly Outputs.GetImagingPolicyVideoPolicyBreakpointsResult? Breakpoints;
        /// <summary>
        /// Hosts that are allowed for image/video URLs within transformations or variables.
        /// </summary>
        public readonly ImmutableArray<string> Hosts;
        /// <summary>
        /// Dictates the output quality that are created for each resized video.
        /// </summary>
        public readonly Outputs.GetImagingPolicyVideoPolicyOutputResult? Output;
        /// <summary>
        /// The amount of time in seconds that the policy takes to rollout. During the rollout an increasing proportion of images/videos will begin to use the new policy instead of the cached images/videos from the previous version. This value has no effect on the staging network.
        /// </summary>
        public readonly string? RolloutDuration;
        /// <summary>
        /// Declares variables for use within the policy. Any variable declared here can be invoked throughout transformations as a Variable object, so that you don't have to specify values separately. You can also pass in these variable names and values dynamically as query parameters in the image's request URL.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImagingPolicyVideoPolicyVariableResult> Variables;

        [OutputConstructor]
        private GetImagingPolicyVideoPolicyResult(
            Outputs.GetImagingPolicyVideoPolicyBreakpointsResult? breakpoints,

            ImmutableArray<string> hosts,

            Outputs.GetImagingPolicyVideoPolicyOutputResult? output,

            string? rolloutDuration,

            ImmutableArray<Outputs.GetImagingPolicyVideoPolicyVariableResult> variables)
        {
            Breakpoints = breakpoints;
            Hosts = hosts;
            Output = output;
            RolloutDuration = rolloutDuration;
            Variables = variables;
        }
    }
}
