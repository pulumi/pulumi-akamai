// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitResult
    {
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitAppendResult> Appends;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitAspectCropResult> AspectCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitBackgroundColorResult> BackgroundColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitBlurResult> Blurs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitChromaKeyResult> ChromaKeys;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitCompositeResult> Composites;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitCompoundResult> Compounds;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitContrastResult> Contrasts;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitCropResult> Crops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitFaceCropResult> FaceCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitFeatureCropResult> FeatureCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitFitAndFillResult> FitAndFills;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitGoopResult> Goops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitGrayscaleResult> Grayscales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitHslResult> Hsls;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitHsvResult> Hsvs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitIfDimensionResult> IfDimensions;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitIfOrientationResult> IfOrientations;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitImQueryResult> ImQueries;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitMaxColorResult> MaxColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitMirrorResult> Mirrors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitMonoHueResult> MonoHues;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitOpacityResult> Opacities;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitRegionOfInterestCropResult> RegionOfInterestCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitRelativeCropResult> RelativeCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitRemoveColorResult> RemoveColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitResizeResult> Resizes;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitRotateResult> Rotates;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitScaleResult> Scales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitShearsResult> Shears;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitTrimResult> Trims;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitUnsharpMaskResult> UnsharpMasks;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitResult(
            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitAppendResult> appends,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitAspectCropResult> aspectCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitBackgroundColorResult> backgroundColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitBlurResult> blurs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitChromaKeyResult> chromaKeys,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitCompositeResult> composites,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitCompoundResult> compounds,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitContrastResult> contrasts,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitCropResult> crops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitFaceCropResult> faceCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitFeatureCropResult> featureCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitFitAndFillResult> fitAndFills,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitGoopResult> goops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitGrayscaleResult> grayscales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitHslResult> hsls,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitHsvResult> hsvs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitIfDimensionResult> ifDimensions,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitIfOrientationResult> ifOrientations,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitImQueryResult> imQueries,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitMaxColorResult> maxColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitMirrorResult> mirrors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitMonoHueResult> monoHues,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitOpacityResult> opacities,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitRegionOfInterestCropResult> regionOfInterestCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitRelativeCropResult> relativeCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitRemoveColorResult> removeColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitResizeResult> resizes,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitRotateResult> rotates,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitScaleResult> scales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitShearsResult> shears,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitTrimResult> trims,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfOrientationPortraitUnsharpMaskResult> unsharpMasks)
        {
            Appends = appends;
            AspectCrops = aspectCrops;
            BackgroundColors = backgroundColors;
            Blurs = blurs;
            ChromaKeys = chromaKeys;
            Composites = composites;
            Compounds = compounds;
            Contrasts = contrasts;
            Crops = crops;
            FaceCrops = faceCrops;
            FeatureCrops = featureCrops;
            FitAndFills = fitAndFills;
            Goops = goops;
            Grayscales = grayscales;
            Hsls = hsls;
            Hsvs = hsvs;
            IfDimensions = ifDimensions;
            IfOrientations = ifOrientations;
            ImQueries = imQueries;
            MaxColors = maxColors;
            Mirrors = mirrors;
            MonoHues = monoHues;
            Opacities = opacities;
            RegionOfInterestCrops = regionOfInterestCrops;
            RelativeCrops = relativeCrops;
            RemoveColors = removeColors;
            Resizes = resizes;
            Rotates = rotates;
            Scales = scales;
            Shears = shears;
            Trims = trims;
            UnsharpMasks = unsharpMasks;
        }
    }
}
