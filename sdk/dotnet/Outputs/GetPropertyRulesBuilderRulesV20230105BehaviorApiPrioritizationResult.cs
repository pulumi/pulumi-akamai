// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationResult
    {
        /// <summary>
        /// Specifies the alternate response's time to live in the cache, `5` minutes by default.
        /// </summary>
        public readonly int? AlternateResponseCacheTtl;
        /// <summary>
        /// Identifies the Cloudlet policy.
        /// </summary>
        public readonly Outputs.GetPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationCloudletPolicyResult? CloudletPolicy;
        /// <summary>
        /// Activates the API Prioritization feature.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// A label to distinguish this API Prioritization policy from any others in the same property.
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        public readonly bool? Locked;
        /// <summary>
        /// Specify the NetStorage domain that contains the alternate response.
        /// </summary>
        public readonly Outputs.GetPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationNetStorageResult? NetStorage;
        /// <summary>
        /// Specify the full NetStorage path for the alternate response, including trailing file name.
        /// </summary>
        public readonly string? NetStoragePath;
        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        public readonly string? TemplateUuid;
        /// <summary>
        /// Specifies the CP code as an object. You only need to provide the initial `id`, stripping any `cpc_` prefix to pass the integer to the rule tree. Additional CP code details may reflect back in subsequent read-only data.
        /// </summary>
        public readonly Outputs.GetPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationThrottledCpCodeResult? ThrottledCpCode;
        /// <summary>
        /// Specifies the HTTP response code for requests that receive the alternate response.
        /// </summary>
        public readonly int? ThrottledStatusCode;
        /// <summary>
        /// Specifies whether to apply an alternative CP code for requests served the alternate response.
        /// </summary>
        public readonly bool? UseThrottledCpCode;
        /// <summary>
        /// Allows you to assign a specific HTTP response code to a throttled request.
        /// </summary>
        public readonly bool? UseThrottledStatusCode;
        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        public readonly string? Uuid;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationResult(
            int? alternateResponseCacheTtl,

            Outputs.GetPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationCloudletPolicyResult? cloudletPolicy,

            bool? enabled,

            string? label,

            bool? locked,

            Outputs.GetPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationNetStorageResult? netStorage,

            string? netStoragePath,

            string? templateUuid,

            Outputs.GetPropertyRulesBuilderRulesV20230105BehaviorApiPrioritizationThrottledCpCodeResult? throttledCpCode,

            int? throttledStatusCode,

            bool? useThrottledCpCode,

            bool? useThrottledStatusCode,

            string? uuid)
        {
            AlternateResponseCacheTtl = alternateResponseCacheTtl;
            CloudletPolicy = cloudletPolicy;
            Enabled = enabled;
            Label = label;
            Locked = locked;
            NetStorage = netStorage;
            NetStoragePath = netStoragePath;
            TemplateUuid = templateUuid;
            ThrottledCpCode = throttledCpCode;
            ThrottledStatusCode = throttledStatusCode;
            UseThrottledCpCode = useThrottledCpCode;
            UseThrottledStatusCode = useThrottledStatusCode;
            Uuid = uuid;
        }
    }
}
