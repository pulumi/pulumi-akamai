// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyTransformationCropResult
    {
        /// <summary>
        /// If cropping an area outside of the existing canvas, expands the image canvas.
        /// </summary>
        public readonly string? AllowExpansion;
        /// <summary>
        /// If cropping an area outside of the existing canvas, expands the image canvas.
        /// </summary>
        public readonly string? AllowExpansionVar;
        /// <summary>
        /// Frame of reference for X and Y Positions.
        /// </summary>
        public readonly string? Gravity;
        /// <summary>
        /// Frame of reference for X and Y Positions.
        /// </summary>
        public readonly string? GravityVar;
        /// <summary>
        /// The number of pixels to crop along the y-axis.
        /// </summary>
        public readonly string? Height;
        /// <summary>
        /// The number of pixels to crop along the y-axis.
        /// </summary>
        public readonly string? HeightVar;
        /// <summary>
        /// The number of pixels to crop along the x-axis.
        /// </summary>
        public readonly string? Width;
        /// <summary>
        /// The number of pixels to crop along the x-axis.
        /// </summary>
        public readonly string? WidthVar;
        /// <summary>
        /// The x-axis position of the image to crop from.
        /// </summary>
        public readonly string? XPosition;
        /// <summary>
        /// The x-axis position of the image to crop from.
        /// </summary>
        public readonly string? XPositionVar;
        /// <summary>
        /// The y-axis position of the image to crop from.
        /// </summary>
        public readonly string? YPosition;
        /// <summary>
        /// The y-axis position of the image to crop from.
        /// </summary>
        public readonly string? YPositionVar;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyTransformationCropResult(
            string? allowExpansion,

            string? allowExpansionVar,

            string? gravity,

            string? gravityVar,

            string? height,

            string? heightVar,

            string? width,

            string? widthVar,

            string? xPosition,

            string? xPositionVar,

            string? yPosition,

            string? yPositionVar)
        {
            AllowExpansion = allowExpansion;
            AllowExpansionVar = allowExpansionVar;
            Gravity = gravity;
            GravityVar = gravityVar;
            Height = height;
            HeightVar = heightVar;
            Width = width;
            WidthVar = widthVar;
            XPosition = xPosition;
            XPositionVar = xPositionVar;
            YPosition = yPosition;
            YPositionVar = yPositionVar;
        }
    }
}
