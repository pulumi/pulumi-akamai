// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetCloudwrapperConfigurationsConfigurationResult
    {
        public readonly int CapacityAlertsThreshold;
        public readonly string Comments;
        public readonly string ConfigName;
        public readonly string ContractId;
        public readonly int Id;
        public readonly string LastActivatedBy;
        public readonly string LastActivatedDate;
        public readonly string LastUpdatedBy;
        public readonly string LastUpdatedDate;
        public readonly ImmutableArray<Outputs.GetCloudwrapperConfigurationsConfigurationLocationResult> Locations;
        public readonly Outputs.GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsResult? MultiCdnSettings;
        public readonly ImmutableArray<string> NotificationEmails;
        public readonly ImmutableArray<string> PropertyIds;
        public readonly bool RetainIdleObjects;
        public readonly string Status;

        [OutputConstructor]
        private GetCloudwrapperConfigurationsConfigurationResult(
            int capacityAlertsThreshold,

            string comments,

            string configName,

            string contractId,

            int id,

            string lastActivatedBy,

            string lastActivatedDate,

            string lastUpdatedBy,

            string lastUpdatedDate,

            ImmutableArray<Outputs.GetCloudwrapperConfigurationsConfigurationLocationResult> locations,

            Outputs.GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsResult? multiCdnSettings,

            ImmutableArray<string> notificationEmails,

            ImmutableArray<string> propertyIds,

            bool retainIdleObjects,

            string status)
        {
            CapacityAlertsThreshold = capacityAlertsThreshold;
            Comments = comments;
            ConfigName = configName;
            ContractId = contractId;
            Id = id;
            LastActivatedBy = lastActivatedBy;
            LastActivatedDate = lastActivatedDate;
            LastUpdatedBy = lastUpdatedBy;
            LastUpdatedDate = lastUpdatedDate;
            Locations = locations;
            MultiCdnSettings = multiCdnSettings;
            NotificationEmails = notificationEmails;
            PropertyIds = propertyIds;
            RetainIdleObjects = retainIdleObjects;
            Status = status;
        }
    }
}
