// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareResult
    {
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareAppendResult> Appends;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareAspectCropResult> AspectCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareBackgroundColorResult> BackgroundColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareBlurResult> Blurs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareChromaKeyResult> ChromaKeys;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCompositeResult> Composites;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCompoundResult> Compounds;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareContrastResult> Contrasts;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCropResult> Crops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFaceCropResult> FaceCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFeatureCropResult> FeatureCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFitAndFillResult> FitAndFills;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareGoopResult> Goops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareGrayscaleResult> Grayscales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareHslResult> Hsls;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareHsvResult> Hsvs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareIfDimensionResult> IfDimensions;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareIfOrientationResult> IfOrientations;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareImQueryResult> ImQueries;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMaxColorResult> MaxColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMirrorResult> Mirrors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMonoHueResult> MonoHues;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareOpacityResult> Opacities;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRegionOfInterestCropResult> RegionOfInterestCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRelativeCropResult> RelativeCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRemoveColorResult> RemoveColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareResizeResult> Resizes;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRotateResult> Rotates;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareScaleResult> Scales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareShearsResult> Shears;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareTrimResult> Trims;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareUnsharpMaskResult> UnsharpMasks;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareResult(
            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareAppendResult> appends,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareAspectCropResult> aspectCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareBackgroundColorResult> backgroundColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareBlurResult> blurs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareChromaKeyResult> chromaKeys,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCompositeResult> composites,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCompoundResult> compounds,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareContrastResult> contrasts,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareCropResult> crops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFaceCropResult> faceCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFeatureCropResult> featureCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareFitAndFillResult> fitAndFills,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareGoopResult> goops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareGrayscaleResult> grayscales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareHslResult> hsls,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareHsvResult> hsvs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareIfDimensionResult> ifDimensions,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareIfOrientationResult> ifOrientations,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareImQueryResult> imQueries,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMaxColorResult> maxColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMirrorResult> mirrors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareMonoHueResult> monoHues,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareOpacityResult> opacities,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRegionOfInterestCropResult> regionOfInterestCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRelativeCropResult> relativeCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRemoveColorResult> removeColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareResizeResult> resizes,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareRotateResult> rotates,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareScaleResult> scales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareShearsResult> shears,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareTrimResult> trims,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationSquareUnsharpMaskResult> unsharpMasks)
        {
            Appends = appends;
            AspectCrops = aspectCrops;
            BackgroundColors = backgroundColors;
            Blurs = blurs;
            ChromaKeys = chromaKeys;
            Composites = composites;
            Compounds = compounds;
            Contrasts = contrasts;
            Crops = crops;
            FaceCrops = faceCrops;
            FeatureCrops = featureCrops;
            FitAndFills = fitAndFills;
            Goops = goops;
            Grayscales = grayscales;
            Hsls = hsls;
            Hsvs = hsvs;
            IfDimensions = ifDimensions;
            IfOrientations = ifOrientations;
            ImQueries = imQueries;
            MaxColors = maxColors;
            Mirrors = mirrors;
            MonoHues = monoHues;
            Opacities = opacities;
            RegionOfInterestCrops = regionOfInterestCrops;
            RelativeCrops = relativeCrops;
            RemoveColors = removeColors;
            Resizes = resizes;
            Rotates = rotates;
            Scales = scales;
            Shears = shears;
            Trims = trims;
            UnsharpMasks = unsharpMasks;
        }
    }
}
