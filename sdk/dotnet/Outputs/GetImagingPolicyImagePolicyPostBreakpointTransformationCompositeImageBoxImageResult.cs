// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageBoxImageResult
    {
        /// <summary>
        /// The fill color of the box, not the edge of the box. The API supports hexadecimal representation and CSS hexadecimal color values.
        /// </summary>
        public readonly string? Color;
        /// <summary>
        /// The fill color of the box, not the edge of the box. The API supports hexadecimal representation and CSS hexadecimal color values.
        /// </summary>
        public readonly string? ColorVar;
        /// <summary>
        /// The height of the box in pixels.
        /// </summary>
        public readonly string? Height;
        /// <summary>
        /// The height of the box in pixels.
        /// </summary>
        public readonly string? HeightVar;
        public readonly Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationResult? Transformation;
        /// <summary>
        /// The width of the box in pixels.
        /// </summary>
        public readonly string? Width;
        /// <summary>
        /// The width of the box in pixels.
        /// </summary>
        public readonly string? WidthVar;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageBoxImageResult(
            string? color,

            string? colorVar,

            string? height,

            string? heightVar,

            Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationResult? transformation,

            string? width,

            string? widthVar)
        {
            Color = color;
            ColorVar = colorVar;
            Height = height;
            HeightVar = heightVar;
            Transformation = transformation;
            Width = width;
            WidthVar = widthVar;
        }
    }
}
