// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20230920BehaviorEnhancedProxyDetectionResult
    {
        public readonly string? AnonymousVpn;
        public readonly string? BestPracticeAction;
        public readonly string? BestPracticeRedirecturl;
        public readonly bool? DetectAnonymousVpn;
        public readonly string? DetectAnonymousVpnAction;
        public readonly string? DetectAnonymousVpnRedirecturl;
        public readonly bool? DetectHostingProvider;
        public readonly string? DetectHostingProviderAction;
        public readonly string? DetectHostingProviderRedirecturl;
        public readonly bool? DetectPublicProxy;
        public readonly string? DetectPublicProxyAction;
        public readonly string? DetectPublicProxyRedirecturl;
        public readonly bool? DetectResidentialProxy;
        public readonly string? DetectResidentialProxyAction;
        public readonly string? DetectResidentialProxyRedirecturl;
        public readonly bool? DetectSmartDnsProxy;
        public readonly string? DetectSmartDnsProxyAction;
        public readonly string? DetectSmartDnsProxyRedirecturl;
        public readonly bool? DetectTorExitNode;
        public readonly string? DetectTorExitNodeAction;
        public readonly string? DetectTorExitNodeRedirecturl;
        public readonly bool? DetectVpnDataCenter;
        public readonly string? DetectVpnDataCenterAction;
        public readonly string? DetectVpnDataCenterRedirecturl;
        public readonly string? EnableConfigurationMode;
        public readonly bool? Enabled;
        public readonly bool? ForwardHeaderEnrichment;
        public readonly string? HostingProvider;
        public readonly bool? Locked;
        public readonly string? PublicProxy;
        public readonly string? ResidentialProxy;
        public readonly string? SmartDnsProxy;
        public readonly string? TemplateUuid;
        public readonly string? TorExitNode;
        public readonly string? Uuid;
        public readonly string? VpnDataCenter;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20230920BehaviorEnhancedProxyDetectionResult(
            string? anonymousVpn,

            string? bestPracticeAction,

            string? bestPracticeRedirecturl,

            bool? detectAnonymousVpn,

            string? detectAnonymousVpnAction,

            string? detectAnonymousVpnRedirecturl,

            bool? detectHostingProvider,

            string? detectHostingProviderAction,

            string? detectHostingProviderRedirecturl,

            bool? detectPublicProxy,

            string? detectPublicProxyAction,

            string? detectPublicProxyRedirecturl,

            bool? detectResidentialProxy,

            string? detectResidentialProxyAction,

            string? detectResidentialProxyRedirecturl,

            bool? detectSmartDnsProxy,

            string? detectSmartDnsProxyAction,

            string? detectSmartDnsProxyRedirecturl,

            bool? detectTorExitNode,

            string? detectTorExitNodeAction,

            string? detectTorExitNodeRedirecturl,

            bool? detectVpnDataCenter,

            string? detectVpnDataCenterAction,

            string? detectVpnDataCenterRedirecturl,

            string? enableConfigurationMode,

            bool? enabled,

            bool? forwardHeaderEnrichment,

            string? hostingProvider,

            bool? locked,

            string? publicProxy,

            string? residentialProxy,

            string? smartDnsProxy,

            string? templateUuid,

            string? torExitNode,

            string? uuid,

            string? vpnDataCenter)
        {
            AnonymousVpn = anonymousVpn;
            BestPracticeAction = bestPracticeAction;
            BestPracticeRedirecturl = bestPracticeRedirecturl;
            DetectAnonymousVpn = detectAnonymousVpn;
            DetectAnonymousVpnAction = detectAnonymousVpnAction;
            DetectAnonymousVpnRedirecturl = detectAnonymousVpnRedirecturl;
            DetectHostingProvider = detectHostingProvider;
            DetectHostingProviderAction = detectHostingProviderAction;
            DetectHostingProviderRedirecturl = detectHostingProviderRedirecturl;
            DetectPublicProxy = detectPublicProxy;
            DetectPublicProxyAction = detectPublicProxyAction;
            DetectPublicProxyRedirecturl = detectPublicProxyRedirecturl;
            DetectResidentialProxy = detectResidentialProxy;
            DetectResidentialProxyAction = detectResidentialProxyAction;
            DetectResidentialProxyRedirecturl = detectResidentialProxyRedirecturl;
            DetectSmartDnsProxy = detectSmartDnsProxy;
            DetectSmartDnsProxyAction = detectSmartDnsProxyAction;
            DetectSmartDnsProxyRedirecturl = detectSmartDnsProxyRedirecturl;
            DetectTorExitNode = detectTorExitNode;
            DetectTorExitNodeAction = detectTorExitNodeAction;
            DetectTorExitNodeRedirecturl = detectTorExitNodeRedirecturl;
            DetectVpnDataCenter = detectVpnDataCenter;
            DetectVpnDataCenterAction = detectVpnDataCenterAction;
            DetectVpnDataCenterRedirecturl = detectVpnDataCenterRedirecturl;
            EnableConfigurationMode = enableConfigurationMode;
            Enabled = enabled;
            ForwardHeaderEnrichment = forwardHeaderEnrichment;
            HostingProvider = hostingProvider;
            Locked = locked;
            PublicProxy = publicProxy;
            ResidentialProxy = residentialProxy;
            SmartDnsProxy = smartDnsProxy;
            TemplateUuid = templateUuid;
            TorExitNode = torExitNode;
            Uuid = uuid;
            VpnDataCenter = vpnDataCenter;
        }
    }
}
