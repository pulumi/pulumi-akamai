// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GtmPropertyLivenessTest
    {
        public readonly ImmutableArray<string> AlternateCaCertificates;
        public readonly bool? AnswersRequired;
        public readonly bool? DisableNonstandardPortWarning;
        public readonly bool? Disabled;
        public readonly double? ErrorPenalty;
        public readonly bool? HttpError3xx;
        public readonly bool? HttpError4xx;
        public readonly bool? HttpError5xx;
        public readonly ImmutableArray<Outputs.GtmPropertyLivenessTestHttpHeader> HttpHeaders;
        public readonly string? HttpMethod;
        public readonly string? HttpRequestBody;
        public readonly string Name;
        public readonly bool? PeerCertificateVerification;
        /// <summary>
        /// Whether to enable backwards compatibility for liveness endpoints that use older TLS protocols
        /// </summary>
        public readonly bool? Pre2023SecurityPosture;
        public readonly bool? RecursionRequested;
        public readonly string? RequestString;
        public readonly string? ResourceType;
        public readonly string? ResponseString;
        public readonly string? SslClientCertificate;
        public readonly string? SslClientPrivateKey;
        public readonly int TestInterval;
        public readonly string? TestObject;
        public readonly string? TestObjectPassword;
        public readonly int? TestObjectPort;
        public readonly string TestObjectProtocol;
        public readonly string? TestObjectUsername;
        public readonly double TestTimeout;
        public readonly double? TimeoutPenalty;

        [OutputConstructor]
        private GtmPropertyLivenessTest(
            ImmutableArray<string> alternateCaCertificates,

            bool? answersRequired,

            bool? disableNonstandardPortWarning,

            bool? disabled,

            double? errorPenalty,

            bool? httpError3xx,

            bool? httpError4xx,

            bool? httpError5xx,

            ImmutableArray<Outputs.GtmPropertyLivenessTestHttpHeader> httpHeaders,

            string? httpMethod,

            string? httpRequestBody,

            string name,

            bool? peerCertificateVerification,

            bool? pre2023SecurityPosture,

            bool? recursionRequested,

            string? requestString,

            string? resourceType,

            string? responseString,

            string? sslClientCertificate,

            string? sslClientPrivateKey,

            int testInterval,

            string? testObject,

            string? testObjectPassword,

            int? testObjectPort,

            string testObjectProtocol,

            string? testObjectUsername,

            double testTimeout,

            double? timeoutPenalty)
        {
            AlternateCaCertificates = alternateCaCertificates;
            AnswersRequired = answersRequired;
            DisableNonstandardPortWarning = disableNonstandardPortWarning;
            Disabled = disabled;
            ErrorPenalty = errorPenalty;
            HttpError3xx = httpError3xx;
            HttpError4xx = httpError4xx;
            HttpError5xx = httpError5xx;
            HttpHeaders = httpHeaders;
            HttpMethod = httpMethod;
            HttpRequestBody = httpRequestBody;
            Name = name;
            PeerCertificateVerification = peerCertificateVerification;
            Pre2023SecurityPosture = pre2023SecurityPosture;
            RecursionRequested = recursionRequested;
            RequestString = requestString;
            ResourceType = resourceType;
            ResponseString = responseString;
            SslClientCertificate = sslClientCertificate;
            SslClientPrivateKey = sslClientPrivateKey;
            TestInterval = testInterval;
            TestObject = testObject;
            TestObjectPassword = testObjectPassword;
            TestObjectPort = testObjectPort;
            TestObjectProtocol = testObjectProtocol;
            TestObjectUsername = testObjectUsername;
            TestTimeout = testTimeout;
            TimeoutPenalty = timeoutPenalty;
        }
    }
}
