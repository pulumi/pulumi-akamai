// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20240531BehaviorInstantResult
    {
        /// <summary>
        /// Specify link relation values that activate the prefetching behavior. For example, specifying `fetch` allows you to use shorter `rel="fetch"` markup.
        /// </summary>
        public readonly ImmutableArray<string> CustomLinkRelations;
        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        public readonly bool? Locked;
        /// <summary>
        /// When enabled, applies prefetching only to objects already set to be cacheable, for example using the `caching` behavior. Only applies to content with the `tieredDistribution` behavior enabled.
        /// </summary>
        public readonly bool? PrefetchCacheable;
        /// <summary>
        /// Allows edge servers to prefetch additional HTML pages while pages that link to them are being delivered. This only applies to links from `&lt;a&gt;` or `&lt;link&gt;` tags with the appropriate link relation attribute.
        /// </summary>
        public readonly bool? PrefetchHtml;
        /// <summary>
        /// Allows otherwise non-cacheable `no-store` content to prefetch if the URL path ends with `/` to indicate a request for a default file, or if the extension matches the value of the `prefetchNoStoreExtensions` option. Only applies to content with the `sureRoute` behavior enabled.
        /// </summary>
        public readonly bool? PrefetchNoStore;
        /// <summary>
        /// Specifies a set of file extensions for which the `prefetchNoStore` option is allowed.
        /// </summary>
        public readonly ImmutableArray<string> PrefetchNoStoreExtensions;
        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        public readonly string? TemplateUuid;
        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        public readonly string? Uuid;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20240531BehaviorInstantResult(
            ImmutableArray<string> customLinkRelations,

            bool? locked,

            bool? prefetchCacheable,

            bool? prefetchHtml,

            bool? prefetchNoStore,

            ImmutableArray<string> prefetchNoStoreExtensions,

            string? templateUuid,

            string? uuid)
        {
            CustomLinkRelations = customLinkRelations;
            Locked = locked;
            PrefetchCacheable = prefetchCacheable;
            PrefetchHtml = prefetchHtml;
            PrefetchNoStore = prefetchNoStore;
            PrefetchNoStoreExtensions = prefetchNoStoreExtensions;
            TemplateUuid = templateUuid;
            Uuid = uuid;
        }
    }
}
