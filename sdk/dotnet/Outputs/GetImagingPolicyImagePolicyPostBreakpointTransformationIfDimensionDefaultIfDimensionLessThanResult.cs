// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanResult
    {
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanBackgroundColorResult> BackgroundColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanBlurResult> Blurs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanChromaKeyResult> ChromaKeys;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanCompositeResult> Composites;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanCompoundResult> Compounds;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanContrastResult> Contrasts;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanGoopResult> Goops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanGrayscaleResult> Grayscales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanHslResult> Hsls;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanHsvResult> Hsvs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanIfDimensionResult> IfDimensions;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanIfOrientationResult> IfOrientations;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanMaxColorResult> MaxColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanMirrorResult> Mirrors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanMonoHueResult> MonoHues;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanOpacityResult> Opacities;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanRemoveColorResult> RemoveColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanUnsharpMaskResult> UnsharpMasks;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanResult(
            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanBackgroundColorResult> backgroundColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanBlurResult> blurs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanChromaKeyResult> chromaKeys,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanCompositeResult> composites,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanCompoundResult> compounds,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanContrastResult> contrasts,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanGoopResult> goops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanGrayscaleResult> grayscales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanHslResult> hsls,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanHsvResult> hsvs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanIfDimensionResult> ifDimensions,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanIfOrientationResult> ifOrientations,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanMaxColorResult> maxColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanMirrorResult> mirrors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanMonoHueResult> monoHues,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanOpacityResult> opacities,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanRemoveColorResult> removeColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultIfDimensionLessThanUnsharpMaskResult> unsharpMasks)
        {
            BackgroundColors = backgroundColors;
            Blurs = blurs;
            ChromaKeys = chromaKeys;
            Composites = composites;
            Compounds = compounds;
            Contrasts = contrasts;
            Goops = goops;
            Grayscales = grayscales;
            Hsls = hsls;
            Hsvs = hsvs;
            IfDimensions = ifDimensions;
            IfOrientations = ifOrientations;
            MaxColors = maxColors;
            Mirrors = mirrors;
            MonoHues = monoHues;
            Opacities = opacities;
            RemoveColors = removeColors;
            UnsharpMasks = unsharpMasks;
        }
    }
}
