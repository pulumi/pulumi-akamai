// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageCircleImageResult
    {
        /// <summary>
        /// The fill color of the circle. The API supports hexadecimal representation and CSS hexadecimal color values.
        /// </summary>
        public readonly string? Color;
        /// <summary>
        /// The fill color of the circle. The API supports hexadecimal representation and CSS hexadecimal color values.
        /// </summary>
        public readonly string? ColorVar;
        /// <summary>
        /// The diameter of the circle. The diameter will be the width and the height of the image in pixels.
        /// </summary>
        public readonly string? Diameter;
        /// <summary>
        /// The diameter of the circle. The diameter will be the width and the height of the image in pixels.
        /// </summary>
        public readonly string? DiameterVar;
        public readonly Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationResult? Transformation;
        /// <summary>
        /// The width of the box in pixels.
        /// </summary>
        public readonly string? Width;
        /// <summary>
        /// The width of the box in pixels.
        /// </summary>
        public readonly string? WidthVar;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageCircleImageResult(
            string? color,

            string? colorVar,

            string? diameter,

            string? diameterVar,

            Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationResult? transformation,

            string? width,

            string? widthVar)
        {
            Color = color;
            ColorVar = colorVar;
            Diameter = diameter;
            DiameterVar = diameterVar;
            Transformation = transformation;
            Width = width;
            WidthVar = widthVar;
        }
    }
}
