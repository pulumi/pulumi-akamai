// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyTransformationFeatureCropResult
    {
        /// <summary>
        /// Controls placement of the crop if Image and Video Manager does not detect any features in the image. Directions are relative to the edges of the image being transformed.
        /// </summary>
        public readonly string? FailGravity;
        /// <summary>
        /// Controls placement of the crop if Image and Video Manager does not detect any features in the image. Directions are relative to the edges of the image being transformed.
        /// </summary>
        public readonly string? FailGravityVar;
        /// <summary>
        /// The size in pixels of the important features to search for. If identified, two features never appear closer together than this value, `8.0` by default.
        /// </summary>
        public readonly string? FeatureRadius;
        /// <summary>
        /// The size in pixels of the important features to search for. If identified, two features never appear closer together than this value, `8.0` by default.
        /// </summary>
        public readonly string? FeatureRadiusVar;
        /// <summary>
        /// Controls placement of the crop. Directions are relative to the region of interest plus padding.
        /// </summary>
        public readonly string? Gravity;
        /// <summary>
        /// Controls placement of the crop. Directions are relative to the region of interest plus padding.
        /// </summary>
        public readonly string? GravityVar;
        /// <summary>
        /// The height in pixels of the output image relative to the specified `Style` value.
        /// </summary>
        public readonly string? Height;
        /// <summary>
        /// The height in pixels of the output image relative to the specified `Style` value.
        /// </summary>
        public readonly string? HeightVar;
        /// <summary>
        /// The maximum number of features to identify as important features, `32` by default. The strongest features are always chosen.
        /// </summary>
        public readonly string? MaxFeatures;
        /// <summary>
        /// The maximum number of features to identify as important features, `32` by default. The strongest features are always chosen.
        /// </summary>
        public readonly string? MaxFeaturesVar;
        /// <summary>
        /// Determines the minimum quality level of the feature identified. To consider a feature important, the feature needs to surpass this value.  Image and Video Manager measures quality on a scale from `0` for the lowest quality to `1` for the highest quality, `.1` by default.
        /// </summary>
        public readonly string? MinFeatureQuality;
        /// <summary>
        /// Determines the minimum quality level of the feature identified. To consider a feature important, the feature needs to surpass this value.  Image and Video Manager measures quality on a scale from `0` for the lowest quality to `1` for the highest quality, `.1` by default.
        /// </summary>
        public readonly string? MinFeatureQualityVar;
        /// <summary>
        /// Adds space around the region of interest. The amount of padding added is directly related to the size of the bounding box of the selected features. Specifically, the region of interest is expanded in all directions by the largest dimension of the bounding box of the selected features multiplied by this value.
        /// </summary>
        public readonly string? Padding;
        /// <summary>
        /// Adds space around the region of interest. The amount of padding added is directly related to the size of the bounding box of the selected features. Specifically, the region of interest is expanded in all directions by the largest dimension of the bounding box of the selected features multiplied by this value.
        /// </summary>
        public readonly string? PaddingVar;
        /// <summary>
        /// Specifies how to crop or scale a crop area for the features identified in the source image, `Fill` by default. The output image resizes to the specified `Width` and `Height` values. A value of `Crop` performs a raw crop around the features, relative to the specified `Gravity` value.  A value of `Fill` scales the crop area to include as much of the image and features as possible, relative to the specified `Width` and `Height` values. A value of `Zoom` scales the crop area as small as possible to fit the features, relative to the specified `Width` and `Height` values. Allows Variable substitution.
        /// </summary>
        public readonly string? Style;
        /// <summary>
        /// Specifies how to crop or scale a crop area for the features identified in the source image, `Fill` by default. The output image resizes to the specified `Width` and `Height` values. A value of `Crop` performs a raw crop around the features, relative to the specified `Gravity` value.  A value of `Fill` scales the crop area to include as much of the image and features as possible, relative to the specified `Width` and `Height` values. A value of `Zoom` scales the crop area as small as possible to fit the features, relative to the specified `Width` and `Height` values. Allows Variable substitution.
        /// </summary>
        public readonly string? StyleVar;
        /// <summary>
        /// The width in pixels of the output image relative to the specified `Style` value.
        /// </summary>
        public readonly string? Width;
        /// <summary>
        /// The width in pixels of the output image relative to the specified `Style` value.
        /// </summary>
        public readonly string? WidthVar;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyTransformationFeatureCropResult(
            string? failGravity,

            string? failGravityVar,

            string? featureRadius,

            string? featureRadiusVar,

            string? gravity,

            string? gravityVar,

            string? height,

            string? heightVar,

            string? maxFeatures,

            string? maxFeaturesVar,

            string? minFeatureQuality,

            string? minFeatureQualityVar,

            string? padding,

            string? paddingVar,

            string? style,

            string? styleVar,

            string? width,

            string? widthVar)
        {
            FailGravity = failGravity;
            FailGravityVar = failGravityVar;
            FeatureRadius = featureRadius;
            FeatureRadiusVar = featureRadiusVar;
            Gravity = gravity;
            GravityVar = gravityVar;
            Height = height;
            HeightVar = heightVar;
            MaxFeatures = maxFeatures;
            MaxFeaturesVar = maxFeaturesVar;
            MinFeatureQuality = minFeatureQuality;
            MinFeatureQualityVar = minFeatureQualityVar;
            Padding = padding;
            PaddingVar = paddingVar;
            Style = style;
            StyleVar = styleVar;
            Width = width;
            WidthVar = widthVar;
        }
    }
}
