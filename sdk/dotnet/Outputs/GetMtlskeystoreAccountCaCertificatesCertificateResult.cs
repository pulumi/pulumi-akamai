// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetMtlskeystoreAccountCaCertificatesCertificateResult
    {
        /// <summary>
        /// The account the CA certificate is under.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The certificate block of the CA certificate.
        /// </summary>
        public readonly string Certificate;
        /// <summary>
        /// The common name of the CA certificate.
        /// </summary>
        public readonly string CommonName;
        /// <summary>
        /// The user who created the CA certificate.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// An ISO 8601 timestamp indicating the CA certificate's creation.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// An ISO 8601 timestamp indicating when the CA certificate expires.
        /// </summary>
        public readonly string ExpiryDate;
        /// <summary>
        /// The unique identifier of the CA certificate.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// An ISO 8601 timestamp indicating the CA certificate's availability.
        /// </summary>
        public readonly string IssuedDate;
        /// <summary>
        /// Identifies the CA certificate's encryption algorithm. Possible values: `RSA` or `ECDSA`.
        /// </summary>
        public readonly string KeyAlgorithm;
        /// <summary>
        /// The private key length of the CA certificate.
        /// </summary>
        public readonly int KeySizeInBytes;
        /// <summary>
        /// An ISO 8601 timestamp indicating when the CA certificate's status moved from QUALIFYING to CURRENT.
        /// </summary>
        public readonly string QualificationDate;
        /// <summary>
        /// Specifies the algorithm that secures the data exchange between the edge server and origin.
        /// </summary>
        public readonly string SignatureAlgorithm;
        /// <summary>
        /// The status of the CA certificate. Possible values: QUALIFYING, CURRENT, PREVIOUS, or EXPIRED.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The public key's entity stored in the CA certificate's subject public key field.
        /// </summary>
        public readonly string Subject;
        /// <summary>
        /// The version of the CA certificate.
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetMtlskeystoreAccountCaCertificatesCertificateResult(
            string accountId,

            string certificate,

            string commonName,

            string createdBy,

            string createdDate,

            string expiryDate,

            int id,

            string issuedDate,

            string keyAlgorithm,

            int keySizeInBytes,

            string qualificationDate,

            string signatureAlgorithm,

            string status,

            string subject,

            int version)
        {
            AccountId = accountId;
            Certificate = certificate;
            CommonName = commonName;
            CreatedBy = createdBy;
            CreatedDate = createdDate;
            ExpiryDate = expiryDate;
            Id = id;
            IssuedDate = issuedDate;
            KeyAlgorithm = keyAlgorithm;
            KeySizeInBytes = keySizeInBytes;
            QualificationDate = qualificationDate;
            SignatureAlgorithm = signatureAlgorithm;
            Status = status;
            Subject = subject;
            Version = version;
        }
    }
}
