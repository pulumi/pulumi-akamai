// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultResult
    {
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultAppendResult> Appends;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultAspectCropResult> AspectCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultBackgroundColorResult> BackgroundColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultBlurResult> Blurs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultChromaKeyResult> ChromaKeys;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultCompositeResult> Composites;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultCompoundResult> Compounds;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultContrastResult> Contrasts;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultCropResult> Crops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultFaceCropResult> FaceCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultFeatureCropResult> FeatureCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultFitAndFillResult> FitAndFills;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultGoopResult> Goops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultGrayscaleResult> Grayscales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultHslResult> Hsls;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultHsvResult> Hsvs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultIfDimensionResult> IfDimensions;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultIfOrientationResult> IfOrientations;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultImQueryResult> ImQueries;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultMaxColorResult> MaxColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultMirrorResult> Mirrors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultMonoHueResult> MonoHues;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultOpacityResult> Opacities;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultRegionOfInterestCropResult> RegionOfInterestCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultRelativeCropResult> RelativeCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultRemoveColorResult> RemoveColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultResizeResult> Resizes;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultRotateResult> Rotates;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultScaleResult> Scales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultShearsResult> Shears;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrimResult> Trims;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultUnsharpMaskResult> UnsharpMasks;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultResult(
            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultAppendResult> appends,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultAspectCropResult> aspectCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultBackgroundColorResult> backgroundColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultBlurResult> blurs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultChromaKeyResult> chromaKeys,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultCompositeResult> composites,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultCompoundResult> compounds,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultContrastResult> contrasts,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultCropResult> crops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultFaceCropResult> faceCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultFeatureCropResult> featureCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultFitAndFillResult> fitAndFills,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultGoopResult> goops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultGrayscaleResult> grayscales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultHslResult> hsls,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultHsvResult> hsvs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultIfDimensionResult> ifDimensions,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultIfOrientationResult> ifOrientations,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultImQueryResult> imQueries,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultMaxColorResult> maxColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultMirrorResult> mirrors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultMonoHueResult> monoHues,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultOpacityResult> opacities,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultRegionOfInterestCropResult> regionOfInterestCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultRelativeCropResult> relativeCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultRemoveColorResult> removeColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultResizeResult> resizes,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultRotateResult> rotates,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultScaleResult> scales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultShearsResult> shears,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrimResult> trims,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultUnsharpMaskResult> unsharpMasks)
        {
            Appends = appends;
            AspectCrops = aspectCrops;
            BackgroundColors = backgroundColors;
            Blurs = blurs;
            ChromaKeys = chromaKeys;
            Composites = composites;
            Compounds = compounds;
            Contrasts = contrasts;
            Crops = crops;
            FaceCrops = faceCrops;
            FeatureCrops = featureCrops;
            FitAndFills = fitAndFills;
            Goops = goops;
            Grayscales = grayscales;
            Hsls = hsls;
            Hsvs = hsvs;
            IfDimensions = ifDimensions;
            IfOrientations = ifOrientations;
            ImQueries = imQueries;
            MaxColors = maxColors;
            Mirrors = mirrors;
            MonoHues = monoHues;
            Opacities = opacities;
            RegionOfInterestCrops = regionOfInterestCrops;
            RelativeCrops = relativeCrops;
            RemoveColors = removeColors;
            Resizes = resizes;
            Rotates = rotates;
            Scales = scales;
            Shears = shears;
            Trims = trims;
            UnsharpMasks = unsharpMasks;
        }
    }
}
