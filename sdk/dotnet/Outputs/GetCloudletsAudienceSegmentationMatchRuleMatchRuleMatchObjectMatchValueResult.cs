// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueResult
    {
        /// <summary>
        /// If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support this property: cookie, header, parameter, and query
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Set to true if the entry for the name property should be evaluated based on case sensitivity
        /// </summary>
        public readonly bool? NameCaseSensitive;
        /// <summary>
        /// Set to true if the entry for the name property includes wildcards
        /// </summary>
        public readonly bool? NameHasWildcard;
        /// <summary>
        /// If using the object type, use this set to list the values to match on (use only with the object type)
        /// </summary>
        public readonly Outputs.GetCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueOptionsResult? Options;
        /// <summary>
        /// The array type, which can be one of the following: object or simple or range. Use the simple option when adding only an array of string-based values
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The value attributes in the incoming request to match on (use only with simple or range type)
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private GetCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueResult(
            string? name,

            bool? nameCaseSensitive,

            bool? nameHasWildcard,

            Outputs.GetCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueOptionsResult? options,

            string type,

            ImmutableArray<string> values)
        {
            Name = name;
            NameCaseSensitive = nameCaseSensitive;
            NameHasWildcard = nameHasWildcard;
            Options = options;
            Type = type;
            Values = values;
        }
    }
}
