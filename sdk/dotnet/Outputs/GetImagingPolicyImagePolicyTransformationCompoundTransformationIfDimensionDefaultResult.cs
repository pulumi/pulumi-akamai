// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultResult
    {
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultAppendResult> Appends;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultAspectCropResult> AspectCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultBackgroundColorResult> BackgroundColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultBlurResult> Blurs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultChromaKeyResult> ChromaKeys;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultCompositeResult> Composites;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultCompoundResult> Compounds;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultContrastResult> Contrasts;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultCropResult> Crops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultFaceCropResult> FaceCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultFeatureCropResult> FeatureCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultFitAndFillResult> FitAndFills;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultGoopResult> Goops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultGrayscaleResult> Grayscales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultHslResult> Hsls;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultHsvResult> Hsvs;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultIfDimensionResult> IfDimensions;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultIfOrientationResult> IfOrientations;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultImQueryResult> ImQueries;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultMaxColorResult> MaxColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultMirrorResult> Mirrors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultMonoHueResult> MonoHues;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultOpacityResult> Opacities;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultRegionOfInterestCropResult> RegionOfInterestCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultRelativeCropResult> RelativeCrops;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultRemoveColorResult> RemoveColors;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultResizeResult> Resizes;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultRotateResult> Rotates;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultScaleResult> Scales;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultShearsResult> Shears;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultTrimResult> Trims;
        public readonly ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultUnsharpMaskResult> UnsharpMasks;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultResult(
            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultAppendResult> appends,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultAspectCropResult> aspectCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultBackgroundColorResult> backgroundColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultBlurResult> blurs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultChromaKeyResult> chromaKeys,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultCompositeResult> composites,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultCompoundResult> compounds,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultContrastResult> contrasts,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultCropResult> crops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultFaceCropResult> faceCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultFeatureCropResult> featureCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultFitAndFillResult> fitAndFills,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultGoopResult> goops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultGrayscaleResult> grayscales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultHslResult> hsls,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultHsvResult> hsvs,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultIfDimensionResult> ifDimensions,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultIfOrientationResult> ifOrientations,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultImQueryResult> imQueries,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultMaxColorResult> maxColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultMirrorResult> mirrors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultMonoHueResult> monoHues,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultOpacityResult> opacities,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultRegionOfInterestCropResult> regionOfInterestCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultRelativeCropResult> relativeCrops,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultRemoveColorResult> removeColors,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultResizeResult> resizes,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultRotateResult> rotates,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultScaleResult> scales,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultShearsResult> shears,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultTrimResult> trims,

            ImmutableArray<Outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionDefaultUnsharpMaskResult> unsharpMasks)
        {
            Appends = appends;
            AspectCrops = aspectCrops;
            BackgroundColors = backgroundColors;
            Blurs = blurs;
            ChromaKeys = chromaKeys;
            Composites = composites;
            Compounds = compounds;
            Contrasts = contrasts;
            Crops = crops;
            FaceCrops = faceCrops;
            FeatureCrops = featureCrops;
            FitAndFills = fitAndFills;
            Goops = goops;
            Grayscales = grayscales;
            Hsls = hsls;
            Hsvs = hsvs;
            IfDimensions = ifDimensions;
            IfOrientations = ifOrientations;
            ImQueries = imQueries;
            MaxColors = maxColors;
            Mirrors = mirrors;
            MonoHues = monoHues;
            Opacities = opacities;
            RegionOfInterestCrops = regionOfInterestCrops;
            RelativeCrops = relativeCrops;
            RemoveColors = removeColors;
            Resizes = resizes;
            Rotates = rotates;
            Scales = scales;
            Shears = shears;
            Trims = trims;
            UnsharpMasks = unsharpMasks;
        }
    }
}
