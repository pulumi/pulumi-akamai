// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20230920BehaviorVisitorPrioritizationResult
    {
        /// <summary>
        /// Sets advanced configuration options for the allowed user's cookie.
        /// </summary>
        public readonly bool? AllowedUserCookieAdvanced;
        /// <summary>
        /// Sets an automatic `salt` value to verify the integrity of the cookie for an allowed user. Disable this if you want to share the cookie across properties.
        /// </summary>
        public readonly bool? AllowedUserCookieAutomaticSalt;
        /// <summary>
        /// Specifies a domain for an allowed user cookie.
        /// </summary>
        public readonly string? AllowedUserCookieDomain;
        /// <summary>
        /// Specify with `allowedUserCookieAdvanced` enabled.
        /// </summary>
        public readonly string? AllowedUserCookieDomainType;
        /// <summary>
        /// Sets the number of seconds for the allowed user's session once allowed through to the site.
        /// </summary>
        public readonly int? AllowedUserCookieDuration;
        /// <summary>
        /// Sets a cookie for users who have been allowed through to the site.
        /// </summary>
        public readonly bool? AllowedUserCookieEnabled;
        /// <summary>
        /// Applies the `HttpOnly` flag to the allowed user's cookie to ensure it's accessed over HTTP and not manipulated by the client.
        /// </summary>
        public readonly bool? AllowedUserCookieHttpOnly;
        /// <summary>
        /// Specifies a label to distinguish this cookie for an allowed user from others. The value appends to the cookie's name, and helps you to maintain the same user assignment across behaviors within a property, and across properties.
        /// </summary>
        public readonly string? AllowedUserCookieLabel;
        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        public readonly string? AllowedUserCookieManagementTitle;
        /// <summary>
        /// Resets the duration of an allowed cookie with each request, so that it only expires if the user doesn't make any requests for the specified duration. Do not enable this option if you want to set a fixed time for all users.
        /// </summary>
        public readonly bool? AllowedUserCookieRefresh;
        /// <summary>
        /// Specifies a fixed `salt` value, which is incorporated into the cookie's value to prevent users from manipulating it. You can use the same salt string across different behaviors or properties to apply a single cookie to all allowed users.
        /// </summary>
        public readonly string? AllowedUserCookieSalt;
        /// <summary>
        /// Identifies the Cloudlet policy.
        /// </summary>
        public readonly Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorVisitorPrioritizationCloudletPolicyResult? CloudletPolicy;
        /// <summary>
        /// Enables the Visitor Prioritization behavior.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        public readonly bool? Locked;
        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        public readonly string? TemplateUuid;
        /// <summary>
        /// When enabled, identifies users by the value of a cookie.
        /// </summary>
        public readonly bool? UserIdentificationByCookie;
        /// <summary>
        /// When enabled, identifies users by the values of GET or POST request headers.
        /// </summary>
        public readonly bool? UserIdentificationByHeaders;
        /// <summary>
        /// Allows IP addresses to identify users.
        /// </summary>
        public readonly bool? UserIdentificationByIp;
        /// <summary>
        /// When enabled, identifies users by the values of GET or POST request parameters.
        /// </summary>
        public readonly bool? UserIdentificationByParams;
        /// <summary>
        /// Specifies the name of the cookie whose value identifies users. To match a user, the value of the cookie needs to remain constant across all requests.
        /// </summary>
        public readonly string? UserIdentificationKeyCookie;
        /// <summary>
        /// Specifies names of request headers whose values identify users. To match a user, values for all the specified headers need to remain constant across all requests.
        /// </summary>
        public readonly ImmutableArray<string> UserIdentificationKeyHeaders;
        /// <summary>
        /// Specifies names of request parameters whose values identify users. To match a user, values for all the specified parameters need to remain constant across all requests. Parameters that are absent or blank may also identify users.
        /// </summary>
        public readonly ImmutableArray<string> UserIdentificationKeyParams;
        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        public readonly string? UserIdentificationTitle;
        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        public readonly string? Uuid;
        /// <summary>
        /// Specifies the waiting room page's time to live in the cache, `5` minutes by default.
        /// </summary>
        public readonly int? WaitingRoomCacheTtl;
        /// <summary>
        /// When enabled along with `waitingRoomCookieEnabled`, sets advanced configuration options for the waiting room cookie.
        /// </summary>
        public readonly bool? WaitingRoomCookieAdvanced;
        /// <summary>
        /// Sets an automatic `salt` value to verify the integrity of the waiting room cookie.  Disable this if you want to share the cookie across properties.
        /// </summary>
        public readonly bool? WaitingRoomCookieAutomaticSalt;
        /// <summary>
        /// Specifies a domain for the waiting room cookie.
        /// </summary>
        public readonly string? WaitingRoomCookieDomain;
        /// <summary>
        /// Specify with `waitingRoomCookieAdvanced` enabled, selects whether to use the `DYNAMIC` incoming host header, or a `CUSTOMER`-defined cookie domain.
        /// </summary>
        public readonly string? WaitingRoomCookieDomainType;
        /// <summary>
        /// Sets the number of seconds for which users remain in the waiting room. During this time, users who refresh the waiting room page remain there.
        /// </summary>
        public readonly int? WaitingRoomCookieDuration;
        /// <summary>
        /// Enables a cookie to track a waiting room assignment.
        /// </summary>
        public readonly bool? WaitingRoomCookieEnabled;
        /// <summary>
        /// Applies the `HttpOnly` flag to the waiting room cookie to ensure it's accessed over HTTP and not manipulated by the client.
        /// </summary>
        public readonly bool? WaitingRoomCookieHttpOnly;
        /// <summary>
        /// Specifies a label to distinguish this waiting room cookie from others. The value appends to the cookie's name, and helps you to maintain the same waiting room assignment across behaviors within a property, and across properties.
        /// </summary>
        public readonly string? WaitingRoomCookieLabel;
        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        public readonly string? WaitingRoomCookieManagementTitle;
        /// <summary>
        /// Specifies a fixed `salt` value, which is incorporated into the cookie's value to prevent users from manipulating it. You can use the same salt string across different behaviors or properties to apply a single cookie for the waiting room session.
        /// </summary>
        public readonly string? WaitingRoomCookieSalt;
        /// <summary>
        /// Enabling this option shares the same `allowedUserCookieLabel` string. If disabled, specify a different `waitingRoomCookieLabel`.
        /// </summary>
        public readonly bool? WaitingRoomCookieShareLabel;
        /// <summary>
        /// Specifies a CP code for requests sent to the waiting room. You only need to provide the initial `id`, stripping any `cpc_` prefix to pass the integer to the rule tree. Additional CP code details may reflect back in subsequent read-only data.
        /// </summary>
        public readonly Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorVisitorPrioritizationWaitingRoomCpCodeResult? WaitingRoomCpCode;
        /// <summary>
        /// Specifies the NetStorage directory that contains the static waiting room page, with no trailing slash character.
        /// </summary>
        public readonly string? WaitingRoomDirectory;
        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        public readonly string? WaitingRoomManagementTitle;
        /// <summary>
        /// Specifies the NetStorage domain for the waiting room page.
        /// </summary>
        public readonly Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorVisitorPrioritizationWaitingRoomNetStorageResult? WaitingRoomNetStorage;
        /// <summary>
        /// Specifies the response code for requests sent to the waiting room.
        /// </summary>
        public readonly int? WaitingRoomStatusCode;
        /// <summary>
        /// Allows you to assign a different CP code that tracks any requests that are sent to the waiting room.
        /// </summary>
        public readonly bool? WaitingRoomUseCpCode;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20230920BehaviorVisitorPrioritizationResult(
            bool? allowedUserCookieAdvanced,

            bool? allowedUserCookieAutomaticSalt,

            string? allowedUserCookieDomain,

            string? allowedUserCookieDomainType,

            int? allowedUserCookieDuration,

            bool? allowedUserCookieEnabled,

            bool? allowedUserCookieHttpOnly,

            string? allowedUserCookieLabel,

            string? allowedUserCookieManagementTitle,

            bool? allowedUserCookieRefresh,

            string? allowedUserCookieSalt,

            Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorVisitorPrioritizationCloudletPolicyResult? cloudletPolicy,

            bool? enabled,

            bool? locked,

            string? templateUuid,

            bool? userIdentificationByCookie,

            bool? userIdentificationByHeaders,

            bool? userIdentificationByIp,

            bool? userIdentificationByParams,

            string? userIdentificationKeyCookie,

            ImmutableArray<string> userIdentificationKeyHeaders,

            ImmutableArray<string> userIdentificationKeyParams,

            string? userIdentificationTitle,

            string? uuid,

            int? waitingRoomCacheTtl,

            bool? waitingRoomCookieAdvanced,

            bool? waitingRoomCookieAutomaticSalt,

            string? waitingRoomCookieDomain,

            string? waitingRoomCookieDomainType,

            int? waitingRoomCookieDuration,

            bool? waitingRoomCookieEnabled,

            bool? waitingRoomCookieHttpOnly,

            string? waitingRoomCookieLabel,

            string? waitingRoomCookieManagementTitle,

            string? waitingRoomCookieSalt,

            bool? waitingRoomCookieShareLabel,

            Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorVisitorPrioritizationWaitingRoomCpCodeResult? waitingRoomCpCode,

            string? waitingRoomDirectory,

            string? waitingRoomManagementTitle,

            Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorVisitorPrioritizationWaitingRoomNetStorageResult? waitingRoomNetStorage,

            int? waitingRoomStatusCode,

            bool? waitingRoomUseCpCode)
        {
            AllowedUserCookieAdvanced = allowedUserCookieAdvanced;
            AllowedUserCookieAutomaticSalt = allowedUserCookieAutomaticSalt;
            AllowedUserCookieDomain = allowedUserCookieDomain;
            AllowedUserCookieDomainType = allowedUserCookieDomainType;
            AllowedUserCookieDuration = allowedUserCookieDuration;
            AllowedUserCookieEnabled = allowedUserCookieEnabled;
            AllowedUserCookieHttpOnly = allowedUserCookieHttpOnly;
            AllowedUserCookieLabel = allowedUserCookieLabel;
            AllowedUserCookieManagementTitle = allowedUserCookieManagementTitle;
            AllowedUserCookieRefresh = allowedUserCookieRefresh;
            AllowedUserCookieSalt = allowedUserCookieSalt;
            CloudletPolicy = cloudletPolicy;
            Enabled = enabled;
            Locked = locked;
            TemplateUuid = templateUuid;
            UserIdentificationByCookie = userIdentificationByCookie;
            UserIdentificationByHeaders = userIdentificationByHeaders;
            UserIdentificationByIp = userIdentificationByIp;
            UserIdentificationByParams = userIdentificationByParams;
            UserIdentificationKeyCookie = userIdentificationKeyCookie;
            UserIdentificationKeyHeaders = userIdentificationKeyHeaders;
            UserIdentificationKeyParams = userIdentificationKeyParams;
            UserIdentificationTitle = userIdentificationTitle;
            Uuid = uuid;
            WaitingRoomCacheTtl = waitingRoomCacheTtl;
            WaitingRoomCookieAdvanced = waitingRoomCookieAdvanced;
            WaitingRoomCookieAutomaticSalt = waitingRoomCookieAutomaticSalt;
            WaitingRoomCookieDomain = waitingRoomCookieDomain;
            WaitingRoomCookieDomainType = waitingRoomCookieDomainType;
            WaitingRoomCookieDuration = waitingRoomCookieDuration;
            WaitingRoomCookieEnabled = waitingRoomCookieEnabled;
            WaitingRoomCookieHttpOnly = waitingRoomCookieHttpOnly;
            WaitingRoomCookieLabel = waitingRoomCookieLabel;
            WaitingRoomCookieManagementTitle = waitingRoomCookieManagementTitle;
            WaitingRoomCookieSalt = waitingRoomCookieSalt;
            WaitingRoomCookieShareLabel = waitingRoomCookieShareLabel;
            WaitingRoomCpCode = waitingRoomCpCode;
            WaitingRoomDirectory = waitingRoomDirectory;
            WaitingRoomManagementTitle = waitingRoomManagementTitle;
            WaitingRoomNetStorage = waitingRoomNetStorage;
            WaitingRoomStatusCode = waitingRoomStatusCode;
            WaitingRoomUseCpCode = waitingRoomUseCpCode;
        }
    }
}
