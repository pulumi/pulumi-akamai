// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20230920BehaviorApplicationLoadBalancerResult
    {
        public readonly Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorApplicationLoadBalancerAllDownNetStorageResult? AllDownNetStorage;
        public readonly string? AllDownNetStorageFile;
        public readonly string? AllDownStatusCode;
        public readonly string? AllDownTitle;
        public readonly bool? AllowCachePrefresh;
        public readonly string? CachedContentTitle;
        public readonly Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorApplicationLoadBalancerCloudletPolicyResult? CloudletPolicy;
        public readonly bool? Enabled;
        public readonly int? FailoverAttemptsThreshold;
        public readonly string? FailoverMode;
        public readonly ImmutableArray<Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorApplicationLoadBalancerFailoverOriginMapResult> FailoverOriginMaps;
        public readonly ImmutableArray<string> FailoverStatusCodes;
        public readonly string? FailoverTitle;
        public readonly string? Label;
        public readonly bool? Locked;
        public readonly string? OriginCookieName;
        public readonly bool? SpecifyStickinessCookieDomain;
        public readonly bool? StickinessCookieAutomaticSalt;
        public readonly string? StickinessCookieDomain;
        public readonly string? StickinessCookieSalt;
        public readonly bool? StickinessCookieSetHttpOnlyFlag;
        public readonly string? StickinessCookieType;
        public readonly string? StickinessDuration;
        public readonly string? StickinessExpirationDate;
        public readonly bool? StickinessRefresh;
        public readonly string? StickinessTitle;
        public readonly string? TemplateUuid;
        public readonly string? Uuid;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20230920BehaviorApplicationLoadBalancerResult(
            Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorApplicationLoadBalancerAllDownNetStorageResult? allDownNetStorage,

            string? allDownNetStorageFile,

            string? allDownStatusCode,

            string? allDownTitle,

            bool? allowCachePrefresh,

            string? cachedContentTitle,

            Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorApplicationLoadBalancerCloudletPolicyResult? cloudletPolicy,

            bool? enabled,

            int? failoverAttemptsThreshold,

            string? failoverMode,

            ImmutableArray<Outputs.GetPropertyRulesBuilderRulesV20230920BehaviorApplicationLoadBalancerFailoverOriginMapResult> failoverOriginMaps,

            ImmutableArray<string> failoverStatusCodes,

            string? failoverTitle,

            string? label,

            bool? locked,

            string? originCookieName,

            bool? specifyStickinessCookieDomain,

            bool? stickinessCookieAutomaticSalt,

            string? stickinessCookieDomain,

            string? stickinessCookieSalt,

            bool? stickinessCookieSetHttpOnlyFlag,

            string? stickinessCookieType,

            string? stickinessDuration,

            string? stickinessExpirationDate,

            bool? stickinessRefresh,

            string? stickinessTitle,

            string? templateUuid,

            string? uuid)
        {
            AllDownNetStorage = allDownNetStorage;
            AllDownNetStorageFile = allDownNetStorageFile;
            AllDownStatusCode = allDownStatusCode;
            AllDownTitle = allDownTitle;
            AllowCachePrefresh = allowCachePrefresh;
            CachedContentTitle = cachedContentTitle;
            CloudletPolicy = cloudletPolicy;
            Enabled = enabled;
            FailoverAttemptsThreshold = failoverAttemptsThreshold;
            FailoverMode = failoverMode;
            FailoverOriginMaps = failoverOriginMaps;
            FailoverStatusCodes = failoverStatusCodes;
            FailoverTitle = failoverTitle;
            Label = label;
            Locked = locked;
            OriginCookieName = originCookieName;
            SpecifyStickinessCookieDomain = specifyStickinessCookieDomain;
            StickinessCookieAutomaticSalt = stickinessCookieAutomaticSalt;
            StickinessCookieDomain = stickinessCookieDomain;
            StickinessCookieSalt = stickinessCookieSalt;
            StickinessCookieSetHttpOnlyFlag = stickinessCookieSetHttpOnlyFlag;
            StickinessCookieType = stickinessCookieType;
            StickinessDuration = stickinessDuration;
            StickinessExpirationDate = stickinessExpirationDate;
            StickinessRefresh = stickinessRefresh;
            StickinessTitle = stickinessTitle;
            TemplateUuid = templateUuid;
            Uuid = uuid;
        }
    }
}
