// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20240813BehaviorEnforceMtlsSettingsResult
    {
        /// <summary>
        /// Specify the client certificate authority (CA) sets you want to support in client requests. Run the `List CA Sets` operation in the mTLS Edge TrustStore API to get the `setId` value and pass it in this option as a string. If a request includes a set not defined here, it will be denied. The preset list items you can select are contingent on the CA sets you've created using the mTLS Edge Truststore, and then associated with a certificate in the `Certificate Provisioning System`.
        /// </summary>
        public readonly ImmutableArray<string> CertificateAuthoritySets;
        /// <summary>
        /// Whether to require a specific mutual transport layer security (mTLS) certificate authority (CA) set in a request from a client to the edge network.
        /// </summary>
        public readonly bool? EnableAuthSet;
        /// <summary>
        /// This denies a request from a client that doesn't match what you've set for the options in this behavior. When disabled, non-matching requests are allowed, but you can incorporate a custom handling operation, such as reviewing generated log entries to see the discrepancies, enable the `Client-To-Edge` authentication header, or issue a custom message.
        /// </summary>
        public readonly bool? EnableDenyRequest;
        /// <summary>
        /// Whether the mutual transport layer security requests from a client should use the online certificate support protocol (OCSP). OCSP can determine the x.509 certificate revocation status during the TLS handshake.
        /// </summary>
        public readonly bool? EnableOcspStatus;
        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        public readonly bool? Locked;
        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        public readonly string? TemplateUuid;
        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        public readonly string? Uuid;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20240813BehaviorEnforceMtlsSettingsResult(
            ImmutableArray<string> certificateAuthoritySets,

            bool? enableAuthSet,

            bool? enableDenyRequest,

            bool? enableOcspStatus,

            bool? locked,

            string? templateUuid,

            string? uuid)
        {
            CertificateAuthoritySets = certificateAuthoritySets;
            EnableAuthSet = enableAuthSet;
            EnableDenyRequest = enableDenyRequest;
            EnableOcspStatus = enableOcspStatus;
            Locked = locked;
            TemplateUuid = templateUuid;
            Uuid = uuid;
        }
    }
}
