// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20230920BehaviorSegmentedContentProtectionResult
    {
        public readonly bool? Acl;
        public readonly bool? DashMediaEncryption;
        public readonly bool? DataPayload;
        public readonly bool? EnableTokenInUri;
        public readonly bool? Enabled;
        public readonly string? FieldCarryOver;
        public readonly ImmutableArray<string> HeaderForSalts;
        public readonly ImmutableArray<string> HlsMasterManifestFiles;
        public readonly bool? HlsMediaEncryption;
        public readonly bool? Ip;
        public readonly string? Key;
        public readonly bool? Locked;
        public readonly string? MediaEncryptionTitle;
        public readonly int? RevokedListId;
        public readonly string? Salt;
        public readonly bool? SessionId;
        public readonly string? TemplateUuid;
        public readonly string? TokenAuthHlsTitle;
        public readonly string? TokenAuthenticationTitle;
        public readonly bool? TokenRevocationEnabled;
        public readonly string? TokenRevocationTitle;
        public readonly string? TransitionKey;
        public readonly bool? UseAdvanced;
        public readonly string? Uuid;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20230920BehaviorSegmentedContentProtectionResult(
            bool? acl,

            bool? dashMediaEncryption,

            bool? dataPayload,

            bool? enableTokenInUri,

            bool? enabled,

            string? fieldCarryOver,

            ImmutableArray<string> headerForSalts,

            ImmutableArray<string> hlsMasterManifestFiles,

            bool? hlsMediaEncryption,

            bool? ip,

            string? key,

            bool? locked,

            string? mediaEncryptionTitle,

            int? revokedListId,

            string? salt,

            bool? sessionId,

            string? templateUuid,

            string? tokenAuthHlsTitle,

            string? tokenAuthenticationTitle,

            bool? tokenRevocationEnabled,

            string? tokenRevocationTitle,

            string? transitionKey,

            bool? useAdvanced,

            string? uuid)
        {
            Acl = acl;
            DashMediaEncryption = dashMediaEncryption;
            DataPayload = dataPayload;
            EnableTokenInUri = enableTokenInUri;
            Enabled = enabled;
            FieldCarryOver = fieldCarryOver;
            HeaderForSalts = headerForSalts;
            HlsMasterManifestFiles = hlsMasterManifestFiles;
            HlsMediaEncryption = hlsMediaEncryption;
            Ip = ip;
            Key = key;
            Locked = locked;
            MediaEncryptionTitle = mediaEncryptionTitle;
            RevokedListId = revokedListId;
            Salt = salt;
            SessionId = sessionId;
            TemplateUuid = templateUuid;
            TokenAuthHlsTitle = tokenAuthHlsTitle;
            TokenAuthenticationTitle = tokenAuthenticationTitle;
            TokenRevocationEnabled = tokenRevocationEnabled;
            TokenRevocationTitle = tokenRevocationTitle;
            TransitionKey = transitionKey;
            UseAdvanced = useAdvanced;
            Uuid = uuid;
        }
    }
}
