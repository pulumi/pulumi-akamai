// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class IamApiClientGroupAccessGroup
    {
        /// <summary>
        /// A unique identifier for the group.
        /// </summary>
        public readonly int GroupId;
        /// <summary>
        /// A human-readable name for the group.
        /// </summary>
        public readonly string? GroupName;
        /// <summary>
        /// Blocks the API client access to the group's child groups.
        /// </summary>
        public readonly bool? IsBlocked;
        /// <summary>
        /// A unique identifier for the parent group within the group tree.
        /// </summary>
        public readonly int? ParentGroupId;
        /// <summary>
        /// A human-readable description for the role to convey its use.
        /// </summary>
        public readonly string? RoleDescription;
        /// <summary>
        /// A unique identifier for the role.
        /// </summary>
        public readonly int RoleId;
        /// <summary>
        /// A human-readable name for the role.
        /// </summary>
        public readonly string? RoleName;
        /// <summary>
        /// Groups the API client can access.
        /// </summary>
        public readonly ImmutableArray<Outputs.IamApiClientGroupAccessGroupSubGroup> SubGroups;

        [OutputConstructor]
        private IamApiClientGroupAccessGroup(
            int groupId,

            string? groupName,

            bool? isBlocked,

            int? parentGroupId,

            string? roleDescription,

            int roleId,

            string? roleName,

            ImmutableArray<Outputs.IamApiClientGroupAccessGroupSubGroup> subGroups)
        {
            GroupId = groupId;
            GroupName = groupName;
            IsBlocked = isBlocked;
            ParentGroupId = parentGroupId;
            RoleDescription = roleDescription;
            RoleId = roleId;
            RoleName = roleName;
            SubGroups = subGroups;
        }
    }
}
