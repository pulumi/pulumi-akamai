// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class CloudletsApplicationLoadBalancerDataCenter
    {
        /// <summary>
        /// The city in which the data center is located.
        /// </summary>
        public readonly string? City;
        /// <summary>
        /// Whether to override the cloud server host header.
        /// </summary>
        public readonly bool? CloudServerHostHeaderOverride;
        /// <summary>
        /// Whether this datacenter is a cloud service.
        /// </summary>
        public readonly bool? CloudService;
        /// <summary>
        /// The code of the continent on which the data center is located. See [Continent Codes](https://control.akamai.com/dl/edgescape/continentCodes.csv) for a list of valid codes.
        /// </summary>
        public readonly string Continent;
        /// <summary>
        /// The country in which the data center is located. See [Country Codes](https://control.akamai.com/dl/edgescape/cc2continent.csv) for a list of valid codes.
        /// </summary>
        public readonly string Country;
        /// <summary>
        /// The name of the host that can be used as a Conditional Origin. This should match the `hostname` value defined for this datacenter in Property Manager.
        /// </summary>
        public readonly string? Hostname;
        /// <summary>
        /// The latitude value for the data center. This member supports six decimal places of precision.
        /// </summary>
        public readonly double Latitude;
        /// <summary>
        /// A list of the origin servers used to poll the data centers in an Application Load Balancer configuration. These servers support basic HTTP polling.
        /// </summary>
        public readonly ImmutableArray<string> LivenessHosts;
        /// <summary>
        /// The longitude value for the data center. This member supports six decimal places of precision.
        /// </summary>
        public readonly double Longitude;
        /// <summary>
        /// The identifier of an origin that represents the data center. The Conditional Origin, which is defined in Property Manager, must have an origin type of either `CUSTOMER` or `NET_STORAGE` set in the `origin` behavior. See property rules for more information.
        /// </summary>
        public readonly string OriginId;
        /// <summary>
        /// The percent of traffic that is sent to the data center. The total for all data centers must equal 100%.
        /// </summary>
        public readonly double Percent;
        /// <summary>
        /// The state, province, or region where the data center is located.
        /// </summary>
        public readonly string? StateOrProvince;

        [OutputConstructor]
        private CloudletsApplicationLoadBalancerDataCenter(
            string? city,

            bool? cloudServerHostHeaderOverride,

            bool? cloudService,

            string continent,

            string country,

            string? hostname,

            double latitude,

            ImmutableArray<string> livenessHosts,

            double longitude,

            string originId,

            double percent,

            string? stateOrProvince)
        {
            City = city;
            CloudServerHostHeaderOverride = cloudServerHostHeaderOverride;
            CloudService = cloudService;
            Continent = continent;
            Country = country;
            Hostname = hostname;
            Latitude = latitude;
            LivenessHosts = livenessHosts;
            Longitude = longitude;
            OriginId = originId;
            Percent = percent;
            StateOrProvince = stateOrProvince;
        }
    }
}
