// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20230920BehaviorAdaptiveAccelerationResult
    {
        public readonly string? AbLogic;
        public readonly string? AbTesting;
        public readonly string? Compression;
        public readonly string? CookieName;
        public readonly bool? EnableBrotliCompression;
        public readonly bool? EnableForNoncacheable;
        public readonly bool? EnablePreconnect;
        public readonly bool? EnablePush;
        public readonly bool? EnableRo;
        public readonly bool? Locked;
        public readonly bool? PreloadEnable;
        public readonly string? Source;
        public readonly string? TemplateUuid;
        public readonly string? TitleBrotli;
        public readonly string? TitleHttp2ServerPush;
        public readonly string? TitlePreconnect;
        public readonly string? TitlePreload;
        public readonly string? TitleRo;
        public readonly string? Uuid;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20230920BehaviorAdaptiveAccelerationResult(
            string? abLogic,

            string? abTesting,

            string? compression,

            string? cookieName,

            bool? enableBrotliCompression,

            bool? enableForNoncacheable,

            bool? enablePreconnect,

            bool? enablePush,

            bool? enableRo,

            bool? locked,

            bool? preloadEnable,

            string? source,

            string? templateUuid,

            string? titleBrotli,

            string? titleHttp2ServerPush,

            string? titlePreconnect,

            string? titlePreload,

            string? titleRo,

            string? uuid)
        {
            AbLogic = abLogic;
            AbTesting = abTesting;
            Compression = compression;
            CookieName = cookieName;
            EnableBrotliCompression = enableBrotliCompression;
            EnableForNoncacheable = enableForNoncacheable;
            EnablePreconnect = enablePreconnect;
            EnablePush = enablePush;
            EnableRo = enableRo;
            Locked = locked;
            PreloadEnable = preloadEnable;
            Source = source;
            TemplateUuid = templateUuid;
            TitleBrotli = titleBrotli;
            TitleHttp2ServerPush = titleHttp2ServerPush;
            TitlePreconnect = titlePreconnect;
            TitlePreload = titlePreload;
            TitleRo = titleRo;
            Uuid = uuid;
        }
    }
}
