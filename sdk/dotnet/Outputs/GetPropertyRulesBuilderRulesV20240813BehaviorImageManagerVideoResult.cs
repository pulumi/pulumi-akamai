// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerVideoResult
    {
        /// <summary>
        /// When disabled, applies a single standard policy based on your property name.  Allows you to reference a rule-specific `policyToken` for videos with different match criteria.
        /// </summary>
        public readonly bool? Advanced;
        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        public readonly string? ApiReferenceTitle;
        /// <summary>
        /// When enabled, automatically converts videos to the best file type for the requesting device. This produces the smallest file size that retains image quality, based on the user agent and the initial image file.
        /// </summary>
        public readonly bool? ApplyBestFileType;
        /// <summary>
        /// Specifies the CP code for which to track Image and Video Manager video traffic. Use this along with `cpCodeTransformed` to track traffic to derivative video content. You only need to provide the initial `id`, stripping any `cpc_` prefix to pass the integer to the rule tree. Additional CP code details may reflect back in subsequent read-only data.
        /// </summary>
        public readonly Outputs.GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerVideoCpCodeOriginalResult? CpCodeOriginal;
        /// <summary>
        /// Specifies the CP code to identify derivative transformed video content. You only need to provide the initial `id`, stripping any `cpc_` prefix to pass the integer to the rule tree. Additional CP code details may reflect back in subsequent read-only data.
        /// </summary>
        public readonly Outputs.GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerVideoCpCodeTransformedResult? CpCodeTransformed;
        /// <summary>
        /// Applies Image and Video Manager's video optimization to the current content.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        public readonly bool? Locked;
        /// <summary>
        /// Identifies the existing policy set configured with `Image and Video Manager API`.
        /// </summary>
        public readonly string? PolicySet;
        /// <summary>
        /// Specifies a custom policy defined in the Image and Video Manager Policy Manager or the `Image and Video Manager API`. The policy name can include up to 64 alphanumeric, dash, or underscore characters.
        /// </summary>
        public readonly string? PolicyToken;
        /// <summary>
        /// Specifies the default policy identifier, which is registered with the `Image and Video Manager API` once you activate this property.
        /// </summary>
        public readonly string? PolicyTokenDefault;
        /// <summary>
        /// When enabled, scales down video for smaller mobile screens, based on the device's `User-Agent` header.
        /// </summary>
        public readonly bool? Resize;
        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        public readonly string? SettingsTitle;
        /// <summary>
        /// To optimize caching, assign a region close to your site's heaviest traffic.
        /// </summary>
        public readonly string? SuperCacheRegion;
        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        public readonly string? TemplateUuid;
        /// <summary>
        /// This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
        /// </summary>
        public readonly string? TrafficTitle;
        /// <summary>
        /// Whether to use a previously created policy set that may be referenced in other properties, or create a new policy set to use with this property. A policy set can be shared across multiple properties belonging to the same contract. The behavior populates any changes to the policy set across all properties that reference that set.
        /// </summary>
        public readonly bool? UseExistingPolicySet;
        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        public readonly string? Uuid;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerVideoResult(
            bool? advanced,

            string? apiReferenceTitle,

            bool? applyBestFileType,

            Outputs.GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerVideoCpCodeOriginalResult? cpCodeOriginal,

            Outputs.GetPropertyRulesBuilderRulesV20240813BehaviorImageManagerVideoCpCodeTransformedResult? cpCodeTransformed,

            bool? enabled,

            bool? locked,

            string? policySet,

            string? policyToken,

            string? policyTokenDefault,

            bool? resize,

            string? settingsTitle,

            string? superCacheRegion,

            string? templateUuid,

            string? trafficTitle,

            bool? useExistingPolicySet,

            string? uuid)
        {
            Advanced = advanced;
            ApiReferenceTitle = apiReferenceTitle;
            ApplyBestFileType = applyBestFileType;
            CpCodeOriginal = cpCodeOriginal;
            CpCodeTransformed = cpCodeTransformed;
            Enabled = enabled;
            Locked = locked;
            PolicySet = policySet;
            PolicyToken = policyToken;
            PolicyTokenDefault = policyTokenDefault;
            Resize = resize;
            SettingsTitle = settingsTitle;
            SuperCacheRegion = superCacheRegion;
            TemplateUuid = templateUuid;
            TrafficTitle = trafficTitle;
            UseExistingPolicySet = useExistingPolicySet;
            Uuid = uuid;
        }
    }
}
