// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyTransformationSmartCropResult
    {
        /// <summary>
        /// When enabled, the SmartCrop transformation doesn't actually execute. Instead, it outlines found faces or features, the region of interest, and the crop area.
        /// </summary>
        public readonly string? Debug;
        /// <summary>
        /// When enabled, the SmartCrop transformation doesn't actually execute. Instead, it outlines found faces or features, the region of interest, and the crop area.
        /// </summary>
        public readonly string? DebugVar;
        /// <summary>
        /// The height in pixels of the output image relative to the specified `style` value.
        /// </summary>
        public readonly string? Height;
        /// <summary>
        /// The height in pixels of the output image relative to the specified `style` value.
        /// </summary>
        public readonly string? HeightVar;
        /// <summary>
        /// Whether to sacrifice any image fidelity for transformation performance.
        /// </summary>
        public readonly string? Sloppy;
        /// <summary>
        /// Whether to sacrifice any image fidelity for transformation performance.
        /// </summary>
        public readonly string? SloppyVar;
        /// <summary>
        /// Specifies how to crop or scale a crop area for the specified area of interest in the source image, `fill` by default. The output image resizes to the specified `width` and `height` values. A value of `crop` places raw crop around the point of interest.  A value of `fill` scales the crop area to include as much of the image and point of interest as possible, relative to the specified `width` and `height` values. A value of `zoom` scales the crop area as small as possible to fit the point of interest, relative to the specified `width` and `height` values.
        /// </summary>
        public readonly string? Style;
        /// <summary>
        /// Specifies how to crop or scale a crop area for the specified area of interest in the source image, `fill` by default. The output image resizes to the specified `width` and `height` values. A value of `crop` places raw crop around the point of interest.  A value of `fill` scales the crop area to include as much of the image and point of interest as possible, relative to the specified `width` and `height` values. A value of `zoom` scales the crop area as small as possible to fit the point of interest, relative to the specified `width` and `height` values.
        /// </summary>
        public readonly string? StyleVar;
        /// <summary>
        /// The width in pixels of the output image relative to the specified `style` value.
        /// </summary>
        public readonly string? Width;
        /// <summary>
        /// The width in pixels of the output image relative to the specified `style` value.
        /// </summary>
        public readonly string? WidthVar;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyTransformationSmartCropResult(
            string? debug,

            string? debugVar,

            string? height,

            string? heightVar,

            string? sloppy,

            string? sloppyVar,

            string? style,

            string? styleVar,

            string? width,

            string? widthVar)
        {
            Debug = debug;
            DebugVar = debugVar;
            Height = height;
            HeightVar = heightVar;
            Sloppy = sloppy;
            SloppyVar = sloppyVar;
            Style = style;
            StyleVar = styleVar;
            Width = width;
            WidthVar = widthVar;
        }
    }
}
