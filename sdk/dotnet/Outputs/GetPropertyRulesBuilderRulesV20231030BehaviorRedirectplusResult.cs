// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20231030BehaviorRedirectplusResult
    {
        /// <summary>
        /// Specifies the redirect as a path expression starting with a `/` character relative to the current root, or as a fully qualified URL. Optionally inject variables, as in this example that refers to the original request's filename: `/path/to/{{builtin.AK_FILENAME}}`.
        /// </summary>
        public readonly string? Destination;
        /// <summary>
        /// Enables the redirect feature.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        public readonly bool? Locked;
        /// <summary>
        /// Assigns the status code for the redirect response.
        /// </summary>
        public readonly int? ResponseCode;
        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        public readonly string? TemplateUuid;
        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        public readonly string? Uuid;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20231030BehaviorRedirectplusResult(
            string? destination,

            bool? enabled,

            bool? locked,

            int? responseCode,

            string? templateUuid,

            string? uuid)
        {
            Destination = destination;
            Enabled = enabled;
            Locked = locked;
            ResponseCode = responseCode;
            TemplateUuid = templateUuid;
            Uuid = uuid;
        }
    }
}
