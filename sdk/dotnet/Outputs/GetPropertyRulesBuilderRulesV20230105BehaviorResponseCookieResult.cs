// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20230105BehaviorResponseCookieResult
    {
        /// <summary>
        /// Specifies the name of the cookie, which serves as a key to determine if the cookie is set.
        /// </summary>
        public readonly string? CookieName;
        /// <summary>
        /// When enabled, uses the default domain value, otherwise the set specified in the `domain` field.
        /// </summary>
        public readonly bool? DefaultDomain;
        /// <summary>
        /// When enabled, uses the default path value, otherwise the set specified in the `path` field.
        /// </summary>
        public readonly bool? DefaultPath;
        /// <summary>
        /// If the `defaultDomain` is disabled, this sets the domain for which the cookie is valid. For example, `example.com` makes the cookie valid for that hostname and all subdomains.
        /// </summary>
        public readonly string? Domain;
        /// <summary>
        /// If `expires` is set to `DURATION`, this sets the cookie's lifetime.
        /// </summary>
        public readonly string? Duration;
        /// <summary>
        /// Allows you to set a response cookie.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// If `expires` is set to `FIXED_DATE`, this sets when the cookie expires as a UTC date and time.
        /// </summary>
        public readonly string? ExpirationDate;
        /// <summary>
        /// Sets various ways to specify when the cookie expires.
        /// </summary>
        public readonly string? Expires;
        /// <summary>
        /// When the `type` of cookie is set to `UNIQUE`, this sets the date format.
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// When enabled, includes the `HttpOnly` attribute in the `Set-Cookie` response header to mitigate the risk of client-side scripts accessing the protected cookie, if the browser supports it.
        /// </summary>
        public readonly bool? HttpOnly;
        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        public readonly bool? Locked;
        /// <summary>
        /// If the `defaultPath` is disabled, sets the path component for which the cookie is valid.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// This option controls the `SameSite` cookie attribute that reduces the risk of cross-site request forgery attacks.
        /// </summary>
        public readonly string? SameSite;
        /// <summary>
        /// When enabled, sets the cookie's `Secure` flag to transmit it with `HTTPS`.
        /// </summary>
        public readonly bool? Secure;
        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        public readonly string? TemplateUuid;
        /// <summary>
        /// What type of value to assign.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        public readonly string? Uuid;
        /// <summary>
        /// If the cookie `type` is `FIXED`, this specifies the cookie value.
        /// </summary>
        public readonly string? Value;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20230105BehaviorResponseCookieResult(
            string? cookieName,

            bool? defaultDomain,

            bool? defaultPath,

            string? domain,

            string? duration,

            bool? enabled,

            string? expirationDate,

            string? expires,

            string? format,

            bool? httpOnly,

            bool? locked,

            string? path,

            string? sameSite,

            bool? secure,

            string? templateUuid,

            string? type,

            string? uuid,

            string? value)
        {
            CookieName = cookieName;
            DefaultDomain = defaultDomain;
            DefaultPath = defaultPath;
            Domain = domain;
            Duration = duration;
            Enabled = enabled;
            ExpirationDate = expirationDate;
            Expires = expires;
            Format = format;
            HttpOnly = httpOnly;
            Locked = locked;
            Path = path;
            SameSite = sameSite;
            Secure = secure;
            TemplateUuid = templateUuid;
            Type = type;
            Uuid = uuid;
            Value = value;
        }
    }
}
