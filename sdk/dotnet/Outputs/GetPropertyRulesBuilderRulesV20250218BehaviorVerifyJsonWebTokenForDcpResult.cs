// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetPropertyRulesBuilderRulesV20250218BehaviorVerifyJsonWebTokenForDcpResult
    {
        /// <summary>
        /// This specifies the authorization group name.
        /// </summary>
        public readonly string? Authorizations;
        /// <summary>
        /// This specifies the claim name.
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// The JWT value comes from the `X-Akamai-DCP-Token` header by default.  Enabling this option allows you to extract it from another header name that you specify.
        /// </summary>
        public readonly bool? CustomHeader;
        /// <summary>
        /// Verifies JWTs signed with the ES256 algorithm. This signature helps to ensure that the token hasn't been tampered with.
        /// </summary>
        public readonly bool? EnableEs256;
        /// <summary>
        /// Verifies JWTs signed with the RS256 algorithm. This signature helps to ensure that the token hasn't been tampered with.
        /// </summary>
        public readonly bool? EnableRs256;
        /// <summary>
        /// Allows you to extract the authorization groups stored in the JWT.
        /// </summary>
        public readonly bool? ExtractAuthorizations;
        /// <summary>
        /// Allows you to extract the client ID claim name stored in JWT.
        /// </summary>
        public readonly bool? ExtractClientId;
        /// <summary>
        /// Specifies where to get the JWT value from.
        /// </summary>
        public readonly string? ExtractLocation;
        /// <summary>
        /// Allows you to extract the user name stored in the JWT.
        /// </summary>
        public readonly bool? ExtractUserName;
        /// <summary>
        /// This specifies the name of the header to extract the JWT value from.
        /// </summary>
        public readonly string? HeaderName;
        /// <summary>
        /// An identifier for the JWT keys collection.
        /// </summary>
        public readonly string? Jwt;
        /// <summary>
        /// Indicates that your Akamai representative has locked this behavior or criteria so that you can't modify it. This option is for internal usage only.
        /// </summary>
        public readonly bool? Locked;
        /// <summary>
        /// Specifies the primary location to extract the JWT value from. If the specified option doesn't include the JWTs, the system checks the secondary one.
        /// </summary>
        public readonly string? PrimaryLocation;
        /// <summary>
        /// Specifies the name of the query parameter from which to extract the JWT value.
        /// </summary>
        public readonly string? QueryParameterName;
        /// <summary>
        /// This option is for internal usage only.
        /// </summary>
        public readonly string? TemplateUuid;
        /// <summary>
        /// This specifies the user name.
        /// </summary>
        public readonly string? UserName;
        /// <summary>
        /// A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
        /// </summary>
        public readonly string? Uuid;

        [OutputConstructor]
        private GetPropertyRulesBuilderRulesV20250218BehaviorVerifyJsonWebTokenForDcpResult(
            string? authorizations,

            string? clientId,

            bool? customHeader,

            bool? enableEs256,

            bool? enableRs256,

            bool? extractAuthorizations,

            bool? extractClientId,

            string? extractLocation,

            bool? extractUserName,

            string? headerName,

            string? jwt,

            bool? locked,

            string? primaryLocation,

            string? queryParameterName,

            string? templateUuid,

            string? userName,

            string? uuid)
        {
            Authorizations = authorizations;
            ClientId = clientId;
            CustomHeader = customHeader;
            EnableEs256 = enableEs256;
            EnableRs256 = enableRs256;
            ExtractAuthorizations = extractAuthorizations;
            ExtractClientId = extractClientId;
            ExtractLocation = extractLocation;
            ExtractUserName = extractUserName;
            HeaderName = headerName;
            Jwt = jwt;
            Locked = locked;
            PrimaryLocation = primaryLocation;
            QueryParameterName = queryParameterName;
            TemplateUuid = templateUuid;
            UserName = userName;
            Uuid = uuid;
        }
    }
}
