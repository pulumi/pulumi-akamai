// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfOrientationLandscapeCompositeResult
    {
        public readonly string? Gravity;
        public readonly string? GravityVar;
        public readonly Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfOrientationLandscapeCompositeImageResult Image;
        public readonly string? Placement;
        public readonly string? PlacementVar;
        public readonly string? Scale;
        public readonly string? ScaleDimension;
        public readonly string? ScaleDimensionVar;
        public readonly string? ScaleVar;
        public readonly string? XPosition;
        public readonly string? XPositionVar;
        public readonly string? YPosition;
        public readonly string? YPositionVar;

        [OutputConstructor]
        private GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfOrientationLandscapeCompositeResult(
            string? gravity,

            string? gravityVar,

            Outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfOrientationLandscapeCompositeImageResult image,

            string? placement,

            string? placementVar,

            string? scale,

            string? scaleDimension,

            string? scaleDimensionVar,

            string? scaleVar,

            string? xPosition,

            string? xPositionVar,

            string? yPosition,

            string? yPositionVar)
        {
            Gravity = gravity;
            GravityVar = gravityVar;
            Image = image;
            Placement = placement;
            PlacementVar = placementVar;
            Scale = scale;
            ScaleDimension = scaleDimension;
            ScaleDimensionVar = scaleDimensionVar;
            ScaleVar = scaleVar;
            XPosition = xPosition;
            XPositionVar = xPositionVar;
            YPosition = yPosition;
            YPositionVar = yPositionVar;
        }
    }
}
