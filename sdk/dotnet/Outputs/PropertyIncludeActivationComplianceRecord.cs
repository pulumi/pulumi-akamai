// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Outputs
{

    [OutputType]
    public sealed class PropertyIncludeActivationComplianceRecord
    {
        /// <summary>
        /// Provides an audit record when activating on a production network with noncompliance reason as `EMERGENCY`
        /// </summary>
        public readonly Outputs.PropertyIncludeActivationComplianceRecordNoncomplianceReasonEmergency? NoncomplianceReasonEmergency;
        /// <summary>
        /// Provides an audit record when activating on a production network with noncompliance reason as `NO_PRODUCTION_TRAFFIC`
        /// </summary>
        public readonly Outputs.PropertyIncludeActivationComplianceRecordNoncomplianceReasonNoProductionTraffic? NoncomplianceReasonNoProductionTraffic;
        /// <summary>
        /// Provides an audit record when activating on a production network with noncompliance reason as `NONE`
        /// </summary>
        public readonly Outputs.PropertyIncludeActivationComplianceRecordNoncomplianceReasonNone? NoncomplianceReasonNone;
        /// <summary>
        /// Provides an audit record when activating on a production network with noncompliance reason as `OTHER`
        /// </summary>
        public readonly Outputs.PropertyIncludeActivationComplianceRecordNoncomplianceReasonOther? NoncomplianceReasonOther;

        [OutputConstructor]
        private PropertyIncludeActivationComplianceRecord(
            Outputs.PropertyIncludeActivationComplianceRecordNoncomplianceReasonEmergency? noncomplianceReasonEmergency,

            Outputs.PropertyIncludeActivationComplianceRecordNoncomplianceReasonNoProductionTraffic? noncomplianceReasonNoProductionTraffic,

            Outputs.PropertyIncludeActivationComplianceRecordNoncomplianceReasonNone? noncomplianceReasonNone,

            Outputs.PropertyIncludeActivationComplianceRecordNoncomplianceReasonOther? noncomplianceReasonOther)
        {
            NoncomplianceReasonEmergency = noncomplianceReasonEmergency;
            NoncomplianceReasonNoProductionTraffic = noncomplianceReasonNoProductionTraffic;
            NoncomplianceReasonNone = noncomplianceReasonNone;
            NoncomplianceReasonOther = noncomplianceReasonOther;
        }
    }
}
