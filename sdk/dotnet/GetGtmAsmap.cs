// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetGtmAsmap
    {
        public static Task<GetGtmAsmapResult> InvokeAsync(GetGtmAsmapArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGtmAsmapResult>("akamai:index/getGtmAsmap:getGtmAsmap", args ?? new GetGtmAsmapArgs(), options.WithDefaults());

        public static Output<GetGtmAsmapResult> Invoke(GetGtmAsmapInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGtmAsmapResult>("akamai:index/getGtmAsmap:getGtmAsmap", args ?? new GetGtmAsmapInvokeArgs(), options.WithDefaults());

        public static Output<GetGtmAsmapResult> Invoke(GetGtmAsmapInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGtmAsmapResult>("akamai:index/getGtmAsmap:getGtmAsmap", args ?? new GetGtmAsmapInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGtmAsmapArgs : global::Pulumi.InvokeArgs
    {
        [Input("assignments")]
        private List<Inputs.GetGtmAsmapAssignmentArgs>? _assignments;
        public List<Inputs.GetGtmAsmapAssignmentArgs> Assignments
        {
            get => _assignments ?? (_assignments = new List<Inputs.GetGtmAsmapAssignmentArgs>());
            set => _assignments = value;
        }

        [Input("defaultDatacenter")]
        public Inputs.GetGtmAsmapDefaultDatacenterArgs? DefaultDatacenter { get; set; }

        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        [Input("links")]
        private List<Inputs.GetGtmAsmapLinkArgs>? _links;
        public List<Inputs.GetGtmAsmapLinkArgs> Links
        {
            get => _links ?? (_links = new List<Inputs.GetGtmAsmapLinkArgs>());
            set => _links = value;
        }

        [Input("mapName", required: true)]
        public string MapName { get; set; } = null!;

        public GetGtmAsmapArgs()
        {
        }
        public static new GetGtmAsmapArgs Empty => new GetGtmAsmapArgs();
    }

    public sealed class GetGtmAsmapInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("assignments")]
        private InputList<Inputs.GetGtmAsmapAssignmentInputArgs>? _assignments;
        public InputList<Inputs.GetGtmAsmapAssignmentInputArgs> Assignments
        {
            get => _assignments ?? (_assignments = new InputList<Inputs.GetGtmAsmapAssignmentInputArgs>());
            set => _assignments = value;
        }

        [Input("defaultDatacenter")]
        public Input<Inputs.GetGtmAsmapDefaultDatacenterInputArgs>? DefaultDatacenter { get; set; }

        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("links")]
        private InputList<Inputs.GetGtmAsmapLinkInputArgs>? _links;
        public InputList<Inputs.GetGtmAsmapLinkInputArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.GetGtmAsmapLinkInputArgs>());
            set => _links = value;
        }

        [Input("mapName", required: true)]
        public Input<string> MapName { get; set; } = null!;

        public GetGtmAsmapInvokeArgs()
        {
        }
        public static new GetGtmAsmapInvokeArgs Empty => new GetGtmAsmapInvokeArgs();
    }


    [OutputType]
    public sealed class GetGtmAsmapResult
    {
        public readonly ImmutableArray<Outputs.GetGtmAsmapAssignmentResult> Assignments;
        public readonly Outputs.GetGtmAsmapDefaultDatacenterResult? DefaultDatacenter;
        public readonly string Domain;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetGtmAsmapLinkResult> Links;
        public readonly string MapName;

        [OutputConstructor]
        private GetGtmAsmapResult(
            ImmutableArray<Outputs.GetGtmAsmapAssignmentResult> assignments,

            Outputs.GetGtmAsmapDefaultDatacenterResult? defaultDatacenter,

            string domain,

            string id,

            ImmutableArray<Outputs.GetGtmAsmapLinkResult> links,

            string mapName)
        {
            Assignments = assignments;
            DefaultDatacenter = defaultDatacenter;
            Domain = domain;
            Id = id;
            Links = links;
            MapName = mapName;
        }
    }
}
