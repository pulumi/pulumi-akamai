// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetIamRole
    {
        public static Task<GetIamRoleResult> InvokeAsync(GetIamRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIamRoleResult>("akamai:index/getIamRole:getIamRole", args ?? new GetIamRoleArgs(), options.WithDefaults());

        public static Output<GetIamRoleResult> Invoke(GetIamRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamRoleResult>("akamai:index/getIamRole:getIamRole", args ?? new GetIamRoleInvokeArgs(), options.WithDefaults());

        public static Output<GetIamRoleResult> Invoke(GetIamRoleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamRoleResult>("akamai:index/getIamRole:getIamRole", args ?? new GetIamRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIamRoleArgs : global::Pulumi.InvokeArgs
    {
        [Input("roleId", required: true)]
        public int RoleId { get; set; }

        public GetIamRoleArgs()
        {
        }
        public static new GetIamRoleArgs Empty => new GetIamRoleArgs();
    }

    public sealed class GetIamRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("roleId", required: true)]
        public Input<int> RoleId { get; set; } = null!;

        public GetIamRoleInvokeArgs()
        {
        }
        public static new GetIamRoleInvokeArgs Empty => new GetIamRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetIamRoleResult
    {
        public readonly Outputs.GetIamRoleActionsResult Actions;
        public readonly string CreatedBy;
        public readonly string CreatedDate;
        public readonly ImmutableArray<Outputs.GetIamRoleGrantedRoleResult> GrantedRoles;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ModifiedBy;
        public readonly string ModifiedDate;
        public readonly string RoleDescription;
        public readonly int RoleId;
        public readonly string RoleName;
        public readonly string Type;
        public readonly ImmutableArray<Outputs.GetIamRoleUserResult> Users;

        [OutputConstructor]
        private GetIamRoleResult(
            Outputs.GetIamRoleActionsResult actions,

            string createdBy,

            string createdDate,

            ImmutableArray<Outputs.GetIamRoleGrantedRoleResult> grantedRoles,

            string id,

            string modifiedBy,

            string modifiedDate,

            string roleDescription,

            int roleId,

            string roleName,

            string type,

            ImmutableArray<Outputs.GetIamRoleUserResult> users)
        {
            Actions = actions;
            CreatedBy = createdBy;
            CreatedDate = createdDate;
            GrantedRoles = grantedRoles;
            Id = id;
            ModifiedBy = modifiedBy;
            ModifiedDate = modifiedDate;
            RoleDescription = roleDescription;
            RoleId = roleId;
            RoleName = roleName;
            Type = type;
            Users = users;
        }
    }
}
