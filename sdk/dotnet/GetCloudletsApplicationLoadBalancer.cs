// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetCloudletsApplicationLoadBalancer
    {
        public static Task<GetCloudletsApplicationLoadBalancerResult> InvokeAsync(GetCloudletsApplicationLoadBalancerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudletsApplicationLoadBalancerResult>("akamai:index/getCloudletsApplicationLoadBalancer:getCloudletsApplicationLoadBalancer", args ?? new GetCloudletsApplicationLoadBalancerArgs(), options.WithDefaults());

        public static Output<GetCloudletsApplicationLoadBalancerResult> Invoke(GetCloudletsApplicationLoadBalancerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudletsApplicationLoadBalancerResult>("akamai:index/getCloudletsApplicationLoadBalancer:getCloudletsApplicationLoadBalancer", args ?? new GetCloudletsApplicationLoadBalancerInvokeArgs(), options.WithDefaults());

        public static Output<GetCloudletsApplicationLoadBalancerResult> Invoke(GetCloudletsApplicationLoadBalancerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudletsApplicationLoadBalancerResult>("akamai:index/getCloudletsApplicationLoadBalancer:getCloudletsApplicationLoadBalancer", args ?? new GetCloudletsApplicationLoadBalancerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudletsApplicationLoadBalancerArgs : global::Pulumi.InvokeArgs
    {
        [Input("originId", required: true)]
        public string OriginId { get; set; } = null!;

        [Input("version")]
        public int? Version { get; set; }

        public GetCloudletsApplicationLoadBalancerArgs()
        {
        }
        public static new GetCloudletsApplicationLoadBalancerArgs Empty => new GetCloudletsApplicationLoadBalancerArgs();
    }

    public sealed class GetCloudletsApplicationLoadBalancerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("originId", required: true)]
        public Input<string> OriginId { get; set; } = null!;

        [Input("version")]
        public Input<int>? Version { get; set; }

        public GetCloudletsApplicationLoadBalancerInvokeArgs()
        {
        }
        public static new GetCloudletsApplicationLoadBalancerInvokeArgs Empty => new GetCloudletsApplicationLoadBalancerInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudletsApplicationLoadBalancerResult
    {
        public readonly string BalancingType;
        public readonly string CreatedBy;
        public readonly string CreatedDate;
        public readonly ImmutableArray<Outputs.GetCloudletsApplicationLoadBalancerDataCenterResult> DataCenters;
        public readonly bool Deleted;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool Immutable;
        public readonly string LastModifiedBy;
        public readonly string LastModifiedDate;
        public readonly ImmutableArray<Outputs.GetCloudletsApplicationLoadBalancerLivenessSettingResult> LivenessSettings;
        public readonly string OriginId;
        public readonly string Type;
        public readonly int? Version;
        public readonly string Warnings;

        [OutputConstructor]
        private GetCloudletsApplicationLoadBalancerResult(
            string balancingType,

            string createdBy,

            string createdDate,

            ImmutableArray<Outputs.GetCloudletsApplicationLoadBalancerDataCenterResult> dataCenters,

            bool deleted,

            string description,

            string id,

            bool immutable,

            string lastModifiedBy,

            string lastModifiedDate,

            ImmutableArray<Outputs.GetCloudletsApplicationLoadBalancerLivenessSettingResult> livenessSettings,

            string originId,

            string type,

            int? version,

            string warnings)
        {
            BalancingType = balancingType;
            CreatedBy = createdBy;
            CreatedDate = createdDate;
            DataCenters = dataCenters;
            Deleted = deleted;
            Description = description;
            Id = id;
            Immutable = immutable;
            LastModifiedBy = lastModifiedBy;
            LastModifiedDate = lastModifiedDate;
            LivenessSettings = livenessSettings;
            OriginId = originId;
            Type = type;
            Version = version;
            Warnings = warnings;
        }
    }
}
