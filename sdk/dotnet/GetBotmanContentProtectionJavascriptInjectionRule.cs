// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetBotmanContentProtectionJavascriptInjectionRule
    {
        public static Task<GetBotmanContentProtectionJavascriptInjectionRuleResult> InvokeAsync(GetBotmanContentProtectionJavascriptInjectionRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBotmanContentProtectionJavascriptInjectionRuleResult>("akamai:index/getBotmanContentProtectionJavascriptInjectionRule:getBotmanContentProtectionJavascriptInjectionRule", args ?? new GetBotmanContentProtectionJavascriptInjectionRuleArgs(), options.WithDefaults());

        public static Output<GetBotmanContentProtectionJavascriptInjectionRuleResult> Invoke(GetBotmanContentProtectionJavascriptInjectionRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBotmanContentProtectionJavascriptInjectionRuleResult>("akamai:index/getBotmanContentProtectionJavascriptInjectionRule:getBotmanContentProtectionJavascriptInjectionRule", args ?? new GetBotmanContentProtectionJavascriptInjectionRuleInvokeArgs(), options.WithDefaults());

        public static Output<GetBotmanContentProtectionJavascriptInjectionRuleResult> Invoke(GetBotmanContentProtectionJavascriptInjectionRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBotmanContentProtectionJavascriptInjectionRuleResult>("akamai:index/getBotmanContentProtectionJavascriptInjectionRule:getBotmanContentProtectionJavascriptInjectionRule", args ?? new GetBotmanContentProtectionJavascriptInjectionRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBotmanContentProtectionJavascriptInjectionRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("configId", required: true)]
        public int ConfigId { get; set; }

        [Input("contentProtectionJavascriptInjectionRuleId")]
        public string? ContentProtectionJavascriptInjectionRuleId { get; set; }

        [Input("securityPolicyId", required: true)]
        public string SecurityPolicyId { get; set; } = null!;

        public GetBotmanContentProtectionJavascriptInjectionRuleArgs()
        {
        }
        public static new GetBotmanContentProtectionJavascriptInjectionRuleArgs Empty => new GetBotmanContentProtectionJavascriptInjectionRuleArgs();
    }

    public sealed class GetBotmanContentProtectionJavascriptInjectionRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        [Input("contentProtectionJavascriptInjectionRuleId")]
        public Input<string>? ContentProtectionJavascriptInjectionRuleId { get; set; }

        [Input("securityPolicyId", required: true)]
        public Input<string> SecurityPolicyId { get; set; } = null!;

        public GetBotmanContentProtectionJavascriptInjectionRuleInvokeArgs()
        {
        }
        public static new GetBotmanContentProtectionJavascriptInjectionRuleInvokeArgs Empty => new GetBotmanContentProtectionJavascriptInjectionRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetBotmanContentProtectionJavascriptInjectionRuleResult
    {
        public readonly int ConfigId;
        public readonly string? ContentProtectionJavascriptInjectionRuleId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly string SecurityPolicyId;

        [OutputConstructor]
        private GetBotmanContentProtectionJavascriptInjectionRuleResult(
            int configId,

            string? contentProtectionJavascriptInjectionRuleId,

            string id,

            string json,

            string securityPolicyId)
        {
            ConfigId = configId;
            ContentProtectionJavascriptInjectionRuleId = contentProtectionJavascriptInjectionRuleId;
            Id = id;
            Json = json;
            SecurityPolicyId = securityPolicyId;
        }
    }
}
