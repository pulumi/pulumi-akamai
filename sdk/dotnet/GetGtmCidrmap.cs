// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetGtmCidrmap
    {
        public static Task<GetGtmCidrmapResult> InvokeAsync(GetGtmCidrmapArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGtmCidrmapResult>("akamai:index/getGtmCidrmap:getGtmCidrmap", args ?? new GetGtmCidrmapArgs(), options.WithDefaults());

        public static Output<GetGtmCidrmapResult> Invoke(GetGtmCidrmapInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGtmCidrmapResult>("akamai:index/getGtmCidrmap:getGtmCidrmap", args ?? new GetGtmCidrmapInvokeArgs(), options.WithDefaults());

        public static Output<GetGtmCidrmapResult> Invoke(GetGtmCidrmapInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGtmCidrmapResult>("akamai:index/getGtmCidrmap:getGtmCidrmap", args ?? new GetGtmCidrmapInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGtmCidrmapArgs : global::Pulumi.InvokeArgs
    {
        [Input("assignments")]
        private List<Inputs.GetGtmCidrmapAssignmentArgs>? _assignments;
        public List<Inputs.GetGtmCidrmapAssignmentArgs> Assignments
        {
            get => _assignments ?? (_assignments = new List<Inputs.GetGtmCidrmapAssignmentArgs>());
            set => _assignments = value;
        }

        [Input("defaultDatacenter")]
        public Inputs.GetGtmCidrmapDefaultDatacenterArgs? DefaultDatacenter { get; set; }

        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        [Input("links")]
        private List<Inputs.GetGtmCidrmapLinkArgs>? _links;
        public List<Inputs.GetGtmCidrmapLinkArgs> Links
        {
            get => _links ?? (_links = new List<Inputs.GetGtmCidrmapLinkArgs>());
            set => _links = value;
        }

        [Input("mapName", required: true)]
        public string MapName { get; set; } = null!;

        public GetGtmCidrmapArgs()
        {
        }
        public static new GetGtmCidrmapArgs Empty => new GetGtmCidrmapArgs();
    }

    public sealed class GetGtmCidrmapInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("assignments")]
        private InputList<Inputs.GetGtmCidrmapAssignmentInputArgs>? _assignments;
        public InputList<Inputs.GetGtmCidrmapAssignmentInputArgs> Assignments
        {
            get => _assignments ?? (_assignments = new InputList<Inputs.GetGtmCidrmapAssignmentInputArgs>());
            set => _assignments = value;
        }

        [Input("defaultDatacenter")]
        public Input<Inputs.GetGtmCidrmapDefaultDatacenterInputArgs>? DefaultDatacenter { get; set; }

        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("links")]
        private InputList<Inputs.GetGtmCidrmapLinkInputArgs>? _links;
        public InputList<Inputs.GetGtmCidrmapLinkInputArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.GetGtmCidrmapLinkInputArgs>());
            set => _links = value;
        }

        [Input("mapName", required: true)]
        public Input<string> MapName { get; set; } = null!;

        public GetGtmCidrmapInvokeArgs()
        {
        }
        public static new GetGtmCidrmapInvokeArgs Empty => new GetGtmCidrmapInvokeArgs();
    }


    [OutputType]
    public sealed class GetGtmCidrmapResult
    {
        public readonly ImmutableArray<Outputs.GetGtmCidrmapAssignmentResult> Assignments;
        public readonly Outputs.GetGtmCidrmapDefaultDatacenterResult? DefaultDatacenter;
        public readonly string Domain;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetGtmCidrmapLinkResult> Links;
        public readonly string MapName;

        [OutputConstructor]
        private GetGtmCidrmapResult(
            ImmutableArray<Outputs.GetGtmCidrmapAssignmentResult> assignments,

            Outputs.GetGtmCidrmapDefaultDatacenterResult? defaultDatacenter,

            string domain,

            string id,

            ImmutableArray<Outputs.GetGtmCidrmapLinkResult> links,

            string mapName)
        {
            Assignments = assignments;
            DefaultDatacenter = defaultDatacenter;
            Domain = domain;
            Id = id;
            Links = links;
            MapName = mapName;
        }
    }
}
