// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetZoneDnssecStatus
    {
        public static Task<GetZoneDnssecStatusResult> InvokeAsync(GetZoneDnssecStatusArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZoneDnssecStatusResult>("akamai:index/getZoneDnssecStatus:getZoneDnssecStatus", args ?? new GetZoneDnssecStatusArgs(), options.WithDefaults());

        public static Output<GetZoneDnssecStatusResult> Invoke(GetZoneDnssecStatusInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneDnssecStatusResult>("akamai:index/getZoneDnssecStatus:getZoneDnssecStatus", args ?? new GetZoneDnssecStatusInvokeArgs(), options.WithDefaults());

        public static Output<GetZoneDnssecStatusResult> Invoke(GetZoneDnssecStatusInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneDnssecStatusResult>("akamai:index/getZoneDnssecStatus:getZoneDnssecStatus", args ?? new GetZoneDnssecStatusInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZoneDnssecStatusArgs : global::Pulumi.InvokeArgs
    {
        [Input("zone", required: true)]
        public string Zone { get; set; } = null!;

        public GetZoneDnssecStatusArgs()
        {
        }
        public static new GetZoneDnssecStatusArgs Empty => new GetZoneDnssecStatusArgs();
    }

    public sealed class GetZoneDnssecStatusInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetZoneDnssecStatusInvokeArgs()
        {
        }
        public static new GetZoneDnssecStatusInvokeArgs Empty => new GetZoneDnssecStatusInvokeArgs();
    }


    [OutputType]
    public sealed class GetZoneDnssecStatusResult
    {
        public readonly ImmutableArray<string> Alerts;
        public readonly Outputs.GetZoneDnssecStatusCurrentRecordsResult CurrentRecords;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetZoneDnssecStatusNewRecordsResult NewRecords;
        public readonly string Zone;

        [OutputConstructor]
        private GetZoneDnssecStatusResult(
            ImmutableArray<string> alerts,

            Outputs.GetZoneDnssecStatusCurrentRecordsResult currentRecords,

            string id,

            Outputs.GetZoneDnssecStatusNewRecordsResult newRecords,

            string zone)
        {
            Alerts = alerts;
            CurrentRecords = currentRecords;
            Id = id;
            NewRecords = newRecords;
            Zone = zone;
        }
    }
}
