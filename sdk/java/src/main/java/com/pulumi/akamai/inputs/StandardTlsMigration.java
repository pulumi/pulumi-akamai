// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StandardTlsMigration extends com.pulumi.resources.InvokeArgs {

    public static final StandardTlsMigration Empty = new StandardTlsMigration();

    @Import(name="allowHttpsDowngrade")
    private @Nullable Boolean allowHttpsDowngrade;

    public Optional<Boolean> allowHttpsDowngrade() {
        return Optional.ofNullable(this.allowHttpsDowngrade);
    }

    @Import(name="allowHttpsUpgrade")
    private @Nullable Boolean allowHttpsUpgrade;

    public Optional<Boolean> allowHttpsUpgrade() {
        return Optional.ofNullable(this.allowHttpsUpgrade);
    }

    @Import(name="cacheSharingDuration")
    private @Nullable Integer cacheSharingDuration;

    public Optional<Integer> cacheSharingDuration() {
        return Optional.ofNullable(this.cacheSharingDuration);
    }

    @Import(name="cacheSharingStartTime")
    private @Nullable String cacheSharingStartTime;

    public Optional<String> cacheSharingStartTime() {
        return Optional.ofNullable(this.cacheSharingStartTime);
    }

    @Import(name="enabled")
    private @Nullable Boolean enabled;

    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="isCertificateSniOnly")
    private @Nullable Boolean isCertificateSniOnly;

    public Optional<Boolean> isCertificateSniOnly() {
        return Optional.ofNullable(this.isCertificateSniOnly);
    }

    @Import(name="isTieredDistributionUsed")
    private @Nullable Boolean isTieredDistributionUsed;

    public Optional<Boolean> isTieredDistributionUsed() {
        return Optional.ofNullable(this.isTieredDistributionUsed);
    }

    @Import(name="locked")
    private @Nullable Boolean locked;

    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }

    @Import(name="migrationDuration")
    private @Nullable Integer migrationDuration;

    public Optional<Integer> migrationDuration() {
        return Optional.ofNullable(this.migrationDuration);
    }

    @Import(name="migrationFrom")
    private @Nullable String migrationFrom;

    public Optional<String> migrationFrom() {
        return Optional.ofNullable(this.migrationFrom);
    }

    @Import(name="migrationStartTime")
    private @Nullable String migrationStartTime;

    public Optional<String> migrationStartTime() {
        return Optional.ofNullable(this.migrationStartTime);
    }

    @Import(name="tdLocation")
    private @Nullable String tdLocation;

    public Optional<String> tdLocation() {
        return Optional.ofNullable(this.tdLocation);
    }

    @Import(name="templateUuid")
    private @Nullable String templateUuid;

    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    @Import(name="uuid")
    private @Nullable String uuid;

    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private StandardTlsMigration() {}

    private StandardTlsMigration(StandardTlsMigration $) {
        this.allowHttpsDowngrade = $.allowHttpsDowngrade;
        this.allowHttpsUpgrade = $.allowHttpsUpgrade;
        this.cacheSharingDuration = $.cacheSharingDuration;
        this.cacheSharingStartTime = $.cacheSharingStartTime;
        this.enabled = $.enabled;
        this.isCertificateSniOnly = $.isCertificateSniOnly;
        this.isTieredDistributionUsed = $.isTieredDistributionUsed;
        this.locked = $.locked;
        this.migrationDuration = $.migrationDuration;
        this.migrationFrom = $.migrationFrom;
        this.migrationStartTime = $.migrationStartTime;
        this.tdLocation = $.tdLocation;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StandardTlsMigration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StandardTlsMigration $;

        public Builder() {
            $ = new StandardTlsMigration();
        }

        public Builder(StandardTlsMigration defaults) {
            $ = new StandardTlsMigration(Objects.requireNonNull(defaults));
        }

        public Builder allowHttpsDowngrade(@Nullable Boolean allowHttpsDowngrade) {
            $.allowHttpsDowngrade = allowHttpsDowngrade;
            return this;
        }

        public Builder allowHttpsUpgrade(@Nullable Boolean allowHttpsUpgrade) {
            $.allowHttpsUpgrade = allowHttpsUpgrade;
            return this;
        }

        public Builder cacheSharingDuration(@Nullable Integer cacheSharingDuration) {
            $.cacheSharingDuration = cacheSharingDuration;
            return this;
        }

        public Builder cacheSharingStartTime(@Nullable String cacheSharingStartTime) {
            $.cacheSharingStartTime = cacheSharingStartTime;
            return this;
        }

        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder isCertificateSniOnly(@Nullable Boolean isCertificateSniOnly) {
            $.isCertificateSniOnly = isCertificateSniOnly;
            return this;
        }

        public Builder isTieredDistributionUsed(@Nullable Boolean isTieredDistributionUsed) {
            $.isTieredDistributionUsed = isTieredDistributionUsed;
            return this;
        }

        public Builder locked(@Nullable Boolean locked) {
            $.locked = locked;
            return this;
        }

        public Builder migrationDuration(@Nullable Integer migrationDuration) {
            $.migrationDuration = migrationDuration;
            return this;
        }

        public Builder migrationFrom(@Nullable String migrationFrom) {
            $.migrationFrom = migrationFrom;
            return this;
        }

        public Builder migrationStartTime(@Nullable String migrationStartTime) {
            $.migrationStartTime = migrationStartTime;
            return this;
        }

        public Builder tdLocation(@Nullable String tdLocation) {
            $.tdLocation = tdLocation;
            return this;
        }

        public Builder templateUuid(@Nullable String templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        public StandardTlsMigration build() {
            return $;
        }
    }

}
