// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIamTimezonesTimezone {
    /**
     * @return The description of a time zone, including the GMT +/-.
     * 
     */
    private String description;
    /**
     * @return The time zone offset from GMT.
     * 
     */
    private String offset;
    /**
     * @return The time zone posix.
     * 
     */
    private String posix;
    /**
     * @return The time zone ID.
     * 
     */
    private String timezone;

    private GetIamTimezonesTimezone() {}
    /**
     * @return The description of a time zone, including the GMT +/-.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The time zone offset from GMT.
     * 
     */
    public String offset() {
        return this.offset;
    }
    /**
     * @return The time zone posix.
     * 
     */
    public String posix() {
        return this.posix;
    }
    /**
     * @return The time zone ID.
     * 
     */
    public String timezone() {
        return this.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamTimezonesTimezone defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String offset;
        private String posix;
        private String timezone;
        public Builder() {}
        public Builder(GetIamTimezonesTimezone defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.offset = defaults.offset;
    	      this.posix = defaults.posix;
    	      this.timezone = defaults.timezone;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetIamTimezonesTimezone", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder offset(String offset) {
            if (offset == null) {
              throw new MissingRequiredPropertyException("GetIamTimezonesTimezone", "offset");
            }
            this.offset = offset;
            return this;
        }
        @CustomType.Setter
        public Builder posix(String posix) {
            if (posix == null) {
              throw new MissingRequiredPropertyException("GetIamTimezonesTimezone", "posix");
            }
            this.posix = posix;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(String timezone) {
            if (timezone == null) {
              throw new MissingRequiredPropertyException("GetIamTimezonesTimezone", "timezone");
            }
            this.timezone = timezone;
            return this;
        }
        public GetIamTimezonesTimezone build() {
            final var _resultValue = new GetIamTimezonesTimezone();
            _resultValue.description = description;
            _resultValue.offset = offset;
            _resultValue.posix = posix;
            _resultValue.timezone = timezone;
            return _resultValue;
        }
    }
}
