// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints Empty = new GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints();

    @Import(name="acceptChes")
    private @Nullable List<String> acceptChes;

    public Optional<List<String>> acceptChes() {
        return Optional.ofNullable(this.acceptChes);
    }

    @Import(name="acceptCriticalChes")
    private @Nullable List<String> acceptCriticalChes;

    public Optional<List<String>> acceptCriticalChes() {
        return Optional.ofNullable(this.acceptCriticalChes);
    }

    @Import(name="locked")
    private @Nullable Boolean locked;

    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }

    @Import(name="reset")
    private @Nullable Boolean reset;

    public Optional<Boolean> reset() {
        return Optional.ofNullable(this.reset);
    }

    @Import(name="templateUuid")
    private @Nullable String templateUuid;

    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    @Import(name="uuid")
    private @Nullable String uuid;

    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints() {}

    private GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints(GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints $) {
        this.acceptChes = $.acceptChes;
        this.acceptCriticalChes = $.acceptCriticalChes;
        this.locked = $.locked;
        this.reset = $.reset;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints();
        }

        public Builder(GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints defaults) {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints(Objects.requireNonNull(defaults));
        }

        public Builder acceptChes(@Nullable List<String> acceptChes) {
            $.acceptChes = acceptChes;
            return this;
        }

        public Builder acceptChes(String... acceptChes) {
            return acceptChes(List.of(acceptChes));
        }

        public Builder acceptCriticalChes(@Nullable List<String> acceptCriticalChes) {
            $.acceptCriticalChes = acceptCriticalChes;
            return this;
        }

        public Builder acceptCriticalChes(String... acceptCriticalChes) {
            return acceptCriticalChes(List.of(acceptCriticalChes));
        }

        public Builder locked(@Nullable Boolean locked) {
            $.locked = locked;
            return this;
        }

        public Builder reset(@Nullable Boolean reset) {
            $.reset = reset;
            return this;
        }

        public Builder templateUuid(@Nullable String templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        public GetPropertyRulesBuilderRulesV20230920BehaviorRequestClientHints build() {
            return $;
        }
    }

}
