// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudletsApplicationLoadBalancerDataCenter {
    private String city;
    private Boolean cloudServerHostHeaderOverride;
    private Boolean cloudService;
    private String continent;
    private String country;
    private String hostname;
    private Double latitude;
    private List<String> livenessHosts;
    private Double longitude;
    private String originId;
    private Double percent;
    private String stateOrProvince;

    private GetCloudletsApplicationLoadBalancerDataCenter() {}
    public String city() {
        return this.city;
    }
    public Boolean cloudServerHostHeaderOverride() {
        return this.cloudServerHostHeaderOverride;
    }
    public Boolean cloudService() {
        return this.cloudService;
    }
    public String continent() {
        return this.continent;
    }
    public String country() {
        return this.country;
    }
    public String hostname() {
        return this.hostname;
    }
    public Double latitude() {
        return this.latitude;
    }
    public List<String> livenessHosts() {
        return this.livenessHosts;
    }
    public Double longitude() {
        return this.longitude;
    }
    public String originId() {
        return this.originId;
    }
    public Double percent() {
        return this.percent;
    }
    public String stateOrProvince() {
        return this.stateOrProvince;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudletsApplicationLoadBalancerDataCenter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String city;
        private Boolean cloudServerHostHeaderOverride;
        private Boolean cloudService;
        private String continent;
        private String country;
        private String hostname;
        private Double latitude;
        private List<String> livenessHosts;
        private Double longitude;
        private String originId;
        private Double percent;
        private String stateOrProvince;
        public Builder() {}
        public Builder(GetCloudletsApplicationLoadBalancerDataCenter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.city = defaults.city;
    	      this.cloudServerHostHeaderOverride = defaults.cloudServerHostHeaderOverride;
    	      this.cloudService = defaults.cloudService;
    	      this.continent = defaults.continent;
    	      this.country = defaults.country;
    	      this.hostname = defaults.hostname;
    	      this.latitude = defaults.latitude;
    	      this.livenessHosts = defaults.livenessHosts;
    	      this.longitude = defaults.longitude;
    	      this.originId = defaults.originId;
    	      this.percent = defaults.percent;
    	      this.stateOrProvince = defaults.stateOrProvince;
        }

        @CustomType.Setter
        public Builder city(String city) {
            this.city = Objects.requireNonNull(city);
            return this;
        }
        @CustomType.Setter
        public Builder cloudServerHostHeaderOverride(Boolean cloudServerHostHeaderOverride) {
            this.cloudServerHostHeaderOverride = Objects.requireNonNull(cloudServerHostHeaderOverride);
            return this;
        }
        @CustomType.Setter
        public Builder cloudService(Boolean cloudService) {
            this.cloudService = Objects.requireNonNull(cloudService);
            return this;
        }
        @CustomType.Setter
        public Builder continent(String continent) {
            this.continent = Objects.requireNonNull(continent);
            return this;
        }
        @CustomType.Setter
        public Builder country(String country) {
            this.country = Objects.requireNonNull(country);
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        @CustomType.Setter
        public Builder latitude(Double latitude) {
            this.latitude = Objects.requireNonNull(latitude);
            return this;
        }
        @CustomType.Setter
        public Builder livenessHosts(List<String> livenessHosts) {
            this.livenessHosts = Objects.requireNonNull(livenessHosts);
            return this;
        }
        public Builder livenessHosts(String... livenessHosts) {
            return livenessHosts(List.of(livenessHosts));
        }
        @CustomType.Setter
        public Builder longitude(Double longitude) {
            this.longitude = Objects.requireNonNull(longitude);
            return this;
        }
        @CustomType.Setter
        public Builder originId(String originId) {
            this.originId = Objects.requireNonNull(originId);
            return this;
        }
        @CustomType.Setter
        public Builder percent(Double percent) {
            this.percent = Objects.requireNonNull(percent);
            return this;
        }
        @CustomType.Setter
        public Builder stateOrProvince(String stateOrProvince) {
            this.stateOrProvince = Objects.requireNonNull(stateOrProvince);
            return this;
        }
        public GetCloudletsApplicationLoadBalancerDataCenter build() {
            final var _resultValue = new GetCloudletsApplicationLoadBalancerDataCenter();
            _resultValue.city = city;
            _resultValue.cloudServerHostHeaderOverride = cloudServerHostHeaderOverride;
            _resultValue.cloudService = cloudService;
            _resultValue.continent = continent;
            _resultValue.country = country;
            _resultValue.hostname = hostname;
            _resultValue.latitude = latitude;
            _resultValue.livenessHosts = livenessHosts;
            _resultValue.longitude = longitude;
            _resultValue.originId = originId;
            _resultValue.percent = percent;
            _resultValue.stateOrProvince = stateOrProvince;
            return _resultValue;
        }
    }
}
