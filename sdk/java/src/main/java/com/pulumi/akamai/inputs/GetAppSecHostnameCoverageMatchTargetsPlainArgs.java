// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetAppSecHostnameCoverageMatchTargetsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAppSecHostnameCoverageMatchTargetsPlainArgs Empty = new GetAppSecHostnameCoverageMatchTargetsPlainArgs();

    /**
     * . (Required). Unique identifier of the security configuration associated with the hostname.
     * 
     */
    @Import(name="configId", required=true)
    private Integer configId;

    /**
     * @return . (Required). Unique identifier of the security configuration associated with the hostname.
     * 
     */
    public Integer configId() {
        return this.configId;
    }

    /**
     * . Name of the host you want to return information for. You can only return information for a single host and hostname at a time.
     * 
     */
    @Import(name="hostname", required=true)
    private String hostname;

    /**
     * @return . Name of the host you want to return information for. You can only return information for a single host and hostname at a time.
     * 
     */
    public String hostname() {
        return this.hostname;
    }

    private GetAppSecHostnameCoverageMatchTargetsPlainArgs() {}

    private GetAppSecHostnameCoverageMatchTargetsPlainArgs(GetAppSecHostnameCoverageMatchTargetsPlainArgs $) {
        this.configId = $.configId;
        this.hostname = $.hostname;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAppSecHostnameCoverageMatchTargetsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAppSecHostnameCoverageMatchTargetsPlainArgs $;

        public Builder() {
            $ = new GetAppSecHostnameCoverageMatchTargetsPlainArgs();
        }

        public Builder(GetAppSecHostnameCoverageMatchTargetsPlainArgs defaults) {
            $ = new GetAppSecHostnameCoverageMatchTargetsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId . (Required). Unique identifier of the security configuration associated with the hostname.
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param hostname . Name of the host you want to return information for. You can only return information for a single host and hostname at a time.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            $.hostname = hostname;
            return this;
        }

        public GetAppSecHostnameCoverageMatchTargetsPlainArgs build() {
            $.configId = Objects.requireNonNull($.configId, "expected parameter 'configId' to be non-null");
            $.hostname = Objects.requireNonNull($.hostname, "expected parameter 'hostname' to be non-null");
            return $;
        }
    }

}
