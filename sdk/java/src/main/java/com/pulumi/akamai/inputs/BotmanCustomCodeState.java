// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BotmanCustomCodeState extends com.pulumi.resources.ResourceArgs {

    public static final BotmanCustomCodeState Empty = new BotmanCustomCodeState();

    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    @Import(name="customCode")
    private @Nullable Output<String> customCode;

    public Optional<Output<String>> customCode() {
        return Optional.ofNullable(this.customCode);
    }

    private BotmanCustomCodeState() {}

    private BotmanCustomCodeState(BotmanCustomCodeState $) {
        this.configId = $.configId;
        this.customCode = $.customCode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotmanCustomCodeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotmanCustomCodeState $;

        public Builder() {
            $ = new BotmanCustomCodeState();
        }

        public Builder(BotmanCustomCodeState defaults) {
            $ = new BotmanCustomCodeState(Objects.requireNonNull(defaults));
        }

        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        public Builder customCode(@Nullable Output<String> customCode) {
            $.customCode = customCode;
            return this;
        }

        public Builder customCode(String customCode) {
            return customCode(Output.of(customCode));
        }

        public BotmanCustomCodeState build() {
            return $;
        }
    }

}
