// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20241021BehaviorEnforceMtlsSettings {
    /**
     * @return Specify the client certificate authority (CA) sets you want to support in client requests. Run the `List CA Sets` operation in the mTLS Edge TrustStore API to get the `setId` value and pass it in this option as a string. If a request includes a set not defined here, it will be denied. The preset list items you can select are contingent on the CA sets you&#39;ve created using the mTLS Edge Truststore, and then associated with a certificate in the `Certificate Provisioning System`.
     * 
     */
    private @Nullable List<String> certificateAuthoritySets;
    /**
     * @return Whether to require a specific mutual transport layer security (mTLS) certificate authority (CA) set in a request from a client to the edge network.
     * 
     */
    private @Nullable Boolean enableAuthSet;
    /**
     * @return This denies a request from a client that doesn&#39;t match what you&#39;ve set for the options in this behavior. When disabled, non-matching requests are allowed, but you can incorporate a custom handling operation, such as reviewing generated log entries to see the discrepancies, enable the `Client-To-Edge` authentication header, or issue a custom message.
     * 
     */
    private @Nullable Boolean enableDenyRequest;
    /**
     * @return Whether the mutual transport layer security requests from a client should use the online certificate support protocol (OCSP). OCSP can determine the x.509 certificate revocation status during the TLS handshake.
     * 
     */
    private @Nullable Boolean enableOcspStatus;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20241021BehaviorEnforceMtlsSettings() {}
    /**
     * @return Specify the client certificate authority (CA) sets you want to support in client requests. Run the `List CA Sets` operation in the mTLS Edge TrustStore API to get the `setId` value and pass it in this option as a string. If a request includes a set not defined here, it will be denied. The preset list items you can select are contingent on the CA sets you&#39;ve created using the mTLS Edge Truststore, and then associated with a certificate in the `Certificate Provisioning System`.
     * 
     */
    public List<String> certificateAuthoritySets() {
        return this.certificateAuthoritySets == null ? List.of() : this.certificateAuthoritySets;
    }
    /**
     * @return Whether to require a specific mutual transport layer security (mTLS) certificate authority (CA) set in a request from a client to the edge network.
     * 
     */
    public Optional<Boolean> enableAuthSet() {
        return Optional.ofNullable(this.enableAuthSet);
    }
    /**
     * @return This denies a request from a client that doesn&#39;t match what you&#39;ve set for the options in this behavior. When disabled, non-matching requests are allowed, but you can incorporate a custom handling operation, such as reviewing generated log entries to see the discrepancies, enable the `Client-To-Edge` authentication header, or issue a custom message.
     * 
     */
    public Optional<Boolean> enableDenyRequest() {
        return Optional.ofNullable(this.enableDenyRequest);
    }
    /**
     * @return Whether the mutual transport layer security requests from a client should use the online certificate support protocol (OCSP). OCSP can determine the x.509 certificate revocation status during the TLS handshake.
     * 
     */
    public Optional<Boolean> enableOcspStatus() {
        return Optional.ofNullable(this.enableOcspStatus);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20241021BehaviorEnforceMtlsSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> certificateAuthoritySets;
        private @Nullable Boolean enableAuthSet;
        private @Nullable Boolean enableDenyRequest;
        private @Nullable Boolean enableOcspStatus;
        private @Nullable Boolean locked;
        private @Nullable String templateUuid;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20241021BehaviorEnforceMtlsSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthoritySets = defaults.certificateAuthoritySets;
    	      this.enableAuthSet = defaults.enableAuthSet;
    	      this.enableDenyRequest = defaults.enableDenyRequest;
    	      this.enableOcspStatus = defaults.enableOcspStatus;
    	      this.locked = defaults.locked;
    	      this.templateUuid = defaults.templateUuid;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder certificateAuthoritySets(@Nullable List<String> certificateAuthoritySets) {

            this.certificateAuthoritySets = certificateAuthoritySets;
            return this;
        }
        public Builder certificateAuthoritySets(String... certificateAuthoritySets) {
            return certificateAuthoritySets(List.of(certificateAuthoritySets));
        }
        @CustomType.Setter
        public Builder enableAuthSet(@Nullable Boolean enableAuthSet) {

            this.enableAuthSet = enableAuthSet;
            return this;
        }
        @CustomType.Setter
        public Builder enableDenyRequest(@Nullable Boolean enableDenyRequest) {

            this.enableDenyRequest = enableDenyRequest;
            return this;
        }
        @CustomType.Setter
        public Builder enableOcspStatus(@Nullable Boolean enableOcspStatus) {

            this.enableOcspStatus = enableOcspStatus;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20241021BehaviorEnforceMtlsSettings build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20241021BehaviorEnforceMtlsSettings();
            _resultValue.certificateAuthoritySets = certificateAuthoritySets;
            _resultValue.enableAuthSet = enableAuthSet;
            _resultValue.enableDenyRequest = enableDenyRequest;
            _resultValue.enableOcspStatus = enableOcspStatus;
            _resultValue.locked = locked;
            _resultValue.templateUuid = templateUuid;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
