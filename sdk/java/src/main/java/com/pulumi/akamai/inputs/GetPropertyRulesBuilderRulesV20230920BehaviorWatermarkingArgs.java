// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs Empty = new GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs();

    @Import(name="abVariantLocation")
    private @Nullable Output<String> abVariantLocation;

    public Optional<Output<String>> abVariantLocation() {
        return Optional.ofNullable(this.abVariantLocation);
    }

    @Import(name="decryptionPassword1")
    private @Nullable Output<String> decryptionPassword1;

    public Optional<Output<String>> decryptionPassword1() {
        return Optional.ofNullable(this.decryptionPassword1);
    }

    @Import(name="decryptionPassword2")
    private @Nullable Output<String> decryptionPassword2;

    public Optional<Output<String>> decryptionPassword2() {
        return Optional.ofNullable(this.decryptionPassword2);
    }

    @Import(name="decryptionPasswordId1")
    private @Nullable Output<String> decryptionPasswordId1;

    public Optional<Output<String>> decryptionPasswordId1() {
        return Optional.ofNullable(this.decryptionPasswordId1);
    }

    @Import(name="decryptionPasswordId2")
    private @Nullable Output<String> decryptionPasswordId2;

    public Optional<Output<String>> decryptionPasswordId2() {
        return Optional.ofNullable(this.decryptionPasswordId2);
    }

    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    @Import(name="miscellaneousSettingsTitle")
    private @Nullable Output<String> miscellaneousSettingsTitle;

    public Optional<Output<String>> miscellaneousSettingsTitle() {
        return Optional.ofNullable(this.miscellaneousSettingsTitle);
    }

    @Import(name="patternDecryptionEnable")
    private @Nullable Output<Boolean> patternDecryptionEnable;

    public Optional<Output<Boolean>> patternDecryptionEnable() {
        return Optional.ofNullable(this.patternDecryptionEnable);
    }

    @Import(name="patternEncryptionTitle")
    private @Nullable Output<String> patternEncryptionTitle;

    public Optional<Output<String>> patternEncryptionTitle() {
        return Optional.ofNullable(this.patternEncryptionTitle);
    }

    @Import(name="signatureVerificationEnable")
    private @Nullable Output<Boolean> signatureVerificationEnable;

    public Optional<Output<Boolean>> signatureVerificationEnable() {
        return Optional.ofNullable(this.signatureVerificationEnable);
    }

    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    @Import(name="tokenSigningTitle")
    private @Nullable Output<String> tokenSigningTitle;

    public Optional<Output<String>> tokenSigningTitle() {
        return Optional.ofNullable(this.tokenSigningTitle);
    }

    @Import(name="useOriginalAsA")
    private @Nullable Output<Boolean> useOriginalAsA;

    public Optional<Output<Boolean>> useOriginalAsA() {
        return Optional.ofNullable(this.useOriginalAsA);
    }

    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    @Import(name="verificationKeyId1")
    private @Nullable Output<String> verificationKeyId1;

    public Optional<Output<String>> verificationKeyId1() {
        return Optional.ofNullable(this.verificationKeyId1);
    }

    @Import(name="verificationKeyId2")
    private @Nullable Output<String> verificationKeyId2;

    public Optional<Output<String>> verificationKeyId2() {
        return Optional.ofNullable(this.verificationKeyId2);
    }

    @Import(name="verificationPublicKey1")
    private @Nullable Output<String> verificationPublicKey1;

    public Optional<Output<String>> verificationPublicKey1() {
        return Optional.ofNullable(this.verificationPublicKey1);
    }

    @Import(name="verificationPublicKey2")
    private @Nullable Output<String> verificationPublicKey2;

    public Optional<Output<String>> verificationPublicKey2() {
        return Optional.ofNullable(this.verificationPublicKey2);
    }

    private GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs() {}

    private GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs(GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs $) {
        this.abVariantLocation = $.abVariantLocation;
        this.decryptionPassword1 = $.decryptionPassword1;
        this.decryptionPassword2 = $.decryptionPassword2;
        this.decryptionPasswordId1 = $.decryptionPasswordId1;
        this.decryptionPasswordId2 = $.decryptionPasswordId2;
        this.enable = $.enable;
        this.locked = $.locked;
        this.miscellaneousSettingsTitle = $.miscellaneousSettingsTitle;
        this.patternDecryptionEnable = $.patternDecryptionEnable;
        this.patternEncryptionTitle = $.patternEncryptionTitle;
        this.signatureVerificationEnable = $.signatureVerificationEnable;
        this.templateUuid = $.templateUuid;
        this.tokenSigningTitle = $.tokenSigningTitle;
        this.useOriginalAsA = $.useOriginalAsA;
        this.uuid = $.uuid;
        this.verificationKeyId1 = $.verificationKeyId1;
        this.verificationKeyId2 = $.verificationKeyId2;
        this.verificationPublicKey1 = $.verificationPublicKey1;
        this.verificationPublicKey2 = $.verificationPublicKey2;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs(Objects.requireNonNull(defaults));
        }

        public Builder abVariantLocation(@Nullable Output<String> abVariantLocation) {
            $.abVariantLocation = abVariantLocation;
            return this;
        }

        public Builder abVariantLocation(String abVariantLocation) {
            return abVariantLocation(Output.of(abVariantLocation));
        }

        public Builder decryptionPassword1(@Nullable Output<String> decryptionPassword1) {
            $.decryptionPassword1 = decryptionPassword1;
            return this;
        }

        public Builder decryptionPassword1(String decryptionPassword1) {
            return decryptionPassword1(Output.of(decryptionPassword1));
        }

        public Builder decryptionPassword2(@Nullable Output<String> decryptionPassword2) {
            $.decryptionPassword2 = decryptionPassword2;
            return this;
        }

        public Builder decryptionPassword2(String decryptionPassword2) {
            return decryptionPassword2(Output.of(decryptionPassword2));
        }

        public Builder decryptionPasswordId1(@Nullable Output<String> decryptionPasswordId1) {
            $.decryptionPasswordId1 = decryptionPasswordId1;
            return this;
        }

        public Builder decryptionPasswordId1(String decryptionPasswordId1) {
            return decryptionPasswordId1(Output.of(decryptionPasswordId1));
        }

        public Builder decryptionPasswordId2(@Nullable Output<String> decryptionPasswordId2) {
            $.decryptionPasswordId2 = decryptionPasswordId2;
            return this;
        }

        public Builder decryptionPasswordId2(String decryptionPasswordId2) {
            return decryptionPasswordId2(Output.of(decryptionPasswordId2));
        }

        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        public Builder miscellaneousSettingsTitle(@Nullable Output<String> miscellaneousSettingsTitle) {
            $.miscellaneousSettingsTitle = miscellaneousSettingsTitle;
            return this;
        }

        public Builder miscellaneousSettingsTitle(String miscellaneousSettingsTitle) {
            return miscellaneousSettingsTitle(Output.of(miscellaneousSettingsTitle));
        }

        public Builder patternDecryptionEnable(@Nullable Output<Boolean> patternDecryptionEnable) {
            $.patternDecryptionEnable = patternDecryptionEnable;
            return this;
        }

        public Builder patternDecryptionEnable(Boolean patternDecryptionEnable) {
            return patternDecryptionEnable(Output.of(patternDecryptionEnable));
        }

        public Builder patternEncryptionTitle(@Nullable Output<String> patternEncryptionTitle) {
            $.patternEncryptionTitle = patternEncryptionTitle;
            return this;
        }

        public Builder patternEncryptionTitle(String patternEncryptionTitle) {
            return patternEncryptionTitle(Output.of(patternEncryptionTitle));
        }

        public Builder signatureVerificationEnable(@Nullable Output<Boolean> signatureVerificationEnable) {
            $.signatureVerificationEnable = signatureVerificationEnable;
            return this;
        }

        public Builder signatureVerificationEnable(Boolean signatureVerificationEnable) {
            return signatureVerificationEnable(Output.of(signatureVerificationEnable));
        }

        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        public Builder tokenSigningTitle(@Nullable Output<String> tokenSigningTitle) {
            $.tokenSigningTitle = tokenSigningTitle;
            return this;
        }

        public Builder tokenSigningTitle(String tokenSigningTitle) {
            return tokenSigningTitle(Output.of(tokenSigningTitle));
        }

        public Builder useOriginalAsA(@Nullable Output<Boolean> useOriginalAsA) {
            $.useOriginalAsA = useOriginalAsA;
            return this;
        }

        public Builder useOriginalAsA(Boolean useOriginalAsA) {
            return useOriginalAsA(Output.of(useOriginalAsA));
        }

        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public Builder verificationKeyId1(@Nullable Output<String> verificationKeyId1) {
            $.verificationKeyId1 = verificationKeyId1;
            return this;
        }

        public Builder verificationKeyId1(String verificationKeyId1) {
            return verificationKeyId1(Output.of(verificationKeyId1));
        }

        public Builder verificationKeyId2(@Nullable Output<String> verificationKeyId2) {
            $.verificationKeyId2 = verificationKeyId2;
            return this;
        }

        public Builder verificationKeyId2(String verificationKeyId2) {
            return verificationKeyId2(Output.of(verificationKeyId2));
        }

        public Builder verificationPublicKey1(@Nullable Output<String> verificationPublicKey1) {
            $.verificationPublicKey1 = verificationPublicKey1;
            return this;
        }

        public Builder verificationPublicKey1(String verificationPublicKey1) {
            return verificationPublicKey1(Output.of(verificationPublicKey1));
        }

        public Builder verificationPublicKey2(@Nullable Output<String> verificationPublicKey2) {
            $.verificationPublicKey2 = verificationPublicKey2;
            return this;
        }

        public Builder verificationPublicKey2(String verificationPublicKey2) {
            return verificationPublicKey2(Output.of(verificationPublicKey2));
        }

        public GetPropertyRulesBuilderRulesV20230920BehaviorWatermarkingArgs build() {
            return $;
        }
    }

}
