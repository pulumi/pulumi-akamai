// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeGoop {
    private @Nullable String chaos;
    private @Nullable String chaosVar;
    private @Nullable String density;
    private @Nullable String densityVar;
    private @Nullable String power;
    private @Nullable String powerVar;
    private @Nullable String seed;
    private @Nullable String seedVar;

    private GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeGoop() {}
    public Optional<String> chaos() {
        return Optional.ofNullable(this.chaos);
    }
    public Optional<String> chaosVar() {
        return Optional.ofNullable(this.chaosVar);
    }
    public Optional<String> density() {
        return Optional.ofNullable(this.density);
    }
    public Optional<String> densityVar() {
        return Optional.ofNullable(this.densityVar);
    }
    public Optional<String> power() {
        return Optional.ofNullable(this.power);
    }
    public Optional<String> powerVar() {
        return Optional.ofNullable(this.powerVar);
    }
    public Optional<String> seed() {
        return Optional.ofNullable(this.seed);
    }
    public Optional<String> seedVar() {
        return Optional.ofNullable(this.seedVar);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeGoop defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String chaos;
        private @Nullable String chaosVar;
        private @Nullable String density;
        private @Nullable String densityVar;
        private @Nullable String power;
        private @Nullable String powerVar;
        private @Nullable String seed;
        private @Nullable String seedVar;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeGoop defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chaos = defaults.chaos;
    	      this.chaosVar = defaults.chaosVar;
    	      this.density = defaults.density;
    	      this.densityVar = defaults.densityVar;
    	      this.power = defaults.power;
    	      this.powerVar = defaults.powerVar;
    	      this.seed = defaults.seed;
    	      this.seedVar = defaults.seedVar;
        }

        @CustomType.Setter
        public Builder chaos(@Nullable String chaos) {
            this.chaos = chaos;
            return this;
        }
        @CustomType.Setter
        public Builder chaosVar(@Nullable String chaosVar) {
            this.chaosVar = chaosVar;
            return this;
        }
        @CustomType.Setter
        public Builder density(@Nullable String density) {
            this.density = density;
            return this;
        }
        @CustomType.Setter
        public Builder densityVar(@Nullable String densityVar) {
            this.densityVar = densityVar;
            return this;
        }
        @CustomType.Setter
        public Builder power(@Nullable String power) {
            this.power = power;
            return this;
        }
        @CustomType.Setter
        public Builder powerVar(@Nullable String powerVar) {
            this.powerVar = powerVar;
            return this;
        }
        @CustomType.Setter
        public Builder seed(@Nullable String seed) {
            this.seed = seed;
            return this;
        }
        @CustomType.Setter
        public Builder seedVar(@Nullable String seedVar) {
            this.seedVar = seedVar;
            return this;
        }
        public GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeGoop build() {
            final var o = new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeGoop();
            o.chaos = chaos;
            o.chaosVar = chaosVar;
            o.density = density;
            o.densityVar = densityVar;
            o.power = power;
            o.powerVar = powerVar;
            o.seed = seed;
            o.seedVar = seedVar;
            return o;
        }
    }
}
