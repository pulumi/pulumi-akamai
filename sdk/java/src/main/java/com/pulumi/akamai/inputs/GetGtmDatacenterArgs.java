// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetGtmDatacenterArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGtmDatacenterArgs Empty = new GetGtmDatacenterArgs();

    @Import(name="datacenterId", required=true)
    private Output<Integer> datacenterId;

    public Output<Integer> datacenterId() {
        return this.datacenterId;
    }

    @Import(name="domain", required=true)
    private Output<String> domain;

    public Output<String> domain() {
        return this.domain;
    }

    private GetGtmDatacenterArgs() {}

    private GetGtmDatacenterArgs(GetGtmDatacenterArgs $) {
        this.datacenterId = $.datacenterId;
        this.domain = $.domain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGtmDatacenterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGtmDatacenterArgs $;

        public Builder() {
            $ = new GetGtmDatacenterArgs();
        }

        public Builder(GetGtmDatacenterArgs defaults) {
            $ = new GetGtmDatacenterArgs(Objects.requireNonNull(defaults));
        }

        public Builder datacenterId(Output<Integer> datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        public Builder datacenterId(Integer datacenterId) {
            return datacenterId(Output.of(datacenterId));
        }

        public Builder domain(Output<String> domain) {
            $.domain = domain;
            return this;
        }

        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        public GetGtmDatacenterArgs build() {
            $.datacenterId = Objects.requireNonNull($.datacenterId, "expected parameter 'datacenterId' to be non-null");
            $.domain = Objects.requireNonNull($.domain, "expected parameter 'domain' to be non-null");
            return $;
        }
    }

}
