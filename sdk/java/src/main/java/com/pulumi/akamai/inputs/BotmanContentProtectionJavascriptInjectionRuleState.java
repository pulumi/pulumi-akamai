// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BotmanContentProtectionJavascriptInjectionRuleState extends com.pulumi.resources.ResourceArgs {

    public static final BotmanContentProtectionJavascriptInjectionRuleState Empty = new BotmanContentProtectionJavascriptInjectionRuleState();

    /**
     * Unique identifier of the security configuration
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return Unique identifier of the security configuration
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * The content protection JavaScript injection rule
     * 
     */
    @Import(name="contentProtectionJavascriptInjectionRule")
    private @Nullable Output<String> contentProtectionJavascriptInjectionRule;

    /**
     * @return The content protection JavaScript injection rule
     * 
     */
    public Optional<Output<String>> contentProtectionJavascriptInjectionRule() {
        return Optional.ofNullable(this.contentProtectionJavascriptInjectionRule);
    }

    /**
     * Unique identifier of a content protection JavaScript injection rule
     * 
     */
    @Import(name="contentProtectionJavascriptInjectionRuleId")
    private @Nullable Output<String> contentProtectionJavascriptInjectionRuleId;

    /**
     * @return Unique identifier of a content protection JavaScript injection rule
     * 
     */
    public Optional<Output<String>> contentProtectionJavascriptInjectionRuleId() {
        return Optional.ofNullable(this.contentProtectionJavascriptInjectionRuleId);
    }

    /**
     * Unique identifier of the security policy
     * 
     */
    @Import(name="securityPolicyId")
    private @Nullable Output<String> securityPolicyId;

    /**
     * @return Unique identifier of the security policy
     * 
     */
    public Optional<Output<String>> securityPolicyId() {
        return Optional.ofNullable(this.securityPolicyId);
    }

    private BotmanContentProtectionJavascriptInjectionRuleState() {}

    private BotmanContentProtectionJavascriptInjectionRuleState(BotmanContentProtectionJavascriptInjectionRuleState $) {
        this.configId = $.configId;
        this.contentProtectionJavascriptInjectionRule = $.contentProtectionJavascriptInjectionRule;
        this.contentProtectionJavascriptInjectionRuleId = $.contentProtectionJavascriptInjectionRuleId;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotmanContentProtectionJavascriptInjectionRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotmanContentProtectionJavascriptInjectionRuleState $;

        public Builder() {
            $ = new BotmanContentProtectionJavascriptInjectionRuleState();
        }

        public Builder(BotmanContentProtectionJavascriptInjectionRuleState defaults) {
            $ = new BotmanContentProtectionJavascriptInjectionRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param contentProtectionJavascriptInjectionRule The content protection JavaScript injection rule
         * 
         * @return builder
         * 
         */
        public Builder contentProtectionJavascriptInjectionRule(@Nullable Output<String> contentProtectionJavascriptInjectionRule) {
            $.contentProtectionJavascriptInjectionRule = contentProtectionJavascriptInjectionRule;
            return this;
        }

        /**
         * @param contentProtectionJavascriptInjectionRule The content protection JavaScript injection rule
         * 
         * @return builder
         * 
         */
        public Builder contentProtectionJavascriptInjectionRule(String contentProtectionJavascriptInjectionRule) {
            return contentProtectionJavascriptInjectionRule(Output.of(contentProtectionJavascriptInjectionRule));
        }

        /**
         * @param contentProtectionJavascriptInjectionRuleId Unique identifier of a content protection JavaScript injection rule
         * 
         * @return builder
         * 
         */
        public Builder contentProtectionJavascriptInjectionRuleId(@Nullable Output<String> contentProtectionJavascriptInjectionRuleId) {
            $.contentProtectionJavascriptInjectionRuleId = contentProtectionJavascriptInjectionRuleId;
            return this;
        }

        /**
         * @param contentProtectionJavascriptInjectionRuleId Unique identifier of a content protection JavaScript injection rule
         * 
         * @return builder
         * 
         */
        public Builder contentProtectionJavascriptInjectionRuleId(String contentProtectionJavascriptInjectionRuleId) {
            return contentProtectionJavascriptInjectionRuleId(Output.of(contentProtectionJavascriptInjectionRuleId));
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(@Nullable Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        public BotmanContentProtectionJavascriptInjectionRuleState build() {
            return $;
        }
    }

}
