// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlCloudletPolicyArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlNetStorageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs Empty = new GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs();

    /**
     * Specifies the full path of the branded 403 page, including the filename, but excluding the NetStorage CP code path component.
     * 
     */
    @Import(name="branded403File")
    private @Nullable Output<String> branded403File;

    /**
     * @return Specifies the full path of the branded 403 page, including the filename, but excluding the NetStorage CP code path component.
     * 
     */
    public Optional<Output<String>> branded403File() {
        return Optional.ofNullable(this.branded403File);
    }

    /**
     * Specifies the response status code for the branded deny action.
     * 
     */
    @Import(name="branded403StatusCode")
    private @Nullable Output<Integer> branded403StatusCode;

    /**
     * @return Specifies the response status code for the branded deny action.
     * 
     */
    public Optional<Output<Integer>> branded403StatusCode() {
        return Optional.ofNullable(this.branded403StatusCode);
    }

    /**
     * Specifies the redirect URL for the branded deny action.
     * 
     */
    @Import(name="branded403Url")
    private @Nullable Output<String> branded403Url;

    /**
     * @return Specifies the redirect URL for the branded deny action.
     * 
     */
    public Optional<Output<String>> branded403Url() {
        return Optional.ofNullable(this.branded403Url);
    }

    /**
     * Specifies the branded response page&#39;s time to live in the cache, `5` minutes by default.
     * 
     */
    @Import(name="brandedDenyCacheTtl")
    private @Nullable Output<Integer> brandedDenyCacheTtl;

    /**
     * @return Specifies the branded response page&#39;s time to live in the cache, `5` minutes by default.
     * 
     */
    public Optional<Output<Integer>> brandedDenyCacheTtl() {
        return Optional.ofNullable(this.brandedDenyCacheTtl);
    }

    /**
     * Identifies the Cloudlet policy.
     * 
     */
    @Import(name="cloudletPolicy")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlCloudletPolicyArgs> cloudletPolicy;

    /**
     * @return Identifies the Cloudlet policy.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlCloudletPolicyArgs>> cloudletPolicy() {
        return Optional.ofNullable(this.cloudletPolicy);
    }

    /**
     * Identifies the Cloudlet shared policy to use with this behavior. Use the `Cloudlets API` to list available shared policies.
     * 
     */
    @Import(name="cloudletSharedPolicy")
    private @Nullable Output<Integer> cloudletSharedPolicy;

    /**
     * @return Identifies the Cloudlet shared policy to use with this behavior. Use the `Cloudlets API` to list available shared policies.
     * 
     */
    public Optional<Output<Integer>> cloudletSharedPolicy() {
        return Optional.ofNullable(this.cloudletSharedPolicy);
    }

    /**
     * If enabled, serves a branded 403 page for this Cloudlet instance.
     * 
     */
    @Import(name="enableBranded403")
    private @Nullable Output<Boolean> enableBranded403;

    /**
     * @return If enabled, serves a branded 403 page for this Cloudlet instance.
     * 
     */
    public Optional<Output<Boolean>> enableBranded403() {
        return Optional.ofNullable(this.enableBranded403);
    }

    /**
     * Enables the Request Control Cloudlet.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enables the Request Control Cloudlet.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Whether you want to apply the Cloudlet shared policy to an unlimited number of properties within your account. Learn more about shared policies and how to create them in `Cloudlets Policy Manager`.
     * 
     */
    @Import(name="isSharedPolicy")
    private @Nullable Output<Boolean> isSharedPolicy;

    /**
     * @return Whether you want to apply the Cloudlet shared policy to an unlimited number of properties within your account. Learn more about shared policies and how to create them in `Cloudlets Policy Manager`.
     * 
     */
    public Optional<Output<Boolean>> isSharedPolicy() {
        return Optional.ofNullable(this.isSharedPolicy);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Specifies the NetStorage domain that contains the branded 403 page.
     * 
     */
    @Import(name="netStorage")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlNetStorageArgs> netStorage;

    /**
     * @return Specifies the NetStorage domain that contains the branded 403 page.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlNetStorageArgs>> netStorage() {
        return Optional.ofNullable(this.netStorage);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs() {}

    private GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs(GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs $) {
        this.branded403File = $.branded403File;
        this.branded403StatusCode = $.branded403StatusCode;
        this.branded403Url = $.branded403Url;
        this.brandedDenyCacheTtl = $.brandedDenyCacheTtl;
        this.cloudletPolicy = $.cloudletPolicy;
        this.cloudletSharedPolicy = $.cloudletSharedPolicy;
        this.enableBranded403 = $.enableBranded403;
        this.enabled = $.enabled;
        this.isSharedPolicy = $.isSharedPolicy;
        this.locked = $.locked;
        this.netStorage = $.netStorage;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param branded403File Specifies the full path of the branded 403 page, including the filename, but excluding the NetStorage CP code path component.
         * 
         * @return builder
         * 
         */
        public Builder branded403File(@Nullable Output<String> branded403File) {
            $.branded403File = branded403File;
            return this;
        }

        /**
         * @param branded403File Specifies the full path of the branded 403 page, including the filename, but excluding the NetStorage CP code path component.
         * 
         * @return builder
         * 
         */
        public Builder branded403File(String branded403File) {
            return branded403File(Output.of(branded403File));
        }

        /**
         * @param branded403StatusCode Specifies the response status code for the branded deny action.
         * 
         * @return builder
         * 
         */
        public Builder branded403StatusCode(@Nullable Output<Integer> branded403StatusCode) {
            $.branded403StatusCode = branded403StatusCode;
            return this;
        }

        /**
         * @param branded403StatusCode Specifies the response status code for the branded deny action.
         * 
         * @return builder
         * 
         */
        public Builder branded403StatusCode(Integer branded403StatusCode) {
            return branded403StatusCode(Output.of(branded403StatusCode));
        }

        /**
         * @param branded403Url Specifies the redirect URL for the branded deny action.
         * 
         * @return builder
         * 
         */
        public Builder branded403Url(@Nullable Output<String> branded403Url) {
            $.branded403Url = branded403Url;
            return this;
        }

        /**
         * @param branded403Url Specifies the redirect URL for the branded deny action.
         * 
         * @return builder
         * 
         */
        public Builder branded403Url(String branded403Url) {
            return branded403Url(Output.of(branded403Url));
        }

        /**
         * @param brandedDenyCacheTtl Specifies the branded response page&#39;s time to live in the cache, `5` minutes by default.
         * 
         * @return builder
         * 
         */
        public Builder brandedDenyCacheTtl(@Nullable Output<Integer> brandedDenyCacheTtl) {
            $.brandedDenyCacheTtl = brandedDenyCacheTtl;
            return this;
        }

        /**
         * @param brandedDenyCacheTtl Specifies the branded response page&#39;s time to live in the cache, `5` minutes by default.
         * 
         * @return builder
         * 
         */
        public Builder brandedDenyCacheTtl(Integer brandedDenyCacheTtl) {
            return brandedDenyCacheTtl(Output.of(brandedDenyCacheTtl));
        }

        /**
         * @param cloudletPolicy Identifies the Cloudlet policy.
         * 
         * @return builder
         * 
         */
        public Builder cloudletPolicy(@Nullable Output<GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlCloudletPolicyArgs> cloudletPolicy) {
            $.cloudletPolicy = cloudletPolicy;
            return this;
        }

        /**
         * @param cloudletPolicy Identifies the Cloudlet policy.
         * 
         * @return builder
         * 
         */
        public Builder cloudletPolicy(GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlCloudletPolicyArgs cloudletPolicy) {
            return cloudletPolicy(Output.of(cloudletPolicy));
        }

        /**
         * @param cloudletSharedPolicy Identifies the Cloudlet shared policy to use with this behavior. Use the `Cloudlets API` to list available shared policies.
         * 
         * @return builder
         * 
         */
        public Builder cloudletSharedPolicy(@Nullable Output<Integer> cloudletSharedPolicy) {
            $.cloudletSharedPolicy = cloudletSharedPolicy;
            return this;
        }

        /**
         * @param cloudletSharedPolicy Identifies the Cloudlet shared policy to use with this behavior. Use the `Cloudlets API` to list available shared policies.
         * 
         * @return builder
         * 
         */
        public Builder cloudletSharedPolicy(Integer cloudletSharedPolicy) {
            return cloudletSharedPolicy(Output.of(cloudletSharedPolicy));
        }

        /**
         * @param enableBranded403 If enabled, serves a branded 403 page for this Cloudlet instance.
         * 
         * @return builder
         * 
         */
        public Builder enableBranded403(@Nullable Output<Boolean> enableBranded403) {
            $.enableBranded403 = enableBranded403;
            return this;
        }

        /**
         * @param enableBranded403 If enabled, serves a branded 403 page for this Cloudlet instance.
         * 
         * @return builder
         * 
         */
        public Builder enableBranded403(Boolean enableBranded403) {
            return enableBranded403(Output.of(enableBranded403));
        }

        /**
         * @param enabled Enables the Request Control Cloudlet.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enables the Request Control Cloudlet.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param isSharedPolicy Whether you want to apply the Cloudlet shared policy to an unlimited number of properties within your account. Learn more about shared policies and how to create them in `Cloudlets Policy Manager`.
         * 
         * @return builder
         * 
         */
        public Builder isSharedPolicy(@Nullable Output<Boolean> isSharedPolicy) {
            $.isSharedPolicy = isSharedPolicy;
            return this;
        }

        /**
         * @param isSharedPolicy Whether you want to apply the Cloudlet shared policy to an unlimited number of properties within your account. Learn more about shared policies and how to create them in `Cloudlets Policy Manager`.
         * 
         * @return builder
         * 
         */
        public Builder isSharedPolicy(Boolean isSharedPolicy) {
            return isSharedPolicy(Output.of(isSharedPolicy));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param netStorage Specifies the NetStorage domain that contains the branded 403 page.
         * 
         * @return builder
         * 
         */
        public Builder netStorage(@Nullable Output<GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlNetStorageArgs> netStorage) {
            $.netStorage = netStorage;
            return this;
        }

        /**
         * @param netStorage Specifies the NetStorage domain that contains the branded 403 page.
         * 
         * @return builder
         * 
         */
        public Builder netStorage(GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlNetStorageArgs netStorage) {
            return netStorage(Output.of(netStorage));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20241021BehaviorRequestControlArgs build() {
            return $;
        }
    }

}
