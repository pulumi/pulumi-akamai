// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings;
import com.pulumi.akamai.inputs.GetCloudletsAudienceSegmentationMatchRuleMatchRuleMatch;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudletsAudienceSegmentationMatchRuleMatchRule extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudletsAudienceSegmentationMatchRuleMatchRule Empty = new GetCloudletsAudienceSegmentationMatchRuleMatchRule();

    /**
     * If set to true, disables a rule so it is not evaluated against incoming requests.
     * 
     */
    @Import(name="disabled")
    private @Nullable Boolean disabled;

    /**
     * @return If set to true, disables a rule so it is not evaluated against incoming requests.
     * 
     */
    public Optional<Boolean> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * The end time for this match (in seconds since the epoch)
     * 
     */
    @Import(name="end")
    private @Nullable Integer end;

    /**
     * @return The end time for this match (in seconds since the epoch)
     * 
     */
    public Optional<Integer> end() {
        return Optional.ofNullable(this.end);
    }

    /**
     * This property defines data used to construct a new request URL if all conditions are met. If all of the conditions you set are true, then the Edge Server returns an HTTP response from the rewritten URL
     * 
     */
    @Import(name="forwardSettings", required=true)
    private GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings forwardSettings;

    /**
     * @return This property defines data used to construct a new request URL if all conditions are met. If all of the conditions you set are true, then the Edge Server returns an HTTP response from the rewritten URL
     * 
     */
    public GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings forwardSettings() {
        return this.forwardSettings;
    }

    /**
     * If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request
     * 
     */
    @Import(name="matchUrl")
    private @Nullable String matchUrl;

    /**
     * @return If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request
     * 
     */
    public Optional<String> matchUrl() {
        return Optional.ofNullable(this.matchUrl);
    }

    /**
     * Defines a set of match objects
     * 
     */
    @Import(name="matches")
    private @Nullable List<GetCloudletsAudienceSegmentationMatchRuleMatchRuleMatch> matches;

    /**
     * @return Defines a set of match objects
     * 
     */
    public Optional<List<GetCloudletsAudienceSegmentationMatchRuleMatchRuleMatch>> matches() {
        return Optional.ofNullable(this.matches);
    }

    /**
     * The name of the rule
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the rule
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The start time for this match (in seconds since the epoch)
     * 
     */
    @Import(name="start")
    private @Nullable Integer start;

    /**
     * @return The start time for this match (in seconds since the epoch)
     * 
     */
    public Optional<Integer> start() {
        return Optional.ofNullable(this.start);
    }

    /**
     * The type of Cloudlet the rule is for
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of Cloudlet the rule is for
     * 
     */
    public String type() {
        return this.type;
    }

    private GetCloudletsAudienceSegmentationMatchRuleMatchRule() {}

    private GetCloudletsAudienceSegmentationMatchRuleMatchRule(GetCloudletsAudienceSegmentationMatchRuleMatchRule $) {
        this.disabled = $.disabled;
        this.end = $.end;
        this.forwardSettings = $.forwardSettings;
        this.matchUrl = $.matchUrl;
        this.matches = $.matches;
        this.name = $.name;
        this.start = $.start;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudletsAudienceSegmentationMatchRuleMatchRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudletsAudienceSegmentationMatchRuleMatchRule $;

        public Builder() {
            $ = new GetCloudletsAudienceSegmentationMatchRuleMatchRule();
        }

        public Builder(GetCloudletsAudienceSegmentationMatchRuleMatchRule defaults) {
            $ = new GetCloudletsAudienceSegmentationMatchRuleMatchRule(Objects.requireNonNull(defaults));
        }

        /**
         * @param disabled If set to true, disables a rule so it is not evaluated against incoming requests.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Boolean disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param end The end time for this match (in seconds since the epoch)
         * 
         * @return builder
         * 
         */
        public Builder end(@Nullable Integer end) {
            $.end = end;
            return this;
        }

        /**
         * @param forwardSettings This property defines data used to construct a new request URL if all conditions are met. If all of the conditions you set are true, then the Edge Server returns an HTTP response from the rewritten URL
         * 
         * @return builder
         * 
         */
        public Builder forwardSettings(GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings forwardSettings) {
            $.forwardSettings = forwardSettings;
            return this;
        }

        /**
         * @param matchUrl If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request
         * 
         * @return builder
         * 
         */
        public Builder matchUrl(@Nullable String matchUrl) {
            $.matchUrl = matchUrl;
            return this;
        }

        /**
         * @param matches Defines a set of match objects
         * 
         * @return builder
         * 
         */
        public Builder matches(@Nullable List<GetCloudletsAudienceSegmentationMatchRuleMatchRuleMatch> matches) {
            $.matches = matches;
            return this;
        }

        /**
         * @param matches Defines a set of match objects
         * 
         * @return builder
         * 
         */
        public Builder matches(GetCloudletsAudienceSegmentationMatchRuleMatchRuleMatch... matches) {
            return matches(List.of(matches));
        }

        /**
         * @param name The name of the rule
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param start The start time for this match (in seconds since the epoch)
         * 
         * @return builder
         * 
         */
        public Builder start(@Nullable Integer start) {
            $.start = start;
            return this;
        }

        /**
         * @param type The type of Cloudlet the rule is for
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetCloudletsAudienceSegmentationMatchRuleMatchRule build() {
            if ($.forwardSettings == null) {
                throw new MissingRequiredPropertyException("GetCloudletsAudienceSegmentationMatchRuleMatchRule", "forwardSettings");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetCloudletsAudienceSegmentationMatchRuleMatchRule", "type");
            }
            return $;
        }
    }

}
