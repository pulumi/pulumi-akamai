// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMtlskeystoreClientCertificateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMtlskeystoreClientCertificateArgs Empty = new GetMtlskeystoreClientCertificateArgs();

    @Import(name="certificateId", required=true)
    private Output<Integer> certificateId;

    public Output<Integer> certificateId() {
        return this.certificateId;
    }

    @Import(name="includeAssociatedProperties")
    private @Nullable Output<Boolean> includeAssociatedProperties;

    public Optional<Output<Boolean>> includeAssociatedProperties() {
        return Optional.ofNullable(this.includeAssociatedProperties);
    }

    private GetMtlskeystoreClientCertificateArgs() {}

    private GetMtlskeystoreClientCertificateArgs(GetMtlskeystoreClientCertificateArgs $) {
        this.certificateId = $.certificateId;
        this.includeAssociatedProperties = $.includeAssociatedProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMtlskeystoreClientCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMtlskeystoreClientCertificateArgs $;

        public Builder() {
            $ = new GetMtlskeystoreClientCertificateArgs();
        }

        public Builder(GetMtlskeystoreClientCertificateArgs defaults) {
            $ = new GetMtlskeystoreClientCertificateArgs(Objects.requireNonNull(defaults));
        }

        public Builder certificateId(Output<Integer> certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        public Builder certificateId(Integer certificateId) {
            return certificateId(Output.of(certificateId));
        }

        public Builder includeAssociatedProperties(@Nullable Output<Boolean> includeAssociatedProperties) {
            $.includeAssociatedProperties = includeAssociatedProperties;
            return this;
        }

        public Builder includeAssociatedProperties(Boolean includeAssociatedProperties) {
            return includeAssociatedProperties(Output.of(includeAssociatedProperties));
        }

        public GetMtlskeystoreClientCertificateArgs build() {
            if ($.certificateId == null) {
                throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateArgs", "certificateId");
            }
            return $;
        }
    }

}
