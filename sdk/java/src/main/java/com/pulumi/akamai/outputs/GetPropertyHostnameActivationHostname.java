// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPropertyHostnameActivationHostname {
    /**
     * @return Specifies whether a given activation adds or removes a hostname item. Available options are `ADD` and `REMOVE`.
     * 
     */
    private String action;
    /**
     * @return Indicates the certificate&#39;s provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can&#39;t specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.
     * 
     */
    private String certProvisioningType;
    /**
     * @return The hostname that your end users see, indicated by the Host header in end user requests.
     * 
     */
    private String cnameFrom;
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers.
     * 
     */
    private String cnameTo;
    /**
     * @return Identifies the edge hostname you mapped your traffic to on the production network.
     * 
     */
    private String edgeHostnameId;

    private GetPropertyHostnameActivationHostname() {}
    /**
     * @return Specifies whether a given activation adds or removes a hostname item. Available options are `ADD` and `REMOVE`.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Indicates the certificate&#39;s provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can&#39;t specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.
     * 
     */
    public String certProvisioningType() {
        return this.certProvisioningType;
    }
    /**
     * @return The hostname that your end users see, indicated by the Host header in end user requests.
     * 
     */
    public String cnameFrom() {
        return this.cnameFrom;
    }
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers.
     * 
     */
    public String cnameTo() {
        return this.cnameTo;
    }
    /**
     * @return Identifies the edge hostname you mapped your traffic to on the production network.
     * 
     */
    public String edgeHostnameId() {
        return this.edgeHostnameId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyHostnameActivationHostname defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String certProvisioningType;
        private String cnameFrom;
        private String cnameTo;
        private String edgeHostnameId;
        public Builder() {}
        public Builder(GetPropertyHostnameActivationHostname defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.certProvisioningType = defaults.certProvisioningType;
    	      this.cnameFrom = defaults.cnameFrom;
    	      this.cnameTo = defaults.cnameTo;
    	      this.edgeHostnameId = defaults.edgeHostnameId;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationHostname", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder certProvisioningType(String certProvisioningType) {
            if (certProvisioningType == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationHostname", "certProvisioningType");
            }
            this.certProvisioningType = certProvisioningType;
            return this;
        }
        @CustomType.Setter
        public Builder cnameFrom(String cnameFrom) {
            if (cnameFrom == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationHostname", "cnameFrom");
            }
            this.cnameFrom = cnameFrom;
            return this;
        }
        @CustomType.Setter
        public Builder cnameTo(String cnameTo) {
            if (cnameTo == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationHostname", "cnameTo");
            }
            this.cnameTo = cnameTo;
            return this;
        }
        @CustomType.Setter
        public Builder edgeHostnameId(String edgeHostnameId) {
            if (edgeHostnameId == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationHostname", "edgeHostnameId");
            }
            this.edgeHostnameId = edgeHostnameId;
            return this;
        }
        public GetPropertyHostnameActivationHostname build() {
            final var _resultValue = new GetPropertyHostnameActivationHostname();
            _resultValue.action = action;
            _resultValue.certProvisioningType = certProvisioningType;
            _resultValue.cnameFrom = cnameFrom;
            _resultValue.cnameTo = cnameTo;
            _resultValue.edgeHostnameId = edgeHostnameId;
            return _resultValue;
        }
    }
}
