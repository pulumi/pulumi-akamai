// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.inputs.EdgeWorkersActivationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EdgeWorkersActivationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EdgeWorkersActivationArgs Empty = new EdgeWorkersActivationArgs();

    /**
     * Id of the EdgeWorker to activate
     * 
     */
    @Import(name="edgeworkerId", required=true)
    private Output<Integer> edgeworkerId;

    /**
     * @return Id of the EdgeWorker to activate
     * 
     */
    public Output<Integer> edgeworkerId() {
        return this.edgeworkerId;
    }

    /**
     * The network on which the version will be activated
     * 
     */
    @Import(name="network", required=true)
    private Output<String> network;

    /**
     * @return The network on which the version will be activated
     * 
     */
    public Output<String> network() {
        return this.network;
    }

    /**
     * Enables to set timeout for processing
     * 
     */
    @Import(name="timeouts")
    private @Nullable Output<EdgeWorkersActivationTimeoutsArgs> timeouts;

    /**
     * @return Enables to set timeout for processing
     * 
     */
    public Optional<Output<EdgeWorkersActivationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * The version of EdgeWorker to activate
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return The version of EdgeWorker to activate
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    private EdgeWorkersActivationArgs() {}

    private EdgeWorkersActivationArgs(EdgeWorkersActivationArgs $) {
        this.edgeworkerId = $.edgeworkerId;
        this.network = $.network;
        this.timeouts = $.timeouts;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EdgeWorkersActivationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdgeWorkersActivationArgs $;

        public Builder() {
            $ = new EdgeWorkersActivationArgs();
        }

        public Builder(EdgeWorkersActivationArgs defaults) {
            $ = new EdgeWorkersActivationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param edgeworkerId Id of the EdgeWorker to activate
         * 
         * @return builder
         * 
         */
        public Builder edgeworkerId(Output<Integer> edgeworkerId) {
            $.edgeworkerId = edgeworkerId;
            return this;
        }

        /**
         * @param edgeworkerId Id of the EdgeWorker to activate
         * 
         * @return builder
         * 
         */
        public Builder edgeworkerId(Integer edgeworkerId) {
            return edgeworkerId(Output.of(edgeworkerId));
        }

        /**
         * @param network The network on which the version will be activated
         * 
         * @return builder
         * 
         */
        public Builder network(Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The network on which the version will be activated
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param timeouts Enables to set timeout for processing
         * 
         * @return builder
         * 
         */
        public Builder timeouts(@Nullable Output<EdgeWorkersActivationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        /**
         * @param timeouts Enables to set timeout for processing
         * 
         * @return builder
         * 
         */
        public Builder timeouts(EdgeWorkersActivationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param version The version of EdgeWorker to activate
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of EdgeWorker to activate
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public EdgeWorkersActivationArgs build() {
            $.edgeworkerId = Objects.requireNonNull($.edgeworkerId, "expected parameter 'edgeworkerId' to be non-null");
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
