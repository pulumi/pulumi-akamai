// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatastreamOracleConnector {
    /**
     * @return The access key identifier used to authenticate requests to the Oracle Cloud account
     * 
     */
    private String accessKey;
    /**
     * @return The name of the Oracle Cloud Storage bucket
     * 
     */
    private String bucket;
    /**
     * @return Indicates whether the logs should be compressed
     * 
     */
    private @Nullable Boolean compressLogs;
    /**
     * @return The name of the connector
     * 
     */
    private String displayName;
    /**
     * @return The namespace of Oracle Cloud Storage account
     * 
     */
    private String namespace;
    /**
     * @return The path to the folder within your Oracle Cloud Storage bucket where logs will be stored
     * 
     */
    private String path;
    /**
     * @return The Oracle Cloud Storage region where bucket resides
     * 
     */
    private String region;
    /**
     * @return The secret access key identifier used to authenticate requests to the Oracle Cloud account
     * 
     */
    private String secretAccessKey;

    private DatastreamOracleConnector() {}
    /**
     * @return The access key identifier used to authenticate requests to the Oracle Cloud account
     * 
     */
    public String accessKey() {
        return this.accessKey;
    }
    /**
     * @return The name of the Oracle Cloud Storage bucket
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return Indicates whether the logs should be compressed
     * 
     */
    public Optional<Boolean> compressLogs() {
        return Optional.ofNullable(this.compressLogs);
    }
    /**
     * @return The name of the connector
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The namespace of Oracle Cloud Storage account
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The path to the folder within your Oracle Cloud Storage bucket where logs will be stored
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return The Oracle Cloud Storage region where bucket resides
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The secret access key identifier used to authenticate requests to the Oracle Cloud account
     * 
     */
    public String secretAccessKey() {
        return this.secretAccessKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatastreamOracleConnector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessKey;
        private String bucket;
        private @Nullable Boolean compressLogs;
        private String displayName;
        private String namespace;
        private String path;
        private String region;
        private String secretAccessKey;
        public Builder() {}
        public Builder(DatastreamOracleConnector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.bucket = defaults.bucket;
    	      this.compressLogs = defaults.compressLogs;
    	      this.displayName = defaults.displayName;
    	      this.namespace = defaults.namespace;
    	      this.path = defaults.path;
    	      this.region = defaults.region;
    	      this.secretAccessKey = defaults.secretAccessKey;
        }

        @CustomType.Setter
        public Builder accessKey(String accessKey) {
            if (accessKey == null) {
              throw new MissingRequiredPropertyException("DatastreamOracleConnector", "accessKey");
            }
            this.accessKey = accessKey;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("DatastreamOracleConnector", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder compressLogs(@Nullable Boolean compressLogs) {

            this.compressLogs = compressLogs;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("DatastreamOracleConnector", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("DatastreamOracleConnector", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("DatastreamOracleConnector", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("DatastreamOracleConnector", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder secretAccessKey(String secretAccessKey) {
            if (secretAccessKey == null) {
              throw new MissingRequiredPropertyException("DatastreamOracleConnector", "secretAccessKey");
            }
            this.secretAccessKey = secretAccessKey;
            return this;
        }
        public DatastreamOracleConnector build() {
            final var _resultValue = new DatastreamOracleConnector();
            _resultValue.accessKey = accessKey;
            _resultValue.bucket = bucket;
            _resultValue.compressLogs = compressLogs;
            _resultValue.displayName = displayName;
            _resultValue.namespace = namespace;
            _resultValue.path = path;
            _resultValue.region = region;
            _resultValue.secretAccessKey = secretAccessKey;
            return _resultValue;
        }
    }
}
