// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamRoleState extends com.pulumi.resources.ResourceArgs {

    public static final IamRoleState Empty = new IamRoleState();

    /**
     * The description for a role.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description for a role.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The list of existing unique identifiers for the granted roles.
     * 
     */
    @Import(name="grantedRoles")
    private @Nullable Output<List<Integer>> grantedRoles;

    /**
     * @return The list of existing unique identifiers for the granted roles.
     * 
     */
    public Optional<Output<List<Integer>>> grantedRoles() {
        return Optional.ofNullable(this.grantedRoles);
    }

    /**
     * The name you supply for a role.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name you supply for a role.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The role type which indicates whether it&#39;s a standard role provided by Akamai or a custom role for the account.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The role type which indicates whether it&#39;s a standard role provided by Akamai or a custom role for the account.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private IamRoleState() {}

    private IamRoleState(IamRoleState $) {
        this.description = $.description;
        this.grantedRoles = $.grantedRoles;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamRoleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamRoleState $;

        public Builder() {
            $ = new IamRoleState();
        }

        public Builder(IamRoleState defaults) {
            $ = new IamRoleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description for a role.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description for a role.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param grantedRoles The list of existing unique identifiers for the granted roles.
         * 
         * @return builder
         * 
         */
        public Builder grantedRoles(@Nullable Output<List<Integer>> grantedRoles) {
            $.grantedRoles = grantedRoles;
            return this;
        }

        /**
         * @param grantedRoles The list of existing unique identifiers for the granted roles.
         * 
         * @return builder
         * 
         */
        public Builder grantedRoles(List<Integer> grantedRoles) {
            return grantedRoles(Output.of(grantedRoles));
        }

        /**
         * @param grantedRoles The list of existing unique identifiers for the granted roles.
         * 
         * @return builder
         * 
         */
        public Builder grantedRoles(Integer... grantedRoles) {
            return grantedRoles(List.of(grantedRoles));
        }

        /**
         * @param name The name you supply for a role.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name you supply for a role.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type The role type which indicates whether it&#39;s a standard role provided by Akamai or a custom role for the account.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The role type which indicates whether it&#39;s a standard role provided by Akamai or a custom role for the account.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public IamRoleState build() {
            return $;
        }
    }

}
