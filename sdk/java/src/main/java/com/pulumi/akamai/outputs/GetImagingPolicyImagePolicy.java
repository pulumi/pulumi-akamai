// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyBreakpoints;
import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyOutput;
import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyPostBreakpointTransformation;
import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformation;
import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyVariable;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicy {
    private @Nullable GetImagingPolicyImagePolicyBreakpoints breakpoints;
    private @Nullable List<String> hosts;
    private @Nullable GetImagingPolicyImagePolicyOutput output;
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformation> postBreakpointTransformations;
    private @Nullable String rolloutDuration;
    private @Nullable List<GetImagingPolicyImagePolicyTransformation> transformations;
    private @Nullable List<GetImagingPolicyImagePolicyVariable> variables;

    private GetImagingPolicyImagePolicy() {}
    public Optional<GetImagingPolicyImagePolicyBreakpoints> breakpoints() {
        return Optional.ofNullable(this.breakpoints);
    }
    public List<String> hosts() {
        return this.hosts == null ? List.of() : this.hosts;
    }
    public Optional<GetImagingPolicyImagePolicyOutput> output() {
        return Optional.ofNullable(this.output);
    }
    public List<GetImagingPolicyImagePolicyPostBreakpointTransformation> postBreakpointTransformations() {
        return this.postBreakpointTransformations == null ? List.of() : this.postBreakpointTransformations;
    }
    public Optional<String> rolloutDuration() {
        return Optional.ofNullable(this.rolloutDuration);
    }
    public List<GetImagingPolicyImagePolicyTransformation> transformations() {
        return this.transformations == null ? List.of() : this.transformations;
    }
    public List<GetImagingPolicyImagePolicyVariable> variables() {
        return this.variables == null ? List.of() : this.variables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetImagingPolicyImagePolicyBreakpoints breakpoints;
        private @Nullable List<String> hosts;
        private @Nullable GetImagingPolicyImagePolicyOutput output;
        private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformation> postBreakpointTransformations;
        private @Nullable String rolloutDuration;
        private @Nullable List<GetImagingPolicyImagePolicyTransformation> transformations;
        private @Nullable List<GetImagingPolicyImagePolicyVariable> variables;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.breakpoints = defaults.breakpoints;
    	      this.hosts = defaults.hosts;
    	      this.output = defaults.output;
    	      this.postBreakpointTransformations = defaults.postBreakpointTransformations;
    	      this.rolloutDuration = defaults.rolloutDuration;
    	      this.transformations = defaults.transformations;
    	      this.variables = defaults.variables;
        }

        @CustomType.Setter
        public Builder breakpoints(@Nullable GetImagingPolicyImagePolicyBreakpoints breakpoints) {
            this.breakpoints = breakpoints;
            return this;
        }
        @CustomType.Setter
        public Builder hosts(@Nullable List<String> hosts) {
            this.hosts = hosts;
            return this;
        }
        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }
        @CustomType.Setter
        public Builder output(@Nullable GetImagingPolicyImagePolicyOutput output) {
            this.output = output;
            return this;
        }
        @CustomType.Setter
        public Builder postBreakpointTransformations(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformation> postBreakpointTransformations) {
            this.postBreakpointTransformations = postBreakpointTransformations;
            return this;
        }
        public Builder postBreakpointTransformations(GetImagingPolicyImagePolicyPostBreakpointTransformation... postBreakpointTransformations) {
            return postBreakpointTransformations(List.of(postBreakpointTransformations));
        }
        @CustomType.Setter
        public Builder rolloutDuration(@Nullable String rolloutDuration) {
            this.rolloutDuration = rolloutDuration;
            return this;
        }
        @CustomType.Setter
        public Builder transformations(@Nullable List<GetImagingPolicyImagePolicyTransformation> transformations) {
            this.transformations = transformations;
            return this;
        }
        public Builder transformations(GetImagingPolicyImagePolicyTransformation... transformations) {
            return transformations(List.of(transformations));
        }
        @CustomType.Setter
        public Builder variables(@Nullable List<GetImagingPolicyImagePolicyVariable> variables) {
            this.variables = variables;
            return this;
        }
        public Builder variables(GetImagingPolicyImagePolicyVariable... variables) {
            return variables(List.of(variables));
        }
        public GetImagingPolicyImagePolicy build() {
            final var o = new GetImagingPolicyImagePolicy();
            o.breakpoints = breakpoints;
            o.hosts = hosts;
            o.output = output;
            o.postBreakpointTransformations = postBreakpointTransformations;
            o.rolloutDuration = rolloutDuration;
            o.transformations = transformations;
            o.variables = variables;
            return o;
        }
    }
}
