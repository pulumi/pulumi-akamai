// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIamApiClientPurgeOptionsCpCodeAccess {
    /**
     * @return Whether the API can purge content by all current and new CP codes.
     * 
     */
    private Boolean allCurrentAndNewCpCodes;
    /**
     * @return CP codes the API client can purge.
     * 
     */
    private List<Integer> cpCodes;

    private GetIamApiClientPurgeOptionsCpCodeAccess() {}
    /**
     * @return Whether the API can purge content by all current and new CP codes.
     * 
     */
    public Boolean allCurrentAndNewCpCodes() {
        return this.allCurrentAndNewCpCodes;
    }
    /**
     * @return CP codes the API client can purge.
     * 
     */
    public List<Integer> cpCodes() {
        return this.cpCodes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamApiClientPurgeOptionsCpCodeAccess defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allCurrentAndNewCpCodes;
        private List<Integer> cpCodes;
        public Builder() {}
        public Builder(GetIamApiClientPurgeOptionsCpCodeAccess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allCurrentAndNewCpCodes = defaults.allCurrentAndNewCpCodes;
    	      this.cpCodes = defaults.cpCodes;
        }

        @CustomType.Setter
        public Builder allCurrentAndNewCpCodes(Boolean allCurrentAndNewCpCodes) {
            if (allCurrentAndNewCpCodes == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientPurgeOptionsCpCodeAccess", "allCurrentAndNewCpCodes");
            }
            this.allCurrentAndNewCpCodes = allCurrentAndNewCpCodes;
            return this;
        }
        @CustomType.Setter
        public Builder cpCodes(List<Integer> cpCodes) {
            if (cpCodes == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientPurgeOptionsCpCodeAccess", "cpCodes");
            }
            this.cpCodes = cpCodes;
            return this;
        }
        public Builder cpCodes(Integer... cpCodes) {
            return cpCodes(List.of(cpCodes));
        }
        public GetIamApiClientPurgeOptionsCpCodeAccess build() {
            final var _resultValue = new GetIamApiClientPurgeOptionsCpCodeAccess();
            _resultValue.allCurrentAndNewCpCodes = allCurrentAndNewCpCodes;
            _resultValue.cpCodes = cpCodes;
            return _resultValue;
        }
    }
}
