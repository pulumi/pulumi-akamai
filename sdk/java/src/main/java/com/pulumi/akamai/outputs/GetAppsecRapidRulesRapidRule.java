// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAppsecRapidRulesRapidRule {
    /**
     * @return The rapid rule action.
     * 
     */
    private String action;
    /**
     * @return The unique identifier of attack group, rapid rule belongs to.
     * 
     */
    private String attackGroup;
    /**
     * @return The attack group exception.
     * 
     */
    private String attackGroupException;
    /**
     * @return The rapid rule exception.
     * 
     */
    private String conditionException;
    /**
     * @return The unique identifier of rapid rule.
     * 
     */
    private Integer id;
    /**
     * @return The the rapid rule action lock.
     * 
     */
    private Boolean lock;
    /**
     * @return The rapid rule name.
     * 
     */
    private String name;

    private GetAppsecRapidRulesRapidRule() {}
    /**
     * @return The rapid rule action.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return The unique identifier of attack group, rapid rule belongs to.
     * 
     */
    public String attackGroup() {
        return this.attackGroup;
    }
    /**
     * @return The attack group exception.
     * 
     */
    public String attackGroupException() {
        return this.attackGroupException;
    }
    /**
     * @return The rapid rule exception.
     * 
     */
    public String conditionException() {
        return this.conditionException;
    }
    /**
     * @return The unique identifier of rapid rule.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return The the rapid rule action lock.
     * 
     */
    public Boolean lock() {
        return this.lock;
    }
    /**
     * @return The rapid rule name.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppsecRapidRulesRapidRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String attackGroup;
        private String attackGroupException;
        private String conditionException;
        private Integer id;
        private Boolean lock;
        private String name;
        public Builder() {}
        public Builder(GetAppsecRapidRulesRapidRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.attackGroup = defaults.attackGroup;
    	      this.attackGroupException = defaults.attackGroupException;
    	      this.conditionException = defaults.conditionException;
    	      this.id = defaults.id;
    	      this.lock = defaults.lock;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesRapidRule", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder attackGroup(String attackGroup) {
            if (attackGroup == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesRapidRule", "attackGroup");
            }
            this.attackGroup = attackGroup;
            return this;
        }
        @CustomType.Setter
        public Builder attackGroupException(String attackGroupException) {
            if (attackGroupException == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesRapidRule", "attackGroupException");
            }
            this.attackGroupException = attackGroupException;
            return this;
        }
        @CustomType.Setter
        public Builder conditionException(String conditionException) {
            if (conditionException == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesRapidRule", "conditionException");
            }
            this.conditionException = conditionException;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesRapidRule", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lock(Boolean lock) {
            if (lock == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesRapidRule", "lock");
            }
            this.lock = lock;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesRapidRule", "name");
            }
            this.name = name;
            return this;
        }
        public GetAppsecRapidRulesRapidRule build() {
            final var _resultValue = new GetAppsecRapidRulesRapidRule();
            _resultValue.action = action;
            _resultValue.attackGroup = attackGroup;
            _resultValue.attackGroupException = attackGroupException;
            _resultValue.conditionException = conditionException;
            _resultValue.id = id;
            _resultValue.lock = lock;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
