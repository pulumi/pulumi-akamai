// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificate;
import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthority;
import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20230530BehaviorOriginNetStorage;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230530BehaviorOrigin {
    private @Nullable String cacheKeyHostname;
    private @Nullable Boolean compress;
    private @Nullable List<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthority> customCertificateAuthorities;
    private @Nullable List<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificate> customCertificates;
    private @Nullable String customForwardHostHeader;
    private @Nullable List<String> customValidCnValues;
    private @Nullable Boolean enableTrueClientIp;
    private @Nullable String forwardHostHeader;
    private @Nullable String hostname;
    private @Nullable Integer httpPort;
    private @Nullable Integer httpsPort;
    private @Nullable String ipVersion;
    private @Nullable Boolean locked;
    private @Nullable String mslorigin;
    private @Nullable GetPropertyRulesBuilderRulesV20230530BehaviorOriginNetStorage netStorage;
    private @Nullable String originCertificate;
    private @Nullable String originCertsToHonor;
    private @Nullable String originId;
    private @Nullable Boolean originSni;
    private @Nullable String originType;
    private @Nullable String ports;
    private @Nullable Boolean saasCnameEnabled;
    private @Nullable Integer saasCnameLevel;
    private @Nullable String saasCookie;
    private @Nullable String saasQueryString;
    private @Nullable String saasRegex;
    private @Nullable String saasReplace;
    private @Nullable String saasSuffix;
    private @Nullable String saasType;
    private @Nullable String secondHostname;
    private @Nullable Boolean secondHostnameEnabled;
    private @Nullable List<String> standardCertificateAuthorities;
    private @Nullable String templateUuid;
    private @Nullable Boolean trueClientIpClientSetting;
    private @Nullable String trueClientIpHeader;
    private @Nullable Boolean useUniqueCacheKey;
    private @Nullable String uuid;
    private @Nullable String verificationMode;

    private GetPropertyRulesBuilderRulesV20230530BehaviorOrigin() {}
    public Optional<String> cacheKeyHostname() {
        return Optional.ofNullable(this.cacheKeyHostname);
    }
    public Optional<Boolean> compress() {
        return Optional.ofNullable(this.compress);
    }
    public List<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthority> customCertificateAuthorities() {
        return this.customCertificateAuthorities == null ? List.of() : this.customCertificateAuthorities;
    }
    public List<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificate> customCertificates() {
        return this.customCertificates == null ? List.of() : this.customCertificates;
    }
    public Optional<String> customForwardHostHeader() {
        return Optional.ofNullable(this.customForwardHostHeader);
    }
    public List<String> customValidCnValues() {
        return this.customValidCnValues == null ? List.of() : this.customValidCnValues;
    }
    public Optional<Boolean> enableTrueClientIp() {
        return Optional.ofNullable(this.enableTrueClientIp);
    }
    public Optional<String> forwardHostHeader() {
        return Optional.ofNullable(this.forwardHostHeader);
    }
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    public Optional<Integer> httpPort() {
        return Optional.ofNullable(this.httpPort);
    }
    public Optional<Integer> httpsPort() {
        return Optional.ofNullable(this.httpsPort);
    }
    public Optional<String> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    public Optional<String> mslorigin() {
        return Optional.ofNullable(this.mslorigin);
    }
    public Optional<GetPropertyRulesBuilderRulesV20230530BehaviorOriginNetStorage> netStorage() {
        return Optional.ofNullable(this.netStorage);
    }
    public Optional<String> originCertificate() {
        return Optional.ofNullable(this.originCertificate);
    }
    public Optional<String> originCertsToHonor() {
        return Optional.ofNullable(this.originCertsToHonor);
    }
    public Optional<String> originId() {
        return Optional.ofNullable(this.originId);
    }
    public Optional<Boolean> originSni() {
        return Optional.ofNullable(this.originSni);
    }
    public Optional<String> originType() {
        return Optional.ofNullable(this.originType);
    }
    public Optional<String> ports() {
        return Optional.ofNullable(this.ports);
    }
    public Optional<Boolean> saasCnameEnabled() {
        return Optional.ofNullable(this.saasCnameEnabled);
    }
    public Optional<Integer> saasCnameLevel() {
        return Optional.ofNullable(this.saasCnameLevel);
    }
    public Optional<String> saasCookie() {
        return Optional.ofNullable(this.saasCookie);
    }
    public Optional<String> saasQueryString() {
        return Optional.ofNullable(this.saasQueryString);
    }
    public Optional<String> saasRegex() {
        return Optional.ofNullable(this.saasRegex);
    }
    public Optional<String> saasReplace() {
        return Optional.ofNullable(this.saasReplace);
    }
    public Optional<String> saasSuffix() {
        return Optional.ofNullable(this.saasSuffix);
    }
    public Optional<String> saasType() {
        return Optional.ofNullable(this.saasType);
    }
    public Optional<String> secondHostname() {
        return Optional.ofNullable(this.secondHostname);
    }
    public Optional<Boolean> secondHostnameEnabled() {
        return Optional.ofNullable(this.secondHostnameEnabled);
    }
    public List<String> standardCertificateAuthorities() {
        return this.standardCertificateAuthorities == null ? List.of() : this.standardCertificateAuthorities;
    }
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    public Optional<Boolean> trueClientIpClientSetting() {
        return Optional.ofNullable(this.trueClientIpClientSetting);
    }
    public Optional<String> trueClientIpHeader() {
        return Optional.ofNullable(this.trueClientIpHeader);
    }
    public Optional<Boolean> useUniqueCacheKey() {
        return Optional.ofNullable(this.useUniqueCacheKey);
    }
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }
    public Optional<String> verificationMode() {
        return Optional.ofNullable(this.verificationMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230530BehaviorOrigin defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cacheKeyHostname;
        private @Nullable Boolean compress;
        private @Nullable List<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthority> customCertificateAuthorities;
        private @Nullable List<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificate> customCertificates;
        private @Nullable String customForwardHostHeader;
        private @Nullable List<String> customValidCnValues;
        private @Nullable Boolean enableTrueClientIp;
        private @Nullable String forwardHostHeader;
        private @Nullable String hostname;
        private @Nullable Integer httpPort;
        private @Nullable Integer httpsPort;
        private @Nullable String ipVersion;
        private @Nullable Boolean locked;
        private @Nullable String mslorigin;
        private @Nullable GetPropertyRulesBuilderRulesV20230530BehaviorOriginNetStorage netStorage;
        private @Nullable String originCertificate;
        private @Nullable String originCertsToHonor;
        private @Nullable String originId;
        private @Nullable Boolean originSni;
        private @Nullable String originType;
        private @Nullable String ports;
        private @Nullable Boolean saasCnameEnabled;
        private @Nullable Integer saasCnameLevel;
        private @Nullable String saasCookie;
        private @Nullable String saasQueryString;
        private @Nullable String saasRegex;
        private @Nullable String saasReplace;
        private @Nullable String saasSuffix;
        private @Nullable String saasType;
        private @Nullable String secondHostname;
        private @Nullable Boolean secondHostnameEnabled;
        private @Nullable List<String> standardCertificateAuthorities;
        private @Nullable String templateUuid;
        private @Nullable Boolean trueClientIpClientSetting;
        private @Nullable String trueClientIpHeader;
        private @Nullable Boolean useUniqueCacheKey;
        private @Nullable String uuid;
        private @Nullable String verificationMode;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230530BehaviorOrigin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheKeyHostname = defaults.cacheKeyHostname;
    	      this.compress = defaults.compress;
    	      this.customCertificateAuthorities = defaults.customCertificateAuthorities;
    	      this.customCertificates = defaults.customCertificates;
    	      this.customForwardHostHeader = defaults.customForwardHostHeader;
    	      this.customValidCnValues = defaults.customValidCnValues;
    	      this.enableTrueClientIp = defaults.enableTrueClientIp;
    	      this.forwardHostHeader = defaults.forwardHostHeader;
    	      this.hostname = defaults.hostname;
    	      this.httpPort = defaults.httpPort;
    	      this.httpsPort = defaults.httpsPort;
    	      this.ipVersion = defaults.ipVersion;
    	      this.locked = defaults.locked;
    	      this.mslorigin = defaults.mslorigin;
    	      this.netStorage = defaults.netStorage;
    	      this.originCertificate = defaults.originCertificate;
    	      this.originCertsToHonor = defaults.originCertsToHonor;
    	      this.originId = defaults.originId;
    	      this.originSni = defaults.originSni;
    	      this.originType = defaults.originType;
    	      this.ports = defaults.ports;
    	      this.saasCnameEnabled = defaults.saasCnameEnabled;
    	      this.saasCnameLevel = defaults.saasCnameLevel;
    	      this.saasCookie = defaults.saasCookie;
    	      this.saasQueryString = defaults.saasQueryString;
    	      this.saasRegex = defaults.saasRegex;
    	      this.saasReplace = defaults.saasReplace;
    	      this.saasSuffix = defaults.saasSuffix;
    	      this.saasType = defaults.saasType;
    	      this.secondHostname = defaults.secondHostname;
    	      this.secondHostnameEnabled = defaults.secondHostnameEnabled;
    	      this.standardCertificateAuthorities = defaults.standardCertificateAuthorities;
    	      this.templateUuid = defaults.templateUuid;
    	      this.trueClientIpClientSetting = defaults.trueClientIpClientSetting;
    	      this.trueClientIpHeader = defaults.trueClientIpHeader;
    	      this.useUniqueCacheKey = defaults.useUniqueCacheKey;
    	      this.uuid = defaults.uuid;
    	      this.verificationMode = defaults.verificationMode;
        }

        @CustomType.Setter
        public Builder cacheKeyHostname(@Nullable String cacheKeyHostname) {
            this.cacheKeyHostname = cacheKeyHostname;
            return this;
        }
        @CustomType.Setter
        public Builder compress(@Nullable Boolean compress) {
            this.compress = compress;
            return this;
        }
        @CustomType.Setter
        public Builder customCertificateAuthorities(@Nullable List<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthority> customCertificateAuthorities) {
            this.customCertificateAuthorities = customCertificateAuthorities;
            return this;
        }
        public Builder customCertificateAuthorities(GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificateAuthority... customCertificateAuthorities) {
            return customCertificateAuthorities(List.of(customCertificateAuthorities));
        }
        @CustomType.Setter
        public Builder customCertificates(@Nullable List<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificate> customCertificates) {
            this.customCertificates = customCertificates;
            return this;
        }
        public Builder customCertificates(GetPropertyRulesBuilderRulesV20230530BehaviorOriginCustomCertificate... customCertificates) {
            return customCertificates(List.of(customCertificates));
        }
        @CustomType.Setter
        public Builder customForwardHostHeader(@Nullable String customForwardHostHeader) {
            this.customForwardHostHeader = customForwardHostHeader;
            return this;
        }
        @CustomType.Setter
        public Builder customValidCnValues(@Nullable List<String> customValidCnValues) {
            this.customValidCnValues = customValidCnValues;
            return this;
        }
        public Builder customValidCnValues(String... customValidCnValues) {
            return customValidCnValues(List.of(customValidCnValues));
        }
        @CustomType.Setter
        public Builder enableTrueClientIp(@Nullable Boolean enableTrueClientIp) {
            this.enableTrueClientIp = enableTrueClientIp;
            return this;
        }
        @CustomType.Setter
        public Builder forwardHostHeader(@Nullable String forwardHostHeader) {
            this.forwardHostHeader = forwardHostHeader;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder httpPort(@Nullable Integer httpPort) {
            this.httpPort = httpPort;
            return this;
        }
        @CustomType.Setter
        public Builder httpsPort(@Nullable Integer httpsPort) {
            this.httpsPort = httpsPort;
            return this;
        }
        @CustomType.Setter
        public Builder ipVersion(@Nullable String ipVersion) {
            this.ipVersion = ipVersion;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {
            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder mslorigin(@Nullable String mslorigin) {
            this.mslorigin = mslorigin;
            return this;
        }
        @CustomType.Setter
        public Builder netStorage(@Nullable GetPropertyRulesBuilderRulesV20230530BehaviorOriginNetStorage netStorage) {
            this.netStorage = netStorage;
            return this;
        }
        @CustomType.Setter
        public Builder originCertificate(@Nullable String originCertificate) {
            this.originCertificate = originCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder originCertsToHonor(@Nullable String originCertsToHonor) {
            this.originCertsToHonor = originCertsToHonor;
            return this;
        }
        @CustomType.Setter
        public Builder originId(@Nullable String originId) {
            this.originId = originId;
            return this;
        }
        @CustomType.Setter
        public Builder originSni(@Nullable Boolean originSni) {
            this.originSni = originSni;
            return this;
        }
        @CustomType.Setter
        public Builder originType(@Nullable String originType) {
            this.originType = originType;
            return this;
        }
        @CustomType.Setter
        public Builder ports(@Nullable String ports) {
            this.ports = ports;
            return this;
        }
        @CustomType.Setter
        public Builder saasCnameEnabled(@Nullable Boolean saasCnameEnabled) {
            this.saasCnameEnabled = saasCnameEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder saasCnameLevel(@Nullable Integer saasCnameLevel) {
            this.saasCnameLevel = saasCnameLevel;
            return this;
        }
        @CustomType.Setter
        public Builder saasCookie(@Nullable String saasCookie) {
            this.saasCookie = saasCookie;
            return this;
        }
        @CustomType.Setter
        public Builder saasQueryString(@Nullable String saasQueryString) {
            this.saasQueryString = saasQueryString;
            return this;
        }
        @CustomType.Setter
        public Builder saasRegex(@Nullable String saasRegex) {
            this.saasRegex = saasRegex;
            return this;
        }
        @CustomType.Setter
        public Builder saasReplace(@Nullable String saasReplace) {
            this.saasReplace = saasReplace;
            return this;
        }
        @CustomType.Setter
        public Builder saasSuffix(@Nullable String saasSuffix) {
            this.saasSuffix = saasSuffix;
            return this;
        }
        @CustomType.Setter
        public Builder saasType(@Nullable String saasType) {
            this.saasType = saasType;
            return this;
        }
        @CustomType.Setter
        public Builder secondHostname(@Nullable String secondHostname) {
            this.secondHostname = secondHostname;
            return this;
        }
        @CustomType.Setter
        public Builder secondHostnameEnabled(@Nullable Boolean secondHostnameEnabled) {
            this.secondHostnameEnabled = secondHostnameEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder standardCertificateAuthorities(@Nullable List<String> standardCertificateAuthorities) {
            this.standardCertificateAuthorities = standardCertificateAuthorities;
            return this;
        }
        public Builder standardCertificateAuthorities(String... standardCertificateAuthorities) {
            return standardCertificateAuthorities(List.of(standardCertificateAuthorities));
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {
            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder trueClientIpClientSetting(@Nullable Boolean trueClientIpClientSetting) {
            this.trueClientIpClientSetting = trueClientIpClientSetting;
            return this;
        }
        @CustomType.Setter
        public Builder trueClientIpHeader(@Nullable String trueClientIpHeader) {
            this.trueClientIpHeader = trueClientIpHeader;
            return this;
        }
        @CustomType.Setter
        public Builder useUniqueCacheKey(@Nullable Boolean useUniqueCacheKey) {
            this.useUniqueCacheKey = useUniqueCacheKey;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {
            this.uuid = uuid;
            return this;
        }
        @CustomType.Setter
        public Builder verificationMode(@Nullable String verificationMode) {
            this.verificationMode = verificationMode;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230530BehaviorOrigin build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230530BehaviorOrigin();
            _resultValue.cacheKeyHostname = cacheKeyHostname;
            _resultValue.compress = compress;
            _resultValue.customCertificateAuthorities = customCertificateAuthorities;
            _resultValue.customCertificates = customCertificates;
            _resultValue.customForwardHostHeader = customForwardHostHeader;
            _resultValue.customValidCnValues = customValidCnValues;
            _resultValue.enableTrueClientIp = enableTrueClientIp;
            _resultValue.forwardHostHeader = forwardHostHeader;
            _resultValue.hostname = hostname;
            _resultValue.httpPort = httpPort;
            _resultValue.httpsPort = httpsPort;
            _resultValue.ipVersion = ipVersion;
            _resultValue.locked = locked;
            _resultValue.mslorigin = mslorigin;
            _resultValue.netStorage = netStorage;
            _resultValue.originCertificate = originCertificate;
            _resultValue.originCertsToHonor = originCertsToHonor;
            _resultValue.originId = originId;
            _resultValue.originSni = originSni;
            _resultValue.originType = originType;
            _resultValue.ports = ports;
            _resultValue.saasCnameEnabled = saasCnameEnabled;
            _resultValue.saasCnameLevel = saasCnameLevel;
            _resultValue.saasCookie = saasCookie;
            _resultValue.saasQueryString = saasQueryString;
            _resultValue.saasRegex = saasRegex;
            _resultValue.saasReplace = saasReplace;
            _resultValue.saasSuffix = saasSuffix;
            _resultValue.saasType = saasType;
            _resultValue.secondHostname = secondHostname;
            _resultValue.secondHostnameEnabled = secondHostnameEnabled;
            _resultValue.standardCertificateAuthorities = standardCertificateAuthorities;
            _resultValue.templateUuid = templateUuid;
            _resultValue.trueClientIpClientSetting = trueClientIpClientSetting;
            _resultValue.trueClientIpHeader = trueClientIpHeader;
            _resultValue.useUniqueCacheKey = useUniqueCacheKey;
            _resultValue.uuid = uuid;
            _resultValue.verificationMode = verificationMode;
            return _resultValue;
        }
    }
}
