// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer Empty = new GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer();

    /**
     * When enabled, this allows you to deny requests to a subcustomer&#39;s content based on specific match conditions, which you use Cloud Embed to configure in each subcustomer&#39;s policy.
     * 
     */
    @Import(name="accessControl")
    private @Nullable Boolean accessControl;

    /**
     * @return When enabled, this allows you to deny requests to a subcustomer&#39;s content based on specific match conditions, which you use Cloud Embed to configure in each subcustomer&#39;s policy.
     * 
     */
    public Optional<Boolean> accessControl() {
        return Optional.ofNullable(this.accessControl);
    }

    /**
     * Allows you to set which query parameters are included in the cache key.
     * 
     */
    @Import(name="cacheKey")
    private @Nullable Boolean cacheKey;

    /**
     * @return Allows you to set which query parameters are included in the cache key.
     * 
     */
    public Optional<Boolean> cacheKey() {
        return Optional.ofNullable(this.cacheKey);
    }

    /**
     * Modifies content caching rules.
     * 
     */
    @Import(name="caching")
    private @Nullable Boolean caching;

    /**
     * @return Modifies content caching rules.
     * 
     */
    public Optional<Boolean> caching() {
        return Optional.ofNullable(this.caching);
    }

    /**
     * Allows compression of subcustomer content.
     * 
     */
    @Import(name="contentCompressor")
    private @Nullable Boolean contentCompressor;

    /**
     * @return Allows compression of subcustomer content.
     * 
     */
    public Optional<Boolean> contentCompressor() {
        return Optional.ofNullable(this.contentCompressor);
    }

    /**
     * Allows you to apply the `dynamicWebContent` behavior to further modify how dynamic content behaves for subcustomers.
     * 
     */
    @Import(name="dynamicWebContent")
    private @Nullable Boolean dynamicWebContent;

    /**
     * @return Allows you to apply the `dynamicWebContent` behavior to further modify how dynamic content behaves for subcustomers.
     * 
     */
    public Optional<Boolean> dynamicWebContent() {
        return Optional.ofNullable(this.dynamicWebContent);
    }

    /**
     * Allows Cloud Embed to dynamically modify your subcustomers&#39; content.
     * 
     */
    @Import(name="enabled")
    private @Nullable Boolean enabled;

    /**
     * @return Allows Cloud Embed to dynamically modify your subcustomers&#39; content.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Sets subcustomers&#39; location-based whitelists or blacklists.
     * 
     */
    @Import(name="geoLocation")
    private @Nullable Boolean geoLocation;

    /**
     * @return Sets subcustomers&#39; location-based whitelists or blacklists.
     * 
     */
    public Optional<Boolean> geoLocation() {
        return Optional.ofNullable(this.geoLocation);
    }

    /**
     * Sets subcustomers&#39; IP whitelists or blacklists.
     * 
     */
    @Import(name="ip")
    private @Nullable Boolean ip;

    /**
     * @return Sets subcustomers&#39; IP whitelists or blacklists.
     * 
     */
    public Optional<Boolean> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * Enables large file delivery for subcustomers.
     * 
     */
    @Import(name="largeFileDelivery")
    private @Nullable Boolean largeFileDelivery;

    /**
     * @return Enables large file delivery for subcustomers.
     * 
     */
    public Optional<Boolean> largeFileDelivery() {
        return Optional.ofNullable(this.largeFileDelivery);
    }

    @Import(name="liveVideoDelivery")
    private @Nullable Boolean liveVideoDelivery;

    public Optional<Boolean> liveVideoDelivery() {
        return Optional.ofNullable(this.liveVideoDelivery);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Boolean locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Modifies a subcustomer&#39;s request path.
     * 
     */
    @Import(name="modifyPath")
    private @Nullable Boolean modifyPath;

    /**
     * @return Modifies a subcustomer&#39;s request path.
     * 
     */
    public Optional<Boolean> modifyPath() {
        return Optional.ofNullable(this.modifyPath);
    }

    /**
     * Enables delivery of media assets to subcustomers.
     * 
     */
    @Import(name="onDemandVideoDelivery")
    private @Nullable Boolean onDemandVideoDelivery;

    /**
     * @return Enables delivery of media assets to subcustomers.
     * 
     */
    public Optional<Boolean> onDemandVideoDelivery() {
        return Optional.ofNullable(this.onDemandVideoDelivery);
    }

    /**
     * Allows you to assign origin hostnames for customers.
     * 
     */
    @Import(name="origin")
    private @Nullable Boolean origin;

    /**
     * @return Allows you to assign origin hostnames for customers.
     * 
     */
    public Optional<Boolean> origin() {
        return Optional.ofNullable(this.origin);
    }

    /**
     * This specifies the appropriate domain suffix, which you should typically match with your property hostname. It identifies the domain as trustworthy on the Akamai network, despite being defined within Cloud Embed, outside of your base property configuration. Include this domain suffix if you want to purge subcustomer URLs. For example, if you provide a value of `suffix.example.com`, then to purge `subcustomer.com/some/path`, specify `subcustomer.com.suffix.example.com/some/path` as the purge request&#39;s URL.
     * 
     */
    @Import(name="partnerDomainSuffix")
    private @Nullable String partnerDomainSuffix;

    /**
     * @return This specifies the appropriate domain suffix, which you should typically match with your property hostname. It identifies the domain as trustworthy on the Akamai network, despite being defined within Cloud Embed, outside of your base property configuration. Include this domain suffix if you want to purge subcustomer URLs. For example, if you provide a value of `suffix.example.com`, then to purge `subcustomer.com/some/path`, specify `subcustomer.com.suffix.example.com/some/path` as the purge request&#39;s URL.
     * 
     */
    public Optional<String> partnerDomainSuffix() {
        return Optional.ofNullable(this.partnerDomainSuffix);
    }

    /**
     * Sets subcustomers&#39; referrer whitelists or blacklist.
     * 
     */
    @Import(name="referrer")
    private @Nullable Boolean referrer;

    /**
     * @return Sets subcustomers&#39; referrer whitelists or blacklist.
     * 
     */
    public Optional<Boolean> referrer() {
        return Optional.ofNullable(this.referrer);
    }

    /**
     * Allows you to reschedule when content validates for subcustomers.
     * 
     */
    @Import(name="refreshContent")
    private @Nullable Boolean refreshContent;

    /**
     * @return Allows you to reschedule when content validates for subcustomers.
     * 
     */
    public Optional<Boolean> refreshContent() {
        return Optional.ofNullable(this.refreshContent);
    }

    /**
     * Allows you to configure unique failover sites for each subcustomer&#39;s policy.
     * 
     */
    @Import(name="siteFailover")
    private @Nullable Boolean siteFailover;

    /**
     * @return Allows you to configure unique failover sites for each subcustomer&#39;s policy.
     * 
     */
    public Optional<Boolean> siteFailover() {
        return Optional.ofNullable(this.siteFailover);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable String templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * When enabled, this allows you to configure edge servers to use tokens to control access to subcustomer content.  Use Cloud Embed to configure the token to appear in a cookie, header, or query parameter.
     * 
     */
    @Import(name="tokenAuthorization")
    private @Nullable Boolean tokenAuthorization;

    /**
     * @return When enabled, this allows you to configure edge servers to use tokens to control access to subcustomer content.  Use Cloud Embed to configure the token to appear in a cookie, header, or query parameter.
     * 
     */
    public Optional<Boolean> tokenAuthorization() {
        return Optional.ofNullable(this.tokenAuthorization);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable String uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    /**
     * Web application firewall (WAF) filters, monitors, and blocks certain HTTP traffic. Use `Akamai Cloud Embed` to add a specific behavior to a subcustomer policy and configure how WAF protection is applied.
     * 
     */
    @Import(name="webApplicationFirewall")
    private @Nullable Boolean webApplicationFirewall;

    /**
     * @return Web application firewall (WAF) filters, monitors, and blocks certain HTTP traffic. Use `Akamai Cloud Embed` to add a specific behavior to a subcustomer policy and configure how WAF protection is applied.
     * 
     */
    public Optional<Boolean> webApplicationFirewall() {
        return Optional.ofNullable(this.webApplicationFirewall);
    }

    private GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer() {}

    private GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer(GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer $) {
        this.accessControl = $.accessControl;
        this.cacheKey = $.cacheKey;
        this.caching = $.caching;
        this.contentCompressor = $.contentCompressor;
        this.dynamicWebContent = $.dynamicWebContent;
        this.enabled = $.enabled;
        this.geoLocation = $.geoLocation;
        this.ip = $.ip;
        this.largeFileDelivery = $.largeFileDelivery;
        this.liveVideoDelivery = $.liveVideoDelivery;
        this.locked = $.locked;
        this.modifyPath = $.modifyPath;
        this.onDemandVideoDelivery = $.onDemandVideoDelivery;
        this.origin = $.origin;
        this.partnerDomainSuffix = $.partnerDomainSuffix;
        this.referrer = $.referrer;
        this.refreshContent = $.refreshContent;
        this.siteFailover = $.siteFailover;
        this.templateUuid = $.templateUuid;
        this.tokenAuthorization = $.tokenAuthorization;
        this.uuid = $.uuid;
        this.webApplicationFirewall = $.webApplicationFirewall;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer();
        }

        public Builder(GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer defaults) {
            $ = new GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessControl When enabled, this allows you to deny requests to a subcustomer&#39;s content based on specific match conditions, which you use Cloud Embed to configure in each subcustomer&#39;s policy.
         * 
         * @return builder
         * 
         */
        public Builder accessControl(@Nullable Boolean accessControl) {
            $.accessControl = accessControl;
            return this;
        }

        /**
         * @param cacheKey Allows you to set which query parameters are included in the cache key.
         * 
         * @return builder
         * 
         */
        public Builder cacheKey(@Nullable Boolean cacheKey) {
            $.cacheKey = cacheKey;
            return this;
        }

        /**
         * @param caching Modifies content caching rules.
         * 
         * @return builder
         * 
         */
        public Builder caching(@Nullable Boolean caching) {
            $.caching = caching;
            return this;
        }

        /**
         * @param contentCompressor Allows compression of subcustomer content.
         * 
         * @return builder
         * 
         */
        public Builder contentCompressor(@Nullable Boolean contentCompressor) {
            $.contentCompressor = contentCompressor;
            return this;
        }

        /**
         * @param dynamicWebContent Allows you to apply the `dynamicWebContent` behavior to further modify how dynamic content behaves for subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder dynamicWebContent(@Nullable Boolean dynamicWebContent) {
            $.dynamicWebContent = dynamicWebContent;
            return this;
        }

        /**
         * @param enabled Allows Cloud Embed to dynamically modify your subcustomers&#39; content.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param geoLocation Sets subcustomers&#39; location-based whitelists or blacklists.
         * 
         * @return builder
         * 
         */
        public Builder geoLocation(@Nullable Boolean geoLocation) {
            $.geoLocation = geoLocation;
            return this;
        }

        /**
         * @param ip Sets subcustomers&#39; IP whitelists or blacklists.
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Boolean ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param largeFileDelivery Enables large file delivery for subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder largeFileDelivery(@Nullable Boolean largeFileDelivery) {
            $.largeFileDelivery = largeFileDelivery;
            return this;
        }

        public Builder liveVideoDelivery(@Nullable Boolean liveVideoDelivery) {
            $.liveVideoDelivery = liveVideoDelivery;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Boolean locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param modifyPath Modifies a subcustomer&#39;s request path.
         * 
         * @return builder
         * 
         */
        public Builder modifyPath(@Nullable Boolean modifyPath) {
            $.modifyPath = modifyPath;
            return this;
        }

        /**
         * @param onDemandVideoDelivery Enables delivery of media assets to subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder onDemandVideoDelivery(@Nullable Boolean onDemandVideoDelivery) {
            $.onDemandVideoDelivery = onDemandVideoDelivery;
            return this;
        }

        /**
         * @param origin Allows you to assign origin hostnames for customers.
         * 
         * @return builder
         * 
         */
        public Builder origin(@Nullable Boolean origin) {
            $.origin = origin;
            return this;
        }

        /**
         * @param partnerDomainSuffix This specifies the appropriate domain suffix, which you should typically match with your property hostname. It identifies the domain as trustworthy on the Akamai network, despite being defined within Cloud Embed, outside of your base property configuration. Include this domain suffix if you want to purge subcustomer URLs. For example, if you provide a value of `suffix.example.com`, then to purge `subcustomer.com/some/path`, specify `subcustomer.com.suffix.example.com/some/path` as the purge request&#39;s URL.
         * 
         * @return builder
         * 
         */
        public Builder partnerDomainSuffix(@Nullable String partnerDomainSuffix) {
            $.partnerDomainSuffix = partnerDomainSuffix;
            return this;
        }

        /**
         * @param referrer Sets subcustomers&#39; referrer whitelists or blacklist.
         * 
         * @return builder
         * 
         */
        public Builder referrer(@Nullable Boolean referrer) {
            $.referrer = referrer;
            return this;
        }

        /**
         * @param refreshContent Allows you to reschedule when content validates for subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder refreshContent(@Nullable Boolean refreshContent) {
            $.refreshContent = refreshContent;
            return this;
        }

        /**
         * @param siteFailover Allows you to configure unique failover sites for each subcustomer&#39;s policy.
         * 
         * @return builder
         * 
         */
        public Builder siteFailover(@Nullable Boolean siteFailover) {
            $.siteFailover = siteFailover;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable String templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param tokenAuthorization When enabled, this allows you to configure edge servers to use tokens to control access to subcustomer content.  Use Cloud Embed to configure the token to appear in a cookie, header, or query parameter.
         * 
         * @return builder
         * 
         */
        public Builder tokenAuthorization(@Nullable Boolean tokenAuthorization) {
            $.tokenAuthorization = tokenAuthorization;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param webApplicationFirewall Web application firewall (WAF) filters, monitors, and blocks certain HTTP traffic. Use `Akamai Cloud Embed` to add a specific behavior to a subcustomer policy and configure how WAF protection is applied.
         * 
         * @return builder
         * 
         */
        public Builder webApplicationFirewall(@Nullable Boolean webApplicationFirewall) {
            $.webApplicationFirewall = webApplicationFirewall;
            return this;
        }

        public GetPropertyRulesBuilderRulesV20231030BehaviorSubCustomer build() {
            return $;
        }
    }

}
