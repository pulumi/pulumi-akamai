// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCropRegionOfInterest;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop Empty = new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop();

    @Import(name="gravity")
    private @Nullable String gravity;

    public Optional<String> gravity() {
        return Optional.ofNullable(this.gravity);
    }

    @Import(name="gravityVar")
    private @Nullable String gravityVar;

    public Optional<String> gravityVar() {
        return Optional.ofNullable(this.gravityVar);
    }

    @Import(name="height")
    private @Nullable String height;

    public Optional<String> height() {
        return Optional.ofNullable(this.height);
    }

    @Import(name="heightVar")
    private @Nullable String heightVar;

    public Optional<String> heightVar() {
        return Optional.ofNullable(this.heightVar);
    }

    @Import(name="regionOfInterest", required=true)
    private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCropRegionOfInterest regionOfInterest;

    public GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCropRegionOfInterest regionOfInterest() {
        return this.regionOfInterest;
    }

    @Import(name="style")
    private @Nullable String style;

    public Optional<String> style() {
        return Optional.ofNullable(this.style);
    }

    @Import(name="styleVar")
    private @Nullable String styleVar;

    public Optional<String> styleVar() {
        return Optional.ofNullable(this.styleVar);
    }

    @Import(name="width")
    private @Nullable String width;

    public Optional<String> width() {
        return Optional.ofNullable(this.width);
    }

    @Import(name="widthVar")
    private @Nullable String widthVar;

    public Optional<String> widthVar() {
        return Optional.ofNullable(this.widthVar);
    }

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop() {}

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop $) {
        this.gravity = $.gravity;
        this.gravityVar = $.gravityVar;
        this.height = $.height;
        this.heightVar = $.heightVar;
        this.regionOfInterest = $.regionOfInterest;
        this.style = $.style;
        this.styleVar = $.styleVar;
        this.width = $.width;
        this.widthVar = $.widthVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop(Objects.requireNonNull(defaults));
        }

        public Builder gravity(@Nullable String gravity) {
            $.gravity = gravity;
            return this;
        }

        public Builder gravityVar(@Nullable String gravityVar) {
            $.gravityVar = gravityVar;
            return this;
        }

        public Builder height(@Nullable String height) {
            $.height = height;
            return this;
        }

        public Builder heightVar(@Nullable String heightVar) {
            $.heightVar = heightVar;
            return this;
        }

        public Builder regionOfInterest(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCropRegionOfInterest regionOfInterest) {
            $.regionOfInterest = regionOfInterest;
            return this;
        }

        public Builder style(@Nullable String style) {
            $.style = style;
            return this;
        }

        public Builder styleVar(@Nullable String styleVar) {
            $.styleVar = styleVar;
            return this;
        }

        public Builder width(@Nullable String width) {
            $.width = width;
            return this;
        }

        public Builder widthVar(@Nullable String widthVar) {
            $.widthVar = widthVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanRegionOfInterestCrop build() {
            $.regionOfInterest = Objects.requireNonNull($.regionOfInterest, "expected parameter 'regionOfInterest' to be non-null");
            return $;
        }
    }

}
