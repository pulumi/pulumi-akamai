// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc;
import com.pulumi.akamai.outputs.GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn;
import com.pulumi.akamai.outputs.GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams;
import com.pulumi.akamai.outputs.GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudwrapperConfigurationsConfigurationMultiCdnSettings {
    private @Nullable GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc bocc;
    private @Nullable List<GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn> cdns;
    private @Nullable GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams dataStreams;
    private Boolean enableSoftAlerts;
    private @Nullable List<GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin> origins;

    private GetCloudwrapperConfigurationsConfigurationMultiCdnSettings() {}
    public Optional<GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc> bocc() {
        return Optional.ofNullable(this.bocc);
    }
    public List<GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn> cdns() {
        return this.cdns == null ? List.of() : this.cdns;
    }
    public Optional<GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams> dataStreams() {
        return Optional.ofNullable(this.dataStreams);
    }
    public Boolean enableSoftAlerts() {
        return this.enableSoftAlerts;
    }
    public List<GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin> origins() {
        return this.origins == null ? List.of() : this.origins;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudwrapperConfigurationsConfigurationMultiCdnSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc bocc;
        private @Nullable List<GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn> cdns;
        private @Nullable GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams dataStreams;
        private Boolean enableSoftAlerts;
        private @Nullable List<GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin> origins;
        public Builder() {}
        public Builder(GetCloudwrapperConfigurationsConfigurationMultiCdnSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bocc = defaults.bocc;
    	      this.cdns = defaults.cdns;
    	      this.dataStreams = defaults.dataStreams;
    	      this.enableSoftAlerts = defaults.enableSoftAlerts;
    	      this.origins = defaults.origins;
        }

        @CustomType.Setter
        public Builder bocc(@Nullable GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc bocc) {
            this.bocc = bocc;
            return this;
        }
        @CustomType.Setter
        public Builder cdns(@Nullable List<GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn> cdns) {
            this.cdns = cdns;
            return this;
        }
        public Builder cdns(GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn... cdns) {
            return cdns(List.of(cdns));
        }
        @CustomType.Setter
        public Builder dataStreams(@Nullable GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams dataStreams) {
            this.dataStreams = dataStreams;
            return this;
        }
        @CustomType.Setter
        public Builder enableSoftAlerts(Boolean enableSoftAlerts) {
            this.enableSoftAlerts = Objects.requireNonNull(enableSoftAlerts);
            return this;
        }
        @CustomType.Setter
        public Builder origins(@Nullable List<GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin> origins) {
            this.origins = origins;
            return this;
        }
        public Builder origins(GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin... origins) {
            return origins(List.of(origins));
        }
        public GetCloudwrapperConfigurationsConfigurationMultiCdnSettings build() {
            final var _resultValue = new GetCloudwrapperConfigurationsConfigurationMultiCdnSettings();
            _resultValue.bocc = bocc;
            _resultValue.cdns = cdns;
            _resultValue.dataStreams = dataStreams;
            _resultValue.enableSoftAlerts = enableSoftAlerts;
            _resultValue.origins = origins;
            return _resultValue;
        }
    }
}
