// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetGtmResourcesResourceLink;
import com.pulumi.akamai.inputs.GetGtmResourcesResourceResourceInstance;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGtmResourcesResource extends com.pulumi.resources.InvokeArgs {

    public static final GetGtmResourcesResource Empty = new GetGtmResourcesResource();

    /**
     * Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.
     * 
     */
    @Import(name="aggregationType", required=true)
    private String aggregationType;

    /**
     * @return Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.
     * 
     */
    public String aggregationType() {
        return this.aggregationType;
    }

    /**
     * Specifies the name of the property that this resource constraints.
     * 
     */
    @Import(name="constrainedProperty", required=true)
    private String constrainedProperty;

    /**
     * @return Specifies the name of the property that this resource constraints.
     * 
     */
    public String constrainedProperty() {
        return this.constrainedProperty;
    }

    /**
     * For internal use only.
     * 
     */
    @Import(name="decayRate", required=true)
    private Double decayRate;

    /**
     * @return For internal use only.
     * 
     */
    public Double decayRate() {
        return this.decayRate;
    }

    /**
     * A descriptive note which allows to track what is constrained by this resource.
     * 
     */
    @Import(name="description", required=true)
    private String description;

    /**
     * @return A descriptive note which allows to track what is constrained by this resource.
     * 
     */
    public String description() {
        return this.description;
    }

    /**
     * Specifies the host header used when fetching the load object.
     * 
     */
    @Import(name="hostHeader", required=true)
    private String hostHeader;

    /**
     * @return Specifies the host header used when fetching the load object.
     * 
     */
    public String hostHeader() {
        return this.hostHeader;
    }

    /**
     * Specifies the text that comes before the load object.
     * 
     */
    @Import(name="leaderString", required=true)
    private String leaderString;

    /**
     * @return Specifies the text that comes before the load object.
     * 
     */
    public String leaderString() {
        return this.leaderString;
    }

    /**
     * For internal use only.
     * 
     */
    @Import(name="leastSquaresDecay", required=true)
    private Double leastSquaresDecay;

    /**
     * @return For internal use only.
     * 
     */
    public Double leastSquaresDecay() {
        return this.leastSquaresDecay;
    }

    /**
     * Specifies the URL path that allows direct navigation to the resource.
     * 
     */
    @Import(name="links")
    private @Nullable List<GetGtmResourcesResourceLink> links;

    /**
     * @return Specifies the URL path that allows direct navigation to the resource.
     * 
     */
    public Optional<List<GetGtmResourcesResourceLink>> links() {
        return Optional.ofNullable(this.links);
    }

    /**
     * Indicates the percentage of load imbalance for the domain.
     * 
     */
    @Import(name="loadImbalancePercentage", required=true)
    private Double loadImbalancePercentage;

    /**
     * @return Indicates the percentage of load imbalance for the domain.
     * 
     */
    public Double loadImbalancePercentage() {
        return this.loadImbalancePercentage;
    }

    /**
     * For internal use only.
     * 
     */
    @Import(name="maxUMultiplicativeIncrement", required=true)
    private Double maxUMultiplicativeIncrement;

    /**
     * @return For internal use only.
     * 
     */
    public Double maxUMultiplicativeIncrement() {
        return this.maxUMultiplicativeIncrement;
    }

    /**
     * A descriptive label for the resource.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return A descriptive label for the resource.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Instances of the resource.
     * 
     */
    @Import(name="resourceInstances")
    private @Nullable List<GetGtmResourcesResourceResourceInstance> resourceInstances;

    /**
     * @return Instances of the resource.
     * 
     */
    public Optional<List<GetGtmResourcesResourceResourceInstance>> resourceInstances() {
        return Optional.ofNullable(this.resourceInstances);
    }

    /**
     * Indicates the type of load object used to determine the load on the resource.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Indicates the type of load object used to determine the load on the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * An optional sanity check that specifies the maximum allowed value for any component of the load object.
     * 
     */
    @Import(name="upperBound", required=true)
    private Integer upperBound;

    /**
     * @return An optional sanity check that specifies the maximum allowed value for any component of the load object.
     * 
     */
    public Integer upperBound() {
        return this.upperBound;
    }

    private GetGtmResourcesResource() {}

    private GetGtmResourcesResource(GetGtmResourcesResource $) {
        this.aggregationType = $.aggregationType;
        this.constrainedProperty = $.constrainedProperty;
        this.decayRate = $.decayRate;
        this.description = $.description;
        this.hostHeader = $.hostHeader;
        this.leaderString = $.leaderString;
        this.leastSquaresDecay = $.leastSquaresDecay;
        this.links = $.links;
        this.loadImbalancePercentage = $.loadImbalancePercentage;
        this.maxUMultiplicativeIncrement = $.maxUMultiplicativeIncrement;
        this.name = $.name;
        this.resourceInstances = $.resourceInstances;
        this.type = $.type;
        this.upperBound = $.upperBound;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGtmResourcesResource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGtmResourcesResource $;

        public Builder() {
            $ = new GetGtmResourcesResource();
        }

        public Builder(GetGtmResourcesResource defaults) {
            $ = new GetGtmResourcesResource(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregationType Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.
         * 
         * @return builder
         * 
         */
        public Builder aggregationType(String aggregationType) {
            $.aggregationType = aggregationType;
            return this;
        }

        /**
         * @param constrainedProperty Specifies the name of the property that this resource constraints.
         * 
         * @return builder
         * 
         */
        public Builder constrainedProperty(String constrainedProperty) {
            $.constrainedProperty = constrainedProperty;
            return this;
        }

        /**
         * @param decayRate For internal use only.
         * 
         * @return builder
         * 
         */
        public Builder decayRate(Double decayRate) {
            $.decayRate = decayRate;
            return this;
        }

        /**
         * @param description A descriptive note which allows to track what is constrained by this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            $.description = description;
            return this;
        }

        /**
         * @param hostHeader Specifies the host header used when fetching the load object.
         * 
         * @return builder
         * 
         */
        public Builder hostHeader(String hostHeader) {
            $.hostHeader = hostHeader;
            return this;
        }

        /**
         * @param leaderString Specifies the text that comes before the load object.
         * 
         * @return builder
         * 
         */
        public Builder leaderString(String leaderString) {
            $.leaderString = leaderString;
            return this;
        }

        /**
         * @param leastSquaresDecay For internal use only.
         * 
         * @return builder
         * 
         */
        public Builder leastSquaresDecay(Double leastSquaresDecay) {
            $.leastSquaresDecay = leastSquaresDecay;
            return this;
        }

        /**
         * @param links Specifies the URL path that allows direct navigation to the resource.
         * 
         * @return builder
         * 
         */
        public Builder links(@Nullable List<GetGtmResourcesResourceLink> links) {
            $.links = links;
            return this;
        }

        /**
         * @param links Specifies the URL path that allows direct navigation to the resource.
         * 
         * @return builder
         * 
         */
        public Builder links(GetGtmResourcesResourceLink... links) {
            return links(List.of(links));
        }

        /**
         * @param loadImbalancePercentage Indicates the percentage of load imbalance for the domain.
         * 
         * @return builder
         * 
         */
        public Builder loadImbalancePercentage(Double loadImbalancePercentage) {
            $.loadImbalancePercentage = loadImbalancePercentage;
            return this;
        }

        /**
         * @param maxUMultiplicativeIncrement For internal use only.
         * 
         * @return builder
         * 
         */
        public Builder maxUMultiplicativeIncrement(Double maxUMultiplicativeIncrement) {
            $.maxUMultiplicativeIncrement = maxUMultiplicativeIncrement;
            return this;
        }

        /**
         * @param name A descriptive label for the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param resourceInstances Instances of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceInstances(@Nullable List<GetGtmResourcesResourceResourceInstance> resourceInstances) {
            $.resourceInstances = resourceInstances;
            return this;
        }

        /**
         * @param resourceInstances Instances of the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceInstances(GetGtmResourcesResourceResourceInstance... resourceInstances) {
            return resourceInstances(List.of(resourceInstances));
        }

        /**
         * @param type Indicates the type of load object used to determine the load on the resource.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param upperBound An optional sanity check that specifies the maximum allowed value for any component of the load object.
         * 
         * @return builder
         * 
         */
        public Builder upperBound(Integer upperBound) {
            $.upperBound = upperBound;
            return this;
        }

        public GetGtmResourcesResource build() {
            if ($.aggregationType == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "aggregationType");
            }
            if ($.constrainedProperty == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "constrainedProperty");
            }
            if ($.decayRate == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "decayRate");
            }
            if ($.description == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "description");
            }
            if ($.hostHeader == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "hostHeader");
            }
            if ($.leaderString == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "leaderString");
            }
            if ($.leastSquaresDecay == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "leastSquaresDecay");
            }
            if ($.loadImbalancePercentage == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "loadImbalancePercentage");
            }
            if ($.maxUMultiplicativeIncrement == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "maxUMultiplicativeIncrement");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "name");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "type");
            }
            if ($.upperBound == null) {
                throw new MissingRequiredPropertyException("GetGtmResourcesResource", "upperBound");
            }
            return $;
        }
    }

}
