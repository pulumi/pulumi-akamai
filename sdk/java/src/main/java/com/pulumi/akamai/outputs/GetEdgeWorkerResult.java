// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEdgeWorkerResult {
    private Integer edgeworkerId;
    private String groupId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String localBundle;
    private String localBundleHash;
    private String name;
    private Integer resourceTierId;
    private String version;
    private List<String> warnings;

    private GetEdgeWorkerResult() {}
    public Integer edgeworkerId() {
        return this.edgeworkerId;
    }
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> localBundle() {
        return Optional.ofNullable(this.localBundle);
    }
    public String localBundleHash() {
        return this.localBundleHash;
    }
    public String name() {
        return this.name;
    }
    public Integer resourceTierId() {
        return this.resourceTierId;
    }
    public String version() {
        return this.version;
    }
    public List<String> warnings() {
        return this.warnings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEdgeWorkerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer edgeworkerId;
        private String groupId;
        private String id;
        private @Nullable String localBundle;
        private String localBundleHash;
        private String name;
        private Integer resourceTierId;
        private String version;
        private List<String> warnings;
        public Builder() {}
        public Builder(GetEdgeWorkerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.edgeworkerId = defaults.edgeworkerId;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.localBundle = defaults.localBundle;
    	      this.localBundleHash = defaults.localBundleHash;
    	      this.name = defaults.name;
    	      this.resourceTierId = defaults.resourceTierId;
    	      this.version = defaults.version;
    	      this.warnings = defaults.warnings;
        }

        @CustomType.Setter
        public Builder edgeworkerId(Integer edgeworkerId) {
            if (edgeworkerId == null) {
              throw new MissingRequiredPropertyException("GetEdgeWorkerResult", "edgeworkerId");
            }
            this.edgeworkerId = edgeworkerId;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetEdgeWorkerResult", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEdgeWorkerResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder localBundle(@Nullable String localBundle) {

            this.localBundle = localBundle;
            return this;
        }
        @CustomType.Setter
        public Builder localBundleHash(String localBundleHash) {
            if (localBundleHash == null) {
              throw new MissingRequiredPropertyException("GetEdgeWorkerResult", "localBundleHash");
            }
            this.localBundleHash = localBundleHash;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEdgeWorkerResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTierId(Integer resourceTierId) {
            if (resourceTierId == null) {
              throw new MissingRequiredPropertyException("GetEdgeWorkerResult", "resourceTierId");
            }
            this.resourceTierId = resourceTierId;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetEdgeWorkerResult", "version");
            }
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder warnings(List<String> warnings) {
            if (warnings == null) {
              throw new MissingRequiredPropertyException("GetEdgeWorkerResult", "warnings");
            }
            this.warnings = warnings;
            return this;
        }
        public Builder warnings(String... warnings) {
            return warnings(List.of(warnings));
        }
        public GetEdgeWorkerResult build() {
            final var _resultValue = new GetEdgeWorkerResult();
            _resultValue.edgeworkerId = edgeworkerId;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.localBundle = localBundle;
            _resultValue.localBundleHash = localBundleHash;
            _resultValue.name = name;
            _resultValue.resourceTierId = resourceTierId;
            _resultValue.version = version;
            _resultValue.warnings = warnings;
            return _resultValue;
        }
    }
}
