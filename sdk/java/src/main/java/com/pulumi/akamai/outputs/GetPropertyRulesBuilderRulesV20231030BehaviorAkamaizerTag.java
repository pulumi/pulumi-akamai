// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20231030BehaviorAkamaizerTag {
    /**
     * @return Whether to include the `tagsAttribute` value.
     * 
     */
    private @Nullable Boolean includeTagsAttribute;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Specifies the hostname to match on as a Perl-compatible regular expression.
     * 
     */
    private @Nullable String matchHostname;
    /**
     * @return Replaces all matches when enabled, otherwise replaces only the first match.
     * 
     */
    private @Nullable Boolean replaceAll;
    /**
     * @return Specifies the replacement hostname for the tag to use.
     * 
     */
    private @Nullable String replacementHostname;
    /**
     * @return Specifies the part of HTML content the `tagsAttribute` refers to.
     * 
     */
    private @Nullable String scope;
    /**
     * @return Specifies the tag or tag/attribute combination to operate on.
     * 
     */
    private @Nullable String tagsAttribute;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20231030BehaviorAkamaizerTag() {}
    /**
     * @return Whether to include the `tagsAttribute` value.
     * 
     */
    public Optional<Boolean> includeTagsAttribute() {
        return Optional.ofNullable(this.includeTagsAttribute);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Specifies the hostname to match on as a Perl-compatible regular expression.
     * 
     */
    public Optional<String> matchHostname() {
        return Optional.ofNullable(this.matchHostname);
    }
    /**
     * @return Replaces all matches when enabled, otherwise replaces only the first match.
     * 
     */
    public Optional<Boolean> replaceAll() {
        return Optional.ofNullable(this.replaceAll);
    }
    /**
     * @return Specifies the replacement hostname for the tag to use.
     * 
     */
    public Optional<String> replacementHostname() {
        return Optional.ofNullable(this.replacementHostname);
    }
    /**
     * @return Specifies the part of HTML content the `tagsAttribute` refers to.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return Specifies the tag or tag/attribute combination to operate on.
     * 
     */
    public Optional<String> tagsAttribute() {
        return Optional.ofNullable(this.tagsAttribute);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20231030BehaviorAkamaizerTag defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean includeTagsAttribute;
        private @Nullable Boolean locked;
        private @Nullable String matchHostname;
        private @Nullable Boolean replaceAll;
        private @Nullable String replacementHostname;
        private @Nullable String scope;
        private @Nullable String tagsAttribute;
        private @Nullable String templateUuid;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20231030BehaviorAkamaizerTag defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.includeTagsAttribute = defaults.includeTagsAttribute;
    	      this.locked = defaults.locked;
    	      this.matchHostname = defaults.matchHostname;
    	      this.replaceAll = defaults.replaceAll;
    	      this.replacementHostname = defaults.replacementHostname;
    	      this.scope = defaults.scope;
    	      this.tagsAttribute = defaults.tagsAttribute;
    	      this.templateUuid = defaults.templateUuid;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder includeTagsAttribute(@Nullable Boolean includeTagsAttribute) {

            this.includeTagsAttribute = includeTagsAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder matchHostname(@Nullable String matchHostname) {

            this.matchHostname = matchHostname;
            return this;
        }
        @CustomType.Setter
        public Builder replaceAll(@Nullable Boolean replaceAll) {

            this.replaceAll = replaceAll;
            return this;
        }
        @CustomType.Setter
        public Builder replacementHostname(@Nullable String replacementHostname) {

            this.replacementHostname = replacementHostname;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {

            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder tagsAttribute(@Nullable String tagsAttribute) {

            this.tagsAttribute = tagsAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20231030BehaviorAkamaizerTag build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20231030BehaviorAkamaizerTag();
            _resultValue.includeTagsAttribute = includeTagsAttribute;
            _resultValue.locked = locked;
            _resultValue.matchHostname = matchHostname;
            _resultValue.replaceAll = replaceAll;
            _resultValue.replacementHostname = replacementHostname;
            _resultValue.scope = scope;
            _resultValue.tagsAttribute = tagsAttribute;
            _resultValue.templateUuid = templateUuid;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
