// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicy;
import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorage;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230105BehaviorInputValidation {
    /**
     * @return Fails POST request bodies that exceed 16 KB when enabled, otherwise allows them to pass with no validation for policy compliance.
     * 
     */
    private @Nullable Boolean allowLargePostBody;
    /**
     * @return Identifies the Cloudlet policy.
     * 
     */
    private @Nullable GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicy cloudletPolicy;
    /**
     * @return Applies the Input Validation Cloudlet behavior.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Specifies the redirect link for invalid requests that have not yet triggered a penalty.
     * 
     */
    private @Nullable String failure302Uri;
    /**
     * @return Distinguishes this Input Validation policy from any others within the same property.
     * 
     */
    private @Nullable String label;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Specifies the redirect link for end users who trigger the penalty.
     * 
     */
    private @Nullable String penalty302Uri;
    /**
     * @return Specifies the full path to the static 403 response content relative to the `downloadDomainName` in the `penaltyNetStorage` object.
     * 
     */
    private @Nullable String penalty403NetStoragePath;
    /**
     * @return Once the `penaltyThreshold` of invalid requests is met, this specifies the response.
     * 
     */
    private @Nullable String penaltyAction;
    /**
     * @return Specifies the penalty response&#39;s time to live in the cache, `5` minutes by default.
     * 
     */
    private @Nullable Integer penaltyBrandedDenyCacheTtl;
    /**
     * @return Specifies the NetStorage account that serves out the penalty&#39;s static 403 response content. Details appear in an object featuring a `downloadDomainName` string member that identifies the NetStorage hostname, and an integer `cpCode` to track the traffic.
     * 
     */
    private @Nullable GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorage penaltyNetStorage;
    /**
     * @return Specifies the number of invalid requests permitted before executing the `penaltyAction`.
     * 
     */
    private @Nullable Integer penaltyThreshold;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String penaltyTitle;
    /**
     * @return Upon receiving a valid request, enabling this resets the `penaltyThreshold` counter to zero.  Otherwise, even those series of invalid requests that are interrupted by valid requests may trigger the `penaltyAction`.
     * 
     */
    private @Nullable Boolean resetOnValid;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return When enabled, identifies users by the value of a cookie.
     * 
     */
    private @Nullable Boolean userIdentificationByCookie;
    /**
     * @return When enabled, identifies users by specific HTTP headers on GET or POST requests.
     * 
     */
    private @Nullable Boolean userIdentificationByHeaders;
    /**
     * @return When enabled, identifies users by specific IP address. Do not enable this if you are concerned about DDoS attacks from many different IP addresses.
     * 
     */
    private @Nullable Boolean userIdentificationByIp;
    /**
     * @return When enabled, identifies users by specific query parameters on GET or POST requests.
     * 
     */
    private @Nullable Boolean userIdentificationByParams;
    /**
     * @return This specifies the cookie name whose value needs to remain constant across requests to identify a user.
     * 
     */
    private @Nullable String userIdentificationKeyCookie;
    /**
     * @return This specifies the HTTP headers whose combined set of values identify each end user.
     * 
     */
    private @Nullable List<String> userIdentificationKeyHeaders;
    /**
     * @return This specifies the query parameters whose combined set of values identify each end user.
     * 
     */
    private @Nullable List<String> userIdentificationKeyParams;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String userIdentificationTitle;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;
    /**
     * @return If `validateOnOriginWith` is set to `RESPONSE_CODE_AND_HEADER`, this specifies the header name for a request that the origin identifies as invalid.
     * 
     */
    private @Nullable String validateOnOriginHeaderName;
    /**
     * @return If `validateOnOriginWith` is set to `RESPONSE_CODE_AND_HEADER`, this specifies an invalid request&#39;s header value that corresponds to the `validateOnOriginHeaderName`.
     * 
     */
    private @Nullable String validateOnOriginHeaderValue;
    /**
     * @return Unless `validateOnOriginWith` is `DISABLED`, this identifies the integer response code for requests the origin identifies as invalid.
     * 
     */
    private @Nullable Integer validateOnOriginResponseCode;
    /**
     * @return For any validation that edge servers can&#39;t perform alone, this specifies additional validation steps based on how the origin identifies an invalid request.  If a request is invalid, the origin can indicate this to the edge server.
     * 
     */
    private @Nullable String validateOnOriginWith;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String validationTitle;

    private GetPropertyRulesBuilderRulesV20230105BehaviorInputValidation() {}
    /**
     * @return Fails POST request bodies that exceed 16 KB when enabled, otherwise allows them to pass with no validation for policy compliance.
     * 
     */
    public Optional<Boolean> allowLargePostBody() {
        return Optional.ofNullable(this.allowLargePostBody);
    }
    /**
     * @return Identifies the Cloudlet policy.
     * 
     */
    public Optional<GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicy> cloudletPolicy() {
        return Optional.ofNullable(this.cloudletPolicy);
    }
    /**
     * @return Applies the Input Validation Cloudlet behavior.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Specifies the redirect link for invalid requests that have not yet triggered a penalty.
     * 
     */
    public Optional<String> failure302Uri() {
        return Optional.ofNullable(this.failure302Uri);
    }
    /**
     * @return Distinguishes this Input Validation policy from any others within the same property.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Specifies the redirect link for end users who trigger the penalty.
     * 
     */
    public Optional<String> penalty302Uri() {
        return Optional.ofNullable(this.penalty302Uri);
    }
    /**
     * @return Specifies the full path to the static 403 response content relative to the `downloadDomainName` in the `penaltyNetStorage` object.
     * 
     */
    public Optional<String> penalty403NetStoragePath() {
        return Optional.ofNullable(this.penalty403NetStoragePath);
    }
    /**
     * @return Once the `penaltyThreshold` of invalid requests is met, this specifies the response.
     * 
     */
    public Optional<String> penaltyAction() {
        return Optional.ofNullable(this.penaltyAction);
    }
    /**
     * @return Specifies the penalty response&#39;s time to live in the cache, `5` minutes by default.
     * 
     */
    public Optional<Integer> penaltyBrandedDenyCacheTtl() {
        return Optional.ofNullable(this.penaltyBrandedDenyCacheTtl);
    }
    /**
     * @return Specifies the NetStorage account that serves out the penalty&#39;s static 403 response content. Details appear in an object featuring a `downloadDomainName` string member that identifies the NetStorage hostname, and an integer `cpCode` to track the traffic.
     * 
     */
    public Optional<GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorage> penaltyNetStorage() {
        return Optional.ofNullable(this.penaltyNetStorage);
    }
    /**
     * @return Specifies the number of invalid requests permitted before executing the `penaltyAction`.
     * 
     */
    public Optional<Integer> penaltyThreshold() {
        return Optional.ofNullable(this.penaltyThreshold);
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> penaltyTitle() {
        return Optional.ofNullable(this.penaltyTitle);
    }
    /**
     * @return Upon receiving a valid request, enabling this resets the `penaltyThreshold` counter to zero.  Otherwise, even those series of invalid requests that are interrupted by valid requests may trigger the `penaltyAction`.
     * 
     */
    public Optional<Boolean> resetOnValid() {
        return Optional.ofNullable(this.resetOnValid);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return When enabled, identifies users by the value of a cookie.
     * 
     */
    public Optional<Boolean> userIdentificationByCookie() {
        return Optional.ofNullable(this.userIdentificationByCookie);
    }
    /**
     * @return When enabled, identifies users by specific HTTP headers on GET or POST requests.
     * 
     */
    public Optional<Boolean> userIdentificationByHeaders() {
        return Optional.ofNullable(this.userIdentificationByHeaders);
    }
    /**
     * @return When enabled, identifies users by specific IP address. Do not enable this if you are concerned about DDoS attacks from many different IP addresses.
     * 
     */
    public Optional<Boolean> userIdentificationByIp() {
        return Optional.ofNullable(this.userIdentificationByIp);
    }
    /**
     * @return When enabled, identifies users by specific query parameters on GET or POST requests.
     * 
     */
    public Optional<Boolean> userIdentificationByParams() {
        return Optional.ofNullable(this.userIdentificationByParams);
    }
    /**
     * @return This specifies the cookie name whose value needs to remain constant across requests to identify a user.
     * 
     */
    public Optional<String> userIdentificationKeyCookie() {
        return Optional.ofNullable(this.userIdentificationKeyCookie);
    }
    /**
     * @return This specifies the HTTP headers whose combined set of values identify each end user.
     * 
     */
    public List<String> userIdentificationKeyHeaders() {
        return this.userIdentificationKeyHeaders == null ? List.of() : this.userIdentificationKeyHeaders;
    }
    /**
     * @return This specifies the query parameters whose combined set of values identify each end user.
     * 
     */
    public List<String> userIdentificationKeyParams() {
        return this.userIdentificationKeyParams == null ? List.of() : this.userIdentificationKeyParams;
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> userIdentificationTitle() {
        return Optional.ofNullable(this.userIdentificationTitle);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }
    /**
     * @return If `validateOnOriginWith` is set to `RESPONSE_CODE_AND_HEADER`, this specifies the header name for a request that the origin identifies as invalid.
     * 
     */
    public Optional<String> validateOnOriginHeaderName() {
        return Optional.ofNullable(this.validateOnOriginHeaderName);
    }
    /**
     * @return If `validateOnOriginWith` is set to `RESPONSE_CODE_AND_HEADER`, this specifies an invalid request&#39;s header value that corresponds to the `validateOnOriginHeaderName`.
     * 
     */
    public Optional<String> validateOnOriginHeaderValue() {
        return Optional.ofNullable(this.validateOnOriginHeaderValue);
    }
    /**
     * @return Unless `validateOnOriginWith` is `DISABLED`, this identifies the integer response code for requests the origin identifies as invalid.
     * 
     */
    public Optional<Integer> validateOnOriginResponseCode() {
        return Optional.ofNullable(this.validateOnOriginResponseCode);
    }
    /**
     * @return For any validation that edge servers can&#39;t perform alone, this specifies additional validation steps based on how the origin identifies an invalid request.  If a request is invalid, the origin can indicate this to the edge server.
     * 
     */
    public Optional<String> validateOnOriginWith() {
        return Optional.ofNullable(this.validateOnOriginWith);
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> validationTitle() {
        return Optional.ofNullable(this.validationTitle);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230105BehaviorInputValidation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowLargePostBody;
        private @Nullable GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicy cloudletPolicy;
        private @Nullable Boolean enabled;
        private @Nullable String failure302Uri;
        private @Nullable String label;
        private @Nullable Boolean locked;
        private @Nullable String penalty302Uri;
        private @Nullable String penalty403NetStoragePath;
        private @Nullable String penaltyAction;
        private @Nullable Integer penaltyBrandedDenyCacheTtl;
        private @Nullable GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorage penaltyNetStorage;
        private @Nullable Integer penaltyThreshold;
        private @Nullable String penaltyTitle;
        private @Nullable Boolean resetOnValid;
        private @Nullable String templateUuid;
        private @Nullable Boolean userIdentificationByCookie;
        private @Nullable Boolean userIdentificationByHeaders;
        private @Nullable Boolean userIdentificationByIp;
        private @Nullable Boolean userIdentificationByParams;
        private @Nullable String userIdentificationKeyCookie;
        private @Nullable List<String> userIdentificationKeyHeaders;
        private @Nullable List<String> userIdentificationKeyParams;
        private @Nullable String userIdentificationTitle;
        private @Nullable String uuid;
        private @Nullable String validateOnOriginHeaderName;
        private @Nullable String validateOnOriginHeaderValue;
        private @Nullable Integer validateOnOriginResponseCode;
        private @Nullable String validateOnOriginWith;
        private @Nullable String validationTitle;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230105BehaviorInputValidation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowLargePostBody = defaults.allowLargePostBody;
    	      this.cloudletPolicy = defaults.cloudletPolicy;
    	      this.enabled = defaults.enabled;
    	      this.failure302Uri = defaults.failure302Uri;
    	      this.label = defaults.label;
    	      this.locked = defaults.locked;
    	      this.penalty302Uri = defaults.penalty302Uri;
    	      this.penalty403NetStoragePath = defaults.penalty403NetStoragePath;
    	      this.penaltyAction = defaults.penaltyAction;
    	      this.penaltyBrandedDenyCacheTtl = defaults.penaltyBrandedDenyCacheTtl;
    	      this.penaltyNetStorage = defaults.penaltyNetStorage;
    	      this.penaltyThreshold = defaults.penaltyThreshold;
    	      this.penaltyTitle = defaults.penaltyTitle;
    	      this.resetOnValid = defaults.resetOnValid;
    	      this.templateUuid = defaults.templateUuid;
    	      this.userIdentificationByCookie = defaults.userIdentificationByCookie;
    	      this.userIdentificationByHeaders = defaults.userIdentificationByHeaders;
    	      this.userIdentificationByIp = defaults.userIdentificationByIp;
    	      this.userIdentificationByParams = defaults.userIdentificationByParams;
    	      this.userIdentificationKeyCookie = defaults.userIdentificationKeyCookie;
    	      this.userIdentificationKeyHeaders = defaults.userIdentificationKeyHeaders;
    	      this.userIdentificationKeyParams = defaults.userIdentificationKeyParams;
    	      this.userIdentificationTitle = defaults.userIdentificationTitle;
    	      this.uuid = defaults.uuid;
    	      this.validateOnOriginHeaderName = defaults.validateOnOriginHeaderName;
    	      this.validateOnOriginHeaderValue = defaults.validateOnOriginHeaderValue;
    	      this.validateOnOriginResponseCode = defaults.validateOnOriginResponseCode;
    	      this.validateOnOriginWith = defaults.validateOnOriginWith;
    	      this.validationTitle = defaults.validationTitle;
        }

        @CustomType.Setter
        public Builder allowLargePostBody(@Nullable Boolean allowLargePostBody) {

            this.allowLargePostBody = allowLargePostBody;
            return this;
        }
        @CustomType.Setter
        public Builder cloudletPolicy(@Nullable GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationCloudletPolicy cloudletPolicy) {

            this.cloudletPolicy = cloudletPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder failure302Uri(@Nullable String failure302Uri) {

            this.failure302Uri = failure302Uri;
            return this;
        }
        @CustomType.Setter
        public Builder label(@Nullable String label) {

            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder penalty302Uri(@Nullable String penalty302Uri) {

            this.penalty302Uri = penalty302Uri;
            return this;
        }
        @CustomType.Setter
        public Builder penalty403NetStoragePath(@Nullable String penalty403NetStoragePath) {

            this.penalty403NetStoragePath = penalty403NetStoragePath;
            return this;
        }
        @CustomType.Setter
        public Builder penaltyAction(@Nullable String penaltyAction) {

            this.penaltyAction = penaltyAction;
            return this;
        }
        @CustomType.Setter
        public Builder penaltyBrandedDenyCacheTtl(@Nullable Integer penaltyBrandedDenyCacheTtl) {

            this.penaltyBrandedDenyCacheTtl = penaltyBrandedDenyCacheTtl;
            return this;
        }
        @CustomType.Setter
        public Builder penaltyNetStorage(@Nullable GetPropertyRulesBuilderRulesV20230105BehaviorInputValidationPenaltyNetStorage penaltyNetStorage) {

            this.penaltyNetStorage = penaltyNetStorage;
            return this;
        }
        @CustomType.Setter
        public Builder penaltyThreshold(@Nullable Integer penaltyThreshold) {

            this.penaltyThreshold = penaltyThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder penaltyTitle(@Nullable String penaltyTitle) {

            this.penaltyTitle = penaltyTitle;
            return this;
        }
        @CustomType.Setter
        public Builder resetOnValid(@Nullable Boolean resetOnValid) {

            this.resetOnValid = resetOnValid;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder userIdentificationByCookie(@Nullable Boolean userIdentificationByCookie) {

            this.userIdentificationByCookie = userIdentificationByCookie;
            return this;
        }
        @CustomType.Setter
        public Builder userIdentificationByHeaders(@Nullable Boolean userIdentificationByHeaders) {

            this.userIdentificationByHeaders = userIdentificationByHeaders;
            return this;
        }
        @CustomType.Setter
        public Builder userIdentificationByIp(@Nullable Boolean userIdentificationByIp) {

            this.userIdentificationByIp = userIdentificationByIp;
            return this;
        }
        @CustomType.Setter
        public Builder userIdentificationByParams(@Nullable Boolean userIdentificationByParams) {

            this.userIdentificationByParams = userIdentificationByParams;
            return this;
        }
        @CustomType.Setter
        public Builder userIdentificationKeyCookie(@Nullable String userIdentificationKeyCookie) {

            this.userIdentificationKeyCookie = userIdentificationKeyCookie;
            return this;
        }
        @CustomType.Setter
        public Builder userIdentificationKeyHeaders(@Nullable List<String> userIdentificationKeyHeaders) {

            this.userIdentificationKeyHeaders = userIdentificationKeyHeaders;
            return this;
        }
        public Builder userIdentificationKeyHeaders(String... userIdentificationKeyHeaders) {
            return userIdentificationKeyHeaders(List.of(userIdentificationKeyHeaders));
        }
        @CustomType.Setter
        public Builder userIdentificationKeyParams(@Nullable List<String> userIdentificationKeyParams) {

            this.userIdentificationKeyParams = userIdentificationKeyParams;
            return this;
        }
        public Builder userIdentificationKeyParams(String... userIdentificationKeyParams) {
            return userIdentificationKeyParams(List.of(userIdentificationKeyParams));
        }
        @CustomType.Setter
        public Builder userIdentificationTitle(@Nullable String userIdentificationTitle) {

            this.userIdentificationTitle = userIdentificationTitle;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        @CustomType.Setter
        public Builder validateOnOriginHeaderName(@Nullable String validateOnOriginHeaderName) {

            this.validateOnOriginHeaderName = validateOnOriginHeaderName;
            return this;
        }
        @CustomType.Setter
        public Builder validateOnOriginHeaderValue(@Nullable String validateOnOriginHeaderValue) {

            this.validateOnOriginHeaderValue = validateOnOriginHeaderValue;
            return this;
        }
        @CustomType.Setter
        public Builder validateOnOriginResponseCode(@Nullable Integer validateOnOriginResponseCode) {

            this.validateOnOriginResponseCode = validateOnOriginResponseCode;
            return this;
        }
        @CustomType.Setter
        public Builder validateOnOriginWith(@Nullable String validateOnOriginWith) {

            this.validateOnOriginWith = validateOnOriginWith;
            return this;
        }
        @CustomType.Setter
        public Builder validationTitle(@Nullable String validationTitle) {

            this.validationTitle = validationTitle;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230105BehaviorInputValidation build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230105BehaviorInputValidation();
            _resultValue.allowLargePostBody = allowLargePostBody;
            _resultValue.cloudletPolicy = cloudletPolicy;
            _resultValue.enabled = enabled;
            _resultValue.failure302Uri = failure302Uri;
            _resultValue.label = label;
            _resultValue.locked = locked;
            _resultValue.penalty302Uri = penalty302Uri;
            _resultValue.penalty403NetStoragePath = penalty403NetStoragePath;
            _resultValue.penaltyAction = penaltyAction;
            _resultValue.penaltyBrandedDenyCacheTtl = penaltyBrandedDenyCacheTtl;
            _resultValue.penaltyNetStorage = penaltyNetStorage;
            _resultValue.penaltyThreshold = penaltyThreshold;
            _resultValue.penaltyTitle = penaltyTitle;
            _resultValue.resetOnValid = resetOnValid;
            _resultValue.templateUuid = templateUuid;
            _resultValue.userIdentificationByCookie = userIdentificationByCookie;
            _resultValue.userIdentificationByHeaders = userIdentificationByHeaders;
            _resultValue.userIdentificationByIp = userIdentificationByIp;
            _resultValue.userIdentificationByParams = userIdentificationByParams;
            _resultValue.userIdentificationKeyCookie = userIdentificationKeyCookie;
            _resultValue.userIdentificationKeyHeaders = userIdentificationKeyHeaders;
            _resultValue.userIdentificationKeyParams = userIdentificationKeyParams;
            _resultValue.userIdentificationTitle = userIdentificationTitle;
            _resultValue.uuid = uuid;
            _resultValue.validateOnOriginHeaderName = validateOnOriginHeaderName;
            _resultValue.validateOnOriginHeaderValue = validateOnOriginHeaderValue;
            _resultValue.validateOnOriginResponseCode = validateOnOriginResponseCode;
            _resultValue.validateOnOriginWith = validateOnOriginWith;
            _resultValue.validationTitle = validationTitle;
            return _resultValue;
        }
    }
}
