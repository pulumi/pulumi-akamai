// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs Empty = new GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs();

    /**
     * When enabled, the edge server requires a prompt from the origin for the client certificate&#39;s identity. If the edge server gets the request, it proceeds with the mTLS session and connects to the origin. If the edge server doesn’t get the request, the connection to the origin stops and a client error is reported. When disabled, the edge server proceeds without a request for the client certificate, making a standard TLS connection to the origin. Disabled by default.
     * 
     */
    @Import(name="authClientCert")
    private @Nullable Output<Boolean> authClientCert;

    /**
     * @return When enabled, the edge server requires a prompt from the origin for the client certificate&#39;s identity. If the edge server gets the request, it proceeds with the mTLS session and connects to the origin. If the edge server doesn’t get the request, the connection to the origin stops and a client error is reported. When disabled, the edge server proceeds without a request for the client certificate, making a standard TLS connection to the origin. Disabled by default.
     * 
     */
    public Optional<Output<Boolean>> authClientCert() {
        return Optional.ofNullable(this.authClientCert);
    }

    /**
     * Specifies the client certificate to authenticate your origin with the edge server. You need to create client certificates using the `Mutual TLS Origin Keystore` API or application.
     * 
     */
    @Import(name="clientCertificateVersionGuid")
    private @Nullable Output<String> clientCertificateVersionGuid;

    /**
     * @return Specifies the client certificate to authenticate your origin with the edge server. You need to create client certificates using the `Mutual TLS Origin Keystore` API or application.
     * 
     */
    public Optional<Output<String>> clientCertificateVersionGuid() {
        return Optional.ofNullable(this.clientCertificateVersionGuid);
    }

    /**
     * Allows a specific mutual transport layer (mTLS) client certificate in a request from the edge server to the origin.
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return Allows a specific mutual transport layer (mTLS) client certificate in a request from the edge server to the origin.
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs() {}

    private GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs(GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs $) {
        this.authClientCert = $.authClientCert;
        this.clientCertificateVersionGuid = $.clientCertificateVersionGuid;
        this.enable = $.enable;
        this.locked = $.locked;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authClientCert When enabled, the edge server requires a prompt from the origin for the client certificate&#39;s identity. If the edge server gets the request, it proceeds with the mTLS session and connects to the origin. If the edge server doesn’t get the request, the connection to the origin stops and a client error is reported. When disabled, the edge server proceeds without a request for the client certificate, making a standard TLS connection to the origin. Disabled by default.
         * 
         * @return builder
         * 
         */
        public Builder authClientCert(@Nullable Output<Boolean> authClientCert) {
            $.authClientCert = authClientCert;
            return this;
        }

        /**
         * @param authClientCert When enabled, the edge server requires a prompt from the origin for the client certificate&#39;s identity. If the edge server gets the request, it proceeds with the mTLS session and connects to the origin. If the edge server doesn’t get the request, the connection to the origin stops and a client error is reported. When disabled, the edge server proceeds without a request for the client certificate, making a standard TLS connection to the origin. Disabled by default.
         * 
         * @return builder
         * 
         */
        public Builder authClientCert(Boolean authClientCert) {
            return authClientCert(Output.of(authClientCert));
        }

        /**
         * @param clientCertificateVersionGuid Specifies the client certificate to authenticate your origin with the edge server. You need to create client certificates using the `Mutual TLS Origin Keystore` API or application.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateVersionGuid(@Nullable Output<String> clientCertificateVersionGuid) {
            $.clientCertificateVersionGuid = clientCertificateVersionGuid;
            return this;
        }

        /**
         * @param clientCertificateVersionGuid Specifies the client certificate to authenticate your origin with the edge server. You need to create client certificates using the `Mutual TLS Origin Keystore` API or application.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateVersionGuid(String clientCertificateVersionGuid) {
            return clientCertificateVersionGuid(Output.of(clientCertificateVersionGuid));
        }

        /**
         * @param enable Allows a specific mutual transport layer (mTLS) client certificate in a request from the edge server to the origin.
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable Allows a specific mutual transport layer (mTLS) client certificate in a request from the edge server to the origin.
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20250113BehaviorMtlsOriginKeystoreArgs build() {
            return $;
        }
    }

}
