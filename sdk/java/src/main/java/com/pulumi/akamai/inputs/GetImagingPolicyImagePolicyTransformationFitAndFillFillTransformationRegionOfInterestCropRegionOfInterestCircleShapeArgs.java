// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs Empty = new GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs();

    @Import(name="center", required=true)
    private Output<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenterArgs> center;

    public Output<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenterArgs> center() {
        return this.center;
    }

    @Import(name="radius")
    private @Nullable Output<String> radius;

    public Optional<Output<String>> radius() {
        return Optional.ofNullable(this.radius);
    }

    @Import(name="radiusVar")
    private @Nullable Output<String> radiusVar;

    public Optional<Output<String>> radiusVar() {
        return Optional.ofNullable(this.radiusVar);
    }

    private GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs() {}

    private GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs $) {
        this.center = $.center;
        this.radius = $.radius;
        this.radiusVar = $.radiusVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs(Objects.requireNonNull(defaults));
        }

        public Builder center(Output<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenterArgs> center) {
            $.center = center;
            return this;
        }

        public Builder center(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenterArgs center) {
            return center(Output.of(center));
        }

        public Builder radius(@Nullable Output<String> radius) {
            $.radius = radius;
            return this;
        }

        public Builder radius(String radius) {
            return radius(Output.of(radius));
        }

        public Builder radiusVar(@Nullable Output<String> radiusVar) {
            $.radiusVar = radiusVar;
            return this;
        }

        public Builder radiusVar(String radiusVar) {
            return radiusVar(Output.of(radiusVar));
        }

        public GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationRegionOfInterestCropRegionOfInterestCircleShapeArgs build() {
            $.center = Objects.requireNonNull($.center, "expected parameter 'center' to be non-null");
            return $;
        }
    }

}
