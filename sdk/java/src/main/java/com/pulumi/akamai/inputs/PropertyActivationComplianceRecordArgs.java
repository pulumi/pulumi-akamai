// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs;
import com.pulumi.akamai.inputs.PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs;
import com.pulumi.akamai.inputs.PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs;
import com.pulumi.akamai.inputs.PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PropertyActivationComplianceRecordArgs extends com.pulumi.resources.ResourceArgs {

    public static final PropertyActivationComplianceRecordArgs Empty = new PropertyActivationComplianceRecordArgs();

    @Import(name="noncomplianceReasonEmergency")
    private @Nullable Output<PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs> noncomplianceReasonEmergency;

    public Optional<Output<PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs>> noncomplianceReasonEmergency() {
        return Optional.ofNullable(this.noncomplianceReasonEmergency);
    }

    @Import(name="noncomplianceReasonNoProductionTraffic")
    private @Nullable Output<PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs> noncomplianceReasonNoProductionTraffic;

    public Optional<Output<PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs>> noncomplianceReasonNoProductionTraffic() {
        return Optional.ofNullable(this.noncomplianceReasonNoProductionTraffic);
    }

    @Import(name="noncomplianceReasonNone")
    private @Nullable Output<PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs> noncomplianceReasonNone;

    public Optional<Output<PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs>> noncomplianceReasonNone() {
        return Optional.ofNullable(this.noncomplianceReasonNone);
    }

    @Import(name="noncomplianceReasonOther")
    private @Nullable Output<PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs> noncomplianceReasonOther;

    public Optional<Output<PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs>> noncomplianceReasonOther() {
        return Optional.ofNullable(this.noncomplianceReasonOther);
    }

    private PropertyActivationComplianceRecordArgs() {}

    private PropertyActivationComplianceRecordArgs(PropertyActivationComplianceRecordArgs $) {
        this.noncomplianceReasonEmergency = $.noncomplianceReasonEmergency;
        this.noncomplianceReasonNoProductionTraffic = $.noncomplianceReasonNoProductionTraffic;
        this.noncomplianceReasonNone = $.noncomplianceReasonNone;
        this.noncomplianceReasonOther = $.noncomplianceReasonOther;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PropertyActivationComplianceRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PropertyActivationComplianceRecordArgs $;

        public Builder() {
            $ = new PropertyActivationComplianceRecordArgs();
        }

        public Builder(PropertyActivationComplianceRecordArgs defaults) {
            $ = new PropertyActivationComplianceRecordArgs(Objects.requireNonNull(defaults));
        }

        public Builder noncomplianceReasonEmergency(@Nullable Output<PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs> noncomplianceReasonEmergency) {
            $.noncomplianceReasonEmergency = noncomplianceReasonEmergency;
            return this;
        }

        public Builder noncomplianceReasonEmergency(PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs noncomplianceReasonEmergency) {
            return noncomplianceReasonEmergency(Output.of(noncomplianceReasonEmergency));
        }

        public Builder noncomplianceReasonNoProductionTraffic(@Nullable Output<PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs> noncomplianceReasonNoProductionTraffic) {
            $.noncomplianceReasonNoProductionTraffic = noncomplianceReasonNoProductionTraffic;
            return this;
        }

        public Builder noncomplianceReasonNoProductionTraffic(PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs noncomplianceReasonNoProductionTraffic) {
            return noncomplianceReasonNoProductionTraffic(Output.of(noncomplianceReasonNoProductionTraffic));
        }

        public Builder noncomplianceReasonNone(@Nullable Output<PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs> noncomplianceReasonNone) {
            $.noncomplianceReasonNone = noncomplianceReasonNone;
            return this;
        }

        public Builder noncomplianceReasonNone(PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs noncomplianceReasonNone) {
            return noncomplianceReasonNone(Output.of(noncomplianceReasonNone));
        }

        public Builder noncomplianceReasonOther(@Nullable Output<PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs> noncomplianceReasonOther) {
            $.noncomplianceReasonOther = noncomplianceReasonOther;
            return this;
        }

        public Builder noncomplianceReasonOther(PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs noncomplianceReasonOther) {
            return noncomplianceReasonOther(Output.of(noncomplianceReasonOther));
        }

        public PropertyActivationComplianceRecordArgs build() {
            return $;
        }
    }

}
