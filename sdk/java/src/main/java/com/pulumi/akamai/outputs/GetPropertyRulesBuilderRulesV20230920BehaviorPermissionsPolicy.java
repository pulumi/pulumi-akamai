// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230920BehaviorPermissionsPolicy {
    /**
     * @return The features you&#39;ve set in `permissionsPolicyDirective` are enabled for domains you specify here. They&#39;ll remain disabled for all other domains. Separate multiple domains with a single space. To block the specified directives from all domains, set this to `none`. This generates an empty value in the `Permissions-Policy` header.
     * 
     */
    private @Nullable String allowList;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Each directive represents a browser feature. Specify the ones you want enabled in a client browser that accesses your content. You can add custom entries or provide pre-set values from the list. For more details on each value, see the `guide section` for this behavior.
     * 
     */
    private @Nullable List<String> permissionsPolicyDirectives;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20230920BehaviorPermissionsPolicy() {}
    /**
     * @return The features you&#39;ve set in `permissionsPolicyDirective` are enabled for domains you specify here. They&#39;ll remain disabled for all other domains. Separate multiple domains with a single space. To block the specified directives from all domains, set this to `none`. This generates an empty value in the `Permissions-Policy` header.
     * 
     */
    public Optional<String> allowList() {
        return Optional.ofNullable(this.allowList);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Each directive represents a browser feature. Specify the ones you want enabled in a client browser that accesses your content. You can add custom entries or provide pre-set values from the list. For more details on each value, see the `guide section` for this behavior.
     * 
     */
    public List<String> permissionsPolicyDirectives() {
        return this.permissionsPolicyDirectives == null ? List.of() : this.permissionsPolicyDirectives;
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230920BehaviorPermissionsPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String allowList;
        private @Nullable Boolean locked;
        private @Nullable List<String> permissionsPolicyDirectives;
        private @Nullable String templateUuid;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230920BehaviorPermissionsPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowList = defaults.allowList;
    	      this.locked = defaults.locked;
    	      this.permissionsPolicyDirectives = defaults.permissionsPolicyDirectives;
    	      this.templateUuid = defaults.templateUuid;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder allowList(@Nullable String allowList) {

            this.allowList = allowList;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder permissionsPolicyDirectives(@Nullable List<String> permissionsPolicyDirectives) {

            this.permissionsPolicyDirectives = permissionsPolicyDirectives;
            return this;
        }
        public Builder permissionsPolicyDirectives(String... permissionsPolicyDirectives) {
            return permissionsPolicyDirectives(List.of(permissionsPolicyDirectives));
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230920BehaviorPermissionsPolicy build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230920BehaviorPermissionsPolicy();
            _resultValue.allowList = allowList;
            _resultValue.locked = locked;
            _resultValue.permissionsPolicyDirectives = permissionsPolicyDirectives;
            _resultValue.templateUuid = templateUuid;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
