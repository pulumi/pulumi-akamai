// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCpCodesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCpCodesPlainArgs Empty = new GetCpCodesPlainArgs();

    @Import(name="contractId", required=true)
    private String contractId;

    public String contractId() {
        return this.contractId;
    }

    @Import(name="filterByName")
    private @Nullable String filterByName;

    public Optional<String> filterByName() {
        return Optional.ofNullable(this.filterByName);
    }

    @Import(name="filterByProductId")
    private @Nullable String filterByProductId;

    public Optional<String> filterByProductId() {
        return Optional.ofNullable(this.filterByProductId);
    }

    @Import(name="groupId", required=true)
    private String groupId;

    public String groupId() {
        return this.groupId;
    }

    private GetCpCodesPlainArgs() {}

    private GetCpCodesPlainArgs(GetCpCodesPlainArgs $) {
        this.contractId = $.contractId;
        this.filterByName = $.filterByName;
        this.filterByProductId = $.filterByProductId;
        this.groupId = $.groupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCpCodesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCpCodesPlainArgs $;

        public Builder() {
            $ = new GetCpCodesPlainArgs();
        }

        public Builder(GetCpCodesPlainArgs defaults) {
            $ = new GetCpCodesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder contractId(String contractId) {
            $.contractId = contractId;
            return this;
        }

        public Builder filterByName(@Nullable String filterByName) {
            $.filterByName = filterByName;
            return this;
        }

        public Builder filterByProductId(@Nullable String filterByProductId) {
            $.filterByProductId = filterByProductId;
            return this;
        }

        public Builder groupId(String groupId) {
            $.groupId = groupId;
            return this;
        }

        public GetCpCodesPlainArgs build() {
            if ($.contractId == null) {
                throw new MissingRequiredPropertyException("GetCpCodesPlainArgs", "contractId");
            }
            if ($.groupId == null) {
                throw new MissingRequiredPropertyException("GetCpCodesPlainArgs", "groupId");
            }
            return $;
        }
    }

}
