// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetAppsecRapidRulesRapidRule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAppsecRapidRulesResult {
    private Integer configId;
    private String defaultAction;
    private Boolean enabled;
    private String id;
    private String outputText;
    private List<GetAppsecRapidRulesRapidRule> rapidRules;
    private @Nullable Integer ruleId;
    private String securityPolicyId;

    private GetAppsecRapidRulesResult() {}
    public Integer configId() {
        return this.configId;
    }
    public String defaultAction() {
        return this.defaultAction;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public String id() {
        return this.id;
    }
    public String outputText() {
        return this.outputText;
    }
    public List<GetAppsecRapidRulesRapidRule> rapidRules() {
        return this.rapidRules;
    }
    public Optional<Integer> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }
    public String securityPolicyId() {
        return this.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppsecRapidRulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer configId;
        private String defaultAction;
        private Boolean enabled;
        private String id;
        private String outputText;
        private List<GetAppsecRapidRulesRapidRule> rapidRules;
        private @Nullable Integer ruleId;
        private String securityPolicyId;
        public Builder() {}
        public Builder(GetAppsecRapidRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configId = defaults.configId;
    	      this.defaultAction = defaults.defaultAction;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.outputText = defaults.outputText;
    	      this.rapidRules = defaults.rapidRules;
    	      this.ruleId = defaults.ruleId;
    	      this.securityPolicyId = defaults.securityPolicyId;
        }

        @CustomType.Setter
        public Builder configId(Integer configId) {
            if (configId == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesResult", "configId");
            }
            this.configId = configId;
            return this;
        }
        @CustomType.Setter
        public Builder defaultAction(String defaultAction) {
            if (defaultAction == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesResult", "defaultAction");
            }
            this.defaultAction = defaultAction;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder outputText(String outputText) {
            if (outputText == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesResult", "outputText");
            }
            this.outputText = outputText;
            return this;
        }
        @CustomType.Setter
        public Builder rapidRules(List<GetAppsecRapidRulesRapidRule> rapidRules) {
            if (rapidRules == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesResult", "rapidRules");
            }
            this.rapidRules = rapidRules;
            return this;
        }
        public Builder rapidRules(GetAppsecRapidRulesRapidRule... rapidRules) {
            return rapidRules(List.of(rapidRules));
        }
        @CustomType.Setter
        public Builder ruleId(@Nullable Integer ruleId) {

            this.ruleId = ruleId;
            return this;
        }
        @CustomType.Setter
        public Builder securityPolicyId(String securityPolicyId) {
            if (securityPolicyId == null) {
              throw new MissingRequiredPropertyException("GetAppsecRapidRulesResult", "securityPolicyId");
            }
            this.securityPolicyId = securityPolicyId;
            return this;
        }
        public GetAppsecRapidRulesResult build() {
            final var _resultValue = new GetAppsecRapidRulesResult();
            _resultValue.configId = configId;
            _resultValue.defaultAction = defaultAction;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.outputText = outputText;
            _resultValue.rapidRules = rapidRules;
            _resultValue.ruleId = ruleId;
            _resultValue.securityPolicyId = securityPolicyId;
            return _resultValue;
        }
    }
}
