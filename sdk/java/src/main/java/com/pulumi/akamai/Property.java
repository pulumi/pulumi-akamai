// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.PropertyArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.PropertyState;
import com.pulumi.akamai.outputs.PropertyHostname;
import com.pulumi.akamai.outputs.PropertyOrigin;
import com.pulumi.akamai.outputs.PropertyRuleError;
import com.pulumi.akamai.outputs.PropertyRuleWarning;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="akamai:index/property:Property")
public class Property extends com.pulumi.resources.CustomResource {
    /**
     * @deprecated
     * The setting &#34;contact&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""contact"" has been deprecated. */
    @Export(name="contacts", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> contacts;

    public Output<Optional<List<String>>> contacts() {
        return Codegen.optional(this.contacts);
    }
    /**
     * @deprecated
     * The setting &#34;contract&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""contract"" has been deprecated. */
    @Export(name="contract", type=String.class, parameters={})
    private Output<String> contract;

    public Output<String> contract() {
        return this.contract;
    }
    /**
     * Contract ID to be assigned to the Property
     * 
     */
    @Export(name="contractId", type=String.class, parameters={})
    private Output<String> contractId;

    /**
     * @return Contract ID to be assigned to the Property
     * 
     */
    public Output<String> contractId() {
        return this.contractId;
    }
    /**
     * @deprecated
     * The setting &#34;cp_code&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""cp_code"" has been deprecated. */
    @Export(name="cpCode", type=String.class, parameters={})
    private Output</* @Nullable */ String> cpCode;

    public Output<Optional<String>> cpCode() {
        return Codegen.optional(this.cpCode);
    }
    /**
     * @deprecated
     * The setting &#34;group&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""group"" has been deprecated. */
    @Export(name="group", type=String.class, parameters={})
    private Output<String> group;

    public Output<String> group() {
        return this.group;
    }
    /**
     * Group ID to be assigned to the Property
     * 
     */
    @Export(name="groupId", type=String.class, parameters={})
    private Output<String> groupId;

    /**
     * @return Group ID to be assigned to the Property
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }
    @Export(name="hostnames", type=List.class, parameters={PropertyHostname.class})
    private Output</* @Nullable */ List<PropertyHostname>> hostnames;

    public Output<Optional<List<PropertyHostname>>> hostnames() {
        return Codegen.optional(this.hostnames);
    }
    /**
     * @deprecated
     * The setting &#34;is_secure&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""is_secure"" has been deprecated. */
    @Export(name="isSecure", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isSecure;

    public Output<Optional<Boolean>> isSecure() {
        return Codegen.optional(this.isSecure);
    }
    /**
     * Property&#39;s current latest version number
     * 
     */
    @Export(name="latestVersion", type=Integer.class, parameters={})
    private Output<Integer> latestVersion;

    /**
     * @return Property&#39;s current latest version number
     * 
     */
    public Output<Integer> latestVersion() {
        return this.latestVersion;
    }
    /**
     * Name to give to the Property (must be unique)
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name to give to the Property (must be unique)
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * @deprecated
     * The setting &#34;origin&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""origin"" has been deprecated. */
    @Export(name="origins", type=List.class, parameters={PropertyOrigin.class})
    private Output</* @Nullable */ List<PropertyOrigin>> origins;

    public Output<Optional<List<PropertyOrigin>>> origins() {
        return Codegen.optional(this.origins);
    }
    /**
     * @deprecated
     * The setting &#34;product&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""product"" has been deprecated. */
    @Export(name="product", type=String.class, parameters={})
    private Output<String> product;

    public Output<String> product() {
        return this.product;
    }
    /**
     * Product ID to be assigned to the Property
     * 
     */
    @Export(name="productId", type=String.class, parameters={})
    private Output<String> productId;

    /**
     * @return Product ID to be assigned to the Property
     * 
     */
    public Output<String> productId() {
        return this.productId;
    }
    /**
     * Property&#39;s version currently activated in production (zero when not active in production)
     * 
     */
    @Export(name="productionVersion", type=Integer.class, parameters={})
    private Output<Integer> productionVersion;

    /**
     * @return Property&#39;s version currently activated in production (zero when not active in production)
     * 
     */
    public Output<Integer> productionVersion() {
        return this.productionVersion;
    }
    /**
     * Required property&#39;s version to be read
     * 
     */
    @Export(name="readVersion", type=Integer.class, parameters={})
    private Output<Integer> readVersion;

    /**
     * @return Required property&#39;s version to be read
     * 
     */
    public Output<Integer> readVersion() {
        return this.readVersion;
    }
    @Export(name="ruleErrors", type=List.class, parameters={PropertyRuleError.class})
    private Output<List<PropertyRuleError>> ruleErrors;

    public Output<List<PropertyRuleError>> ruleErrors() {
        return this.ruleErrors;
    }
    /**
     * Specify the rule format version (defaults to latest version available when created)
     * 
     */
    @Export(name="ruleFormat", type=String.class, parameters={})
    private Output<String> ruleFormat;

    /**
     * @return Specify the rule format version (defaults to latest version available when created)
     * 
     */
    public Output<String> ruleFormat() {
        return this.ruleFormat;
    }
    /**
     * @deprecated
     * Rule warnings will not be set in state anymore
     * 
     */
    @Deprecated /* Rule warnings will not be set in state anymore */
    @Export(name="ruleWarnings", type=List.class, parameters={PropertyRuleWarning.class})
    private Output<List<PropertyRuleWarning>> ruleWarnings;

    public Output<List<PropertyRuleWarning>> ruleWarnings() {
        return this.ruleWarnings;
    }
    /**
     * Property Rules as JSON
     * 
     */
    @Export(name="rules", type=String.class, parameters={})
    private Output<String> rules;

    /**
     * @return Property Rules as JSON
     * 
     */
    public Output<String> rules() {
        return this.rules;
    }
    /**
     * Property&#39;s version currently activated in staging (zero when not active in staging)
     * 
     */
    @Export(name="stagingVersion", type=Integer.class, parameters={})
    private Output<Integer> stagingVersion;

    /**
     * @return Property&#39;s version currently activated in staging (zero when not active in staging)
     * 
     */
    public Output<Integer> stagingVersion() {
        return this.stagingVersion;
    }
    /**
     * @deprecated
     * The setting &#34;variables&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""variables"" has been deprecated. */
    @Export(name="variables", type=String.class, parameters={})
    private Output</* @Nullable */ String> variables;

    public Output<Optional<String>> variables() {
        return Codegen.optional(this.variables);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Property(String name) {
        this(name, PropertyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Property(String name, @Nullable PropertyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Property(String name, @Nullable PropertyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/property:Property", name, args == null ? PropertyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Property(String name, Output<String> id, @Nullable PropertyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/property:Property", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("akamai:properties/property:Property").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Property get(String name, Output<String> id, @Nullable PropertyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Property(name, id, state, options);
    }
}
