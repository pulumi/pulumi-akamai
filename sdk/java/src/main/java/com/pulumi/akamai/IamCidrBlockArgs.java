// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamCidrBlockArgs extends com.pulumi.resources.ResourceArgs {

    public static final IamCidrBlockArgs Empty = new IamCidrBlockArgs();

    /**
     * The value of an IP address or IP address range.
     * 
     */
    @Import(name="cidrBlock", required=true)
    private Output<String> cidrBlock;

    /**
     * @return The value of an IP address or IP address range.
     * 
     */
    public Output<String> cidrBlock() {
        return this.cidrBlock;
    }

    /**
     * Descriptive label you provide for the CIDR block.
     * 
     */
    @Import(name="comments")
    private @Nullable Output<String> comments;

    /**
     * @return Descriptive label you provide for the CIDR block.
     * 
     */
    public Optional<Output<String>> comments() {
        return Optional.ofNullable(this.comments);
    }

    /**
     * Enables the CIDR block on the account.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Enables the CIDR block on the account.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    private IamCidrBlockArgs() {}

    private IamCidrBlockArgs(IamCidrBlockArgs $) {
        this.cidrBlock = $.cidrBlock;
        this.comments = $.comments;
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamCidrBlockArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamCidrBlockArgs $;

        public Builder() {
            $ = new IamCidrBlockArgs();
        }

        public Builder(IamCidrBlockArgs defaults) {
            $ = new IamCidrBlockArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrBlock The value of an IP address or IP address range.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(Output<String> cidrBlock) {
            $.cidrBlock = cidrBlock;
            return this;
        }

        /**
         * @param cidrBlock The value of an IP address or IP address range.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(String cidrBlock) {
            return cidrBlock(Output.of(cidrBlock));
        }

        /**
         * @param comments Descriptive label you provide for the CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder comments(@Nullable Output<String> comments) {
            $.comments = comments;
            return this;
        }

        /**
         * @param comments Descriptive label you provide for the CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder comments(String comments) {
            return comments(Output.of(comments));
        }

        /**
         * @param enabled Enables the CIDR block on the account.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enables the CIDR block on the account.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public IamCidrBlockArgs build() {
            if ($.cidrBlock == null) {
                throw new MissingRequiredPropertyException("IamCidrBlockArgs", "cidrBlock");
            }
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("IamCidrBlockArgs", "enabled");
            }
            return $;
        }
    }

}
