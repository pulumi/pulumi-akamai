// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs Empty = new GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs();

    @Import(name="elements")
    private @Nullable Output<List<String>> elements;

    public Optional<Output<List<String>>> elements() {
        return Optional.ofNullable(this.elements);
    }

    @Import(name="includeValue")
    private @Nullable Output<Boolean> includeValue;

    public Optional<Output<Boolean>> includeValue() {
        return Optional.ofNullable(this.includeValue);
    }

    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    @Import(name="optional")
    private @Nullable Output<Boolean> optional;

    public Optional<Output<Boolean>> optional() {
        return Optional.ofNullable(this.optional);
    }

    @Import(name="rule")
    private @Nullable Output<String> rule;

    public Optional<Output<String>> rule() {
        return Optional.ofNullable(this.rule);
    }

    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    @Import(name="variableName")
    private @Nullable Output<String> variableName;

    public Optional<Output<String>> variableName() {
        return Optional.ofNullable(this.variableName);
    }

    private GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs() {}

    private GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs(GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs $) {
        this.elements = $.elements;
        this.includeValue = $.includeValue;
        this.locked = $.locked;
        this.optional = $.optional;
        this.rule = $.rule;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
        this.variableName = $.variableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs(Objects.requireNonNull(defaults));
        }

        public Builder elements(@Nullable Output<List<String>> elements) {
            $.elements = elements;
            return this;
        }

        public Builder elements(List<String> elements) {
            return elements(Output.of(elements));
        }

        public Builder elements(String... elements) {
            return elements(List.of(elements));
        }

        public Builder includeValue(@Nullable Output<Boolean> includeValue) {
            $.includeValue = includeValue;
            return this;
        }

        public Builder includeValue(Boolean includeValue) {
            return includeValue(Output.of(includeValue));
        }

        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        public Builder optional(@Nullable Output<Boolean> optional) {
            $.optional = optional;
            return this;
        }

        public Builder optional(Boolean optional) {
            return optional(Output.of(optional));
        }

        public Builder rule(@Nullable Output<String> rule) {
            $.rule = rule;
            return this;
        }

        public Builder rule(String rule) {
            return rule(Output.of(rule));
        }

        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public Builder variableName(@Nullable Output<String> variableName) {
            $.variableName = variableName;
            return this;
        }

        public Builder variableName(String variableName) {
            return variableName(Output.of(variableName));
        }

        public GetPropertyRulesBuilderRulesV20230920BehaviorCacheIdArgs build() {
            return $;
        }
    }

}
