// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecMalwarePolicyState extends com.pulumi.resources.ResourceArgs {

    public static final AppSecMalwarePolicyState Empty = new AppSecMalwarePolicyState();

    /**
     * Unique identifier of the security configuration
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return Unique identifier of the security configuration
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * JSON-formatted definition of the malware policy
     * 
     */
    @Import(name="malwarePolicy")
    private @Nullable Output<String> malwarePolicy;

    /**
     * @return JSON-formatted definition of the malware policy
     * 
     */
    public Optional<Output<String>> malwarePolicy() {
        return Optional.ofNullable(this.malwarePolicy);
    }

    /**
     * Unique identifier of the malware policy
     * 
     */
    @Import(name="malwarePolicyId")
    private @Nullable Output<Integer> malwarePolicyId;

    /**
     * @return Unique identifier of the malware policy
     * 
     */
    public Optional<Output<Integer>> malwarePolicyId() {
        return Optional.ofNullable(this.malwarePolicyId);
    }

    private AppSecMalwarePolicyState() {}

    private AppSecMalwarePolicyState(AppSecMalwarePolicyState $) {
        this.configId = $.configId;
        this.malwarePolicy = $.malwarePolicy;
        this.malwarePolicyId = $.malwarePolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecMalwarePolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecMalwarePolicyState $;

        public Builder() {
            $ = new AppSecMalwarePolicyState();
        }

        public Builder(AppSecMalwarePolicyState defaults) {
            $ = new AppSecMalwarePolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param malwarePolicy JSON-formatted definition of the malware policy
         * 
         * @return builder
         * 
         */
        public Builder malwarePolicy(@Nullable Output<String> malwarePolicy) {
            $.malwarePolicy = malwarePolicy;
            return this;
        }

        /**
         * @param malwarePolicy JSON-formatted definition of the malware policy
         * 
         * @return builder
         * 
         */
        public Builder malwarePolicy(String malwarePolicy) {
            return malwarePolicy(Output.of(malwarePolicy));
        }

        /**
         * @param malwarePolicyId Unique identifier of the malware policy
         * 
         * @return builder
         * 
         */
        public Builder malwarePolicyId(@Nullable Output<Integer> malwarePolicyId) {
            $.malwarePolicyId = malwarePolicyId;
            return this;
        }

        /**
         * @param malwarePolicyId Unique identifier of the malware policy
         * 
         * @return builder
         * 
         */
        public Builder malwarePolicyId(Integer malwarePolicyId) {
            return malwarePolicyId(Output.of(malwarePolicyId));
        }

        public AppSecMalwarePolicyState build() {
            return $;
        }
    }

}
