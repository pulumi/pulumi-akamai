// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAspectCrop {
    private @Nullable String allowExpansion;
    private @Nullable String allowExpansionVar;
    private @Nullable String height;
    private @Nullable String heightVar;
    private @Nullable String width;
    private @Nullable String widthVar;
    private @Nullable String xPosition;
    private @Nullable String xPositionVar;
    private @Nullable String yPosition;
    private @Nullable String yPositionVar;

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAspectCrop() {}
    public Optional<String> allowExpansion() {
        return Optional.ofNullable(this.allowExpansion);
    }
    public Optional<String> allowExpansionVar() {
        return Optional.ofNullable(this.allowExpansionVar);
    }
    public Optional<String> height() {
        return Optional.ofNullable(this.height);
    }
    public Optional<String> heightVar() {
        return Optional.ofNullable(this.heightVar);
    }
    public Optional<String> width() {
        return Optional.ofNullable(this.width);
    }
    public Optional<String> widthVar() {
        return Optional.ofNullable(this.widthVar);
    }
    public Optional<String> xPosition() {
        return Optional.ofNullable(this.xPosition);
    }
    public Optional<String> xPositionVar() {
        return Optional.ofNullable(this.xPositionVar);
    }
    public Optional<String> yPosition() {
        return Optional.ofNullable(this.yPosition);
    }
    public Optional<String> yPositionVar() {
        return Optional.ofNullable(this.yPositionVar);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAspectCrop defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String allowExpansion;
        private @Nullable String allowExpansionVar;
        private @Nullable String height;
        private @Nullable String heightVar;
        private @Nullable String width;
        private @Nullable String widthVar;
        private @Nullable String xPosition;
        private @Nullable String xPositionVar;
        private @Nullable String yPosition;
        private @Nullable String yPositionVar;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAspectCrop defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowExpansion = defaults.allowExpansion;
    	      this.allowExpansionVar = defaults.allowExpansionVar;
    	      this.height = defaults.height;
    	      this.heightVar = defaults.heightVar;
    	      this.width = defaults.width;
    	      this.widthVar = defaults.widthVar;
    	      this.xPosition = defaults.xPosition;
    	      this.xPositionVar = defaults.xPositionVar;
    	      this.yPosition = defaults.yPosition;
    	      this.yPositionVar = defaults.yPositionVar;
        }

        @CustomType.Setter
        public Builder allowExpansion(@Nullable String allowExpansion) {
            this.allowExpansion = allowExpansion;
            return this;
        }
        @CustomType.Setter
        public Builder allowExpansionVar(@Nullable String allowExpansionVar) {
            this.allowExpansionVar = allowExpansionVar;
            return this;
        }
        @CustomType.Setter
        public Builder height(@Nullable String height) {
            this.height = height;
            return this;
        }
        @CustomType.Setter
        public Builder heightVar(@Nullable String heightVar) {
            this.heightVar = heightVar;
            return this;
        }
        @CustomType.Setter
        public Builder width(@Nullable String width) {
            this.width = width;
            return this;
        }
        @CustomType.Setter
        public Builder widthVar(@Nullable String widthVar) {
            this.widthVar = widthVar;
            return this;
        }
        @CustomType.Setter
        public Builder xPosition(@Nullable String xPosition) {
            this.xPosition = xPosition;
            return this;
        }
        @CustomType.Setter
        public Builder xPositionVar(@Nullable String xPositionVar) {
            this.xPositionVar = xPositionVar;
            return this;
        }
        @CustomType.Setter
        public Builder yPosition(@Nullable String yPosition) {
            this.yPosition = yPosition;
            return this;
        }
        @CustomType.Setter
        public Builder yPositionVar(@Nullable String yPositionVar) {
            this.yPositionVar = yPositionVar;
            return this;
        }
        public GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAspectCrop build() {
            final var o = new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionGreaterThanAspectCrop();
            o.allowExpansion = allowExpansion;
            o.allowExpansionVar = allowExpansionVar;
            o.height = height;
            o.heightVar = heightVar;
            o.width = width;
            o.widthVar = widthVar;
            o.xPosition = xPosition;
            o.xPositionVar = xPositionVar;
            o.yPosition = yPosition;
            o.yPositionVar = yPositionVar;
            return o;
        }
    }
}
