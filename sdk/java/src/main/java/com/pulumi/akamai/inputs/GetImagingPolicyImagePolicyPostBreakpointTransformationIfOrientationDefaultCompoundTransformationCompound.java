// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompoundTransformation;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound();

    @Import(name="transformations")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompoundTransformation> transformations;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompoundTransformation>> transformations() {
        return Optional.ofNullable(this.transformations);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound $) {
        this.transformations = $.transformations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound(Objects.requireNonNull(defaults));
        }

        public Builder transformations(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompoundTransformation> transformations) {
            $.transformations = transformations;
            return this;
        }

        public Builder transformations(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompoundTransformation... transformations) {
            return transformations(List.of(transformations));
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationDefaultCompoundTransformationCompound build() {
            return $;
        }
    }

}
