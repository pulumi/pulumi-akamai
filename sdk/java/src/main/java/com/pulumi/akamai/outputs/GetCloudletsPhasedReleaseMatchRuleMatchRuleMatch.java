// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudletsPhasedReleaseMatchRuleMatchRuleMatch {
    /**
     * @return If true, the match is case sensitive
     * 
     */
    private @Nullable Boolean caseSensitive;
    /**
     * @return For clientip, continent, countrycode, proxy, and regioncode match types, the part of the request that determines the IP address to use
     * 
     */
    private @Nullable String checkIps;
    /**
     * @return Valid entries for this property: contains, exists, and equals
     * 
     */
    private @Nullable String matchOperator;
    /**
     * @return The type of match used
     * 
     */
    private @Nullable String matchType;
    /**
     * @return Depends on the matchType
     * 
     */
    private @Nullable String matchValue;
    /**
     * @return If true, negates the match
     * 
     */
    private @Nullable Boolean negate;
    /**
     * @return An object used when a rule either includes more complex match criteria, like multiple value attributes
     * 
     */
    private @Nullable List<GetCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue> objectMatchValues;

    private GetCloudletsPhasedReleaseMatchRuleMatchRuleMatch() {}
    /**
     * @return If true, the match is case sensitive
     * 
     */
    public Optional<Boolean> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }
    /**
     * @return For clientip, continent, countrycode, proxy, and regioncode match types, the part of the request that determines the IP address to use
     * 
     */
    public Optional<String> checkIps() {
        return Optional.ofNullable(this.checkIps);
    }
    /**
     * @return Valid entries for this property: contains, exists, and equals
     * 
     */
    public Optional<String> matchOperator() {
        return Optional.ofNullable(this.matchOperator);
    }
    /**
     * @return The type of match used
     * 
     */
    public Optional<String> matchType() {
        return Optional.ofNullable(this.matchType);
    }
    /**
     * @return Depends on the matchType
     * 
     */
    public Optional<String> matchValue() {
        return Optional.ofNullable(this.matchValue);
    }
    /**
     * @return If true, negates the match
     * 
     */
    public Optional<Boolean> negate() {
        return Optional.ofNullable(this.negate);
    }
    /**
     * @return An object used when a rule either includes more complex match criteria, like multiple value attributes
     * 
     */
    public List<GetCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue> objectMatchValues() {
        return this.objectMatchValues == null ? List.of() : this.objectMatchValues;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudletsPhasedReleaseMatchRuleMatchRuleMatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean caseSensitive;
        private @Nullable String checkIps;
        private @Nullable String matchOperator;
        private @Nullable String matchType;
        private @Nullable String matchValue;
        private @Nullable Boolean negate;
        private @Nullable List<GetCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue> objectMatchValues;
        public Builder() {}
        public Builder(GetCloudletsPhasedReleaseMatchRuleMatchRuleMatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caseSensitive = defaults.caseSensitive;
    	      this.checkIps = defaults.checkIps;
    	      this.matchOperator = defaults.matchOperator;
    	      this.matchType = defaults.matchType;
    	      this.matchValue = defaults.matchValue;
    	      this.negate = defaults.negate;
    	      this.objectMatchValues = defaults.objectMatchValues;
        }

        @CustomType.Setter
        public Builder caseSensitive(@Nullable Boolean caseSensitive) {

            this.caseSensitive = caseSensitive;
            return this;
        }
        @CustomType.Setter
        public Builder checkIps(@Nullable String checkIps) {

            this.checkIps = checkIps;
            return this;
        }
        @CustomType.Setter
        public Builder matchOperator(@Nullable String matchOperator) {

            this.matchOperator = matchOperator;
            return this;
        }
        @CustomType.Setter
        public Builder matchType(@Nullable String matchType) {

            this.matchType = matchType;
            return this;
        }
        @CustomType.Setter
        public Builder matchValue(@Nullable String matchValue) {

            this.matchValue = matchValue;
            return this;
        }
        @CustomType.Setter
        public Builder negate(@Nullable Boolean negate) {

            this.negate = negate;
            return this;
        }
        @CustomType.Setter
        public Builder objectMatchValues(@Nullable List<GetCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue> objectMatchValues) {

            this.objectMatchValues = objectMatchValues;
            return this;
        }
        public Builder objectMatchValues(GetCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue... objectMatchValues) {
            return objectMatchValues(List.of(objectMatchValues));
        }
        public GetCloudletsPhasedReleaseMatchRuleMatchRuleMatch build() {
            final var _resultValue = new GetCloudletsPhasedReleaseMatchRuleMatchRuleMatch();
            _resultValue.caseSensitive = caseSensitive;
            _resultValue.checkIps = checkIps;
            _resultValue.matchOperator = matchOperator;
            _resultValue.matchType = matchType;
            _resultValue.matchValue = matchValue;
            _resultValue.negate = negate;
            _resultValue.objectMatchValues = objectMatchValues;
            return _resultValue;
        }
    }
}
