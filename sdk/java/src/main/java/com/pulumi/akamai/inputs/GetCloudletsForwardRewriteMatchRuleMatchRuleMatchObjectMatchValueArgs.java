// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs Empty = new GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs();

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="nameCaseSensitive")
    private @Nullable Output<Boolean> nameCaseSensitive;

    public Optional<Output<Boolean>> nameCaseSensitive() {
        return Optional.ofNullable(this.nameCaseSensitive);
    }

    @Import(name="nameHasWildcard")
    private @Nullable Output<Boolean> nameHasWildcard;

    public Optional<Output<Boolean>> nameHasWildcard() {
        return Optional.ofNullable(this.nameHasWildcard);
    }

    @Import(name="options")
    private @Nullable Output<GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptionsArgs> options;

    public Optional<Output<GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptionsArgs>> options() {
        return Optional.ofNullable(this.options);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="values")
    private @Nullable Output<List<String>> values;

    public Optional<Output<List<String>>> values() {
        return Optional.ofNullable(this.values);
    }

    private GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs() {}

    private GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs(GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs $) {
        this.name = $.name;
        this.nameCaseSensitive = $.nameCaseSensitive;
        this.nameHasWildcard = $.nameHasWildcard;
        this.options = $.options;
        this.type = $.type;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs $;

        public Builder() {
            $ = new GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs();
        }

        public Builder(GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs defaults) {
            $ = new GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nameCaseSensitive(@Nullable Output<Boolean> nameCaseSensitive) {
            $.nameCaseSensitive = nameCaseSensitive;
            return this;
        }

        public Builder nameCaseSensitive(Boolean nameCaseSensitive) {
            return nameCaseSensitive(Output.of(nameCaseSensitive));
        }

        public Builder nameHasWildcard(@Nullable Output<Boolean> nameHasWildcard) {
            $.nameHasWildcard = nameHasWildcard;
            return this;
        }

        public Builder nameHasWildcard(Boolean nameHasWildcard) {
            return nameHasWildcard(Output.of(nameHasWildcard));
        }

        public Builder options(@Nullable Output<GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptionsArgs> options) {
            $.options = options;
            return this;
        }

        public Builder options(GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptionsArgs options) {
            return options(Output.of(options));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder values(@Nullable Output<List<String>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        public Builder values(String... values) {
            return values(List.of(values));
        }

        public GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs", "type");
            }
            return $;
        }
    }

}
