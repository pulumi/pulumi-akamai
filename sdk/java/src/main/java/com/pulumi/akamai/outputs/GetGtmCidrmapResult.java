// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetGtmCidrmapAssignment;
import com.pulumi.akamai.outputs.GetGtmCidrmapDefaultDatacenter;
import com.pulumi.akamai.outputs.GetGtmCidrmapLink;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGtmCidrmapResult {
    private @Nullable List<GetGtmCidrmapAssignment> assignments;
    private @Nullable GetGtmCidrmapDefaultDatacenter defaultDatacenter;
    private String domain;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable List<GetGtmCidrmapLink> links;
    private String mapName;

    private GetGtmCidrmapResult() {}
    public List<GetGtmCidrmapAssignment> assignments() {
        return this.assignments == null ? List.of() : this.assignments;
    }
    public Optional<GetGtmCidrmapDefaultDatacenter> defaultDatacenter() {
        return Optional.ofNullable(this.defaultDatacenter);
    }
    public String domain() {
        return this.domain;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetGtmCidrmapLink> links() {
        return this.links == null ? List.of() : this.links;
    }
    public String mapName() {
        return this.mapName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGtmCidrmapResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetGtmCidrmapAssignment> assignments;
        private @Nullable GetGtmCidrmapDefaultDatacenter defaultDatacenter;
        private String domain;
        private String id;
        private @Nullable List<GetGtmCidrmapLink> links;
        private String mapName;
        public Builder() {}
        public Builder(GetGtmCidrmapResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignments = defaults.assignments;
    	      this.defaultDatacenter = defaults.defaultDatacenter;
    	      this.domain = defaults.domain;
    	      this.id = defaults.id;
    	      this.links = defaults.links;
    	      this.mapName = defaults.mapName;
        }

        @CustomType.Setter
        public Builder assignments(@Nullable List<GetGtmCidrmapAssignment> assignments) {

            this.assignments = assignments;
            return this;
        }
        public Builder assignments(GetGtmCidrmapAssignment... assignments) {
            return assignments(List.of(assignments));
        }
        @CustomType.Setter
        public Builder defaultDatacenter(@Nullable GetGtmCidrmapDefaultDatacenter defaultDatacenter) {

            this.defaultDatacenter = defaultDatacenter;
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetGtmCidrmapResult", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGtmCidrmapResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder links(@Nullable List<GetGtmCidrmapLink> links) {

            this.links = links;
            return this;
        }
        public Builder links(GetGtmCidrmapLink... links) {
            return links(List.of(links));
        }
        @CustomType.Setter
        public Builder mapName(String mapName) {
            if (mapName == null) {
              throw new MissingRequiredPropertyException("GetGtmCidrmapResult", "mapName");
            }
            this.mapName = mapName;
            return this;
        }
        public GetGtmCidrmapResult build() {
            final var _resultValue = new GetGtmCidrmapResult();
            _resultValue.assignments = assignments;
            _resultValue.defaultDatacenter = defaultDatacenter;
            _resultValue.domain = domain;
            _resultValue.id = id;
            _resultValue.links = links;
            _resultValue.mapName = mapName;
            return _resultValue;
        }
    }
}
