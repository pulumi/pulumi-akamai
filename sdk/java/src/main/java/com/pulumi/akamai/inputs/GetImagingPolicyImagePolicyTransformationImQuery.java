// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetImagingPolicyImagePolicyTransformationImQuery extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationImQuery Empty = new GetImagingPolicyImagePolicyTransformationImQuery();

    /**
     * Specifies the transformations that can be applied using the query string parameter.
     * 
     */
    @Import(name="allowedTransformations", required=true)
    private List<String> allowedTransformations;

    /**
     * @return Specifies the transformations that can be applied using the query string parameter.
     * 
     */
    public List<String> allowedTransformations() {
        return this.allowedTransformations;
    }

    @Import(name="queryVar", required=true)
    private String queryVar;

    public String queryVar() {
        return this.queryVar;
    }

    private GetImagingPolicyImagePolicyTransformationImQuery() {}

    private GetImagingPolicyImagePolicyTransformationImQuery(GetImagingPolicyImagePolicyTransformationImQuery $) {
        this.allowedTransformations = $.allowedTransformations;
        this.queryVar = $.queryVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationImQuery defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationImQuery $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationImQuery();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationImQuery defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationImQuery(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedTransformations Specifies the transformations that can be applied using the query string parameter.
         * 
         * @return builder
         * 
         */
        public Builder allowedTransformations(List<String> allowedTransformations) {
            $.allowedTransformations = allowedTransformations;
            return this;
        }

        /**
         * @param allowedTransformations Specifies the transformations that can be applied using the query string parameter.
         * 
         * @return builder
         * 
         */
        public Builder allowedTransformations(String... allowedTransformations) {
            return allowedTransformations(List.of(allowedTransformations));
        }

        public Builder queryVar(String queryVar) {
            $.queryVar = queryVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationImQuery build() {
            if ($.allowedTransformations == null) {
                throw new MissingRequiredPropertyException("GetImagingPolicyImagePolicyTransformationImQuery", "allowedTransformations");
            }
            if ($.queryVar == null) {
                throw new MissingRequiredPropertyException("GetImagingPolicyImagePolicyTransformationImQuery", "queryVar");
            }
            return $;
        }
    }

}
