// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPropertyHostnameActivationsHostnameActivation {
    /**
     * @return The activation type, either `ACTIVATE` or `DEACTIVATE`.
     * 
     */
    private String activationType;
    /**
     * @return The ISO 8601 timestamp property hostname activation&#39;s unique identifier.
     * 
     */
    private String hostnameActivationId;
    /**
     * @return The network of activation, either `STAGING` or `PRODUCTION`.`
     * 
     */
    private String network;
    /**
     * @return Assigns a log message to the activation request.
     * 
     */
    private String note;
    /**
     * @return Email addresses to notify when the activation status changes.
     * 
     */
    private List<String> notifyEmails;
    /**
     * @return The activation&#39;s status. `ACTIVE` if currently serving traffic. `INACTIVE` if another activation has superseded this one. `PENDING` if not yet active. `ABORTED` if the client followed up with a `DELETE` request in time. `FAILED` if the activation causes a range of edge network errors that may cause a fallback to the previous activation. `PENDING_DEACTIVATION` or `DEACTIVATED` when the `activation_type` is `DEACTIVATE` to no longer serve traffic.
     * 
     */
    private String status;
    /**
     * @return The timestamp indicating when the activation was initiated.
     * 
     */
    private String submitDate;
    /**
     * @return The ISO 8601 timestamp indicating when the status last changed.
     * 
     */
    private String updateDate;

    private GetPropertyHostnameActivationsHostnameActivation() {}
    /**
     * @return The activation type, either `ACTIVATE` or `DEACTIVATE`.
     * 
     */
    public String activationType() {
        return this.activationType;
    }
    /**
     * @return The ISO 8601 timestamp property hostname activation&#39;s unique identifier.
     * 
     */
    public String hostnameActivationId() {
        return this.hostnameActivationId;
    }
    /**
     * @return The network of activation, either `STAGING` or `PRODUCTION`.`
     * 
     */
    public String network() {
        return this.network;
    }
    /**
     * @return Assigns a log message to the activation request.
     * 
     */
    public String note() {
        return this.note;
    }
    /**
     * @return Email addresses to notify when the activation status changes.
     * 
     */
    public List<String> notifyEmails() {
        return this.notifyEmails;
    }
    /**
     * @return The activation&#39;s status. `ACTIVE` if currently serving traffic. `INACTIVE` if another activation has superseded this one. `PENDING` if not yet active. `ABORTED` if the client followed up with a `DELETE` request in time. `FAILED` if the activation causes a range of edge network errors that may cause a fallback to the previous activation. `PENDING_DEACTIVATION` or `DEACTIVATED` when the `activation_type` is `DEACTIVATE` to no longer serve traffic.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The timestamp indicating when the activation was initiated.
     * 
     */
    public String submitDate() {
        return this.submitDate;
    }
    /**
     * @return The ISO 8601 timestamp indicating when the status last changed.
     * 
     */
    public String updateDate() {
        return this.updateDate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyHostnameActivationsHostnameActivation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String activationType;
        private String hostnameActivationId;
        private String network;
        private String note;
        private List<String> notifyEmails;
        private String status;
        private String submitDate;
        private String updateDate;
        public Builder() {}
        public Builder(GetPropertyHostnameActivationsHostnameActivation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activationType = defaults.activationType;
    	      this.hostnameActivationId = defaults.hostnameActivationId;
    	      this.network = defaults.network;
    	      this.note = defaults.note;
    	      this.notifyEmails = defaults.notifyEmails;
    	      this.status = defaults.status;
    	      this.submitDate = defaults.submitDate;
    	      this.updateDate = defaults.updateDate;
        }

        @CustomType.Setter
        public Builder activationType(String activationType) {
            if (activationType == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationsHostnameActivation", "activationType");
            }
            this.activationType = activationType;
            return this;
        }
        @CustomType.Setter
        public Builder hostnameActivationId(String hostnameActivationId) {
            if (hostnameActivationId == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationsHostnameActivation", "hostnameActivationId");
            }
            this.hostnameActivationId = hostnameActivationId;
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationsHostnameActivation", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder note(String note) {
            if (note == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationsHostnameActivation", "note");
            }
            this.note = note;
            return this;
        }
        @CustomType.Setter
        public Builder notifyEmails(List<String> notifyEmails) {
            if (notifyEmails == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationsHostnameActivation", "notifyEmails");
            }
            this.notifyEmails = notifyEmails;
            return this;
        }
        public Builder notifyEmails(String... notifyEmails) {
            return notifyEmails(List.of(notifyEmails));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationsHostnameActivation", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder submitDate(String submitDate) {
            if (submitDate == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationsHostnameActivation", "submitDate");
            }
            this.submitDate = submitDate;
            return this;
        }
        @CustomType.Setter
        public Builder updateDate(String updateDate) {
            if (updateDate == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnameActivationsHostnameActivation", "updateDate");
            }
            this.updateDate = updateDate;
            return this;
        }
        public GetPropertyHostnameActivationsHostnameActivation build() {
            final var _resultValue = new GetPropertyHostnameActivationsHostnameActivation();
            _resultValue.activationType = activationType;
            _resultValue.hostnameActivationId = hostnameActivationId;
            _resultValue.network = network;
            _resultValue.note = note;
            _resultValue.notifyEmails = notifyEmails;
            _resultValue.status = status;
            _resultValue.submitDate = submitDate;
            _resultValue.updateDate = updateDate;
            return _resultValue;
        }
    }
}
