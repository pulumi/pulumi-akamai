// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs Empty = new GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs();

    /**
     * Either `ADD` or `DELETE` outgoing HTTP request headers, `MODIFY` their fixed values, or specify a `REGEX` pattern to transform them.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return Either `ADD` or `DELETE` outgoing HTTP request headers, `MODIFY` their fixed values, or specify a `REGEX` pattern to transform them.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * When enabled with the `action` set to `MODIFY`, prevents creation of more than one instance of a header.
     * 
     */
    @Import(name="avoidDuplicateHeaders")
    private @Nullable Output<Boolean> avoidDuplicateHeaders;

    /**
     * @return When enabled with the `action` set to `MODIFY`, prevents creation of more than one instance of a header.
     * 
     */
    public Optional<Output<Boolean>> avoidDuplicateHeaders() {
        return Optional.ofNullable(this.avoidDuplicateHeaders);
    }

    /**
     * Specifies a custom field name that applies when the relevant `standard` header name is set to `OTHER`.
     * 
     */
    @Import(name="customHeaderName")
    private @Nullable Output<String> customHeaderName;

    /**
     * @return Specifies a custom field name that applies when the relevant `standard` header name is set to `OTHER`.
     * 
     */
    public Optional<Output<String>> customHeaderName() {
        return Optional.ofNullable(this.customHeaderName);
    }

    /**
     * Specifies the new header value.
     * 
     */
    @Import(name="headerValue")
    private @Nullable Output<String> headerValue;

    /**
     * @return Specifies the new header value.
     * 
     */
    public Optional<Output<String>> headerValue() {
        return Optional.ofNullable(this.headerValue);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * When enabled with the `action` set to `REGEX`, replaces all occurrences of the matched regular expression, otherwise only the first match if disabled.
     * 
     */
    @Import(name="matchMultiple")
    private @Nullable Output<Boolean> matchMultiple;

    /**
     * @return When enabled with the `action` set to `REGEX`, replaces all occurrences of the matched regular expression, otherwise only the first match if disabled.
     * 
     */
    public Optional<Output<Boolean>> matchMultiple() {
        return Optional.ofNullable(this.matchMultiple);
    }

    /**
     * Specifies an HTTP header replacement value.
     * 
     */
    @Import(name="newHeaderValue")
    private @Nullable Output<String> newHeaderValue;

    /**
     * @return Specifies an HTTP header replacement value.
     * 
     */
    public Optional<Output<String>> newHeaderValue() {
        return Optional.ofNullable(this.newHeaderValue);
    }

    /**
     * Specifies a Perl-compatible regular expression to match within the header value.
     * 
     */
    @Import(name="regexHeaderMatch")
    private @Nullable Output<String> regexHeaderMatch;

    /**
     * @return Specifies a Perl-compatible regular expression to match within the header value.
     * 
     */
    public Optional<Output<String>> regexHeaderMatch() {
        return Optional.ofNullable(this.regexHeaderMatch);
    }

    /**
     * Specifies text that replaces the `regexHeaderMatch` pattern within the header value.
     * 
     */
    @Import(name="regexHeaderReplace")
    private @Nullable Output<String> regexHeaderReplace;

    /**
     * @return Specifies text that replaces the `regexHeaderMatch` pattern within the header value.
     * 
     */
    public Optional<Output<String>> regexHeaderReplace() {
        return Optional.ofNullable(this.regexHeaderReplace);
    }

    /**
     * If the value of `action` is `ADD`, this specifies the name of the field to add.
     * 
     */
    @Import(name="standardAddHeaderName")
    private @Nullable Output<String> standardAddHeaderName;

    /**
     * @return If the value of `action` is `ADD`, this specifies the name of the field to add.
     * 
     */
    public Optional<Output<String>> standardAddHeaderName() {
        return Optional.ofNullable(this.standardAddHeaderName);
    }

    /**
     * If the value of `action` is `DELETE`, this specifies the name of the field to remove.
     * 
     */
    @Import(name="standardDeleteHeaderName")
    private @Nullable Output<String> standardDeleteHeaderName;

    /**
     * @return If the value of `action` is `DELETE`, this specifies the name of the field to remove.
     * 
     */
    public Optional<Output<String>> standardDeleteHeaderName() {
        return Optional.ofNullable(this.standardDeleteHeaderName);
    }

    /**
     * If the value of `action` is `MODIFY` or `REGEX`, this specifies the name of the field to modify.
     * 
     */
    @Import(name="standardModifyHeaderName")
    private @Nullable Output<String> standardModifyHeaderName;

    /**
     * @return If the value of `action` is `MODIFY` or `REGEX`, this specifies the name of the field to modify.
     * 
     */
    public Optional<Output<String>> standardModifyHeaderName() {
        return Optional.ofNullable(this.standardModifyHeaderName);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs() {}

    private GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs(GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs $) {
        this.action = $.action;
        this.avoidDuplicateHeaders = $.avoidDuplicateHeaders;
        this.customHeaderName = $.customHeaderName;
        this.headerValue = $.headerValue;
        this.locked = $.locked;
        this.matchMultiple = $.matchMultiple;
        this.newHeaderValue = $.newHeaderValue;
        this.regexHeaderMatch = $.regexHeaderMatch;
        this.regexHeaderReplace = $.regexHeaderReplace;
        this.standardAddHeaderName = $.standardAddHeaderName;
        this.standardDeleteHeaderName = $.standardDeleteHeaderName;
        this.standardModifyHeaderName = $.standardModifyHeaderName;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Either `ADD` or `DELETE` outgoing HTTP request headers, `MODIFY` their fixed values, or specify a `REGEX` pattern to transform them.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Either `ADD` or `DELETE` outgoing HTTP request headers, `MODIFY` their fixed values, or specify a `REGEX` pattern to transform them.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param avoidDuplicateHeaders When enabled with the `action` set to `MODIFY`, prevents creation of more than one instance of a header.
         * 
         * @return builder
         * 
         */
        public Builder avoidDuplicateHeaders(@Nullable Output<Boolean> avoidDuplicateHeaders) {
            $.avoidDuplicateHeaders = avoidDuplicateHeaders;
            return this;
        }

        /**
         * @param avoidDuplicateHeaders When enabled with the `action` set to `MODIFY`, prevents creation of more than one instance of a header.
         * 
         * @return builder
         * 
         */
        public Builder avoidDuplicateHeaders(Boolean avoidDuplicateHeaders) {
            return avoidDuplicateHeaders(Output.of(avoidDuplicateHeaders));
        }

        /**
         * @param customHeaderName Specifies a custom field name that applies when the relevant `standard` header name is set to `OTHER`.
         * 
         * @return builder
         * 
         */
        public Builder customHeaderName(@Nullable Output<String> customHeaderName) {
            $.customHeaderName = customHeaderName;
            return this;
        }

        /**
         * @param customHeaderName Specifies a custom field name that applies when the relevant `standard` header name is set to `OTHER`.
         * 
         * @return builder
         * 
         */
        public Builder customHeaderName(String customHeaderName) {
            return customHeaderName(Output.of(customHeaderName));
        }

        /**
         * @param headerValue Specifies the new header value.
         * 
         * @return builder
         * 
         */
        public Builder headerValue(@Nullable Output<String> headerValue) {
            $.headerValue = headerValue;
            return this;
        }

        /**
         * @param headerValue Specifies the new header value.
         * 
         * @return builder
         * 
         */
        public Builder headerValue(String headerValue) {
            return headerValue(Output.of(headerValue));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param matchMultiple When enabled with the `action` set to `REGEX`, replaces all occurrences of the matched regular expression, otherwise only the first match if disabled.
         * 
         * @return builder
         * 
         */
        public Builder matchMultiple(@Nullable Output<Boolean> matchMultiple) {
            $.matchMultiple = matchMultiple;
            return this;
        }

        /**
         * @param matchMultiple When enabled with the `action` set to `REGEX`, replaces all occurrences of the matched regular expression, otherwise only the first match if disabled.
         * 
         * @return builder
         * 
         */
        public Builder matchMultiple(Boolean matchMultiple) {
            return matchMultiple(Output.of(matchMultiple));
        }

        /**
         * @param newHeaderValue Specifies an HTTP header replacement value.
         * 
         * @return builder
         * 
         */
        public Builder newHeaderValue(@Nullable Output<String> newHeaderValue) {
            $.newHeaderValue = newHeaderValue;
            return this;
        }

        /**
         * @param newHeaderValue Specifies an HTTP header replacement value.
         * 
         * @return builder
         * 
         */
        public Builder newHeaderValue(String newHeaderValue) {
            return newHeaderValue(Output.of(newHeaderValue));
        }

        /**
         * @param regexHeaderMatch Specifies a Perl-compatible regular expression to match within the header value.
         * 
         * @return builder
         * 
         */
        public Builder regexHeaderMatch(@Nullable Output<String> regexHeaderMatch) {
            $.regexHeaderMatch = regexHeaderMatch;
            return this;
        }

        /**
         * @param regexHeaderMatch Specifies a Perl-compatible regular expression to match within the header value.
         * 
         * @return builder
         * 
         */
        public Builder regexHeaderMatch(String regexHeaderMatch) {
            return regexHeaderMatch(Output.of(regexHeaderMatch));
        }

        /**
         * @param regexHeaderReplace Specifies text that replaces the `regexHeaderMatch` pattern within the header value.
         * 
         * @return builder
         * 
         */
        public Builder regexHeaderReplace(@Nullable Output<String> regexHeaderReplace) {
            $.regexHeaderReplace = regexHeaderReplace;
            return this;
        }

        /**
         * @param regexHeaderReplace Specifies text that replaces the `regexHeaderMatch` pattern within the header value.
         * 
         * @return builder
         * 
         */
        public Builder regexHeaderReplace(String regexHeaderReplace) {
            return regexHeaderReplace(Output.of(regexHeaderReplace));
        }

        /**
         * @param standardAddHeaderName If the value of `action` is `ADD`, this specifies the name of the field to add.
         * 
         * @return builder
         * 
         */
        public Builder standardAddHeaderName(@Nullable Output<String> standardAddHeaderName) {
            $.standardAddHeaderName = standardAddHeaderName;
            return this;
        }

        /**
         * @param standardAddHeaderName If the value of `action` is `ADD`, this specifies the name of the field to add.
         * 
         * @return builder
         * 
         */
        public Builder standardAddHeaderName(String standardAddHeaderName) {
            return standardAddHeaderName(Output.of(standardAddHeaderName));
        }

        /**
         * @param standardDeleteHeaderName If the value of `action` is `DELETE`, this specifies the name of the field to remove.
         * 
         * @return builder
         * 
         */
        public Builder standardDeleteHeaderName(@Nullable Output<String> standardDeleteHeaderName) {
            $.standardDeleteHeaderName = standardDeleteHeaderName;
            return this;
        }

        /**
         * @param standardDeleteHeaderName If the value of `action` is `DELETE`, this specifies the name of the field to remove.
         * 
         * @return builder
         * 
         */
        public Builder standardDeleteHeaderName(String standardDeleteHeaderName) {
            return standardDeleteHeaderName(Output.of(standardDeleteHeaderName));
        }

        /**
         * @param standardModifyHeaderName If the value of `action` is `MODIFY` or `REGEX`, this specifies the name of the field to modify.
         * 
         * @return builder
         * 
         */
        public Builder standardModifyHeaderName(@Nullable Output<String> standardModifyHeaderName) {
            $.standardModifyHeaderName = standardModifyHeaderName;
            return this;
        }

        /**
         * @param standardModifyHeaderName If the value of `action` is `MODIFY` or `REGEX`, this specifies the name of the field to modify.
         * 
         * @return builder
         * 
         */
        public Builder standardModifyHeaderName(String standardModifyHeaderName) {
            return standardModifyHeaderName(Output.of(standardModifyHeaderName));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20230920BehaviorModifyOutgoingRequestHeaderArgs build() {
            return $;
        }
    }

}
