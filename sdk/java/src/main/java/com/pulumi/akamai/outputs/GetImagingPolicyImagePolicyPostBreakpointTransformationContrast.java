// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicyPostBreakpointTransformationContrast {
    /**
     * @return Adjusts the brightness of the image. Positive values increase brightness and negative values decrease brightness. A value of  `1` produces a white image. A value of  `-1` produces a black image. The default value is `0`, which leaves the image unchanged. The acceptable value range is `-1.0` to `1.0`. Values outside of the acceptable range clamp to this range.
     * 
     */
    private @Nullable String brightness;
    /**
     * @return Adjusts the brightness of the image. Positive values increase brightness and negative values decrease brightness. A value of  `1` produces a white image. A value of  `-1` produces a black image. The default value is `0`, which leaves the image unchanged. The acceptable value range is `-1.0` to `1.0`. Values outside of the acceptable range clamp to this range.
     * 
     */
    private @Nullable String brightnessVar;
    /**
     * @return Adjusts the contrast of the image. Expressed as a range from `-1` to `1`, positive values increase contrast, negative values decrease it, while `0` leaves the image unchanged. Values outside of the `-1` to `1` range clamp to this range.
     * 
     */
    private @Nullable String contrast;
    /**
     * @return Adjusts the contrast of the image. Expressed as a range from `-1` to `1`, positive values increase contrast, negative values decrease it, while `0` leaves the image unchanged. Values outside of the `-1` to `1` range clamp to this range.
     * 
     */
    private @Nullable String contrastVar;

    private GetImagingPolicyImagePolicyPostBreakpointTransformationContrast() {}
    /**
     * @return Adjusts the brightness of the image. Positive values increase brightness and negative values decrease brightness. A value of  `1` produces a white image. A value of  `-1` produces a black image. The default value is `0`, which leaves the image unchanged. The acceptable value range is `-1.0` to `1.0`. Values outside of the acceptable range clamp to this range.
     * 
     */
    public Optional<String> brightness() {
        return Optional.ofNullable(this.brightness);
    }
    /**
     * @return Adjusts the brightness of the image. Positive values increase brightness and negative values decrease brightness. A value of  `1` produces a white image. A value of  `-1` produces a black image. The default value is `0`, which leaves the image unchanged. The acceptable value range is `-1.0` to `1.0`. Values outside of the acceptable range clamp to this range.
     * 
     */
    public Optional<String> brightnessVar() {
        return Optional.ofNullable(this.brightnessVar);
    }
    /**
     * @return Adjusts the contrast of the image. Expressed as a range from `-1` to `1`, positive values increase contrast, negative values decrease it, while `0` leaves the image unchanged. Values outside of the `-1` to `1` range clamp to this range.
     * 
     */
    public Optional<String> contrast() {
        return Optional.ofNullable(this.contrast);
    }
    /**
     * @return Adjusts the contrast of the image. Expressed as a range from `-1` to `1`, positive values increase contrast, negative values decrease it, while `0` leaves the image unchanged. Values outside of the `-1` to `1` range clamp to this range.
     * 
     */
    public Optional<String> contrastVar() {
        return Optional.ofNullable(this.contrastVar);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationContrast defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String brightness;
        private @Nullable String brightnessVar;
        private @Nullable String contrast;
        private @Nullable String contrastVar;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationContrast defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.brightness = defaults.brightness;
    	      this.brightnessVar = defaults.brightnessVar;
    	      this.contrast = defaults.contrast;
    	      this.contrastVar = defaults.contrastVar;
        }

        @CustomType.Setter
        public Builder brightness(@Nullable String brightness) {

            this.brightness = brightness;
            return this;
        }
        @CustomType.Setter
        public Builder brightnessVar(@Nullable String brightnessVar) {

            this.brightnessVar = brightnessVar;
            return this;
        }
        @CustomType.Setter
        public Builder contrast(@Nullable String contrast) {

            this.contrast = contrast;
            return this;
        }
        @CustomType.Setter
        public Builder contrastVar(@Nullable String contrastVar) {

            this.contrastVar = contrastVar;
            return this;
        }
        public GetImagingPolicyImagePolicyPostBreakpointTransformationContrast build() {
            final var _resultValue = new GetImagingPolicyImagePolicyPostBreakpointTransformationContrast();
            _resultValue.brightness = brightness;
            _resultValue.brightnessVar = brightnessVar;
            _resultValue.contrast = contrast;
            _resultValue.contrastVar = contrastVar;
            return _resultValue;
        }
    }
}
