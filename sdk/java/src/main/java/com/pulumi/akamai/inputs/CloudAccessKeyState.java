// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.CloudAccessKeyCredentialsAArgs;
import com.pulumi.akamai.inputs.CloudAccessKeyCredentialsBArgs;
import com.pulumi.akamai.inputs.CloudAccessKeyNetworkConfigurationArgs;
import com.pulumi.akamai.inputs.CloudAccessKeyTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudAccessKeyState extends com.pulumi.resources.ResourceArgs {

    public static final CloudAccessKeyState Empty = new CloudAccessKeyState();

    /**
     * Name of the access key.
     * 
     */
    @Import(name="accessKeyName")
    private @Nullable Output<String> accessKeyName;

    /**
     * @return Name of the access key.
     * 
     */
    public Optional<Output<String>> accessKeyName() {
        return Optional.ofNullable(this.accessKeyName);
    }

    /**
     * The unique identifier Akamai assigns to an access key.
     * 
     */
    @Import(name="accessKeyUid")
    private @Nullable Output<Integer> accessKeyUid;

    /**
     * @return The unique identifier Akamai assigns to an access key.
     * 
     */
    public Optional<Output<Integer>> accessKeyUid() {
        return Optional.ofNullable(this.accessKeyUid);
    }

    /**
     * The type of cloud provider signing process used to authenticate API requests. Two options are available: &#34;AWS4_HMAC_SHA256&#34; or &#34;GOOG4_HMAC_SHA256&#34;.
     * 
     */
    @Import(name="authenticationMethod")
    private @Nullable Output<String> authenticationMethod;

    /**
     * @return The type of cloud provider signing process used to authenticate API requests. Two options are available: &#34;AWS4_HMAC_SHA256&#34; or &#34;GOOG4_HMAC_SHA256&#34;.
     * 
     */
    public Optional<Output<String>> authenticationMethod() {
        return Optional.ofNullable(this.authenticationMethod);
    }

    /**
     * The unique identifier for the contract assigned to the access key
     * 
     */
    @Import(name="contractId")
    private @Nullable Output<String> contractId;

    /**
     * @return The unique identifier for the contract assigned to the access key
     * 
     */
    public Optional<Output<String>> contractId() {
        return Optional.ofNullable(this.contractId);
    }

    /**
     * The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB).
     * 
     */
    @Import(name="credentialsA")
    private @Nullable Output<CloudAccessKeyCredentialsAArgs> credentialsA;

    /**
     * @return The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB).
     * 
     */
    public Optional<Output<CloudAccessKeyCredentialsAArgs>> credentialsA() {
        return Optional.ofNullable(this.credentialsA);
    }

    /**
     * The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB).
     * 
     */
    @Import(name="credentialsB")
    private @Nullable Output<CloudAccessKeyCredentialsBArgs> credentialsB;

    /**
     * @return The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB).
     * 
     */
    public Optional<Output<CloudAccessKeyCredentialsBArgs>> credentialsB() {
        return Optional.ofNullable(this.credentialsB);
    }

    /**
     * The unique identifier assigned to the access control group assigned to the access key
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<Integer> groupId;

    /**
     * @return The unique identifier assigned to the access control group assigned to the access key
     * 
     */
    public Optional<Output<Integer>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * The secure networks that you assigned the access key to during creation
     * 
     */
    @Import(name="networkConfiguration")
    private @Nullable Output<CloudAccessKeyNetworkConfigurationArgs> networkConfiguration;

    /**
     * @return The secure networks that you assigned the access key to during creation
     * 
     */
    public Optional<Output<CloudAccessKeyNetworkConfigurationArgs>> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    /**
     * Value of `versionGuid` field for credentials marked as primary
     * 
     */
    @Import(name="primaryGuid")
    private @Nullable Output<String> primaryGuid;

    /**
     * @return Value of `versionGuid` field for credentials marked as primary
     * 
     */
    public Optional<Output<String>> primaryGuid() {
        return Optional.ofNullable(this.primaryGuid);
    }

    @Import(name="timeouts")
    private @Nullable Output<CloudAccessKeyTimeoutsArgs> timeouts;

    public Optional<Output<CloudAccessKeyTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private CloudAccessKeyState() {}

    private CloudAccessKeyState(CloudAccessKeyState $) {
        this.accessKeyName = $.accessKeyName;
        this.accessKeyUid = $.accessKeyUid;
        this.authenticationMethod = $.authenticationMethod;
        this.contractId = $.contractId;
        this.credentialsA = $.credentialsA;
        this.credentialsB = $.credentialsB;
        this.groupId = $.groupId;
        this.networkConfiguration = $.networkConfiguration;
        this.primaryGuid = $.primaryGuid;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudAccessKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudAccessKeyState $;

        public Builder() {
            $ = new CloudAccessKeyState();
        }

        public Builder(CloudAccessKeyState defaults) {
            $ = new CloudAccessKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyName Name of the access key.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyName(@Nullable Output<String> accessKeyName) {
            $.accessKeyName = accessKeyName;
            return this;
        }

        /**
         * @param accessKeyName Name of the access key.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyName(String accessKeyName) {
            return accessKeyName(Output.of(accessKeyName));
        }

        /**
         * @param accessKeyUid The unique identifier Akamai assigns to an access key.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyUid(@Nullable Output<Integer> accessKeyUid) {
            $.accessKeyUid = accessKeyUid;
            return this;
        }

        /**
         * @param accessKeyUid The unique identifier Akamai assigns to an access key.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyUid(Integer accessKeyUid) {
            return accessKeyUid(Output.of(accessKeyUid));
        }

        /**
         * @param authenticationMethod The type of cloud provider signing process used to authenticate API requests. Two options are available: &#34;AWS4_HMAC_SHA256&#34; or &#34;GOOG4_HMAC_SHA256&#34;.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMethod(@Nullable Output<String> authenticationMethod) {
            $.authenticationMethod = authenticationMethod;
            return this;
        }

        /**
         * @param authenticationMethod The type of cloud provider signing process used to authenticate API requests. Two options are available: &#34;AWS4_HMAC_SHA256&#34; or &#34;GOOG4_HMAC_SHA256&#34;.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMethod(String authenticationMethod) {
            return authenticationMethod(Output.of(authenticationMethod));
        }

        /**
         * @param contractId The unique identifier for the contract assigned to the access key
         * 
         * @return builder
         * 
         */
        public Builder contractId(@Nullable Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        /**
         * @param contractId The unique identifier for the contract assigned to the access key
         * 
         * @return builder
         * 
         */
        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        /**
         * @param credentialsA The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB).
         * 
         * @return builder
         * 
         */
        public Builder credentialsA(@Nullable Output<CloudAccessKeyCredentialsAArgs> credentialsA) {
            $.credentialsA = credentialsA;
            return this;
        }

        /**
         * @param credentialsA The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB).
         * 
         * @return builder
         * 
         */
        public Builder credentialsA(CloudAccessKeyCredentialsAArgs credentialsA) {
            return credentialsA(Output.of(credentialsA));
        }

        /**
         * @param credentialsB The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB).
         * 
         * @return builder
         * 
         */
        public Builder credentialsB(@Nullable Output<CloudAccessKeyCredentialsBArgs> credentialsB) {
            $.credentialsB = credentialsB;
            return this;
        }

        /**
         * @param credentialsB The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB).
         * 
         * @return builder
         * 
         */
        public Builder credentialsB(CloudAccessKeyCredentialsBArgs credentialsB) {
            return credentialsB(Output.of(credentialsB));
        }

        /**
         * @param groupId The unique identifier assigned to the access control group assigned to the access key
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<Integer> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The unique identifier assigned to the access control group assigned to the access key
         * 
         * @return builder
         * 
         */
        public Builder groupId(Integer groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param networkConfiguration The secure networks that you assigned the access key to during creation
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(@Nullable Output<CloudAccessKeyNetworkConfigurationArgs> networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        /**
         * @param networkConfiguration The secure networks that you assigned the access key to during creation
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(CloudAccessKeyNetworkConfigurationArgs networkConfiguration) {
            return networkConfiguration(Output.of(networkConfiguration));
        }

        /**
         * @param primaryGuid Value of `versionGuid` field for credentials marked as primary
         * 
         * @return builder
         * 
         */
        public Builder primaryGuid(@Nullable Output<String> primaryGuid) {
            $.primaryGuid = primaryGuid;
            return this;
        }

        /**
         * @param primaryGuid Value of `versionGuid` field for credentials marked as primary
         * 
         * @return builder
         * 
         */
        public Builder primaryGuid(String primaryGuid) {
            return primaryGuid(Output.of(primaryGuid));
        }

        public Builder timeouts(@Nullable Output<CloudAccessKeyTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(CloudAccessKeyTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public CloudAccessKeyState build() {
            return $;
        }
    }

}
