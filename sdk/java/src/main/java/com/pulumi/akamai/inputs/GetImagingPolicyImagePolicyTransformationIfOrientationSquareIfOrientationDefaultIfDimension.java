// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionDefault;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionEqual;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionGreaterThan;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionLessThan;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension();

    @Import(name="default")
    private @Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionDefault default_;

    public Optional<GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionDefault> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="dimension")
    private @Nullable String dimension;

    public Optional<String> dimension() {
        return Optional.ofNullable(this.dimension);
    }

    @Import(name="dimensionVar")
    private @Nullable String dimensionVar;

    public Optional<String> dimensionVar() {
        return Optional.ofNullable(this.dimensionVar);
    }

    @Import(name="equal")
    private @Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionEqual equal;

    public Optional<GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionEqual> equal() {
        return Optional.ofNullable(this.equal);
    }

    @Import(name="greaterThan")
    private @Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionGreaterThan greaterThan;

    public Optional<GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionGreaterThan> greaterThan() {
        return Optional.ofNullable(this.greaterThan);
    }

    @Import(name="lessThan")
    private @Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionLessThan lessThan;

    public Optional<GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionLessThan> lessThan() {
        return Optional.ofNullable(this.lessThan);
    }

    @Import(name="value")
    private @Nullable String value;

    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    @Import(name="valueVar")
    private @Nullable String valueVar;

    public Optional<String> valueVar() {
        return Optional.ofNullable(this.valueVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension(GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension $) {
        this.default_ = $.default_;
        this.dimension = $.dimension;
        this.dimensionVar = $.dimensionVar;
        this.equal = $.equal;
        this.greaterThan = $.greaterThan;
        this.lessThan = $.lessThan;
        this.value = $.value;
        this.valueVar = $.valueVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionDefault default_) {
            $.default_ = default_;
            return this;
        }

        public Builder dimension(@Nullable String dimension) {
            $.dimension = dimension;
            return this;
        }

        public Builder dimensionVar(@Nullable String dimensionVar) {
            $.dimensionVar = dimensionVar;
            return this;
        }

        public Builder equal(@Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionEqual equal) {
            $.equal = equal;
            return this;
        }

        public Builder greaterThan(@Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionGreaterThan greaterThan) {
            $.greaterThan = greaterThan;
            return this;
        }

        public Builder lessThan(@Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimensionLessThan lessThan) {
            $.lessThan = lessThan;
            return this;
        }

        public Builder value(@Nullable String value) {
            $.value = value;
            return this;
        }

        public Builder valueVar(@Nullable String valueVar) {
            $.valueVar = valueVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfDimension build() {
            return $;
        }
    }

}
