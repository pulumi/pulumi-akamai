// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecActivationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppSecActivationsArgs Empty = new AppSecActivationsArgs();

    /**
     * Unique identifier of the security configuration to be activated
     * 
     */
    @Import(name="configId", required=true)
    private Output<Integer> configId;

    /**
     * @return Unique identifier of the security configuration to be activated
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }

    /**
     * Network on which to activate the configuration version (STAGING or PRODUCTION)
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return Network on which to activate the configuration version (STAGING or PRODUCTION)
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Note describing the activation. Will use timestamp if omitted.
     * 
     */
    @Import(name="note")
    private @Nullable Output<String> note;

    /**
     * @return Note describing the activation. Will use timestamp if omitted.
     * 
     */
    public Optional<Output<String>> note() {
        return Optional.ofNullable(this.note);
    }

    /**
     * List of email addresses to be notified with the results of the activation
     * 
     */
    @Import(name="notificationEmails", required=true)
    private Output<List<String>> notificationEmails;

    /**
     * @return List of email addresses to be notified with the results of the activation
     * 
     */
    public Output<List<String>> notificationEmails() {
        return this.notificationEmails;
    }

    /**
     * Version of the security configuration to be activated
     * 
     */
    @Import(name="version", required=true)
    private Output<Integer> version;

    /**
     * @return Version of the security configuration to be activated
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    private AppSecActivationsArgs() {}

    private AppSecActivationsArgs(AppSecActivationsArgs $) {
        this.configId = $.configId;
        this.network = $.network;
        this.note = $.note;
        this.notificationEmails = $.notificationEmails;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecActivationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecActivationsArgs $;

        public Builder() {
            $ = new AppSecActivationsArgs();
        }

        public Builder(AppSecActivationsArgs defaults) {
            $ = new AppSecActivationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Unique identifier of the security configuration to be activated
         * 
         * @return builder
         * 
         */
        public Builder configId(Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier of the security configuration to be activated
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param network Network on which to activate the configuration version (STAGING or PRODUCTION)
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Network on which to activate the configuration version (STAGING or PRODUCTION)
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param note Note describing the activation. Will use timestamp if omitted.
         * 
         * @return builder
         * 
         */
        public Builder note(@Nullable Output<String> note) {
            $.note = note;
            return this;
        }

        /**
         * @param note Note describing the activation. Will use timestamp if omitted.
         * 
         * @return builder
         * 
         */
        public Builder note(String note) {
            return note(Output.of(note));
        }

        /**
         * @param notificationEmails List of email addresses to be notified with the results of the activation
         * 
         * @return builder
         * 
         */
        public Builder notificationEmails(Output<List<String>> notificationEmails) {
            $.notificationEmails = notificationEmails;
            return this;
        }

        /**
         * @param notificationEmails List of email addresses to be notified with the results of the activation
         * 
         * @return builder
         * 
         */
        public Builder notificationEmails(List<String> notificationEmails) {
            return notificationEmails(Output.of(notificationEmails));
        }

        /**
         * @param notificationEmails List of email addresses to be notified with the results of the activation
         * 
         * @return builder
         * 
         */
        public Builder notificationEmails(String... notificationEmails) {
            return notificationEmails(List.of(notificationEmails));
        }

        /**
         * @param version Version of the security configuration to be activated
         * 
         * @return builder
         * 
         */
        public Builder version(Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version of the security configuration to be activated
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public AppSecActivationsArgs build() {
            if ($.configId == null) {
                throw new MissingRequiredPropertyException("AppSecActivationsArgs", "configId");
            }
            if ($.notificationEmails == null) {
                throw new MissingRequiredPropertyException("AppSecActivationsArgs", "notificationEmails");
            }
            if ($.version == null) {
                throw new MissingRequiredPropertyException("AppSecActivationsArgs", "version");
            }
            return $;
        }
    }

}
