// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery Empty = new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery();

    @Import(name="allowedTransformations", required=true)
    private List<String> allowedTransformations;

    public List<String> allowedTransformations() {
        return this.allowedTransformations;
    }

    @Import(name="queryVar", required=true)
    private String queryVar;

    public String queryVar() {
        return this.queryVar;
    }

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery() {}

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery $) {
        this.allowedTransformations = $.allowedTransformations;
        this.queryVar = $.queryVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery(Objects.requireNonNull(defaults));
        }

        public Builder allowedTransformations(List<String> allowedTransformations) {
            $.allowedTransformations = allowedTransformations;
            return this;
        }

        public Builder allowedTransformations(String... allowedTransformations) {
            return allowedTransformations(List.of(allowedTransformations));
        }

        public Builder queryVar(String queryVar) {
            $.queryVar = queryVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanImQuery build() {
            $.allowedTransformations = Objects.requireNonNull($.allowedTransformations, "expected parameter 'allowedTransformations' to be non-null");
            $.queryVar = Objects.requireNonNull($.queryVar, "expected parameter 'queryVar' to be non-null");
            return $;
        }
    }

}
