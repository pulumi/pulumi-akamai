// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationDefaultArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationLandscapeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationPortraitArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationSquareArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs();

    @Import(name="default")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationDefaultArgs> default_;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationDefaultArgs>> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="landscape")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationLandscapeArgs> landscape;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationLandscapeArgs>> landscape() {
        return Optional.ofNullable(this.landscape);
    }

    @Import(name="portrait")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationPortraitArgs> portrait;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationPortraitArgs>> portrait() {
        return Optional.ofNullable(this.portrait);
    }

    @Import(name="square")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationSquareArgs> square;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationSquareArgs>> square() {
        return Optional.ofNullable(this.square);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs $) {
        this.default_ = $.default_;
        this.landscape = $.landscape;
        this.portrait = $.portrait;
        this.square = $.square;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationDefaultArgs> default_) {
            $.default_ = default_;
            return this;
        }

        public Builder default_(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationDefaultArgs default_) {
            return default_(Output.of(default_));
        }

        public Builder landscape(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationLandscapeArgs> landscape) {
            $.landscape = landscape;
            return this;
        }

        public Builder landscape(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationLandscapeArgs landscape) {
            return landscape(Output.of(landscape));
        }

        public Builder portrait(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationPortraitArgs> portrait) {
            $.portrait = portrait;
            return this;
        }

        public Builder portrait(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationPortraitArgs portrait) {
            return portrait(Output.of(portrait));
        }

        public Builder square(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationSquareArgs> square) {
            $.square = square;
            return this;
        }

        public Builder square(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationSquareArgs square) {
            return square(Output.of(square));
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultIfOrientationArgs build() {
            return $;
        }
    }

}
