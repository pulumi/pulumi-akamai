// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.PropertyHostnameArgs;
import com.pulumi.akamai.inputs.PropertyOriginArgs;
import com.pulumi.akamai.inputs.PropertyRuleErrorArgs;
import com.pulumi.akamai.inputs.PropertyRuleWarningArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PropertyState extends com.pulumi.resources.ResourceArgs {

    public static final PropertyState Empty = new PropertyState();

    /**
     * @deprecated
     * The setting &#34;contact&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""contact"" has been deprecated. */
    @Import(name="contacts")
    private @Nullable Output<List<String>> contacts;

    /**
     * @deprecated
     * The setting &#34;contact&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""contact"" has been deprecated. */
    public Optional<Output<List<String>>> contacts() {
        return Optional.ofNullable(this.contacts);
    }

    /**
     * @deprecated
     * The setting &#34;contract&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""contract"" has been deprecated. */
    @Import(name="contract")
    private @Nullable Output<String> contract;

    /**
     * @deprecated
     * The setting &#34;contract&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""contract"" has been deprecated. */
    public Optional<Output<String>> contract() {
        return Optional.ofNullable(this.contract);
    }

    /**
     * Contract ID to be assigned to the Property
     * 
     */
    @Import(name="contractId")
    private @Nullable Output<String> contractId;

    /**
     * @return Contract ID to be assigned to the Property
     * 
     */
    public Optional<Output<String>> contractId() {
        return Optional.ofNullable(this.contractId);
    }

    /**
     * @deprecated
     * The setting &#34;cp_code&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""cp_code"" has been deprecated. */
    @Import(name="cpCode")
    private @Nullable Output<String> cpCode;

    /**
     * @deprecated
     * The setting &#34;cp_code&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""cp_code"" has been deprecated. */
    public Optional<Output<String>> cpCode() {
        return Optional.ofNullable(this.cpCode);
    }

    /**
     * @deprecated
     * The setting &#34;group&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""group"" has been deprecated. */
    @Import(name="group")
    private @Nullable Output<String> group;

    /**
     * @deprecated
     * The setting &#34;group&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""group"" has been deprecated. */
    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * Group ID to be assigned to the Property
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<String> groupId;

    /**
     * @return Group ID to be assigned to the Property
     * 
     */
    public Optional<Output<String>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    @Import(name="hostnames")
    private @Nullable Output<List<PropertyHostnameArgs>> hostnames;

    public Optional<Output<List<PropertyHostnameArgs>>> hostnames() {
        return Optional.ofNullable(this.hostnames);
    }

    /**
     * @deprecated
     * The setting &#34;is_secure&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""is_secure"" has been deprecated. */
    @Import(name="isSecure")
    private @Nullable Output<Boolean> isSecure;

    /**
     * @deprecated
     * The setting &#34;is_secure&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""is_secure"" has been deprecated. */
    public Optional<Output<Boolean>> isSecure() {
        return Optional.ofNullable(this.isSecure);
    }

    /**
     * Property&#39;s current latest version number
     * 
     */
    @Import(name="latestVersion")
    private @Nullable Output<Integer> latestVersion;

    /**
     * @return Property&#39;s current latest version number
     * 
     */
    public Optional<Output<Integer>> latestVersion() {
        return Optional.ofNullable(this.latestVersion);
    }

    /**
     * Name to give to the Property (must be unique)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name to give to the Property (must be unique)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * @deprecated
     * The setting &#34;origin&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""origin"" has been deprecated. */
    @Import(name="origins")
    private @Nullable Output<List<PropertyOriginArgs>> origins;

    /**
     * @deprecated
     * The setting &#34;origin&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""origin"" has been deprecated. */
    public Optional<Output<List<PropertyOriginArgs>>> origins() {
        return Optional.ofNullable(this.origins);
    }

    /**
     * @deprecated
     * The setting &#34;product&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""product"" has been deprecated. */
    @Import(name="product")
    private @Nullable Output<String> product;

    /**
     * @deprecated
     * The setting &#34;product&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""product"" has been deprecated. */
    public Optional<Output<String>> product() {
        return Optional.ofNullable(this.product);
    }

    /**
     * Product ID to be assigned to the Property
     * 
     */
    @Import(name="productId")
    private @Nullable Output<String> productId;

    /**
     * @return Product ID to be assigned to the Property
     * 
     */
    public Optional<Output<String>> productId() {
        return Optional.ofNullable(this.productId);
    }

    /**
     * Property&#39;s version currently activated in production (zero when not active in production)
     * 
     */
    @Import(name="productionVersion")
    private @Nullable Output<Integer> productionVersion;

    /**
     * @return Property&#39;s version currently activated in production (zero when not active in production)
     * 
     */
    public Optional<Output<Integer>> productionVersion() {
        return Optional.ofNullable(this.productionVersion);
    }

    /**
     * Required property&#39;s version to be read
     * 
     */
    @Import(name="readVersion")
    private @Nullable Output<Integer> readVersion;

    /**
     * @return Required property&#39;s version to be read
     * 
     */
    public Optional<Output<Integer>> readVersion() {
        return Optional.ofNullable(this.readVersion);
    }

    @Import(name="ruleErrors")
    private @Nullable Output<List<PropertyRuleErrorArgs>> ruleErrors;

    public Optional<Output<List<PropertyRuleErrorArgs>>> ruleErrors() {
        return Optional.ofNullable(this.ruleErrors);
    }

    /**
     * Specify the rule format version (defaults to latest version available when created)
     * 
     */
    @Import(name="ruleFormat")
    private @Nullable Output<String> ruleFormat;

    /**
     * @return Specify the rule format version (defaults to latest version available when created)
     * 
     */
    public Optional<Output<String>> ruleFormat() {
        return Optional.ofNullable(this.ruleFormat);
    }

    /**
     * @deprecated
     * Rule warnings will not be set in state anymore
     * 
     */
    @Deprecated /* Rule warnings will not be set in state anymore */
    @Import(name="ruleWarnings")
    private @Nullable Output<List<PropertyRuleWarningArgs>> ruleWarnings;

    /**
     * @deprecated
     * Rule warnings will not be set in state anymore
     * 
     */
    @Deprecated /* Rule warnings will not be set in state anymore */
    public Optional<Output<List<PropertyRuleWarningArgs>>> ruleWarnings() {
        return Optional.ofNullable(this.ruleWarnings);
    }

    /**
     * Property Rules as JSON
     * 
     */
    @Import(name="rules")
    private @Nullable Output<String> rules;

    /**
     * @return Property Rules as JSON
     * 
     */
    public Optional<Output<String>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * Property&#39;s version currently activated in staging (zero when not active in staging)
     * 
     */
    @Import(name="stagingVersion")
    private @Nullable Output<Integer> stagingVersion;

    /**
     * @return Property&#39;s version currently activated in staging (zero when not active in staging)
     * 
     */
    public Optional<Output<Integer>> stagingVersion() {
        return Optional.ofNullable(this.stagingVersion);
    }

    /**
     * @deprecated
     * The setting &#34;variables&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""variables"" has been deprecated. */
    @Import(name="variables")
    private @Nullable Output<String> variables;

    /**
     * @deprecated
     * The setting &#34;variables&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""variables"" has been deprecated. */
    public Optional<Output<String>> variables() {
        return Optional.ofNullable(this.variables);
    }

    private PropertyState() {}

    private PropertyState(PropertyState $) {
        this.contacts = $.contacts;
        this.contract = $.contract;
        this.contractId = $.contractId;
        this.cpCode = $.cpCode;
        this.group = $.group;
        this.groupId = $.groupId;
        this.hostnames = $.hostnames;
        this.isSecure = $.isSecure;
        this.latestVersion = $.latestVersion;
        this.name = $.name;
        this.origins = $.origins;
        this.product = $.product;
        this.productId = $.productId;
        this.productionVersion = $.productionVersion;
        this.readVersion = $.readVersion;
        this.ruleErrors = $.ruleErrors;
        this.ruleFormat = $.ruleFormat;
        this.ruleWarnings = $.ruleWarnings;
        this.rules = $.rules;
        this.stagingVersion = $.stagingVersion;
        this.variables = $.variables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PropertyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PropertyState $;

        public Builder() {
            $ = new PropertyState();
        }

        public Builder(PropertyState defaults) {
            $ = new PropertyState(Objects.requireNonNull(defaults));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;contact&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""contact"" has been deprecated. */
        public Builder contacts(@Nullable Output<List<String>> contacts) {
            $.contacts = contacts;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;contact&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""contact"" has been deprecated. */
        public Builder contacts(List<String> contacts) {
            return contacts(Output.of(contacts));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;contact&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""contact"" has been deprecated. */
        public Builder contacts(String... contacts) {
            return contacts(List.of(contacts));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;contract&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""contract"" has been deprecated. */
        public Builder contract(@Nullable Output<String> contract) {
            $.contract = contract;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;contract&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""contract"" has been deprecated. */
        public Builder contract(String contract) {
            return contract(Output.of(contract));
        }

        /**
         * @param contractId Contract ID to be assigned to the Property
         * 
         * @return builder
         * 
         */
        public Builder contractId(@Nullable Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        /**
         * @param contractId Contract ID to be assigned to the Property
         * 
         * @return builder
         * 
         */
        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;cp_code&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""cp_code"" has been deprecated. */
        public Builder cpCode(@Nullable Output<String> cpCode) {
            $.cpCode = cpCode;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;cp_code&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""cp_code"" has been deprecated. */
        public Builder cpCode(String cpCode) {
            return cpCode(Output.of(cpCode));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;group&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""group"" has been deprecated. */
        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;group&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""group"" has been deprecated. */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        /**
         * @param groupId Group ID to be assigned to the Property
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId Group ID to be assigned to the Property
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        public Builder hostnames(@Nullable Output<List<PropertyHostnameArgs>> hostnames) {
            $.hostnames = hostnames;
            return this;
        }

        public Builder hostnames(List<PropertyHostnameArgs> hostnames) {
            return hostnames(Output.of(hostnames));
        }

        public Builder hostnames(PropertyHostnameArgs... hostnames) {
            return hostnames(List.of(hostnames));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;is_secure&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""is_secure"" has been deprecated. */
        public Builder isSecure(@Nullable Output<Boolean> isSecure) {
            $.isSecure = isSecure;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;is_secure&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""is_secure"" has been deprecated. */
        public Builder isSecure(Boolean isSecure) {
            return isSecure(Output.of(isSecure));
        }

        /**
         * @param latestVersion Property&#39;s current latest version number
         * 
         * @return builder
         * 
         */
        public Builder latestVersion(@Nullable Output<Integer> latestVersion) {
            $.latestVersion = latestVersion;
            return this;
        }

        /**
         * @param latestVersion Property&#39;s current latest version number
         * 
         * @return builder
         * 
         */
        public Builder latestVersion(Integer latestVersion) {
            return latestVersion(Output.of(latestVersion));
        }

        /**
         * @param name Name to give to the Property (must be unique)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name to give to the Property (must be unique)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;origin&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""origin"" has been deprecated. */
        public Builder origins(@Nullable Output<List<PropertyOriginArgs>> origins) {
            $.origins = origins;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;origin&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""origin"" has been deprecated. */
        public Builder origins(List<PropertyOriginArgs> origins) {
            return origins(Output.of(origins));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;origin&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""origin"" has been deprecated. */
        public Builder origins(PropertyOriginArgs... origins) {
            return origins(List.of(origins));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;product&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""product"" has been deprecated. */
        public Builder product(@Nullable Output<String> product) {
            $.product = product;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;product&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""product"" has been deprecated. */
        public Builder product(String product) {
            return product(Output.of(product));
        }

        /**
         * @param productId Product ID to be assigned to the Property
         * 
         * @return builder
         * 
         */
        public Builder productId(@Nullable Output<String> productId) {
            $.productId = productId;
            return this;
        }

        /**
         * @param productId Product ID to be assigned to the Property
         * 
         * @return builder
         * 
         */
        public Builder productId(String productId) {
            return productId(Output.of(productId));
        }

        /**
         * @param productionVersion Property&#39;s version currently activated in production (zero when not active in production)
         * 
         * @return builder
         * 
         */
        public Builder productionVersion(@Nullable Output<Integer> productionVersion) {
            $.productionVersion = productionVersion;
            return this;
        }

        /**
         * @param productionVersion Property&#39;s version currently activated in production (zero when not active in production)
         * 
         * @return builder
         * 
         */
        public Builder productionVersion(Integer productionVersion) {
            return productionVersion(Output.of(productionVersion));
        }

        /**
         * @param readVersion Required property&#39;s version to be read
         * 
         * @return builder
         * 
         */
        public Builder readVersion(@Nullable Output<Integer> readVersion) {
            $.readVersion = readVersion;
            return this;
        }

        /**
         * @param readVersion Required property&#39;s version to be read
         * 
         * @return builder
         * 
         */
        public Builder readVersion(Integer readVersion) {
            return readVersion(Output.of(readVersion));
        }

        public Builder ruleErrors(@Nullable Output<List<PropertyRuleErrorArgs>> ruleErrors) {
            $.ruleErrors = ruleErrors;
            return this;
        }

        public Builder ruleErrors(List<PropertyRuleErrorArgs> ruleErrors) {
            return ruleErrors(Output.of(ruleErrors));
        }

        public Builder ruleErrors(PropertyRuleErrorArgs... ruleErrors) {
            return ruleErrors(List.of(ruleErrors));
        }

        /**
         * @param ruleFormat Specify the rule format version (defaults to latest version available when created)
         * 
         * @return builder
         * 
         */
        public Builder ruleFormat(@Nullable Output<String> ruleFormat) {
            $.ruleFormat = ruleFormat;
            return this;
        }

        /**
         * @param ruleFormat Specify the rule format version (defaults to latest version available when created)
         * 
         * @return builder
         * 
         */
        public Builder ruleFormat(String ruleFormat) {
            return ruleFormat(Output.of(ruleFormat));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Rule warnings will not be set in state anymore
         * 
         */
        @Deprecated /* Rule warnings will not be set in state anymore */
        public Builder ruleWarnings(@Nullable Output<List<PropertyRuleWarningArgs>> ruleWarnings) {
            $.ruleWarnings = ruleWarnings;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Rule warnings will not be set in state anymore
         * 
         */
        @Deprecated /* Rule warnings will not be set in state anymore */
        public Builder ruleWarnings(List<PropertyRuleWarningArgs> ruleWarnings) {
            return ruleWarnings(Output.of(ruleWarnings));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Rule warnings will not be set in state anymore
         * 
         */
        @Deprecated /* Rule warnings will not be set in state anymore */
        public Builder ruleWarnings(PropertyRuleWarningArgs... ruleWarnings) {
            return ruleWarnings(List.of(ruleWarnings));
        }

        /**
         * @param rules Property Rules as JSON
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<String> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Property Rules as JSON
         * 
         * @return builder
         * 
         */
        public Builder rules(String rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param stagingVersion Property&#39;s version currently activated in staging (zero when not active in staging)
         * 
         * @return builder
         * 
         */
        public Builder stagingVersion(@Nullable Output<Integer> stagingVersion) {
            $.stagingVersion = stagingVersion;
            return this;
        }

        /**
         * @param stagingVersion Property&#39;s version currently activated in staging (zero when not active in staging)
         * 
         * @return builder
         * 
         */
        public Builder stagingVersion(Integer stagingVersion) {
            return stagingVersion(Output.of(stagingVersion));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;variables&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""variables"" has been deprecated. */
        public Builder variables(@Nullable Output<String> variables) {
            $.variables = variables;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;variables&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""variables"" has been deprecated. */
        public Builder variables(String variables) {
            return variables(Output.of(variables));
        }

        public PropertyState build() {
            return $;
        }
    }

}
