// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics Empty = new GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics();

    /**
     * Enables secure use of access keys defined in Cloud Access Manager. Access keys store encrypted authentication details required to sign requests to cloud origins. If you disable this option, you&#39;ll need to store the authentication details unencrypted.
     * 
     */
    @Import(name="accessKeyEncryptedStorage")
    private @Nullable Boolean accessKeyEncryptedStorage;

    /**
     * @return Enables secure use of access keys defined in Cloud Access Manager. Access keys store encrypted authentication details required to sign requests to cloud origins. If you disable this option, you&#39;ll need to store the authentication details unencrypted.
     * 
     */
    public Optional<Boolean> accessKeyEncryptedStorage() {
        return Optional.ofNullable(this.accessKeyEncryptedStorage);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="adcTitle")
    private @Nullable String adcTitle;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> adcTitle() {
        return Optional.ofNullable(this.adcTitle);
    }

    /**
     * Specifies the authentication method.
     * 
     */
    @Import(name="authenticationMethod")
    private @Nullable String authenticationMethod;

    /**
     * @return Specifies the authentication method.
     * 
     */
    public Optional<String> authenticationMethod() {
        return Optional.ofNullable(this.authenticationMethod);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="authenticationMethodTitle")
    private @Nullable String authenticationMethodTitle;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> authenticationMethodTitle() {
        return Optional.ofNullable(this.authenticationMethodTitle);
    }

    /**
     * Specifies active access key ID linked to your AWS account.
     * 
     */
    @Import(name="awsAccessKeyId")
    private @Nullable String awsAccessKeyId;

    /**
     * @return Specifies active access key ID linked to your AWS account.
     * 
     */
    public Optional<String> awsAccessKeyId() {
        return Optional.ofNullable(this.awsAccessKeyId);
    }

    /**
     * Identifies the unique `awsAccessKeyVersionGuid` access key `created` in Cloud Access Manager to sign your requests to AWS S3.
     * 
     */
    @Import(name="awsAccessKeyVersionGuid")
    private @Nullable String awsAccessKeyVersionGuid;

    /**
     * @return Identifies the unique `awsAccessKeyVersionGuid` access key `created` in Cloud Access Manager to sign your requests to AWS S3.
     * 
     */
    public Optional<String> awsAccessKeyVersionGuid() {
        return Optional.ofNullable(this.awsAccessKeyVersionGuid);
    }

    @Import(name="awsArRegion")
    private @Nullable String awsArRegion;

    public Optional<String> awsArRegion() {
        return Optional.ofNullable(this.awsArRegion);
    }

    /**
     * This specifies the AWS hostname, without `http://` or `https://` prefixes. If you leave this option empty, it inherits the hostname from the `origin` behavior.
     * 
     */
    @Import(name="awsHost")
    private @Nullable String awsHost;

    /**
     * @return This specifies the AWS hostname, without `http://` or `https://` prefixes. If you leave this option empty, it inherits the hostname from the `origin` behavior.
     * 
     */
    public Optional<String> awsHost() {
        return Optional.ofNullable(this.awsHost);
    }

    /**
     * This specifies the AWS region code of the location where your bucket resides.
     * 
     */
    @Import(name="awsRegion")
    private @Nullable String awsRegion;

    /**
     * @return This specifies the AWS region code of the location where your bucket resides.
     * 
     */
    public Optional<String> awsRegion() {
        return Optional.ofNullable(this.awsRegion);
    }

    /**
     * Specifies the secret linked to the access key identifier that you want to use to sign requests to AWS.
     * 
     */
    @Import(name="awsSecretAccessKey")
    private @Nullable String awsSecretAccessKey;

    /**
     * @return Specifies the secret linked to the access key identifier that you want to use to sign requests to AWS.
     * 
     */
    public Optional<String> awsSecretAccessKey() {
        return Optional.ofNullable(this.awsSecretAccessKey);
    }

    /**
     * This specifies the subdomain of your AWS service. It precedes `amazonaws.com` or the region code in the AWS hostname. For example, `s3.amazonaws.com`.
     * 
     */
    @Import(name="awsService")
    private @Nullable String awsService;

    /**
     * @return This specifies the subdomain of your AWS service. It precedes `amazonaws.com` or the region code in the AWS hostname. For example, `s3.amazonaws.com`.
     * 
     */
    public Optional<String> awsService() {
        return Optional.ofNullable(this.awsService);
    }

    /**
     * Specifies the origin&#39;s geographic region.
     * 
     */
    @Import(name="country")
    private @Nullable String country;

    /**
     * @return Specifies the origin&#39;s geographic region.
     * 
     */
    public Optional<String> country() {
        return Optional.ofNullable(this.country);
    }

    /**
     * Specifies the data to be encrypted as a series of enumerated variable names. See `Built-in system variables` for guidance on each.
     * 
     */
    @Import(name="customSignStrings")
    private @Nullable List<String> customSignStrings;

    /**
     * @return Specifies the data to be encrypted as a series of enumerated variable names. See `Built-in system variables` for guidance on each.
     * 
     */
    public Optional<List<String>> customSignStrings() {
        return Optional.ofNullable(this.customSignStrings);
    }

    /**
     * Provides a region used by Akamai Direct Connection.
     * 
     */
    @Import(name="directConnectGeo")
    private @Nullable String directConnectGeo;

    /**
     * @return Provides a region used by Akamai Direct Connection.
     * 
     */
    public Optional<String> directConnectGeo() {
        return Optional.ofNullable(this.directConnectGeo);
    }

    /**
     * Encodes any equal (`=`) characters in a query parameter&#39;s value.
     * 
     */
    @Import(name="encodeEquals")
    private @Nullable Boolean encodeEquals;

    /**
     * @return Encodes any equal (`=`) characters in a query parameter&#39;s value.
     * 
     */
    public Optional<Boolean> encodeEquals() {
        return Optional.ofNullable(this.encodeEquals);
    }

    /**
     * Encodes the query string parameters.
     * 
     */
    @Import(name="encodeQueryParams")
    private @Nullable Boolean encodeQueryParams;

    /**
     * @return Encodes the query string parameters.
     * 
     */
    public Optional<Boolean> encodeQueryParams() {
        return Optional.ofNullable(this.encodeQueryParams);
    }

    /**
     * Specifies the version of the encryption algorithm, an integer from `1` to `5`.
     * 
     */
    @Import(name="encodingVersion")
    private @Nullable Integer encodingVersion;

    /**
     * @return Specifies the version of the encryption algorithm, an integer from `1` to `5`.
     * 
     */
    public Optional<Integer> encodingVersion() {
        return Optional.ofNullable(this.encodingVersion);
    }

    @Import(name="endPointService")
    private @Nullable String endPointService;

    public Optional<String> endPointService() {
        return Optional.ofNullable(this.endPointService);
    }

    /**
     * Identifies the unique `gcsAccessKeyVersionGuid` access key `created` in Cloud Access Manager to sign your requests to Google Cloud Storage in interoperability mode.
     * 
     */
    @Import(name="gcsAccessKeyVersionGuid")
    private @Nullable String gcsAccessKeyVersionGuid;

    /**
     * @return Identifies the unique `gcsAccessKeyVersionGuid` access key `created` in Cloud Access Manager to sign your requests to Google Cloud Storage in interoperability mode.
     * 
     */
    public Optional<String> gcsAccessKeyVersionGuid() {
        return Optional.ofNullable(this.gcsAccessKeyVersionGuid);
    }

    /**
     * Specifies the active access ID linked to your Google account.
     * 
     */
    @Import(name="gcsHmacKeyAccessId")
    private @Nullable String gcsHmacKeyAccessId;

    /**
     * @return Specifies the active access ID linked to your Google account.
     * 
     */
    public Optional<String> gcsHmacKeyAccessId() {
        return Optional.ofNullable(this.gcsHmacKeyAccessId);
    }

    /**
     * Specifies the secret linked to the access ID that you want to use to sign requests to Google Cloud Storage.
     * 
     */
    @Import(name="gcsHmacKeySecret")
    private @Nullable String gcsHmacKeySecret;

    /**
     * @return Specifies the secret linked to the access ID that you want to use to sign requests to Google Cloud Storage.
     * 
     */
    public Optional<String> gcsHmacKeySecret() {
        return Optional.ofNullable(this.gcsHmacKeySecret);
    }

    @Import(name="hostnameTag")
    private @Nullable Boolean hostnameTag;

    public Optional<Boolean> hostnameTag() {
        return Optional.ofNullable(this.hostnameTag);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Boolean locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Specifies the access key provided by the hosting service.
     * 
     */
    @Import(name="mslkey")
    private @Nullable String mslkey;

    /**
     * @return Specifies the access key provided by the hosting service.
     * 
     */
    public Optional<String> mslkey() {
        return Optional.ofNullable(this.mslkey);
    }

    /**
     * Specifies the origin name provided by the hosting service.
     * 
     */
    @Import(name="mslname")
    private @Nullable String mslname;

    /**
     * @return Specifies the origin name provided by the hosting service.
     * 
     */
    public Optional<String> mslname() {
        return Optional.ofNullable(this.mslname);
    }

    /**
     * Specifies the nonce.
     * 
     */
    @Import(name="nonce")
    private @Nullable String nonce;

    /**
     * @return Specifies the nonce.
     * 
     */
    public Optional<String> nonce() {
        return Optional.ofNullable(this.nonce);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="originLocationTitle")
    private @Nullable String originLocationTitle;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> originLocationTitle() {
        return Optional.ofNullable(this.originLocationTitle);
    }

    @Import(name="propertyIdTag")
    private @Nullable Boolean propertyIdTag;

    public Optional<Boolean> propertyIdTag() {
        return Optional.ofNullable(this.propertyIdTag);
    }

    @Import(name="roleArn")
    private @Nullable String roleArn;

    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * Specifies the shared secret key.
     * 
     */
    @Import(name="secretKey")
    private @Nullable String secretKey;

    /**
     * @return Specifies the shared secret key.
     * 
     */
    public Optional<String> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    /**
     * Sorts the query string parameters alphabetically by key name.
     * 
     */
    @Import(name="sortQueryParams")
    private @Nullable Boolean sortQueryParams;

    /**
     * @return Sorts the query string parameters alphabetically by key name.
     * 
     */
    public Optional<Boolean> sortQueryParams() {
        return Optional.ofNullable(this.sortQueryParams);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable String templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * Specifies whether to customize your signed string.
     * 
     */
    @Import(name="useCustomSignString")
    private @Nullable Boolean useCustomSignString;

    /**
     * @return Specifies whether to customize your signed string.
     * 
     */
    public Optional<Boolean> useCustomSignString() {
        return Optional.ofNullable(this.useCustomSignString);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable String uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics() {}

    private GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics(GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics $) {
        this.accessKeyEncryptedStorage = $.accessKeyEncryptedStorage;
        this.adcTitle = $.adcTitle;
        this.authenticationMethod = $.authenticationMethod;
        this.authenticationMethodTitle = $.authenticationMethodTitle;
        this.awsAccessKeyId = $.awsAccessKeyId;
        this.awsAccessKeyVersionGuid = $.awsAccessKeyVersionGuid;
        this.awsArRegion = $.awsArRegion;
        this.awsHost = $.awsHost;
        this.awsRegion = $.awsRegion;
        this.awsSecretAccessKey = $.awsSecretAccessKey;
        this.awsService = $.awsService;
        this.country = $.country;
        this.customSignStrings = $.customSignStrings;
        this.directConnectGeo = $.directConnectGeo;
        this.encodeEquals = $.encodeEquals;
        this.encodeQueryParams = $.encodeQueryParams;
        this.encodingVersion = $.encodingVersion;
        this.endPointService = $.endPointService;
        this.gcsAccessKeyVersionGuid = $.gcsAccessKeyVersionGuid;
        this.gcsHmacKeyAccessId = $.gcsHmacKeyAccessId;
        this.gcsHmacKeySecret = $.gcsHmacKeySecret;
        this.hostnameTag = $.hostnameTag;
        this.locked = $.locked;
        this.mslkey = $.mslkey;
        this.mslname = $.mslname;
        this.nonce = $.nonce;
        this.originLocationTitle = $.originLocationTitle;
        this.propertyIdTag = $.propertyIdTag;
        this.roleArn = $.roleArn;
        this.secretKey = $.secretKey;
        this.sortQueryParams = $.sortQueryParams;
        this.templateUuid = $.templateUuid;
        this.useCustomSignString = $.useCustomSignString;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics();
        }

        public Builder(GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics defaults) {
            $ = new GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyEncryptedStorage Enables secure use of access keys defined in Cloud Access Manager. Access keys store encrypted authentication details required to sign requests to cloud origins. If you disable this option, you&#39;ll need to store the authentication details unencrypted.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyEncryptedStorage(@Nullable Boolean accessKeyEncryptedStorage) {
            $.accessKeyEncryptedStorage = accessKeyEncryptedStorage;
            return this;
        }

        /**
         * @param adcTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder adcTitle(@Nullable String adcTitle) {
            $.adcTitle = adcTitle;
            return this;
        }

        /**
         * @param authenticationMethod Specifies the authentication method.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMethod(@Nullable String authenticationMethod) {
            $.authenticationMethod = authenticationMethod;
            return this;
        }

        /**
         * @param authenticationMethodTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMethodTitle(@Nullable String authenticationMethodTitle) {
            $.authenticationMethodTitle = authenticationMethodTitle;
            return this;
        }

        /**
         * @param awsAccessKeyId Specifies active access key ID linked to your AWS account.
         * 
         * @return builder
         * 
         */
        public Builder awsAccessKeyId(@Nullable String awsAccessKeyId) {
            $.awsAccessKeyId = awsAccessKeyId;
            return this;
        }

        /**
         * @param awsAccessKeyVersionGuid Identifies the unique `awsAccessKeyVersionGuid` access key `created` in Cloud Access Manager to sign your requests to AWS S3.
         * 
         * @return builder
         * 
         */
        public Builder awsAccessKeyVersionGuid(@Nullable String awsAccessKeyVersionGuid) {
            $.awsAccessKeyVersionGuid = awsAccessKeyVersionGuid;
            return this;
        }

        public Builder awsArRegion(@Nullable String awsArRegion) {
            $.awsArRegion = awsArRegion;
            return this;
        }

        /**
         * @param awsHost This specifies the AWS hostname, without `http://` or `https://` prefixes. If you leave this option empty, it inherits the hostname from the `origin` behavior.
         * 
         * @return builder
         * 
         */
        public Builder awsHost(@Nullable String awsHost) {
            $.awsHost = awsHost;
            return this;
        }

        /**
         * @param awsRegion This specifies the AWS region code of the location where your bucket resides.
         * 
         * @return builder
         * 
         */
        public Builder awsRegion(@Nullable String awsRegion) {
            $.awsRegion = awsRegion;
            return this;
        }

        /**
         * @param awsSecretAccessKey Specifies the secret linked to the access key identifier that you want to use to sign requests to AWS.
         * 
         * @return builder
         * 
         */
        public Builder awsSecretAccessKey(@Nullable String awsSecretAccessKey) {
            $.awsSecretAccessKey = awsSecretAccessKey;
            return this;
        }

        /**
         * @param awsService This specifies the subdomain of your AWS service. It precedes `amazonaws.com` or the region code in the AWS hostname. For example, `s3.amazonaws.com`.
         * 
         * @return builder
         * 
         */
        public Builder awsService(@Nullable String awsService) {
            $.awsService = awsService;
            return this;
        }

        /**
         * @param country Specifies the origin&#39;s geographic region.
         * 
         * @return builder
         * 
         */
        public Builder country(@Nullable String country) {
            $.country = country;
            return this;
        }

        /**
         * @param customSignStrings Specifies the data to be encrypted as a series of enumerated variable names. See `Built-in system variables` for guidance on each.
         * 
         * @return builder
         * 
         */
        public Builder customSignStrings(@Nullable List<String> customSignStrings) {
            $.customSignStrings = customSignStrings;
            return this;
        }

        /**
         * @param customSignStrings Specifies the data to be encrypted as a series of enumerated variable names. See `Built-in system variables` for guidance on each.
         * 
         * @return builder
         * 
         */
        public Builder customSignStrings(String... customSignStrings) {
            return customSignStrings(List.of(customSignStrings));
        }

        /**
         * @param directConnectGeo Provides a region used by Akamai Direct Connection.
         * 
         * @return builder
         * 
         */
        public Builder directConnectGeo(@Nullable String directConnectGeo) {
            $.directConnectGeo = directConnectGeo;
            return this;
        }

        /**
         * @param encodeEquals Encodes any equal (`=`) characters in a query parameter&#39;s value.
         * 
         * @return builder
         * 
         */
        public Builder encodeEquals(@Nullable Boolean encodeEquals) {
            $.encodeEquals = encodeEquals;
            return this;
        }

        /**
         * @param encodeQueryParams Encodes the query string parameters.
         * 
         * @return builder
         * 
         */
        public Builder encodeQueryParams(@Nullable Boolean encodeQueryParams) {
            $.encodeQueryParams = encodeQueryParams;
            return this;
        }

        /**
         * @param encodingVersion Specifies the version of the encryption algorithm, an integer from `1` to `5`.
         * 
         * @return builder
         * 
         */
        public Builder encodingVersion(@Nullable Integer encodingVersion) {
            $.encodingVersion = encodingVersion;
            return this;
        }

        public Builder endPointService(@Nullable String endPointService) {
            $.endPointService = endPointService;
            return this;
        }

        /**
         * @param gcsAccessKeyVersionGuid Identifies the unique `gcsAccessKeyVersionGuid` access key `created` in Cloud Access Manager to sign your requests to Google Cloud Storage in interoperability mode.
         * 
         * @return builder
         * 
         */
        public Builder gcsAccessKeyVersionGuid(@Nullable String gcsAccessKeyVersionGuid) {
            $.gcsAccessKeyVersionGuid = gcsAccessKeyVersionGuid;
            return this;
        }

        /**
         * @param gcsHmacKeyAccessId Specifies the active access ID linked to your Google account.
         * 
         * @return builder
         * 
         */
        public Builder gcsHmacKeyAccessId(@Nullable String gcsHmacKeyAccessId) {
            $.gcsHmacKeyAccessId = gcsHmacKeyAccessId;
            return this;
        }

        /**
         * @param gcsHmacKeySecret Specifies the secret linked to the access ID that you want to use to sign requests to Google Cloud Storage.
         * 
         * @return builder
         * 
         */
        public Builder gcsHmacKeySecret(@Nullable String gcsHmacKeySecret) {
            $.gcsHmacKeySecret = gcsHmacKeySecret;
            return this;
        }

        public Builder hostnameTag(@Nullable Boolean hostnameTag) {
            $.hostnameTag = hostnameTag;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Boolean locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param mslkey Specifies the access key provided by the hosting service.
         * 
         * @return builder
         * 
         */
        public Builder mslkey(@Nullable String mslkey) {
            $.mslkey = mslkey;
            return this;
        }

        /**
         * @param mslname Specifies the origin name provided by the hosting service.
         * 
         * @return builder
         * 
         */
        public Builder mslname(@Nullable String mslname) {
            $.mslname = mslname;
            return this;
        }

        /**
         * @param nonce Specifies the nonce.
         * 
         * @return builder
         * 
         */
        public Builder nonce(@Nullable String nonce) {
            $.nonce = nonce;
            return this;
        }

        /**
         * @param originLocationTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder originLocationTitle(@Nullable String originLocationTitle) {
            $.originLocationTitle = originLocationTitle;
            return this;
        }

        public Builder propertyIdTag(@Nullable Boolean propertyIdTag) {
            $.propertyIdTag = propertyIdTag;
            return this;
        }

        public Builder roleArn(@Nullable String roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param secretKey Specifies the shared secret key.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(@Nullable String secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param sortQueryParams Sorts the query string parameters alphabetically by key name.
         * 
         * @return builder
         * 
         */
        public Builder sortQueryParams(@Nullable Boolean sortQueryParams) {
            $.sortQueryParams = sortQueryParams;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable String templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param useCustomSignString Specifies whether to customize your signed string.
         * 
         * @return builder
         * 
         */
        public Builder useCustomSignString(@Nullable Boolean useCustomSignString) {
            $.useCustomSignString = useCustomSignString;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        public GetPropertyRulesBuilderRulesV20250113BehaviorOriginCharacteristics build() {
            return $;
        }
    }

}
