// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareAppend;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareAspectCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareBackgroundColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareBlur;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareChromaKey;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareComposite;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareCompound;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareContrast;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFaceCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFeatureCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFitAndFill;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareGoop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareGrayscale;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareHsl;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareHsv;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareIfDimension;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareIfOrientation;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareImQuery;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMaxColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMirror;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMonoHue;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareOpacity;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRegionOfInterestCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRelativeCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRemoveColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareResize;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRotate;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareScale;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareShears;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareTrim;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareUnsharpMask;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare Empty = new GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare();

    @Import(name="appends")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareAppend> appends;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareAppend>> appends() {
        return Optional.ofNullable(this.appends);
    }

    @Import(name="aspectCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareAspectCrop> aspectCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareAspectCrop>> aspectCrops() {
        return Optional.ofNullable(this.aspectCrops);
    }

    @Import(name="backgroundColors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareBackgroundColor> backgroundColors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareBackgroundColor>> backgroundColors() {
        return Optional.ofNullable(this.backgroundColors);
    }

    @Import(name="blurs")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareBlur> blurs;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareBlur>> blurs() {
        return Optional.ofNullable(this.blurs);
    }

    @Import(name="chromaKeys")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareChromaKey> chromaKeys;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareChromaKey>> chromaKeys() {
        return Optional.ofNullable(this.chromaKeys);
    }

    @Import(name="composites")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareComposite> composites;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareComposite>> composites() {
        return Optional.ofNullable(this.composites);
    }

    @Import(name="compounds")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareCompound> compounds;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareCompound>> compounds() {
        return Optional.ofNullable(this.compounds);
    }

    @Import(name="contrasts")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareContrast> contrasts;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareContrast>> contrasts() {
        return Optional.ofNullable(this.contrasts);
    }

    @Import(name="crops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareCrop> crops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareCrop>> crops() {
        return Optional.ofNullable(this.crops);
    }

    @Import(name="faceCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFaceCrop> faceCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFaceCrop>> faceCrops() {
        return Optional.ofNullable(this.faceCrops);
    }

    @Import(name="featureCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFeatureCrop> featureCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFeatureCrop>> featureCrops() {
        return Optional.ofNullable(this.featureCrops);
    }

    @Import(name="fitAndFills")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFitAndFill> fitAndFills;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFitAndFill>> fitAndFills() {
        return Optional.ofNullable(this.fitAndFills);
    }

    @Import(name="goops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareGoop> goops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareGoop>> goops() {
        return Optional.ofNullable(this.goops);
    }

    @Import(name="grayscales")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareGrayscale> grayscales;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareGrayscale>> grayscales() {
        return Optional.ofNullable(this.grayscales);
    }

    @Import(name="hsls")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareHsl> hsls;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareHsl>> hsls() {
        return Optional.ofNullable(this.hsls);
    }

    @Import(name="hsvs")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareHsv> hsvs;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareHsv>> hsvs() {
        return Optional.ofNullable(this.hsvs);
    }

    @Import(name="ifDimensions")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareIfDimension> ifDimensions;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareIfDimension>> ifDimensions() {
        return Optional.ofNullable(this.ifDimensions);
    }

    @Import(name="ifOrientations")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareIfOrientation> ifOrientations;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareIfOrientation>> ifOrientations() {
        return Optional.ofNullable(this.ifOrientations);
    }

    @Import(name="imQueries")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareImQuery> imQueries;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareImQuery>> imQueries() {
        return Optional.ofNullable(this.imQueries);
    }

    @Import(name="maxColors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMaxColor> maxColors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMaxColor>> maxColors() {
        return Optional.ofNullable(this.maxColors);
    }

    @Import(name="mirrors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMirror> mirrors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMirror>> mirrors() {
        return Optional.ofNullable(this.mirrors);
    }

    @Import(name="monoHues")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMonoHue> monoHues;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMonoHue>> monoHues() {
        return Optional.ofNullable(this.monoHues);
    }

    @Import(name="opacities")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareOpacity> opacities;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareOpacity>> opacities() {
        return Optional.ofNullable(this.opacities);
    }

    @Import(name="regionOfInterestCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRegionOfInterestCrop> regionOfInterestCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRegionOfInterestCrop>> regionOfInterestCrops() {
        return Optional.ofNullable(this.regionOfInterestCrops);
    }

    @Import(name="relativeCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRelativeCrop> relativeCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRelativeCrop>> relativeCrops() {
        return Optional.ofNullable(this.relativeCrops);
    }

    @Import(name="removeColors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRemoveColor> removeColors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRemoveColor>> removeColors() {
        return Optional.ofNullable(this.removeColors);
    }

    @Import(name="resizes")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareResize> resizes;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareResize>> resizes() {
        return Optional.ofNullable(this.resizes);
    }

    @Import(name="rotates")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRotate> rotates;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRotate>> rotates() {
        return Optional.ofNullable(this.rotates);
    }

    @Import(name="scales")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareScale> scales;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareScale>> scales() {
        return Optional.ofNullable(this.scales);
    }

    @Import(name="shears")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareShears> shears;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareShears>> shears() {
        return Optional.ofNullable(this.shears);
    }

    @Import(name="trims")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareTrim> trims;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareTrim>> trims() {
        return Optional.ofNullable(this.trims);
    }

    @Import(name="unsharpMasks")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareUnsharpMask> unsharpMasks;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareUnsharpMask>> unsharpMasks() {
        return Optional.ofNullable(this.unsharpMasks);
    }

    private GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare() {}

    private GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare $) {
        this.appends = $.appends;
        this.aspectCrops = $.aspectCrops;
        this.backgroundColors = $.backgroundColors;
        this.blurs = $.blurs;
        this.chromaKeys = $.chromaKeys;
        this.composites = $.composites;
        this.compounds = $.compounds;
        this.contrasts = $.contrasts;
        this.crops = $.crops;
        this.faceCrops = $.faceCrops;
        this.featureCrops = $.featureCrops;
        this.fitAndFills = $.fitAndFills;
        this.goops = $.goops;
        this.grayscales = $.grayscales;
        this.hsls = $.hsls;
        this.hsvs = $.hsvs;
        this.ifDimensions = $.ifDimensions;
        this.ifOrientations = $.ifOrientations;
        this.imQueries = $.imQueries;
        this.maxColors = $.maxColors;
        this.mirrors = $.mirrors;
        this.monoHues = $.monoHues;
        this.opacities = $.opacities;
        this.regionOfInterestCrops = $.regionOfInterestCrops;
        this.relativeCrops = $.relativeCrops;
        this.removeColors = $.removeColors;
        this.resizes = $.resizes;
        this.rotates = $.rotates;
        this.scales = $.scales;
        this.shears = $.shears;
        this.trims = $.trims;
        this.unsharpMasks = $.unsharpMasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare(Objects.requireNonNull(defaults));
        }

        public Builder appends(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareAppend> appends) {
            $.appends = appends;
            return this;
        }

        public Builder appends(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareAppend... appends) {
            return appends(List.of(appends));
        }

        public Builder aspectCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareAspectCrop> aspectCrops) {
            $.aspectCrops = aspectCrops;
            return this;
        }

        public Builder aspectCrops(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareAspectCrop... aspectCrops) {
            return aspectCrops(List.of(aspectCrops));
        }

        public Builder backgroundColors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareBackgroundColor> backgroundColors) {
            $.backgroundColors = backgroundColors;
            return this;
        }

        public Builder backgroundColors(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareBackgroundColor... backgroundColors) {
            return backgroundColors(List.of(backgroundColors));
        }

        public Builder blurs(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareBlur> blurs) {
            $.blurs = blurs;
            return this;
        }

        public Builder blurs(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareBlur... blurs) {
            return blurs(List.of(blurs));
        }

        public Builder chromaKeys(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareChromaKey> chromaKeys) {
            $.chromaKeys = chromaKeys;
            return this;
        }

        public Builder chromaKeys(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareChromaKey... chromaKeys) {
            return chromaKeys(List.of(chromaKeys));
        }

        public Builder composites(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareComposite> composites) {
            $.composites = composites;
            return this;
        }

        public Builder composites(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareComposite... composites) {
            return composites(List.of(composites));
        }

        public Builder compounds(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareCompound> compounds) {
            $.compounds = compounds;
            return this;
        }

        public Builder compounds(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareCompound... compounds) {
            return compounds(List.of(compounds));
        }

        public Builder contrasts(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareContrast> contrasts) {
            $.contrasts = contrasts;
            return this;
        }

        public Builder contrasts(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareContrast... contrasts) {
            return contrasts(List.of(contrasts));
        }

        public Builder crops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareCrop> crops) {
            $.crops = crops;
            return this;
        }

        public Builder crops(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareCrop... crops) {
            return crops(List.of(crops));
        }

        public Builder faceCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFaceCrop> faceCrops) {
            $.faceCrops = faceCrops;
            return this;
        }

        public Builder faceCrops(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFaceCrop... faceCrops) {
            return faceCrops(List.of(faceCrops));
        }

        public Builder featureCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFeatureCrop> featureCrops) {
            $.featureCrops = featureCrops;
            return this;
        }

        public Builder featureCrops(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFeatureCrop... featureCrops) {
            return featureCrops(List.of(featureCrops));
        }

        public Builder fitAndFills(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFitAndFill> fitAndFills) {
            $.fitAndFills = fitAndFills;
            return this;
        }

        public Builder fitAndFills(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareFitAndFill... fitAndFills) {
            return fitAndFills(List.of(fitAndFills));
        }

        public Builder goops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareGoop> goops) {
            $.goops = goops;
            return this;
        }

        public Builder goops(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareGoop... goops) {
            return goops(List.of(goops));
        }

        public Builder grayscales(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareGrayscale> grayscales) {
            $.grayscales = grayscales;
            return this;
        }

        public Builder grayscales(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareGrayscale... grayscales) {
            return grayscales(List.of(grayscales));
        }

        public Builder hsls(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareHsl> hsls) {
            $.hsls = hsls;
            return this;
        }

        public Builder hsls(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareHsl... hsls) {
            return hsls(List.of(hsls));
        }

        public Builder hsvs(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareHsv> hsvs) {
            $.hsvs = hsvs;
            return this;
        }

        public Builder hsvs(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareHsv... hsvs) {
            return hsvs(List.of(hsvs));
        }

        public Builder ifDimensions(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareIfDimension> ifDimensions) {
            $.ifDimensions = ifDimensions;
            return this;
        }

        public Builder ifDimensions(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareIfDimension... ifDimensions) {
            return ifDimensions(List.of(ifDimensions));
        }

        public Builder ifOrientations(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareIfOrientation> ifOrientations) {
            $.ifOrientations = ifOrientations;
            return this;
        }

        public Builder ifOrientations(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareIfOrientation... ifOrientations) {
            return ifOrientations(List.of(ifOrientations));
        }

        public Builder imQueries(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareImQuery> imQueries) {
            $.imQueries = imQueries;
            return this;
        }

        public Builder imQueries(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareImQuery... imQueries) {
            return imQueries(List.of(imQueries));
        }

        public Builder maxColors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMaxColor> maxColors) {
            $.maxColors = maxColors;
            return this;
        }

        public Builder maxColors(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMaxColor... maxColors) {
            return maxColors(List.of(maxColors));
        }

        public Builder mirrors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMirror> mirrors) {
            $.mirrors = mirrors;
            return this;
        }

        public Builder mirrors(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMirror... mirrors) {
            return mirrors(List.of(mirrors));
        }

        public Builder monoHues(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMonoHue> monoHues) {
            $.monoHues = monoHues;
            return this;
        }

        public Builder monoHues(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareMonoHue... monoHues) {
            return monoHues(List.of(monoHues));
        }

        public Builder opacities(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareOpacity> opacities) {
            $.opacities = opacities;
            return this;
        }

        public Builder opacities(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareOpacity... opacities) {
            return opacities(List.of(opacities));
        }

        public Builder regionOfInterestCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRegionOfInterestCrop> regionOfInterestCrops) {
            $.regionOfInterestCrops = regionOfInterestCrops;
            return this;
        }

        public Builder regionOfInterestCrops(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRegionOfInterestCrop... regionOfInterestCrops) {
            return regionOfInterestCrops(List.of(regionOfInterestCrops));
        }

        public Builder relativeCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRelativeCrop> relativeCrops) {
            $.relativeCrops = relativeCrops;
            return this;
        }

        public Builder relativeCrops(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRelativeCrop... relativeCrops) {
            return relativeCrops(List.of(relativeCrops));
        }

        public Builder removeColors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRemoveColor> removeColors) {
            $.removeColors = removeColors;
            return this;
        }

        public Builder removeColors(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRemoveColor... removeColors) {
            return removeColors(List.of(removeColors));
        }

        public Builder resizes(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareResize> resizes) {
            $.resizes = resizes;
            return this;
        }

        public Builder resizes(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareResize... resizes) {
            return resizes(List.of(resizes));
        }

        public Builder rotates(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRotate> rotates) {
            $.rotates = rotates;
            return this;
        }

        public Builder rotates(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareRotate... rotates) {
            return rotates(List.of(rotates));
        }

        public Builder scales(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareScale> scales) {
            $.scales = scales;
            return this;
        }

        public Builder scales(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareScale... scales) {
            return scales(List.of(scales));
        }

        public Builder shears(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareShears> shears) {
            $.shears = shears;
            return this;
        }

        public Builder shears(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareShears... shears) {
            return shears(List.of(shears));
        }

        public Builder trims(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareTrim> trims) {
            $.trims = trims;
            return this;
        }

        public Builder trims(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareTrim... trims) {
            return trims(List.of(trims));
        }

        public Builder unsharpMasks(@Nullable List<GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareUnsharpMask> unsharpMasks) {
            $.unsharpMasks = unsharpMasks;
            return this;
        }

        public Builder unsharpMasks(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquareUnsharpMask... unsharpMasks) {
            return unsharpMasks(List.of(unsharpMasks));
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationSquare build() {
            return $;
        }
    }

}
