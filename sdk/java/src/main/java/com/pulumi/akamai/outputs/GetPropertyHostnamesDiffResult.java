// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetPropertyHostnamesDiffHostname;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPropertyHostnamesDiffResult {
    private String accountId;
    private String contractId;
    private String groupId;
    private List<GetPropertyHostnamesDiffHostname> hostnames;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String propertyId;

    private GetPropertyHostnamesDiffResult() {}
    public String accountId() {
        return this.accountId;
    }
    public String contractId() {
        return this.contractId;
    }
    public String groupId() {
        return this.groupId;
    }
    public List<GetPropertyHostnamesDiffHostname> hostnames() {
        return this.hostnames;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String propertyId() {
        return this.propertyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyHostnamesDiffResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String contractId;
        private String groupId;
        private List<GetPropertyHostnamesDiffHostname> hostnames;
        private String id;
        private String propertyId;
        public Builder() {}
        public Builder(GetPropertyHostnamesDiffResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.contractId = defaults.contractId;
    	      this.groupId = defaults.groupId;
    	      this.hostnames = defaults.hostnames;
    	      this.id = defaults.id;
    	      this.propertyId = defaults.propertyId;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder contractId(String contractId) {
            if (contractId == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffResult", "contractId");
            }
            this.contractId = contractId;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffResult", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder hostnames(List<GetPropertyHostnamesDiffHostname> hostnames) {
            if (hostnames == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffResult", "hostnames");
            }
            this.hostnames = hostnames;
            return this;
        }
        public Builder hostnames(GetPropertyHostnamesDiffHostname... hostnames) {
            return hostnames(List.of(hostnames));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder propertyId(String propertyId) {
            if (propertyId == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffResult", "propertyId");
            }
            this.propertyId = propertyId;
            return this;
        }
        public GetPropertyHostnamesDiffResult build() {
            final var _resultValue = new GetPropertyHostnamesDiffResult();
            _resultValue.accountId = accountId;
            _resultValue.contractId = contractId;
            _resultValue.groupId = groupId;
            _resultValue.hostnames = hostnames;
            _resultValue.id = id;
            _resultValue.propertyId = propertyId;
            return _resultValue;
        }
    }
}
