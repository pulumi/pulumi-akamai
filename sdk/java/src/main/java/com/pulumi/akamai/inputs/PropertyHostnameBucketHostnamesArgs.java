// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PropertyHostnameBucketHostnamesArgs extends com.pulumi.resources.ResourceArgs {

    public static final PropertyHostnameBucketHostnamesArgs Empty = new PropertyHostnameBucketHostnamesArgs();

    /**
     * Indicates the type of the certificate used in the property hostname. Either `CPS_MANAGED` for certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for Domain Validation (DV) certificates deployed automatically.
     * 
     */
    @Import(name="certProvisioningType", required=true)
    private Output<String> certProvisioningType;

    /**
     * @return Indicates the type of the certificate used in the property hostname. Either `CPS_MANAGED` for certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for Domain Validation (DV) certificates deployed automatically.
     * 
     */
    public Output<String> certProvisioningType() {
        return this.certProvisioningType;
    }

    /**
     * The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    @Import(name="cnameTo")
    private @Nullable Output<String> cnameTo;

    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    public Optional<Output<String>> cnameTo() {
        return Optional.ofNullable(this.cnameTo);
    }

    /**
     * Identifies the edge hostname you mapped your traffic to on the production network.
     * 
     */
    @Import(name="edgeHostnameId", required=true)
    private Output<String> edgeHostnameId;

    /**
     * @return Identifies the edge hostname you mapped your traffic to on the production network.
     * 
     */
    public Output<String> edgeHostnameId() {
        return this.edgeHostnameId;
    }

    private PropertyHostnameBucketHostnamesArgs() {}

    private PropertyHostnameBucketHostnamesArgs(PropertyHostnameBucketHostnamesArgs $) {
        this.certProvisioningType = $.certProvisioningType;
        this.cnameTo = $.cnameTo;
        this.edgeHostnameId = $.edgeHostnameId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PropertyHostnameBucketHostnamesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PropertyHostnameBucketHostnamesArgs $;

        public Builder() {
            $ = new PropertyHostnameBucketHostnamesArgs();
        }

        public Builder(PropertyHostnameBucketHostnamesArgs defaults) {
            $ = new PropertyHostnameBucketHostnamesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certProvisioningType Indicates the type of the certificate used in the property hostname. Either `CPS_MANAGED` for certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for Domain Validation (DV) certificates deployed automatically.
         * 
         * @return builder
         * 
         */
        public Builder certProvisioningType(Output<String> certProvisioningType) {
            $.certProvisioningType = certProvisioningType;
            return this;
        }

        /**
         * @param certProvisioningType Indicates the type of the certificate used in the property hostname. Either `CPS_MANAGED` for certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for Domain Validation (DV) certificates deployed automatically.
         * 
         * @return builder
         * 
         */
        public Builder certProvisioningType(String certProvisioningType) {
            return certProvisioningType(Output.of(certProvisioningType));
        }

        /**
         * @param cnameTo The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
         * 
         * @return builder
         * 
         */
        public Builder cnameTo(@Nullable Output<String> cnameTo) {
            $.cnameTo = cnameTo;
            return this;
        }

        /**
         * @param cnameTo The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
         * 
         * @return builder
         * 
         */
        public Builder cnameTo(String cnameTo) {
            return cnameTo(Output.of(cnameTo));
        }

        /**
         * @param edgeHostnameId Identifies the edge hostname you mapped your traffic to on the production network.
         * 
         * @return builder
         * 
         */
        public Builder edgeHostnameId(Output<String> edgeHostnameId) {
            $.edgeHostnameId = edgeHostnameId;
            return this;
        }

        /**
         * @param edgeHostnameId Identifies the edge hostname you mapped your traffic to on the production network.
         * 
         * @return builder
         * 
         */
        public Builder edgeHostnameId(String edgeHostnameId) {
            return edgeHostnameId(Output.of(edgeHostnameId));
        }

        public PropertyHostnameBucketHostnamesArgs build() {
            if ($.certProvisioningType == null) {
                throw new MissingRequiredPropertyException("PropertyHostnameBucketHostnamesArgs", "certProvisioningType");
            }
            if ($.edgeHostnameId == null) {
                throw new MissingRequiredPropertyException("PropertyHostnameBucketHostnamesArgs", "edgeHostnameId");
            }
            return $;
        }
    }

}
