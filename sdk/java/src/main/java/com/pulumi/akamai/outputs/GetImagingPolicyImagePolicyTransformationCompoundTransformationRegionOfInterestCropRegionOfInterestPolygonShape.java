// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShape {
    private List<GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint> points;

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShape() {}
    public List<GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint> points() {
        return this.points;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShape defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint> points;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShape defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.points = defaults.points;
        }

        @CustomType.Setter
        public Builder points(List<GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint> points) {
            this.points = Objects.requireNonNull(points);
            return this;
        }
        public Builder points(GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint... points) {
            return points(List.of(points));
        }
        public GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShape build() {
            final var o = new GetImagingPolicyImagePolicyTransformationCompoundTransformationRegionOfInterestCropRegionOfInterestPolygonShape();
            o.points = points;
            return o;
        }
    }
}
