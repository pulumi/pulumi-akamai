// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIamUsersAffectedByMovingGroupArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIamUsersAffectedByMovingGroupArgs Empty = new GetIamUsersAffectedByMovingGroupArgs();

    @Import(name="destinationGroupId", required=true)
    private Output<Integer> destinationGroupId;

    public Output<Integer> destinationGroupId() {
        return this.destinationGroupId;
    }

    @Import(name="sourceGroupId", required=true)
    private Output<Integer> sourceGroupId;

    public Output<Integer> sourceGroupId() {
        return this.sourceGroupId;
    }

    @Import(name="userType")
    private @Nullable Output<String> userType;

    public Optional<Output<String>> userType() {
        return Optional.ofNullable(this.userType);
    }

    private GetIamUsersAffectedByMovingGroupArgs() {}

    private GetIamUsersAffectedByMovingGroupArgs(GetIamUsersAffectedByMovingGroupArgs $) {
        this.destinationGroupId = $.destinationGroupId;
        this.sourceGroupId = $.sourceGroupId;
        this.userType = $.userType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIamUsersAffectedByMovingGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIamUsersAffectedByMovingGroupArgs $;

        public Builder() {
            $ = new GetIamUsersAffectedByMovingGroupArgs();
        }

        public Builder(GetIamUsersAffectedByMovingGroupArgs defaults) {
            $ = new GetIamUsersAffectedByMovingGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder destinationGroupId(Output<Integer> destinationGroupId) {
            $.destinationGroupId = destinationGroupId;
            return this;
        }

        public Builder destinationGroupId(Integer destinationGroupId) {
            return destinationGroupId(Output.of(destinationGroupId));
        }

        public Builder sourceGroupId(Output<Integer> sourceGroupId) {
            $.sourceGroupId = sourceGroupId;
            return this;
        }

        public Builder sourceGroupId(Integer sourceGroupId) {
            return sourceGroupId(Output.of(sourceGroupId));
        }

        public Builder userType(@Nullable Output<String> userType) {
            $.userType = userType;
            return this;
        }

        public Builder userType(String userType) {
            return userType(Output.of(userType));
        }

        public GetIamUsersAffectedByMovingGroupArgs build() {
            if ($.destinationGroupId == null) {
                throw new MissingRequiredPropertyException("GetIamUsersAffectedByMovingGroupArgs", "destinationGroupId");
            }
            if ($.sourceGroupId == null) {
                throw new MissingRequiredPropertyException("GetIamUsersAffectedByMovingGroupArgs", "sourceGroupId");
            }
            return $;
        }
    }

}
