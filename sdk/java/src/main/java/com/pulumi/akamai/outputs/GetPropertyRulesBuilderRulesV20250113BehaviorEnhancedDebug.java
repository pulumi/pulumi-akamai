// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20250113BehaviorEnhancedDebug {
    /**
     * @return Specifies the debug key to use for all requests processed by this property. The debug key value needs to be a 64-byte hex string. You can generate the key in one property and then reuse it in other configurations.
     * 
     */
    private @Nullable String debugKey;
    /**
     * @return Whether you want to disable the standard debugging that uses the `Pragma` request header.
     * 
     */
    private @Nullable Boolean disablePragma;
    /**
     * @return Enables enhanced debugging using the `Akamai-Debug` request header.
     * 
     */
    private @Nullable Boolean enableDebug;
    /**
     * @return Whether you want to return the Global Request Number (GRN) in the `Akamai-GRN` response header for all requests, even if the `Akamai-Debug` request header is not passed. The `Akamai-GRN` header is useful for log extraction.
     * 
     */
    private @Nullable Boolean generateGrn;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20250113BehaviorEnhancedDebug() {}
    /**
     * @return Specifies the debug key to use for all requests processed by this property. The debug key value needs to be a 64-byte hex string. You can generate the key in one property and then reuse it in other configurations.
     * 
     */
    public Optional<String> debugKey() {
        return Optional.ofNullable(this.debugKey);
    }
    /**
     * @return Whether you want to disable the standard debugging that uses the `Pragma` request header.
     * 
     */
    public Optional<Boolean> disablePragma() {
        return Optional.ofNullable(this.disablePragma);
    }
    /**
     * @return Enables enhanced debugging using the `Akamai-Debug` request header.
     * 
     */
    public Optional<Boolean> enableDebug() {
        return Optional.ofNullable(this.enableDebug);
    }
    /**
     * @return Whether you want to return the Global Request Number (GRN) in the `Akamai-GRN` response header for all requests, even if the `Akamai-Debug` request header is not passed. The `Akamai-GRN` header is useful for log extraction.
     * 
     */
    public Optional<Boolean> generateGrn() {
        return Optional.ofNullable(this.generateGrn);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20250113BehaviorEnhancedDebug defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String debugKey;
        private @Nullable Boolean disablePragma;
        private @Nullable Boolean enableDebug;
        private @Nullable Boolean generateGrn;
        private @Nullable Boolean locked;
        private @Nullable String templateUuid;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20250113BehaviorEnhancedDebug defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.debugKey = defaults.debugKey;
    	      this.disablePragma = defaults.disablePragma;
    	      this.enableDebug = defaults.enableDebug;
    	      this.generateGrn = defaults.generateGrn;
    	      this.locked = defaults.locked;
    	      this.templateUuid = defaults.templateUuid;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder debugKey(@Nullable String debugKey) {

            this.debugKey = debugKey;
            return this;
        }
        @CustomType.Setter
        public Builder disablePragma(@Nullable Boolean disablePragma) {

            this.disablePragma = disablePragma;
            return this;
        }
        @CustomType.Setter
        public Builder enableDebug(@Nullable Boolean enableDebug) {

            this.enableDebug = enableDebug;
            return this;
        }
        @CustomType.Setter
        public Builder generateGrn(@Nullable Boolean generateGrn) {

            this.generateGrn = generateGrn;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20250113BehaviorEnhancedDebug build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20250113BehaviorEnhancedDebug();
            _resultValue.debugKey = debugKey;
            _resultValue.disablePragma = disablePragma;
            _resultValue.enableDebug = enableDebug;
            _resultValue.generateGrn = generateGrn;
            _resultValue.locked = locked;
            _resultValue.templateUuid = templateUuid;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
