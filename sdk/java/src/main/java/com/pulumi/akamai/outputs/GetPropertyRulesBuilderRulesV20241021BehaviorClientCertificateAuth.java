// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20241021BehaviorClientCertificateAuth {
    /**
     * @return Specify client certificate attributes to include in the `Client-To-Edge` authentication header that&#39;s sent to your origin server.
     * 
     */
    private @Nullable List<String> clientCertificateAttributes;
    /**
     * @return Constructs the `Client-To-Edge` authentication header using information from the client to edge mTLS handshake and forwards it to your origin. You can configure your origin to acknowledge the header to enable transitive trust. Some form of the client x.509 certificate needs to be included in the header. You can include the full certificate or specific attributes.
     * 
     */
    private @Nullable Boolean enable;
    /**
     * @return Whether to include the current validation status of the client certificate in the `Client-To-Edge` authentication header. This verifies the validation status of the certificate, regardless of the certificate attributes you&#39;re including in the header.
     * 
     */
    private @Nullable Boolean enableClientCertificateValidationStatus;
    /**
     * @return Whether to include the complete client certificate in the header, in its binary (DER) format. DER-formatted certificates leave out the `BEGIN CERTIFICATE/END CERTIFICATE` statements and most often use the `.der` extension. Alternatively, you can specify individual `clientCertificateAttributes` you want included in the request.
     * 
     */
    private @Nullable Boolean enableCompleteClientCertificate;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20241021BehaviorClientCertificateAuth() {}
    /**
     * @return Specify client certificate attributes to include in the `Client-To-Edge` authentication header that&#39;s sent to your origin server.
     * 
     */
    public List<String> clientCertificateAttributes() {
        return this.clientCertificateAttributes == null ? List.of() : this.clientCertificateAttributes;
    }
    /**
     * @return Constructs the `Client-To-Edge` authentication header using information from the client to edge mTLS handshake and forwards it to your origin. You can configure your origin to acknowledge the header to enable transitive trust. Some form of the client x.509 certificate needs to be included in the header. You can include the full certificate or specific attributes.
     * 
     */
    public Optional<Boolean> enable() {
        return Optional.ofNullable(this.enable);
    }
    /**
     * @return Whether to include the current validation status of the client certificate in the `Client-To-Edge` authentication header. This verifies the validation status of the certificate, regardless of the certificate attributes you&#39;re including in the header.
     * 
     */
    public Optional<Boolean> enableClientCertificateValidationStatus() {
        return Optional.ofNullable(this.enableClientCertificateValidationStatus);
    }
    /**
     * @return Whether to include the complete client certificate in the header, in its binary (DER) format. DER-formatted certificates leave out the `BEGIN CERTIFICATE/END CERTIFICATE` statements and most often use the `.der` extension. Alternatively, you can specify individual `clientCertificateAttributes` you want included in the request.
     * 
     */
    public Optional<Boolean> enableCompleteClientCertificate() {
        return Optional.ofNullable(this.enableCompleteClientCertificate);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20241021BehaviorClientCertificateAuth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> clientCertificateAttributes;
        private @Nullable Boolean enable;
        private @Nullable Boolean enableClientCertificateValidationStatus;
        private @Nullable Boolean enableCompleteClientCertificate;
        private @Nullable Boolean locked;
        private @Nullable String templateUuid;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20241021BehaviorClientCertificateAuth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificateAttributes = defaults.clientCertificateAttributes;
    	      this.enable = defaults.enable;
    	      this.enableClientCertificateValidationStatus = defaults.enableClientCertificateValidationStatus;
    	      this.enableCompleteClientCertificate = defaults.enableCompleteClientCertificate;
    	      this.locked = defaults.locked;
    	      this.templateUuid = defaults.templateUuid;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder clientCertificateAttributes(@Nullable List<String> clientCertificateAttributes) {

            this.clientCertificateAttributes = clientCertificateAttributes;
            return this;
        }
        public Builder clientCertificateAttributes(String... clientCertificateAttributes) {
            return clientCertificateAttributes(List.of(clientCertificateAttributes));
        }
        @CustomType.Setter
        public Builder enable(@Nullable Boolean enable) {

            this.enable = enable;
            return this;
        }
        @CustomType.Setter
        public Builder enableClientCertificateValidationStatus(@Nullable Boolean enableClientCertificateValidationStatus) {

            this.enableClientCertificateValidationStatus = enableClientCertificateValidationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder enableCompleteClientCertificate(@Nullable Boolean enableCompleteClientCertificate) {

            this.enableCompleteClientCertificate = enableCompleteClientCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20241021BehaviorClientCertificateAuth build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20241021BehaviorClientCertificateAuth();
            _resultValue.clientCertificateAttributes = clientCertificateAttributes;
            _resultValue.enable = enable;
            _resultValue.enableClientCertificateValidationStatus = enableClientCertificateValidationStatus;
            _resultValue.enableCompleteClientCertificate = enableCompleteClientCertificate;
            _resultValue.locked = locked;
            _resultValue.templateUuid = templateUuid;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
