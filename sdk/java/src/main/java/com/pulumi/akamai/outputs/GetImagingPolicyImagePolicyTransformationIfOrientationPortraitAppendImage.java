// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageBoxImage;
import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageCircleImage;
import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageTextImage;
import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageUrlImage;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImage {
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageBoxImage> boxImages;
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageCircleImage> circleImages;
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageTextImage> textImages;
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageUrlImage> urlImages;

    private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImage() {}
    public List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageBoxImage> boxImages() {
        return this.boxImages == null ? List.of() : this.boxImages;
    }
    public List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageCircleImage> circleImages() {
        return this.circleImages == null ? List.of() : this.circleImages;
    }
    public List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageTextImage> textImages() {
        return this.textImages == null ? List.of() : this.textImages;
    }
    public List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageUrlImage> urlImages() {
        return this.urlImages == null ? List.of() : this.urlImages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageBoxImage> boxImages;
        private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageCircleImage> circleImages;
        private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageTextImage> textImages;
        private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageUrlImage> urlImages;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.boxImages = defaults.boxImages;
    	      this.circleImages = defaults.circleImages;
    	      this.textImages = defaults.textImages;
    	      this.urlImages = defaults.urlImages;
        }

        @CustomType.Setter
        public Builder boxImages(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageBoxImage> boxImages) {
            this.boxImages = boxImages;
            return this;
        }
        public Builder boxImages(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageBoxImage... boxImages) {
            return boxImages(List.of(boxImages));
        }
        @CustomType.Setter
        public Builder circleImages(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageCircleImage> circleImages) {
            this.circleImages = circleImages;
            return this;
        }
        public Builder circleImages(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageCircleImage... circleImages) {
            return circleImages(List.of(circleImages));
        }
        @CustomType.Setter
        public Builder textImages(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageTextImage> textImages) {
            this.textImages = textImages;
            return this;
        }
        public Builder textImages(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageTextImage... textImages) {
            return textImages(List.of(textImages));
        }
        @CustomType.Setter
        public Builder urlImages(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageUrlImage> urlImages) {
            this.urlImages = urlImages;
            return this;
        }
        public Builder urlImages(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImageUrlImage... urlImages) {
            return urlImages(List.of(urlImages));
        }
        public GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImage build() {
            final var o = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitAppendImage();
            o.boxImages = boxImages;
            o.circleImages = circleImages;
            o.textImages = textImages;
            o.urlImages = urlImages;
            return o;
        }
    }
}
