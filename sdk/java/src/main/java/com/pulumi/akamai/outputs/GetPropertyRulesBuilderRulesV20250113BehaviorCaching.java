// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20250113BehaviorCaching {
    /**
     * @return Specify the caching option.
     * 
     */
    private @Nullable String behavior;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String cacheControlDirectives;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String cacheabilitySettings;
    /**
     * @return Set the `MAX_AGE` header for the cached content.
     * 
     */
    private @Nullable String defaultTtl;
    /**
     * @return This enables honoring particular `Cache-Control` header directives from the origin. Supports all official `RFC 7234` directives except for `no-transform`.
     * 
     */
    private @Nullable Boolean enhancedRfcSupport;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String expirationSettings;
    /**
     * @return This instructs edge servers to cache the object for a length of time set by the `max-age` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
     * 
     */
    private @Nullable Boolean honorMaxAge;
    /**
     * @return This instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
     * 
     */
    private @Nullable Boolean honorMustRevalidate;
    /**
     * @return With the `no-cache` directive present in the response, this instructs edge servers to validate or refetch the response for each request. Effectively, set the time to live `ttl` to zero seconds.
     * 
     */
    private @Nullable Boolean honorNoCache;
    /**
     * @return Instructs edge servers not to cache the response when the origin response includes the `no-store` directive.
     * 
     */
    private @Nullable Boolean honorNoStore;
    /**
     * @return Instructs edge servers not to cache the response when the origin response includes the `private` directive.
     * 
     */
    private @Nullable Boolean honorPrivate;
    /**
     * @return With the `proxy-revalidate` directive present in the response, this instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
     * 
     */
    private @Nullable Boolean honorProxyRevalidate;
    /**
     * @return Instructs edge servers to cache the object for a length of time set by the `s-maxage` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
     * 
     */
    private @Nullable Boolean honorSMaxage;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Determines what to do once the cached content has expired, by which time the Akamai platform should have re-fetched and validated content from the origin. If enabled, only allows the re-fetched content to be served. If disabled, may serve stale content if the origin is unavailable.
     * 
     */
    private @Nullable Boolean mustRevalidate;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String revalidationSettings;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return The maximum time content may remain cached. Setting the value to `0` is the same as setting a `no-cache` header, which forces content to revalidate.
     * 
     */
    private @Nullable String ttl;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20250113BehaviorCaching() {}
    /**
     * @return Specify the caching option.
     * 
     */
    public Optional<String> behavior() {
        return Optional.ofNullable(this.behavior);
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> cacheControlDirectives() {
        return Optional.ofNullable(this.cacheControlDirectives);
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> cacheabilitySettings() {
        return Optional.ofNullable(this.cacheabilitySettings);
    }
    /**
     * @return Set the `MAX_AGE` header for the cached content.
     * 
     */
    public Optional<String> defaultTtl() {
        return Optional.ofNullable(this.defaultTtl);
    }
    /**
     * @return This enables honoring particular `Cache-Control` header directives from the origin. Supports all official `RFC 7234` directives except for `no-transform`.
     * 
     */
    public Optional<Boolean> enhancedRfcSupport() {
        return Optional.ofNullable(this.enhancedRfcSupport);
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> expirationSettings() {
        return Optional.ofNullable(this.expirationSettings);
    }
    /**
     * @return This instructs edge servers to cache the object for a length of time set by the `max-age` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
     * 
     */
    public Optional<Boolean> honorMaxAge() {
        return Optional.ofNullable(this.honorMaxAge);
    }
    /**
     * @return This instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
     * 
     */
    public Optional<Boolean> honorMustRevalidate() {
        return Optional.ofNullable(this.honorMustRevalidate);
    }
    /**
     * @return With the `no-cache` directive present in the response, this instructs edge servers to validate or refetch the response for each request. Effectively, set the time to live `ttl` to zero seconds.
     * 
     */
    public Optional<Boolean> honorNoCache() {
        return Optional.ofNullable(this.honorNoCache);
    }
    /**
     * @return Instructs edge servers not to cache the response when the origin response includes the `no-store` directive.
     * 
     */
    public Optional<Boolean> honorNoStore() {
        return Optional.ofNullable(this.honorNoStore);
    }
    /**
     * @return Instructs edge servers not to cache the response when the origin response includes the `private` directive.
     * 
     */
    public Optional<Boolean> honorPrivate() {
        return Optional.ofNullable(this.honorPrivate);
    }
    /**
     * @return With the `proxy-revalidate` directive present in the response, this instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
     * 
     */
    public Optional<Boolean> honorProxyRevalidate() {
        return Optional.ofNullable(this.honorProxyRevalidate);
    }
    /**
     * @return Instructs edge servers to cache the object for a length of time set by the `s-maxage` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
     * 
     */
    public Optional<Boolean> honorSMaxage() {
        return Optional.ofNullable(this.honorSMaxage);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Determines what to do once the cached content has expired, by which time the Akamai platform should have re-fetched and validated content from the origin. If enabled, only allows the re-fetched content to be served. If disabled, may serve stale content if the origin is unavailable.
     * 
     */
    public Optional<Boolean> mustRevalidate() {
        return Optional.ofNullable(this.mustRevalidate);
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> revalidationSettings() {
        return Optional.ofNullable(this.revalidationSettings);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return The maximum time content may remain cached. Setting the value to `0` is the same as setting a `no-cache` header, which forces content to revalidate.
     * 
     */
    public Optional<String> ttl() {
        return Optional.ofNullable(this.ttl);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20250113BehaviorCaching defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String behavior;
        private @Nullable String cacheControlDirectives;
        private @Nullable String cacheabilitySettings;
        private @Nullable String defaultTtl;
        private @Nullable Boolean enhancedRfcSupport;
        private @Nullable String expirationSettings;
        private @Nullable Boolean honorMaxAge;
        private @Nullable Boolean honorMustRevalidate;
        private @Nullable Boolean honorNoCache;
        private @Nullable Boolean honorNoStore;
        private @Nullable Boolean honorPrivate;
        private @Nullable Boolean honorProxyRevalidate;
        private @Nullable Boolean honorSMaxage;
        private @Nullable Boolean locked;
        private @Nullable Boolean mustRevalidate;
        private @Nullable String revalidationSettings;
        private @Nullable String templateUuid;
        private @Nullable String ttl;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20250113BehaviorCaching defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.behavior = defaults.behavior;
    	      this.cacheControlDirectives = defaults.cacheControlDirectives;
    	      this.cacheabilitySettings = defaults.cacheabilitySettings;
    	      this.defaultTtl = defaults.defaultTtl;
    	      this.enhancedRfcSupport = defaults.enhancedRfcSupport;
    	      this.expirationSettings = defaults.expirationSettings;
    	      this.honorMaxAge = defaults.honorMaxAge;
    	      this.honorMustRevalidate = defaults.honorMustRevalidate;
    	      this.honorNoCache = defaults.honorNoCache;
    	      this.honorNoStore = defaults.honorNoStore;
    	      this.honorPrivate = defaults.honorPrivate;
    	      this.honorProxyRevalidate = defaults.honorProxyRevalidate;
    	      this.honorSMaxage = defaults.honorSMaxage;
    	      this.locked = defaults.locked;
    	      this.mustRevalidate = defaults.mustRevalidate;
    	      this.revalidationSettings = defaults.revalidationSettings;
    	      this.templateUuid = defaults.templateUuid;
    	      this.ttl = defaults.ttl;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder behavior(@Nullable String behavior) {

            this.behavior = behavior;
            return this;
        }
        @CustomType.Setter
        public Builder cacheControlDirectives(@Nullable String cacheControlDirectives) {

            this.cacheControlDirectives = cacheControlDirectives;
            return this;
        }
        @CustomType.Setter
        public Builder cacheabilitySettings(@Nullable String cacheabilitySettings) {

            this.cacheabilitySettings = cacheabilitySettings;
            return this;
        }
        @CustomType.Setter
        public Builder defaultTtl(@Nullable String defaultTtl) {

            this.defaultTtl = defaultTtl;
            return this;
        }
        @CustomType.Setter
        public Builder enhancedRfcSupport(@Nullable Boolean enhancedRfcSupport) {

            this.enhancedRfcSupport = enhancedRfcSupport;
            return this;
        }
        @CustomType.Setter
        public Builder expirationSettings(@Nullable String expirationSettings) {

            this.expirationSettings = expirationSettings;
            return this;
        }
        @CustomType.Setter
        public Builder honorMaxAge(@Nullable Boolean honorMaxAge) {

            this.honorMaxAge = honorMaxAge;
            return this;
        }
        @CustomType.Setter
        public Builder honorMustRevalidate(@Nullable Boolean honorMustRevalidate) {

            this.honorMustRevalidate = honorMustRevalidate;
            return this;
        }
        @CustomType.Setter
        public Builder honorNoCache(@Nullable Boolean honorNoCache) {

            this.honorNoCache = honorNoCache;
            return this;
        }
        @CustomType.Setter
        public Builder honorNoStore(@Nullable Boolean honorNoStore) {

            this.honorNoStore = honorNoStore;
            return this;
        }
        @CustomType.Setter
        public Builder honorPrivate(@Nullable Boolean honorPrivate) {

            this.honorPrivate = honorPrivate;
            return this;
        }
        @CustomType.Setter
        public Builder honorProxyRevalidate(@Nullable Boolean honorProxyRevalidate) {

            this.honorProxyRevalidate = honorProxyRevalidate;
            return this;
        }
        @CustomType.Setter
        public Builder honorSMaxage(@Nullable Boolean honorSMaxage) {

            this.honorSMaxage = honorSMaxage;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder mustRevalidate(@Nullable Boolean mustRevalidate) {

            this.mustRevalidate = mustRevalidate;
            return this;
        }
        @CustomType.Setter
        public Builder revalidationSettings(@Nullable String revalidationSettings) {

            this.revalidationSettings = revalidationSettings;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(@Nullable String ttl) {

            this.ttl = ttl;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20250113BehaviorCaching build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20250113BehaviorCaching();
            _resultValue.behavior = behavior;
            _resultValue.cacheControlDirectives = cacheControlDirectives;
            _resultValue.cacheabilitySettings = cacheabilitySettings;
            _resultValue.defaultTtl = defaultTtl;
            _resultValue.enhancedRfcSupport = enhancedRfcSupport;
            _resultValue.expirationSettings = expirationSettings;
            _resultValue.honorMaxAge = honorMaxAge;
            _resultValue.honorMustRevalidate = honorMustRevalidate;
            _resultValue.honorNoCache = honorNoCache;
            _resultValue.honorNoStore = honorNoStore;
            _resultValue.honorPrivate = honorPrivate;
            _resultValue.honorProxyRevalidate = honorProxyRevalidate;
            _resultValue.honorSMaxage = honorSMaxage;
            _resultValue.locked = locked;
            _resultValue.mustRevalidate = mustRevalidate;
            _resultValue.revalidationSettings = revalidationSettings;
            _resultValue.templateUuid = templateUuid;
            _resultValue.ttl = ttl;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
