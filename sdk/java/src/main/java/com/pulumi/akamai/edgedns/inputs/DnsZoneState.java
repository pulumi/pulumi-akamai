// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.edgedns.inputs;

import com.pulumi.akamai.edgedns.inputs.DnsZoneTsigKeyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DnsZoneState extends com.pulumi.resources.ResourceArgs {

    public static final DnsZoneState Empty = new DnsZoneState();

    @Import(name="activationState")
    private @Nullable Output<String> activationState;

    public Optional<Output<String>> activationState() {
        return Optional.ofNullable(this.activationState);
    }

    @Import(name="aliasCount")
    private @Nullable Output<Integer> aliasCount;

    public Optional<Output<Integer>> aliasCount() {
        return Optional.ofNullable(this.aliasCount);
    }

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="contract")
    private @Nullable Output<String> contract;

    public Optional<Output<String>> contract() {
        return Optional.ofNullable(this.contract);
    }

    @Import(name="endCustomerId")
    private @Nullable Output<String> endCustomerId;

    public Optional<Output<String>> endCustomerId() {
        return Optional.ofNullable(this.endCustomerId);
    }

    @Import(name="group")
    private @Nullable Output<String> group;

    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    @Import(name="masters")
    private @Nullable Output<List<String>> masters;

    public Optional<Output<List<String>>> masters() {
        return Optional.ofNullable(this.masters);
    }

    @Import(name="signAndServe")
    private @Nullable Output<Boolean> signAndServe;

    public Optional<Output<Boolean>> signAndServe() {
        return Optional.ofNullable(this.signAndServe);
    }

    @Import(name="signAndServeAlgorithm")
    private @Nullable Output<String> signAndServeAlgorithm;

    public Optional<Output<String>> signAndServeAlgorithm() {
        return Optional.ofNullable(this.signAndServeAlgorithm);
    }

    @Import(name="target")
    private @Nullable Output<String> target;

    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    @Import(name="tsigKey")
    private @Nullable Output<DnsZoneTsigKeyArgs> tsigKey;

    public Optional<Output<DnsZoneTsigKeyArgs>> tsigKey() {
        return Optional.ofNullable(this.tsigKey);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    @Import(name="zone")
    private @Nullable Output<String> zone;

    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private DnsZoneState() {}

    private DnsZoneState(DnsZoneState $) {
        this.activationState = $.activationState;
        this.aliasCount = $.aliasCount;
        this.comment = $.comment;
        this.contract = $.contract;
        this.endCustomerId = $.endCustomerId;
        this.group = $.group;
        this.masters = $.masters;
        this.signAndServe = $.signAndServe;
        this.signAndServeAlgorithm = $.signAndServeAlgorithm;
        this.target = $.target;
        this.tsigKey = $.tsigKey;
        this.type = $.type;
        this.versionId = $.versionId;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsZoneState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsZoneState $;

        public Builder() {
            $ = new DnsZoneState();
        }

        public Builder(DnsZoneState defaults) {
            $ = new DnsZoneState(Objects.requireNonNull(defaults));
        }

        public Builder activationState(@Nullable Output<String> activationState) {
            $.activationState = activationState;
            return this;
        }

        public Builder activationState(String activationState) {
            return activationState(Output.of(activationState));
        }

        public Builder aliasCount(@Nullable Output<Integer> aliasCount) {
            $.aliasCount = aliasCount;
            return this;
        }

        public Builder aliasCount(Integer aliasCount) {
            return aliasCount(Output.of(aliasCount));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder contract(@Nullable Output<String> contract) {
            $.contract = contract;
            return this;
        }

        public Builder contract(String contract) {
            return contract(Output.of(contract));
        }

        public Builder endCustomerId(@Nullable Output<String> endCustomerId) {
            $.endCustomerId = endCustomerId;
            return this;
        }

        public Builder endCustomerId(String endCustomerId) {
            return endCustomerId(Output.of(endCustomerId));
        }

        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        public Builder group(String group) {
            return group(Output.of(group));
        }

        public Builder masters(@Nullable Output<List<String>> masters) {
            $.masters = masters;
            return this;
        }

        public Builder masters(List<String> masters) {
            return masters(Output.of(masters));
        }

        public Builder masters(String... masters) {
            return masters(List.of(masters));
        }

        public Builder signAndServe(@Nullable Output<Boolean> signAndServe) {
            $.signAndServe = signAndServe;
            return this;
        }

        public Builder signAndServe(Boolean signAndServe) {
            return signAndServe(Output.of(signAndServe));
        }

        public Builder signAndServeAlgorithm(@Nullable Output<String> signAndServeAlgorithm) {
            $.signAndServeAlgorithm = signAndServeAlgorithm;
            return this;
        }

        public Builder signAndServeAlgorithm(String signAndServeAlgorithm) {
            return signAndServeAlgorithm(Output.of(signAndServeAlgorithm));
        }

        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        public Builder target(String target) {
            return target(Output.of(target));
        }

        public Builder tsigKey(@Nullable Output<DnsZoneTsigKeyArgs> tsigKey) {
            $.tsigKey = tsigKey;
            return this;
        }

        public Builder tsigKey(DnsZoneTsigKeyArgs tsigKey) {
            return tsigKey(Output.of(tsigKey));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public DnsZoneState build() {
            return $;
        }
    }

}
