// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears();

    @Import(name="xShear")
    private @Nullable String xShear;

    public Optional<String> xShear() {
        return Optional.ofNullable(this.xShear);
    }

    @Import(name="xShearVar")
    private @Nullable String xShearVar;

    public Optional<String> xShearVar() {
        return Optional.ofNullable(this.xShearVar);
    }

    @Import(name="yShear")
    private @Nullable String yShear;

    public Optional<String> yShear() {
        return Optional.ofNullable(this.yShear);
    }

    @Import(name="yShearVar")
    private @Nullable String yShearVar;

    public Optional<String> yShearVar() {
        return Optional.ofNullable(this.yShearVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears $) {
        this.xShear = $.xShear;
        this.xShearVar = $.xShearVar;
        this.yShear = $.yShear;
        this.yShearVar = $.yShearVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears(Objects.requireNonNull(defaults));
        }

        public Builder xShear(@Nullable String xShear) {
            $.xShear = xShear;
            return this;
        }

        public Builder xShearVar(@Nullable String xShearVar) {
            $.xShearVar = xShearVar;
            return this;
        }

        public Builder yShear(@Nullable String yShear) {
            $.yShear = yShear;
            return this;
        }

        public Builder yShearVar(@Nullable String yShearVar) {
            $.yShearVar = yShearVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationPortraitShears build() {
            return $;
        }
    }

}
