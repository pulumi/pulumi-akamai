// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageBoxImageArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageCircleImageArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageTextImageArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageUrlImageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs Empty = new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs();

    @Import(name="boxImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageBoxImageArgs>> boxImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageBoxImageArgs>>> boxImages() {
        return Optional.ofNullable(this.boxImages);
    }

    @Import(name="circleImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageCircleImageArgs>> circleImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageCircleImageArgs>>> circleImages() {
        return Optional.ofNullable(this.circleImages);
    }

    @Import(name="textImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageTextImageArgs>> textImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageTextImageArgs>>> textImages() {
        return Optional.ofNullable(this.textImages);
    }

    @Import(name="urlImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageUrlImageArgs>> urlImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageUrlImageArgs>>> urlImages() {
        return Optional.ofNullable(this.urlImages);
    }

    private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs() {}

    private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs $) {
        this.boxImages = $.boxImages;
        this.circleImages = $.circleImages;
        this.textImages = $.textImages;
        this.urlImages = $.urlImages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs(Objects.requireNonNull(defaults));
        }

        public Builder boxImages(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageBoxImageArgs>> boxImages) {
            $.boxImages = boxImages;
            return this;
        }

        public Builder boxImages(List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageBoxImageArgs> boxImages) {
            return boxImages(Output.of(boxImages));
        }

        public Builder boxImages(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageBoxImageArgs... boxImages) {
            return boxImages(List.of(boxImages));
        }

        public Builder circleImages(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageCircleImageArgs>> circleImages) {
            $.circleImages = circleImages;
            return this;
        }

        public Builder circleImages(List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageCircleImageArgs> circleImages) {
            return circleImages(Output.of(circleImages));
        }

        public Builder circleImages(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageCircleImageArgs... circleImages) {
            return circleImages(List.of(circleImages));
        }

        public Builder textImages(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageTextImageArgs>> textImages) {
            $.textImages = textImages;
            return this;
        }

        public Builder textImages(List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageTextImageArgs> textImages) {
            return textImages(Output.of(textImages));
        }

        public Builder textImages(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageTextImageArgs... textImages) {
            return textImages(List.of(textImages));
        }

        public Builder urlImages(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageUrlImageArgs>> urlImages) {
            $.urlImages = urlImages;
            return this;
        }

        public Builder urlImages(List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageUrlImageArgs> urlImages) {
            return urlImages(Output.of(urlImages));
        }

        public Builder urlImages(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageUrlImageArgs... urlImages) {
            return urlImages(List.of(urlImages));
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionDefaultCompositeImageArgs build() {
            return $;
        }
    }

}
