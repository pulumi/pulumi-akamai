// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCloudletsApplicationLoadBalancerLivenessSetting {
    private Map<String,String> additionalHeaders;
    private String hostHeader;
    private Integer interval;
    private String path;
    private Boolean peerCertificateVerification;
    private Integer port;
    private String protocol;
    private String requestString;
    private String responseString;
    private Boolean status3xxFailure;
    private Boolean status4xxFailure;
    private Boolean status5xxFailure;
    private Double timeout;

    private GetCloudletsApplicationLoadBalancerLivenessSetting() {}
    public Map<String,String> additionalHeaders() {
        return this.additionalHeaders;
    }
    public String hostHeader() {
        return this.hostHeader;
    }
    public Integer interval() {
        return this.interval;
    }
    public String path() {
        return this.path;
    }
    public Boolean peerCertificateVerification() {
        return this.peerCertificateVerification;
    }
    public Integer port() {
        return this.port;
    }
    public String protocol() {
        return this.protocol;
    }
    public String requestString() {
        return this.requestString;
    }
    public String responseString() {
        return this.responseString;
    }
    public Boolean status3xxFailure() {
        return this.status3xxFailure;
    }
    public Boolean status4xxFailure() {
        return this.status4xxFailure;
    }
    public Boolean status5xxFailure() {
        return this.status5xxFailure;
    }
    public Double timeout() {
        return this.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudletsApplicationLoadBalancerLivenessSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> additionalHeaders;
        private String hostHeader;
        private Integer interval;
        private String path;
        private Boolean peerCertificateVerification;
        private Integer port;
        private String protocol;
        private String requestString;
        private String responseString;
        private Boolean status3xxFailure;
        private Boolean status4xxFailure;
        private Boolean status5xxFailure;
        private Double timeout;
        public Builder() {}
        public Builder(GetCloudletsApplicationLoadBalancerLivenessSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalHeaders = defaults.additionalHeaders;
    	      this.hostHeader = defaults.hostHeader;
    	      this.interval = defaults.interval;
    	      this.path = defaults.path;
    	      this.peerCertificateVerification = defaults.peerCertificateVerification;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.requestString = defaults.requestString;
    	      this.responseString = defaults.responseString;
    	      this.status3xxFailure = defaults.status3xxFailure;
    	      this.status4xxFailure = defaults.status4xxFailure;
    	      this.status5xxFailure = defaults.status5xxFailure;
    	      this.timeout = defaults.timeout;
        }

        @CustomType.Setter
        public Builder additionalHeaders(Map<String,String> additionalHeaders) {
            if (additionalHeaders == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "additionalHeaders");
            }
            this.additionalHeaders = additionalHeaders;
            return this;
        }
        @CustomType.Setter
        public Builder hostHeader(String hostHeader) {
            if (hostHeader == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "hostHeader");
            }
            this.hostHeader = hostHeader;
            return this;
        }
        @CustomType.Setter
        public Builder interval(Integer interval) {
            if (interval == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "interval");
            }
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder peerCertificateVerification(Boolean peerCertificateVerification) {
            if (peerCertificateVerification == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "peerCertificateVerification");
            }
            this.peerCertificateVerification = peerCertificateVerification;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder requestString(String requestString) {
            if (requestString == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "requestString");
            }
            this.requestString = requestString;
            return this;
        }
        @CustomType.Setter
        public Builder responseString(String responseString) {
            if (responseString == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "responseString");
            }
            this.responseString = responseString;
            return this;
        }
        @CustomType.Setter
        public Builder status3xxFailure(Boolean status3xxFailure) {
            if (status3xxFailure == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "status3xxFailure");
            }
            this.status3xxFailure = status3xxFailure;
            return this;
        }
        @CustomType.Setter
        public Builder status4xxFailure(Boolean status4xxFailure) {
            if (status4xxFailure == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "status4xxFailure");
            }
            this.status4xxFailure = status4xxFailure;
            return this;
        }
        @CustomType.Setter
        public Builder status5xxFailure(Boolean status5xxFailure) {
            if (status5xxFailure == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "status5xxFailure");
            }
            this.status5xxFailure = status5xxFailure;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(Double timeout) {
            if (timeout == null) {
              throw new MissingRequiredPropertyException("GetCloudletsApplicationLoadBalancerLivenessSetting", "timeout");
            }
            this.timeout = timeout;
            return this;
        }
        public GetCloudletsApplicationLoadBalancerLivenessSetting build() {
            final var _resultValue = new GetCloudletsApplicationLoadBalancerLivenessSetting();
            _resultValue.additionalHeaders = additionalHeaders;
            _resultValue.hostHeader = hostHeader;
            _resultValue.interval = interval;
            _resultValue.path = path;
            _resultValue.peerCertificateVerification = peerCertificateVerification;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            _resultValue.requestString = requestString;
            _resultValue.responseString = responseString;
            _resultValue.status3xxFailure = status3xxFailure;
            _resultValue.status4xxFailure = status4xxFailure;
            _resultValue.status5xxFailure = status5xxFailure;
            _resultValue.timeout = timeout;
            return _resultValue;
        }
    }
}
