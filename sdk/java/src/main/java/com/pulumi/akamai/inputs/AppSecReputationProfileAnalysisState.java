// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecReputationProfileAnalysisState extends com.pulumi.resources.ResourceArgs {

    public static final AppSecReputationProfileAnalysisState Empty = new AppSecReputationProfileAnalysisState();

    /**
     * Unique identifier of the security configuration
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return Unique identifier of the security configuration
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * Whether to add a value indicating that shared IPs are included in HTTP header and SIEM integration
     * 
     */
    @Import(name="forwardSharedIpToHttpHeaderSiem")
    private @Nullable Output<Boolean> forwardSharedIpToHttpHeaderSiem;

    /**
     * @return Whether to add a value indicating that shared IPs are included in HTTP header and SIEM integration
     * 
     */
    public Optional<Output<Boolean>> forwardSharedIpToHttpHeaderSiem() {
        return Optional.ofNullable(this.forwardSharedIpToHttpHeaderSiem);
    }

    /**
     * Whether to add client reputation details to requests forwarded to the origin server
     * 
     */
    @Import(name="forwardToHttpHeader")
    private @Nullable Output<Boolean> forwardToHttpHeader;

    /**
     * @return Whether to add client reputation details to requests forwarded to the origin server
     * 
     */
    public Optional<Output<Boolean>> forwardToHttpHeader() {
        return Optional.ofNullable(this.forwardToHttpHeader);
    }

    /**
     * Unique identifier of the security policy
     * 
     */
    @Import(name="securityPolicyId")
    private @Nullable Output<String> securityPolicyId;

    /**
     * @return Unique identifier of the security policy
     * 
     */
    public Optional<Output<String>> securityPolicyId() {
        return Optional.ofNullable(this.securityPolicyId);
    }

    private AppSecReputationProfileAnalysisState() {}

    private AppSecReputationProfileAnalysisState(AppSecReputationProfileAnalysisState $) {
        this.configId = $.configId;
        this.forwardSharedIpToHttpHeaderSiem = $.forwardSharedIpToHttpHeaderSiem;
        this.forwardToHttpHeader = $.forwardToHttpHeader;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecReputationProfileAnalysisState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecReputationProfileAnalysisState $;

        public Builder() {
            $ = new AppSecReputationProfileAnalysisState();
        }

        public Builder(AppSecReputationProfileAnalysisState defaults) {
            $ = new AppSecReputationProfileAnalysisState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param forwardSharedIpToHttpHeaderSiem Whether to add a value indicating that shared IPs are included in HTTP header and SIEM integration
         * 
         * @return builder
         * 
         */
        public Builder forwardSharedIpToHttpHeaderSiem(@Nullable Output<Boolean> forwardSharedIpToHttpHeaderSiem) {
            $.forwardSharedIpToHttpHeaderSiem = forwardSharedIpToHttpHeaderSiem;
            return this;
        }

        /**
         * @param forwardSharedIpToHttpHeaderSiem Whether to add a value indicating that shared IPs are included in HTTP header and SIEM integration
         * 
         * @return builder
         * 
         */
        public Builder forwardSharedIpToHttpHeaderSiem(Boolean forwardSharedIpToHttpHeaderSiem) {
            return forwardSharedIpToHttpHeaderSiem(Output.of(forwardSharedIpToHttpHeaderSiem));
        }

        /**
         * @param forwardToHttpHeader Whether to add client reputation details to requests forwarded to the origin server
         * 
         * @return builder
         * 
         */
        public Builder forwardToHttpHeader(@Nullable Output<Boolean> forwardToHttpHeader) {
            $.forwardToHttpHeader = forwardToHttpHeader;
            return this;
        }

        /**
         * @param forwardToHttpHeader Whether to add client reputation details to requests forwarded to the origin server
         * 
         * @return builder
         * 
         */
        public Builder forwardToHttpHeader(Boolean forwardToHttpHeader) {
            return forwardToHttpHeader(Output.of(forwardToHttpHeader));
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(@Nullable Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        public AppSecReputationProfileAnalysisState build() {
            return $;
        }
    }

}
