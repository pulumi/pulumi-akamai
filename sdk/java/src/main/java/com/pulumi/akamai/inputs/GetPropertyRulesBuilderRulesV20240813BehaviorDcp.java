// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20240813BehaviorDcp extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyRulesBuilderRulesV20240813BehaviorDcp Empty = new GetPropertyRulesBuilderRulesV20240813BehaviorDcp();

    /**
     * When enabled, you don&#39;t need to pass the JWT token with the mqtt request, and JWT validation is skipped.
     * 
     */
    @Import(name="anonymous")
    private @Nullable Boolean anonymous;

    /**
     * @return When enabled, you don&#39;t need to pass the JWT token with the mqtt request, and JWT validation is skipped.
     * 
     */
    public Optional<Boolean> anonymous() {
        return Optional.ofNullable(this.anonymous);
    }

    /**
     * Enables IoT Edge Connect.
     * 
     */
    @Import(name="enabled")
    private @Nullable Boolean enabled;

    /**
     * @return Enables IoT Edge Connect.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * When enabled, you can publish and receive messages over a secured HTTP connection on port 443.
     * 
     */
    @Import(name="gwenabled")
    private @Nullable Boolean gwenabled;

    /**
     * @return When enabled, you can publish and receive messages over a secured HTTP connection on port 443.
     * 
     */
    public Optional<Boolean> gwenabled() {
        return Optional.ofNullable(this.gwenabled);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Boolean locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Specifies the globally reserved name for a specific configuration. It includes authorization rules over publishing and subscribing to logical categories known as `topics`. This provides a root path for all topics defined within a namespace configuration.  You can use the `IoT Edge Connect API` to configure access control lists for your namespace configuration.
     * 
     */
    @Import(name="namespaceId")
    private @Nullable String namespaceId;

    /**
     * @return Specifies the globally reserved name for a specific configuration. It includes authorization rules over publishing and subscribing to logical categories known as `topics`. This provides a root path for all topics defined within a namespace configuration.  You can use the `IoT Edge Connect API` to configure access control lists for your namespace configuration.
     * 
     */
    public Optional<String> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable String templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * When enabled, you can publish and receive messages over a secured MQTT connection on port 8883.
     * 
     */
    @Import(name="tlsenabled")
    private @Nullable Boolean tlsenabled;

    /**
     * @return When enabled, you can publish and receive messages over a secured MQTT connection on port 8883.
     * 
     */
    public Optional<Boolean> tlsenabled() {
        return Optional.ofNullable(this.tlsenabled);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable String uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    /**
     * When enabled, you can publish and receive messages through a secured MQTT connection over WebSockets on port 443.
     * 
     */
    @Import(name="wsenabled")
    private @Nullable Boolean wsenabled;

    /**
     * @return When enabled, you can publish and receive messages through a secured MQTT connection over WebSockets on port 443.
     * 
     */
    public Optional<Boolean> wsenabled() {
        return Optional.ofNullable(this.wsenabled);
    }

    private GetPropertyRulesBuilderRulesV20240813BehaviorDcp() {}

    private GetPropertyRulesBuilderRulesV20240813BehaviorDcp(GetPropertyRulesBuilderRulesV20240813BehaviorDcp $) {
        this.anonymous = $.anonymous;
        this.enabled = $.enabled;
        this.gwenabled = $.gwenabled;
        this.locked = $.locked;
        this.namespaceId = $.namespaceId;
        this.templateUuid = $.templateUuid;
        this.tlsenabled = $.tlsenabled;
        this.uuid = $.uuid;
        this.wsenabled = $.wsenabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20240813BehaviorDcp defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20240813BehaviorDcp $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20240813BehaviorDcp();
        }

        public Builder(GetPropertyRulesBuilderRulesV20240813BehaviorDcp defaults) {
            $ = new GetPropertyRulesBuilderRulesV20240813BehaviorDcp(Objects.requireNonNull(defaults));
        }

        /**
         * @param anonymous When enabled, you don&#39;t need to pass the JWT token with the mqtt request, and JWT validation is skipped.
         * 
         * @return builder
         * 
         */
        public Builder anonymous(@Nullable Boolean anonymous) {
            $.anonymous = anonymous;
            return this;
        }

        /**
         * @param enabled Enables IoT Edge Connect.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param gwenabled When enabled, you can publish and receive messages over a secured HTTP connection on port 443.
         * 
         * @return builder
         * 
         */
        public Builder gwenabled(@Nullable Boolean gwenabled) {
            $.gwenabled = gwenabled;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Boolean locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param namespaceId Specifies the globally reserved name for a specific configuration. It includes authorization rules over publishing and subscribing to logical categories known as `topics`. This provides a root path for all topics defined within a namespace configuration.  You can use the `IoT Edge Connect API` to configure access control lists for your namespace configuration.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(@Nullable String namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable String templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param tlsenabled When enabled, you can publish and receive messages over a secured MQTT connection on port 8883.
         * 
         * @return builder
         * 
         */
        public Builder tlsenabled(@Nullable Boolean tlsenabled) {
            $.tlsenabled = tlsenabled;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param wsenabled When enabled, you can publish and receive messages through a secured MQTT connection over WebSockets on port 443.
         * 
         * @return builder
         * 
         */
        public Builder wsenabled(@Nullable Boolean wsenabled) {
            $.wsenabled = wsenabled;
            return this;
        }

        public GetPropertyRulesBuilderRulesV20240813BehaviorDcp build() {
            return $;
        }
    }

}
