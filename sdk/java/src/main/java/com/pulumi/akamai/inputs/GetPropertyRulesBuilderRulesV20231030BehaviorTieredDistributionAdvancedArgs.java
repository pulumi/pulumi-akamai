// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs Empty = new GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs();

    @Import(name="allowall")
    private @Nullable Output<Boolean> allowall;

    public Optional<Output<Boolean>> allowall() {
        return Optional.ofNullable(this.allowall);
    }

    /**
     * When enabled, activates tiered distribution.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return When enabled, activates tiered distribution.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    @Import(name="method")
    private @Nullable Output<String> method;

    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    @Import(name="policy")
    private @Nullable Output<String> policy;

    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * Optionally map the tiered parent server&#39;s location close to your origin: `CHEU2` for Europe; `CHAUS` for Australia; `CHAPAC` for China and the Asian Pacific area; `CHWUS2`, `CHCUS2`, and `CHEUS2` for different parts of the United States. Choose `CH` or `CH2` for a more global map. A narrower local map minimizes the origin server&#39;s load, and increases the likelihood the requested object is cached. A wider global map reduces end-user latency, but decreases the likelihood the requested object is in any given parent server&#39;s cache.  This option cannot apply if the property is marked as secure. See `Secure property requirements` for guidance.
     * 
     */
    @Import(name="tieredDistributionMap")
    private @Nullable Output<String> tieredDistributionMap;

    /**
     * @return Optionally map the tiered parent server&#39;s location close to your origin: `CHEU2` for Europe; `CHAUS` for Australia; `CHAPAC` for China and the Asian Pacific area; `CHWUS2`, `CHCUS2`, and `CHEUS2` for different parts of the United States. Choose `CH` or `CH2` for a more global map. A narrower local map minimizes the origin server&#39;s load, and increases the likelihood the requested object is cached. A wider global map reduces end-user latency, but decreases the likelihood the requested object is in any given parent server&#39;s cache.  This option cannot apply if the property is marked as secure. See `Secure property requirements` for guidance.
     * 
     */
    public Optional<Output<String>> tieredDistributionMap() {
        return Optional.ofNullable(this.tieredDistributionMap);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs() {}

    private GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs(GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs $) {
        this.allowall = $.allowall;
        this.enabled = $.enabled;
        this.locked = $.locked;
        this.method = $.method;
        this.policy = $.policy;
        this.templateUuid = $.templateUuid;
        this.tieredDistributionMap = $.tieredDistributionMap;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowall(@Nullable Output<Boolean> allowall) {
            $.allowall = allowall;
            return this;
        }

        public Builder allowall(Boolean allowall) {
            return allowall(Output.of(allowall));
        }

        /**
         * @param enabled When enabled, activates tiered distribution.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled When enabled, activates tiered distribution.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        public Builder method(String method) {
            return method(Output.of(method));
        }

        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param tieredDistributionMap Optionally map the tiered parent server&#39;s location close to your origin: `CHEU2` for Europe; `CHAUS` for Australia; `CHAPAC` for China and the Asian Pacific area; `CHWUS2`, `CHCUS2`, and `CHEUS2` for different parts of the United States. Choose `CH` or `CH2` for a more global map. A narrower local map minimizes the origin server&#39;s load, and increases the likelihood the requested object is cached. A wider global map reduces end-user latency, but decreases the likelihood the requested object is in any given parent server&#39;s cache.  This option cannot apply if the property is marked as secure. See `Secure property requirements` for guidance.
         * 
         * @return builder
         * 
         */
        public Builder tieredDistributionMap(@Nullable Output<String> tieredDistributionMap) {
            $.tieredDistributionMap = tieredDistributionMap;
            return this;
        }

        /**
         * @param tieredDistributionMap Optionally map the tiered parent server&#39;s location close to your origin: `CHEU2` for Europe; `CHAUS` for Australia; `CHAPAC` for China and the Asian Pacific area; `CHWUS2`, `CHCUS2`, and `CHEUS2` for different parts of the United States. Choose `CH` or `CH2` for a more global map. A narrower local map minimizes the origin server&#39;s load, and increases the likelihood the requested object is cached. A wider global map reduces end-user latency, but decreases the likelihood the requested object is in any given parent server&#39;s cache.  This option cannot apply if the property is marked as secure. See `Secure property requirements` for guidance.
         * 
         * @return builder
         * 
         */
        public Builder tieredDistributionMap(String tieredDistributionMap) {
            return tieredDistributionMap(Output.of(tieredDistributionMap));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20231030BehaviorTieredDistributionAdvancedArgs build() {
            return $;
        }
    }

}
