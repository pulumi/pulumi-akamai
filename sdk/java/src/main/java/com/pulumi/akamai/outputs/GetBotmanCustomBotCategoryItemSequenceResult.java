// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBotmanCustomBotCategoryItemSequenceResult {
    private List<String> botIds;
    private String categoryId;
    private Integer configId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetBotmanCustomBotCategoryItemSequenceResult() {}
    public List<String> botIds() {
        return this.botIds;
    }
    public String categoryId() {
        return this.categoryId;
    }
    public Integer configId() {
        return this.configId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBotmanCustomBotCategoryItemSequenceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> botIds;
        private String categoryId;
        private Integer configId;
        private String id;
        public Builder() {}
        public Builder(GetBotmanCustomBotCategoryItemSequenceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.botIds = defaults.botIds;
    	      this.categoryId = defaults.categoryId;
    	      this.configId = defaults.configId;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder botIds(List<String> botIds) {
            if (botIds == null) {
              throw new MissingRequiredPropertyException("GetBotmanCustomBotCategoryItemSequenceResult", "botIds");
            }
            this.botIds = botIds;
            return this;
        }
        public Builder botIds(String... botIds) {
            return botIds(List.of(botIds));
        }
        @CustomType.Setter
        public Builder categoryId(String categoryId) {
            if (categoryId == null) {
              throw new MissingRequiredPropertyException("GetBotmanCustomBotCategoryItemSequenceResult", "categoryId");
            }
            this.categoryId = categoryId;
            return this;
        }
        @CustomType.Setter
        public Builder configId(Integer configId) {
            if (configId == null) {
              throw new MissingRequiredPropertyException("GetBotmanCustomBotCategoryItemSequenceResult", "configId");
            }
            this.configId = configId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBotmanCustomBotCategoryItemSequenceResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetBotmanCustomBotCategoryItemSequenceResult build() {
            final var _resultValue = new GetBotmanCustomBotCategoryItemSequenceResult();
            _resultValue.botIds = botIds;
            _resultValue.categoryId = categoryId;
            _resultValue.configId = configId;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
