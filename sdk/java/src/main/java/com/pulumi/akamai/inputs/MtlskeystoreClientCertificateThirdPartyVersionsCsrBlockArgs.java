// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs extends com.pulumi.resources.ResourceArgs {

    public static final MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs Empty = new MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs();

    /**
     * Text of the certificate signing request.
     * 
     */
    @Import(name="csr")
    private @Nullable Output<String> csr;

    /**
     * @return Text of the certificate signing request.
     * 
     */
    public Optional<Output<String>> csr() {
        return Optional.ofNullable(this.csr);
    }

    /**
     * Identifies the client certificate&#39;s encryption algorithm.
     * 
     */
    @Import(name="keyAlgorithm")
    private @Nullable Output<String> keyAlgorithm;

    /**
     * @return Identifies the client certificate&#39;s encryption algorithm.
     * 
     */
    public Optional<Output<String>> keyAlgorithm() {
        return Optional.ofNullable(this.keyAlgorithm);
    }

    private MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs() {}

    private MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs(MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs $) {
        this.csr = $.csr;
        this.keyAlgorithm = $.keyAlgorithm;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs $;

        public Builder() {
            $ = new MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs();
        }

        public Builder(MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs defaults) {
            $ = new MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param csr Text of the certificate signing request.
         * 
         * @return builder
         * 
         */
        public Builder csr(@Nullable Output<String> csr) {
            $.csr = csr;
            return this;
        }

        /**
         * @param csr Text of the certificate signing request.
         * 
         * @return builder
         * 
         */
        public Builder csr(String csr) {
            return csr(Output.of(csr));
        }

        /**
         * @param keyAlgorithm Identifies the client certificate&#39;s encryption algorithm.
         * 
         * @return builder
         * 
         */
        public Builder keyAlgorithm(@Nullable Output<String> keyAlgorithm) {
            $.keyAlgorithm = keyAlgorithm;
            return this;
        }

        /**
         * @param keyAlgorithm Identifies the client certificate&#39;s encryption algorithm.
         * 
         * @return builder
         * 
         */
        public Builder keyAlgorithm(String keyAlgorithm) {
            return keyAlgorithm(Output.of(keyAlgorithm));
        }

        public MtlskeystoreClientCertificateThirdPartyVersionsCsrBlockArgs build() {
            return $;
        }
    }

}
