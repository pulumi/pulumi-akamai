// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor Empty = new GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor();

    /**
     * The horizontal position of the point, measured in pixels.
     * 
     */
    @Import(name="x")
    private @Nullable String x;

    /**
     * @return The horizontal position of the point, measured in pixels.
     * 
     */
    public Optional<String> x() {
        return Optional.ofNullable(this.x);
    }

    /**
     * The horizontal position of the point, measured in pixels.
     * 
     */
    @Import(name="xVar")
    private @Nullable String xVar;

    /**
     * @return The horizontal position of the point, measured in pixels.
     * 
     */
    public Optional<String> xVar() {
        return Optional.ofNullable(this.xVar);
    }

    /**
     * The vertical position of the point, measured in pixels.
     * 
     */
    @Import(name="y")
    private @Nullable String y;

    /**
     * @return The vertical position of the point, measured in pixels.
     * 
     */
    public Optional<String> y() {
        return Optional.ofNullable(this.y);
    }

    /**
     * The vertical position of the point, measured in pixels.
     * 
     */
    @Import(name="yVar")
    private @Nullable String yVar;

    /**
     * @return The vertical position of the point, measured in pixels.
     * 
     */
    public Optional<String> yVar() {
        return Optional.ofNullable(this.yVar);
    }

    private GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor() {}

    private GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor(GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor $) {
        this.x = $.x;
        this.xVar = $.xVar;
        this.y = $.y;
        this.yVar = $.yVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor(Objects.requireNonNull(defaults));
        }

        /**
         * @param x The horizontal position of the point, measured in pixels.
         * 
         * @return builder
         * 
         */
        public Builder x(@Nullable String x) {
            $.x = x;
            return this;
        }

        /**
         * @param xVar The horizontal position of the point, measured in pixels.
         * 
         * @return builder
         * 
         */
        public Builder xVar(@Nullable String xVar) {
            $.xVar = xVar;
            return this;
        }

        /**
         * @param y The vertical position of the point, measured in pixels.
         * 
         * @return builder
         * 
         */
        public Builder y(@Nullable String y) {
            $.y = y;
            return this;
        }

        /**
         * @param yVar The vertical position of the point, measured in pixels.
         * 
         * @return builder
         * 
         */
        public Builder yVar(@Nullable String yVar) {
            $.yVar = yVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor build() {
            return $;
        }
    }

}
