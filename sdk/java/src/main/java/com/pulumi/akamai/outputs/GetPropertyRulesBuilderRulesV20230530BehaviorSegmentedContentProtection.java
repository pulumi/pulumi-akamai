// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtection {
    private @Nullable Boolean acl;
    private @Nullable Boolean dashMediaEncryption;
    private @Nullable Boolean dataPayload;
    private @Nullable Boolean enableTokenInUri;
    private @Nullable Boolean enabled;
    private @Nullable String fieldCarryOver;
    private @Nullable List<String> headerForSalts;
    private @Nullable List<String> hlsMasterManifestFiles;
    private @Nullable Boolean hlsMediaEncryption;
    private @Nullable Boolean ip;
    private @Nullable String key;
    private @Nullable Boolean locked;
    private @Nullable String mediaEncryptionTitle;
    private @Nullable Integer revokedListId;
    private @Nullable String salt;
    private @Nullable Boolean sessionId;
    private @Nullable String templateUuid;
    private @Nullable String tokenAuthHlsTitle;
    private @Nullable String tokenAuthenticationTitle;
    private @Nullable Boolean tokenRevocationEnabled;
    private @Nullable String tokenRevocationTitle;
    private @Nullable String transitionKey;
    private @Nullable Boolean useAdvanced;
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtection() {}
    public Optional<Boolean> acl() {
        return Optional.ofNullable(this.acl);
    }
    public Optional<Boolean> dashMediaEncryption() {
        return Optional.ofNullable(this.dashMediaEncryption);
    }
    public Optional<Boolean> dataPayload() {
        return Optional.ofNullable(this.dataPayload);
    }
    public Optional<Boolean> enableTokenInUri() {
        return Optional.ofNullable(this.enableTokenInUri);
    }
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    public Optional<String> fieldCarryOver() {
        return Optional.ofNullable(this.fieldCarryOver);
    }
    public List<String> headerForSalts() {
        return this.headerForSalts == null ? List.of() : this.headerForSalts;
    }
    public List<String> hlsMasterManifestFiles() {
        return this.hlsMasterManifestFiles == null ? List.of() : this.hlsMasterManifestFiles;
    }
    public Optional<Boolean> hlsMediaEncryption() {
        return Optional.ofNullable(this.hlsMediaEncryption);
    }
    public Optional<Boolean> ip() {
        return Optional.ofNullable(this.ip);
    }
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    public Optional<String> mediaEncryptionTitle() {
        return Optional.ofNullable(this.mediaEncryptionTitle);
    }
    public Optional<Integer> revokedListId() {
        return Optional.ofNullable(this.revokedListId);
    }
    public Optional<String> salt() {
        return Optional.ofNullable(this.salt);
    }
    public Optional<Boolean> sessionId() {
        return Optional.ofNullable(this.sessionId);
    }
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    public Optional<String> tokenAuthHlsTitle() {
        return Optional.ofNullable(this.tokenAuthHlsTitle);
    }
    public Optional<String> tokenAuthenticationTitle() {
        return Optional.ofNullable(this.tokenAuthenticationTitle);
    }
    public Optional<Boolean> tokenRevocationEnabled() {
        return Optional.ofNullable(this.tokenRevocationEnabled);
    }
    public Optional<String> tokenRevocationTitle() {
        return Optional.ofNullable(this.tokenRevocationTitle);
    }
    public Optional<String> transitionKey() {
        return Optional.ofNullable(this.transitionKey);
    }
    public Optional<Boolean> useAdvanced() {
        return Optional.ofNullable(this.useAdvanced);
    }
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean acl;
        private @Nullable Boolean dashMediaEncryption;
        private @Nullable Boolean dataPayload;
        private @Nullable Boolean enableTokenInUri;
        private @Nullable Boolean enabled;
        private @Nullable String fieldCarryOver;
        private @Nullable List<String> headerForSalts;
        private @Nullable List<String> hlsMasterManifestFiles;
        private @Nullable Boolean hlsMediaEncryption;
        private @Nullable Boolean ip;
        private @Nullable String key;
        private @Nullable Boolean locked;
        private @Nullable String mediaEncryptionTitle;
        private @Nullable Integer revokedListId;
        private @Nullable String salt;
        private @Nullable Boolean sessionId;
        private @Nullable String templateUuid;
        private @Nullable String tokenAuthHlsTitle;
        private @Nullable String tokenAuthenticationTitle;
        private @Nullable Boolean tokenRevocationEnabled;
        private @Nullable String tokenRevocationTitle;
        private @Nullable String transitionKey;
        private @Nullable Boolean useAdvanced;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acl = defaults.acl;
    	      this.dashMediaEncryption = defaults.dashMediaEncryption;
    	      this.dataPayload = defaults.dataPayload;
    	      this.enableTokenInUri = defaults.enableTokenInUri;
    	      this.enabled = defaults.enabled;
    	      this.fieldCarryOver = defaults.fieldCarryOver;
    	      this.headerForSalts = defaults.headerForSalts;
    	      this.hlsMasterManifestFiles = defaults.hlsMasterManifestFiles;
    	      this.hlsMediaEncryption = defaults.hlsMediaEncryption;
    	      this.ip = defaults.ip;
    	      this.key = defaults.key;
    	      this.locked = defaults.locked;
    	      this.mediaEncryptionTitle = defaults.mediaEncryptionTitle;
    	      this.revokedListId = defaults.revokedListId;
    	      this.salt = defaults.salt;
    	      this.sessionId = defaults.sessionId;
    	      this.templateUuid = defaults.templateUuid;
    	      this.tokenAuthHlsTitle = defaults.tokenAuthHlsTitle;
    	      this.tokenAuthenticationTitle = defaults.tokenAuthenticationTitle;
    	      this.tokenRevocationEnabled = defaults.tokenRevocationEnabled;
    	      this.tokenRevocationTitle = defaults.tokenRevocationTitle;
    	      this.transitionKey = defaults.transitionKey;
    	      this.useAdvanced = defaults.useAdvanced;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder acl(@Nullable Boolean acl) {
            this.acl = acl;
            return this;
        }
        @CustomType.Setter
        public Builder dashMediaEncryption(@Nullable Boolean dashMediaEncryption) {
            this.dashMediaEncryption = dashMediaEncryption;
            return this;
        }
        @CustomType.Setter
        public Builder dataPayload(@Nullable Boolean dataPayload) {
            this.dataPayload = dataPayload;
            return this;
        }
        @CustomType.Setter
        public Builder enableTokenInUri(@Nullable Boolean enableTokenInUri) {
            this.enableTokenInUri = enableTokenInUri;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder fieldCarryOver(@Nullable String fieldCarryOver) {
            this.fieldCarryOver = fieldCarryOver;
            return this;
        }
        @CustomType.Setter
        public Builder headerForSalts(@Nullable List<String> headerForSalts) {
            this.headerForSalts = headerForSalts;
            return this;
        }
        public Builder headerForSalts(String... headerForSalts) {
            return headerForSalts(List.of(headerForSalts));
        }
        @CustomType.Setter
        public Builder hlsMasterManifestFiles(@Nullable List<String> hlsMasterManifestFiles) {
            this.hlsMasterManifestFiles = hlsMasterManifestFiles;
            return this;
        }
        public Builder hlsMasterManifestFiles(String... hlsMasterManifestFiles) {
            return hlsMasterManifestFiles(List.of(hlsMasterManifestFiles));
        }
        @CustomType.Setter
        public Builder hlsMediaEncryption(@Nullable Boolean hlsMediaEncryption) {
            this.hlsMediaEncryption = hlsMediaEncryption;
            return this;
        }
        @CustomType.Setter
        public Builder ip(@Nullable Boolean ip) {
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {
            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder mediaEncryptionTitle(@Nullable String mediaEncryptionTitle) {
            this.mediaEncryptionTitle = mediaEncryptionTitle;
            return this;
        }
        @CustomType.Setter
        public Builder revokedListId(@Nullable Integer revokedListId) {
            this.revokedListId = revokedListId;
            return this;
        }
        @CustomType.Setter
        public Builder salt(@Nullable String salt) {
            this.salt = salt;
            return this;
        }
        @CustomType.Setter
        public Builder sessionId(@Nullable Boolean sessionId) {
            this.sessionId = sessionId;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {
            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder tokenAuthHlsTitle(@Nullable String tokenAuthHlsTitle) {
            this.tokenAuthHlsTitle = tokenAuthHlsTitle;
            return this;
        }
        @CustomType.Setter
        public Builder tokenAuthenticationTitle(@Nullable String tokenAuthenticationTitle) {
            this.tokenAuthenticationTitle = tokenAuthenticationTitle;
            return this;
        }
        @CustomType.Setter
        public Builder tokenRevocationEnabled(@Nullable Boolean tokenRevocationEnabled) {
            this.tokenRevocationEnabled = tokenRevocationEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder tokenRevocationTitle(@Nullable String tokenRevocationTitle) {
            this.tokenRevocationTitle = tokenRevocationTitle;
            return this;
        }
        @CustomType.Setter
        public Builder transitionKey(@Nullable String transitionKey) {
            this.transitionKey = transitionKey;
            return this;
        }
        @CustomType.Setter
        public Builder useAdvanced(@Nullable Boolean useAdvanced) {
            this.useAdvanced = useAdvanced;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {
            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtection build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtection();
            _resultValue.acl = acl;
            _resultValue.dashMediaEncryption = dashMediaEncryption;
            _resultValue.dataPayload = dataPayload;
            _resultValue.enableTokenInUri = enableTokenInUri;
            _resultValue.enabled = enabled;
            _resultValue.fieldCarryOver = fieldCarryOver;
            _resultValue.headerForSalts = headerForSalts;
            _resultValue.hlsMasterManifestFiles = hlsMasterManifestFiles;
            _resultValue.hlsMediaEncryption = hlsMediaEncryption;
            _resultValue.ip = ip;
            _resultValue.key = key;
            _resultValue.locked = locked;
            _resultValue.mediaEncryptionTitle = mediaEncryptionTitle;
            _resultValue.revokedListId = revokedListId;
            _resultValue.salt = salt;
            _resultValue.sessionId = sessionId;
            _resultValue.templateUuid = templateUuid;
            _resultValue.tokenAuthHlsTitle = tokenAuthHlsTitle;
            _resultValue.tokenAuthenticationTitle = tokenAuthenticationTitle;
            _resultValue.tokenRevocationEnabled = tokenRevocationEnabled;
            _resultValue.tokenRevocationTitle = tokenRevocationTitle;
            _resultValue.transitionKey = transitionKey;
            _resultValue.useAdvanced = useAdvanced;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
