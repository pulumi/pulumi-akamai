// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAppendArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAspectCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBackgroundColorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBlurArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultChromaKeyArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompositeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompoundArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultContrastArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFaceCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFeatureCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFitAndFillArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGoopArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGrayscaleArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHslArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHsvArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfDimensionArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfOrientationArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultImQueryArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMaxColorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMirrorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMonoHueArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultOpacityArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRegionOfInterestCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRelativeCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRemoveColorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultResizeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRotateArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultScaleArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultShearsArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultTrimArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultUnsharpMaskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs Empty = new GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs();

    @Import(name="appends")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAppendArgs>> appends;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAppendArgs>>> appends() {
        return Optional.ofNullable(this.appends);
    }

    @Import(name="aspectCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAspectCropArgs>> aspectCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAspectCropArgs>>> aspectCrops() {
        return Optional.ofNullable(this.aspectCrops);
    }

    @Import(name="backgroundColors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBackgroundColorArgs>> backgroundColors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBackgroundColorArgs>>> backgroundColors() {
        return Optional.ofNullable(this.backgroundColors);
    }

    @Import(name="blurs")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBlurArgs>> blurs;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBlurArgs>>> blurs() {
        return Optional.ofNullable(this.blurs);
    }

    @Import(name="chromaKeys")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultChromaKeyArgs>> chromaKeys;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultChromaKeyArgs>>> chromaKeys() {
        return Optional.ofNullable(this.chromaKeys);
    }

    @Import(name="composites")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompositeArgs>> composites;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompositeArgs>>> composites() {
        return Optional.ofNullable(this.composites);
    }

    @Import(name="compounds")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompoundArgs>> compounds;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompoundArgs>>> compounds() {
        return Optional.ofNullable(this.compounds);
    }

    @Import(name="contrasts")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultContrastArgs>> contrasts;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultContrastArgs>>> contrasts() {
        return Optional.ofNullable(this.contrasts);
    }

    @Import(name="crops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCropArgs>> crops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCropArgs>>> crops() {
        return Optional.ofNullable(this.crops);
    }

    @Import(name="faceCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFaceCropArgs>> faceCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFaceCropArgs>>> faceCrops() {
        return Optional.ofNullable(this.faceCrops);
    }

    @Import(name="featureCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFeatureCropArgs>> featureCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFeatureCropArgs>>> featureCrops() {
        return Optional.ofNullable(this.featureCrops);
    }

    @Import(name="fitAndFills")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFitAndFillArgs>> fitAndFills;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFitAndFillArgs>>> fitAndFills() {
        return Optional.ofNullable(this.fitAndFills);
    }

    @Import(name="goops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGoopArgs>> goops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGoopArgs>>> goops() {
        return Optional.ofNullable(this.goops);
    }

    @Import(name="grayscales")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGrayscaleArgs>> grayscales;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGrayscaleArgs>>> grayscales() {
        return Optional.ofNullable(this.grayscales);
    }

    @Import(name="hsls")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHslArgs>> hsls;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHslArgs>>> hsls() {
        return Optional.ofNullable(this.hsls);
    }

    @Import(name="hsvs")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHsvArgs>> hsvs;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHsvArgs>>> hsvs() {
        return Optional.ofNullable(this.hsvs);
    }

    @Import(name="ifDimensions")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfDimensionArgs>> ifDimensions;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfDimensionArgs>>> ifDimensions() {
        return Optional.ofNullable(this.ifDimensions);
    }

    @Import(name="ifOrientations")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfOrientationArgs>> ifOrientations;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfOrientationArgs>>> ifOrientations() {
        return Optional.ofNullable(this.ifOrientations);
    }

    @Import(name="imQueries")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultImQueryArgs>> imQueries;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultImQueryArgs>>> imQueries() {
        return Optional.ofNullable(this.imQueries);
    }

    @Import(name="maxColors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMaxColorArgs>> maxColors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMaxColorArgs>>> maxColors() {
        return Optional.ofNullable(this.maxColors);
    }

    @Import(name="mirrors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMirrorArgs>> mirrors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMirrorArgs>>> mirrors() {
        return Optional.ofNullable(this.mirrors);
    }

    @Import(name="monoHues")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMonoHueArgs>> monoHues;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMonoHueArgs>>> monoHues() {
        return Optional.ofNullable(this.monoHues);
    }

    @Import(name="opacities")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultOpacityArgs>> opacities;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultOpacityArgs>>> opacities() {
        return Optional.ofNullable(this.opacities);
    }

    @Import(name="regionOfInterestCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRegionOfInterestCropArgs>> regionOfInterestCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRegionOfInterestCropArgs>>> regionOfInterestCrops() {
        return Optional.ofNullable(this.regionOfInterestCrops);
    }

    @Import(name="relativeCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRelativeCropArgs>> relativeCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRelativeCropArgs>>> relativeCrops() {
        return Optional.ofNullable(this.relativeCrops);
    }

    @Import(name="removeColors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRemoveColorArgs>> removeColors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRemoveColorArgs>>> removeColors() {
        return Optional.ofNullable(this.removeColors);
    }

    @Import(name="resizes")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultResizeArgs>> resizes;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultResizeArgs>>> resizes() {
        return Optional.ofNullable(this.resizes);
    }

    @Import(name="rotates")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRotateArgs>> rotates;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRotateArgs>>> rotates() {
        return Optional.ofNullable(this.rotates);
    }

    @Import(name="scales")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultScaleArgs>> scales;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultScaleArgs>>> scales() {
        return Optional.ofNullable(this.scales);
    }

    @Import(name="shears")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultShearsArgs>> shears;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultShearsArgs>>> shears() {
        return Optional.ofNullable(this.shears);
    }

    @Import(name="trims")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultTrimArgs>> trims;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultTrimArgs>>> trims() {
        return Optional.ofNullable(this.trims);
    }

    @Import(name="unsharpMasks")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultUnsharpMaskArgs>> unsharpMasks;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultUnsharpMaskArgs>>> unsharpMasks() {
        return Optional.ofNullable(this.unsharpMasks);
    }

    private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs() {}

    private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs $) {
        this.appends = $.appends;
        this.aspectCrops = $.aspectCrops;
        this.backgroundColors = $.backgroundColors;
        this.blurs = $.blurs;
        this.chromaKeys = $.chromaKeys;
        this.composites = $.composites;
        this.compounds = $.compounds;
        this.contrasts = $.contrasts;
        this.crops = $.crops;
        this.faceCrops = $.faceCrops;
        this.featureCrops = $.featureCrops;
        this.fitAndFills = $.fitAndFills;
        this.goops = $.goops;
        this.grayscales = $.grayscales;
        this.hsls = $.hsls;
        this.hsvs = $.hsvs;
        this.ifDimensions = $.ifDimensions;
        this.ifOrientations = $.ifOrientations;
        this.imQueries = $.imQueries;
        this.maxColors = $.maxColors;
        this.mirrors = $.mirrors;
        this.monoHues = $.monoHues;
        this.opacities = $.opacities;
        this.regionOfInterestCrops = $.regionOfInterestCrops;
        this.relativeCrops = $.relativeCrops;
        this.removeColors = $.removeColors;
        this.resizes = $.resizes;
        this.rotates = $.rotates;
        this.scales = $.scales;
        this.shears = $.shears;
        this.trims = $.trims;
        this.unsharpMasks = $.unsharpMasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs(Objects.requireNonNull(defaults));
        }

        public Builder appends(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAppendArgs>> appends) {
            $.appends = appends;
            return this;
        }

        public Builder appends(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAppendArgs> appends) {
            return appends(Output.of(appends));
        }

        public Builder appends(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAppendArgs... appends) {
            return appends(List.of(appends));
        }

        public Builder aspectCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAspectCropArgs>> aspectCrops) {
            $.aspectCrops = aspectCrops;
            return this;
        }

        public Builder aspectCrops(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAspectCropArgs> aspectCrops) {
            return aspectCrops(Output.of(aspectCrops));
        }

        public Builder aspectCrops(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultAspectCropArgs... aspectCrops) {
            return aspectCrops(List.of(aspectCrops));
        }

        public Builder backgroundColors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBackgroundColorArgs>> backgroundColors) {
            $.backgroundColors = backgroundColors;
            return this;
        }

        public Builder backgroundColors(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBackgroundColorArgs> backgroundColors) {
            return backgroundColors(Output.of(backgroundColors));
        }

        public Builder backgroundColors(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBackgroundColorArgs... backgroundColors) {
            return backgroundColors(List.of(backgroundColors));
        }

        public Builder blurs(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBlurArgs>> blurs) {
            $.blurs = blurs;
            return this;
        }

        public Builder blurs(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBlurArgs> blurs) {
            return blurs(Output.of(blurs));
        }

        public Builder blurs(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultBlurArgs... blurs) {
            return blurs(List.of(blurs));
        }

        public Builder chromaKeys(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultChromaKeyArgs>> chromaKeys) {
            $.chromaKeys = chromaKeys;
            return this;
        }

        public Builder chromaKeys(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultChromaKeyArgs> chromaKeys) {
            return chromaKeys(Output.of(chromaKeys));
        }

        public Builder chromaKeys(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultChromaKeyArgs... chromaKeys) {
            return chromaKeys(List.of(chromaKeys));
        }

        public Builder composites(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompositeArgs>> composites) {
            $.composites = composites;
            return this;
        }

        public Builder composites(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompositeArgs> composites) {
            return composites(Output.of(composites));
        }

        public Builder composites(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompositeArgs... composites) {
            return composites(List.of(composites));
        }

        public Builder compounds(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompoundArgs>> compounds) {
            $.compounds = compounds;
            return this;
        }

        public Builder compounds(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompoundArgs> compounds) {
            return compounds(Output.of(compounds));
        }

        public Builder compounds(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCompoundArgs... compounds) {
            return compounds(List.of(compounds));
        }

        public Builder contrasts(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultContrastArgs>> contrasts) {
            $.contrasts = contrasts;
            return this;
        }

        public Builder contrasts(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultContrastArgs> contrasts) {
            return contrasts(Output.of(contrasts));
        }

        public Builder contrasts(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultContrastArgs... contrasts) {
            return contrasts(List.of(contrasts));
        }

        public Builder crops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCropArgs>> crops) {
            $.crops = crops;
            return this;
        }

        public Builder crops(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCropArgs> crops) {
            return crops(Output.of(crops));
        }

        public Builder crops(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultCropArgs... crops) {
            return crops(List.of(crops));
        }

        public Builder faceCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFaceCropArgs>> faceCrops) {
            $.faceCrops = faceCrops;
            return this;
        }

        public Builder faceCrops(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFaceCropArgs> faceCrops) {
            return faceCrops(Output.of(faceCrops));
        }

        public Builder faceCrops(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFaceCropArgs... faceCrops) {
            return faceCrops(List.of(faceCrops));
        }

        public Builder featureCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFeatureCropArgs>> featureCrops) {
            $.featureCrops = featureCrops;
            return this;
        }

        public Builder featureCrops(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFeatureCropArgs> featureCrops) {
            return featureCrops(Output.of(featureCrops));
        }

        public Builder featureCrops(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFeatureCropArgs... featureCrops) {
            return featureCrops(List.of(featureCrops));
        }

        public Builder fitAndFills(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFitAndFillArgs>> fitAndFills) {
            $.fitAndFills = fitAndFills;
            return this;
        }

        public Builder fitAndFills(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFitAndFillArgs> fitAndFills) {
            return fitAndFills(Output.of(fitAndFills));
        }

        public Builder fitAndFills(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultFitAndFillArgs... fitAndFills) {
            return fitAndFills(List.of(fitAndFills));
        }

        public Builder goops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGoopArgs>> goops) {
            $.goops = goops;
            return this;
        }

        public Builder goops(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGoopArgs> goops) {
            return goops(Output.of(goops));
        }

        public Builder goops(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGoopArgs... goops) {
            return goops(List.of(goops));
        }

        public Builder grayscales(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGrayscaleArgs>> grayscales) {
            $.grayscales = grayscales;
            return this;
        }

        public Builder grayscales(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGrayscaleArgs> grayscales) {
            return grayscales(Output.of(grayscales));
        }

        public Builder grayscales(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultGrayscaleArgs... grayscales) {
            return grayscales(List.of(grayscales));
        }

        public Builder hsls(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHslArgs>> hsls) {
            $.hsls = hsls;
            return this;
        }

        public Builder hsls(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHslArgs> hsls) {
            return hsls(Output.of(hsls));
        }

        public Builder hsls(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHslArgs... hsls) {
            return hsls(List.of(hsls));
        }

        public Builder hsvs(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHsvArgs>> hsvs) {
            $.hsvs = hsvs;
            return this;
        }

        public Builder hsvs(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHsvArgs> hsvs) {
            return hsvs(Output.of(hsvs));
        }

        public Builder hsvs(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultHsvArgs... hsvs) {
            return hsvs(List.of(hsvs));
        }

        public Builder ifDimensions(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfDimensionArgs>> ifDimensions) {
            $.ifDimensions = ifDimensions;
            return this;
        }

        public Builder ifDimensions(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfDimensionArgs> ifDimensions) {
            return ifDimensions(Output.of(ifDimensions));
        }

        public Builder ifDimensions(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfDimensionArgs... ifDimensions) {
            return ifDimensions(List.of(ifDimensions));
        }

        public Builder ifOrientations(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfOrientationArgs>> ifOrientations) {
            $.ifOrientations = ifOrientations;
            return this;
        }

        public Builder ifOrientations(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfOrientationArgs> ifOrientations) {
            return ifOrientations(Output.of(ifOrientations));
        }

        public Builder ifOrientations(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultIfOrientationArgs... ifOrientations) {
            return ifOrientations(List.of(ifOrientations));
        }

        public Builder imQueries(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultImQueryArgs>> imQueries) {
            $.imQueries = imQueries;
            return this;
        }

        public Builder imQueries(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultImQueryArgs> imQueries) {
            return imQueries(Output.of(imQueries));
        }

        public Builder imQueries(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultImQueryArgs... imQueries) {
            return imQueries(List.of(imQueries));
        }

        public Builder maxColors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMaxColorArgs>> maxColors) {
            $.maxColors = maxColors;
            return this;
        }

        public Builder maxColors(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMaxColorArgs> maxColors) {
            return maxColors(Output.of(maxColors));
        }

        public Builder maxColors(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMaxColorArgs... maxColors) {
            return maxColors(List.of(maxColors));
        }

        public Builder mirrors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMirrorArgs>> mirrors) {
            $.mirrors = mirrors;
            return this;
        }

        public Builder mirrors(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMirrorArgs> mirrors) {
            return mirrors(Output.of(mirrors));
        }

        public Builder mirrors(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMirrorArgs... mirrors) {
            return mirrors(List.of(mirrors));
        }

        public Builder monoHues(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMonoHueArgs>> monoHues) {
            $.monoHues = monoHues;
            return this;
        }

        public Builder monoHues(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMonoHueArgs> monoHues) {
            return monoHues(Output.of(monoHues));
        }

        public Builder monoHues(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultMonoHueArgs... monoHues) {
            return monoHues(List.of(monoHues));
        }

        public Builder opacities(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultOpacityArgs>> opacities) {
            $.opacities = opacities;
            return this;
        }

        public Builder opacities(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultOpacityArgs> opacities) {
            return opacities(Output.of(opacities));
        }

        public Builder opacities(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultOpacityArgs... opacities) {
            return opacities(List.of(opacities));
        }

        public Builder regionOfInterestCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRegionOfInterestCropArgs>> regionOfInterestCrops) {
            $.regionOfInterestCrops = regionOfInterestCrops;
            return this;
        }

        public Builder regionOfInterestCrops(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRegionOfInterestCropArgs> regionOfInterestCrops) {
            return regionOfInterestCrops(Output.of(regionOfInterestCrops));
        }

        public Builder regionOfInterestCrops(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRegionOfInterestCropArgs... regionOfInterestCrops) {
            return regionOfInterestCrops(List.of(regionOfInterestCrops));
        }

        public Builder relativeCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRelativeCropArgs>> relativeCrops) {
            $.relativeCrops = relativeCrops;
            return this;
        }

        public Builder relativeCrops(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRelativeCropArgs> relativeCrops) {
            return relativeCrops(Output.of(relativeCrops));
        }

        public Builder relativeCrops(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRelativeCropArgs... relativeCrops) {
            return relativeCrops(List.of(relativeCrops));
        }

        public Builder removeColors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRemoveColorArgs>> removeColors) {
            $.removeColors = removeColors;
            return this;
        }

        public Builder removeColors(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRemoveColorArgs> removeColors) {
            return removeColors(Output.of(removeColors));
        }

        public Builder removeColors(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRemoveColorArgs... removeColors) {
            return removeColors(List.of(removeColors));
        }

        public Builder resizes(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultResizeArgs>> resizes) {
            $.resizes = resizes;
            return this;
        }

        public Builder resizes(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultResizeArgs> resizes) {
            return resizes(Output.of(resizes));
        }

        public Builder resizes(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultResizeArgs... resizes) {
            return resizes(List.of(resizes));
        }

        public Builder rotates(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRotateArgs>> rotates) {
            $.rotates = rotates;
            return this;
        }

        public Builder rotates(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRotateArgs> rotates) {
            return rotates(Output.of(rotates));
        }

        public Builder rotates(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultRotateArgs... rotates) {
            return rotates(List.of(rotates));
        }

        public Builder scales(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultScaleArgs>> scales) {
            $.scales = scales;
            return this;
        }

        public Builder scales(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultScaleArgs> scales) {
            return scales(Output.of(scales));
        }

        public Builder scales(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultScaleArgs... scales) {
            return scales(List.of(scales));
        }

        public Builder shears(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultShearsArgs>> shears) {
            $.shears = shears;
            return this;
        }

        public Builder shears(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultShearsArgs> shears) {
            return shears(Output.of(shears));
        }

        public Builder shears(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultShearsArgs... shears) {
            return shears(List.of(shears));
        }

        public Builder trims(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultTrimArgs>> trims) {
            $.trims = trims;
            return this;
        }

        public Builder trims(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultTrimArgs> trims) {
            return trims(Output.of(trims));
        }

        public Builder trims(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultTrimArgs... trims) {
            return trims(List.of(trims));
        }

        public Builder unsharpMasks(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultUnsharpMaskArgs>> unsharpMasks) {
            $.unsharpMasks = unsharpMasks;
            return this;
        }

        public Builder unsharpMasks(List<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultUnsharpMaskArgs> unsharpMasks) {
            return unsharpMasks(Output.of(unsharpMasks));
        }

        public Builder unsharpMasks(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultUnsharpMaskArgs... unsharpMasks) {
            return unsharpMasks(List.of(unsharpMasks));
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionDefaultArgs build() {
            return $;
        }
    }

}
