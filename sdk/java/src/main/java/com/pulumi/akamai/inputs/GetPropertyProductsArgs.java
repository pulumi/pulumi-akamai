// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetPropertyProductsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyProductsArgs Empty = new GetPropertyProductsArgs();

    /**
     * (Required) A contract&#39;s unique ID, including the `ctr_` prefix.
     * 
     */
    @Import(name="contractId", required=true)
    private Output<String> contractId;

    /**
     * @return (Required) A contract&#39;s unique ID, including the `ctr_` prefix.
     * 
     */
    public Output<String> contractId() {
        return this.contractId;
    }

    private GetPropertyProductsArgs() {}

    private GetPropertyProductsArgs(GetPropertyProductsArgs $) {
        this.contractId = $.contractId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyProductsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyProductsArgs $;

        public Builder() {
            $ = new GetPropertyProductsArgs();
        }

        public Builder(GetPropertyProductsArgs defaults) {
            $ = new GetPropertyProductsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contractId (Required) A contract&#39;s unique ID, including the `ctr_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder contractId(Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        /**
         * @param contractId (Required) A contract&#39;s unique ID, including the `ctr_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        public GetPropertyProductsArgs build() {
            $.contractId = Objects.requireNonNull($.contractId, "expected parameter 'contractId' to be non-null");
            return $;
        }
    }

}
