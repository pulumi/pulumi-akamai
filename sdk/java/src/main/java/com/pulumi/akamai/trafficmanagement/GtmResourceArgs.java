// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.trafficmanagement;

import com.pulumi.akamai.trafficmanagement.inputs.GtmResourceResourceInstanceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GtmResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GtmResourceArgs Empty = new GtmResourceArgs();

    @Import(name="aggregationType", required=true)
    private Output<String> aggregationType;

    public Output<String> aggregationType() {
        return this.aggregationType;
    }

    @Import(name="constrainedProperty")
    private @Nullable Output<String> constrainedProperty;

    public Optional<Output<String>> constrainedProperty() {
        return Optional.ofNullable(this.constrainedProperty);
    }

    @Import(name="decayRate")
    private @Nullable Output<Double> decayRate;

    public Optional<Output<Double>> decayRate() {
        return Optional.ofNullable(this.decayRate);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="domain", required=true)
    private Output<String> domain;

    public Output<String> domain() {
        return this.domain;
    }

    @Import(name="hostHeader")
    private @Nullable Output<String> hostHeader;

    public Optional<Output<String>> hostHeader() {
        return Optional.ofNullable(this.hostHeader);
    }

    @Import(name="leaderString")
    private @Nullable Output<String> leaderString;

    public Optional<Output<String>> leaderString() {
        return Optional.ofNullable(this.leaderString);
    }

    @Import(name="leastSquaresDecay")
    private @Nullable Output<Double> leastSquaresDecay;

    public Optional<Output<Double>> leastSquaresDecay() {
        return Optional.ofNullable(this.leastSquaresDecay);
    }

    @Import(name="loadImbalancePercentage")
    private @Nullable Output<Double> loadImbalancePercentage;

    public Optional<Output<Double>> loadImbalancePercentage() {
        return Optional.ofNullable(this.loadImbalancePercentage);
    }

    @Import(name="maxUMultiplicativeIncrement")
    private @Nullable Output<Double> maxUMultiplicativeIncrement;

    public Optional<Output<Double>> maxUMultiplicativeIncrement() {
        return Optional.ofNullable(this.maxUMultiplicativeIncrement);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="resourceInstances")
    private @Nullable Output<List<GtmResourceResourceInstanceArgs>> resourceInstances;

    public Optional<Output<List<GtmResourceResourceInstanceArgs>>> resourceInstances() {
        return Optional.ofNullable(this.resourceInstances);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="upperBound")
    private @Nullable Output<Integer> upperBound;

    public Optional<Output<Integer>> upperBound() {
        return Optional.ofNullable(this.upperBound);
    }

    @Import(name="waitOnComplete")
    private @Nullable Output<Boolean> waitOnComplete;

    public Optional<Output<Boolean>> waitOnComplete() {
        return Optional.ofNullable(this.waitOnComplete);
    }

    private GtmResourceArgs() {}

    private GtmResourceArgs(GtmResourceArgs $) {
        this.aggregationType = $.aggregationType;
        this.constrainedProperty = $.constrainedProperty;
        this.decayRate = $.decayRate;
        this.description = $.description;
        this.domain = $.domain;
        this.hostHeader = $.hostHeader;
        this.leaderString = $.leaderString;
        this.leastSquaresDecay = $.leastSquaresDecay;
        this.loadImbalancePercentage = $.loadImbalancePercentage;
        this.maxUMultiplicativeIncrement = $.maxUMultiplicativeIncrement;
        this.name = $.name;
        this.resourceInstances = $.resourceInstances;
        this.type = $.type;
        this.upperBound = $.upperBound;
        this.waitOnComplete = $.waitOnComplete;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GtmResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GtmResourceArgs $;

        public Builder() {
            $ = new GtmResourceArgs();
        }

        public Builder(GtmResourceArgs defaults) {
            $ = new GtmResourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder aggregationType(Output<String> aggregationType) {
            $.aggregationType = aggregationType;
            return this;
        }

        public Builder aggregationType(String aggregationType) {
            return aggregationType(Output.of(aggregationType));
        }

        public Builder constrainedProperty(@Nullable Output<String> constrainedProperty) {
            $.constrainedProperty = constrainedProperty;
            return this;
        }

        public Builder constrainedProperty(String constrainedProperty) {
            return constrainedProperty(Output.of(constrainedProperty));
        }

        public Builder decayRate(@Nullable Output<Double> decayRate) {
            $.decayRate = decayRate;
            return this;
        }

        public Builder decayRate(Double decayRate) {
            return decayRate(Output.of(decayRate));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder domain(Output<String> domain) {
            $.domain = domain;
            return this;
        }

        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        public Builder hostHeader(@Nullable Output<String> hostHeader) {
            $.hostHeader = hostHeader;
            return this;
        }

        public Builder hostHeader(String hostHeader) {
            return hostHeader(Output.of(hostHeader));
        }

        public Builder leaderString(@Nullable Output<String> leaderString) {
            $.leaderString = leaderString;
            return this;
        }

        public Builder leaderString(String leaderString) {
            return leaderString(Output.of(leaderString));
        }

        public Builder leastSquaresDecay(@Nullable Output<Double> leastSquaresDecay) {
            $.leastSquaresDecay = leastSquaresDecay;
            return this;
        }

        public Builder leastSquaresDecay(Double leastSquaresDecay) {
            return leastSquaresDecay(Output.of(leastSquaresDecay));
        }

        public Builder loadImbalancePercentage(@Nullable Output<Double> loadImbalancePercentage) {
            $.loadImbalancePercentage = loadImbalancePercentage;
            return this;
        }

        public Builder loadImbalancePercentage(Double loadImbalancePercentage) {
            return loadImbalancePercentage(Output.of(loadImbalancePercentage));
        }

        public Builder maxUMultiplicativeIncrement(@Nullable Output<Double> maxUMultiplicativeIncrement) {
            $.maxUMultiplicativeIncrement = maxUMultiplicativeIncrement;
            return this;
        }

        public Builder maxUMultiplicativeIncrement(Double maxUMultiplicativeIncrement) {
            return maxUMultiplicativeIncrement(Output.of(maxUMultiplicativeIncrement));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder resourceInstances(@Nullable Output<List<GtmResourceResourceInstanceArgs>> resourceInstances) {
            $.resourceInstances = resourceInstances;
            return this;
        }

        public Builder resourceInstances(List<GtmResourceResourceInstanceArgs> resourceInstances) {
            return resourceInstances(Output.of(resourceInstances));
        }

        public Builder resourceInstances(GtmResourceResourceInstanceArgs... resourceInstances) {
            return resourceInstances(List.of(resourceInstances));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder upperBound(@Nullable Output<Integer> upperBound) {
            $.upperBound = upperBound;
            return this;
        }

        public Builder upperBound(Integer upperBound) {
            return upperBound(Output.of(upperBound));
        }

        public Builder waitOnComplete(@Nullable Output<Boolean> waitOnComplete) {
            $.waitOnComplete = waitOnComplete;
            return this;
        }

        public Builder waitOnComplete(Boolean waitOnComplete) {
            return waitOnComplete(Output.of(waitOnComplete));
        }

        public GtmResourceArgs build() {
            $.aggregationType = Objects.requireNonNull($.aggregationType, "expected parameter 'aggregationType' to be non-null");
            $.domain = Objects.requireNonNull($.domain, "expected parameter 'domain' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
