// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCpCodePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCpCodePlainArgs Empty = new GetCpCodePlainArgs();

    /**
     * Replaced by `contract_id`. Maintained for legacy purposes.
     * 
     * @deprecated
     * The setting &#34;contract&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""contract"" has been deprecated. */
    @Import(name="contract")
    private @Nullable String contract;

    /**
     * @return Replaced by `contract_id`. Maintained for legacy purposes.
     * 
     * @deprecated
     * The setting &#34;contract&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""contract"" has been deprecated. */
    public Optional<String> contract() {
        return Optional.ofNullable(this.contract);
    }

    /**
     * (Required) A contract&#39;s unique ID, including the `ctr_` prefix.
     * 
     */
    @Import(name="contractId")
    private @Nullable String contractId;

    /**
     * @return (Required) A contract&#39;s unique ID, including the `ctr_` prefix.
     * 
     */
    public Optional<String> contractId() {
        return Optional.ofNullable(this.contractId);
    }

    /**
     * Replaced by `group_id`. Maintained for legacy purposes.
     * 
     * @deprecated
     * The setting &#34;group&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""group"" has been deprecated. */
    @Import(name="group")
    private @Nullable String group;

    /**
     * @return Replaced by `group_id`. Maintained for legacy purposes.
     * 
     * @deprecated
     * The setting &#34;group&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""group"" has been deprecated. */
    public Optional<String> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * The group&#39;s unique ID, including the `grp_` prefix.
     * 
     */
    @Import(name="groupId")
    private @Nullable String groupId;

    /**
     * @return The group&#39;s unique ID, including the `grp_` prefix.
     * 
     */
    public Optional<String> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * The name of the CP code.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the CP code.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetCpCodePlainArgs() {}

    private GetCpCodePlainArgs(GetCpCodePlainArgs $) {
        this.contract = $.contract;
        this.contractId = $.contractId;
        this.group = $.group;
        this.groupId = $.groupId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCpCodePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCpCodePlainArgs $;

        public Builder() {
            $ = new GetCpCodePlainArgs();
        }

        public Builder(GetCpCodePlainArgs defaults) {
            $ = new GetCpCodePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contract Replaced by `contract_id`. Maintained for legacy purposes.
         * 
         * @return builder
         * 
         * @deprecated
         * The setting &#34;contract&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""contract"" has been deprecated. */
        public Builder contract(@Nullable String contract) {
            $.contract = contract;
            return this;
        }

        /**
         * @param contractId (Required) A contract&#39;s unique ID, including the `ctr_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder contractId(@Nullable String contractId) {
            $.contractId = contractId;
            return this;
        }

        /**
         * @param group Replaced by `group_id`. Maintained for legacy purposes.
         * 
         * @return builder
         * 
         * @deprecated
         * The setting &#34;group&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""group"" has been deprecated. */
        public Builder group(@Nullable String group) {
            $.group = group;
            return this;
        }

        /**
         * @param groupId The group&#39;s unique ID, including the `grp_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable String groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param name The name of the CP code.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetCpCodePlainArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
