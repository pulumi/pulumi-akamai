// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetMtlskeystoreClientCertificateCurrent;
import com.pulumi.akamai.outputs.GetMtlskeystoreClientCertificatePrevious;
import com.pulumi.akamai.outputs.GetMtlskeystoreClientCertificateVersion;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMtlskeystoreClientCertificateResult {
    private Integer certificateId;
    private String certificateName;
    private String createdBy;
    private String createdDate;
    private GetMtlskeystoreClientCertificateCurrent current;
    private String geography;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean includeAssociatedProperties;
    private String keyAlgorithm;
    private List<String> notificationEmails;
    private GetMtlskeystoreClientCertificatePrevious previous;
    private String secureNetwork;
    private String signer;
    private String subject;
    private List<GetMtlskeystoreClientCertificateVersion> versions;

    private GetMtlskeystoreClientCertificateResult() {}
    public Integer certificateId() {
        return this.certificateId;
    }
    public String certificateName() {
        return this.certificateName;
    }
    public String createdBy() {
        return this.createdBy;
    }
    public String createdDate() {
        return this.createdDate;
    }
    public GetMtlskeystoreClientCertificateCurrent current() {
        return this.current;
    }
    public String geography() {
        return this.geography;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> includeAssociatedProperties() {
        return Optional.ofNullable(this.includeAssociatedProperties);
    }
    public String keyAlgorithm() {
        return this.keyAlgorithm;
    }
    public List<String> notificationEmails() {
        return this.notificationEmails;
    }
    public GetMtlskeystoreClientCertificatePrevious previous() {
        return this.previous;
    }
    public String secureNetwork() {
        return this.secureNetwork;
    }
    public String signer() {
        return this.signer;
    }
    public String subject() {
        return this.subject;
    }
    public List<GetMtlskeystoreClientCertificateVersion> versions() {
        return this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMtlskeystoreClientCertificateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer certificateId;
        private String certificateName;
        private String createdBy;
        private String createdDate;
        private GetMtlskeystoreClientCertificateCurrent current;
        private String geography;
        private String id;
        private @Nullable Boolean includeAssociatedProperties;
        private String keyAlgorithm;
        private List<String> notificationEmails;
        private GetMtlskeystoreClientCertificatePrevious previous;
        private String secureNetwork;
        private String signer;
        private String subject;
        private List<GetMtlskeystoreClientCertificateVersion> versions;
        public Builder() {}
        public Builder(GetMtlskeystoreClientCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateId = defaults.certificateId;
    	      this.certificateName = defaults.certificateName;
    	      this.createdBy = defaults.createdBy;
    	      this.createdDate = defaults.createdDate;
    	      this.current = defaults.current;
    	      this.geography = defaults.geography;
    	      this.id = defaults.id;
    	      this.includeAssociatedProperties = defaults.includeAssociatedProperties;
    	      this.keyAlgorithm = defaults.keyAlgorithm;
    	      this.notificationEmails = defaults.notificationEmails;
    	      this.previous = defaults.previous;
    	      this.secureNetwork = defaults.secureNetwork;
    	      this.signer = defaults.signer;
    	      this.subject = defaults.subject;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder certificateId(Integer certificateId) {
            if (certificateId == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "certificateId");
            }
            this.certificateId = certificateId;
            return this;
        }
        @CustomType.Setter
        public Builder certificateName(String certificateName) {
            if (certificateName == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "certificateName");
            }
            this.certificateName = certificateName;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            if (createdDate == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "createdDate");
            }
            this.createdDate = createdDate;
            return this;
        }
        @CustomType.Setter
        public Builder current(GetMtlskeystoreClientCertificateCurrent current) {
            if (current == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "current");
            }
            this.current = current;
            return this;
        }
        @CustomType.Setter
        public Builder geography(String geography) {
            if (geography == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "geography");
            }
            this.geography = geography;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includeAssociatedProperties(@Nullable Boolean includeAssociatedProperties) {

            this.includeAssociatedProperties = includeAssociatedProperties;
            return this;
        }
        @CustomType.Setter
        public Builder keyAlgorithm(String keyAlgorithm) {
            if (keyAlgorithm == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "keyAlgorithm");
            }
            this.keyAlgorithm = keyAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder notificationEmails(List<String> notificationEmails) {
            if (notificationEmails == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "notificationEmails");
            }
            this.notificationEmails = notificationEmails;
            return this;
        }
        public Builder notificationEmails(String... notificationEmails) {
            return notificationEmails(List.of(notificationEmails));
        }
        @CustomType.Setter
        public Builder previous(GetMtlskeystoreClientCertificatePrevious previous) {
            if (previous == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "previous");
            }
            this.previous = previous;
            return this;
        }
        @CustomType.Setter
        public Builder secureNetwork(String secureNetwork) {
            if (secureNetwork == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "secureNetwork");
            }
            this.secureNetwork = secureNetwork;
            return this;
        }
        @CustomType.Setter
        public Builder signer(String signer) {
            if (signer == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "signer");
            }
            this.signer = signer;
            return this;
        }
        @CustomType.Setter
        public Builder subject(String subject) {
            if (subject == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "subject");
            }
            this.subject = subject;
            return this;
        }
        @CustomType.Setter
        public Builder versions(List<GetMtlskeystoreClientCertificateVersion> versions) {
            if (versions == null) {
              throw new MissingRequiredPropertyException("GetMtlskeystoreClientCertificateResult", "versions");
            }
            this.versions = versions;
            return this;
        }
        public Builder versions(GetMtlskeystoreClientCertificateVersion... versions) {
            return versions(List.of(versions));
        }
        public GetMtlskeystoreClientCertificateResult build() {
            final var _resultValue = new GetMtlskeystoreClientCertificateResult();
            _resultValue.certificateId = certificateId;
            _resultValue.certificateName = certificateName;
            _resultValue.createdBy = createdBy;
            _resultValue.createdDate = createdDate;
            _resultValue.current = current;
            _resultValue.geography = geography;
            _resultValue.id = id;
            _resultValue.includeAssociatedProperties = includeAssociatedProperties;
            _resultValue.keyAlgorithm = keyAlgorithm;
            _resultValue.notificationEmails = notificationEmails;
            _resultValue.previous = previous;
            _resultValue.secureNetwork = secureNetwork;
            _resultValue.signer = signer;
            _resultValue.subject = subject;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
