// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationAppend;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationAspectCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationBackgroundColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationBlur;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationChromaKey;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationComposite;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationContrast;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFaceCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFeatureCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFitAndFill;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationGoop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationGrayscale;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationHsl;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationHsv;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationIfDimension;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationIfOrientation;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationImQuery;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMaxColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMirror;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMonoHue;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationOpacity;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRegionOfInterestCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRelativeCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRemoveColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationResize;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRotate;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationScale;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationShears;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationTrim;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationUnsharpMask;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation();

    @Import(name="appends")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationAppend> appends;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationAppend>> appends() {
        return Optional.ofNullable(this.appends);
    }

    @Import(name="aspectCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationAspectCrop> aspectCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationAspectCrop>> aspectCrops() {
        return Optional.ofNullable(this.aspectCrops);
    }

    @Import(name="backgroundColors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationBackgroundColor> backgroundColors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationBackgroundColor>> backgroundColors() {
        return Optional.ofNullable(this.backgroundColors);
    }

    @Import(name="blurs")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationBlur> blurs;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationBlur>> blurs() {
        return Optional.ofNullable(this.blurs);
    }

    @Import(name="chromaKeys")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationChromaKey> chromaKeys;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationChromaKey>> chromaKeys() {
        return Optional.ofNullable(this.chromaKeys);
    }

    @Import(name="composites")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationComposite> composites;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationComposite>> composites() {
        return Optional.ofNullable(this.composites);
    }

    @Import(name="compounds")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound> compounds;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound>> compounds() {
        return Optional.ofNullable(this.compounds);
    }

    @Import(name="contrasts")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationContrast> contrasts;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationContrast>> contrasts() {
        return Optional.ofNullable(this.contrasts);
    }

    @Import(name="crops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCrop> crops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCrop>> crops() {
        return Optional.ofNullable(this.crops);
    }

    @Import(name="faceCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFaceCrop> faceCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFaceCrop>> faceCrops() {
        return Optional.ofNullable(this.faceCrops);
    }

    @Import(name="featureCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFeatureCrop> featureCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFeatureCrop>> featureCrops() {
        return Optional.ofNullable(this.featureCrops);
    }

    @Import(name="fitAndFills")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFitAndFill> fitAndFills;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFitAndFill>> fitAndFills() {
        return Optional.ofNullable(this.fitAndFills);
    }

    @Import(name="goops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationGoop> goops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationGoop>> goops() {
        return Optional.ofNullable(this.goops);
    }

    @Import(name="grayscales")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationGrayscale> grayscales;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationGrayscale>> grayscales() {
        return Optional.ofNullable(this.grayscales);
    }

    @Import(name="hsls")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationHsl> hsls;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationHsl>> hsls() {
        return Optional.ofNullable(this.hsls);
    }

    @Import(name="hsvs")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationHsv> hsvs;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationHsv>> hsvs() {
        return Optional.ofNullable(this.hsvs);
    }

    @Import(name="ifDimensions")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationIfDimension> ifDimensions;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationIfDimension>> ifDimensions() {
        return Optional.ofNullable(this.ifDimensions);
    }

    @Import(name="ifOrientations")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationIfOrientation> ifOrientations;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationIfOrientation>> ifOrientations() {
        return Optional.ofNullable(this.ifOrientations);
    }

    @Import(name="imQueries")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationImQuery> imQueries;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationImQuery>> imQueries() {
        return Optional.ofNullable(this.imQueries);
    }

    @Import(name="maxColors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMaxColor> maxColors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMaxColor>> maxColors() {
        return Optional.ofNullable(this.maxColors);
    }

    @Import(name="mirrors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMirror> mirrors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMirror>> mirrors() {
        return Optional.ofNullable(this.mirrors);
    }

    @Import(name="monoHues")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMonoHue> monoHues;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMonoHue>> monoHues() {
        return Optional.ofNullable(this.monoHues);
    }

    @Import(name="opacities")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationOpacity> opacities;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationOpacity>> opacities() {
        return Optional.ofNullable(this.opacities);
    }

    @Import(name="regionOfInterestCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRegionOfInterestCrop> regionOfInterestCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRegionOfInterestCrop>> regionOfInterestCrops() {
        return Optional.ofNullable(this.regionOfInterestCrops);
    }

    @Import(name="relativeCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRelativeCrop> relativeCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRelativeCrop>> relativeCrops() {
        return Optional.ofNullable(this.relativeCrops);
    }

    @Import(name="removeColors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRemoveColor> removeColors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRemoveColor>> removeColors() {
        return Optional.ofNullable(this.removeColors);
    }

    @Import(name="resizes")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationResize> resizes;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationResize>> resizes() {
        return Optional.ofNullable(this.resizes);
    }

    @Import(name="rotates")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRotate> rotates;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRotate>> rotates() {
        return Optional.ofNullable(this.rotates);
    }

    @Import(name="scales")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationScale> scales;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationScale>> scales() {
        return Optional.ofNullable(this.scales);
    }

    @Import(name="shears")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationShears> shears;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationShears>> shears() {
        return Optional.ofNullable(this.shears);
    }

    @Import(name="trims")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationTrim> trims;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationTrim>> trims() {
        return Optional.ofNullable(this.trims);
    }

    @Import(name="unsharpMasks")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationUnsharpMask> unsharpMasks;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationUnsharpMask>> unsharpMasks() {
        return Optional.ofNullable(this.unsharpMasks);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation $) {
        this.appends = $.appends;
        this.aspectCrops = $.aspectCrops;
        this.backgroundColors = $.backgroundColors;
        this.blurs = $.blurs;
        this.chromaKeys = $.chromaKeys;
        this.composites = $.composites;
        this.compounds = $.compounds;
        this.contrasts = $.contrasts;
        this.crops = $.crops;
        this.faceCrops = $.faceCrops;
        this.featureCrops = $.featureCrops;
        this.fitAndFills = $.fitAndFills;
        this.goops = $.goops;
        this.grayscales = $.grayscales;
        this.hsls = $.hsls;
        this.hsvs = $.hsvs;
        this.ifDimensions = $.ifDimensions;
        this.ifOrientations = $.ifOrientations;
        this.imQueries = $.imQueries;
        this.maxColors = $.maxColors;
        this.mirrors = $.mirrors;
        this.monoHues = $.monoHues;
        this.opacities = $.opacities;
        this.regionOfInterestCrops = $.regionOfInterestCrops;
        this.relativeCrops = $.relativeCrops;
        this.removeColors = $.removeColors;
        this.resizes = $.resizes;
        this.rotates = $.rotates;
        this.scales = $.scales;
        this.shears = $.shears;
        this.trims = $.trims;
        this.unsharpMasks = $.unsharpMasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation(Objects.requireNonNull(defaults));
        }

        public Builder appends(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationAppend> appends) {
            $.appends = appends;
            return this;
        }

        public Builder appends(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationAppend... appends) {
            return appends(List.of(appends));
        }

        public Builder aspectCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationAspectCrop> aspectCrops) {
            $.aspectCrops = aspectCrops;
            return this;
        }

        public Builder aspectCrops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationAspectCrop... aspectCrops) {
            return aspectCrops(List.of(aspectCrops));
        }

        public Builder backgroundColors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationBackgroundColor> backgroundColors) {
            $.backgroundColors = backgroundColors;
            return this;
        }

        public Builder backgroundColors(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationBackgroundColor... backgroundColors) {
            return backgroundColors(List.of(backgroundColors));
        }

        public Builder blurs(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationBlur> blurs) {
            $.blurs = blurs;
            return this;
        }

        public Builder blurs(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationBlur... blurs) {
            return blurs(List.of(blurs));
        }

        public Builder chromaKeys(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationChromaKey> chromaKeys) {
            $.chromaKeys = chromaKeys;
            return this;
        }

        public Builder chromaKeys(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationChromaKey... chromaKeys) {
            return chromaKeys(List.of(chromaKeys));
        }

        public Builder composites(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationComposite> composites) {
            $.composites = composites;
            return this;
        }

        public Builder composites(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationComposite... composites) {
            return composites(List.of(composites));
        }

        public Builder compounds(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound> compounds) {
            $.compounds = compounds;
            return this;
        }

        public Builder compounds(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound... compounds) {
            return compounds(List.of(compounds));
        }

        public Builder contrasts(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationContrast> contrasts) {
            $.contrasts = contrasts;
            return this;
        }

        public Builder contrasts(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationContrast... contrasts) {
            return contrasts(List.of(contrasts));
        }

        public Builder crops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCrop> crops) {
            $.crops = crops;
            return this;
        }

        public Builder crops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCrop... crops) {
            return crops(List.of(crops));
        }

        public Builder faceCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFaceCrop> faceCrops) {
            $.faceCrops = faceCrops;
            return this;
        }

        public Builder faceCrops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFaceCrop... faceCrops) {
            return faceCrops(List.of(faceCrops));
        }

        public Builder featureCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFeatureCrop> featureCrops) {
            $.featureCrops = featureCrops;
            return this;
        }

        public Builder featureCrops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFeatureCrop... featureCrops) {
            return featureCrops(List.of(featureCrops));
        }

        public Builder fitAndFills(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFitAndFill> fitAndFills) {
            $.fitAndFills = fitAndFills;
            return this;
        }

        public Builder fitAndFills(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationFitAndFill... fitAndFills) {
            return fitAndFills(List.of(fitAndFills));
        }

        public Builder goops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationGoop> goops) {
            $.goops = goops;
            return this;
        }

        public Builder goops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationGoop... goops) {
            return goops(List.of(goops));
        }

        public Builder grayscales(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationGrayscale> grayscales) {
            $.grayscales = grayscales;
            return this;
        }

        public Builder grayscales(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationGrayscale... grayscales) {
            return grayscales(List.of(grayscales));
        }

        public Builder hsls(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationHsl> hsls) {
            $.hsls = hsls;
            return this;
        }

        public Builder hsls(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationHsl... hsls) {
            return hsls(List.of(hsls));
        }

        public Builder hsvs(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationHsv> hsvs) {
            $.hsvs = hsvs;
            return this;
        }

        public Builder hsvs(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationHsv... hsvs) {
            return hsvs(List.of(hsvs));
        }

        public Builder ifDimensions(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationIfDimension> ifDimensions) {
            $.ifDimensions = ifDimensions;
            return this;
        }

        public Builder ifDimensions(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationIfDimension... ifDimensions) {
            return ifDimensions(List.of(ifDimensions));
        }

        public Builder ifOrientations(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationIfOrientation> ifOrientations) {
            $.ifOrientations = ifOrientations;
            return this;
        }

        public Builder ifOrientations(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationIfOrientation... ifOrientations) {
            return ifOrientations(List.of(ifOrientations));
        }

        public Builder imQueries(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationImQuery> imQueries) {
            $.imQueries = imQueries;
            return this;
        }

        public Builder imQueries(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationImQuery... imQueries) {
            return imQueries(List.of(imQueries));
        }

        public Builder maxColors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMaxColor> maxColors) {
            $.maxColors = maxColors;
            return this;
        }

        public Builder maxColors(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMaxColor... maxColors) {
            return maxColors(List.of(maxColors));
        }

        public Builder mirrors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMirror> mirrors) {
            $.mirrors = mirrors;
            return this;
        }

        public Builder mirrors(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMirror... mirrors) {
            return mirrors(List.of(mirrors));
        }

        public Builder monoHues(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMonoHue> monoHues) {
            $.monoHues = monoHues;
            return this;
        }

        public Builder monoHues(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationMonoHue... monoHues) {
            return monoHues(List.of(monoHues));
        }

        public Builder opacities(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationOpacity> opacities) {
            $.opacities = opacities;
            return this;
        }

        public Builder opacities(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationOpacity... opacities) {
            return opacities(List.of(opacities));
        }

        public Builder regionOfInterestCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRegionOfInterestCrop> regionOfInterestCrops) {
            $.regionOfInterestCrops = regionOfInterestCrops;
            return this;
        }

        public Builder regionOfInterestCrops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRegionOfInterestCrop... regionOfInterestCrops) {
            return regionOfInterestCrops(List.of(regionOfInterestCrops));
        }

        public Builder relativeCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRelativeCrop> relativeCrops) {
            $.relativeCrops = relativeCrops;
            return this;
        }

        public Builder relativeCrops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRelativeCrop... relativeCrops) {
            return relativeCrops(List.of(relativeCrops));
        }

        public Builder removeColors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRemoveColor> removeColors) {
            $.removeColors = removeColors;
            return this;
        }

        public Builder removeColors(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRemoveColor... removeColors) {
            return removeColors(List.of(removeColors));
        }

        public Builder resizes(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationResize> resizes) {
            $.resizes = resizes;
            return this;
        }

        public Builder resizes(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationResize... resizes) {
            return resizes(List.of(resizes));
        }

        public Builder rotates(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRotate> rotates) {
            $.rotates = rotates;
            return this;
        }

        public Builder rotates(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationRotate... rotates) {
            return rotates(List.of(rotates));
        }

        public Builder scales(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationScale> scales) {
            $.scales = scales;
            return this;
        }

        public Builder scales(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationScale... scales) {
            return scales(List.of(scales));
        }

        public Builder shears(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationShears> shears) {
            $.shears = shears;
            return this;
        }

        public Builder shears(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationShears... shears) {
            return shears(List.of(shears));
        }

        public Builder trims(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationTrim> trims) {
            $.trims = trims;
            return this;
        }

        public Builder trims(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationTrim... trims) {
            return trims(List.of(trims));
        }

        public Builder unsharpMasks(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationUnsharpMask> unsharpMasks) {
            $.unsharpMasks = unsharpMasks;
            return this;
        }

        public Builder unsharpMasks(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationUnsharpMask... unsharpMasks) {
            return unsharpMasks(List.of(unsharpMasks));
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformation build() {
            return $;
        }
    }

}
