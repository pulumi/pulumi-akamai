// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyBreakpointsArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyOutputArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyVariableArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyArgs Empty = new GetImagingPolicyImagePolicyArgs();

    @Import(name="breakpoints")
    private @Nullable Output<GetImagingPolicyImagePolicyBreakpointsArgs> breakpoints;

    public Optional<Output<GetImagingPolicyImagePolicyBreakpointsArgs>> breakpoints() {
        return Optional.ofNullable(this.breakpoints);
    }

    @Import(name="hosts")
    private @Nullable Output<List<String>> hosts;

    public Optional<Output<List<String>>> hosts() {
        return Optional.ofNullable(this.hosts);
    }

    @Import(name="output")
    private @Nullable Output<GetImagingPolicyImagePolicyOutputArgs> output;

    public Optional<Output<GetImagingPolicyImagePolicyOutputArgs>> output() {
        return Optional.ofNullable(this.output);
    }

    @Import(name="postBreakpointTransformations")
    private @Nullable Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationArgs>> postBreakpointTransformations;

    public Optional<Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationArgs>>> postBreakpointTransformations() {
        return Optional.ofNullable(this.postBreakpointTransformations);
    }

    @Import(name="rolloutDuration")
    private @Nullable Output<String> rolloutDuration;

    public Optional<Output<String>> rolloutDuration() {
        return Optional.ofNullable(this.rolloutDuration);
    }

    @Import(name="transformations")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationArgs>> transformations;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationArgs>>> transformations() {
        return Optional.ofNullable(this.transformations);
    }

    @Import(name="variables")
    private @Nullable Output<List<GetImagingPolicyImagePolicyVariableArgs>> variables;

    public Optional<Output<List<GetImagingPolicyImagePolicyVariableArgs>>> variables() {
        return Optional.ofNullable(this.variables);
    }

    private GetImagingPolicyImagePolicyArgs() {}

    private GetImagingPolicyImagePolicyArgs(GetImagingPolicyImagePolicyArgs $) {
        this.breakpoints = $.breakpoints;
        this.hosts = $.hosts;
        this.output = $.output;
        this.postBreakpointTransformations = $.postBreakpointTransformations;
        this.rolloutDuration = $.rolloutDuration;
        this.transformations = $.transformations;
        this.variables = $.variables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyArgs();
        }

        public Builder(GetImagingPolicyImagePolicyArgs defaults) {
            $ = new GetImagingPolicyImagePolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder breakpoints(@Nullable Output<GetImagingPolicyImagePolicyBreakpointsArgs> breakpoints) {
            $.breakpoints = breakpoints;
            return this;
        }

        public Builder breakpoints(GetImagingPolicyImagePolicyBreakpointsArgs breakpoints) {
            return breakpoints(Output.of(breakpoints));
        }

        public Builder hosts(@Nullable Output<List<String>> hosts) {
            $.hosts = hosts;
            return this;
        }

        public Builder hosts(List<String> hosts) {
            return hosts(Output.of(hosts));
        }

        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }

        public Builder output(@Nullable Output<GetImagingPolicyImagePolicyOutputArgs> output) {
            $.output = output;
            return this;
        }

        public Builder output(GetImagingPolicyImagePolicyOutputArgs output) {
            return output(Output.of(output));
        }

        public Builder postBreakpointTransformations(@Nullable Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationArgs>> postBreakpointTransformations) {
            $.postBreakpointTransformations = postBreakpointTransformations;
            return this;
        }

        public Builder postBreakpointTransformations(List<GetImagingPolicyImagePolicyPostBreakpointTransformationArgs> postBreakpointTransformations) {
            return postBreakpointTransformations(Output.of(postBreakpointTransformations));
        }

        public Builder postBreakpointTransformations(GetImagingPolicyImagePolicyPostBreakpointTransformationArgs... postBreakpointTransformations) {
            return postBreakpointTransformations(List.of(postBreakpointTransformations));
        }

        public Builder rolloutDuration(@Nullable Output<String> rolloutDuration) {
            $.rolloutDuration = rolloutDuration;
            return this;
        }

        public Builder rolloutDuration(String rolloutDuration) {
            return rolloutDuration(Output.of(rolloutDuration));
        }

        public Builder transformations(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationArgs>> transformations) {
            $.transformations = transformations;
            return this;
        }

        public Builder transformations(List<GetImagingPolicyImagePolicyTransformationArgs> transformations) {
            return transformations(Output.of(transformations));
        }

        public Builder transformations(GetImagingPolicyImagePolicyTransformationArgs... transformations) {
            return transformations(List.of(transformations));
        }

        public Builder variables(@Nullable Output<List<GetImagingPolicyImagePolicyVariableArgs>> variables) {
            $.variables = variables;
            return this;
        }

        public Builder variables(List<GetImagingPolicyImagePolicyVariableArgs> variables) {
            return variables(Output.of(variables));
        }

        public Builder variables(GetImagingPolicyImagePolicyVariableArgs... variables) {
            return variables(List.of(variables));
        }

        public GetImagingPolicyImagePolicyArgs build() {
            return $;
        }
    }

}
