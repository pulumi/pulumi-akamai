// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs Empty = new GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs();

    /**
     * This specifies the set of cookies names whose values you want to log.
     * 
     */
    @Import(name="cookies")
    private @Nullable Output<List<String>> cookies;

    /**
     * @return This specifies the set of cookies names whose values you want to log.
     * 
     */
    public Optional<Output<List<String>>> cookies() {
        return Optional.ofNullable(this.cookies);
    }

    /**
     * Specifies an additional data field to append to each log line, maximum 1000 bytes, typically based on a dynamically generated built-in system variable. For example, `round-trip: {{builtin.AK_CLIENT_TURNAROUND_TIME}}ms` logs the total time to complete the response. See `Support for variables` for more information. If you enable the `logCustom` behavior, it overrides the `customLogField` option.
     * 
     */
    @Import(name="customLogField")
    private @Nullable Output<String> customLogField;

    /**
     * @return Specifies an additional data field to append to each log line, maximum 1000 bytes, typically based on a dynamically generated built-in system variable. For example, `round-trip: {{builtin.AK_CLIENT_TURNAROUND_TIME}}ms` logs the total time to complete the response. See `Support for variables` for more information. If you enable the `logCustom` behavior, it overrides the `customLogField` option.
     * 
     */
    public Optional<Output<String>> customLogField() {
        return Optional.ofNullable(this.customLogField);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Log the `Accept-Language` header.
     * 
     */
    @Import(name="logAcceptLanguage")
    private @Nullable Output<Boolean> logAcceptLanguage;

    /**
     * @return Log the `Accept-Language` header.
     * 
     */
    public Optional<Output<Boolean>> logAcceptLanguage() {
        return Optional.ofNullable(this.logAcceptLanguage);
    }

    /**
     * Specifies the set of cookies to log.
     * 
     */
    @Import(name="logCookies")
    private @Nullable Output<String> logCookies;

    /**
     * @return Specifies the set of cookies to log.
     * 
     */
    public Optional<Output<String>> logCookies() {
        return Optional.ofNullable(this.logCookies);
    }

    /**
     * Whether to append additional custom data to each log line.
     * 
     */
    @Import(name="logCustomLogField")
    private @Nullable Output<Boolean> logCustomLogField;

    /**
     * @return Whether to append additional custom data to each log line.
     * 
     */
    public Optional<Output<Boolean>> logCustomLogField() {
        return Optional.ofNullable(this.logCustomLogField);
    }

    /**
     * Whether to log the IP address of the Akamai edge server that served the response to the client.
     * 
     */
    @Import(name="logEdgeIp")
    private @Nullable Output<Boolean> logEdgeIp;

    /**
     * @return Whether to log the IP address of the Akamai edge server that served the response to the client.
     * 
     */
    public Optional<Output<Boolean>> logEdgeIp() {
        return Optional.ofNullable(this.logEdgeIp);
    }

    /**
     * Log the `Host` header.
     * 
     */
    @Import(name="logHost")
    private @Nullable Output<Boolean> logHost;

    /**
     * @return Log the `Host` header.
     * 
     */
    public Optional<Output<Boolean>> logHost() {
        return Optional.ofNullable(this.logHost);
    }

    /**
     * Log the `Referer` header.
     * 
     */
    @Import(name="logReferer")
    private @Nullable Output<Boolean> logReferer;

    /**
     * @return Log the `Referer` header.
     * 
     */
    public Optional<Output<Boolean>> logReferer() {
        return Optional.ofNullable(this.logReferer);
    }

    /**
     * Log the `User-Agent` header.
     * 
     */
    @Import(name="logUserAgent")
    private @Nullable Output<Boolean> logUserAgent;

    /**
     * @return Log the `User-Agent` header.
     * 
     */
    public Optional<Output<Boolean>> logUserAgent() {
        return Optional.ofNullable(this.logUserAgent);
    }

    /**
     * Log any `X-Forwarded-For` request header.
     * 
     */
    @Import(name="logXForwardedFor")
    private @Nullable Output<Boolean> logXForwardedFor;

    /**
     * @return Log any `X-Forwarded-For` request header.
     * 
     */
    public Optional<Output<Boolean>> logXForwardedFor() {
        return Optional.ofNullable(this.logXForwardedFor);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs() {}

    private GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs(GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs $) {
        this.cookies = $.cookies;
        this.customLogField = $.customLogField;
        this.locked = $.locked;
        this.logAcceptLanguage = $.logAcceptLanguage;
        this.logCookies = $.logCookies;
        this.logCustomLogField = $.logCustomLogField;
        this.logEdgeIp = $.logEdgeIp;
        this.logHost = $.logHost;
        this.logReferer = $.logReferer;
        this.logUserAgent = $.logUserAgent;
        this.logXForwardedFor = $.logXForwardedFor;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cookies This specifies the set of cookies names whose values you want to log.
         * 
         * @return builder
         * 
         */
        public Builder cookies(@Nullable Output<List<String>> cookies) {
            $.cookies = cookies;
            return this;
        }

        /**
         * @param cookies This specifies the set of cookies names whose values you want to log.
         * 
         * @return builder
         * 
         */
        public Builder cookies(List<String> cookies) {
            return cookies(Output.of(cookies));
        }

        /**
         * @param cookies This specifies the set of cookies names whose values you want to log.
         * 
         * @return builder
         * 
         */
        public Builder cookies(String... cookies) {
            return cookies(List.of(cookies));
        }

        /**
         * @param customLogField Specifies an additional data field to append to each log line, maximum 1000 bytes, typically based on a dynamically generated built-in system variable. For example, `round-trip: {{builtin.AK_CLIENT_TURNAROUND_TIME}}ms` logs the total time to complete the response. See `Support for variables` for more information. If you enable the `logCustom` behavior, it overrides the `customLogField` option.
         * 
         * @return builder
         * 
         */
        public Builder customLogField(@Nullable Output<String> customLogField) {
            $.customLogField = customLogField;
            return this;
        }

        /**
         * @param customLogField Specifies an additional data field to append to each log line, maximum 1000 bytes, typically based on a dynamically generated built-in system variable. For example, `round-trip: {{builtin.AK_CLIENT_TURNAROUND_TIME}}ms` logs the total time to complete the response. See `Support for variables` for more information. If you enable the `logCustom` behavior, it overrides the `customLogField` option.
         * 
         * @return builder
         * 
         */
        public Builder customLogField(String customLogField) {
            return customLogField(Output.of(customLogField));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param logAcceptLanguage Log the `Accept-Language` header.
         * 
         * @return builder
         * 
         */
        public Builder logAcceptLanguage(@Nullable Output<Boolean> logAcceptLanguage) {
            $.logAcceptLanguage = logAcceptLanguage;
            return this;
        }

        /**
         * @param logAcceptLanguage Log the `Accept-Language` header.
         * 
         * @return builder
         * 
         */
        public Builder logAcceptLanguage(Boolean logAcceptLanguage) {
            return logAcceptLanguage(Output.of(logAcceptLanguage));
        }

        /**
         * @param logCookies Specifies the set of cookies to log.
         * 
         * @return builder
         * 
         */
        public Builder logCookies(@Nullable Output<String> logCookies) {
            $.logCookies = logCookies;
            return this;
        }

        /**
         * @param logCookies Specifies the set of cookies to log.
         * 
         * @return builder
         * 
         */
        public Builder logCookies(String logCookies) {
            return logCookies(Output.of(logCookies));
        }

        /**
         * @param logCustomLogField Whether to append additional custom data to each log line.
         * 
         * @return builder
         * 
         */
        public Builder logCustomLogField(@Nullable Output<Boolean> logCustomLogField) {
            $.logCustomLogField = logCustomLogField;
            return this;
        }

        /**
         * @param logCustomLogField Whether to append additional custom data to each log line.
         * 
         * @return builder
         * 
         */
        public Builder logCustomLogField(Boolean logCustomLogField) {
            return logCustomLogField(Output.of(logCustomLogField));
        }

        /**
         * @param logEdgeIp Whether to log the IP address of the Akamai edge server that served the response to the client.
         * 
         * @return builder
         * 
         */
        public Builder logEdgeIp(@Nullable Output<Boolean> logEdgeIp) {
            $.logEdgeIp = logEdgeIp;
            return this;
        }

        /**
         * @param logEdgeIp Whether to log the IP address of the Akamai edge server that served the response to the client.
         * 
         * @return builder
         * 
         */
        public Builder logEdgeIp(Boolean logEdgeIp) {
            return logEdgeIp(Output.of(logEdgeIp));
        }

        /**
         * @param logHost Log the `Host` header.
         * 
         * @return builder
         * 
         */
        public Builder logHost(@Nullable Output<Boolean> logHost) {
            $.logHost = logHost;
            return this;
        }

        /**
         * @param logHost Log the `Host` header.
         * 
         * @return builder
         * 
         */
        public Builder logHost(Boolean logHost) {
            return logHost(Output.of(logHost));
        }

        /**
         * @param logReferer Log the `Referer` header.
         * 
         * @return builder
         * 
         */
        public Builder logReferer(@Nullable Output<Boolean> logReferer) {
            $.logReferer = logReferer;
            return this;
        }

        /**
         * @param logReferer Log the `Referer` header.
         * 
         * @return builder
         * 
         */
        public Builder logReferer(Boolean logReferer) {
            return logReferer(Output.of(logReferer));
        }

        /**
         * @param logUserAgent Log the `User-Agent` header.
         * 
         * @return builder
         * 
         */
        public Builder logUserAgent(@Nullable Output<Boolean> logUserAgent) {
            $.logUserAgent = logUserAgent;
            return this;
        }

        /**
         * @param logUserAgent Log the `User-Agent` header.
         * 
         * @return builder
         * 
         */
        public Builder logUserAgent(Boolean logUserAgent) {
            return logUserAgent(Output.of(logUserAgent));
        }

        /**
         * @param logXForwardedFor Log any `X-Forwarded-For` request header.
         * 
         * @return builder
         * 
         */
        public Builder logXForwardedFor(@Nullable Output<Boolean> logXForwardedFor) {
            $.logXForwardedFor = logXForwardedFor;
            return this;
        }

        /**
         * @param logXForwardedFor Log any `X-Forwarded-For` request header.
         * 
         * @return builder
         * 
         */
        public Builder logXForwardedFor(Boolean logXForwardedFor) {
            return logXForwardedFor(Output.of(logXForwardedFor));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20241021BehaviorReportArgs build() {
            return $;
        }
    }

}
