// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs Empty = new GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs();

    /**
     * If set to true, disables a rule so it is not evaluated against incoming requests.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return If set to true, disables a rule so it is not evaluated against incoming requests.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * The end time for this match (in seconds since the epoch)
     * 
     */
    @Import(name="end")
    private @Nullable Output<Integer> end;

    /**
     * @return The end time for this match (in seconds since the epoch)
     * 
     */
    public Optional<Output<Integer>> end() {
        return Optional.ofNullable(this.end);
    }

    /**
     * If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request
     * 
     */
    @Import(name="matchUrl")
    private @Nullable Output<String> matchUrl;

    /**
     * @return If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request
     * 
     */
    public Optional<Output<String>> matchUrl() {
        return Optional.ofNullable(this.matchUrl);
    }

    /**
     * Defines a set of match objects
     * 
     */
    @Import(name="matches")
    private @Nullable Output<List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs>> matches;

    /**
     * @return Defines a set of match objects
     * 
     */
    public Optional<Output<List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs>>> matches() {
        return Optional.ofNullable(this.matches);
    }

    /**
     * Is used in some cloudlets to support default rules (rule that is always matched)
     * 
     */
    @Import(name="matchesAlways")
    private @Nullable Output<Boolean> matchesAlways;

    /**
     * @return Is used in some cloudlets to support default rules (rule that is always matched)
     * 
     */
    public Optional<Output<Boolean>> matchesAlways() {
        return Optional.ofNullable(this.matchesAlways);
    }

    /**
     * The name of the rule
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the rule
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The URL Edge Redirector redirects the request to. If using use_relative_url, you can enter a path for the value
     * 
     */
    @Import(name="redirectUrl", required=true)
    private Output<String> redirectUrl;

    /**
     * @return The URL Edge Redirector redirects the request to. If using use_relative_url, you can enter a path for the value
     * 
     */
    public Output<String> redirectUrl() {
        return this.redirectUrl;
    }

    /**
     * The start time for this match (in seconds since the epoch)
     * 
     */
    @Import(name="start")
    private @Nullable Output<Integer> start;

    /**
     * @return The start time for this match (in seconds since the epoch)
     * 
     */
    public Optional<Output<Integer>> start() {
        return Optional.ofNullable(this.start);
    }

    /**
     * The HTTP response status code (allowed values: 301, 302, 303, 307, 308)
     * 
     */
    @Import(name="statusCode", required=true)
    private Output<Integer> statusCode;

    /**
     * @return The HTTP response status code (allowed values: 301, 302, 303, 307, 308)
     * 
     */
    public Output<Integer> statusCode() {
        return this.statusCode;
    }

    /**
     * The type of Cloudlet the rule is for
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of Cloudlet the rule is for
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL
     * 
     */
    @Import(name="useIncomingQueryString")
    private @Nullable Output<Boolean> useIncomingQueryString;

    /**
     * @return If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL
     * 
     */
    public Optional<Output<Boolean>> useIncomingQueryString() {
        return Optional.ofNullable(this.useIncomingQueryString);
    }

    /**
     * If set to relative_url, takes the path entered for the redirectUrl and sets it in the response’s Location header. If set to copy_scheme_hostname, creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the redirectUrl. If this property is not included, or is set to none, then the redirect_url should be fully-qualified URL
     * 
     */
    @Import(name="useRelativeUrl")
    private @Nullable Output<String> useRelativeUrl;

    /**
     * @return If set to relative_url, takes the path entered for the redirectUrl and sets it in the response’s Location header. If set to copy_scheme_hostname, creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the redirectUrl. If this property is not included, or is set to none, then the redirect_url should be fully-qualified URL
     * 
     */
    public Optional<Output<String>> useRelativeUrl() {
        return Optional.ofNullable(this.useRelativeUrl);
    }

    private GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs() {}

    private GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs(GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs $) {
        this.disabled = $.disabled;
        this.end = $.end;
        this.matchUrl = $.matchUrl;
        this.matches = $.matches;
        this.matchesAlways = $.matchesAlways;
        this.name = $.name;
        this.redirectUrl = $.redirectUrl;
        this.start = $.start;
        this.statusCode = $.statusCode;
        this.type = $.type;
        this.useIncomingQueryString = $.useIncomingQueryString;
        this.useRelativeUrl = $.useRelativeUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs $;

        public Builder() {
            $ = new GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs();
        }

        public Builder(GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs defaults) {
            $ = new GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disabled If set to true, disables a rule so it is not evaluated against incoming requests.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled If set to true, disables a rule so it is not evaluated against incoming requests.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param end The end time for this match (in seconds since the epoch)
         * 
         * @return builder
         * 
         */
        public Builder end(@Nullable Output<Integer> end) {
            $.end = end;
            return this;
        }

        /**
         * @param end The end time for this match (in seconds since the epoch)
         * 
         * @return builder
         * 
         */
        public Builder end(Integer end) {
            return end(Output.of(end));
        }

        /**
         * @param matchUrl If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request
         * 
         * @return builder
         * 
         */
        public Builder matchUrl(@Nullable Output<String> matchUrl) {
            $.matchUrl = matchUrl;
            return this;
        }

        /**
         * @param matchUrl If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request
         * 
         * @return builder
         * 
         */
        public Builder matchUrl(String matchUrl) {
            return matchUrl(Output.of(matchUrl));
        }

        /**
         * @param matches Defines a set of match objects
         * 
         * @return builder
         * 
         */
        public Builder matches(@Nullable Output<List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs>> matches) {
            $.matches = matches;
            return this;
        }

        /**
         * @param matches Defines a set of match objects
         * 
         * @return builder
         * 
         */
        public Builder matches(List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs> matches) {
            return matches(Output.of(matches));
        }

        /**
         * @param matches Defines a set of match objects
         * 
         * @return builder
         * 
         */
        public Builder matches(GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs... matches) {
            return matches(List.of(matches));
        }

        /**
         * @param matchesAlways Is used in some cloudlets to support default rules (rule that is always matched)
         * 
         * @return builder
         * 
         */
        public Builder matchesAlways(@Nullable Output<Boolean> matchesAlways) {
            $.matchesAlways = matchesAlways;
            return this;
        }

        /**
         * @param matchesAlways Is used in some cloudlets to support default rules (rule that is always matched)
         * 
         * @return builder
         * 
         */
        public Builder matchesAlways(Boolean matchesAlways) {
            return matchesAlways(Output.of(matchesAlways));
        }

        /**
         * @param name The name of the rule
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the rule
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param redirectUrl The URL Edge Redirector redirects the request to. If using use_relative_url, you can enter a path for the value
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(Output<String> redirectUrl) {
            $.redirectUrl = redirectUrl;
            return this;
        }

        /**
         * @param redirectUrl The URL Edge Redirector redirects the request to. If using use_relative_url, you can enter a path for the value
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(String redirectUrl) {
            return redirectUrl(Output.of(redirectUrl));
        }

        /**
         * @param start The start time for this match (in seconds since the epoch)
         * 
         * @return builder
         * 
         */
        public Builder start(@Nullable Output<Integer> start) {
            $.start = start;
            return this;
        }

        /**
         * @param start The start time for this match (in seconds since the epoch)
         * 
         * @return builder
         * 
         */
        public Builder start(Integer start) {
            return start(Output.of(start));
        }

        /**
         * @param statusCode The HTTP response status code (allowed values: 301, 302, 303, 307, 308)
         * 
         * @return builder
         * 
         */
        public Builder statusCode(Output<Integer> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        /**
         * @param statusCode The HTTP response status code (allowed values: 301, 302, 303, 307, 308)
         * 
         * @return builder
         * 
         */
        public Builder statusCode(Integer statusCode) {
            return statusCode(Output.of(statusCode));
        }

        /**
         * @param type The type of Cloudlet the rule is for
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of Cloudlet the rule is for
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param useIncomingQueryString If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL
         * 
         * @return builder
         * 
         */
        public Builder useIncomingQueryString(@Nullable Output<Boolean> useIncomingQueryString) {
            $.useIncomingQueryString = useIncomingQueryString;
            return this;
        }

        /**
         * @param useIncomingQueryString If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL
         * 
         * @return builder
         * 
         */
        public Builder useIncomingQueryString(Boolean useIncomingQueryString) {
            return useIncomingQueryString(Output.of(useIncomingQueryString));
        }

        /**
         * @param useRelativeUrl If set to relative_url, takes the path entered for the redirectUrl and sets it in the response’s Location header. If set to copy_scheme_hostname, creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the redirectUrl. If this property is not included, or is set to none, then the redirect_url should be fully-qualified URL
         * 
         * @return builder
         * 
         */
        public Builder useRelativeUrl(@Nullable Output<String> useRelativeUrl) {
            $.useRelativeUrl = useRelativeUrl;
            return this;
        }

        /**
         * @param useRelativeUrl If set to relative_url, takes the path entered for the redirectUrl and sets it in the response’s Location header. If set to copy_scheme_hostname, creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the redirectUrl. If this property is not included, or is set to none, then the redirect_url should be fully-qualified URL
         * 
         * @return builder
         * 
         */
        public Builder useRelativeUrl(String useRelativeUrl) {
            return useRelativeUrl(Output.of(useRelativeUrl));
        }

        public GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs build() {
            if ($.redirectUrl == null) {
                throw new MissingRequiredPropertyException("GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs", "redirectUrl");
            }
            if ($.statusCode == null) {
                throw new MissingRequiredPropertyException("GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs", "statusCode");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs", "type");
            }
            return $;
        }
    }

}
