// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs Empty = new GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs();

    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    @Import(name="end")
    private @Nullable Output<Integer> end;

    public Optional<Output<Integer>> end() {
        return Optional.ofNullable(this.end);
    }

    @Import(name="matchUrl")
    private @Nullable Output<String> matchUrl;

    public Optional<Output<String>> matchUrl() {
        return Optional.ofNullable(this.matchUrl);
    }

    @Import(name="matches")
    private @Nullable Output<List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs>> matches;

    public Optional<Output<List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs>>> matches() {
        return Optional.ofNullable(this.matches);
    }

    @Import(name="matchesAlways")
    private @Nullable Output<Boolean> matchesAlways;

    public Optional<Output<Boolean>> matchesAlways() {
        return Optional.ofNullable(this.matchesAlways);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="redirectUrl", required=true)
    private Output<String> redirectUrl;

    public Output<String> redirectUrl() {
        return this.redirectUrl;
    }

    @Import(name="start")
    private @Nullable Output<Integer> start;

    public Optional<Output<Integer>> start() {
        return Optional.ofNullable(this.start);
    }

    @Import(name="statusCode", required=true)
    private Output<Integer> statusCode;

    public Output<Integer> statusCode() {
        return this.statusCode;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="useIncomingQueryString")
    private @Nullable Output<Boolean> useIncomingQueryString;

    public Optional<Output<Boolean>> useIncomingQueryString() {
        return Optional.ofNullable(this.useIncomingQueryString);
    }

    @Import(name="useRelativeUrl")
    private @Nullable Output<String> useRelativeUrl;

    public Optional<Output<String>> useRelativeUrl() {
        return Optional.ofNullable(this.useRelativeUrl);
    }

    private GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs() {}

    private GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs(GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs $) {
        this.disabled = $.disabled;
        this.end = $.end;
        this.matchUrl = $.matchUrl;
        this.matches = $.matches;
        this.matchesAlways = $.matchesAlways;
        this.name = $.name;
        this.redirectUrl = $.redirectUrl;
        this.start = $.start;
        this.statusCode = $.statusCode;
        this.type = $.type;
        this.useIncomingQueryString = $.useIncomingQueryString;
        this.useRelativeUrl = $.useRelativeUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs $;

        public Builder() {
            $ = new GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs();
        }

        public Builder(GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs defaults) {
            $ = new GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        public Builder end(@Nullable Output<Integer> end) {
            $.end = end;
            return this;
        }

        public Builder end(Integer end) {
            return end(Output.of(end));
        }

        public Builder matchUrl(@Nullable Output<String> matchUrl) {
            $.matchUrl = matchUrl;
            return this;
        }

        public Builder matchUrl(String matchUrl) {
            return matchUrl(Output.of(matchUrl));
        }

        public Builder matches(@Nullable Output<List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs>> matches) {
            $.matches = matches;
            return this;
        }

        public Builder matches(List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs> matches) {
            return matches(Output.of(matches));
        }

        public Builder matches(GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatchArgs... matches) {
            return matches(List.of(matches));
        }

        public Builder matchesAlways(@Nullable Output<Boolean> matchesAlways) {
            $.matchesAlways = matchesAlways;
            return this;
        }

        public Builder matchesAlways(Boolean matchesAlways) {
            return matchesAlways(Output.of(matchesAlways));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder redirectUrl(Output<String> redirectUrl) {
            $.redirectUrl = redirectUrl;
            return this;
        }

        public Builder redirectUrl(String redirectUrl) {
            return redirectUrl(Output.of(redirectUrl));
        }

        public Builder start(@Nullable Output<Integer> start) {
            $.start = start;
            return this;
        }

        public Builder start(Integer start) {
            return start(Output.of(start));
        }

        public Builder statusCode(Output<Integer> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public Builder statusCode(Integer statusCode) {
            return statusCode(Output.of(statusCode));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder useIncomingQueryString(@Nullable Output<Boolean> useIncomingQueryString) {
            $.useIncomingQueryString = useIncomingQueryString;
            return this;
        }

        public Builder useIncomingQueryString(Boolean useIncomingQueryString) {
            return useIncomingQueryString(Output.of(useIncomingQueryString));
        }

        public Builder useRelativeUrl(@Nullable Output<String> useRelativeUrl) {
            $.useRelativeUrl = useRelativeUrl;
            return this;
        }

        public Builder useRelativeUrl(String useRelativeUrl) {
            return useRelativeUrl(Output.of(useRelativeUrl));
        }

        public GetCloudletsEdgeRedirectorMatchRuleMatchRuleArgs build() {
            $.redirectUrl = Objects.requireNonNull($.redirectUrl, "expected parameter 'redirectUrl' to be non-null");
            $.statusCode = Objects.requireNonNull($.statusCode, "expected parameter 'statusCode' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
