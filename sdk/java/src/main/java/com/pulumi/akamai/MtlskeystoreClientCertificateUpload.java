// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.MtlskeystoreClientCertificateUploadArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.MtlskeystoreClientCertificateUploadState;
import com.pulumi.akamai.outputs.MtlskeystoreClientCertificateUploadTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="akamai:index/mtlskeystoreClientCertificateUpload:MtlskeystoreClientCertificateUpload")
public class MtlskeystoreClientCertificateUpload extends com.pulumi.resources.CustomResource {
    /**
     * If set to true, all warnings will be acknowledged automatically. Defaults to `false`.
     * 
     */
    @Export(name="autoAcknowledgeWarnings", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> autoAcknowledgeWarnings;

    /**
     * @return If set to true, all warnings will be acknowledged automatically. Defaults to `false`.
     * 
     */
    public Output<Boolean> autoAcknowledgeWarnings() {
        return this.autoAcknowledgeWarnings;
    }
    /**
     * The ID of the client certificate to which the signed certificate will be uploaded.
     * 
     */
    @Export(name="clientCertificateId", refs={Integer.class}, tree="[0]")
    private Output<Integer> clientCertificateId;

    /**
     * @return The ID of the client certificate to which the signed certificate will be uploaded.
     * 
     */
    public Output<Integer> clientCertificateId() {
        return this.clientCertificateId;
    }
    /**
     * The signed certificate to upload.
     * 
     */
    @Export(name="signedCertificate", refs={String.class}, tree="[0]")
    private Output<String> signedCertificate;

    /**
     * @return The signed certificate to upload.
     * 
     */
    public Output<String> signedCertificate() {
        return this.signedCertificate;
    }
    @Export(name="timeouts", refs={MtlskeystoreClientCertificateUploadTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ MtlskeystoreClientCertificateUploadTimeouts> timeouts;

    public Output<Optional<MtlskeystoreClientCertificateUploadTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }
    /**
     * The optional trust chain associated with the signed certificate.
     * 
     */
    @Export(name="trustChain", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> trustChain;

    /**
     * @return The optional trust chain associated with the signed certificate.
     * 
     */
    public Output<Optional<String>> trustChain() {
        return Codegen.optional(this.trustChain);
    }
    /**
     * A unique identifier for the client certificate version.
     * 
     */
    @Export(name="versionGuid", refs={String.class}, tree="[0]")
    private Output<String> versionGuid;

    /**
     * @return A unique identifier for the client certificate version.
     * 
     */
    public Output<String> versionGuid() {
        return this.versionGuid;
    }
    /**
     * The version number of the client certificate to upload the signed certificate to.
     * 
     */
    @Export(name="versionNumber", refs={Integer.class}, tree="[0]")
    private Output<Integer> versionNumber;

    /**
     * @return The version number of the client certificate to upload the signed certificate to.
     * 
     */
    public Output<Integer> versionNumber() {
        return this.versionNumber;
    }
    /**
     * Indicates whether to wait for the deployment of the uploaded certificate. Defaults to `true`.
     * 
     */
    @Export(name="waitForDeployment", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> waitForDeployment;

    /**
     * @return Indicates whether to wait for the deployment of the uploaded certificate. Defaults to `true`.
     * 
     */
    public Output<Boolean> waitForDeployment() {
        return this.waitForDeployment;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MtlskeystoreClientCertificateUpload(java.lang.String name) {
        this(name, MtlskeystoreClientCertificateUploadArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MtlskeystoreClientCertificateUpload(java.lang.String name, MtlskeystoreClientCertificateUploadArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MtlskeystoreClientCertificateUpload(java.lang.String name, MtlskeystoreClientCertificateUploadArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/mtlskeystoreClientCertificateUpload:MtlskeystoreClientCertificateUpload", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MtlskeystoreClientCertificateUpload(java.lang.String name, Output<java.lang.String> id, @Nullable MtlskeystoreClientCertificateUploadState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/mtlskeystoreClientCertificateUpload:MtlskeystoreClientCertificateUpload", name, state, makeResourceOptions(options, id), false);
    }

    private static MtlskeystoreClientCertificateUploadArgs makeArgs(MtlskeystoreClientCertificateUploadArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MtlskeystoreClientCertificateUploadArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MtlskeystoreClientCertificateUpload get(java.lang.String name, Output<java.lang.String> id, @Nullable MtlskeystoreClientCertificateUploadState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MtlskeystoreClientCertificateUpload(name, id, state, options);
    }
}
