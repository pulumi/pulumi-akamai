// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecIPGeoState extends com.pulumi.resources.ResourceArgs {

    public static final AppSecIPGeoState Empty = new AppSecIPGeoState();

    /**
     * List of IDs of ASN network list to be blocked
     * 
     */
    @Import(name="asnNetworkLists")
    private @Nullable Output<List<String>> asnNetworkLists;

    /**
     * @return List of IDs of ASN network list to be blocked
     * 
     */
    public Optional<Output<List<String>>> asnNetworkLists() {
        return Optional.ofNullable(this.asnNetworkLists);
    }

    /**
     * Unique identifier of the security configuration
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return Unique identifier of the security configuration
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * List of IDs of network list that are always allowed
     * 
     */
    @Import(name="exceptionIpNetworkLists")
    private @Nullable Output<List<String>> exceptionIpNetworkLists;

    /**
     * @return List of IDs of network list that are always allowed
     * 
     */
    public Optional<Output<List<String>>> exceptionIpNetworkLists() {
        return Optional.ofNullable(this.exceptionIpNetworkLists);
    }

    /**
     * List of IDs of geographic network list to be blocked
     * 
     */
    @Import(name="geoNetworkLists")
    private @Nullable Output<List<String>> geoNetworkLists;

    /**
     * @return List of IDs of geographic network list to be blocked
     * 
     */
    public Optional<Output<List<String>>> geoNetworkLists() {
        return Optional.ofNullable(this.geoNetworkLists);
    }

    /**
     * List of IDs of IP network list to be blocked
     * 
     */
    @Import(name="ipNetworkLists")
    private @Nullable Output<List<String>> ipNetworkLists;

    /**
     * @return List of IDs of IP network list to be blocked
     * 
     */
    public Optional<Output<List<String>>> ipNetworkLists() {
        return Optional.ofNullable(this.ipNetworkLists);
    }

    /**
     * Protection mode (block or allow)
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return Protection mode (block or allow)
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Unique identifier of the security policy
     * 
     */
    @Import(name="securityPolicyId")
    private @Nullable Output<String> securityPolicyId;

    /**
     * @return Unique identifier of the security policy
     * 
     */
    public Optional<Output<String>> securityPolicyId() {
        return Optional.ofNullable(this.securityPolicyId);
    }

    /**
     * Action set for Ukraine geo control
     * 
     */
    @Import(name="ukraineGeoControlAction")
    private @Nullable Output<String> ukraineGeoControlAction;

    /**
     * @return Action set for Ukraine geo control
     * 
     */
    public Optional<Output<String>> ukraineGeoControlAction() {
        return Optional.ofNullable(this.ukraineGeoControlAction);
    }

    private AppSecIPGeoState() {}

    private AppSecIPGeoState(AppSecIPGeoState $) {
        this.asnNetworkLists = $.asnNetworkLists;
        this.configId = $.configId;
        this.exceptionIpNetworkLists = $.exceptionIpNetworkLists;
        this.geoNetworkLists = $.geoNetworkLists;
        this.ipNetworkLists = $.ipNetworkLists;
        this.mode = $.mode;
        this.securityPolicyId = $.securityPolicyId;
        this.ukraineGeoControlAction = $.ukraineGeoControlAction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecIPGeoState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecIPGeoState $;

        public Builder() {
            $ = new AppSecIPGeoState();
        }

        public Builder(AppSecIPGeoState defaults) {
            $ = new AppSecIPGeoState(Objects.requireNonNull(defaults));
        }

        /**
         * @param asnNetworkLists List of IDs of ASN network list to be blocked
         * 
         * @return builder
         * 
         */
        public Builder asnNetworkLists(@Nullable Output<List<String>> asnNetworkLists) {
            $.asnNetworkLists = asnNetworkLists;
            return this;
        }

        /**
         * @param asnNetworkLists List of IDs of ASN network list to be blocked
         * 
         * @return builder
         * 
         */
        public Builder asnNetworkLists(List<String> asnNetworkLists) {
            return asnNetworkLists(Output.of(asnNetworkLists));
        }

        /**
         * @param asnNetworkLists List of IDs of ASN network list to be blocked
         * 
         * @return builder
         * 
         */
        public Builder asnNetworkLists(String... asnNetworkLists) {
            return asnNetworkLists(List.of(asnNetworkLists));
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param exceptionIpNetworkLists List of IDs of network list that are always allowed
         * 
         * @return builder
         * 
         */
        public Builder exceptionIpNetworkLists(@Nullable Output<List<String>> exceptionIpNetworkLists) {
            $.exceptionIpNetworkLists = exceptionIpNetworkLists;
            return this;
        }

        /**
         * @param exceptionIpNetworkLists List of IDs of network list that are always allowed
         * 
         * @return builder
         * 
         */
        public Builder exceptionIpNetworkLists(List<String> exceptionIpNetworkLists) {
            return exceptionIpNetworkLists(Output.of(exceptionIpNetworkLists));
        }

        /**
         * @param exceptionIpNetworkLists List of IDs of network list that are always allowed
         * 
         * @return builder
         * 
         */
        public Builder exceptionIpNetworkLists(String... exceptionIpNetworkLists) {
            return exceptionIpNetworkLists(List.of(exceptionIpNetworkLists));
        }

        /**
         * @param geoNetworkLists List of IDs of geographic network list to be blocked
         * 
         * @return builder
         * 
         */
        public Builder geoNetworkLists(@Nullable Output<List<String>> geoNetworkLists) {
            $.geoNetworkLists = geoNetworkLists;
            return this;
        }

        /**
         * @param geoNetworkLists List of IDs of geographic network list to be blocked
         * 
         * @return builder
         * 
         */
        public Builder geoNetworkLists(List<String> geoNetworkLists) {
            return geoNetworkLists(Output.of(geoNetworkLists));
        }

        /**
         * @param geoNetworkLists List of IDs of geographic network list to be blocked
         * 
         * @return builder
         * 
         */
        public Builder geoNetworkLists(String... geoNetworkLists) {
            return geoNetworkLists(List.of(geoNetworkLists));
        }

        /**
         * @param ipNetworkLists List of IDs of IP network list to be blocked
         * 
         * @return builder
         * 
         */
        public Builder ipNetworkLists(@Nullable Output<List<String>> ipNetworkLists) {
            $.ipNetworkLists = ipNetworkLists;
            return this;
        }

        /**
         * @param ipNetworkLists List of IDs of IP network list to be blocked
         * 
         * @return builder
         * 
         */
        public Builder ipNetworkLists(List<String> ipNetworkLists) {
            return ipNetworkLists(Output.of(ipNetworkLists));
        }

        /**
         * @param ipNetworkLists List of IDs of IP network list to be blocked
         * 
         * @return builder
         * 
         */
        public Builder ipNetworkLists(String... ipNetworkLists) {
            return ipNetworkLists(List.of(ipNetworkLists));
        }

        /**
         * @param mode Protection mode (block or allow)
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Protection mode (block or allow)
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(@Nullable Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        /**
         * @param ukraineGeoControlAction Action set for Ukraine geo control
         * 
         * @return builder
         * 
         */
        public Builder ukraineGeoControlAction(@Nullable Output<String> ukraineGeoControlAction) {
            $.ukraineGeoControlAction = ukraineGeoControlAction;
            return this;
        }

        /**
         * @param ukraineGeoControlAction Action set for Ukraine geo control
         * 
         * @return builder
         * 
         */
        public Builder ukraineGeoControlAction(String ukraineGeoControlAction) {
            return ukraineGeoControlAction(Output.of(ukraineGeoControlAction));
        }

        public AppSecIPGeoState build() {
            return $;
        }
    }

}
