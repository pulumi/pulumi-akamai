// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop Empty = new GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop();

    @Import(name="algorithm")
    private @Nullable String algorithm;

    public Optional<String> algorithm() {
        return Optional.ofNullable(this.algorithm);
    }

    @Import(name="algorithmVar")
    private @Nullable String algorithmVar;

    public Optional<String> algorithmVar() {
        return Optional.ofNullable(this.algorithmVar);
    }

    @Import(name="confidence")
    private @Nullable String confidence;

    public Optional<String> confidence() {
        return Optional.ofNullable(this.confidence);
    }

    @Import(name="confidenceVar")
    private @Nullable String confidenceVar;

    public Optional<String> confidenceVar() {
        return Optional.ofNullable(this.confidenceVar);
    }

    @Import(name="failGravity")
    private @Nullable String failGravity;

    public Optional<String> failGravity() {
        return Optional.ofNullable(this.failGravity);
    }

    @Import(name="failGravityVar")
    private @Nullable String failGravityVar;

    public Optional<String> failGravityVar() {
        return Optional.ofNullable(this.failGravityVar);
    }

    @Import(name="focus")
    private @Nullable String focus;

    public Optional<String> focus() {
        return Optional.ofNullable(this.focus);
    }

    @Import(name="focusVar")
    private @Nullable String focusVar;

    public Optional<String> focusVar() {
        return Optional.ofNullable(this.focusVar);
    }

    @Import(name="gravity")
    private @Nullable String gravity;

    public Optional<String> gravity() {
        return Optional.ofNullable(this.gravity);
    }

    @Import(name="gravityVar")
    private @Nullable String gravityVar;

    public Optional<String> gravityVar() {
        return Optional.ofNullable(this.gravityVar);
    }

    @Import(name="height")
    private @Nullable String height;

    public Optional<String> height() {
        return Optional.ofNullable(this.height);
    }

    @Import(name="heightVar")
    private @Nullable String heightVar;

    public Optional<String> heightVar() {
        return Optional.ofNullable(this.heightVar);
    }

    @Import(name="padding")
    private @Nullable String padding;

    public Optional<String> padding() {
        return Optional.ofNullable(this.padding);
    }

    @Import(name="paddingVar")
    private @Nullable String paddingVar;

    public Optional<String> paddingVar() {
        return Optional.ofNullable(this.paddingVar);
    }

    @Import(name="style")
    private @Nullable String style;

    public Optional<String> style() {
        return Optional.ofNullable(this.style);
    }

    @Import(name="styleVar")
    private @Nullable String styleVar;

    public Optional<String> styleVar() {
        return Optional.ofNullable(this.styleVar);
    }

    @Import(name="width")
    private @Nullable String width;

    public Optional<String> width() {
        return Optional.ofNullable(this.width);
    }

    @Import(name="widthVar")
    private @Nullable String widthVar;

    public Optional<String> widthVar() {
        return Optional.ofNullable(this.widthVar);
    }

    private GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop() {}

    private GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop(GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop $) {
        this.algorithm = $.algorithm;
        this.algorithmVar = $.algorithmVar;
        this.confidence = $.confidence;
        this.confidenceVar = $.confidenceVar;
        this.failGravity = $.failGravity;
        this.failGravityVar = $.failGravityVar;
        this.focus = $.focus;
        this.focusVar = $.focusVar;
        this.gravity = $.gravity;
        this.gravityVar = $.gravityVar;
        this.height = $.height;
        this.heightVar = $.heightVar;
        this.padding = $.padding;
        this.paddingVar = $.paddingVar;
        this.style = $.style;
        this.styleVar = $.styleVar;
        this.width = $.width;
        this.widthVar = $.widthVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop(Objects.requireNonNull(defaults));
        }

        public Builder algorithm(@Nullable String algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        public Builder algorithmVar(@Nullable String algorithmVar) {
            $.algorithmVar = algorithmVar;
            return this;
        }

        public Builder confidence(@Nullable String confidence) {
            $.confidence = confidence;
            return this;
        }

        public Builder confidenceVar(@Nullable String confidenceVar) {
            $.confidenceVar = confidenceVar;
            return this;
        }

        public Builder failGravity(@Nullable String failGravity) {
            $.failGravity = failGravity;
            return this;
        }

        public Builder failGravityVar(@Nullable String failGravityVar) {
            $.failGravityVar = failGravityVar;
            return this;
        }

        public Builder focus(@Nullable String focus) {
            $.focus = focus;
            return this;
        }

        public Builder focusVar(@Nullable String focusVar) {
            $.focusVar = focusVar;
            return this;
        }

        public Builder gravity(@Nullable String gravity) {
            $.gravity = gravity;
            return this;
        }

        public Builder gravityVar(@Nullable String gravityVar) {
            $.gravityVar = gravityVar;
            return this;
        }

        public Builder height(@Nullable String height) {
            $.height = height;
            return this;
        }

        public Builder heightVar(@Nullable String heightVar) {
            $.heightVar = heightVar;
            return this;
        }

        public Builder padding(@Nullable String padding) {
            $.padding = padding;
            return this;
        }

        public Builder paddingVar(@Nullable String paddingVar) {
            $.paddingVar = paddingVar;
            return this;
        }

        public Builder style(@Nullable String style) {
            $.style = style;
            return this;
        }

        public Builder styleVar(@Nullable String styleVar) {
            $.styleVar = styleVar;
            return this;
        }

        public Builder width(@Nullable String width) {
            $.width = width;
            return this;
        }

        public Builder widthVar(@Nullable String widthVar) {
            $.widthVar = widthVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationCompositeImageCircleImageTransformationFaceCrop build() {
            return $;
        }
    }

}
