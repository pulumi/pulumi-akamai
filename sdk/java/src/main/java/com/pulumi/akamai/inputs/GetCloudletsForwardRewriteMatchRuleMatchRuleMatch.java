// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudletsForwardRewriteMatchRuleMatchRuleMatch extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudletsForwardRewriteMatchRuleMatchRuleMatch Empty = new GetCloudletsForwardRewriteMatchRuleMatchRuleMatch();

    /**
     * (Optional) Whether the match is case sensitive.
     * 
     */
    @Import(name="caseSensitive")
    private @Nullable Boolean caseSensitive;

    /**
     * @return (Optional) Whether the match is case sensitive.
     * 
     */
    public Optional<Boolean> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }

    /**
     * (Optional) For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, this defines the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the X_Forwarded_For header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When both values are included, the connecting IP address is evaluated first.
     * 
     */
    @Import(name="checkIps")
    private @Nullable String checkIps;

    /**
     * @return (Optional) For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, this defines the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the X_Forwarded_For header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When both values are included, the connecting IP address is evaluated first.
     * 
     */
    public Optional<String> checkIps() {
        return Optional.ofNullable(this.checkIps);
    }

    /**
     * (Optional) Compares a string expression with a pattern, either `contains`, `exists`, or `equals`.
     * 
     */
    @Import(name="matchOperator")
    private @Nullable String matchOperator;

    /**
     * @return (Optional) Compares a string expression with a pattern, either `contains`, `exists`, or `equals`.
     * 
     */
    public Optional<String> matchOperator() {
        return Optional.ofNullable(this.matchOperator);
    }

    /**
     * (Optional) The type of match used, either `header`, `hostname`, `path`, `extension`, `query`, `regex`, `cookie`, `deviceCharacteristics`, `clientip`, `continent`, `countrycode`, `regioncode`, `protocol`, `method`, or `proxy`.
     * 
     */
    @Import(name="matchType")
    private @Nullable String matchType;

    /**
     * @return (Optional) The type of match used, either `header`, `hostname`, `path`, `extension`, `query`, `regex`, `cookie`, `deviceCharacteristics`, `clientip`, `continent`, `countrycode`, `regioncode`, `protocol`, `method`, or `proxy`.
     * 
     */
    public Optional<String> matchType() {
        return Optional.ofNullable(this.matchType);
    }

    /**
     * (Optional) This depends on the `match_type`. If the `match_type` is `hostname`, then `match_value` is the fully qualified domain name, like `www.akamai.com`.
     * 
     */
    @Import(name="matchValue")
    private @Nullable String matchValue;

    /**
     * @return (Optional) This depends on the `match_type`. If the `match_type` is `hostname`, then `match_value` is the fully qualified domain name, like `www.akamai.com`.
     * 
     */
    public Optional<String> matchValue() {
        return Optional.ofNullable(this.matchValue);
    }

    /**
     * (Optional) Whether to negate the match.
     * 
     */
    @Import(name="negate")
    private @Nullable Boolean negate;

    /**
     * @return (Optional) Whether to negate the match.
     * 
     */
    public Optional<Boolean> negate() {
        return Optional.ofNullable(this.negate);
    }

    /**
     * (Optional) If `match_value` is empty, this argument is required. An object used when a rule includes more complex match criteria, like multiple value attributes. Includes these sub-arguments:
     * 
     */
    @Import(name="objectMatchValues")
    private @Nullable List<GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue> objectMatchValues;

    /**
     * @return (Optional) If `match_value` is empty, this argument is required. An object used when a rule includes more complex match criteria, like multiple value attributes. Includes these sub-arguments:
     * 
     */
    public Optional<List<GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue>> objectMatchValues() {
        return Optional.ofNullable(this.objectMatchValues);
    }

    private GetCloudletsForwardRewriteMatchRuleMatchRuleMatch() {}

    private GetCloudletsForwardRewriteMatchRuleMatchRuleMatch(GetCloudletsForwardRewriteMatchRuleMatchRuleMatch $) {
        this.caseSensitive = $.caseSensitive;
        this.checkIps = $.checkIps;
        this.matchOperator = $.matchOperator;
        this.matchType = $.matchType;
        this.matchValue = $.matchValue;
        this.negate = $.negate;
        this.objectMatchValues = $.objectMatchValues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudletsForwardRewriteMatchRuleMatchRuleMatch defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudletsForwardRewriteMatchRuleMatchRuleMatch $;

        public Builder() {
            $ = new GetCloudletsForwardRewriteMatchRuleMatchRuleMatch();
        }

        public Builder(GetCloudletsForwardRewriteMatchRuleMatchRuleMatch defaults) {
            $ = new GetCloudletsForwardRewriteMatchRuleMatchRuleMatch(Objects.requireNonNull(defaults));
        }

        /**
         * @param caseSensitive (Optional) Whether the match is case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder caseSensitive(@Nullable Boolean caseSensitive) {
            $.caseSensitive = caseSensitive;
            return this;
        }

        /**
         * @param checkIps (Optional) For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, this defines the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the X_Forwarded_For header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When both values are included, the connecting IP address is evaluated first.
         * 
         * @return builder
         * 
         */
        public Builder checkIps(@Nullable String checkIps) {
            $.checkIps = checkIps;
            return this;
        }

        /**
         * @param matchOperator (Optional) Compares a string expression with a pattern, either `contains`, `exists`, or `equals`.
         * 
         * @return builder
         * 
         */
        public Builder matchOperator(@Nullable String matchOperator) {
            $.matchOperator = matchOperator;
            return this;
        }

        /**
         * @param matchType (Optional) The type of match used, either `header`, `hostname`, `path`, `extension`, `query`, `regex`, `cookie`, `deviceCharacteristics`, `clientip`, `continent`, `countrycode`, `regioncode`, `protocol`, `method`, or `proxy`.
         * 
         * @return builder
         * 
         */
        public Builder matchType(@Nullable String matchType) {
            $.matchType = matchType;
            return this;
        }

        /**
         * @param matchValue (Optional) This depends on the `match_type`. If the `match_type` is `hostname`, then `match_value` is the fully qualified domain name, like `www.akamai.com`.
         * 
         * @return builder
         * 
         */
        public Builder matchValue(@Nullable String matchValue) {
            $.matchValue = matchValue;
            return this;
        }

        /**
         * @param negate (Optional) Whether to negate the match.
         * 
         * @return builder
         * 
         */
        public Builder negate(@Nullable Boolean negate) {
            $.negate = negate;
            return this;
        }

        /**
         * @param objectMatchValues (Optional) If `match_value` is empty, this argument is required. An object used when a rule includes more complex match criteria, like multiple value attributes. Includes these sub-arguments:
         * 
         * @return builder
         * 
         */
        public Builder objectMatchValues(@Nullable List<GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue> objectMatchValues) {
            $.objectMatchValues = objectMatchValues;
            return this;
        }

        /**
         * @param objectMatchValues (Optional) If `match_value` is empty, this argument is required. An object used when a rule includes more complex match criteria, like multiple value attributes. Includes these sub-arguments:
         * 
         * @return builder
         * 
         */
        public Builder objectMatchValues(GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue... objectMatchValues) {
            return objectMatchValues(List.of(objectMatchValues));
        }

        public GetCloudletsForwardRewriteMatchRuleMatchRuleMatch build() {
            return $;
        }
    }

}
