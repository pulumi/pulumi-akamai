// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs Empty = new GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs();

    /**
     * (Optional) Whether the match is case sensitive.
     * 
     */
    @Import(name="caseSensitive")
    private @Nullable Output<Boolean> caseSensitive;

    /**
     * @return (Optional) Whether the match is case sensitive.
     * 
     */
    public Optional<Output<Boolean>> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }

    /**
     * (Optional) For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, this defines the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the X_Forwarded_For header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When both values are included, the connecting IP address is evaluated first.
     * 
     */
    @Import(name="checkIps")
    private @Nullable Output<String> checkIps;

    /**
     * @return (Optional) For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, this defines the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the X_Forwarded_For header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When both values are included, the connecting IP address is evaluated first.
     * 
     */
    public Optional<Output<String>> checkIps() {
        return Optional.ofNullable(this.checkIps);
    }

    /**
     * (Optional) Compares a string expression with a pattern, either `contains`, `exists`, or `equals`.
     * 
     */
    @Import(name="matchOperator")
    private @Nullable Output<String> matchOperator;

    /**
     * @return (Optional) Compares a string expression with a pattern, either `contains`, `exists`, or `equals`.
     * 
     */
    public Optional<Output<String>> matchOperator() {
        return Optional.ofNullable(this.matchOperator);
    }

    /**
     * (Optional) The type of match used, either `header`, `hostname`, `path`, `extension`, `query`, `regex`, `cookie`, `deviceCharacteristics`, `clientip`, `continent`, `countrycode`, `regioncode`, `protocol`, `method`, or `proxy`.
     * 
     */
    @Import(name="matchType")
    private @Nullable Output<String> matchType;

    /**
     * @return (Optional) The type of match used, either `header`, `hostname`, `path`, `extension`, `query`, `regex`, `cookie`, `deviceCharacteristics`, `clientip`, `continent`, `countrycode`, `regioncode`, `protocol`, `method`, or `proxy`.
     * 
     */
    public Optional<Output<String>> matchType() {
        return Optional.ofNullable(this.matchType);
    }

    /**
     * (Optional) This depends on the `match_type`. If the `match_type` is `hostname`, then `match_value` is the fully qualified domain name, like `www.akamai.com`.
     * 
     */
    @Import(name="matchValue")
    private @Nullable Output<String> matchValue;

    /**
     * @return (Optional) This depends on the `match_type`. If the `match_type` is `hostname`, then `match_value` is the fully qualified domain name, like `www.akamai.com`.
     * 
     */
    public Optional<Output<String>> matchValue() {
        return Optional.ofNullable(this.matchValue);
    }

    /**
     * (Optional) Whether to negate the match.
     * 
     */
    @Import(name="negate")
    private @Nullable Output<Boolean> negate;

    /**
     * @return (Optional) Whether to negate the match.
     * 
     */
    public Optional<Output<Boolean>> negate() {
        return Optional.ofNullable(this.negate);
    }

    /**
     * (Optional) If `match_value` is empty, this argument is required. An object used when a rule includes more complex match criteria, like multiple value attributes. Includes these sub-arguments:
     * 
     */
    @Import(name="objectMatchValues")
    private @Nullable Output<List<GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs>> objectMatchValues;

    /**
     * @return (Optional) If `match_value` is empty, this argument is required. An object used when a rule includes more complex match criteria, like multiple value attributes. Includes these sub-arguments:
     * 
     */
    public Optional<Output<List<GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs>>> objectMatchValues() {
        return Optional.ofNullable(this.objectMatchValues);
    }

    private GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs() {}

    private GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs(GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs $) {
        this.caseSensitive = $.caseSensitive;
        this.checkIps = $.checkIps;
        this.matchOperator = $.matchOperator;
        this.matchType = $.matchType;
        this.matchValue = $.matchValue;
        this.negate = $.negate;
        this.objectMatchValues = $.objectMatchValues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs $;

        public Builder() {
            $ = new GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs();
        }

        public Builder(GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs defaults) {
            $ = new GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caseSensitive (Optional) Whether the match is case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder caseSensitive(@Nullable Output<Boolean> caseSensitive) {
            $.caseSensitive = caseSensitive;
            return this;
        }

        /**
         * @param caseSensitive (Optional) Whether the match is case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder caseSensitive(Boolean caseSensitive) {
            return caseSensitive(Output.of(caseSensitive));
        }

        /**
         * @param checkIps (Optional) For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, this defines the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the X_Forwarded_For header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When both values are included, the connecting IP address is evaluated first.
         * 
         * @return builder
         * 
         */
        public Builder checkIps(@Nullable Output<String> checkIps) {
            $.checkIps = checkIps;
            return this;
        }

        /**
         * @param checkIps (Optional) For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, this defines the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the X_Forwarded_For header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When both values are included, the connecting IP address is evaluated first.
         * 
         * @return builder
         * 
         */
        public Builder checkIps(String checkIps) {
            return checkIps(Output.of(checkIps));
        }

        /**
         * @param matchOperator (Optional) Compares a string expression with a pattern, either `contains`, `exists`, or `equals`.
         * 
         * @return builder
         * 
         */
        public Builder matchOperator(@Nullable Output<String> matchOperator) {
            $.matchOperator = matchOperator;
            return this;
        }

        /**
         * @param matchOperator (Optional) Compares a string expression with a pattern, either `contains`, `exists`, or `equals`.
         * 
         * @return builder
         * 
         */
        public Builder matchOperator(String matchOperator) {
            return matchOperator(Output.of(matchOperator));
        }

        /**
         * @param matchType (Optional) The type of match used, either `header`, `hostname`, `path`, `extension`, `query`, `regex`, `cookie`, `deviceCharacteristics`, `clientip`, `continent`, `countrycode`, `regioncode`, `protocol`, `method`, or `proxy`.
         * 
         * @return builder
         * 
         */
        public Builder matchType(@Nullable Output<String> matchType) {
            $.matchType = matchType;
            return this;
        }

        /**
         * @param matchType (Optional) The type of match used, either `header`, `hostname`, `path`, `extension`, `query`, `regex`, `cookie`, `deviceCharacteristics`, `clientip`, `continent`, `countrycode`, `regioncode`, `protocol`, `method`, or `proxy`.
         * 
         * @return builder
         * 
         */
        public Builder matchType(String matchType) {
            return matchType(Output.of(matchType));
        }

        /**
         * @param matchValue (Optional) This depends on the `match_type`. If the `match_type` is `hostname`, then `match_value` is the fully qualified domain name, like `www.akamai.com`.
         * 
         * @return builder
         * 
         */
        public Builder matchValue(@Nullable Output<String> matchValue) {
            $.matchValue = matchValue;
            return this;
        }

        /**
         * @param matchValue (Optional) This depends on the `match_type`. If the `match_type` is `hostname`, then `match_value` is the fully qualified domain name, like `www.akamai.com`.
         * 
         * @return builder
         * 
         */
        public Builder matchValue(String matchValue) {
            return matchValue(Output.of(matchValue));
        }

        /**
         * @param negate (Optional) Whether to negate the match.
         * 
         * @return builder
         * 
         */
        public Builder negate(@Nullable Output<Boolean> negate) {
            $.negate = negate;
            return this;
        }

        /**
         * @param negate (Optional) Whether to negate the match.
         * 
         * @return builder
         * 
         */
        public Builder negate(Boolean negate) {
            return negate(Output.of(negate));
        }

        /**
         * @param objectMatchValues (Optional) If `match_value` is empty, this argument is required. An object used when a rule includes more complex match criteria, like multiple value attributes. Includes these sub-arguments:
         * 
         * @return builder
         * 
         */
        public Builder objectMatchValues(@Nullable Output<List<GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs>> objectMatchValues) {
            $.objectMatchValues = objectMatchValues;
            return this;
        }

        /**
         * @param objectMatchValues (Optional) If `match_value` is empty, this argument is required. An object used when a rule includes more complex match criteria, like multiple value attributes. Includes these sub-arguments:
         * 
         * @return builder
         * 
         */
        public Builder objectMatchValues(List<GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs> objectMatchValues) {
            return objectMatchValues(Output.of(objectMatchValues));
        }

        /**
         * @param objectMatchValues (Optional) If `match_value` is empty, this argument is required. An object used when a rule includes more complex match criteria, like multiple value attributes. Includes these sub-arguments:
         * 
         * @return builder
         * 
         */
        public Builder objectMatchValues(GetCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueArgs... objectMatchValues) {
            return objectMatchValues(List.of(objectMatchValues));
        }

        public GetCloudletsForwardRewriteMatchRuleMatchRuleMatchArgs build() {
            return $;
        }
    }

}
