// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DnsZoneOutboundZoneTransferTsigKey {
    /**
     * @return The algorithm used to encode the TSIG key&#39;s secret data. Possible values are: hmac-md5, hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha384, hmac-sha512, or HMAC-MD5.SIG-ALG.REG.INT.
     * 
     */
    private String algorithm;
    /**
     * @return The zone name.
     * 
     */
    private String name;
    /**
     * @return A Base64-encoded string of data. When decoded, it needs to contain the correct number of bits for the chosen algorithm. If the input isn&#39;t correctly padded, the server applies the padding.
     * 
     */
    private String secret;

    private DnsZoneOutboundZoneTransferTsigKey() {}
    /**
     * @return The algorithm used to encode the TSIG key&#39;s secret data. Possible values are: hmac-md5, hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha384, hmac-sha512, or HMAC-MD5.SIG-ALG.REG.INT.
     * 
     */
    public String algorithm() {
        return this.algorithm;
    }
    /**
     * @return The zone name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A Base64-encoded string of data. When decoded, it needs to contain the correct number of bits for the chosen algorithm. If the input isn&#39;t correctly padded, the server applies the padding.
     * 
     */
    public String secret() {
        return this.secret;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DnsZoneOutboundZoneTransferTsigKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String algorithm;
        private String name;
        private String secret;
        public Builder() {}
        public Builder(DnsZoneOutboundZoneTransferTsigKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.name = defaults.name;
    	      this.secret = defaults.secret;
        }

        @CustomType.Setter
        public Builder algorithm(String algorithm) {
            if (algorithm == null) {
              throw new MissingRequiredPropertyException("DnsZoneOutboundZoneTransferTsigKey", "algorithm");
            }
            this.algorithm = algorithm;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("DnsZoneOutboundZoneTransferTsigKey", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder secret(String secret) {
            if (secret == null) {
              throw new MissingRequiredPropertyException("DnsZoneOutboundZoneTransferTsigKey", "secret");
            }
            this.secret = secret;
            return this;
        }
        public DnsZoneOutboundZoneTransferTsigKey build() {
            final var _resultValue = new DnsZoneOutboundZoneTransferTsigKey();
            _resultValue.algorithm = algorithm;
            _resultValue.name = name;
            _resultValue.secret = secret;
            return _resultValue;
        }
    }
}
