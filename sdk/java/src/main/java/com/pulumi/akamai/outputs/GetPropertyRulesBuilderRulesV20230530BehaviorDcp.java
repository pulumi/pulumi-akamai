// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230530BehaviorDcp {
    /**
     * @return When enabled, you don&#39;t need to pass the JWT token with the mqtt request, and JWT validation is skipped.
     * 
     */
    private @Nullable Boolean anonymous;
    /**
     * @return Enables IoT Edge Connect.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return When enabled, you can publish and receive messages over a secured HTTP connection on port 443.
     * 
     */
    private @Nullable Boolean gwenabled;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Specifies the globally reserved name for a specific configuration. It includes authorization rules over publishing and subscribing to logical categories known as `topics`. This provides a root path for all topics defined within a namespace configuration.  You can use the `IoT Edge Connect API` to configure access control lists for your namespace configuration.
     * 
     */
    private @Nullable String namespaceId;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return When enabled, you can publish and receive messages over a secured MQTT connection on port 8883.
     * 
     */
    private @Nullable Boolean tlsenabled;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;
    /**
     * @return When enabled, you can publish and receive messages through a secured MQTT connection over WebSockets on port 443.
     * 
     */
    private @Nullable Boolean wsenabled;

    private GetPropertyRulesBuilderRulesV20230530BehaviorDcp() {}
    /**
     * @return When enabled, you don&#39;t need to pass the JWT token with the mqtt request, and JWT validation is skipped.
     * 
     */
    public Optional<Boolean> anonymous() {
        return Optional.ofNullable(this.anonymous);
    }
    /**
     * @return Enables IoT Edge Connect.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return When enabled, you can publish and receive messages over a secured HTTP connection on port 443.
     * 
     */
    public Optional<Boolean> gwenabled() {
        return Optional.ofNullable(this.gwenabled);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Specifies the globally reserved name for a specific configuration. It includes authorization rules over publishing and subscribing to logical categories known as `topics`. This provides a root path for all topics defined within a namespace configuration.  You can use the `IoT Edge Connect API` to configure access control lists for your namespace configuration.
     * 
     */
    public Optional<String> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return When enabled, you can publish and receive messages over a secured MQTT connection on port 8883.
     * 
     */
    public Optional<Boolean> tlsenabled() {
        return Optional.ofNullable(this.tlsenabled);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }
    /**
     * @return When enabled, you can publish and receive messages through a secured MQTT connection over WebSockets on port 443.
     * 
     */
    public Optional<Boolean> wsenabled() {
        return Optional.ofNullable(this.wsenabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230530BehaviorDcp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean anonymous;
        private @Nullable Boolean enabled;
        private @Nullable Boolean gwenabled;
        private @Nullable Boolean locked;
        private @Nullable String namespaceId;
        private @Nullable String templateUuid;
        private @Nullable Boolean tlsenabled;
        private @Nullable String uuid;
        private @Nullable Boolean wsenabled;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230530BehaviorDcp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anonymous = defaults.anonymous;
    	      this.enabled = defaults.enabled;
    	      this.gwenabled = defaults.gwenabled;
    	      this.locked = defaults.locked;
    	      this.namespaceId = defaults.namespaceId;
    	      this.templateUuid = defaults.templateUuid;
    	      this.tlsenabled = defaults.tlsenabled;
    	      this.uuid = defaults.uuid;
    	      this.wsenabled = defaults.wsenabled;
        }

        @CustomType.Setter
        public Builder anonymous(@Nullable Boolean anonymous) {

            this.anonymous = anonymous;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder gwenabled(@Nullable Boolean gwenabled) {

            this.gwenabled = gwenabled;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceId(@Nullable String namespaceId) {

            this.namespaceId = namespaceId;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder tlsenabled(@Nullable Boolean tlsenabled) {

            this.tlsenabled = tlsenabled;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        @CustomType.Setter
        public Builder wsenabled(@Nullable Boolean wsenabled) {

            this.wsenabled = wsenabled;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230530BehaviorDcp build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230530BehaviorDcp();
            _resultValue.anonymous = anonymous;
            _resultValue.enabled = enabled;
            _resultValue.gwenabled = gwenabled;
            _resultValue.locked = locked;
            _resultValue.namespaceId = namespaceId;
            _resultValue.templateUuid = templateUuid;
            _resultValue.tlsenabled = tlsenabled;
            _resultValue.uuid = uuid;
            _resultValue.wsenabled = wsenabled;
            return _resultValue;
        }
    }
}
