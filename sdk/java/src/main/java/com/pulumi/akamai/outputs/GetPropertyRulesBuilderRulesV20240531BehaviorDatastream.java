// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20240531BehaviorDatastream {
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String beaconStreamTitle;
    /**
     * @return If enabled, gathers midgress traffic data within the Akamai platform, such as between two edge servers, for all streams configured.
     * 
     */
    private @Nullable Boolean collectMidgressTraffic;
    /**
     * @return A set of dash-separated DataStream ID values to limit the scope of reported data. By default, all active streams report. Use the DataStream application to gather stream ID values that apply to this property configuration. Specifying IDs for any streams that don&#39;t apply to this property has no effect, and results in no data reported.
     * 
     */
    private @Nullable String datastreamIds;
    /**
     * @return Enables DataStream reporting.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Enables log collection for the property by associating it with DataStream configurations.
     * 
     */
    private @Nullable Boolean logEnabled;
    /**
     * @return Specifies the unique IDs of streams configured for the property. For properties created with the previous version of the rule format, this option contains a string instead of an array of strings. You can use the `List streams` operation to get stream IDs.
     * 
     */
    private @Nullable List<String> logStreamNames;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String logStreamTitle;
    /**
     * @return Specifies the percentage of log data you want to collect for this property.
     * 
     */
    private @Nullable Integer samplingPercentage;
    /**
     * @return Specify the DataStream type.
     * 
     */
    private @Nullable String streamType;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20240531BehaviorDatastream() {}
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> beaconStreamTitle() {
        return Optional.ofNullable(this.beaconStreamTitle);
    }
    /**
     * @return If enabled, gathers midgress traffic data within the Akamai platform, such as between two edge servers, for all streams configured.
     * 
     */
    public Optional<Boolean> collectMidgressTraffic() {
        return Optional.ofNullable(this.collectMidgressTraffic);
    }
    /**
     * @return A set of dash-separated DataStream ID values to limit the scope of reported data. By default, all active streams report. Use the DataStream application to gather stream ID values that apply to this property configuration. Specifying IDs for any streams that don&#39;t apply to this property has no effect, and results in no data reported.
     * 
     */
    public Optional<String> datastreamIds() {
        return Optional.ofNullable(this.datastreamIds);
    }
    /**
     * @return Enables DataStream reporting.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Enables log collection for the property by associating it with DataStream configurations.
     * 
     */
    public Optional<Boolean> logEnabled() {
        return Optional.ofNullable(this.logEnabled);
    }
    /**
     * @return Specifies the unique IDs of streams configured for the property. For properties created with the previous version of the rule format, this option contains a string instead of an array of strings. You can use the `List streams` operation to get stream IDs.
     * 
     */
    public List<String> logStreamNames() {
        return this.logStreamNames == null ? List.of() : this.logStreamNames;
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> logStreamTitle() {
        return Optional.ofNullable(this.logStreamTitle);
    }
    /**
     * @return Specifies the percentage of log data you want to collect for this property.
     * 
     */
    public Optional<Integer> samplingPercentage() {
        return Optional.ofNullable(this.samplingPercentage);
    }
    /**
     * @return Specify the DataStream type.
     * 
     */
    public Optional<String> streamType() {
        return Optional.ofNullable(this.streamType);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20240531BehaviorDatastream defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String beaconStreamTitle;
        private @Nullable Boolean collectMidgressTraffic;
        private @Nullable String datastreamIds;
        private @Nullable Boolean enabled;
        private @Nullable Boolean locked;
        private @Nullable Boolean logEnabled;
        private @Nullable List<String> logStreamNames;
        private @Nullable String logStreamTitle;
        private @Nullable Integer samplingPercentage;
        private @Nullable String streamType;
        private @Nullable String templateUuid;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20240531BehaviorDatastream defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.beaconStreamTitle = defaults.beaconStreamTitle;
    	      this.collectMidgressTraffic = defaults.collectMidgressTraffic;
    	      this.datastreamIds = defaults.datastreamIds;
    	      this.enabled = defaults.enabled;
    	      this.locked = defaults.locked;
    	      this.logEnabled = defaults.logEnabled;
    	      this.logStreamNames = defaults.logStreamNames;
    	      this.logStreamTitle = defaults.logStreamTitle;
    	      this.samplingPercentage = defaults.samplingPercentage;
    	      this.streamType = defaults.streamType;
    	      this.templateUuid = defaults.templateUuid;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder beaconStreamTitle(@Nullable String beaconStreamTitle) {

            this.beaconStreamTitle = beaconStreamTitle;
            return this;
        }
        @CustomType.Setter
        public Builder collectMidgressTraffic(@Nullable Boolean collectMidgressTraffic) {

            this.collectMidgressTraffic = collectMidgressTraffic;
            return this;
        }
        @CustomType.Setter
        public Builder datastreamIds(@Nullable String datastreamIds) {

            this.datastreamIds = datastreamIds;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder logEnabled(@Nullable Boolean logEnabled) {

            this.logEnabled = logEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder logStreamNames(@Nullable List<String> logStreamNames) {

            this.logStreamNames = logStreamNames;
            return this;
        }
        public Builder logStreamNames(String... logStreamNames) {
            return logStreamNames(List.of(logStreamNames));
        }
        @CustomType.Setter
        public Builder logStreamTitle(@Nullable String logStreamTitle) {

            this.logStreamTitle = logStreamTitle;
            return this;
        }
        @CustomType.Setter
        public Builder samplingPercentage(@Nullable Integer samplingPercentage) {

            this.samplingPercentage = samplingPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder streamType(@Nullable String streamType) {

            this.streamType = streamType;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20240531BehaviorDatastream build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20240531BehaviorDatastream();
            _resultValue.beaconStreamTitle = beaconStreamTitle;
            _resultValue.collectMidgressTraffic = collectMidgressTraffic;
            _resultValue.datastreamIds = datastreamIds;
            _resultValue.enabled = enabled;
            _resultValue.locked = locked;
            _resultValue.logEnabled = logEnabled;
            _resultValue.logStreamNames = logStreamNames;
            _resultValue.logStreamTitle = logStreamTitle;
            _resultValue.samplingPercentage = samplingPercentage;
            _resultValue.streamType = streamType;
            _resultValue.templateUuid = templateUuid;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
