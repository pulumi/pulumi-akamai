// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.IamApiClientGroupAccessGroupArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamApiClientGroupAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final IamApiClientGroupAccessArgs Empty = new IamApiClientGroupAccessArgs();

    /**
     * Sets the API client&#39;s group access the same as the authorized user.
     * 
     */
    @Import(name="cloneAuthorizedUserGroups", required=true)
    private Output<Boolean> cloneAuthorizedUserGroups;

    /**
     * @return Sets the API client&#39;s group access the same as the authorized user.
     * 
     */
    public Output<Boolean> cloneAuthorizedUserGroups() {
        return this.cloneAuthorizedUserGroups;
    }

    /**
     * Groups the API client can access.
     * 
     */
    @Import(name="groups")
    private @Nullable Output<List<IamApiClientGroupAccessGroupArgs>> groups;

    /**
     * @return Groups the API client can access.
     * 
     */
    public Optional<Output<List<IamApiClientGroupAccessGroupArgs>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    private IamApiClientGroupAccessArgs() {}

    private IamApiClientGroupAccessArgs(IamApiClientGroupAccessArgs $) {
        this.cloneAuthorizedUserGroups = $.cloneAuthorizedUserGroups;
        this.groups = $.groups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamApiClientGroupAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamApiClientGroupAccessArgs $;

        public Builder() {
            $ = new IamApiClientGroupAccessArgs();
        }

        public Builder(IamApiClientGroupAccessArgs defaults) {
            $ = new IamApiClientGroupAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloneAuthorizedUserGroups Sets the API client&#39;s group access the same as the authorized user.
         * 
         * @return builder
         * 
         */
        public Builder cloneAuthorizedUserGroups(Output<Boolean> cloneAuthorizedUserGroups) {
            $.cloneAuthorizedUserGroups = cloneAuthorizedUserGroups;
            return this;
        }

        /**
         * @param cloneAuthorizedUserGroups Sets the API client&#39;s group access the same as the authorized user.
         * 
         * @return builder
         * 
         */
        public Builder cloneAuthorizedUserGroups(Boolean cloneAuthorizedUserGroups) {
            return cloneAuthorizedUserGroups(Output.of(cloneAuthorizedUserGroups));
        }

        /**
         * @param groups Groups the API client can access.
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable Output<List<IamApiClientGroupAccessGroupArgs>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups Groups the API client can access.
         * 
         * @return builder
         * 
         */
        public Builder groups(List<IamApiClientGroupAccessGroupArgs> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups Groups the API client can access.
         * 
         * @return builder
         * 
         */
        public Builder groups(IamApiClientGroupAccessGroupArgs... groups) {
            return groups(List.of(groups));
        }

        public IamApiClientGroupAccessArgs build() {
            if ($.cloneAuthorizedUserGroups == null) {
                throw new MissingRequiredPropertyException("IamApiClientGroupAccessArgs", "cloneAuthorizedUserGroups");
            }
            return $;
        }
    }

}
