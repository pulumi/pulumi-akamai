// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs Empty = new GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs();

    /**
     * Verifies JWTs signed with the ES256 algorithm. This signature helps ensure that the token hasn&#39;t been tampered with.
     * 
     */
    @Import(name="enableEs256")
    private @Nullable Output<Boolean> enableEs256;

    /**
     * @return Verifies JWTs signed with the ES256 algorithm. This signature helps ensure that the token hasn&#39;t been tampered with.
     * 
     */
    public Optional<Output<Boolean>> enableEs256() {
        return Optional.ofNullable(this.enableEs256);
    }

    /**
     * Verifies JWTs signed with the RS256 algorithm. This signature helps ensure that the token hasn&#39;t been tampered with.
     * 
     */
    @Import(name="enableRs256")
    private @Nullable Output<Boolean> enableRs256;

    /**
     * @return Verifies JWTs signed with the RS256 algorithm. This signature helps ensure that the token hasn&#39;t been tampered with.
     * 
     */
    public Optional<Output<Boolean>> enableRs256() {
        return Optional.ofNullable(this.enableRs256);
    }

    /**
     * Specify from where to extract the JWT value.
     * 
     */
    @Import(name="extractLocation")
    private @Nullable Output<String> extractLocation;

    /**
     * @return Specify from where to extract the JWT value.
     * 
     */
    public Optional<Output<String>> extractLocation() {
        return Optional.ofNullable(this.extractLocation);
    }

    /**
     * This specifies the name of the header from which to extract the JWT value.
     * 
     */
    @Import(name="headerName")
    private @Nullable Output<String> headerName;

    /**
     * @return This specifies the name of the header from which to extract the JWT value.
     * 
     */
    public Optional<Output<String>> headerName() {
        return Optional.ofNullable(this.headerName);
    }

    /**
     * An identifier for the JWT keys collection.
     * 
     */
    @Import(name="jwt")
    private @Nullable Output<String> jwt;

    /**
     * @return An identifier for the JWT keys collection.
     * 
     */
    public Optional<Output<String>> jwt() {
        return Optional.ofNullable(this.jwt);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * This specifies the name of the query parameter from which to extract the JWT value.
     * 
     */
    @Import(name="queryParameterName")
    private @Nullable Output<String> queryParameterName;

    /**
     * @return This specifies the name of the query parameter from which to extract the JWT value.
     * 
     */
    public Optional<Output<String>> queryParameterName() {
        return Optional.ofNullable(this.queryParameterName);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs() {}

    private GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs(GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs $) {
        this.enableEs256 = $.enableEs256;
        this.enableRs256 = $.enableRs256;
        this.extractLocation = $.extractLocation;
        this.headerName = $.headerName;
        this.jwt = $.jwt;
        this.locked = $.locked;
        this.queryParameterName = $.queryParameterName;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableEs256 Verifies JWTs signed with the ES256 algorithm. This signature helps ensure that the token hasn&#39;t been tampered with.
         * 
         * @return builder
         * 
         */
        public Builder enableEs256(@Nullable Output<Boolean> enableEs256) {
            $.enableEs256 = enableEs256;
            return this;
        }

        /**
         * @param enableEs256 Verifies JWTs signed with the ES256 algorithm. This signature helps ensure that the token hasn&#39;t been tampered with.
         * 
         * @return builder
         * 
         */
        public Builder enableEs256(Boolean enableEs256) {
            return enableEs256(Output.of(enableEs256));
        }

        /**
         * @param enableRs256 Verifies JWTs signed with the RS256 algorithm. This signature helps ensure that the token hasn&#39;t been tampered with.
         * 
         * @return builder
         * 
         */
        public Builder enableRs256(@Nullable Output<Boolean> enableRs256) {
            $.enableRs256 = enableRs256;
            return this;
        }

        /**
         * @param enableRs256 Verifies JWTs signed with the RS256 algorithm. This signature helps ensure that the token hasn&#39;t been tampered with.
         * 
         * @return builder
         * 
         */
        public Builder enableRs256(Boolean enableRs256) {
            return enableRs256(Output.of(enableRs256));
        }

        /**
         * @param extractLocation Specify from where to extract the JWT value.
         * 
         * @return builder
         * 
         */
        public Builder extractLocation(@Nullable Output<String> extractLocation) {
            $.extractLocation = extractLocation;
            return this;
        }

        /**
         * @param extractLocation Specify from where to extract the JWT value.
         * 
         * @return builder
         * 
         */
        public Builder extractLocation(String extractLocation) {
            return extractLocation(Output.of(extractLocation));
        }

        /**
         * @param headerName This specifies the name of the header from which to extract the JWT value.
         * 
         * @return builder
         * 
         */
        public Builder headerName(@Nullable Output<String> headerName) {
            $.headerName = headerName;
            return this;
        }

        /**
         * @param headerName This specifies the name of the header from which to extract the JWT value.
         * 
         * @return builder
         * 
         */
        public Builder headerName(String headerName) {
            return headerName(Output.of(headerName));
        }

        /**
         * @param jwt An identifier for the JWT keys collection.
         * 
         * @return builder
         * 
         */
        public Builder jwt(@Nullable Output<String> jwt) {
            $.jwt = jwt;
            return this;
        }

        /**
         * @param jwt An identifier for the JWT keys collection.
         * 
         * @return builder
         * 
         */
        public Builder jwt(String jwt) {
            return jwt(Output.of(jwt));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param queryParameterName This specifies the name of the query parameter from which to extract the JWT value.
         * 
         * @return builder
         * 
         */
        public Builder queryParameterName(@Nullable Output<String> queryParameterName) {
            $.queryParameterName = queryParameterName;
            return this;
        }

        /**
         * @param queryParameterName This specifies the name of the query parameter from which to extract the JWT value.
         * 
         * @return builder
         * 
         */
        public Builder queryParameterName(String queryParameterName) {
            return queryParameterName(Output.of(queryParameterName));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs build() {
            return $;
        }
    }

}
