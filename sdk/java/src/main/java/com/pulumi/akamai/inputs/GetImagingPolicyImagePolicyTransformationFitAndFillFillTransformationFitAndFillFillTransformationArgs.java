// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAppendArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAspectCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBackgroundColorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBlurArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationChromaKeyArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompositeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompoundArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationContrastArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFaceCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFeatureCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFitAndFillArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGoopArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGrayscaleArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHslArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHsvArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfDimensionArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfOrientationArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationImQueryArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMaxColorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMirrorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMonoHueArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationOpacityArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRegionOfInterestCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRelativeCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRemoveColorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationResizeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRotateArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationScaleArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationShearsArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationTrimArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationUnsharpMaskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs Empty = new GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs();

    @Import(name="appends")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAppendArgs>> appends;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAppendArgs>>> appends() {
        return Optional.ofNullable(this.appends);
    }

    @Import(name="aspectCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAspectCropArgs>> aspectCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAspectCropArgs>>> aspectCrops() {
        return Optional.ofNullable(this.aspectCrops);
    }

    @Import(name="backgroundColors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBackgroundColorArgs>> backgroundColors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBackgroundColorArgs>>> backgroundColors() {
        return Optional.ofNullable(this.backgroundColors);
    }

    @Import(name="blurs")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBlurArgs>> blurs;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBlurArgs>>> blurs() {
        return Optional.ofNullable(this.blurs);
    }

    @Import(name="chromaKeys")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationChromaKeyArgs>> chromaKeys;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationChromaKeyArgs>>> chromaKeys() {
        return Optional.ofNullable(this.chromaKeys);
    }

    @Import(name="composites")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompositeArgs>> composites;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompositeArgs>>> composites() {
        return Optional.ofNullable(this.composites);
    }

    @Import(name="compounds")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompoundArgs>> compounds;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompoundArgs>>> compounds() {
        return Optional.ofNullable(this.compounds);
    }

    @Import(name="contrasts")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationContrastArgs>> contrasts;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationContrastArgs>>> contrasts() {
        return Optional.ofNullable(this.contrasts);
    }

    @Import(name="crops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCropArgs>> crops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCropArgs>>> crops() {
        return Optional.ofNullable(this.crops);
    }

    @Import(name="faceCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFaceCropArgs>> faceCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFaceCropArgs>>> faceCrops() {
        return Optional.ofNullable(this.faceCrops);
    }

    @Import(name="featureCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFeatureCropArgs>> featureCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFeatureCropArgs>>> featureCrops() {
        return Optional.ofNullable(this.featureCrops);
    }

    @Import(name="fitAndFills")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFitAndFillArgs>> fitAndFills;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFitAndFillArgs>>> fitAndFills() {
        return Optional.ofNullable(this.fitAndFills);
    }

    @Import(name="goops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGoopArgs>> goops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGoopArgs>>> goops() {
        return Optional.ofNullable(this.goops);
    }

    @Import(name="grayscales")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGrayscaleArgs>> grayscales;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGrayscaleArgs>>> grayscales() {
        return Optional.ofNullable(this.grayscales);
    }

    @Import(name="hsls")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHslArgs>> hsls;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHslArgs>>> hsls() {
        return Optional.ofNullable(this.hsls);
    }

    @Import(name="hsvs")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHsvArgs>> hsvs;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHsvArgs>>> hsvs() {
        return Optional.ofNullable(this.hsvs);
    }

    @Import(name="ifDimensions")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfDimensionArgs>> ifDimensions;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfDimensionArgs>>> ifDimensions() {
        return Optional.ofNullable(this.ifDimensions);
    }

    @Import(name="ifOrientations")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfOrientationArgs>> ifOrientations;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfOrientationArgs>>> ifOrientations() {
        return Optional.ofNullable(this.ifOrientations);
    }

    @Import(name="imQueries")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationImQueryArgs>> imQueries;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationImQueryArgs>>> imQueries() {
        return Optional.ofNullable(this.imQueries);
    }

    @Import(name="maxColors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMaxColorArgs>> maxColors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMaxColorArgs>>> maxColors() {
        return Optional.ofNullable(this.maxColors);
    }

    @Import(name="mirrors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMirrorArgs>> mirrors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMirrorArgs>>> mirrors() {
        return Optional.ofNullable(this.mirrors);
    }

    @Import(name="monoHues")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMonoHueArgs>> monoHues;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMonoHueArgs>>> monoHues() {
        return Optional.ofNullable(this.monoHues);
    }

    @Import(name="opacities")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationOpacityArgs>> opacities;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationOpacityArgs>>> opacities() {
        return Optional.ofNullable(this.opacities);
    }

    @Import(name="regionOfInterestCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRegionOfInterestCropArgs>> regionOfInterestCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRegionOfInterestCropArgs>>> regionOfInterestCrops() {
        return Optional.ofNullable(this.regionOfInterestCrops);
    }

    @Import(name="relativeCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRelativeCropArgs>> relativeCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRelativeCropArgs>>> relativeCrops() {
        return Optional.ofNullable(this.relativeCrops);
    }

    @Import(name="removeColors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRemoveColorArgs>> removeColors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRemoveColorArgs>>> removeColors() {
        return Optional.ofNullable(this.removeColors);
    }

    @Import(name="resizes")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationResizeArgs>> resizes;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationResizeArgs>>> resizes() {
        return Optional.ofNullable(this.resizes);
    }

    @Import(name="rotates")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRotateArgs>> rotates;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRotateArgs>>> rotates() {
        return Optional.ofNullable(this.rotates);
    }

    @Import(name="scales")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationScaleArgs>> scales;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationScaleArgs>>> scales() {
        return Optional.ofNullable(this.scales);
    }

    @Import(name="shears")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationShearsArgs>> shears;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationShearsArgs>>> shears() {
        return Optional.ofNullable(this.shears);
    }

    @Import(name="trims")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationTrimArgs>> trims;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationTrimArgs>>> trims() {
        return Optional.ofNullable(this.trims);
    }

    @Import(name="unsharpMasks")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationUnsharpMaskArgs>> unsharpMasks;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationUnsharpMaskArgs>>> unsharpMasks() {
        return Optional.ofNullable(this.unsharpMasks);
    }

    private GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs() {}

    private GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs $) {
        this.appends = $.appends;
        this.aspectCrops = $.aspectCrops;
        this.backgroundColors = $.backgroundColors;
        this.blurs = $.blurs;
        this.chromaKeys = $.chromaKeys;
        this.composites = $.composites;
        this.compounds = $.compounds;
        this.contrasts = $.contrasts;
        this.crops = $.crops;
        this.faceCrops = $.faceCrops;
        this.featureCrops = $.featureCrops;
        this.fitAndFills = $.fitAndFills;
        this.goops = $.goops;
        this.grayscales = $.grayscales;
        this.hsls = $.hsls;
        this.hsvs = $.hsvs;
        this.ifDimensions = $.ifDimensions;
        this.ifOrientations = $.ifOrientations;
        this.imQueries = $.imQueries;
        this.maxColors = $.maxColors;
        this.mirrors = $.mirrors;
        this.monoHues = $.monoHues;
        this.opacities = $.opacities;
        this.regionOfInterestCrops = $.regionOfInterestCrops;
        this.relativeCrops = $.relativeCrops;
        this.removeColors = $.removeColors;
        this.resizes = $.resizes;
        this.rotates = $.rotates;
        this.scales = $.scales;
        this.shears = $.shears;
        this.trims = $.trims;
        this.unsharpMasks = $.unsharpMasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs(Objects.requireNonNull(defaults));
        }

        public Builder appends(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAppendArgs>> appends) {
            $.appends = appends;
            return this;
        }

        public Builder appends(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAppendArgs> appends) {
            return appends(Output.of(appends));
        }

        public Builder appends(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAppendArgs... appends) {
            return appends(List.of(appends));
        }

        public Builder aspectCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAspectCropArgs>> aspectCrops) {
            $.aspectCrops = aspectCrops;
            return this;
        }

        public Builder aspectCrops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAspectCropArgs> aspectCrops) {
            return aspectCrops(Output.of(aspectCrops));
        }

        public Builder aspectCrops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationAspectCropArgs... aspectCrops) {
            return aspectCrops(List.of(aspectCrops));
        }

        public Builder backgroundColors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBackgroundColorArgs>> backgroundColors) {
            $.backgroundColors = backgroundColors;
            return this;
        }

        public Builder backgroundColors(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBackgroundColorArgs> backgroundColors) {
            return backgroundColors(Output.of(backgroundColors));
        }

        public Builder backgroundColors(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBackgroundColorArgs... backgroundColors) {
            return backgroundColors(List.of(backgroundColors));
        }

        public Builder blurs(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBlurArgs>> blurs) {
            $.blurs = blurs;
            return this;
        }

        public Builder blurs(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBlurArgs> blurs) {
            return blurs(Output.of(blurs));
        }

        public Builder blurs(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationBlurArgs... blurs) {
            return blurs(List.of(blurs));
        }

        public Builder chromaKeys(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationChromaKeyArgs>> chromaKeys) {
            $.chromaKeys = chromaKeys;
            return this;
        }

        public Builder chromaKeys(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationChromaKeyArgs> chromaKeys) {
            return chromaKeys(Output.of(chromaKeys));
        }

        public Builder chromaKeys(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationChromaKeyArgs... chromaKeys) {
            return chromaKeys(List.of(chromaKeys));
        }

        public Builder composites(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompositeArgs>> composites) {
            $.composites = composites;
            return this;
        }

        public Builder composites(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompositeArgs> composites) {
            return composites(Output.of(composites));
        }

        public Builder composites(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompositeArgs... composites) {
            return composites(List.of(composites));
        }

        public Builder compounds(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompoundArgs>> compounds) {
            $.compounds = compounds;
            return this;
        }

        public Builder compounds(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompoundArgs> compounds) {
            return compounds(Output.of(compounds));
        }

        public Builder compounds(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCompoundArgs... compounds) {
            return compounds(List.of(compounds));
        }

        public Builder contrasts(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationContrastArgs>> contrasts) {
            $.contrasts = contrasts;
            return this;
        }

        public Builder contrasts(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationContrastArgs> contrasts) {
            return contrasts(Output.of(contrasts));
        }

        public Builder contrasts(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationContrastArgs... contrasts) {
            return contrasts(List.of(contrasts));
        }

        public Builder crops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCropArgs>> crops) {
            $.crops = crops;
            return this;
        }

        public Builder crops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCropArgs> crops) {
            return crops(Output.of(crops));
        }

        public Builder crops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationCropArgs... crops) {
            return crops(List.of(crops));
        }

        public Builder faceCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFaceCropArgs>> faceCrops) {
            $.faceCrops = faceCrops;
            return this;
        }

        public Builder faceCrops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFaceCropArgs> faceCrops) {
            return faceCrops(Output.of(faceCrops));
        }

        public Builder faceCrops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFaceCropArgs... faceCrops) {
            return faceCrops(List.of(faceCrops));
        }

        public Builder featureCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFeatureCropArgs>> featureCrops) {
            $.featureCrops = featureCrops;
            return this;
        }

        public Builder featureCrops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFeatureCropArgs> featureCrops) {
            return featureCrops(Output.of(featureCrops));
        }

        public Builder featureCrops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFeatureCropArgs... featureCrops) {
            return featureCrops(List.of(featureCrops));
        }

        public Builder fitAndFills(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFitAndFillArgs>> fitAndFills) {
            $.fitAndFills = fitAndFills;
            return this;
        }

        public Builder fitAndFills(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFitAndFillArgs> fitAndFills) {
            return fitAndFills(Output.of(fitAndFills));
        }

        public Builder fitAndFills(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationFitAndFillArgs... fitAndFills) {
            return fitAndFills(List.of(fitAndFills));
        }

        public Builder goops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGoopArgs>> goops) {
            $.goops = goops;
            return this;
        }

        public Builder goops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGoopArgs> goops) {
            return goops(Output.of(goops));
        }

        public Builder goops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGoopArgs... goops) {
            return goops(List.of(goops));
        }

        public Builder grayscales(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGrayscaleArgs>> grayscales) {
            $.grayscales = grayscales;
            return this;
        }

        public Builder grayscales(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGrayscaleArgs> grayscales) {
            return grayscales(Output.of(grayscales));
        }

        public Builder grayscales(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationGrayscaleArgs... grayscales) {
            return grayscales(List.of(grayscales));
        }

        public Builder hsls(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHslArgs>> hsls) {
            $.hsls = hsls;
            return this;
        }

        public Builder hsls(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHslArgs> hsls) {
            return hsls(Output.of(hsls));
        }

        public Builder hsls(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHslArgs... hsls) {
            return hsls(List.of(hsls));
        }

        public Builder hsvs(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHsvArgs>> hsvs) {
            $.hsvs = hsvs;
            return this;
        }

        public Builder hsvs(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHsvArgs> hsvs) {
            return hsvs(Output.of(hsvs));
        }

        public Builder hsvs(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationHsvArgs... hsvs) {
            return hsvs(List.of(hsvs));
        }

        public Builder ifDimensions(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfDimensionArgs>> ifDimensions) {
            $.ifDimensions = ifDimensions;
            return this;
        }

        public Builder ifDimensions(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfDimensionArgs> ifDimensions) {
            return ifDimensions(Output.of(ifDimensions));
        }

        public Builder ifDimensions(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfDimensionArgs... ifDimensions) {
            return ifDimensions(List.of(ifDimensions));
        }

        public Builder ifOrientations(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfOrientationArgs>> ifOrientations) {
            $.ifOrientations = ifOrientations;
            return this;
        }

        public Builder ifOrientations(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfOrientationArgs> ifOrientations) {
            return ifOrientations(Output.of(ifOrientations));
        }

        public Builder ifOrientations(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationIfOrientationArgs... ifOrientations) {
            return ifOrientations(List.of(ifOrientations));
        }

        public Builder imQueries(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationImQueryArgs>> imQueries) {
            $.imQueries = imQueries;
            return this;
        }

        public Builder imQueries(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationImQueryArgs> imQueries) {
            return imQueries(Output.of(imQueries));
        }

        public Builder imQueries(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationImQueryArgs... imQueries) {
            return imQueries(List.of(imQueries));
        }

        public Builder maxColors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMaxColorArgs>> maxColors) {
            $.maxColors = maxColors;
            return this;
        }

        public Builder maxColors(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMaxColorArgs> maxColors) {
            return maxColors(Output.of(maxColors));
        }

        public Builder maxColors(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMaxColorArgs... maxColors) {
            return maxColors(List.of(maxColors));
        }

        public Builder mirrors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMirrorArgs>> mirrors) {
            $.mirrors = mirrors;
            return this;
        }

        public Builder mirrors(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMirrorArgs> mirrors) {
            return mirrors(Output.of(mirrors));
        }

        public Builder mirrors(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMirrorArgs... mirrors) {
            return mirrors(List.of(mirrors));
        }

        public Builder monoHues(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMonoHueArgs>> monoHues) {
            $.monoHues = monoHues;
            return this;
        }

        public Builder monoHues(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMonoHueArgs> monoHues) {
            return monoHues(Output.of(monoHues));
        }

        public Builder monoHues(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationMonoHueArgs... monoHues) {
            return monoHues(List.of(monoHues));
        }

        public Builder opacities(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationOpacityArgs>> opacities) {
            $.opacities = opacities;
            return this;
        }

        public Builder opacities(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationOpacityArgs> opacities) {
            return opacities(Output.of(opacities));
        }

        public Builder opacities(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationOpacityArgs... opacities) {
            return opacities(List.of(opacities));
        }

        public Builder regionOfInterestCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRegionOfInterestCropArgs>> regionOfInterestCrops) {
            $.regionOfInterestCrops = regionOfInterestCrops;
            return this;
        }

        public Builder regionOfInterestCrops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRegionOfInterestCropArgs> regionOfInterestCrops) {
            return regionOfInterestCrops(Output.of(regionOfInterestCrops));
        }

        public Builder regionOfInterestCrops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRegionOfInterestCropArgs... regionOfInterestCrops) {
            return regionOfInterestCrops(List.of(regionOfInterestCrops));
        }

        public Builder relativeCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRelativeCropArgs>> relativeCrops) {
            $.relativeCrops = relativeCrops;
            return this;
        }

        public Builder relativeCrops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRelativeCropArgs> relativeCrops) {
            return relativeCrops(Output.of(relativeCrops));
        }

        public Builder relativeCrops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRelativeCropArgs... relativeCrops) {
            return relativeCrops(List.of(relativeCrops));
        }

        public Builder removeColors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRemoveColorArgs>> removeColors) {
            $.removeColors = removeColors;
            return this;
        }

        public Builder removeColors(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRemoveColorArgs> removeColors) {
            return removeColors(Output.of(removeColors));
        }

        public Builder removeColors(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRemoveColorArgs... removeColors) {
            return removeColors(List.of(removeColors));
        }

        public Builder resizes(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationResizeArgs>> resizes) {
            $.resizes = resizes;
            return this;
        }

        public Builder resizes(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationResizeArgs> resizes) {
            return resizes(Output.of(resizes));
        }

        public Builder resizes(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationResizeArgs... resizes) {
            return resizes(List.of(resizes));
        }

        public Builder rotates(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRotateArgs>> rotates) {
            $.rotates = rotates;
            return this;
        }

        public Builder rotates(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRotateArgs> rotates) {
            return rotates(Output.of(rotates));
        }

        public Builder rotates(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationRotateArgs... rotates) {
            return rotates(List.of(rotates));
        }

        public Builder scales(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationScaleArgs>> scales) {
            $.scales = scales;
            return this;
        }

        public Builder scales(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationScaleArgs> scales) {
            return scales(Output.of(scales));
        }

        public Builder scales(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationScaleArgs... scales) {
            return scales(List.of(scales));
        }

        public Builder shears(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationShearsArgs>> shears) {
            $.shears = shears;
            return this;
        }

        public Builder shears(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationShearsArgs> shears) {
            return shears(Output.of(shears));
        }

        public Builder shears(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationShearsArgs... shears) {
            return shears(List.of(shears));
        }

        public Builder trims(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationTrimArgs>> trims) {
            $.trims = trims;
            return this;
        }

        public Builder trims(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationTrimArgs> trims) {
            return trims(Output.of(trims));
        }

        public Builder trims(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationTrimArgs... trims) {
            return trims(List.of(trims));
        }

        public Builder unsharpMasks(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationUnsharpMaskArgs>> unsharpMasks) {
            $.unsharpMasks = unsharpMasks;
            return this;
        }

        public Builder unsharpMasks(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationUnsharpMaskArgs> unsharpMasks) {
            return unsharpMasks(Output.of(unsharpMasks));
        }

        public Builder unsharpMasks(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationUnsharpMaskArgs... unsharpMasks) {
            return unsharpMasks(List.of(unsharpMasks));
        }

        public GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationFitAndFillFillTransformationArgs build() {
            return $;
        }
    }

}
