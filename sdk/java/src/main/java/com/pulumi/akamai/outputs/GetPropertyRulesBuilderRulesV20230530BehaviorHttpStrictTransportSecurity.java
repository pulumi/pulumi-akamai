// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurity {
    /**
     * @return Applies HSTS to this set of requests.
     * 
     */
    private @Nullable Boolean enable;
    /**
     * @return When enabled, applies HSTS to all subdomains.
     * 
     */
    private @Nullable Boolean includeSubDomains;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Specifies the duration for which to apply HSTS for new browser connections.
     * 
     */
    private @Nullable String maxAge;
    /**
     * @return When enabled, adds this domain to the browser&#39;s preload list. You still need to declare the domain at `hstspreload.org`.
     * 
     */
    private @Nullable Boolean preload;
    /**
     * @return When enabled, redirects all HTTP requests to HTTPS.
     * 
     */
    private @Nullable Boolean redirect;
    /**
     * @return Specifies a response code.
     * 
     */
    private @Nullable Integer redirectStatusCode;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurity() {}
    /**
     * @return Applies HSTS to this set of requests.
     * 
     */
    public Optional<Boolean> enable() {
        return Optional.ofNullable(this.enable);
    }
    /**
     * @return When enabled, applies HSTS to all subdomains.
     * 
     */
    public Optional<Boolean> includeSubDomains() {
        return Optional.ofNullable(this.includeSubDomains);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Specifies the duration for which to apply HSTS for new browser connections.
     * 
     */
    public Optional<String> maxAge() {
        return Optional.ofNullable(this.maxAge);
    }
    /**
     * @return When enabled, adds this domain to the browser&#39;s preload list. You still need to declare the domain at `hstspreload.org`.
     * 
     */
    public Optional<Boolean> preload() {
        return Optional.ofNullable(this.preload);
    }
    /**
     * @return When enabled, redirects all HTTP requests to HTTPS.
     * 
     */
    public Optional<Boolean> redirect() {
        return Optional.ofNullable(this.redirect);
    }
    /**
     * @return Specifies a response code.
     * 
     */
    public Optional<Integer> redirectStatusCode() {
        return Optional.ofNullable(this.redirectStatusCode);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enable;
        private @Nullable Boolean includeSubDomains;
        private @Nullable Boolean locked;
        private @Nullable String maxAge;
        private @Nullable Boolean preload;
        private @Nullable Boolean redirect;
        private @Nullable Integer redirectStatusCode;
        private @Nullable String templateUuid;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enable = defaults.enable;
    	      this.includeSubDomains = defaults.includeSubDomains;
    	      this.locked = defaults.locked;
    	      this.maxAge = defaults.maxAge;
    	      this.preload = defaults.preload;
    	      this.redirect = defaults.redirect;
    	      this.redirectStatusCode = defaults.redirectStatusCode;
    	      this.templateUuid = defaults.templateUuid;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder enable(@Nullable Boolean enable) {

            this.enable = enable;
            return this;
        }
        @CustomType.Setter
        public Builder includeSubDomains(@Nullable Boolean includeSubDomains) {

            this.includeSubDomains = includeSubDomains;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder maxAge(@Nullable String maxAge) {

            this.maxAge = maxAge;
            return this;
        }
        @CustomType.Setter
        public Builder preload(@Nullable Boolean preload) {

            this.preload = preload;
            return this;
        }
        @CustomType.Setter
        public Builder redirect(@Nullable Boolean redirect) {

            this.redirect = redirect;
            return this;
        }
        @CustomType.Setter
        public Builder redirectStatusCode(@Nullable Integer redirectStatusCode) {

            this.redirectStatusCode = redirectStatusCode;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurity build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurity();
            _resultValue.enable = enable;
            _resultValue.includeSubDomains = includeSubDomains;
            _resultValue.locked = locked;
            _resultValue.maxAge = maxAge;
            _resultValue.preload = preload;
            _resultValue.redirect = redirect;
            _resultValue.redirectStatusCode = redirectStatusCode;
            _resultValue.templateUuid = templateUuid;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
