// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetCloudletsSharedPolicyActivations;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudletsSharedPolicyResult {
    private @Nullable GetCloudletsSharedPolicyActivations activations;
    private String cloudletType;
    private String description;
    private Integer groupId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String matchRules;
    private String name;
    private Integer policyId;
    private @Nullable Integer version;
    private String versionDescription;
    private String warnings;

    private GetCloudletsSharedPolicyResult() {}
    public Optional<GetCloudletsSharedPolicyActivations> activations() {
        return Optional.ofNullable(this.activations);
    }
    public String cloudletType() {
        return this.cloudletType;
    }
    public String description() {
        return this.description;
    }
    public Integer groupId() {
        return this.groupId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String matchRules() {
        return this.matchRules;
    }
    public String name() {
        return this.name;
    }
    public Integer policyId() {
        return this.policyId;
    }
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }
    public String versionDescription() {
        return this.versionDescription;
    }
    public String warnings() {
        return this.warnings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudletsSharedPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetCloudletsSharedPolicyActivations activations;
        private String cloudletType;
        private String description;
        private Integer groupId;
        private String id;
        private String matchRules;
        private String name;
        private Integer policyId;
        private @Nullable Integer version;
        private String versionDescription;
        private String warnings;
        public Builder() {}
        public Builder(GetCloudletsSharedPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activations = defaults.activations;
    	      this.cloudletType = defaults.cloudletType;
    	      this.description = defaults.description;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.matchRules = defaults.matchRules;
    	      this.name = defaults.name;
    	      this.policyId = defaults.policyId;
    	      this.version = defaults.version;
    	      this.versionDescription = defaults.versionDescription;
    	      this.warnings = defaults.warnings;
        }

        @CustomType.Setter
        public Builder activations(@Nullable GetCloudletsSharedPolicyActivations activations) {

            this.activations = activations;
            return this;
        }
        @CustomType.Setter
        public Builder cloudletType(String cloudletType) {
            if (cloudletType == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyResult", "cloudletType");
            }
            this.cloudletType = cloudletType;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(Integer groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyResult", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder matchRules(String matchRules) {
            if (matchRules == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyResult", "matchRules");
            }
            this.matchRules = matchRules;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder policyId(Integer policyId) {
            if (policyId == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyResult", "policyId");
            }
            this.policyId = policyId;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Integer version) {

            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder versionDescription(String versionDescription) {
            if (versionDescription == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyResult", "versionDescription");
            }
            this.versionDescription = versionDescription;
            return this;
        }
        @CustomType.Setter
        public Builder warnings(String warnings) {
            if (warnings == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyResult", "warnings");
            }
            this.warnings = warnings;
            return this;
        }
        public GetCloudletsSharedPolicyResult build() {
            final var _resultValue = new GetCloudletsSharedPolicyResult();
            _resultValue.activations = activations;
            _resultValue.cloudletType = cloudletType;
            _resultValue.description = description;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.matchRules = matchRules;
            _resultValue.name = name;
            _resultValue.policyId = policyId;
            _resultValue.version = version;
            _resultValue.versionDescription = versionDescription;
            _resultValue.warnings = warnings;
            return _resultValue;
        }
    }
}
