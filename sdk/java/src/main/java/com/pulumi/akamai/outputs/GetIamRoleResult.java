// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetIamRoleActions;
import com.pulumi.akamai.outputs.GetIamRoleGrantedRole;
import com.pulumi.akamai.outputs.GetIamRoleUser;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIamRoleResult {
    private GetIamRoleActions actions;
    private String createdBy;
    private String createdDate;
    private List<GetIamRoleGrantedRole> grantedRoles;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String modifiedBy;
    private String modifiedDate;
    private String roleDescription;
    private Integer roleId;
    private String roleName;
    private String type;
    private List<GetIamRoleUser> users;

    private GetIamRoleResult() {}
    public GetIamRoleActions actions() {
        return this.actions;
    }
    public String createdBy() {
        return this.createdBy;
    }
    public String createdDate() {
        return this.createdDate;
    }
    public List<GetIamRoleGrantedRole> grantedRoles() {
        return this.grantedRoles;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String modifiedBy() {
        return this.modifiedBy;
    }
    public String modifiedDate() {
        return this.modifiedDate;
    }
    public String roleDescription() {
        return this.roleDescription;
    }
    public Integer roleId() {
        return this.roleId;
    }
    public String roleName() {
        return this.roleName;
    }
    public String type() {
        return this.type;
    }
    public List<GetIamRoleUser> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamRoleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetIamRoleActions actions;
        private String createdBy;
        private String createdDate;
        private List<GetIamRoleGrantedRole> grantedRoles;
        private String id;
        private String modifiedBy;
        private String modifiedDate;
        private String roleDescription;
        private Integer roleId;
        private String roleName;
        private String type;
        private List<GetIamRoleUser> users;
        public Builder() {}
        public Builder(GetIamRoleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.createdBy = defaults.createdBy;
    	      this.createdDate = defaults.createdDate;
    	      this.grantedRoles = defaults.grantedRoles;
    	      this.id = defaults.id;
    	      this.modifiedBy = defaults.modifiedBy;
    	      this.modifiedDate = defaults.modifiedDate;
    	      this.roleDescription = defaults.roleDescription;
    	      this.roleId = defaults.roleId;
    	      this.roleName = defaults.roleName;
    	      this.type = defaults.type;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder actions(GetIamRoleActions actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "actions");
            }
            this.actions = actions;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            if (createdDate == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "createdDate");
            }
            this.createdDate = createdDate;
            return this;
        }
        @CustomType.Setter
        public Builder grantedRoles(List<GetIamRoleGrantedRole> grantedRoles) {
            if (grantedRoles == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "grantedRoles");
            }
            this.grantedRoles = grantedRoles;
            return this;
        }
        public Builder grantedRoles(GetIamRoleGrantedRole... grantedRoles) {
            return grantedRoles(List.of(grantedRoles));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedBy(String modifiedBy) {
            if (modifiedBy == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "modifiedBy");
            }
            this.modifiedBy = modifiedBy;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedDate(String modifiedDate) {
            if (modifiedDate == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "modifiedDate");
            }
            this.modifiedDate = modifiedDate;
            return this;
        }
        @CustomType.Setter
        public Builder roleDescription(String roleDescription) {
            if (roleDescription == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "roleDescription");
            }
            this.roleDescription = roleDescription;
            return this;
        }
        @CustomType.Setter
        public Builder roleId(Integer roleId) {
            if (roleId == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "roleId");
            }
            this.roleId = roleId;
            return this;
        }
        @CustomType.Setter
        public Builder roleName(String roleName) {
            if (roleName == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "roleName");
            }
            this.roleName = roleName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder users(List<GetIamRoleUser> users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("GetIamRoleResult", "users");
            }
            this.users = users;
            return this;
        }
        public Builder users(GetIamRoleUser... users) {
            return users(List.of(users));
        }
        public GetIamRoleResult build() {
            final var _resultValue = new GetIamRoleResult();
            _resultValue.actions = actions;
            _resultValue.createdBy = createdBy;
            _resultValue.createdDate = createdDate;
            _resultValue.grantedRoles = grantedRoles;
            _resultValue.id = id;
            _resultValue.modifiedBy = modifiedBy;
            _resultValue.modifiedDate = modifiedDate;
            _resultValue.roleDescription = roleDescription;
            _resultValue.roleId = roleId;
            _resultValue.roleName = roleName;
            _resultValue.type = type;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
