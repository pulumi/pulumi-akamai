// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs Empty = new GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs();

    /**
     * When enabled, this allows you to deny requests to a subcustomer&#39;s content based on specific match conditions, which you use Cloud Embed to configure in each subcustomer&#39;s policy.
     * 
     */
    @Import(name="accessControl")
    private @Nullable Output<Boolean> accessControl;

    /**
     * @return When enabled, this allows you to deny requests to a subcustomer&#39;s content based on specific match conditions, which you use Cloud Embed to configure in each subcustomer&#39;s policy.
     * 
     */
    public Optional<Output<Boolean>> accessControl() {
        return Optional.ofNullable(this.accessControl);
    }

    /**
     * Allows you to set which query parameters are included in the cache key.
     * 
     */
    @Import(name="cacheKey")
    private @Nullable Output<Boolean> cacheKey;

    /**
     * @return Allows you to set which query parameters are included in the cache key.
     * 
     */
    public Optional<Output<Boolean>> cacheKey() {
        return Optional.ofNullable(this.cacheKey);
    }

    /**
     * Modifies content caching rules.
     * 
     */
    @Import(name="caching")
    private @Nullable Output<Boolean> caching;

    /**
     * @return Modifies content caching rules.
     * 
     */
    public Optional<Output<Boolean>> caching() {
        return Optional.ofNullable(this.caching);
    }

    /**
     * Allows compression of subcustomer content.
     * 
     */
    @Import(name="contentCompressor")
    private @Nullable Output<Boolean> contentCompressor;

    /**
     * @return Allows compression of subcustomer content.
     * 
     */
    public Optional<Output<Boolean>> contentCompressor() {
        return Optional.ofNullable(this.contentCompressor);
    }

    /**
     * Allows you to apply the `dynamicWebContent` behavior to further modify how dynamic content behaves for subcustomers.
     * 
     */
    @Import(name="dynamicWebContent")
    private @Nullable Output<Boolean> dynamicWebContent;

    /**
     * @return Allows you to apply the `dynamicWebContent` behavior to further modify how dynamic content behaves for subcustomers.
     * 
     */
    public Optional<Output<Boolean>> dynamicWebContent() {
        return Optional.ofNullable(this.dynamicWebContent);
    }

    /**
     * Allows Cloud Embed to dynamically modify your subcustomers&#39; content.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Allows Cloud Embed to dynamically modify your subcustomers&#39; content.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Sets subcustomers&#39; location-based whitelists or blacklists.
     * 
     */
    @Import(name="geoLocation")
    private @Nullable Output<Boolean> geoLocation;

    /**
     * @return Sets subcustomers&#39; location-based whitelists or blacklists.
     * 
     */
    public Optional<Output<Boolean>> geoLocation() {
        return Optional.ofNullable(this.geoLocation);
    }

    /**
     * Sets subcustomers&#39; IP whitelists or blacklists.
     * 
     */
    @Import(name="ip")
    private @Nullable Output<Boolean> ip;

    /**
     * @return Sets subcustomers&#39; IP whitelists or blacklists.
     * 
     */
    public Optional<Output<Boolean>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * Enables large file delivery for subcustomers.
     * 
     */
    @Import(name="largeFileDelivery")
    private @Nullable Output<Boolean> largeFileDelivery;

    /**
     * @return Enables large file delivery for subcustomers.
     * 
     */
    public Optional<Output<Boolean>> largeFileDelivery() {
        return Optional.ofNullable(this.largeFileDelivery);
    }

    @Import(name="liveVideoDelivery")
    private @Nullable Output<Boolean> liveVideoDelivery;

    public Optional<Output<Boolean>> liveVideoDelivery() {
        return Optional.ofNullable(this.liveVideoDelivery);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Modifies a subcustomer&#39;s request path.
     * 
     */
    @Import(name="modifyPath")
    private @Nullable Output<Boolean> modifyPath;

    /**
     * @return Modifies a subcustomer&#39;s request path.
     * 
     */
    public Optional<Output<Boolean>> modifyPath() {
        return Optional.ofNullable(this.modifyPath);
    }

    /**
     * Enables delivery of media assets to subcustomers.
     * 
     */
    @Import(name="onDemandVideoDelivery")
    private @Nullable Output<Boolean> onDemandVideoDelivery;

    /**
     * @return Enables delivery of media assets to subcustomers.
     * 
     */
    public Optional<Output<Boolean>> onDemandVideoDelivery() {
        return Optional.ofNullable(this.onDemandVideoDelivery);
    }

    /**
     * Allows you to assign origin hostnames for customers.
     * 
     */
    @Import(name="origin")
    private @Nullable Output<Boolean> origin;

    /**
     * @return Allows you to assign origin hostnames for customers.
     * 
     */
    public Optional<Output<Boolean>> origin() {
        return Optional.ofNullable(this.origin);
    }

    /**
     * This specifies the appropriate domain suffix, which you should typically match with your property hostname. It identifies the domain as trustworthy on the Akamai network, despite being defined within Cloud Embed, outside of your base property configuration. Include this domain suffix if you want to purge subcustomer URLs. For example, if you provide a value of `suffix.example.com`, then to purge `subcustomer.com/some/path`, specify `subcustomer.com.suffix.example.com/some/path` as the purge request&#39;s URL.
     * 
     */
    @Import(name="partnerDomainSuffix")
    private @Nullable Output<String> partnerDomainSuffix;

    /**
     * @return This specifies the appropriate domain suffix, which you should typically match with your property hostname. It identifies the domain as trustworthy on the Akamai network, despite being defined within Cloud Embed, outside of your base property configuration. Include this domain suffix if you want to purge subcustomer URLs. For example, if you provide a value of `suffix.example.com`, then to purge `subcustomer.com/some/path`, specify `subcustomer.com.suffix.example.com/some/path` as the purge request&#39;s URL.
     * 
     */
    public Optional<Output<String>> partnerDomainSuffix() {
        return Optional.ofNullable(this.partnerDomainSuffix);
    }

    /**
     * Sets subcustomers&#39; referrer whitelists or blacklist.
     * 
     */
    @Import(name="referrer")
    private @Nullable Output<Boolean> referrer;

    /**
     * @return Sets subcustomers&#39; referrer whitelists or blacklist.
     * 
     */
    public Optional<Output<Boolean>> referrer() {
        return Optional.ofNullable(this.referrer);
    }

    /**
     * Allows you to reschedule when content validates for subcustomers.
     * 
     */
    @Import(name="refreshContent")
    private @Nullable Output<Boolean> refreshContent;

    /**
     * @return Allows you to reschedule when content validates for subcustomers.
     * 
     */
    public Optional<Output<Boolean>> refreshContent() {
        return Optional.ofNullable(this.refreshContent);
    }

    /**
     * Allows you to configure unique failover sites for each subcustomer&#39;s policy.
     * 
     */
    @Import(name="siteFailover")
    private @Nullable Output<Boolean> siteFailover;

    /**
     * @return Allows you to configure unique failover sites for each subcustomer&#39;s policy.
     * 
     */
    public Optional<Output<Boolean>> siteFailover() {
        return Optional.ofNullable(this.siteFailover);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * When enabled, this allows you to configure edge servers to use tokens to control access to subcustomer content.  Use Cloud Embed to configure the token to appear in a cookie, header, or query parameter.
     * 
     */
    @Import(name="tokenAuthorization")
    private @Nullable Output<Boolean> tokenAuthorization;

    /**
     * @return When enabled, this allows you to configure edge servers to use tokens to control access to subcustomer content.  Use Cloud Embed to configure the token to appear in a cookie, header, or query parameter.
     * 
     */
    public Optional<Output<Boolean>> tokenAuthorization() {
        return Optional.ofNullable(this.tokenAuthorization);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    /**
     * Web application firewall (WAF) filters, monitors, and blocks certain HTTP traffic. Use `Akamai Cloud Embed` to add a specific behavior to a subcustomer policy and configure how WAF protection is applied.
     * 
     */
    @Import(name="webApplicationFirewall")
    private @Nullable Output<Boolean> webApplicationFirewall;

    /**
     * @return Web application firewall (WAF) filters, monitors, and blocks certain HTTP traffic. Use `Akamai Cloud Embed` to add a specific behavior to a subcustomer policy and configure how WAF protection is applied.
     * 
     */
    public Optional<Output<Boolean>> webApplicationFirewall() {
        return Optional.ofNullable(this.webApplicationFirewall);
    }

    private GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs() {}

    private GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs(GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs $) {
        this.accessControl = $.accessControl;
        this.cacheKey = $.cacheKey;
        this.caching = $.caching;
        this.contentCompressor = $.contentCompressor;
        this.dynamicWebContent = $.dynamicWebContent;
        this.enabled = $.enabled;
        this.geoLocation = $.geoLocation;
        this.ip = $.ip;
        this.largeFileDelivery = $.largeFileDelivery;
        this.liveVideoDelivery = $.liveVideoDelivery;
        this.locked = $.locked;
        this.modifyPath = $.modifyPath;
        this.onDemandVideoDelivery = $.onDemandVideoDelivery;
        this.origin = $.origin;
        this.partnerDomainSuffix = $.partnerDomainSuffix;
        this.referrer = $.referrer;
        this.refreshContent = $.refreshContent;
        this.siteFailover = $.siteFailover;
        this.templateUuid = $.templateUuid;
        this.tokenAuthorization = $.tokenAuthorization;
        this.uuid = $.uuid;
        this.webApplicationFirewall = $.webApplicationFirewall;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessControl When enabled, this allows you to deny requests to a subcustomer&#39;s content based on specific match conditions, which you use Cloud Embed to configure in each subcustomer&#39;s policy.
         * 
         * @return builder
         * 
         */
        public Builder accessControl(@Nullable Output<Boolean> accessControl) {
            $.accessControl = accessControl;
            return this;
        }

        /**
         * @param accessControl When enabled, this allows you to deny requests to a subcustomer&#39;s content based on specific match conditions, which you use Cloud Embed to configure in each subcustomer&#39;s policy.
         * 
         * @return builder
         * 
         */
        public Builder accessControl(Boolean accessControl) {
            return accessControl(Output.of(accessControl));
        }

        /**
         * @param cacheKey Allows you to set which query parameters are included in the cache key.
         * 
         * @return builder
         * 
         */
        public Builder cacheKey(@Nullable Output<Boolean> cacheKey) {
            $.cacheKey = cacheKey;
            return this;
        }

        /**
         * @param cacheKey Allows you to set which query parameters are included in the cache key.
         * 
         * @return builder
         * 
         */
        public Builder cacheKey(Boolean cacheKey) {
            return cacheKey(Output.of(cacheKey));
        }

        /**
         * @param caching Modifies content caching rules.
         * 
         * @return builder
         * 
         */
        public Builder caching(@Nullable Output<Boolean> caching) {
            $.caching = caching;
            return this;
        }

        /**
         * @param caching Modifies content caching rules.
         * 
         * @return builder
         * 
         */
        public Builder caching(Boolean caching) {
            return caching(Output.of(caching));
        }

        /**
         * @param contentCompressor Allows compression of subcustomer content.
         * 
         * @return builder
         * 
         */
        public Builder contentCompressor(@Nullable Output<Boolean> contentCompressor) {
            $.contentCompressor = contentCompressor;
            return this;
        }

        /**
         * @param contentCompressor Allows compression of subcustomer content.
         * 
         * @return builder
         * 
         */
        public Builder contentCompressor(Boolean contentCompressor) {
            return contentCompressor(Output.of(contentCompressor));
        }

        /**
         * @param dynamicWebContent Allows you to apply the `dynamicWebContent` behavior to further modify how dynamic content behaves for subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder dynamicWebContent(@Nullable Output<Boolean> dynamicWebContent) {
            $.dynamicWebContent = dynamicWebContent;
            return this;
        }

        /**
         * @param dynamicWebContent Allows you to apply the `dynamicWebContent` behavior to further modify how dynamic content behaves for subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder dynamicWebContent(Boolean dynamicWebContent) {
            return dynamicWebContent(Output.of(dynamicWebContent));
        }

        /**
         * @param enabled Allows Cloud Embed to dynamically modify your subcustomers&#39; content.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Allows Cloud Embed to dynamically modify your subcustomers&#39; content.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param geoLocation Sets subcustomers&#39; location-based whitelists or blacklists.
         * 
         * @return builder
         * 
         */
        public Builder geoLocation(@Nullable Output<Boolean> geoLocation) {
            $.geoLocation = geoLocation;
            return this;
        }

        /**
         * @param geoLocation Sets subcustomers&#39; location-based whitelists or blacklists.
         * 
         * @return builder
         * 
         */
        public Builder geoLocation(Boolean geoLocation) {
            return geoLocation(Output.of(geoLocation));
        }

        /**
         * @param ip Sets subcustomers&#39; IP whitelists or blacklists.
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<Boolean> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip Sets subcustomers&#39; IP whitelists or blacklists.
         * 
         * @return builder
         * 
         */
        public Builder ip(Boolean ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param largeFileDelivery Enables large file delivery for subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder largeFileDelivery(@Nullable Output<Boolean> largeFileDelivery) {
            $.largeFileDelivery = largeFileDelivery;
            return this;
        }

        /**
         * @param largeFileDelivery Enables large file delivery for subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder largeFileDelivery(Boolean largeFileDelivery) {
            return largeFileDelivery(Output.of(largeFileDelivery));
        }

        public Builder liveVideoDelivery(@Nullable Output<Boolean> liveVideoDelivery) {
            $.liveVideoDelivery = liveVideoDelivery;
            return this;
        }

        public Builder liveVideoDelivery(Boolean liveVideoDelivery) {
            return liveVideoDelivery(Output.of(liveVideoDelivery));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param modifyPath Modifies a subcustomer&#39;s request path.
         * 
         * @return builder
         * 
         */
        public Builder modifyPath(@Nullable Output<Boolean> modifyPath) {
            $.modifyPath = modifyPath;
            return this;
        }

        /**
         * @param modifyPath Modifies a subcustomer&#39;s request path.
         * 
         * @return builder
         * 
         */
        public Builder modifyPath(Boolean modifyPath) {
            return modifyPath(Output.of(modifyPath));
        }

        /**
         * @param onDemandVideoDelivery Enables delivery of media assets to subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder onDemandVideoDelivery(@Nullable Output<Boolean> onDemandVideoDelivery) {
            $.onDemandVideoDelivery = onDemandVideoDelivery;
            return this;
        }

        /**
         * @param onDemandVideoDelivery Enables delivery of media assets to subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder onDemandVideoDelivery(Boolean onDemandVideoDelivery) {
            return onDemandVideoDelivery(Output.of(onDemandVideoDelivery));
        }

        /**
         * @param origin Allows you to assign origin hostnames for customers.
         * 
         * @return builder
         * 
         */
        public Builder origin(@Nullable Output<Boolean> origin) {
            $.origin = origin;
            return this;
        }

        /**
         * @param origin Allows you to assign origin hostnames for customers.
         * 
         * @return builder
         * 
         */
        public Builder origin(Boolean origin) {
            return origin(Output.of(origin));
        }

        /**
         * @param partnerDomainSuffix This specifies the appropriate domain suffix, which you should typically match with your property hostname. It identifies the domain as trustworthy on the Akamai network, despite being defined within Cloud Embed, outside of your base property configuration. Include this domain suffix if you want to purge subcustomer URLs. For example, if you provide a value of `suffix.example.com`, then to purge `subcustomer.com/some/path`, specify `subcustomer.com.suffix.example.com/some/path` as the purge request&#39;s URL.
         * 
         * @return builder
         * 
         */
        public Builder partnerDomainSuffix(@Nullable Output<String> partnerDomainSuffix) {
            $.partnerDomainSuffix = partnerDomainSuffix;
            return this;
        }

        /**
         * @param partnerDomainSuffix This specifies the appropriate domain suffix, which you should typically match with your property hostname. It identifies the domain as trustworthy on the Akamai network, despite being defined within Cloud Embed, outside of your base property configuration. Include this domain suffix if you want to purge subcustomer URLs. For example, if you provide a value of `suffix.example.com`, then to purge `subcustomer.com/some/path`, specify `subcustomer.com.suffix.example.com/some/path` as the purge request&#39;s URL.
         * 
         * @return builder
         * 
         */
        public Builder partnerDomainSuffix(String partnerDomainSuffix) {
            return partnerDomainSuffix(Output.of(partnerDomainSuffix));
        }

        /**
         * @param referrer Sets subcustomers&#39; referrer whitelists or blacklist.
         * 
         * @return builder
         * 
         */
        public Builder referrer(@Nullable Output<Boolean> referrer) {
            $.referrer = referrer;
            return this;
        }

        /**
         * @param referrer Sets subcustomers&#39; referrer whitelists or blacklist.
         * 
         * @return builder
         * 
         */
        public Builder referrer(Boolean referrer) {
            return referrer(Output.of(referrer));
        }

        /**
         * @param refreshContent Allows you to reschedule when content validates for subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder refreshContent(@Nullable Output<Boolean> refreshContent) {
            $.refreshContent = refreshContent;
            return this;
        }

        /**
         * @param refreshContent Allows you to reschedule when content validates for subcustomers.
         * 
         * @return builder
         * 
         */
        public Builder refreshContent(Boolean refreshContent) {
            return refreshContent(Output.of(refreshContent));
        }

        /**
         * @param siteFailover Allows you to configure unique failover sites for each subcustomer&#39;s policy.
         * 
         * @return builder
         * 
         */
        public Builder siteFailover(@Nullable Output<Boolean> siteFailover) {
            $.siteFailover = siteFailover;
            return this;
        }

        /**
         * @param siteFailover Allows you to configure unique failover sites for each subcustomer&#39;s policy.
         * 
         * @return builder
         * 
         */
        public Builder siteFailover(Boolean siteFailover) {
            return siteFailover(Output.of(siteFailover));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param tokenAuthorization When enabled, this allows you to configure edge servers to use tokens to control access to subcustomer content.  Use Cloud Embed to configure the token to appear in a cookie, header, or query parameter.
         * 
         * @return builder
         * 
         */
        public Builder tokenAuthorization(@Nullable Output<Boolean> tokenAuthorization) {
            $.tokenAuthorization = tokenAuthorization;
            return this;
        }

        /**
         * @param tokenAuthorization When enabled, this allows you to configure edge servers to use tokens to control access to subcustomer content.  Use Cloud Embed to configure the token to appear in a cookie, header, or query parameter.
         * 
         * @return builder
         * 
         */
        public Builder tokenAuthorization(Boolean tokenAuthorization) {
            return tokenAuthorization(Output.of(tokenAuthorization));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        /**
         * @param webApplicationFirewall Web application firewall (WAF) filters, monitors, and blocks certain HTTP traffic. Use `Akamai Cloud Embed` to add a specific behavior to a subcustomer policy and configure how WAF protection is applied.
         * 
         * @return builder
         * 
         */
        public Builder webApplicationFirewall(@Nullable Output<Boolean> webApplicationFirewall) {
            $.webApplicationFirewall = webApplicationFirewall;
            return this;
        }

        /**
         * @param webApplicationFirewall Web application firewall (WAF) filters, monitors, and blocks certain HTTP traffic. Use `Akamai Cloud Embed` to add a specific behavior to a subcustomer policy and configure how WAF protection is applied.
         * 
         * @return builder
         * 
         */
        public Builder webApplicationFirewall(Boolean webApplicationFirewall) {
            return webApplicationFirewall(Output.of(webApplicationFirewall));
        }

        public GetPropertyRulesBuilderRulesV20250218BehaviorSubCustomerArgs build() {
            return $;
        }
    }

}
