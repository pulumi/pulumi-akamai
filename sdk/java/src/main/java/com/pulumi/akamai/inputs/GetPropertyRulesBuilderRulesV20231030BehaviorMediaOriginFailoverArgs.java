// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs Empty = new GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs();

    /**
     * When enabled, caches the error response.
     * 
     */
    @Import(name="cacheErrorResponse")
    private @Nullable Output<Boolean> cacheErrorResponse;

    /**
     * @return When enabled, caches the error response.
     * 
     */
    public Optional<Output<Boolean>> cacheErrorResponse() {
        return Optional.ofNullable(this.cacheErrorResponse);
    }

    /**
     * This sets error response&#39;s TTL.
     * 
     */
    @Import(name="cacheWindow")
    private @Nullable Output<String> cacheWindow;

    /**
     * @return This sets error response&#39;s TTL.
     * 
     */
    public Optional<Output<String>> cacheWindow() {
        return Optional.ofNullable(this.cacheWindow);
    }

    /**
     * Specifies the response code served to the client.
     * 
     */
    @Import(name="clientResponseCode")
    private @Nullable Output<String> clientResponseCode;

    /**
     * @return Specifies the response code served to the client.
     * 
     */
    public Optional<Output<String>> clientResponseCode() {
        return Optional.ofNullable(this.clientResponseCode);
    }

    /**
     * Allows you to configure failover settings when the origin has content errors.
     * 
     */
    @Import(name="detectObjectUnavailable")
    private @Nullable Output<Boolean> detectObjectUnavailable;

    /**
     * @return Allows you to configure failover settings when the origin has content errors.
     * 
     */
    public Optional<Output<Boolean>> detectObjectUnavailable() {
        return Optional.ofNullable(this.detectObjectUnavailable);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="detectObjectUnavailableTitle")
    private @Nullable Output<String> detectObjectUnavailableTitle;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> detectObjectUnavailableTitle() {
        return Optional.ofNullable(this.detectObjectUnavailableTitle);
    }

    /**
     * Allows you to configure failover settings when the origin server responds with errors.
     * 
     */
    @Import(name="detectOriginUnavailable")
    private @Nullable Output<Boolean> detectOriginUnavailable;

    /**
     * @return Allows you to configure failover settings when the origin server responds with errors.
     * 
     */
    public Optional<Output<Boolean>> detectOriginUnavailable() {
        return Optional.ofNullable(this.detectOriginUnavailable);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="detectOriginUnavailableTitle")
    private @Nullable Output<String> detectOriginUnavailableTitle;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> detectOriginUnavailableTitle() {
        return Optional.ofNullable(this.detectOriginUnavailableTitle);
    }

    /**
     * Allows you to configure what happens when the origin is unresponsive.
     * 
     */
    @Import(name="detectOriginUnresponsive")
    private @Nullable Output<Boolean> detectOriginUnresponsive;

    /**
     * @return Allows you to configure what happens when the origin is unresponsive.
     * 
     */
    public Optional<Output<Boolean>> detectOriginUnresponsive() {
        return Optional.ofNullable(this.detectOriginUnresponsive);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="detectOriginUnresponsiveTitle")
    private @Nullable Output<String> detectOriginUnresponsiveTitle;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> detectOriginUnresponsiveTitle() {
        return Optional.ofNullable(this.detectOriginUnresponsiveTitle);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * This specifies the redirect&#39;s destination hostname.
     * 
     */
    @Import(name="objectUnavailableAlternateHost")
    private @Nullable Output<String> objectUnavailableAlternateHost;

    /**
     * @return This specifies the redirect&#39;s destination hostname.
     * 
     */
    public Optional<Output<String>> objectUnavailableAlternateHost() {
        return Optional.ofNullable(this.objectUnavailableAlternateHost);
    }

    /**
     * This specifies the origin hostname.
     * 
     */
    @Import(name="objectUnavailableBackupHost")
    private @Nullable Output<String> objectUnavailableBackupHost;

    /**
     * @return This specifies the origin hostname.
     * 
     */
    public Optional<Output<String>> objectUnavailableBackupHost() {
        return Optional.ofNullable(this.objectUnavailableBackupHost);
    }

    /**
     * Enabling this blacklists the origin&#39;s IP address.
     * 
     */
    @Import(name="objectUnavailableBlacklistOriginIp")
    private @Nullable Output<Boolean> objectUnavailableBlacklistOriginIp;

    /**
     * @return Enabling this blacklists the origin&#39;s IP address.
     * 
     */
    public Optional<Output<Boolean>> objectUnavailableBlacklistOriginIp() {
        return Optional.ofNullable(this.objectUnavailableBlacklistOriginIp);
    }

    /**
     * This sets the delay before blacklisting an IP address.
     * 
     */
    @Import(name="objectUnavailableBlacklistWindow")
    private @Nullable Output<String> objectUnavailableBlacklistWindow;

    /**
     * @return This sets the delay before blacklisting an IP address.
     * 
     */
    public Optional<Output<String>> objectUnavailableBlacklistWindow() {
        return Optional.ofNullable(this.objectUnavailableBlacklistWindow);
    }

    /**
     * Changes the request protocol.
     * 
     */
    @Import(name="objectUnavailableChangeProtocol")
    private @Nullable Output<Boolean> objectUnavailableChangeProtocol;

    /**
     * @return Changes the request protocol.
     * 
     */
    public Optional<Output<Boolean>> objectUnavailableChangeProtocol() {
        return Optional.ofNullable(this.objectUnavailableChangeProtocol);
    }

    /**
     * Specify `RESPONSE_CODES`, the only available option.
     * 
     */
    @Import(name="objectUnavailableDetectionLevel")
    private @Nullable Output<String> objectUnavailableDetectionLevel;

    /**
     * @return Specify `RESPONSE_CODES`, the only available option.
     * 
     */
    public Optional<Output<String>> objectUnavailableDetectionLevel() {
        return Optional.ofNullable(this.objectUnavailableDetectionLevel);
    }

    /**
     * Enabling this includes the original set of query parameters.
     * 
     */
    @Import(name="objectUnavailableIncludeQueryString")
    private @Nullable Output<Boolean> objectUnavailableIncludeQueryString;

    /**
     * @return Enabling this includes the original set of query parameters.
     * 
     */
    public Optional<Output<Boolean>> objectUnavailableIncludeQueryString() {
        return Optional.ofNullable(this.objectUnavailableIncludeQueryString);
    }

    /**
     * This specifies the path to form the new URL.
     * 
     */
    @Import(name="objectUnavailableModifiedPath")
    private @Nullable Output<String> objectUnavailableModifiedPath;

    /**
     * @return This specifies the path to form the new URL.
     * 
     */
    public Optional<Output<String>> objectUnavailableModifiedPath() {
        return Optional.ofNullable(this.objectUnavailableModifiedPath);
    }

    /**
     * Enabling this allows you to modify the request path.
     * 
     */
    @Import(name="objectUnavailableModifyRequestPath")
    private @Nullable Output<Boolean> objectUnavailableModifyRequestPath;

    /**
     * @return Enabling this allows you to modify the request path.
     * 
     */
    public Optional<Output<Boolean>> objectUnavailableModifyRequestPath() {
        return Optional.ofNullable(this.objectUnavailableModifyRequestPath);
    }

    /**
     * Specifies either the `HTTP` or `HTTPS` protocol.
     * 
     */
    @Import(name="objectUnavailableProtocol")
    private @Nullable Output<String> objectUnavailableProtocol;

    /**
     * @return Specifies either the `HTTP` or `HTTPS` protocol.
     * 
     */
    public Optional<Output<String>> objectUnavailableProtocol() {
        return Optional.ofNullable(this.objectUnavailableProtocol);
    }

    /**
     * This sets the recovery option.
     * 
     */
    @Import(name="objectUnavailableRecovery")
    private @Nullable Output<String> objectUnavailableRecovery;

    /**
     * @return This sets the recovery option.
     * 
     */
    public Optional<Output<String>> objectUnavailableRecovery() {
        return Optional.ofNullable(this.objectUnavailableRecovery);
    }

    /**
     * Specifies a redirect response code.
     * 
     */
    @Import(name="objectUnavailableRedirectMethod")
    private @Nullable Output<Integer> objectUnavailableRedirectMethod;

    /**
     * @return Specifies a redirect response code.
     * 
     */
    public Optional<Output<Integer>> objectUnavailableRedirectMethod() {
        return Optional.ofNullable(this.objectUnavailableRedirectMethod);
    }

    /**
     * Specifies the set of response codes identifying when there are content errors.
     * 
     */
    @Import(name="objectUnavailableResponseCodes")
    private @Nullable Output<List<String>> objectUnavailableResponseCodes;

    /**
     * @return Specifies the set of response codes identifying when there are content errors.
     * 
     */
    public Optional<Output<List<String>>> objectUnavailableResponseCodes() {
        return Optional.ofNullable(this.objectUnavailableResponseCodes);
    }

    /**
     * Sets how many times to retry.
     * 
     */
    @Import(name="objectUnavailableRetryLimit")
    private @Nullable Output<String> objectUnavailableRetryLimit;

    /**
     * @return Sets how many times to retry.
     * 
     */
    public Optional<Output<String>> objectUnavailableRetryLimit() {
        return Optional.ofNullable(this.objectUnavailableRetryLimit);
    }

    /**
     * This specifies the redirect&#39;s destination hostname.
     * 
     */
    @Import(name="originUnavailableAlternateHost")
    private @Nullable Output<String> originUnavailableAlternateHost;

    /**
     * @return This specifies the redirect&#39;s destination hostname.
     * 
     */
    public Optional<Output<String>> originUnavailableAlternateHost() {
        return Optional.ofNullable(this.originUnavailableAlternateHost);
    }

    /**
     * This specifies the origin hostname.
     * 
     */
    @Import(name="originUnavailableBackupHost")
    private @Nullable Output<String> originUnavailableBackupHost;

    /**
     * @return This specifies the origin hostname.
     * 
     */
    public Optional<Output<String>> originUnavailableBackupHost() {
        return Optional.ofNullable(this.originUnavailableBackupHost);
    }

    /**
     * Enabling this blacklists the origin&#39;s IP address.
     * 
     */
    @Import(name="originUnavailableBlacklistOriginIp")
    private @Nullable Output<Boolean> originUnavailableBlacklistOriginIp;

    /**
     * @return Enabling this blacklists the origin&#39;s IP address.
     * 
     */
    public Optional<Output<Boolean>> originUnavailableBlacklistOriginIp() {
        return Optional.ofNullable(this.originUnavailableBlacklistOriginIp);
    }

    /**
     * This sets the delay before blacklisting an IP address.
     * 
     */
    @Import(name="originUnavailableBlacklistWindow")
    private @Nullable Output<String> originUnavailableBlacklistWindow;

    /**
     * @return This sets the delay before blacklisting an IP address.
     * 
     */
    public Optional<Output<String>> originUnavailableBlacklistWindow() {
        return Optional.ofNullable(this.originUnavailableBlacklistWindow);
    }

    /**
     * Modifies the request protocol.
     * 
     */
    @Import(name="originUnavailableChangeProtocol")
    private @Nullable Output<Boolean> originUnavailableChangeProtocol;

    /**
     * @return Modifies the request protocol.
     * 
     */
    public Optional<Output<Boolean>> originUnavailableChangeProtocol() {
        return Optional.ofNullable(this.originUnavailableChangeProtocol);
    }

    /**
     * Specify `RESPONSE_CODES`, the only available option.
     * 
     */
    @Import(name="originUnavailableDetectionLevel")
    private @Nullable Output<String> originUnavailableDetectionLevel;

    /**
     * @return Specify `RESPONSE_CODES`, the only available option.
     * 
     */
    public Optional<Output<String>> originUnavailableDetectionLevel() {
        return Optional.ofNullable(this.originUnavailableDetectionLevel);
    }

    /**
     * Enabling this includes the original set of query parameters.
     * 
     */
    @Import(name="originUnavailableIncludeQueryString")
    private @Nullable Output<Boolean> originUnavailableIncludeQueryString;

    /**
     * @return Enabling this includes the original set of query parameters.
     * 
     */
    public Optional<Output<Boolean>> originUnavailableIncludeQueryString() {
        return Optional.ofNullable(this.originUnavailableIncludeQueryString);
    }

    /**
     * This specifies the path to form the new URL.
     * 
     */
    @Import(name="originUnavailableModifiedPath")
    private @Nullable Output<String> originUnavailableModifiedPath;

    /**
     * @return This specifies the path to form the new URL.
     * 
     */
    public Optional<Output<String>> originUnavailableModifiedPath() {
        return Optional.ofNullable(this.originUnavailableModifiedPath);
    }

    /**
     * Modifies the request path.
     * 
     */
    @Import(name="originUnavailableModifyRequestPath")
    private @Nullable Output<Boolean> originUnavailableModifyRequestPath;

    /**
     * @return Modifies the request path.
     * 
     */
    public Optional<Output<Boolean>> originUnavailableModifyRequestPath() {
        return Optional.ofNullable(this.originUnavailableModifyRequestPath);
    }

    /**
     * Specifies either the `HTTP` or `HTTPS` protocol.
     * 
     */
    @Import(name="originUnavailableProtocol")
    private @Nullable Output<String> originUnavailableProtocol;

    /**
     * @return Specifies either the `HTTP` or `HTTPS` protocol.
     * 
     */
    public Optional<Output<String>> originUnavailableProtocol() {
        return Optional.ofNullable(this.originUnavailableProtocol);
    }

    /**
     * This sets the recovery option.
     * 
     */
    @Import(name="originUnavailableRecovery")
    private @Nullable Output<String> originUnavailableRecovery;

    /**
     * @return This sets the recovery option.
     * 
     */
    public Optional<Output<String>> originUnavailableRecovery() {
        return Optional.ofNullable(this.originUnavailableRecovery);
    }

    /**
     * Specifies either a redirect response code.
     * 
     */
    @Import(name="originUnavailableRedirectMethod")
    private @Nullable Output<Integer> originUnavailableRedirectMethod;

    /**
     * @return Specifies either a redirect response code.
     * 
     */
    public Optional<Output<Integer>> originUnavailableRedirectMethod() {
        return Optional.ofNullable(this.originUnavailableRedirectMethod);
    }

    /**
     * Specifies the set of response codes identifying when the origin responds with errors.
     * 
     */
    @Import(name="originUnavailableResponseCodes")
    private @Nullable Output<List<String>> originUnavailableResponseCodes;

    /**
     * @return Specifies the set of response codes identifying when the origin responds with errors.
     * 
     */
    public Optional<Output<List<String>>> originUnavailableResponseCodes() {
        return Optional.ofNullable(this.originUnavailableResponseCodes);
    }

    /**
     * Sets how many times to retry.
     * 
     */
    @Import(name="originUnavailableRetryLimit")
    private @Nullable Output<String> originUnavailableRetryLimit;

    /**
     * @return Sets how many times to retry.
     * 
     */
    public Optional<Output<String>> originUnavailableRetryLimit() {
        return Optional.ofNullable(this.originUnavailableRetryLimit);
    }

    /**
     * This specifies the redirect&#39;s destination hostname.
     * 
     */
    @Import(name="originUnresponsiveAlternateHost")
    private @Nullable Output<String> originUnresponsiveAlternateHost;

    /**
     * @return This specifies the redirect&#39;s destination hostname.
     * 
     */
    public Optional<Output<String>> originUnresponsiveAlternateHost() {
        return Optional.ofNullable(this.originUnresponsiveAlternateHost);
    }

    /**
     * This specifies the origin hostname.
     * 
     */
    @Import(name="originUnresponsiveBackupHost")
    private @Nullable Output<String> originUnresponsiveBackupHost;

    /**
     * @return This specifies the origin hostname.
     * 
     */
    public Optional<Output<String>> originUnresponsiveBackupHost() {
        return Optional.ofNullable(this.originUnresponsiveBackupHost);
    }

    /**
     * Enabling this blacklists the origin&#39;s IP address.
     * 
     */
    @Import(name="originUnresponsiveBlacklistOriginIp")
    private @Nullable Output<Boolean> originUnresponsiveBlacklistOriginIp;

    /**
     * @return Enabling this blacklists the origin&#39;s IP address.
     * 
     */
    public Optional<Output<Boolean>> originUnresponsiveBlacklistOriginIp() {
        return Optional.ofNullable(this.originUnresponsiveBlacklistOriginIp);
    }

    /**
     * This sets the delay before blacklisting an IP address.
     * 
     */
    @Import(name="originUnresponsiveBlacklistWindow")
    private @Nullable Output<String> originUnresponsiveBlacklistWindow;

    /**
     * @return This sets the delay before blacklisting an IP address.
     * 
     */
    public Optional<Output<String>> originUnresponsiveBlacklistWindow() {
        return Optional.ofNullable(this.originUnresponsiveBlacklistWindow);
    }

    /**
     * This allows you to change the request protocol.
     * 
     */
    @Import(name="originUnresponsiveChangeProtocol")
    private @Nullable Output<Boolean> originUnresponsiveChangeProtocol;

    /**
     * @return This allows you to change the request protocol.
     * 
     */
    public Optional<Output<Boolean>> originUnresponsiveChangeProtocol() {
        return Optional.ofNullable(this.originUnresponsiveChangeProtocol);
    }

    /**
     * Specify the level of response to slow origin connections.
     * 
     */
    @Import(name="originUnresponsiveDetectionLevel")
    private @Nullable Output<String> originUnresponsiveDetectionLevel;

    /**
     * @return Specify the level of response to slow origin connections.
     * 
     */
    public Optional<Output<String>> originUnresponsiveDetectionLevel() {
        return Optional.ofNullable(this.originUnresponsiveDetectionLevel);
    }

    /**
     * Enabling this includes the original set of query parameters.
     * 
     */
    @Import(name="originUnresponsiveIncludeQueryString")
    private @Nullable Output<Boolean> originUnresponsiveIncludeQueryString;

    /**
     * @return Enabling this includes the original set of query parameters.
     * 
     */
    public Optional<Output<Boolean>> originUnresponsiveIncludeQueryString() {
        return Optional.ofNullable(this.originUnresponsiveIncludeQueryString);
    }

    /**
     * This specifies the path to form the new URL.
     * 
     */
    @Import(name="originUnresponsiveModifiedPath")
    private @Nullable Output<String> originUnresponsiveModifiedPath;

    /**
     * @return This specifies the path to form the new URL.
     * 
     */
    public Optional<Output<String>> originUnresponsiveModifiedPath() {
        return Optional.ofNullable(this.originUnresponsiveModifiedPath);
    }

    /**
     * Modifies the request path.
     * 
     */
    @Import(name="originUnresponsiveModifyRequestPath")
    private @Nullable Output<Boolean> originUnresponsiveModifyRequestPath;

    /**
     * @return Modifies the request path.
     * 
     */
    public Optional<Output<Boolean>> originUnresponsiveModifyRequestPath() {
        return Optional.ofNullable(this.originUnresponsiveModifyRequestPath);
    }

    /**
     * Specifies which protocol to use.
     * 
     */
    @Import(name="originUnresponsiveProtocol")
    private @Nullable Output<String> originUnresponsiveProtocol;

    /**
     * @return Specifies which protocol to use.
     * 
     */
    public Optional<Output<String>> originUnresponsiveProtocol() {
        return Optional.ofNullable(this.originUnresponsiveProtocol);
    }

    /**
     * This sets the recovery option.
     * 
     */
    @Import(name="originUnresponsiveRecovery")
    private @Nullable Output<String> originUnresponsiveRecovery;

    /**
     * @return This sets the recovery option.
     * 
     */
    public Optional<Output<String>> originUnresponsiveRecovery() {
        return Optional.ofNullable(this.originUnresponsiveRecovery);
    }

    /**
     * Specifies the redirect response code.
     * 
     */
    @Import(name="originUnresponsiveRedirectMethod")
    private @Nullable Output<Integer> originUnresponsiveRedirectMethod;

    /**
     * @return Specifies the redirect response code.
     * 
     */
    public Optional<Output<Integer>> originUnresponsiveRedirectMethod() {
        return Optional.ofNullable(this.originUnresponsiveRedirectMethod);
    }

    /**
     * Sets how many times to retry.
     * 
     */
    @Import(name="originUnresponsiveRetryLimit")
    private @Nullable Output<String> originUnresponsiveRetryLimit;

    /**
     * @return Sets how many times to retry.
     * 
     */
    public Optional<Output<String>> originUnresponsiveRetryLimit() {
        return Optional.ofNullable(this.originUnresponsiveRetryLimit);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="otherOptions")
    private @Nullable Output<String> otherOptions;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> otherOptions() {
        return Optional.ofNullable(this.otherOptions);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs() {}

    private GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs(GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs $) {
        this.cacheErrorResponse = $.cacheErrorResponse;
        this.cacheWindow = $.cacheWindow;
        this.clientResponseCode = $.clientResponseCode;
        this.detectObjectUnavailable = $.detectObjectUnavailable;
        this.detectObjectUnavailableTitle = $.detectObjectUnavailableTitle;
        this.detectOriginUnavailable = $.detectOriginUnavailable;
        this.detectOriginUnavailableTitle = $.detectOriginUnavailableTitle;
        this.detectOriginUnresponsive = $.detectOriginUnresponsive;
        this.detectOriginUnresponsiveTitle = $.detectOriginUnresponsiveTitle;
        this.locked = $.locked;
        this.objectUnavailableAlternateHost = $.objectUnavailableAlternateHost;
        this.objectUnavailableBackupHost = $.objectUnavailableBackupHost;
        this.objectUnavailableBlacklistOriginIp = $.objectUnavailableBlacklistOriginIp;
        this.objectUnavailableBlacklistWindow = $.objectUnavailableBlacklistWindow;
        this.objectUnavailableChangeProtocol = $.objectUnavailableChangeProtocol;
        this.objectUnavailableDetectionLevel = $.objectUnavailableDetectionLevel;
        this.objectUnavailableIncludeQueryString = $.objectUnavailableIncludeQueryString;
        this.objectUnavailableModifiedPath = $.objectUnavailableModifiedPath;
        this.objectUnavailableModifyRequestPath = $.objectUnavailableModifyRequestPath;
        this.objectUnavailableProtocol = $.objectUnavailableProtocol;
        this.objectUnavailableRecovery = $.objectUnavailableRecovery;
        this.objectUnavailableRedirectMethod = $.objectUnavailableRedirectMethod;
        this.objectUnavailableResponseCodes = $.objectUnavailableResponseCodes;
        this.objectUnavailableRetryLimit = $.objectUnavailableRetryLimit;
        this.originUnavailableAlternateHost = $.originUnavailableAlternateHost;
        this.originUnavailableBackupHost = $.originUnavailableBackupHost;
        this.originUnavailableBlacklistOriginIp = $.originUnavailableBlacklistOriginIp;
        this.originUnavailableBlacklistWindow = $.originUnavailableBlacklistWindow;
        this.originUnavailableChangeProtocol = $.originUnavailableChangeProtocol;
        this.originUnavailableDetectionLevel = $.originUnavailableDetectionLevel;
        this.originUnavailableIncludeQueryString = $.originUnavailableIncludeQueryString;
        this.originUnavailableModifiedPath = $.originUnavailableModifiedPath;
        this.originUnavailableModifyRequestPath = $.originUnavailableModifyRequestPath;
        this.originUnavailableProtocol = $.originUnavailableProtocol;
        this.originUnavailableRecovery = $.originUnavailableRecovery;
        this.originUnavailableRedirectMethod = $.originUnavailableRedirectMethod;
        this.originUnavailableResponseCodes = $.originUnavailableResponseCodes;
        this.originUnavailableRetryLimit = $.originUnavailableRetryLimit;
        this.originUnresponsiveAlternateHost = $.originUnresponsiveAlternateHost;
        this.originUnresponsiveBackupHost = $.originUnresponsiveBackupHost;
        this.originUnresponsiveBlacklistOriginIp = $.originUnresponsiveBlacklistOriginIp;
        this.originUnresponsiveBlacklistWindow = $.originUnresponsiveBlacklistWindow;
        this.originUnresponsiveChangeProtocol = $.originUnresponsiveChangeProtocol;
        this.originUnresponsiveDetectionLevel = $.originUnresponsiveDetectionLevel;
        this.originUnresponsiveIncludeQueryString = $.originUnresponsiveIncludeQueryString;
        this.originUnresponsiveModifiedPath = $.originUnresponsiveModifiedPath;
        this.originUnresponsiveModifyRequestPath = $.originUnresponsiveModifyRequestPath;
        this.originUnresponsiveProtocol = $.originUnresponsiveProtocol;
        this.originUnresponsiveRecovery = $.originUnresponsiveRecovery;
        this.originUnresponsiveRedirectMethod = $.originUnresponsiveRedirectMethod;
        this.originUnresponsiveRetryLimit = $.originUnresponsiveRetryLimit;
        this.otherOptions = $.otherOptions;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cacheErrorResponse When enabled, caches the error response.
         * 
         * @return builder
         * 
         */
        public Builder cacheErrorResponse(@Nullable Output<Boolean> cacheErrorResponse) {
            $.cacheErrorResponse = cacheErrorResponse;
            return this;
        }

        /**
         * @param cacheErrorResponse When enabled, caches the error response.
         * 
         * @return builder
         * 
         */
        public Builder cacheErrorResponse(Boolean cacheErrorResponse) {
            return cacheErrorResponse(Output.of(cacheErrorResponse));
        }

        /**
         * @param cacheWindow This sets error response&#39;s TTL.
         * 
         * @return builder
         * 
         */
        public Builder cacheWindow(@Nullable Output<String> cacheWindow) {
            $.cacheWindow = cacheWindow;
            return this;
        }

        /**
         * @param cacheWindow This sets error response&#39;s TTL.
         * 
         * @return builder
         * 
         */
        public Builder cacheWindow(String cacheWindow) {
            return cacheWindow(Output.of(cacheWindow));
        }

        /**
         * @param clientResponseCode Specifies the response code served to the client.
         * 
         * @return builder
         * 
         */
        public Builder clientResponseCode(@Nullable Output<String> clientResponseCode) {
            $.clientResponseCode = clientResponseCode;
            return this;
        }

        /**
         * @param clientResponseCode Specifies the response code served to the client.
         * 
         * @return builder
         * 
         */
        public Builder clientResponseCode(String clientResponseCode) {
            return clientResponseCode(Output.of(clientResponseCode));
        }

        /**
         * @param detectObjectUnavailable Allows you to configure failover settings when the origin has content errors.
         * 
         * @return builder
         * 
         */
        public Builder detectObjectUnavailable(@Nullable Output<Boolean> detectObjectUnavailable) {
            $.detectObjectUnavailable = detectObjectUnavailable;
            return this;
        }

        /**
         * @param detectObjectUnavailable Allows you to configure failover settings when the origin has content errors.
         * 
         * @return builder
         * 
         */
        public Builder detectObjectUnavailable(Boolean detectObjectUnavailable) {
            return detectObjectUnavailable(Output.of(detectObjectUnavailable));
        }

        /**
         * @param detectObjectUnavailableTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder detectObjectUnavailableTitle(@Nullable Output<String> detectObjectUnavailableTitle) {
            $.detectObjectUnavailableTitle = detectObjectUnavailableTitle;
            return this;
        }

        /**
         * @param detectObjectUnavailableTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder detectObjectUnavailableTitle(String detectObjectUnavailableTitle) {
            return detectObjectUnavailableTitle(Output.of(detectObjectUnavailableTitle));
        }

        /**
         * @param detectOriginUnavailable Allows you to configure failover settings when the origin server responds with errors.
         * 
         * @return builder
         * 
         */
        public Builder detectOriginUnavailable(@Nullable Output<Boolean> detectOriginUnavailable) {
            $.detectOriginUnavailable = detectOriginUnavailable;
            return this;
        }

        /**
         * @param detectOriginUnavailable Allows you to configure failover settings when the origin server responds with errors.
         * 
         * @return builder
         * 
         */
        public Builder detectOriginUnavailable(Boolean detectOriginUnavailable) {
            return detectOriginUnavailable(Output.of(detectOriginUnavailable));
        }

        /**
         * @param detectOriginUnavailableTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder detectOriginUnavailableTitle(@Nullable Output<String> detectOriginUnavailableTitle) {
            $.detectOriginUnavailableTitle = detectOriginUnavailableTitle;
            return this;
        }

        /**
         * @param detectOriginUnavailableTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder detectOriginUnavailableTitle(String detectOriginUnavailableTitle) {
            return detectOriginUnavailableTitle(Output.of(detectOriginUnavailableTitle));
        }

        /**
         * @param detectOriginUnresponsive Allows you to configure what happens when the origin is unresponsive.
         * 
         * @return builder
         * 
         */
        public Builder detectOriginUnresponsive(@Nullable Output<Boolean> detectOriginUnresponsive) {
            $.detectOriginUnresponsive = detectOriginUnresponsive;
            return this;
        }

        /**
         * @param detectOriginUnresponsive Allows you to configure what happens when the origin is unresponsive.
         * 
         * @return builder
         * 
         */
        public Builder detectOriginUnresponsive(Boolean detectOriginUnresponsive) {
            return detectOriginUnresponsive(Output.of(detectOriginUnresponsive));
        }

        /**
         * @param detectOriginUnresponsiveTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder detectOriginUnresponsiveTitle(@Nullable Output<String> detectOriginUnresponsiveTitle) {
            $.detectOriginUnresponsiveTitle = detectOriginUnresponsiveTitle;
            return this;
        }

        /**
         * @param detectOriginUnresponsiveTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder detectOriginUnresponsiveTitle(String detectOriginUnresponsiveTitle) {
            return detectOriginUnresponsiveTitle(Output.of(detectOriginUnresponsiveTitle));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param objectUnavailableAlternateHost This specifies the redirect&#39;s destination hostname.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableAlternateHost(@Nullable Output<String> objectUnavailableAlternateHost) {
            $.objectUnavailableAlternateHost = objectUnavailableAlternateHost;
            return this;
        }

        /**
         * @param objectUnavailableAlternateHost This specifies the redirect&#39;s destination hostname.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableAlternateHost(String objectUnavailableAlternateHost) {
            return objectUnavailableAlternateHost(Output.of(objectUnavailableAlternateHost));
        }

        /**
         * @param objectUnavailableBackupHost This specifies the origin hostname.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableBackupHost(@Nullable Output<String> objectUnavailableBackupHost) {
            $.objectUnavailableBackupHost = objectUnavailableBackupHost;
            return this;
        }

        /**
         * @param objectUnavailableBackupHost This specifies the origin hostname.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableBackupHost(String objectUnavailableBackupHost) {
            return objectUnavailableBackupHost(Output.of(objectUnavailableBackupHost));
        }

        /**
         * @param objectUnavailableBlacklistOriginIp Enabling this blacklists the origin&#39;s IP address.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableBlacklistOriginIp(@Nullable Output<Boolean> objectUnavailableBlacklistOriginIp) {
            $.objectUnavailableBlacklistOriginIp = objectUnavailableBlacklistOriginIp;
            return this;
        }

        /**
         * @param objectUnavailableBlacklistOriginIp Enabling this blacklists the origin&#39;s IP address.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableBlacklistOriginIp(Boolean objectUnavailableBlacklistOriginIp) {
            return objectUnavailableBlacklistOriginIp(Output.of(objectUnavailableBlacklistOriginIp));
        }

        /**
         * @param objectUnavailableBlacklistWindow This sets the delay before blacklisting an IP address.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableBlacklistWindow(@Nullable Output<String> objectUnavailableBlacklistWindow) {
            $.objectUnavailableBlacklistWindow = objectUnavailableBlacklistWindow;
            return this;
        }

        /**
         * @param objectUnavailableBlacklistWindow This sets the delay before blacklisting an IP address.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableBlacklistWindow(String objectUnavailableBlacklistWindow) {
            return objectUnavailableBlacklistWindow(Output.of(objectUnavailableBlacklistWindow));
        }

        /**
         * @param objectUnavailableChangeProtocol Changes the request protocol.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableChangeProtocol(@Nullable Output<Boolean> objectUnavailableChangeProtocol) {
            $.objectUnavailableChangeProtocol = objectUnavailableChangeProtocol;
            return this;
        }

        /**
         * @param objectUnavailableChangeProtocol Changes the request protocol.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableChangeProtocol(Boolean objectUnavailableChangeProtocol) {
            return objectUnavailableChangeProtocol(Output.of(objectUnavailableChangeProtocol));
        }

        /**
         * @param objectUnavailableDetectionLevel Specify `RESPONSE_CODES`, the only available option.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableDetectionLevel(@Nullable Output<String> objectUnavailableDetectionLevel) {
            $.objectUnavailableDetectionLevel = objectUnavailableDetectionLevel;
            return this;
        }

        /**
         * @param objectUnavailableDetectionLevel Specify `RESPONSE_CODES`, the only available option.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableDetectionLevel(String objectUnavailableDetectionLevel) {
            return objectUnavailableDetectionLevel(Output.of(objectUnavailableDetectionLevel));
        }

        /**
         * @param objectUnavailableIncludeQueryString Enabling this includes the original set of query parameters.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableIncludeQueryString(@Nullable Output<Boolean> objectUnavailableIncludeQueryString) {
            $.objectUnavailableIncludeQueryString = objectUnavailableIncludeQueryString;
            return this;
        }

        /**
         * @param objectUnavailableIncludeQueryString Enabling this includes the original set of query parameters.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableIncludeQueryString(Boolean objectUnavailableIncludeQueryString) {
            return objectUnavailableIncludeQueryString(Output.of(objectUnavailableIncludeQueryString));
        }

        /**
         * @param objectUnavailableModifiedPath This specifies the path to form the new URL.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableModifiedPath(@Nullable Output<String> objectUnavailableModifiedPath) {
            $.objectUnavailableModifiedPath = objectUnavailableModifiedPath;
            return this;
        }

        /**
         * @param objectUnavailableModifiedPath This specifies the path to form the new URL.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableModifiedPath(String objectUnavailableModifiedPath) {
            return objectUnavailableModifiedPath(Output.of(objectUnavailableModifiedPath));
        }

        /**
         * @param objectUnavailableModifyRequestPath Enabling this allows you to modify the request path.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableModifyRequestPath(@Nullable Output<Boolean> objectUnavailableModifyRequestPath) {
            $.objectUnavailableModifyRequestPath = objectUnavailableModifyRequestPath;
            return this;
        }

        /**
         * @param objectUnavailableModifyRequestPath Enabling this allows you to modify the request path.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableModifyRequestPath(Boolean objectUnavailableModifyRequestPath) {
            return objectUnavailableModifyRequestPath(Output.of(objectUnavailableModifyRequestPath));
        }

        /**
         * @param objectUnavailableProtocol Specifies either the `HTTP` or `HTTPS` protocol.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableProtocol(@Nullable Output<String> objectUnavailableProtocol) {
            $.objectUnavailableProtocol = objectUnavailableProtocol;
            return this;
        }

        /**
         * @param objectUnavailableProtocol Specifies either the `HTTP` or `HTTPS` protocol.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableProtocol(String objectUnavailableProtocol) {
            return objectUnavailableProtocol(Output.of(objectUnavailableProtocol));
        }

        /**
         * @param objectUnavailableRecovery This sets the recovery option.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableRecovery(@Nullable Output<String> objectUnavailableRecovery) {
            $.objectUnavailableRecovery = objectUnavailableRecovery;
            return this;
        }

        /**
         * @param objectUnavailableRecovery This sets the recovery option.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableRecovery(String objectUnavailableRecovery) {
            return objectUnavailableRecovery(Output.of(objectUnavailableRecovery));
        }

        /**
         * @param objectUnavailableRedirectMethod Specifies a redirect response code.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableRedirectMethod(@Nullable Output<Integer> objectUnavailableRedirectMethod) {
            $.objectUnavailableRedirectMethod = objectUnavailableRedirectMethod;
            return this;
        }

        /**
         * @param objectUnavailableRedirectMethod Specifies a redirect response code.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableRedirectMethod(Integer objectUnavailableRedirectMethod) {
            return objectUnavailableRedirectMethod(Output.of(objectUnavailableRedirectMethod));
        }

        /**
         * @param objectUnavailableResponseCodes Specifies the set of response codes identifying when there are content errors.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableResponseCodes(@Nullable Output<List<String>> objectUnavailableResponseCodes) {
            $.objectUnavailableResponseCodes = objectUnavailableResponseCodes;
            return this;
        }

        /**
         * @param objectUnavailableResponseCodes Specifies the set of response codes identifying when there are content errors.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableResponseCodes(List<String> objectUnavailableResponseCodes) {
            return objectUnavailableResponseCodes(Output.of(objectUnavailableResponseCodes));
        }

        /**
         * @param objectUnavailableResponseCodes Specifies the set of response codes identifying when there are content errors.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableResponseCodes(String... objectUnavailableResponseCodes) {
            return objectUnavailableResponseCodes(List.of(objectUnavailableResponseCodes));
        }

        /**
         * @param objectUnavailableRetryLimit Sets how many times to retry.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableRetryLimit(@Nullable Output<String> objectUnavailableRetryLimit) {
            $.objectUnavailableRetryLimit = objectUnavailableRetryLimit;
            return this;
        }

        /**
         * @param objectUnavailableRetryLimit Sets how many times to retry.
         * 
         * @return builder
         * 
         */
        public Builder objectUnavailableRetryLimit(String objectUnavailableRetryLimit) {
            return objectUnavailableRetryLimit(Output.of(objectUnavailableRetryLimit));
        }

        /**
         * @param originUnavailableAlternateHost This specifies the redirect&#39;s destination hostname.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableAlternateHost(@Nullable Output<String> originUnavailableAlternateHost) {
            $.originUnavailableAlternateHost = originUnavailableAlternateHost;
            return this;
        }

        /**
         * @param originUnavailableAlternateHost This specifies the redirect&#39;s destination hostname.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableAlternateHost(String originUnavailableAlternateHost) {
            return originUnavailableAlternateHost(Output.of(originUnavailableAlternateHost));
        }

        /**
         * @param originUnavailableBackupHost This specifies the origin hostname.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableBackupHost(@Nullable Output<String> originUnavailableBackupHost) {
            $.originUnavailableBackupHost = originUnavailableBackupHost;
            return this;
        }

        /**
         * @param originUnavailableBackupHost This specifies the origin hostname.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableBackupHost(String originUnavailableBackupHost) {
            return originUnavailableBackupHost(Output.of(originUnavailableBackupHost));
        }

        /**
         * @param originUnavailableBlacklistOriginIp Enabling this blacklists the origin&#39;s IP address.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableBlacklistOriginIp(@Nullable Output<Boolean> originUnavailableBlacklistOriginIp) {
            $.originUnavailableBlacklistOriginIp = originUnavailableBlacklistOriginIp;
            return this;
        }

        /**
         * @param originUnavailableBlacklistOriginIp Enabling this blacklists the origin&#39;s IP address.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableBlacklistOriginIp(Boolean originUnavailableBlacklistOriginIp) {
            return originUnavailableBlacklistOriginIp(Output.of(originUnavailableBlacklistOriginIp));
        }

        /**
         * @param originUnavailableBlacklistWindow This sets the delay before blacklisting an IP address.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableBlacklistWindow(@Nullable Output<String> originUnavailableBlacklistWindow) {
            $.originUnavailableBlacklistWindow = originUnavailableBlacklistWindow;
            return this;
        }

        /**
         * @param originUnavailableBlacklistWindow This sets the delay before blacklisting an IP address.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableBlacklistWindow(String originUnavailableBlacklistWindow) {
            return originUnavailableBlacklistWindow(Output.of(originUnavailableBlacklistWindow));
        }

        /**
         * @param originUnavailableChangeProtocol Modifies the request protocol.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableChangeProtocol(@Nullable Output<Boolean> originUnavailableChangeProtocol) {
            $.originUnavailableChangeProtocol = originUnavailableChangeProtocol;
            return this;
        }

        /**
         * @param originUnavailableChangeProtocol Modifies the request protocol.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableChangeProtocol(Boolean originUnavailableChangeProtocol) {
            return originUnavailableChangeProtocol(Output.of(originUnavailableChangeProtocol));
        }

        /**
         * @param originUnavailableDetectionLevel Specify `RESPONSE_CODES`, the only available option.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableDetectionLevel(@Nullable Output<String> originUnavailableDetectionLevel) {
            $.originUnavailableDetectionLevel = originUnavailableDetectionLevel;
            return this;
        }

        /**
         * @param originUnavailableDetectionLevel Specify `RESPONSE_CODES`, the only available option.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableDetectionLevel(String originUnavailableDetectionLevel) {
            return originUnavailableDetectionLevel(Output.of(originUnavailableDetectionLevel));
        }

        /**
         * @param originUnavailableIncludeQueryString Enabling this includes the original set of query parameters.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableIncludeQueryString(@Nullable Output<Boolean> originUnavailableIncludeQueryString) {
            $.originUnavailableIncludeQueryString = originUnavailableIncludeQueryString;
            return this;
        }

        /**
         * @param originUnavailableIncludeQueryString Enabling this includes the original set of query parameters.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableIncludeQueryString(Boolean originUnavailableIncludeQueryString) {
            return originUnavailableIncludeQueryString(Output.of(originUnavailableIncludeQueryString));
        }

        /**
         * @param originUnavailableModifiedPath This specifies the path to form the new URL.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableModifiedPath(@Nullable Output<String> originUnavailableModifiedPath) {
            $.originUnavailableModifiedPath = originUnavailableModifiedPath;
            return this;
        }

        /**
         * @param originUnavailableModifiedPath This specifies the path to form the new URL.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableModifiedPath(String originUnavailableModifiedPath) {
            return originUnavailableModifiedPath(Output.of(originUnavailableModifiedPath));
        }

        /**
         * @param originUnavailableModifyRequestPath Modifies the request path.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableModifyRequestPath(@Nullable Output<Boolean> originUnavailableModifyRequestPath) {
            $.originUnavailableModifyRequestPath = originUnavailableModifyRequestPath;
            return this;
        }

        /**
         * @param originUnavailableModifyRequestPath Modifies the request path.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableModifyRequestPath(Boolean originUnavailableModifyRequestPath) {
            return originUnavailableModifyRequestPath(Output.of(originUnavailableModifyRequestPath));
        }

        /**
         * @param originUnavailableProtocol Specifies either the `HTTP` or `HTTPS` protocol.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableProtocol(@Nullable Output<String> originUnavailableProtocol) {
            $.originUnavailableProtocol = originUnavailableProtocol;
            return this;
        }

        /**
         * @param originUnavailableProtocol Specifies either the `HTTP` or `HTTPS` protocol.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableProtocol(String originUnavailableProtocol) {
            return originUnavailableProtocol(Output.of(originUnavailableProtocol));
        }

        /**
         * @param originUnavailableRecovery This sets the recovery option.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableRecovery(@Nullable Output<String> originUnavailableRecovery) {
            $.originUnavailableRecovery = originUnavailableRecovery;
            return this;
        }

        /**
         * @param originUnavailableRecovery This sets the recovery option.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableRecovery(String originUnavailableRecovery) {
            return originUnavailableRecovery(Output.of(originUnavailableRecovery));
        }

        /**
         * @param originUnavailableRedirectMethod Specifies either a redirect response code.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableRedirectMethod(@Nullable Output<Integer> originUnavailableRedirectMethod) {
            $.originUnavailableRedirectMethod = originUnavailableRedirectMethod;
            return this;
        }

        /**
         * @param originUnavailableRedirectMethod Specifies either a redirect response code.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableRedirectMethod(Integer originUnavailableRedirectMethod) {
            return originUnavailableRedirectMethod(Output.of(originUnavailableRedirectMethod));
        }

        /**
         * @param originUnavailableResponseCodes Specifies the set of response codes identifying when the origin responds with errors.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableResponseCodes(@Nullable Output<List<String>> originUnavailableResponseCodes) {
            $.originUnavailableResponseCodes = originUnavailableResponseCodes;
            return this;
        }

        /**
         * @param originUnavailableResponseCodes Specifies the set of response codes identifying when the origin responds with errors.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableResponseCodes(List<String> originUnavailableResponseCodes) {
            return originUnavailableResponseCodes(Output.of(originUnavailableResponseCodes));
        }

        /**
         * @param originUnavailableResponseCodes Specifies the set of response codes identifying when the origin responds with errors.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableResponseCodes(String... originUnavailableResponseCodes) {
            return originUnavailableResponseCodes(List.of(originUnavailableResponseCodes));
        }

        /**
         * @param originUnavailableRetryLimit Sets how many times to retry.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableRetryLimit(@Nullable Output<String> originUnavailableRetryLimit) {
            $.originUnavailableRetryLimit = originUnavailableRetryLimit;
            return this;
        }

        /**
         * @param originUnavailableRetryLimit Sets how many times to retry.
         * 
         * @return builder
         * 
         */
        public Builder originUnavailableRetryLimit(String originUnavailableRetryLimit) {
            return originUnavailableRetryLimit(Output.of(originUnavailableRetryLimit));
        }

        /**
         * @param originUnresponsiveAlternateHost This specifies the redirect&#39;s destination hostname.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveAlternateHost(@Nullable Output<String> originUnresponsiveAlternateHost) {
            $.originUnresponsiveAlternateHost = originUnresponsiveAlternateHost;
            return this;
        }

        /**
         * @param originUnresponsiveAlternateHost This specifies the redirect&#39;s destination hostname.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveAlternateHost(String originUnresponsiveAlternateHost) {
            return originUnresponsiveAlternateHost(Output.of(originUnresponsiveAlternateHost));
        }

        /**
         * @param originUnresponsiveBackupHost This specifies the origin hostname.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveBackupHost(@Nullable Output<String> originUnresponsiveBackupHost) {
            $.originUnresponsiveBackupHost = originUnresponsiveBackupHost;
            return this;
        }

        /**
         * @param originUnresponsiveBackupHost This specifies the origin hostname.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveBackupHost(String originUnresponsiveBackupHost) {
            return originUnresponsiveBackupHost(Output.of(originUnresponsiveBackupHost));
        }

        /**
         * @param originUnresponsiveBlacklistOriginIp Enabling this blacklists the origin&#39;s IP address.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveBlacklistOriginIp(@Nullable Output<Boolean> originUnresponsiveBlacklistOriginIp) {
            $.originUnresponsiveBlacklistOriginIp = originUnresponsiveBlacklistOriginIp;
            return this;
        }

        /**
         * @param originUnresponsiveBlacklistOriginIp Enabling this blacklists the origin&#39;s IP address.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveBlacklistOriginIp(Boolean originUnresponsiveBlacklistOriginIp) {
            return originUnresponsiveBlacklistOriginIp(Output.of(originUnresponsiveBlacklistOriginIp));
        }

        /**
         * @param originUnresponsiveBlacklistWindow This sets the delay before blacklisting an IP address.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveBlacklistWindow(@Nullable Output<String> originUnresponsiveBlacklistWindow) {
            $.originUnresponsiveBlacklistWindow = originUnresponsiveBlacklistWindow;
            return this;
        }

        /**
         * @param originUnresponsiveBlacklistWindow This sets the delay before blacklisting an IP address.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveBlacklistWindow(String originUnresponsiveBlacklistWindow) {
            return originUnresponsiveBlacklistWindow(Output.of(originUnresponsiveBlacklistWindow));
        }

        /**
         * @param originUnresponsiveChangeProtocol This allows you to change the request protocol.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveChangeProtocol(@Nullable Output<Boolean> originUnresponsiveChangeProtocol) {
            $.originUnresponsiveChangeProtocol = originUnresponsiveChangeProtocol;
            return this;
        }

        /**
         * @param originUnresponsiveChangeProtocol This allows you to change the request protocol.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveChangeProtocol(Boolean originUnresponsiveChangeProtocol) {
            return originUnresponsiveChangeProtocol(Output.of(originUnresponsiveChangeProtocol));
        }

        /**
         * @param originUnresponsiveDetectionLevel Specify the level of response to slow origin connections.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveDetectionLevel(@Nullable Output<String> originUnresponsiveDetectionLevel) {
            $.originUnresponsiveDetectionLevel = originUnresponsiveDetectionLevel;
            return this;
        }

        /**
         * @param originUnresponsiveDetectionLevel Specify the level of response to slow origin connections.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveDetectionLevel(String originUnresponsiveDetectionLevel) {
            return originUnresponsiveDetectionLevel(Output.of(originUnresponsiveDetectionLevel));
        }

        /**
         * @param originUnresponsiveIncludeQueryString Enabling this includes the original set of query parameters.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveIncludeQueryString(@Nullable Output<Boolean> originUnresponsiveIncludeQueryString) {
            $.originUnresponsiveIncludeQueryString = originUnresponsiveIncludeQueryString;
            return this;
        }

        /**
         * @param originUnresponsiveIncludeQueryString Enabling this includes the original set of query parameters.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveIncludeQueryString(Boolean originUnresponsiveIncludeQueryString) {
            return originUnresponsiveIncludeQueryString(Output.of(originUnresponsiveIncludeQueryString));
        }

        /**
         * @param originUnresponsiveModifiedPath This specifies the path to form the new URL.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveModifiedPath(@Nullable Output<String> originUnresponsiveModifiedPath) {
            $.originUnresponsiveModifiedPath = originUnresponsiveModifiedPath;
            return this;
        }

        /**
         * @param originUnresponsiveModifiedPath This specifies the path to form the new URL.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveModifiedPath(String originUnresponsiveModifiedPath) {
            return originUnresponsiveModifiedPath(Output.of(originUnresponsiveModifiedPath));
        }

        /**
         * @param originUnresponsiveModifyRequestPath Modifies the request path.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveModifyRequestPath(@Nullable Output<Boolean> originUnresponsiveModifyRequestPath) {
            $.originUnresponsiveModifyRequestPath = originUnresponsiveModifyRequestPath;
            return this;
        }

        /**
         * @param originUnresponsiveModifyRequestPath Modifies the request path.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveModifyRequestPath(Boolean originUnresponsiveModifyRequestPath) {
            return originUnresponsiveModifyRequestPath(Output.of(originUnresponsiveModifyRequestPath));
        }

        /**
         * @param originUnresponsiveProtocol Specifies which protocol to use.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveProtocol(@Nullable Output<String> originUnresponsiveProtocol) {
            $.originUnresponsiveProtocol = originUnresponsiveProtocol;
            return this;
        }

        /**
         * @param originUnresponsiveProtocol Specifies which protocol to use.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveProtocol(String originUnresponsiveProtocol) {
            return originUnresponsiveProtocol(Output.of(originUnresponsiveProtocol));
        }

        /**
         * @param originUnresponsiveRecovery This sets the recovery option.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveRecovery(@Nullable Output<String> originUnresponsiveRecovery) {
            $.originUnresponsiveRecovery = originUnresponsiveRecovery;
            return this;
        }

        /**
         * @param originUnresponsiveRecovery This sets the recovery option.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveRecovery(String originUnresponsiveRecovery) {
            return originUnresponsiveRecovery(Output.of(originUnresponsiveRecovery));
        }

        /**
         * @param originUnresponsiveRedirectMethod Specifies the redirect response code.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveRedirectMethod(@Nullable Output<Integer> originUnresponsiveRedirectMethod) {
            $.originUnresponsiveRedirectMethod = originUnresponsiveRedirectMethod;
            return this;
        }

        /**
         * @param originUnresponsiveRedirectMethod Specifies the redirect response code.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveRedirectMethod(Integer originUnresponsiveRedirectMethod) {
            return originUnresponsiveRedirectMethod(Output.of(originUnresponsiveRedirectMethod));
        }

        /**
         * @param originUnresponsiveRetryLimit Sets how many times to retry.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveRetryLimit(@Nullable Output<String> originUnresponsiveRetryLimit) {
            $.originUnresponsiveRetryLimit = originUnresponsiveRetryLimit;
            return this;
        }

        /**
         * @param originUnresponsiveRetryLimit Sets how many times to retry.
         * 
         * @return builder
         * 
         */
        public Builder originUnresponsiveRetryLimit(String originUnresponsiveRetryLimit) {
            return originUnresponsiveRetryLimit(Output.of(originUnresponsiveRetryLimit));
        }

        /**
         * @param otherOptions This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder otherOptions(@Nullable Output<String> otherOptions) {
            $.otherOptions = otherOptions;
            return this;
        }

        /**
         * @param otherOptions This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder otherOptions(String otherOptions) {
            return otherOptions(Output.of(otherOptions));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20231030BehaviorMediaOriginFailoverArgs build() {
            return $;
        }
    }

}
