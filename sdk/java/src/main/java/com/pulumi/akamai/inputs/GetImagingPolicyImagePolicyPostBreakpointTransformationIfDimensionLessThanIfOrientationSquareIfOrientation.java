// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationDefault;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationLandscape;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationPortrait;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationSquare;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation();

    @Import(name="default")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationDefault default_;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationDefault> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="landscape")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationLandscape landscape;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationLandscape> landscape() {
        return Optional.ofNullable(this.landscape);
    }

    @Import(name="portrait")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationPortrait portrait;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationPortrait> portrait() {
        return Optional.ofNullable(this.portrait);
    }

    @Import(name="square")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationSquare square;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationSquare> square() {
        return Optional.ofNullable(this.square);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation(GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation $) {
        this.default_ = $.default_;
        this.landscape = $.landscape;
        this.portrait = $.portrait;
        this.square = $.square;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationDefault default_) {
            $.default_ = default_;
            return this;
        }

        public Builder landscape(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationLandscape landscape) {
            $.landscape = landscape;
            return this;
        }

        public Builder portrait(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationPortrait portrait) {
            $.portrait = portrait;
            return this;
        }

        public Builder square(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientationSquare square) {
            $.square = square;
            return this;
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionLessThanIfOrientationSquareIfOrientation build() {
            return $;
        }
    }

}
