// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamApiClientApiAccessApiArgs extends com.pulumi.resources.ResourceArgs {

    public static final IamApiClientApiAccessApiArgs Empty = new IamApiClientApiAccessApiArgs();

    /**
     * The API client&#39;s access level on an API basis, either &#39;READ-ONLY&#39;, &#39;READ-WRITE&#39;, &#39;CREDENTIAL-READ-ONLY&#39;, or &#39;CREDENTIAL-READ-WRITE&#39;.
     * 
     */
    @Import(name="accessLevel", required=true)
    private Output<String> accessLevel;

    /**
     * @return The API client&#39;s access level on an API basis, either &#39;READ-ONLY&#39;, &#39;READ-WRITE&#39;, &#39;CREDENTIAL-READ-ONLY&#39;, or &#39;CREDENTIAL-READ-WRITE&#39;.
     * 
     */
    public Output<String> accessLevel() {
        return this.accessLevel;
    }

    /**
     * A unique identifier of the API.
     * 
     */
    @Import(name="apiId", required=true)
    private Output<Integer> apiId;

    /**
     * @return A unique identifier of the API.
     * 
     */
    public Output<Integer> apiId() {
        return this.apiId;
    }

    /**
     * A human-readable name for the API.
     * 
     */
    @Import(name="apiName")
    private @Nullable Output<String> apiName;

    /**
     * @return A human-readable name for the API.
     * 
     */
    public Optional<Output<String>> apiName() {
        return Optional.ofNullable(this.apiName);
    }

    /**
     * A human-readable description for the API.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A human-readable description for the API.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A link to more information about the API.
     * 
     */
    @Import(name="documentationUrl")
    private @Nullable Output<String> documentationUrl;

    /**
     * @return A link to more information about the API.
     * 
     */
    public Optional<Output<String>> documentationUrl() {
        return Optional.ofNullable(this.documentationUrl);
    }

    /**
     * Specifies where the API can access resources.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return Specifies where the API can access resources.
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    private IamApiClientApiAccessApiArgs() {}

    private IamApiClientApiAccessApiArgs(IamApiClientApiAccessApiArgs $) {
        this.accessLevel = $.accessLevel;
        this.apiId = $.apiId;
        this.apiName = $.apiName;
        this.description = $.description;
        this.documentationUrl = $.documentationUrl;
        this.endpoint = $.endpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamApiClientApiAccessApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamApiClientApiAccessApiArgs $;

        public Builder() {
            $ = new IamApiClientApiAccessApiArgs();
        }

        public Builder(IamApiClientApiAccessApiArgs defaults) {
            $ = new IamApiClientApiAccessApiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessLevel The API client&#39;s access level on an API basis, either &#39;READ-ONLY&#39;, &#39;READ-WRITE&#39;, &#39;CREDENTIAL-READ-ONLY&#39;, or &#39;CREDENTIAL-READ-WRITE&#39;.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(Output<String> accessLevel) {
            $.accessLevel = accessLevel;
            return this;
        }

        /**
         * @param accessLevel The API client&#39;s access level on an API basis, either &#39;READ-ONLY&#39;, &#39;READ-WRITE&#39;, &#39;CREDENTIAL-READ-ONLY&#39;, or &#39;CREDENTIAL-READ-WRITE&#39;.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(String accessLevel) {
            return accessLevel(Output.of(accessLevel));
        }

        /**
         * @param apiId A unique identifier of the API.
         * 
         * @return builder
         * 
         */
        public Builder apiId(Output<Integer> apiId) {
            $.apiId = apiId;
            return this;
        }

        /**
         * @param apiId A unique identifier of the API.
         * 
         * @return builder
         * 
         */
        public Builder apiId(Integer apiId) {
            return apiId(Output.of(apiId));
        }

        /**
         * @param apiName A human-readable name for the API.
         * 
         * @return builder
         * 
         */
        public Builder apiName(@Nullable Output<String> apiName) {
            $.apiName = apiName;
            return this;
        }

        /**
         * @param apiName A human-readable name for the API.
         * 
         * @return builder
         * 
         */
        public Builder apiName(String apiName) {
            return apiName(Output.of(apiName));
        }

        /**
         * @param description A human-readable description for the API.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A human-readable description for the API.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param documentationUrl A link to more information about the API.
         * 
         * @return builder
         * 
         */
        public Builder documentationUrl(@Nullable Output<String> documentationUrl) {
            $.documentationUrl = documentationUrl;
            return this;
        }

        /**
         * @param documentationUrl A link to more information about the API.
         * 
         * @return builder
         * 
         */
        public Builder documentationUrl(String documentationUrl) {
            return documentationUrl(Output.of(documentationUrl));
        }

        /**
         * @param endpoint Specifies where the API can access resources.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint Specifies where the API can access resources.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public IamApiClientApiAccessApiArgs build() {
            if ($.accessLevel == null) {
                throw new MissingRequiredPropertyException("IamApiClientApiAccessApiArgs", "accessLevel");
            }
            if ($.apiId == null) {
                throw new MissingRequiredPropertyException("IamApiClientApiAccessApiArgs", "apiId");
            }
            return $;
        }
    }

}
