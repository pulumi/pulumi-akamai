// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationDefault;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationLandscape;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationPortrait;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationSquare;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation();

    @Import(name="default")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationDefault default_;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationDefault> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="landscape")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationLandscape landscape;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationLandscape> landscape() {
        return Optional.ofNullable(this.landscape);
    }

    @Import(name="portrait")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationPortrait portrait;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationPortrait> portrait() {
        return Optional.ofNullable(this.portrait);
    }

    @Import(name="square")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationSquare square;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationSquare> square() {
        return Optional.ofNullable(this.square);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation $) {
        this.default_ = $.default_;
        this.landscape = $.landscape;
        this.portrait = $.portrait;
        this.square = $.square;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationDefault default_) {
            $.default_ = default_;
            return this;
        }

        public Builder landscape(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationLandscape landscape) {
            $.landscape = landscape;
            return this;
        }

        public Builder portrait(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationPortrait portrait) {
            $.portrait = portrait;
            return this;
        }

        public Builder square(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientationSquare square) {
            $.square = square;
            return this;
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitIfOrientationPortraitIfOrientation build() {
            return $;
        }
    }

}
