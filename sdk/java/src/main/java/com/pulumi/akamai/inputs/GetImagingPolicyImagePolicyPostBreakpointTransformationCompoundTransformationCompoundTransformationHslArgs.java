// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs();

    @Import(name="hue")
    private @Nullable Output<String> hue;

    public Optional<Output<String>> hue() {
        return Optional.ofNullable(this.hue);
    }

    @Import(name="hueVar")
    private @Nullable Output<String> hueVar;

    public Optional<Output<String>> hueVar() {
        return Optional.ofNullable(this.hueVar);
    }

    @Import(name="lightness")
    private @Nullable Output<String> lightness;

    public Optional<Output<String>> lightness() {
        return Optional.ofNullable(this.lightness);
    }

    @Import(name="lightnessVar")
    private @Nullable Output<String> lightnessVar;

    public Optional<Output<String>> lightnessVar() {
        return Optional.ofNullable(this.lightnessVar);
    }

    @Import(name="saturation")
    private @Nullable Output<String> saturation;

    public Optional<Output<String>> saturation() {
        return Optional.ofNullable(this.saturation);
    }

    @Import(name="saturationVar")
    private @Nullable Output<String> saturationVar;

    public Optional<Output<String>> saturationVar() {
        return Optional.ofNullable(this.saturationVar);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs(GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs $) {
        this.hue = $.hue;
        this.hueVar = $.hueVar;
        this.lightness = $.lightness;
        this.lightnessVar = $.lightnessVar;
        this.saturation = $.saturation;
        this.saturationVar = $.saturationVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs(Objects.requireNonNull(defaults));
        }

        public Builder hue(@Nullable Output<String> hue) {
            $.hue = hue;
            return this;
        }

        public Builder hue(String hue) {
            return hue(Output.of(hue));
        }

        public Builder hueVar(@Nullable Output<String> hueVar) {
            $.hueVar = hueVar;
            return this;
        }

        public Builder hueVar(String hueVar) {
            return hueVar(Output.of(hueVar));
        }

        public Builder lightness(@Nullable Output<String> lightness) {
            $.lightness = lightness;
            return this;
        }

        public Builder lightness(String lightness) {
            return lightness(Output.of(lightness));
        }

        public Builder lightnessVar(@Nullable Output<String> lightnessVar) {
            $.lightnessVar = lightnessVar;
            return this;
        }

        public Builder lightnessVar(String lightnessVar) {
            return lightnessVar(Output.of(lightnessVar));
        }

        public Builder saturation(@Nullable Output<String> saturation) {
            $.saturation = saturation;
            return this;
        }

        public Builder saturation(String saturation) {
            return saturation(Output.of(saturation));
        }

        public Builder saturationVar(@Nullable Output<String> saturationVar) {
            $.saturationVar = saturationVar;
            return this;
        }

        public Builder saturationVar(String saturationVar) {
            return saturationVar(Output.of(saturationVar));
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationCompoundTransformationHslArgs build() {
            return $;
        }
    }

}
