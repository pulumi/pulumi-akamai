// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetCloudwrapperCapacitiesCapacityApproved;
import com.pulumi.akamai.outputs.GetCloudwrapperCapacitiesCapacityAssigned;
import com.pulumi.akamai.outputs.GetCloudwrapperCapacitiesCapacityUnassigned;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCloudwrapperCapacitiesCapacity {
    private GetCloudwrapperCapacitiesCapacityApproved approved;
    private GetCloudwrapperCapacitiesCapacityAssigned assigned;
    private String contractId;
    private Integer locationId;
    private String locationName;
    private String type;
    private GetCloudwrapperCapacitiesCapacityUnassigned unassigned;

    private GetCloudwrapperCapacitiesCapacity() {}
    public GetCloudwrapperCapacitiesCapacityApproved approved() {
        return this.approved;
    }
    public GetCloudwrapperCapacitiesCapacityAssigned assigned() {
        return this.assigned;
    }
    public String contractId() {
        return this.contractId;
    }
    public Integer locationId() {
        return this.locationId;
    }
    public String locationName() {
        return this.locationName;
    }
    public String type() {
        return this.type;
    }
    public GetCloudwrapperCapacitiesCapacityUnassigned unassigned() {
        return this.unassigned;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudwrapperCapacitiesCapacity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetCloudwrapperCapacitiesCapacityApproved approved;
        private GetCloudwrapperCapacitiesCapacityAssigned assigned;
        private String contractId;
        private Integer locationId;
        private String locationName;
        private String type;
        private GetCloudwrapperCapacitiesCapacityUnassigned unassigned;
        public Builder() {}
        public Builder(GetCloudwrapperCapacitiesCapacity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approved = defaults.approved;
    	      this.assigned = defaults.assigned;
    	      this.contractId = defaults.contractId;
    	      this.locationId = defaults.locationId;
    	      this.locationName = defaults.locationName;
    	      this.type = defaults.type;
    	      this.unassigned = defaults.unassigned;
        }

        @CustomType.Setter
        public Builder approved(GetCloudwrapperCapacitiesCapacityApproved approved) {
            this.approved = Objects.requireNonNull(approved);
            return this;
        }
        @CustomType.Setter
        public Builder assigned(GetCloudwrapperCapacitiesCapacityAssigned assigned) {
            this.assigned = Objects.requireNonNull(assigned);
            return this;
        }
        @CustomType.Setter
        public Builder contractId(String contractId) {
            this.contractId = Objects.requireNonNull(contractId);
            return this;
        }
        @CustomType.Setter
        public Builder locationId(Integer locationId) {
            this.locationId = Objects.requireNonNull(locationId);
            return this;
        }
        @CustomType.Setter
        public Builder locationName(String locationName) {
            this.locationName = Objects.requireNonNull(locationName);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder unassigned(GetCloudwrapperCapacitiesCapacityUnassigned unassigned) {
            this.unassigned = Objects.requireNonNull(unassigned);
            return this;
        }
        public GetCloudwrapperCapacitiesCapacity build() {
            final var o = new GetCloudwrapperCapacitiesCapacity();
            o.approved = approved;
            o.assigned = assigned;
            o.contractId = contractId;
            o.locationId = locationId;
            o.locationName = locationName;
            o.type = type;
            o.unassigned = unassigned;
            return o;
        }
    }
}
