// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetPropertyHostnamesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyHostnamesArgs Empty = new GetPropertyHostnamesArgs();

    @Import(name="contractId", required=true)
    private Output<String> contractId;

    public Output<String> contractId() {
        return this.contractId;
    }

    @Import(name="groupId", required=true)
    private Output<String> groupId;

    public Output<String> groupId() {
        return this.groupId;
    }

    @Import(name="propertyId", required=true)
    private Output<String> propertyId;

    public Output<String> propertyId() {
        return this.propertyId;
    }

    private GetPropertyHostnamesArgs() {}

    private GetPropertyHostnamesArgs(GetPropertyHostnamesArgs $) {
        this.contractId = $.contractId;
        this.groupId = $.groupId;
        this.propertyId = $.propertyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyHostnamesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyHostnamesArgs $;

        public Builder() {
            $ = new GetPropertyHostnamesArgs();
        }

        public Builder(GetPropertyHostnamesArgs defaults) {
            $ = new GetPropertyHostnamesArgs(Objects.requireNonNull(defaults));
        }

        public Builder contractId(Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        public Builder propertyId(Output<String> propertyId) {
            $.propertyId = propertyId;
            return this;
        }

        public Builder propertyId(String propertyId) {
            return propertyId(Output.of(propertyId));
        }

        public GetPropertyHostnamesArgs build() {
            if ($.contractId == null) {
                throw new MissingRequiredPropertyException("GetPropertyHostnamesArgs", "contractId");
            }
            if ($.groupId == null) {
                throw new MissingRequiredPropertyException("GetPropertyHostnamesArgs", "groupId");
            }
            if ($.propertyId == null) {
                throw new MissingRequiredPropertyException("GetPropertyHostnamesArgs", "propertyId");
            }
            return $;
        }
    }

}
