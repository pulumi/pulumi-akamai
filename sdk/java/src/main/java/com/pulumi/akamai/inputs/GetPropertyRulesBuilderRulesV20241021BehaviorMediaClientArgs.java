// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs Empty = new GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs();

    /**
     * Specifies the ID of data source&#39;s beacon.
     * 
     */
    @Import(name="beaconId")
    private @Nullable Output<String> beaconId;

    /**
     * @return Specifies the ID of data source&#39;s beacon.
     * 
     */
    public Optional<Output<String>> beaconId() {
        return Optional.ofNullable(this.beaconId);
    }

    /**
     * Enables client-side download analytics.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enables client-side download analytics.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * Enables the hybrid HTTP/UDP protocol.
     * 
     */
    @Import(name="useHybridHttpUdp")
    private @Nullable Output<Boolean> useHybridHttpUdp;

    /**
     * @return Enables the hybrid HTTP/UDP protocol.
     * 
     */
    public Optional<Output<Boolean>> useHybridHttpUdp() {
        return Optional.ofNullable(this.useHybridHttpUdp);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs() {}

    private GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs(GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs $) {
        this.beaconId = $.beaconId;
        this.enabled = $.enabled;
        this.locked = $.locked;
        this.templateUuid = $.templateUuid;
        this.useHybridHttpUdp = $.useHybridHttpUdp;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param beaconId Specifies the ID of data source&#39;s beacon.
         * 
         * @return builder
         * 
         */
        public Builder beaconId(@Nullable Output<String> beaconId) {
            $.beaconId = beaconId;
            return this;
        }

        /**
         * @param beaconId Specifies the ID of data source&#39;s beacon.
         * 
         * @return builder
         * 
         */
        public Builder beaconId(String beaconId) {
            return beaconId(Output.of(beaconId));
        }

        /**
         * @param enabled Enables client-side download analytics.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enables client-side download analytics.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param useHybridHttpUdp Enables the hybrid HTTP/UDP protocol.
         * 
         * @return builder
         * 
         */
        public Builder useHybridHttpUdp(@Nullable Output<Boolean> useHybridHttpUdp) {
            $.useHybridHttpUdp = useHybridHttpUdp;
            return this;
        }

        /**
         * @param useHybridHttpUdp Enables the hybrid HTTP/UDP protocol.
         * 
         * @return builder
         * 
         */
        public Builder useHybridHttpUdp(Boolean useHybridHttpUdp) {
            return useHybridHttpUdp(Output.of(useHybridHttpUdp));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20241021BehaviorMediaClientArgs build() {
            return $;
        }
    }

}
