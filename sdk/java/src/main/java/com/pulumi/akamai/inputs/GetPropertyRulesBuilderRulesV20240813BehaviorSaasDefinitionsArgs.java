// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs Empty = new GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs();

    /**
     * Specifies the request component that identifies a SaaS application.
     * 
     */
    @Import(name="applicationAction")
    private @Nullable Output<String> applicationAction;

    /**
     * @return Specifies the request component that identifies a SaaS application.
     * 
     */
    public Optional<Output<String>> applicationAction() {
        return Optional.ofNullable(this.applicationAction);
    }

    /**
     * Enabling this allows you to identify applications using a `CNAME chain` rather than a single hostname.
     * 
     */
    @Import(name="applicationCnameEnabled")
    private @Nullable Output<Boolean> applicationCnameEnabled;

    /**
     * @return Enabling this allows you to identify applications using a `CNAME chain` rather than a single hostname.
     * 
     */
    public Optional<Output<Boolean>> applicationCnameEnabled() {
        return Optional.ofNullable(this.applicationCnameEnabled);
    }

    /**
     * Specifies the number of CNAMEs to use in the chain.
     * 
     */
    @Import(name="applicationCnameLevel")
    private @Nullable Output<Integer> applicationCnameLevel;

    /**
     * @return Specifies the number of CNAMEs to use in the chain.
     * 
     */
    public Optional<Output<Integer>> applicationCnameLevel() {
        return Optional.ofNullable(this.applicationCnameLevel);
    }

    /**
     * This specifies the name of the cookie that identifies the application.
     * 
     */
    @Import(name="applicationCookie")
    private @Nullable Output<String> applicationCookie;

    /**
     * @return This specifies the name of the cookie that identifies the application.
     * 
     */
    public Optional<Output<String>> applicationCookie() {
        return Optional.ofNullable(this.applicationCookie);
    }

    /**
     * This names the query parameter that identifies the application.
     * 
     */
    @Import(name="applicationQueryString")
    private @Nullable Output<String> applicationQueryString;

    /**
     * @return This names the query parameter that identifies the application.
     * 
     */
    public Optional<Output<String>> applicationQueryString() {
        return Optional.ofNullable(this.applicationQueryString);
    }

    /**
     * Specifies a Perl-compatible regular expression with which to substitute the request&#39;s application ID.
     * 
     */
    @Import(name="applicationRegex")
    private @Nullable Output<String> applicationRegex;

    /**
     * @return Specifies a Perl-compatible regular expression with which to substitute the request&#39;s application ID.
     * 
     */
    public Optional<Output<String>> applicationRegex() {
        return Optional.ofNullable(this.applicationRegex);
    }

    /**
     * Specifies a string to replace the request&#39;s application ID matched by `applicationRegex`.
     * 
     */
    @Import(name="applicationReplace")
    private @Nullable Output<String> applicationReplace;

    /**
     * @return Specifies a string to replace the request&#39;s application ID matched by `applicationRegex`.
     * 
     */
    public Optional<Output<String>> applicationReplace() {
        return Optional.ofNullable(this.applicationReplace);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="applicationTitle")
    private @Nullable Output<String> applicationTitle;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> applicationTitle() {
        return Optional.ofNullable(this.applicationTitle);
    }

    /**
     * Specifies the request component that identifies a SaaS customer.
     * 
     */
    @Import(name="customerAction")
    private @Nullable Output<String> customerAction;

    /**
     * @return Specifies the request component that identifies a SaaS customer.
     * 
     */
    public Optional<Output<String>> customerAction() {
        return Optional.ofNullable(this.customerAction);
    }

    /**
     * Enabling this allows you to identify customers using a `CNAME chain` rather than a single hostname.
     * 
     */
    @Import(name="customerCnameEnabled")
    private @Nullable Output<Boolean> customerCnameEnabled;

    /**
     * @return Enabling this allows you to identify customers using a `CNAME chain` rather than a single hostname.
     * 
     */
    public Optional<Output<Boolean>> customerCnameEnabled() {
        return Optional.ofNullable(this.customerCnameEnabled);
    }

    /**
     * Specifies the number of CNAMEs to use in the chain.
     * 
     */
    @Import(name="customerCnameLevel")
    private @Nullable Output<Integer> customerCnameLevel;

    /**
     * @return Specifies the number of CNAMEs to use in the chain.
     * 
     */
    public Optional<Output<Integer>> customerCnameLevel() {
        return Optional.ofNullable(this.customerCnameLevel);
    }

    /**
     * This specifies the name of the cookie that identifies the customer.
     * 
     */
    @Import(name="customerCookie")
    private @Nullable Output<String> customerCookie;

    /**
     * @return This specifies the name of the cookie that identifies the customer.
     * 
     */
    public Optional<Output<String>> customerCookie() {
        return Optional.ofNullable(this.customerCookie);
    }

    /**
     * This names the query parameter that identifies the customer.
     * 
     */
    @Import(name="customerQueryString")
    private @Nullable Output<String> customerQueryString;

    /**
     * @return This names the query parameter that identifies the customer.
     * 
     */
    public Optional<Output<String>> customerQueryString() {
        return Optional.ofNullable(this.customerQueryString);
    }

    /**
     * Specifies a Perl-compatible regular expression with which to substitute the request&#39;s customer ID.
     * 
     */
    @Import(name="customerRegex")
    private @Nullable Output<String> customerRegex;

    /**
     * @return Specifies a Perl-compatible regular expression with which to substitute the request&#39;s customer ID.
     * 
     */
    public Optional<Output<String>> customerRegex() {
        return Optional.ofNullable(this.customerRegex);
    }

    /**
     * Specifies a string to replace the request&#39;s customer ID matched by `customerRegex`.
     * 
     */
    @Import(name="customerReplace")
    private @Nullable Output<String> customerReplace;

    /**
     * @return Specifies a string to replace the request&#39;s customer ID matched by `customerRegex`.
     * 
     */
    public Optional<Output<String>> customerReplace() {
        return Optional.ofNullable(this.customerReplace);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="customerTitle")
    private @Nullable Output<String> customerTitle;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> customerTitle() {
        return Optional.ofNullable(this.customerTitle);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * Specifies the request component that identifies a SaaS user.
     * 
     */
    @Import(name="usersAction")
    private @Nullable Output<String> usersAction;

    /**
     * @return Specifies the request component that identifies a SaaS user.
     * 
     */
    public Optional<Output<String>> usersAction() {
        return Optional.ofNullable(this.usersAction);
    }

    /**
     * Enabling this allows you to identify users using a `CNAME chain` rather than a single hostname.
     * 
     */
    @Import(name="usersCnameEnabled")
    private @Nullable Output<Boolean> usersCnameEnabled;

    /**
     * @return Enabling this allows you to identify users using a `CNAME chain` rather than a single hostname.
     * 
     */
    public Optional<Output<Boolean>> usersCnameEnabled() {
        return Optional.ofNullable(this.usersCnameEnabled);
    }

    /**
     * Specifies the number of CNAMEs to use in the chain.
     * 
     */
    @Import(name="usersCnameLevel")
    private @Nullable Output<Integer> usersCnameLevel;

    /**
     * @return Specifies the number of CNAMEs to use in the chain.
     * 
     */
    public Optional<Output<Integer>> usersCnameLevel() {
        return Optional.ofNullable(this.usersCnameLevel);
    }

    /**
     * This specifies the name of the cookie that identifies the user.
     * 
     */
    @Import(name="usersCookie")
    private @Nullable Output<String> usersCookie;

    /**
     * @return This specifies the name of the cookie that identifies the user.
     * 
     */
    public Optional<Output<String>> usersCookie() {
        return Optional.ofNullable(this.usersCookie);
    }

    /**
     * This names the query parameter that identifies the user.
     * 
     */
    @Import(name="usersQueryString")
    private @Nullable Output<String> usersQueryString;

    /**
     * @return This names the query parameter that identifies the user.
     * 
     */
    public Optional<Output<String>> usersQueryString() {
        return Optional.ofNullable(this.usersQueryString);
    }

    /**
     * Specifies a Perl-compatible regular expression with which to substitute the request&#39;s user ID.
     * 
     */
    @Import(name="usersRegex")
    private @Nullable Output<String> usersRegex;

    /**
     * @return Specifies a Perl-compatible regular expression with which to substitute the request&#39;s user ID.
     * 
     */
    public Optional<Output<String>> usersRegex() {
        return Optional.ofNullable(this.usersRegex);
    }

    /**
     * Specifies a string to replace the request&#39;s user ID matched by `usersRegex`.
     * 
     */
    @Import(name="usersReplace")
    private @Nullable Output<String> usersReplace;

    /**
     * @return Specifies a string to replace the request&#39;s user ID matched by `usersRegex`.
     * 
     */
    public Optional<Output<String>> usersReplace() {
        return Optional.ofNullable(this.usersReplace);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="usersTitle")
    private @Nullable Output<String> usersTitle;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> usersTitle() {
        return Optional.ofNullable(this.usersTitle);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs() {}

    private GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs(GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs $) {
        this.applicationAction = $.applicationAction;
        this.applicationCnameEnabled = $.applicationCnameEnabled;
        this.applicationCnameLevel = $.applicationCnameLevel;
        this.applicationCookie = $.applicationCookie;
        this.applicationQueryString = $.applicationQueryString;
        this.applicationRegex = $.applicationRegex;
        this.applicationReplace = $.applicationReplace;
        this.applicationTitle = $.applicationTitle;
        this.customerAction = $.customerAction;
        this.customerCnameEnabled = $.customerCnameEnabled;
        this.customerCnameLevel = $.customerCnameLevel;
        this.customerCookie = $.customerCookie;
        this.customerQueryString = $.customerQueryString;
        this.customerRegex = $.customerRegex;
        this.customerReplace = $.customerReplace;
        this.customerTitle = $.customerTitle;
        this.locked = $.locked;
        this.templateUuid = $.templateUuid;
        this.usersAction = $.usersAction;
        this.usersCnameEnabled = $.usersCnameEnabled;
        this.usersCnameLevel = $.usersCnameLevel;
        this.usersCookie = $.usersCookie;
        this.usersQueryString = $.usersQueryString;
        this.usersRegex = $.usersRegex;
        this.usersReplace = $.usersReplace;
        this.usersTitle = $.usersTitle;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationAction Specifies the request component that identifies a SaaS application.
         * 
         * @return builder
         * 
         */
        public Builder applicationAction(@Nullable Output<String> applicationAction) {
            $.applicationAction = applicationAction;
            return this;
        }

        /**
         * @param applicationAction Specifies the request component that identifies a SaaS application.
         * 
         * @return builder
         * 
         */
        public Builder applicationAction(String applicationAction) {
            return applicationAction(Output.of(applicationAction));
        }

        /**
         * @param applicationCnameEnabled Enabling this allows you to identify applications using a `CNAME chain` rather than a single hostname.
         * 
         * @return builder
         * 
         */
        public Builder applicationCnameEnabled(@Nullable Output<Boolean> applicationCnameEnabled) {
            $.applicationCnameEnabled = applicationCnameEnabled;
            return this;
        }

        /**
         * @param applicationCnameEnabled Enabling this allows you to identify applications using a `CNAME chain` rather than a single hostname.
         * 
         * @return builder
         * 
         */
        public Builder applicationCnameEnabled(Boolean applicationCnameEnabled) {
            return applicationCnameEnabled(Output.of(applicationCnameEnabled));
        }

        /**
         * @param applicationCnameLevel Specifies the number of CNAMEs to use in the chain.
         * 
         * @return builder
         * 
         */
        public Builder applicationCnameLevel(@Nullable Output<Integer> applicationCnameLevel) {
            $.applicationCnameLevel = applicationCnameLevel;
            return this;
        }

        /**
         * @param applicationCnameLevel Specifies the number of CNAMEs to use in the chain.
         * 
         * @return builder
         * 
         */
        public Builder applicationCnameLevel(Integer applicationCnameLevel) {
            return applicationCnameLevel(Output.of(applicationCnameLevel));
        }

        /**
         * @param applicationCookie This specifies the name of the cookie that identifies the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationCookie(@Nullable Output<String> applicationCookie) {
            $.applicationCookie = applicationCookie;
            return this;
        }

        /**
         * @param applicationCookie This specifies the name of the cookie that identifies the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationCookie(String applicationCookie) {
            return applicationCookie(Output.of(applicationCookie));
        }

        /**
         * @param applicationQueryString This names the query parameter that identifies the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationQueryString(@Nullable Output<String> applicationQueryString) {
            $.applicationQueryString = applicationQueryString;
            return this;
        }

        /**
         * @param applicationQueryString This names the query parameter that identifies the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationQueryString(String applicationQueryString) {
            return applicationQueryString(Output.of(applicationQueryString));
        }

        /**
         * @param applicationRegex Specifies a Perl-compatible regular expression with which to substitute the request&#39;s application ID.
         * 
         * @return builder
         * 
         */
        public Builder applicationRegex(@Nullable Output<String> applicationRegex) {
            $.applicationRegex = applicationRegex;
            return this;
        }

        /**
         * @param applicationRegex Specifies a Perl-compatible regular expression with which to substitute the request&#39;s application ID.
         * 
         * @return builder
         * 
         */
        public Builder applicationRegex(String applicationRegex) {
            return applicationRegex(Output.of(applicationRegex));
        }

        /**
         * @param applicationReplace Specifies a string to replace the request&#39;s application ID matched by `applicationRegex`.
         * 
         * @return builder
         * 
         */
        public Builder applicationReplace(@Nullable Output<String> applicationReplace) {
            $.applicationReplace = applicationReplace;
            return this;
        }

        /**
         * @param applicationReplace Specifies a string to replace the request&#39;s application ID matched by `applicationRegex`.
         * 
         * @return builder
         * 
         */
        public Builder applicationReplace(String applicationReplace) {
            return applicationReplace(Output.of(applicationReplace));
        }

        /**
         * @param applicationTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder applicationTitle(@Nullable Output<String> applicationTitle) {
            $.applicationTitle = applicationTitle;
            return this;
        }

        /**
         * @param applicationTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder applicationTitle(String applicationTitle) {
            return applicationTitle(Output.of(applicationTitle));
        }

        /**
         * @param customerAction Specifies the request component that identifies a SaaS customer.
         * 
         * @return builder
         * 
         */
        public Builder customerAction(@Nullable Output<String> customerAction) {
            $.customerAction = customerAction;
            return this;
        }

        /**
         * @param customerAction Specifies the request component that identifies a SaaS customer.
         * 
         * @return builder
         * 
         */
        public Builder customerAction(String customerAction) {
            return customerAction(Output.of(customerAction));
        }

        /**
         * @param customerCnameEnabled Enabling this allows you to identify customers using a `CNAME chain` rather than a single hostname.
         * 
         * @return builder
         * 
         */
        public Builder customerCnameEnabled(@Nullable Output<Boolean> customerCnameEnabled) {
            $.customerCnameEnabled = customerCnameEnabled;
            return this;
        }

        /**
         * @param customerCnameEnabled Enabling this allows you to identify customers using a `CNAME chain` rather than a single hostname.
         * 
         * @return builder
         * 
         */
        public Builder customerCnameEnabled(Boolean customerCnameEnabled) {
            return customerCnameEnabled(Output.of(customerCnameEnabled));
        }

        /**
         * @param customerCnameLevel Specifies the number of CNAMEs to use in the chain.
         * 
         * @return builder
         * 
         */
        public Builder customerCnameLevel(@Nullable Output<Integer> customerCnameLevel) {
            $.customerCnameLevel = customerCnameLevel;
            return this;
        }

        /**
         * @param customerCnameLevel Specifies the number of CNAMEs to use in the chain.
         * 
         * @return builder
         * 
         */
        public Builder customerCnameLevel(Integer customerCnameLevel) {
            return customerCnameLevel(Output.of(customerCnameLevel));
        }

        /**
         * @param customerCookie This specifies the name of the cookie that identifies the customer.
         * 
         * @return builder
         * 
         */
        public Builder customerCookie(@Nullable Output<String> customerCookie) {
            $.customerCookie = customerCookie;
            return this;
        }

        /**
         * @param customerCookie This specifies the name of the cookie that identifies the customer.
         * 
         * @return builder
         * 
         */
        public Builder customerCookie(String customerCookie) {
            return customerCookie(Output.of(customerCookie));
        }

        /**
         * @param customerQueryString This names the query parameter that identifies the customer.
         * 
         * @return builder
         * 
         */
        public Builder customerQueryString(@Nullable Output<String> customerQueryString) {
            $.customerQueryString = customerQueryString;
            return this;
        }

        /**
         * @param customerQueryString This names the query parameter that identifies the customer.
         * 
         * @return builder
         * 
         */
        public Builder customerQueryString(String customerQueryString) {
            return customerQueryString(Output.of(customerQueryString));
        }

        /**
         * @param customerRegex Specifies a Perl-compatible regular expression with which to substitute the request&#39;s customer ID.
         * 
         * @return builder
         * 
         */
        public Builder customerRegex(@Nullable Output<String> customerRegex) {
            $.customerRegex = customerRegex;
            return this;
        }

        /**
         * @param customerRegex Specifies a Perl-compatible regular expression with which to substitute the request&#39;s customer ID.
         * 
         * @return builder
         * 
         */
        public Builder customerRegex(String customerRegex) {
            return customerRegex(Output.of(customerRegex));
        }

        /**
         * @param customerReplace Specifies a string to replace the request&#39;s customer ID matched by `customerRegex`.
         * 
         * @return builder
         * 
         */
        public Builder customerReplace(@Nullable Output<String> customerReplace) {
            $.customerReplace = customerReplace;
            return this;
        }

        /**
         * @param customerReplace Specifies a string to replace the request&#39;s customer ID matched by `customerRegex`.
         * 
         * @return builder
         * 
         */
        public Builder customerReplace(String customerReplace) {
            return customerReplace(Output.of(customerReplace));
        }

        /**
         * @param customerTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder customerTitle(@Nullable Output<String> customerTitle) {
            $.customerTitle = customerTitle;
            return this;
        }

        /**
         * @param customerTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder customerTitle(String customerTitle) {
            return customerTitle(Output.of(customerTitle));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param usersAction Specifies the request component that identifies a SaaS user.
         * 
         * @return builder
         * 
         */
        public Builder usersAction(@Nullable Output<String> usersAction) {
            $.usersAction = usersAction;
            return this;
        }

        /**
         * @param usersAction Specifies the request component that identifies a SaaS user.
         * 
         * @return builder
         * 
         */
        public Builder usersAction(String usersAction) {
            return usersAction(Output.of(usersAction));
        }

        /**
         * @param usersCnameEnabled Enabling this allows you to identify users using a `CNAME chain` rather than a single hostname.
         * 
         * @return builder
         * 
         */
        public Builder usersCnameEnabled(@Nullable Output<Boolean> usersCnameEnabled) {
            $.usersCnameEnabled = usersCnameEnabled;
            return this;
        }

        /**
         * @param usersCnameEnabled Enabling this allows you to identify users using a `CNAME chain` rather than a single hostname.
         * 
         * @return builder
         * 
         */
        public Builder usersCnameEnabled(Boolean usersCnameEnabled) {
            return usersCnameEnabled(Output.of(usersCnameEnabled));
        }

        /**
         * @param usersCnameLevel Specifies the number of CNAMEs to use in the chain.
         * 
         * @return builder
         * 
         */
        public Builder usersCnameLevel(@Nullable Output<Integer> usersCnameLevel) {
            $.usersCnameLevel = usersCnameLevel;
            return this;
        }

        /**
         * @param usersCnameLevel Specifies the number of CNAMEs to use in the chain.
         * 
         * @return builder
         * 
         */
        public Builder usersCnameLevel(Integer usersCnameLevel) {
            return usersCnameLevel(Output.of(usersCnameLevel));
        }

        /**
         * @param usersCookie This specifies the name of the cookie that identifies the user.
         * 
         * @return builder
         * 
         */
        public Builder usersCookie(@Nullable Output<String> usersCookie) {
            $.usersCookie = usersCookie;
            return this;
        }

        /**
         * @param usersCookie This specifies the name of the cookie that identifies the user.
         * 
         * @return builder
         * 
         */
        public Builder usersCookie(String usersCookie) {
            return usersCookie(Output.of(usersCookie));
        }

        /**
         * @param usersQueryString This names the query parameter that identifies the user.
         * 
         * @return builder
         * 
         */
        public Builder usersQueryString(@Nullable Output<String> usersQueryString) {
            $.usersQueryString = usersQueryString;
            return this;
        }

        /**
         * @param usersQueryString This names the query parameter that identifies the user.
         * 
         * @return builder
         * 
         */
        public Builder usersQueryString(String usersQueryString) {
            return usersQueryString(Output.of(usersQueryString));
        }

        /**
         * @param usersRegex Specifies a Perl-compatible regular expression with which to substitute the request&#39;s user ID.
         * 
         * @return builder
         * 
         */
        public Builder usersRegex(@Nullable Output<String> usersRegex) {
            $.usersRegex = usersRegex;
            return this;
        }

        /**
         * @param usersRegex Specifies a Perl-compatible regular expression with which to substitute the request&#39;s user ID.
         * 
         * @return builder
         * 
         */
        public Builder usersRegex(String usersRegex) {
            return usersRegex(Output.of(usersRegex));
        }

        /**
         * @param usersReplace Specifies a string to replace the request&#39;s user ID matched by `usersRegex`.
         * 
         * @return builder
         * 
         */
        public Builder usersReplace(@Nullable Output<String> usersReplace) {
            $.usersReplace = usersReplace;
            return this;
        }

        /**
         * @param usersReplace Specifies a string to replace the request&#39;s user ID matched by `usersRegex`.
         * 
         * @return builder
         * 
         */
        public Builder usersReplace(String usersReplace) {
            return usersReplace(Output.of(usersReplace));
        }

        /**
         * @param usersTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder usersTitle(@Nullable Output<String> usersTitle) {
            $.usersTitle = usersTitle;
            return this;
        }

        /**
         * @param usersTitle This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder usersTitle(String usersTitle) {
            return usersTitle(Output.of(usersTitle));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20240813BehaviorSaasDefinitionsArgs build() {
            return $;
        }
    }

}
