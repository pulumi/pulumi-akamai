// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class BotmanContentProtectionRuleSequenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final BotmanContentProtectionRuleSequenceArgs Empty = new BotmanContentProtectionRuleSequenceArgs();

    /**
     * Unique identifier of the security configuration
     * 
     */
    @Import(name="configId", required=true)
    private Output<Integer> configId;

    /**
     * @return Unique identifier of the security configuration
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }

    /**
     * Unique identifiers of content protection rules, listed in the order of their evaluation
     * 
     */
    @Import(name="contentProtectionRuleIds", required=true)
    private Output<List<String>> contentProtectionRuleIds;

    /**
     * @return Unique identifiers of content protection rules, listed in the order of their evaluation
     * 
     */
    public Output<List<String>> contentProtectionRuleIds() {
        return this.contentProtectionRuleIds;
    }

    /**
     * Unique identifier of the security policy
     * 
     */
    @Import(name="securityPolicyId", required=true)
    private Output<String> securityPolicyId;

    /**
     * @return Unique identifier of the security policy
     * 
     */
    public Output<String> securityPolicyId() {
        return this.securityPolicyId;
    }

    private BotmanContentProtectionRuleSequenceArgs() {}

    private BotmanContentProtectionRuleSequenceArgs(BotmanContentProtectionRuleSequenceArgs $) {
        this.configId = $.configId;
        this.contentProtectionRuleIds = $.contentProtectionRuleIds;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotmanContentProtectionRuleSequenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotmanContentProtectionRuleSequenceArgs $;

        public Builder() {
            $ = new BotmanContentProtectionRuleSequenceArgs();
        }

        public Builder(BotmanContentProtectionRuleSequenceArgs defaults) {
            $ = new BotmanContentProtectionRuleSequenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param contentProtectionRuleIds Unique identifiers of content protection rules, listed in the order of their evaluation
         * 
         * @return builder
         * 
         */
        public Builder contentProtectionRuleIds(Output<List<String>> contentProtectionRuleIds) {
            $.contentProtectionRuleIds = contentProtectionRuleIds;
            return this;
        }

        /**
         * @param contentProtectionRuleIds Unique identifiers of content protection rules, listed in the order of their evaluation
         * 
         * @return builder
         * 
         */
        public Builder contentProtectionRuleIds(List<String> contentProtectionRuleIds) {
            return contentProtectionRuleIds(Output.of(contentProtectionRuleIds));
        }

        /**
         * @param contentProtectionRuleIds Unique identifiers of content protection rules, listed in the order of their evaluation
         * 
         * @return builder
         * 
         */
        public Builder contentProtectionRuleIds(String... contentProtectionRuleIds) {
            return contentProtectionRuleIds(List.of(contentProtectionRuleIds));
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        public BotmanContentProtectionRuleSequenceArgs build() {
            if ($.configId == null) {
                throw new MissingRequiredPropertyException("BotmanContentProtectionRuleSequenceArgs", "configId");
            }
            if ($.contentProtectionRuleIds == null) {
                throw new MissingRequiredPropertyException("BotmanContentProtectionRuleSequenceArgs", "contentProtectionRuleIds");
            }
            if ($.securityPolicyId == null) {
                throw new MissingRequiredPropertyException("BotmanContentProtectionRuleSequenceArgs", "securityPolicyId");
            }
            return $;
        }
    }

}
