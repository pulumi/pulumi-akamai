// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatastreamAzureConnectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatastreamAzureConnectorArgs Empty = new DatastreamAzureConnectorArgs();

    @Import(name="accessKey", required=true)
    private Output<String> accessKey;

    public Output<String> accessKey() {
        return this.accessKey;
    }

    @Import(name="accountName", required=true)
    private Output<String> accountName;

    public Output<String> accountName() {
        return this.accountName;
    }

    @Import(name="compressLogs")
    private @Nullable Output<Boolean> compressLogs;

    public Optional<Output<Boolean>> compressLogs() {
        return Optional.ofNullable(this.compressLogs);
    }

    @Import(name="containerName", required=true)
    private Output<String> containerName;

    public Output<String> containerName() {
        return this.containerName;
    }

    @Import(name="displayName", required=true)
    private Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    @Import(name="path", required=true)
    private Output<String> path;

    public Output<String> path() {
        return this.path;
    }

    private DatastreamAzureConnectorArgs() {}

    private DatastreamAzureConnectorArgs(DatastreamAzureConnectorArgs $) {
        this.accessKey = $.accessKey;
        this.accountName = $.accountName;
        this.compressLogs = $.compressLogs;
        this.containerName = $.containerName;
        this.displayName = $.displayName;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatastreamAzureConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatastreamAzureConnectorArgs $;

        public Builder() {
            $ = new DatastreamAzureConnectorArgs();
        }

        public Builder(DatastreamAzureConnectorArgs defaults) {
            $ = new DatastreamAzureConnectorArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessKey(Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        public Builder compressLogs(@Nullable Output<Boolean> compressLogs) {
            $.compressLogs = compressLogs;
            return this;
        }

        public Builder compressLogs(Boolean compressLogs) {
            return compressLogs(Output.of(compressLogs));
        }

        public Builder containerName(Output<String> containerName) {
            $.containerName = containerName;
            return this;
        }

        public Builder containerName(String containerName) {
            return containerName(Output.of(containerName));
        }

        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public DatastreamAzureConnectorArgs build() {
            if ($.accessKey == null) {
                throw new MissingRequiredPropertyException("DatastreamAzureConnectorArgs", "accessKey");
            }
            if ($.accountName == null) {
                throw new MissingRequiredPropertyException("DatastreamAzureConnectorArgs", "accountName");
            }
            if ($.containerName == null) {
                throw new MissingRequiredPropertyException("DatastreamAzureConnectorArgs", "containerName");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("DatastreamAzureConnectorArgs", "displayName");
            }
            if ($.path == null) {
                throw new MissingRequiredPropertyException("DatastreamAzureConnectorArgs", "path");
            }
            return $;
        }
    }

}
