// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity Empty = new GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity();

    @Import(name="opacity")
    private @Nullable String opacity;

    public Optional<String> opacity() {
        return Optional.ofNullable(this.opacity);
    }

    @Import(name="opacityVar")
    private @Nullable String opacityVar;

    public Optional<String> opacityVar() {
        return Optional.ofNullable(this.opacityVar);
    }

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity() {}

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity(GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity $) {
        this.opacity = $.opacity;
        this.opacityVar = $.opacityVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity(Objects.requireNonNull(defaults));
        }

        public Builder opacity(@Nullable String opacity) {
            $.opacity = opacity;
            return this;
        }

        public Builder opacityVar(@Nullable String opacityVar) {
            $.opacityVar = opacityVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationCompoundTransformationFitAndFillFillTransformationOpacity build() {
            return $;
        }
    }

}
