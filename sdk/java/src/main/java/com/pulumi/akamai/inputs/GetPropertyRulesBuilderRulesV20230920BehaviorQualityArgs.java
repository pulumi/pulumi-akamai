// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs Empty = new GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs();

    @Import(name="audienceSettings")
    private @Nullable Output<String> audienceSettings;

    public Optional<Output<String>> audienceSettings() {
        return Optional.ofNullable(this.audienceSettings);
    }

    @Import(name="catalogSize")
    private @Nullable Output<String> catalogSize;

    public Optional<Output<String>> catalogSize() {
        return Optional.ofNullable(this.catalogSize);
    }

    @Import(name="contentSettings")
    private @Nullable Output<String> contentSettings;

    public Optional<Output<String>> contentSettings() {
        return Optional.ofNullable(this.contentSettings);
    }

    @Import(name="contentType")
    private @Nullable Output<String> contentType;

    public Optional<Output<String>> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    @Import(name="country")
    private @Nullable Output<String> country;

    public Optional<Output<String>> country() {
        return Optional.ofNullable(this.country);
    }

    @Import(name="deliveryFormat")
    private @Nullable Output<String> deliveryFormat;

    public Optional<Output<String>> deliveryFormat() {
        return Optional.ofNullable(this.deliveryFormat);
    }

    @Import(name="deliveryType")
    private @Nullable Output<String> deliveryType;

    public Optional<Output<String>> deliveryType() {
        return Optional.ofNullable(this.deliveryType);
    }

    @Import(name="downloadType")
    private @Nullable Output<String> downloadType;

    public Optional<Output<String>> downloadType() {
        return Optional.ofNullable(this.downloadType);
    }

    @Import(name="endUserLocation")
    private @Nullable Output<String> endUserLocation;

    public Optional<Output<String>> endUserLocation() {
        return Optional.ofNullable(this.endUserLocation);
    }

    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    @Import(name="maximumConcurrentUsers")
    private @Nullable Output<String> maximumConcurrentUsers;

    public Optional<Output<String>> maximumConcurrentUsers() {
        return Optional.ofNullable(this.maximumConcurrentUsers);
    }

    @Import(name="objectSize")
    private @Nullable Output<String> objectSize;

    public Optional<Output<String>> objectSize() {
        return Optional.ofNullable(this.objectSize);
    }

    @Import(name="optimizeFor")
    private @Nullable Output<String> optimizeFor;

    public Optional<Output<String>> optimizeFor() {
        return Optional.ofNullable(this.optimizeFor);
    }

    @Import(name="originSettings")
    private @Nullable Output<String> originSettings;

    public Optional<Output<String>> originSettings() {
        return Optional.ofNullable(this.originSettings);
    }

    @Import(name="popularityDistribution")
    private @Nullable Output<String> popularityDistribution;

    public Optional<Output<String>> popularityDistribution() {
        return Optional.ofNullable(this.popularityDistribution);
    }

    @Import(name="refreshRate")
    private @Nullable Output<String> refreshRate;

    public Optional<Output<String>> refreshRate() {
        return Optional.ofNullable(this.refreshRate);
    }

    @Import(name="segmentDuration")
    private @Nullable Output<Integer> segmentDuration;

    public Optional<Output<Integer>> segmentDuration() {
        return Optional.ofNullable(this.segmentDuration);
    }

    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs() {}

    private GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs(GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs $) {
        this.audienceSettings = $.audienceSettings;
        this.catalogSize = $.catalogSize;
        this.contentSettings = $.contentSettings;
        this.contentType = $.contentType;
        this.country = $.country;
        this.deliveryFormat = $.deliveryFormat;
        this.deliveryType = $.deliveryType;
        this.downloadType = $.downloadType;
        this.endUserLocation = $.endUserLocation;
        this.locked = $.locked;
        this.maximumConcurrentUsers = $.maximumConcurrentUsers;
        this.objectSize = $.objectSize;
        this.optimizeFor = $.optimizeFor;
        this.originSettings = $.originSettings;
        this.popularityDistribution = $.popularityDistribution;
        this.refreshRate = $.refreshRate;
        this.segmentDuration = $.segmentDuration;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs(Objects.requireNonNull(defaults));
        }

        public Builder audienceSettings(@Nullable Output<String> audienceSettings) {
            $.audienceSettings = audienceSettings;
            return this;
        }

        public Builder audienceSettings(String audienceSettings) {
            return audienceSettings(Output.of(audienceSettings));
        }

        public Builder catalogSize(@Nullable Output<String> catalogSize) {
            $.catalogSize = catalogSize;
            return this;
        }

        public Builder catalogSize(String catalogSize) {
            return catalogSize(Output.of(catalogSize));
        }

        public Builder contentSettings(@Nullable Output<String> contentSettings) {
            $.contentSettings = contentSettings;
            return this;
        }

        public Builder contentSettings(String contentSettings) {
            return contentSettings(Output.of(contentSettings));
        }

        public Builder contentType(@Nullable Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        public Builder country(@Nullable Output<String> country) {
            $.country = country;
            return this;
        }

        public Builder country(String country) {
            return country(Output.of(country));
        }

        public Builder deliveryFormat(@Nullable Output<String> deliveryFormat) {
            $.deliveryFormat = deliveryFormat;
            return this;
        }

        public Builder deliveryFormat(String deliveryFormat) {
            return deliveryFormat(Output.of(deliveryFormat));
        }

        public Builder deliveryType(@Nullable Output<String> deliveryType) {
            $.deliveryType = deliveryType;
            return this;
        }

        public Builder deliveryType(String deliveryType) {
            return deliveryType(Output.of(deliveryType));
        }

        public Builder downloadType(@Nullable Output<String> downloadType) {
            $.downloadType = downloadType;
            return this;
        }

        public Builder downloadType(String downloadType) {
            return downloadType(Output.of(downloadType));
        }

        public Builder endUserLocation(@Nullable Output<String> endUserLocation) {
            $.endUserLocation = endUserLocation;
            return this;
        }

        public Builder endUserLocation(String endUserLocation) {
            return endUserLocation(Output.of(endUserLocation));
        }

        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        public Builder maximumConcurrentUsers(@Nullable Output<String> maximumConcurrentUsers) {
            $.maximumConcurrentUsers = maximumConcurrentUsers;
            return this;
        }

        public Builder maximumConcurrentUsers(String maximumConcurrentUsers) {
            return maximumConcurrentUsers(Output.of(maximumConcurrentUsers));
        }

        public Builder objectSize(@Nullable Output<String> objectSize) {
            $.objectSize = objectSize;
            return this;
        }

        public Builder objectSize(String objectSize) {
            return objectSize(Output.of(objectSize));
        }

        public Builder optimizeFor(@Nullable Output<String> optimizeFor) {
            $.optimizeFor = optimizeFor;
            return this;
        }

        public Builder optimizeFor(String optimizeFor) {
            return optimizeFor(Output.of(optimizeFor));
        }

        public Builder originSettings(@Nullable Output<String> originSettings) {
            $.originSettings = originSettings;
            return this;
        }

        public Builder originSettings(String originSettings) {
            return originSettings(Output.of(originSettings));
        }

        public Builder popularityDistribution(@Nullable Output<String> popularityDistribution) {
            $.popularityDistribution = popularityDistribution;
            return this;
        }

        public Builder popularityDistribution(String popularityDistribution) {
            return popularityDistribution(Output.of(popularityDistribution));
        }

        public Builder refreshRate(@Nullable Output<String> refreshRate) {
            $.refreshRate = refreshRate;
            return this;
        }

        public Builder refreshRate(String refreshRate) {
            return refreshRate(Output.of(refreshRate));
        }

        public Builder segmentDuration(@Nullable Output<Integer> segmentDuration) {
            $.segmentDuration = segmentDuration;
            return this;
        }

        public Builder segmentDuration(Integer segmentDuration) {
            return segmentDuration(Output.of(segmentDuration));
        }

        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20230920BehaviorQualityArgs build() {
            return $;
        }
    }

}
