// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIamPropertyUsersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIamPropertyUsersArgs Empty = new GetIamPropertyUsersArgs();

    @Import(name="assetId", required=true)
    private Output<String> assetId;

    public Output<String> assetId() {
        return this.assetId;
    }

    @Import(name="userType")
    private @Nullable Output<String> userType;

    public Optional<Output<String>> userType() {
        return Optional.ofNullable(this.userType);
    }

    private GetIamPropertyUsersArgs() {}

    private GetIamPropertyUsersArgs(GetIamPropertyUsersArgs $) {
        this.assetId = $.assetId;
        this.userType = $.userType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIamPropertyUsersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIamPropertyUsersArgs $;

        public Builder() {
            $ = new GetIamPropertyUsersArgs();
        }

        public Builder(GetIamPropertyUsersArgs defaults) {
            $ = new GetIamPropertyUsersArgs(Objects.requireNonNull(defaults));
        }

        public Builder assetId(Output<String> assetId) {
            $.assetId = assetId;
            return this;
        }

        public Builder assetId(String assetId) {
            return assetId(Output.of(assetId));
        }

        public Builder userType(@Nullable Output<String> userType) {
            $.userType = userType;
            return this;
        }

        public Builder userType(String userType) {
            return userType(Output.of(userType));
        }

        public GetIamPropertyUsersArgs build() {
            if ($.assetId == null) {
                throw new MissingRequiredPropertyException("GetIamPropertyUsersArgs", "assetId");
            }
            return $;
        }
    }

}
