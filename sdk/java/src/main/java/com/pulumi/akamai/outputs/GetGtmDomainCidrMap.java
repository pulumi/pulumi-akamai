// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetGtmDomainCidrMapAssignment;
import com.pulumi.akamai.outputs.GetGtmDomainCidrMapDefaultDatacenter;
import com.pulumi.akamai.outputs.GetGtmDomainCidrMapLink;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGtmDomainCidrMap {
    /**
     * @return Contains information about the CIDR zone groupings of CIDR blocks.
     * 
     */
    private @Nullable List<GetGtmDomainCidrMapAssignment> assignments;
    /**
     * @return A placeholder for all other CIDR zones, CIDR blocks not found in these CIDR zones.
     * 
     */
    private @Nullable GetGtmDomainCidrMapDefaultDatacenter defaultDatacenter;
    /**
     * @return Specifies the URL path that allows direct navigation to the CIDR map.
     * 
     */
    private @Nullable List<GetGtmDomainCidrMapLink> links;
    /**
     * @return Unique name for the CIDR map.
     * 
     */
    private String name;

    private GetGtmDomainCidrMap() {}
    /**
     * @return Contains information about the CIDR zone groupings of CIDR blocks.
     * 
     */
    public List<GetGtmDomainCidrMapAssignment> assignments() {
        return this.assignments == null ? List.of() : this.assignments;
    }
    /**
     * @return A placeholder for all other CIDR zones, CIDR blocks not found in these CIDR zones.
     * 
     */
    public Optional<GetGtmDomainCidrMapDefaultDatacenter> defaultDatacenter() {
        return Optional.ofNullable(this.defaultDatacenter);
    }
    /**
     * @return Specifies the URL path that allows direct navigation to the CIDR map.
     * 
     */
    public List<GetGtmDomainCidrMapLink> links() {
        return this.links == null ? List.of() : this.links;
    }
    /**
     * @return Unique name for the CIDR map.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGtmDomainCidrMap defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetGtmDomainCidrMapAssignment> assignments;
        private @Nullable GetGtmDomainCidrMapDefaultDatacenter defaultDatacenter;
        private @Nullable List<GetGtmDomainCidrMapLink> links;
        private String name;
        public Builder() {}
        public Builder(GetGtmDomainCidrMap defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignments = defaults.assignments;
    	      this.defaultDatacenter = defaults.defaultDatacenter;
    	      this.links = defaults.links;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder assignments(@Nullable List<GetGtmDomainCidrMapAssignment> assignments) {

            this.assignments = assignments;
            return this;
        }
        public Builder assignments(GetGtmDomainCidrMapAssignment... assignments) {
            return assignments(List.of(assignments));
        }
        @CustomType.Setter
        public Builder defaultDatacenter(@Nullable GetGtmDomainCidrMapDefaultDatacenter defaultDatacenter) {

            this.defaultDatacenter = defaultDatacenter;
            return this;
        }
        @CustomType.Setter
        public Builder links(@Nullable List<GetGtmDomainCidrMapLink> links) {

            this.links = links;
            return this;
        }
        public Builder links(GetGtmDomainCidrMapLink... links) {
            return links(List.of(links));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGtmDomainCidrMap", "name");
            }
            this.name = name;
            return this;
        }
        public GetGtmDomainCidrMap build() {
            final var _resultValue = new GetGtmDomainCidrMap();
            _resultValue.assignments = assignments;
            _resultValue.defaultDatacenter = defaultDatacenter;
            _resultValue.links = links;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
