// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.trafficmanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GtmASmapAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final GtmASmapAssignmentArgs Empty = new GtmASmapAssignmentArgs();

    @Import(name="asNumbers", required=true)
    private Output<List<Integer>> asNumbers;

    public Output<List<Integer>> asNumbers() {
        return this.asNumbers;
    }

    @Import(name="datacenterId", required=true)
    private Output<Integer> datacenterId;

    public Output<Integer> datacenterId() {
        return this.datacenterId;
    }

    @Import(name="nickname", required=true)
    private Output<String> nickname;

    public Output<String> nickname() {
        return this.nickname;
    }

    private GtmASmapAssignmentArgs() {}

    private GtmASmapAssignmentArgs(GtmASmapAssignmentArgs $) {
        this.asNumbers = $.asNumbers;
        this.datacenterId = $.datacenterId;
        this.nickname = $.nickname;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GtmASmapAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GtmASmapAssignmentArgs $;

        public Builder() {
            $ = new GtmASmapAssignmentArgs();
        }

        public Builder(GtmASmapAssignmentArgs defaults) {
            $ = new GtmASmapAssignmentArgs(Objects.requireNonNull(defaults));
        }

        public Builder asNumbers(Output<List<Integer>> asNumbers) {
            $.asNumbers = asNumbers;
            return this;
        }

        public Builder asNumbers(List<Integer> asNumbers) {
            return asNumbers(Output.of(asNumbers));
        }

        public Builder asNumbers(Integer... asNumbers) {
            return asNumbers(List.of(asNumbers));
        }

        public Builder datacenterId(Output<Integer> datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        public Builder datacenterId(Integer datacenterId) {
            return datacenterId(Output.of(datacenterId));
        }

        public Builder nickname(Output<String> nickname) {
            $.nickname = nickname;
            return this;
        }

        public Builder nickname(String nickname) {
            return nickname(Output.of(nickname));
        }

        public GtmASmapAssignmentArgs build() {
            $.asNumbers = Objects.requireNonNull($.asNumbers, "expected parameter 'asNumbers' to be non-null");
            $.datacenterId = Objects.requireNonNull($.datacenterId, "expected parameter 'datacenterId' to be non-null");
            $.nickname = Objects.requireNonNull($.nickname, "expected parameter 'nickname' to be non-null");
            return $;
        }
    }

}
