// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.PropertyIncludeActivationComplianceRecordArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PropertyIncludeActivationState extends com.pulumi.resources.ResourceArgs {

    public static final PropertyIncludeActivationState Empty = new PropertyIncludeActivationState();

    /**
     * (Optional) Automatically acknowledge all rule warnings for activation and continue.
     * 
     */
    @Import(name="autoAcknowledgeRuleWarnings")
    private @Nullable Output<Boolean> autoAcknowledgeRuleWarnings;

    /**
     * @return (Optional) Automatically acknowledge all rule warnings for activation and continue.
     * 
     */
    public Optional<Output<Boolean>> autoAcknowledgeRuleWarnings() {
        return Optional.ofNullable(this.autoAcknowledgeRuleWarnings);
    }

    /**
     * Provides an audit record when activating on a production network
     * 
     */
    @Import(name="complianceRecord")
    private @Nullable Output<PropertyIncludeActivationComplianceRecordArgs> complianceRecord;

    /**
     * @return Provides an audit record when activating on a production network
     * 
     */
    public Optional<Output<PropertyIncludeActivationComplianceRecordArgs>> complianceRecord() {
        return Optional.ofNullable(this.complianceRecord);
    }

    /**
     * (Required) A contract&#39;s unique ID, including the optional `ctr_` prefix.
     * 
     */
    @Import(name="contractId")
    private @Nullable Output<String> contractId;

    /**
     * @return (Required) A contract&#39;s unique ID, including the optional `ctr_` prefix.
     * 
     */
    public Optional<Output<String>> contractId() {
        return Optional.ofNullable(this.contractId);
    }

    /**
     * (Required) A group&#39;s unique ID, including the optional `grp_` prefix.
     * 
     */
    @Import(name="groupId")
    private @Nullable Output<String> groupId;

    /**
     * @return (Required) A group&#39;s unique ID, including the optional `grp_` prefix.
     * 
     */
    public Optional<Output<String>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    /**
     * (Required) An include&#39;s unique ID with the optional `inc_` prefix.
     * 
     */
    @Import(name="includeId")
    private @Nullable Output<String> includeId;

    /**
     * @return (Required) An include&#39;s unique ID with the optional `inc_` prefix.
     * 
     */
    public Optional<Output<String>> includeId() {
        return Optional.ofNullable(this.includeId);
    }

    /**
     * (Required) The network for which the activation will be performed.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return (Required) The network for which the activation will be performed.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * (Optional) A log message assigned to the activation request.
     * 
     */
    @Import(name="note")
    private @Nullable Output<String> note;

    /**
     * @return (Optional) A log message assigned to the activation request.
     * 
     */
    public Optional<Output<String>> note() {
        return Optional.ofNullable(this.note);
    }

    /**
     * (Required) The list of email addresses to notify when the activation status changes.
     * 
     */
    @Import(name="notifyEmails")
    private @Nullable Output<List<String>> notifyEmails;

    /**
     * @return (Required) The list of email addresses to notify when the activation status changes.
     * 
     */
    public Optional<Output<List<String>>> notifyEmails() {
        return Optional.ofNullable(this.notifyEmails);
    }

    /**
     * The validation information in JSON format
     * 
     */
    @Import(name="validations")
    private @Nullable Output<String> validations;

    /**
     * @return The validation information in JSON format
     * 
     */
    public Optional<Output<String>> validations() {
        return Optional.ofNullable(this.validations);
    }

    /**
     * (Required) The version of the include you want to activate.
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return (Required) The version of the include you want to activate.
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private PropertyIncludeActivationState() {}

    private PropertyIncludeActivationState(PropertyIncludeActivationState $) {
        this.autoAcknowledgeRuleWarnings = $.autoAcknowledgeRuleWarnings;
        this.complianceRecord = $.complianceRecord;
        this.contractId = $.contractId;
        this.groupId = $.groupId;
        this.includeId = $.includeId;
        this.network = $.network;
        this.note = $.note;
        this.notifyEmails = $.notifyEmails;
        this.validations = $.validations;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PropertyIncludeActivationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PropertyIncludeActivationState $;

        public Builder() {
            $ = new PropertyIncludeActivationState();
        }

        public Builder(PropertyIncludeActivationState defaults) {
            $ = new PropertyIncludeActivationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoAcknowledgeRuleWarnings (Optional) Automatically acknowledge all rule warnings for activation and continue.
         * 
         * @return builder
         * 
         */
        public Builder autoAcknowledgeRuleWarnings(@Nullable Output<Boolean> autoAcknowledgeRuleWarnings) {
            $.autoAcknowledgeRuleWarnings = autoAcknowledgeRuleWarnings;
            return this;
        }

        /**
         * @param autoAcknowledgeRuleWarnings (Optional) Automatically acknowledge all rule warnings for activation and continue.
         * 
         * @return builder
         * 
         */
        public Builder autoAcknowledgeRuleWarnings(Boolean autoAcknowledgeRuleWarnings) {
            return autoAcknowledgeRuleWarnings(Output.of(autoAcknowledgeRuleWarnings));
        }

        /**
         * @param complianceRecord Provides an audit record when activating on a production network
         * 
         * @return builder
         * 
         */
        public Builder complianceRecord(@Nullable Output<PropertyIncludeActivationComplianceRecordArgs> complianceRecord) {
            $.complianceRecord = complianceRecord;
            return this;
        }

        /**
         * @param complianceRecord Provides an audit record when activating on a production network
         * 
         * @return builder
         * 
         */
        public Builder complianceRecord(PropertyIncludeActivationComplianceRecordArgs complianceRecord) {
            return complianceRecord(Output.of(complianceRecord));
        }

        /**
         * @param contractId (Required) A contract&#39;s unique ID, including the optional `ctr_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder contractId(@Nullable Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        /**
         * @param contractId (Required) A contract&#39;s unique ID, including the optional `ctr_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        /**
         * @param groupId (Required) A group&#39;s unique ID, including the optional `grp_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId (Required) A group&#39;s unique ID, including the optional `grp_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param includeId (Required) An include&#39;s unique ID with the optional `inc_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder includeId(@Nullable Output<String> includeId) {
            $.includeId = includeId;
            return this;
        }

        /**
         * @param includeId (Required) An include&#39;s unique ID with the optional `inc_` prefix.
         * 
         * @return builder
         * 
         */
        public Builder includeId(String includeId) {
            return includeId(Output.of(includeId));
        }

        /**
         * @param network (Required) The network for which the activation will be performed.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network (Required) The network for which the activation will be performed.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param note (Optional) A log message assigned to the activation request.
         * 
         * @return builder
         * 
         */
        public Builder note(@Nullable Output<String> note) {
            $.note = note;
            return this;
        }

        /**
         * @param note (Optional) A log message assigned to the activation request.
         * 
         * @return builder
         * 
         */
        public Builder note(String note) {
            return note(Output.of(note));
        }

        /**
         * @param notifyEmails (Required) The list of email addresses to notify when the activation status changes.
         * 
         * @return builder
         * 
         */
        public Builder notifyEmails(@Nullable Output<List<String>> notifyEmails) {
            $.notifyEmails = notifyEmails;
            return this;
        }

        /**
         * @param notifyEmails (Required) The list of email addresses to notify when the activation status changes.
         * 
         * @return builder
         * 
         */
        public Builder notifyEmails(List<String> notifyEmails) {
            return notifyEmails(Output.of(notifyEmails));
        }

        /**
         * @param notifyEmails (Required) The list of email addresses to notify when the activation status changes.
         * 
         * @return builder
         * 
         */
        public Builder notifyEmails(String... notifyEmails) {
            return notifyEmails(List.of(notifyEmails));
        }

        /**
         * @param validations The validation information in JSON format
         * 
         * @return builder
         * 
         */
        public Builder validations(@Nullable Output<String> validations) {
            $.validations = validations;
            return this;
        }

        /**
         * @param validations The validation information in JSON format
         * 
         * @return builder
         * 
         */
        public Builder validations(String validations) {
            return validations(Output.of(validations));
        }

        /**
         * @param version (Required) The version of the include you want to activate.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version (Required) The version of the include you want to activate.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public PropertyIncludeActivationState build() {
            return $;
        }
    }

}
