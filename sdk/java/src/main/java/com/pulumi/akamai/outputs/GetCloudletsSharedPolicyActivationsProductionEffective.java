// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCloudletsSharedPolicyActivationsProductionEffective {
    /**
     * @return Identifies the activation.
     * 
     */
    private Integer activationId;
    /**
     * @return The username who created the activation.
     * 
     */
    private String createdBy;
    /**
     * @return ISO 8601 timestamp indicating when the activation was created.
     * 
     */
    private String createdDate;
    /**
     * @return ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in &#39;failureDetails&#39;.
     * 
     */
    private String finishDate;
    /**
     * @return The networks where you can activate or deactivate the policy version, either &#39;PRODUCTION&#39; or &#39;STAGING&#39;.
     * 
     */
    private String network;
    /**
     * @return The operations that you can perform on a policy version, either &#39;ACTIVATION&#39; or &#39;DEACTIVATION&#39;.
     * 
     */
    private String operation;
    /**
     * @return Identifies the shared policy.
     * 
     */
    private Integer policyId;
    /**
     * @return The number of the policy version.
     * 
     */
    private Integer policyVersion;
    /**
     * @return Indicates if the policy version is deleted.
     * 
     */
    private Boolean policyVersionDeleted;
    /**
     * @return The status of the operation, either &#39;IN_PROGRESS&#39;, &#39;SUCCESS&#39;, or &#39;FAILED&#39;.
     * 
     */
    private String status;

    private GetCloudletsSharedPolicyActivationsProductionEffective() {}
    /**
     * @return Identifies the activation.
     * 
     */
    public Integer activationId() {
        return this.activationId;
    }
    /**
     * @return The username who created the activation.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return ISO 8601 timestamp indicating when the activation was created.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * @return ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in &#39;failureDetails&#39;.
     * 
     */
    public String finishDate() {
        return this.finishDate;
    }
    /**
     * @return The networks where you can activate or deactivate the policy version, either &#39;PRODUCTION&#39; or &#39;STAGING&#39;.
     * 
     */
    public String network() {
        return this.network;
    }
    /**
     * @return The operations that you can perform on a policy version, either &#39;ACTIVATION&#39; or &#39;DEACTIVATION&#39;.
     * 
     */
    public String operation() {
        return this.operation;
    }
    /**
     * @return Identifies the shared policy.
     * 
     */
    public Integer policyId() {
        return this.policyId;
    }
    /**
     * @return The number of the policy version.
     * 
     */
    public Integer policyVersion() {
        return this.policyVersion;
    }
    /**
     * @return Indicates if the policy version is deleted.
     * 
     */
    public Boolean policyVersionDeleted() {
        return this.policyVersionDeleted;
    }
    /**
     * @return The status of the operation, either &#39;IN_PROGRESS&#39;, &#39;SUCCESS&#39;, or &#39;FAILED&#39;.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudletsSharedPolicyActivationsProductionEffective defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer activationId;
        private String createdBy;
        private String createdDate;
        private String finishDate;
        private String network;
        private String operation;
        private Integer policyId;
        private Integer policyVersion;
        private Boolean policyVersionDeleted;
        private String status;
        public Builder() {}
        public Builder(GetCloudletsSharedPolicyActivationsProductionEffective defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activationId = defaults.activationId;
    	      this.createdBy = defaults.createdBy;
    	      this.createdDate = defaults.createdDate;
    	      this.finishDate = defaults.finishDate;
    	      this.network = defaults.network;
    	      this.operation = defaults.operation;
    	      this.policyId = defaults.policyId;
    	      this.policyVersion = defaults.policyVersion;
    	      this.policyVersionDeleted = defaults.policyVersionDeleted;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder activationId(Integer activationId) {
            if (activationId == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyActivationsProductionEffective", "activationId");
            }
            this.activationId = activationId;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyActivationsProductionEffective", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            if (createdDate == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyActivationsProductionEffective", "createdDate");
            }
            this.createdDate = createdDate;
            return this;
        }
        @CustomType.Setter
        public Builder finishDate(String finishDate) {
            if (finishDate == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyActivationsProductionEffective", "finishDate");
            }
            this.finishDate = finishDate;
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyActivationsProductionEffective", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder operation(String operation) {
            if (operation == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyActivationsProductionEffective", "operation");
            }
            this.operation = operation;
            return this;
        }
        @CustomType.Setter
        public Builder policyId(Integer policyId) {
            if (policyId == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyActivationsProductionEffective", "policyId");
            }
            this.policyId = policyId;
            return this;
        }
        @CustomType.Setter
        public Builder policyVersion(Integer policyVersion) {
            if (policyVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyActivationsProductionEffective", "policyVersion");
            }
            this.policyVersion = policyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder policyVersionDeleted(Boolean policyVersionDeleted) {
            if (policyVersionDeleted == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyActivationsProductionEffective", "policyVersionDeleted");
            }
            this.policyVersionDeleted = policyVersionDeleted;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetCloudletsSharedPolicyActivationsProductionEffective", "status");
            }
            this.status = status;
            return this;
        }
        public GetCloudletsSharedPolicyActivationsProductionEffective build() {
            final var _resultValue = new GetCloudletsSharedPolicyActivationsProductionEffective();
            _resultValue.activationId = activationId;
            _resultValue.createdBy = createdBy;
            _resultValue.createdDate = createdDate;
            _resultValue.finishDate = finishDate;
            _resultValue.network = network;
            _resultValue.operation = operation;
            _resultValue.policyId = policyId;
            _resultValue.policyVersion = policyVersion;
            _resultValue.policyVersionDeleted = policyVersionDeleted;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
