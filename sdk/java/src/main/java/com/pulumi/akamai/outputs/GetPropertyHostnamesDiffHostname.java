// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPropertyHostnamesDiffHostname {
    /**
     * @return The hostname that your end users see, indicated by the Host header in end user requests.
     * 
     */
    private String cnameFrom;
    /**
     * @return Indicates the certificate&#39;s provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can&#39;t specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.
     * 
     */
    private String productionCertProvisioningType;
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    private String productionCnameTo;
    /**
     * @return A hostname&#39;s CNAME type. Supports only the `EDGE_HOSTNAME` value.
     * 
     */
    private String productionCnameType;
    /**
     * @return The unique identifier for the edge hostname.
     * 
     */
    private String productionEdgeHostnameId;
    /**
     * @return Indicates the certificate&#39;s provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can&#39;t specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.
     * 
     */
    private String stagingCertProvisioningType;
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    private String stagingCnameTo;
    /**
     * @return A hostname&#39;s CNAME type. Supports only the `EDGE_HOSTNAME` value.
     * 
     */
    private String stagingCnameType;
    /**
     * @return The unique identifier for the edge hostname.
     * 
     */
    private String stagingEdgeHostnameId;

    private GetPropertyHostnamesDiffHostname() {}
    /**
     * @return The hostname that your end users see, indicated by the Host header in end user requests.
     * 
     */
    public String cnameFrom() {
        return this.cnameFrom;
    }
    /**
     * @return Indicates the certificate&#39;s provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can&#39;t specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.
     * 
     */
    public String productionCertProvisioningType() {
        return this.productionCertProvisioningType;
    }
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    public String productionCnameTo() {
        return this.productionCnameTo;
    }
    /**
     * @return A hostname&#39;s CNAME type. Supports only the `EDGE_HOSTNAME` value.
     * 
     */
    public String productionCnameType() {
        return this.productionCnameType;
    }
    /**
     * @return The unique identifier for the edge hostname.
     * 
     */
    public String productionEdgeHostnameId() {
        return this.productionEdgeHostnameId;
    }
    /**
     * @return Indicates the certificate&#39;s provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can&#39;t specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.
     * 
     */
    public String stagingCertProvisioningType() {
        return this.stagingCertProvisioningType;
    }
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    public String stagingCnameTo() {
        return this.stagingCnameTo;
    }
    /**
     * @return A hostname&#39;s CNAME type. Supports only the `EDGE_HOSTNAME` value.
     * 
     */
    public String stagingCnameType() {
        return this.stagingCnameType;
    }
    /**
     * @return The unique identifier for the edge hostname.
     * 
     */
    public String stagingEdgeHostnameId() {
        return this.stagingEdgeHostnameId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyHostnamesDiffHostname defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cnameFrom;
        private String productionCertProvisioningType;
        private String productionCnameTo;
        private String productionCnameType;
        private String productionEdgeHostnameId;
        private String stagingCertProvisioningType;
        private String stagingCnameTo;
        private String stagingCnameType;
        private String stagingEdgeHostnameId;
        public Builder() {}
        public Builder(GetPropertyHostnamesDiffHostname defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cnameFrom = defaults.cnameFrom;
    	      this.productionCertProvisioningType = defaults.productionCertProvisioningType;
    	      this.productionCnameTo = defaults.productionCnameTo;
    	      this.productionCnameType = defaults.productionCnameType;
    	      this.productionEdgeHostnameId = defaults.productionEdgeHostnameId;
    	      this.stagingCertProvisioningType = defaults.stagingCertProvisioningType;
    	      this.stagingCnameTo = defaults.stagingCnameTo;
    	      this.stagingCnameType = defaults.stagingCnameType;
    	      this.stagingEdgeHostnameId = defaults.stagingEdgeHostnameId;
        }

        @CustomType.Setter
        public Builder cnameFrom(String cnameFrom) {
            if (cnameFrom == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffHostname", "cnameFrom");
            }
            this.cnameFrom = cnameFrom;
            return this;
        }
        @CustomType.Setter
        public Builder productionCertProvisioningType(String productionCertProvisioningType) {
            if (productionCertProvisioningType == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffHostname", "productionCertProvisioningType");
            }
            this.productionCertProvisioningType = productionCertProvisioningType;
            return this;
        }
        @CustomType.Setter
        public Builder productionCnameTo(String productionCnameTo) {
            if (productionCnameTo == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffHostname", "productionCnameTo");
            }
            this.productionCnameTo = productionCnameTo;
            return this;
        }
        @CustomType.Setter
        public Builder productionCnameType(String productionCnameType) {
            if (productionCnameType == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffHostname", "productionCnameType");
            }
            this.productionCnameType = productionCnameType;
            return this;
        }
        @CustomType.Setter
        public Builder productionEdgeHostnameId(String productionEdgeHostnameId) {
            if (productionEdgeHostnameId == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffHostname", "productionEdgeHostnameId");
            }
            this.productionEdgeHostnameId = productionEdgeHostnameId;
            return this;
        }
        @CustomType.Setter
        public Builder stagingCertProvisioningType(String stagingCertProvisioningType) {
            if (stagingCertProvisioningType == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffHostname", "stagingCertProvisioningType");
            }
            this.stagingCertProvisioningType = stagingCertProvisioningType;
            return this;
        }
        @CustomType.Setter
        public Builder stagingCnameTo(String stagingCnameTo) {
            if (stagingCnameTo == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffHostname", "stagingCnameTo");
            }
            this.stagingCnameTo = stagingCnameTo;
            return this;
        }
        @CustomType.Setter
        public Builder stagingCnameType(String stagingCnameType) {
            if (stagingCnameType == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffHostname", "stagingCnameType");
            }
            this.stagingCnameType = stagingCnameType;
            return this;
        }
        @CustomType.Setter
        public Builder stagingEdgeHostnameId(String stagingEdgeHostnameId) {
            if (stagingEdgeHostnameId == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesDiffHostname", "stagingEdgeHostnameId");
            }
            this.stagingEdgeHostnameId = stagingEdgeHostnameId;
            return this;
        }
        public GetPropertyHostnamesDiffHostname build() {
            final var _resultValue = new GetPropertyHostnamesDiffHostname();
            _resultValue.cnameFrom = cnameFrom;
            _resultValue.productionCertProvisioningType = productionCertProvisioningType;
            _resultValue.productionCnameTo = productionCnameTo;
            _resultValue.productionCnameType = productionCnameType;
            _resultValue.productionEdgeHostnameId = productionEdgeHostnameId;
            _resultValue.stagingCertProvisioningType = stagingCertProvisioningType;
            _resultValue.stagingCnameTo = stagingCnameTo;
            _resultValue.stagingCnameType = stagingCnameType;
            _resultValue.stagingEdgeHostnameId = stagingEdgeHostnameId;
            return _resultValue;
        }
    }
}
