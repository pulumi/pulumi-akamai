// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicyTransformationIfDimensionEqualIfDimensionGreaterThanOpacity {
    private @Nullable String opacity;
    private @Nullable String opacityVar;

    private GetImagingPolicyImagePolicyTransformationIfDimensionEqualIfDimensionGreaterThanOpacity() {}
    public Optional<String> opacity() {
        return Optional.ofNullable(this.opacity);
    }
    public Optional<String> opacityVar() {
        return Optional.ofNullable(this.opacityVar);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionEqualIfDimensionGreaterThanOpacity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String opacity;
        private @Nullable String opacityVar;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionEqualIfDimensionGreaterThanOpacity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.opacity = defaults.opacity;
    	      this.opacityVar = defaults.opacityVar;
        }

        @CustomType.Setter
        public Builder opacity(@Nullable String opacity) {
            this.opacity = opacity;
            return this;
        }
        @CustomType.Setter
        public Builder opacityVar(@Nullable String opacityVar) {
            this.opacityVar = opacityVar;
            return this;
        }
        public GetImagingPolicyImagePolicyTransformationIfDimensionEqualIfDimensionGreaterThanOpacity build() {
            final var o = new GetImagingPolicyImagePolicyTransformationIfDimensionEqualIfDimensionGreaterThanOpacity();
            o.opacity = opacity;
            o.opacityVar = opacityVar;
            return o;
        }
    }
}
