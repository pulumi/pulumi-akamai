// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatastreamAzureConnector {
    /**
     * @return Access keys associated with Azure Storage account
     * 
     */
    private String accessKey;
    /**
     * @return Specifies the Azure Storage account name
     * 
     */
    private String accountName;
    /**
     * @return Indicates whether the logs should be compressed
     * 
     */
    private @Nullable Boolean compressLogs;
    /**
     * @return Specifies the Azure Storage container name
     * 
     */
    private String containerName;
    /**
     * @return The name of the connector
     * 
     */
    private String displayName;
    /**
     * @return The path to the folder within Azure Storage container where logs will be stored
     * 
     */
    private String path;

    private DatastreamAzureConnector() {}
    /**
     * @return Access keys associated with Azure Storage account
     * 
     */
    public String accessKey() {
        return this.accessKey;
    }
    /**
     * @return Specifies the Azure Storage account name
     * 
     */
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return Indicates whether the logs should be compressed
     * 
     */
    public Optional<Boolean> compressLogs() {
        return Optional.ofNullable(this.compressLogs);
    }
    /**
     * @return Specifies the Azure Storage container name
     * 
     */
    public String containerName() {
        return this.containerName;
    }
    /**
     * @return The name of the connector
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The path to the folder within Azure Storage container where logs will be stored
     * 
     */
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatastreamAzureConnector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessKey;
        private String accountName;
        private @Nullable Boolean compressLogs;
        private String containerName;
        private String displayName;
        private String path;
        public Builder() {}
        public Builder(DatastreamAzureConnector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.accountName = defaults.accountName;
    	      this.compressLogs = defaults.compressLogs;
    	      this.containerName = defaults.containerName;
    	      this.displayName = defaults.displayName;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder accessKey(String accessKey) {
            if (accessKey == null) {
              throw new MissingRequiredPropertyException("DatastreamAzureConnector", "accessKey");
            }
            this.accessKey = accessKey;
            return this;
        }
        @CustomType.Setter
        public Builder accountName(String accountName) {
            if (accountName == null) {
              throw new MissingRequiredPropertyException("DatastreamAzureConnector", "accountName");
            }
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder compressLogs(@Nullable Boolean compressLogs) {

            this.compressLogs = compressLogs;
            return this;
        }
        @CustomType.Setter
        public Builder containerName(String containerName) {
            if (containerName == null) {
              throw new MissingRequiredPropertyException("DatastreamAzureConnector", "containerName");
            }
            this.containerName = containerName;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("DatastreamAzureConnector", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("DatastreamAzureConnector", "path");
            }
            this.path = path;
            return this;
        }
        public DatastreamAzureConnector build() {
            final var _resultValue = new DatastreamAzureConnector();
            _resultValue.accessKey = accessKey;
            _resultValue.accountName = accountName;
            _resultValue.compressLogs = compressLogs;
            _resultValue.containerName = containerName;
            _resultValue.displayName = displayName;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
