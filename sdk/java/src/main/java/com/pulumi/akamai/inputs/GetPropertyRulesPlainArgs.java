// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyRulesPlainArgs Empty = new GetPropertyRulesPlainArgs();

    @Import(name="contractId")
    private @Nullable String contractId;

    public Optional<String> contractId() {
        return Optional.ofNullable(this.contractId);
    }

    @Import(name="groupId")
    private @Nullable String groupId;

    public Optional<String> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    @Import(name="propertyId", required=true)
    private String propertyId;

    public String propertyId() {
        return this.propertyId;
    }

    @Import(name="ruleFormat")
    private @Nullable String ruleFormat;

    public Optional<String> ruleFormat() {
        return Optional.ofNullable(this.ruleFormat);
    }

    @Import(name="version")
    private @Nullable Integer version;

    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    private GetPropertyRulesPlainArgs() {}

    private GetPropertyRulesPlainArgs(GetPropertyRulesPlainArgs $) {
        this.contractId = $.contractId;
        this.groupId = $.groupId;
        this.propertyId = $.propertyId;
        this.ruleFormat = $.ruleFormat;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesPlainArgs $;

        public Builder() {
            $ = new GetPropertyRulesPlainArgs();
        }

        public Builder(GetPropertyRulesPlainArgs defaults) {
            $ = new GetPropertyRulesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder contractId(@Nullable String contractId) {
            $.contractId = contractId;
            return this;
        }

        public Builder groupId(@Nullable String groupId) {
            $.groupId = groupId;
            return this;
        }

        public Builder propertyId(String propertyId) {
            $.propertyId = propertyId;
            return this;
        }

        public Builder ruleFormat(@Nullable String ruleFormat) {
            $.ruleFormat = ruleFormat;
            return this;
        }

        public Builder version(@Nullable Integer version) {
            $.version = version;
            return this;
        }

        public GetPropertyRulesPlainArgs build() {
            if ($.propertyId == null) {
                throw new MissingRequiredPropertyException("GetPropertyRulesPlainArgs", "propertyId");
            }
            return $;
        }
    }

}
