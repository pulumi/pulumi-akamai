// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetCpCodesCpCode;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCpCodesResult {
    private String accountId;
    private String contractId;
    private List<GetCpCodesCpCode> cpCodes;
    private @Nullable String filterByName;
    private @Nullable String filterByProductId;
    private String groupId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetCpCodesResult() {}
    public String accountId() {
        return this.accountId;
    }
    public String contractId() {
        return this.contractId;
    }
    public List<GetCpCodesCpCode> cpCodes() {
        return this.cpCodes;
    }
    public Optional<String> filterByName() {
        return Optional.ofNullable(this.filterByName);
    }
    public Optional<String> filterByProductId() {
        return Optional.ofNullable(this.filterByProductId);
    }
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCpCodesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String contractId;
        private List<GetCpCodesCpCode> cpCodes;
        private @Nullable String filterByName;
        private @Nullable String filterByProductId;
        private String groupId;
        private String id;
        public Builder() {}
        public Builder(GetCpCodesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.contractId = defaults.contractId;
    	      this.cpCodes = defaults.cpCodes;
    	      this.filterByName = defaults.filterByName;
    	      this.filterByProductId = defaults.filterByProductId;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetCpCodesResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder contractId(String contractId) {
            if (contractId == null) {
              throw new MissingRequiredPropertyException("GetCpCodesResult", "contractId");
            }
            this.contractId = contractId;
            return this;
        }
        @CustomType.Setter
        public Builder cpCodes(List<GetCpCodesCpCode> cpCodes) {
            if (cpCodes == null) {
              throw new MissingRequiredPropertyException("GetCpCodesResult", "cpCodes");
            }
            this.cpCodes = cpCodes;
            return this;
        }
        public Builder cpCodes(GetCpCodesCpCode... cpCodes) {
            return cpCodes(List.of(cpCodes));
        }
        @CustomType.Setter
        public Builder filterByName(@Nullable String filterByName) {

            this.filterByName = filterByName;
            return this;
        }
        @CustomType.Setter
        public Builder filterByProductId(@Nullable String filterByProductId) {

            this.filterByProductId = filterByProductId;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetCpCodesResult", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCpCodesResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetCpCodesResult build() {
            final var _resultValue = new GetCpCodesResult();
            _resultValue.accountId = accountId;
            _resultValue.contractId = contractId;
            _resultValue.cpCodes = cpCodes;
            _resultValue.filterByName = filterByName;
            _resultValue.filterByProductId = filterByProductId;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
