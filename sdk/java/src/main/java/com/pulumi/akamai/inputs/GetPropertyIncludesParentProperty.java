// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetPropertyIncludesParentProperty extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyIncludesParentProperty Empty = new GetPropertyIncludesParentProperty();

    /**
     * The property&#39;s unique identifier
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The property&#39;s unique identifier
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * The property&#39;s version for which the data is requested
     * 
     */
    @Import(name="version", required=true)
    private Integer version;

    /**
     * @return The property&#39;s version for which the data is requested
     * 
     */
    public Integer version() {
        return this.version;
    }

    private GetPropertyIncludesParentProperty() {}

    private GetPropertyIncludesParentProperty(GetPropertyIncludesParentProperty $) {
        this.id = $.id;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyIncludesParentProperty defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyIncludesParentProperty $;

        public Builder() {
            $ = new GetPropertyIncludesParentProperty();
        }

        public Builder(GetPropertyIncludesParentProperty defaults) {
            $ = new GetPropertyIncludesParentProperty(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The property&#39;s unique identifier
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param version The property&#39;s version for which the data is requested
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            $.version = version;
            return this;
        }

        public GetPropertyIncludesParentProperty build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetPropertyIncludesParentProperty", "id");
            }
            if ($.version == null) {
                throw new MissingRequiredPropertyException("GetPropertyIncludesParentProperty", "version");
            }
            return $;
        }
    }

}
