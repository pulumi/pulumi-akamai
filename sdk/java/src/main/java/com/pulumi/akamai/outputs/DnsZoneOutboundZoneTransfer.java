// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.DnsZoneOutboundZoneTransferTsigKey;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DnsZoneOutboundZoneTransfer {
    /**
     * @return The access control list, defined as IPv4 and IPv6 CIDR blocks.
     * 
     */
    private @Nullable List<String> acls;
    /**
     * @return Enables outbound zone transfer.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Customer secondary nameservers to notify, if NOTIFY requests are desired. Up to 64 IPv4 or IPv6 addresses. If no targets are specified, you can manually request zone transfer updates as needed.
     * 
     */
    private @Nullable List<String> notifyTargets;
    /**
     * @return The TSIG key used for outbound zone transfers.
     * 
     */
    private @Nullable DnsZoneOutboundZoneTransferTsigKey tsigKey;

    private DnsZoneOutboundZoneTransfer() {}
    /**
     * @return The access control list, defined as IPv4 and IPv6 CIDR blocks.
     * 
     */
    public List<String> acls() {
        return this.acls == null ? List.of() : this.acls;
    }
    /**
     * @return Enables outbound zone transfer.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Customer secondary nameservers to notify, if NOTIFY requests are desired. Up to 64 IPv4 or IPv6 addresses. If no targets are specified, you can manually request zone transfer updates as needed.
     * 
     */
    public List<String> notifyTargets() {
        return this.notifyTargets == null ? List.of() : this.notifyTargets;
    }
    /**
     * @return The TSIG key used for outbound zone transfers.
     * 
     */
    public Optional<DnsZoneOutboundZoneTransferTsigKey> tsigKey() {
        return Optional.ofNullable(this.tsigKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DnsZoneOutboundZoneTransfer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> acls;
        private @Nullable Boolean enabled;
        private @Nullable List<String> notifyTargets;
        private @Nullable DnsZoneOutboundZoneTransferTsigKey tsigKey;
        public Builder() {}
        public Builder(DnsZoneOutboundZoneTransfer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acls = defaults.acls;
    	      this.enabled = defaults.enabled;
    	      this.notifyTargets = defaults.notifyTargets;
    	      this.tsigKey = defaults.tsigKey;
        }

        @CustomType.Setter
        public Builder acls(@Nullable List<String> acls) {

            this.acls = acls;
            return this;
        }
        public Builder acls(String... acls) {
            return acls(List.of(acls));
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder notifyTargets(@Nullable List<String> notifyTargets) {

            this.notifyTargets = notifyTargets;
            return this;
        }
        public Builder notifyTargets(String... notifyTargets) {
            return notifyTargets(List.of(notifyTargets));
        }
        @CustomType.Setter
        public Builder tsigKey(@Nullable DnsZoneOutboundZoneTransferTsigKey tsigKey) {

            this.tsigKey = tsigKey;
            return this;
        }
        public DnsZoneOutboundZoneTransfer build() {
            final var _resultValue = new DnsZoneOutboundZoneTransfer();
            _resultValue.acls = acls;
            _resultValue.enabled = enabled;
            _resultValue.notifyTargets = notifyTargets;
            _resultValue.tsigKey = tsigKey;
            return _resultValue;
        }
    }
}
