// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageBoxImageArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageCircleImageArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageTextImageArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageUrlImageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs();

    @Import(name="boxImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageBoxImageArgs>> boxImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageBoxImageArgs>>> boxImages() {
        return Optional.ofNullable(this.boxImages);
    }

    @Import(name="circleImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageCircleImageArgs>> circleImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageCircleImageArgs>>> circleImages() {
        return Optional.ofNullable(this.circleImages);
    }

    @Import(name="textImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageTextImageArgs>> textImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageTextImageArgs>>> textImages() {
        return Optional.ofNullable(this.textImages);
    }

    @Import(name="urlImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageUrlImageArgs>> urlImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageUrlImageArgs>>> urlImages() {
        return Optional.ofNullable(this.urlImages);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs(GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs $) {
        this.boxImages = $.boxImages;
        this.circleImages = $.circleImages;
        this.textImages = $.textImages;
        this.urlImages = $.urlImages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs(Objects.requireNonNull(defaults));
        }

        public Builder boxImages(@Nullable Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageBoxImageArgs>> boxImages) {
            $.boxImages = boxImages;
            return this;
        }

        public Builder boxImages(List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageBoxImageArgs> boxImages) {
            return boxImages(Output.of(boxImages));
        }

        public Builder boxImages(GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageBoxImageArgs... boxImages) {
            return boxImages(List.of(boxImages));
        }

        public Builder circleImages(@Nullable Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageCircleImageArgs>> circleImages) {
            $.circleImages = circleImages;
            return this;
        }

        public Builder circleImages(List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageCircleImageArgs> circleImages) {
            return circleImages(Output.of(circleImages));
        }

        public Builder circleImages(GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageCircleImageArgs... circleImages) {
            return circleImages(List.of(circleImages));
        }

        public Builder textImages(@Nullable Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageTextImageArgs>> textImages) {
            $.textImages = textImages;
            return this;
        }

        public Builder textImages(List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageTextImageArgs> textImages) {
            return textImages(Output.of(textImages));
        }

        public Builder textImages(GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageTextImageArgs... textImages) {
            return textImages(List.of(textImages));
        }

        public Builder urlImages(@Nullable Output<List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageUrlImageArgs>> urlImages) {
            $.urlImages = urlImages;
            return this;
        }

        public Builder urlImages(List<GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageUrlImageArgs> urlImages) {
            return urlImages(Output.of(urlImages));
        }

        public Builder urlImages(GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageUrlImageArgs... urlImages) {
            return urlImages(List.of(urlImages));
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfDimensionDefaultCompositeImageArgs build() {
            return $;
        }
    }

}
