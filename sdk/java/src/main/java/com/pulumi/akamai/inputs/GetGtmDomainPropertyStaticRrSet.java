// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetGtmDomainPropertyStaticRrSet extends com.pulumi.resources.InvokeArgs {

    public static final GetGtmDomainPropertyStaticRrSet Empty = new GetGtmDomainPropertyStaticRrSet();

    /**
     * An array of data strings, representing multiple records within a set.
     * 
     */
    @Import(name="rdatas", required=true)
    private List<String> rdatas;

    /**
     * @return An array of data strings, representing multiple records within a set.
     * 
     */
    public List<String> rdatas() {
        return this.rdatas;
    }

    /**
     * The number of seconds that this record should live in a resolver&#39;s cache before being refetched.
     * 
     */
    @Import(name="ttl", required=true)
    private Integer ttl;

    /**
     * @return The number of seconds that this record should live in a resolver&#39;s cache before being refetched.
     * 
     */
    public Integer ttl() {
        return this.ttl;
    }

    /**
     * The record type.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The record type.
     * 
     */
    public String type() {
        return this.type;
    }

    private GetGtmDomainPropertyStaticRrSet() {}

    private GetGtmDomainPropertyStaticRrSet(GetGtmDomainPropertyStaticRrSet $) {
        this.rdatas = $.rdatas;
        this.ttl = $.ttl;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGtmDomainPropertyStaticRrSet defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGtmDomainPropertyStaticRrSet $;

        public Builder() {
            $ = new GetGtmDomainPropertyStaticRrSet();
        }

        public Builder(GetGtmDomainPropertyStaticRrSet defaults) {
            $ = new GetGtmDomainPropertyStaticRrSet(Objects.requireNonNull(defaults));
        }

        /**
         * @param rdatas An array of data strings, representing multiple records within a set.
         * 
         * @return builder
         * 
         */
        public Builder rdatas(List<String> rdatas) {
            $.rdatas = rdatas;
            return this;
        }

        /**
         * @param rdatas An array of data strings, representing multiple records within a set.
         * 
         * @return builder
         * 
         */
        public Builder rdatas(String... rdatas) {
            return rdatas(List.of(rdatas));
        }

        /**
         * @param ttl The number of seconds that this record should live in a resolver&#39;s cache before being refetched.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param type The record type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetGtmDomainPropertyStaticRrSet build() {
            if ($.rdatas == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainPropertyStaticRrSet", "rdatas");
            }
            if ($.ttl == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainPropertyStaticRrSet", "ttl");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainPropertyStaticRrSet", "type");
            }
            return $;
        }
    }

}
