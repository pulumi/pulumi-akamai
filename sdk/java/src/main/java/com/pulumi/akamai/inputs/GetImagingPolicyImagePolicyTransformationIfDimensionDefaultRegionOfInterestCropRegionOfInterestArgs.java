// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestCircleShapeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPointShapeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestRectangleShapeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestUnionShapeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs Empty = new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs();

    @Import(name="circleShapes")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestCircleShapeArgs>> circleShapes;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestCircleShapeArgs>>> circleShapes() {
        return Optional.ofNullable(this.circleShapes);
    }

    @Import(name="pointShapes")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPointShapeArgs>> pointShapes;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPointShapeArgs>>> pointShapes() {
        return Optional.ofNullable(this.pointShapes);
    }

    @Import(name="polygonShapes")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapeArgs>> polygonShapes;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapeArgs>>> polygonShapes() {
        return Optional.ofNullable(this.polygonShapes);
    }

    @Import(name="rectangleShapes")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestRectangleShapeArgs>> rectangleShapes;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestRectangleShapeArgs>>> rectangleShapes() {
        return Optional.ofNullable(this.rectangleShapes);
    }

    @Import(name="unionShapes")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestUnionShapeArgs>> unionShapes;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestUnionShapeArgs>>> unionShapes() {
        return Optional.ofNullable(this.unionShapes);
    }

    private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs() {}

    private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs $) {
        this.circleShapes = $.circleShapes;
        this.pointShapes = $.pointShapes;
        this.polygonShapes = $.polygonShapes;
        this.rectangleShapes = $.rectangleShapes;
        this.unionShapes = $.unionShapes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs(Objects.requireNonNull(defaults));
        }

        public Builder circleShapes(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestCircleShapeArgs>> circleShapes) {
            $.circleShapes = circleShapes;
            return this;
        }

        public Builder circleShapes(List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestCircleShapeArgs> circleShapes) {
            return circleShapes(Output.of(circleShapes));
        }

        public Builder circleShapes(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestCircleShapeArgs... circleShapes) {
            return circleShapes(List.of(circleShapes));
        }

        public Builder pointShapes(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPointShapeArgs>> pointShapes) {
            $.pointShapes = pointShapes;
            return this;
        }

        public Builder pointShapes(List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPointShapeArgs> pointShapes) {
            return pointShapes(Output.of(pointShapes));
        }

        public Builder pointShapes(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPointShapeArgs... pointShapes) {
            return pointShapes(List.of(pointShapes));
        }

        public Builder polygonShapes(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapeArgs>> polygonShapes) {
            $.polygonShapes = polygonShapes;
            return this;
        }

        public Builder polygonShapes(List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapeArgs> polygonShapes) {
            return polygonShapes(Output.of(polygonShapes));
        }

        public Builder polygonShapes(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapeArgs... polygonShapes) {
            return polygonShapes(List.of(polygonShapes));
        }

        public Builder rectangleShapes(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestRectangleShapeArgs>> rectangleShapes) {
            $.rectangleShapes = rectangleShapes;
            return this;
        }

        public Builder rectangleShapes(List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestRectangleShapeArgs> rectangleShapes) {
            return rectangleShapes(Output.of(rectangleShapes));
        }

        public Builder rectangleShapes(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestRectangleShapeArgs... rectangleShapes) {
            return rectangleShapes(List.of(rectangleShapes));
        }

        public Builder unionShapes(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestUnionShapeArgs>> unionShapes) {
            $.unionShapes = unionShapes;
            return this;
        }

        public Builder unionShapes(List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestUnionShapeArgs> unionShapes) {
            return unionShapes(Output.of(unionShapes));
        }

        public Builder unionShapes(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestUnionShapeArgs... unionShapes) {
            return unionShapes(List.of(unionShapes));
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestArgs build() {
            return $;
        }
    }

}
