// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.IamCidrBlockActionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamCidrBlockState extends com.pulumi.resources.ResourceArgs {

    public static final IamCidrBlockState Empty = new IamCidrBlockState();

    /**
     * Specifies activities available for the CIDR block.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<IamCidrBlockActionsArgs> actions;

    /**
     * @return Specifies activities available for the CIDR block.
     * 
     */
    public Optional<Output<IamCidrBlockActionsArgs>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * The value of an IP address or IP address range.
     * 
     */
    @Import(name="cidrBlock")
    private @Nullable Output<String> cidrBlock;

    /**
     * @return The value of an IP address or IP address range.
     * 
     */
    public Optional<Output<String>> cidrBlock() {
        return Optional.ofNullable(this.cidrBlock);
    }

    /**
     * Unique identifier for each CIDR block.
     * 
     */
    @Import(name="cidrBlockId")
    private @Nullable Output<Integer> cidrBlockId;

    /**
     * @return Unique identifier for each CIDR block.
     * 
     */
    public Optional<Output<Integer>> cidrBlockId() {
        return Optional.ofNullable(this.cidrBlockId);
    }

    /**
     * Descriptive label you provide for the CIDR block.
     * 
     */
    @Import(name="comments")
    private @Nullable Output<String> comments;

    /**
     * @return Descriptive label you provide for the CIDR block.
     * 
     */
    public Optional<Output<String>> comments() {
        return Optional.ofNullable(this.comments);
    }

    /**
     * The user who created the CIDR block.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return The user who created the CIDR block.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * ISO 8601 timestamp indicating when the CIDR block was created.
     * 
     */
    @Import(name="createdDate")
    private @Nullable Output<String> createdDate;

    /**
     * @return ISO 8601 timestamp indicating when the CIDR block was created.
     * 
     */
    public Optional<Output<String>> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }

    /**
     * Enables the CIDR block on the account.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enables the CIDR block on the account.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The user who last edited the CIDR block.
     * 
     */
    @Import(name="modifiedBy")
    private @Nullable Output<String> modifiedBy;

    /**
     * @return The user who last edited the CIDR block.
     * 
     */
    public Optional<Output<String>> modifiedBy() {
        return Optional.ofNullable(this.modifiedBy);
    }

    /**
     * ISO 8601 timestamp indicating when the CIDR block was last modified.
     * 
     */
    @Import(name="modifiedDate")
    private @Nullable Output<String> modifiedDate;

    /**
     * @return ISO 8601 timestamp indicating when the CIDR block was last modified.
     * 
     */
    public Optional<Output<String>> modifiedDate() {
        return Optional.ofNullable(this.modifiedDate);
    }

    private IamCidrBlockState() {}

    private IamCidrBlockState(IamCidrBlockState $) {
        this.actions = $.actions;
        this.cidrBlock = $.cidrBlock;
        this.cidrBlockId = $.cidrBlockId;
        this.comments = $.comments;
        this.createdBy = $.createdBy;
        this.createdDate = $.createdDate;
        this.enabled = $.enabled;
        this.modifiedBy = $.modifiedBy;
        this.modifiedDate = $.modifiedDate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamCidrBlockState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamCidrBlockState $;

        public Builder() {
            $ = new IamCidrBlockState();
        }

        public Builder(IamCidrBlockState defaults) {
            $ = new IamCidrBlockState(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Specifies activities available for the CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<IamCidrBlockActionsArgs> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Specifies activities available for the CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder actions(IamCidrBlockActionsArgs actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param cidrBlock The value of an IP address or IP address range.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(@Nullable Output<String> cidrBlock) {
            $.cidrBlock = cidrBlock;
            return this;
        }

        /**
         * @param cidrBlock The value of an IP address or IP address range.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(String cidrBlock) {
            return cidrBlock(Output.of(cidrBlock));
        }

        /**
         * @param cidrBlockId Unique identifier for each CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlockId(@Nullable Output<Integer> cidrBlockId) {
            $.cidrBlockId = cidrBlockId;
            return this;
        }

        /**
         * @param cidrBlockId Unique identifier for each CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlockId(Integer cidrBlockId) {
            return cidrBlockId(Output.of(cidrBlockId));
        }

        /**
         * @param comments Descriptive label you provide for the CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder comments(@Nullable Output<String> comments) {
            $.comments = comments;
            return this;
        }

        /**
         * @param comments Descriptive label you provide for the CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder comments(String comments) {
            return comments(Output.of(comments));
        }

        /**
         * @param createdBy The user who created the CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy The user who created the CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param createdDate ISO 8601 timestamp indicating when the CIDR block was created.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(@Nullable Output<String> createdDate) {
            $.createdDate = createdDate;
            return this;
        }

        /**
         * @param createdDate ISO 8601 timestamp indicating when the CIDR block was created.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(String createdDate) {
            return createdDate(Output.of(createdDate));
        }

        /**
         * @param enabled Enables the CIDR block on the account.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enables the CIDR block on the account.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param modifiedBy The user who last edited the CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder modifiedBy(@Nullable Output<String> modifiedBy) {
            $.modifiedBy = modifiedBy;
            return this;
        }

        /**
         * @param modifiedBy The user who last edited the CIDR block.
         * 
         * @return builder
         * 
         */
        public Builder modifiedBy(String modifiedBy) {
            return modifiedBy(Output.of(modifiedBy));
        }

        /**
         * @param modifiedDate ISO 8601 timestamp indicating when the CIDR block was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedDate(@Nullable Output<String> modifiedDate) {
            $.modifiedDate = modifiedDate;
            return this;
        }

        /**
         * @param modifiedDate ISO 8601 timestamp indicating when the CIDR block was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modifiedDate(String modifiedDate) {
            return modifiedDate(Output.of(modifiedDate));
        }

        public IamCidrBlockState build() {
            return $;
        }
    }

}
