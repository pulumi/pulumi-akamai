// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPropertyRulesTemplateTemplate {
    /**
     * @return Content of the template as string
     * 
     */
    private String templateData;
    /**
     * @return Directory points to a folder, which contains snippets to include into template.
     * 
     */
    private String templateDir;

    private GetPropertyRulesTemplateTemplate() {}
    /**
     * @return Content of the template as string
     * 
     */
    public String templateData() {
        return this.templateData;
    }
    /**
     * @return Directory points to a folder, which contains snippets to include into template.
     * 
     */
    public String templateDir() {
        return this.templateDir;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesTemplateTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String templateData;
        private String templateDir;
        public Builder() {}
        public Builder(GetPropertyRulesTemplateTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.templateData = defaults.templateData;
    	      this.templateDir = defaults.templateDir;
        }

        @CustomType.Setter
        public Builder templateData(String templateData) {
            if (templateData == null) {
              throw new MissingRequiredPropertyException("GetPropertyRulesTemplateTemplate", "templateData");
            }
            this.templateData = templateData;
            return this;
        }
        @CustomType.Setter
        public Builder templateDir(String templateDir) {
            if (templateDir == null) {
              throw new MissingRequiredPropertyException("GetPropertyRulesTemplateTemplate", "templateDir");
            }
            this.templateDir = templateDir;
            return this;
        }
        public GetPropertyRulesTemplateTemplate build() {
            final var _resultValue = new GetPropertyRulesTemplateTemplate();
            _resultValue.templateData = templateData;
            _resultValue.templateDir = templateDir;
            return _resultValue;
        }
    }
}
