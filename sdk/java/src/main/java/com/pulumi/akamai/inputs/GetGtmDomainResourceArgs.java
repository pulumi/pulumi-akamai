// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetGtmDomainResourceLinkArgs;
import com.pulumi.akamai.inputs.GetGtmDomainResourceResourceInstanceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGtmDomainResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetGtmDomainResourceArgs Empty = new GetGtmDomainResourceArgs();

    /**
     * Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.
     * 
     */
    @Import(name="aggregationType", required=true)
    private Output<String> aggregationType;

    /**
     * @return Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.
     * 
     */
    public Output<String> aggregationType() {
        return this.aggregationType;
    }

    /**
     * Specifies the name of the property that this resource constraints.
     * 
     */
    @Import(name="constrainedProperty", required=true)
    private Output<String> constrainedProperty;

    /**
     * @return Specifies the name of the property that this resource constraints.
     * 
     */
    public Output<String> constrainedProperty() {
        return this.constrainedProperty;
    }

    /**
     * For internal use only.
     * 
     */
    @Import(name="decayRate", required=true)
    private Output<Double> decayRate;

    /**
     * @return For internal use only.
     * 
     */
    public Output<Double> decayRate() {
        return this.decayRate;
    }

    /**
     * A descriptive note to help you track what the resource constraints.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return A descriptive note to help you track what the resource constraints.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * Specifies the host header used when fetching the load object.
     * 
     */
    @Import(name="hostHeader", required=true)
    private Output<String> hostHeader;

    /**
     * @return Specifies the host header used when fetching the load object.
     * 
     */
    public Output<String> hostHeader() {
        return this.hostHeader;
    }

    /**
     * Specifies the text that comes before the loadObject.
     * 
     */
    @Import(name="leaderString", required=true)
    private Output<String> leaderString;

    /**
     * @return Specifies the text that comes before the loadObject.
     * 
     */
    public Output<String> leaderString() {
        return this.leaderString;
    }

    /**
     * For internal use only.
     * 
     */
    @Import(name="leastSquaresDecay", required=true)
    private Output<Double> leastSquaresDecay;

    /**
     * @return For internal use only.
     * 
     */
    public Output<Double> leastSquaresDecay() {
        return this.leastSquaresDecay;
    }

    /**
     * Specifies the URL path that allows direct navigation to the resource.
     * 
     */
    @Import(name="links")
    private @Nullable Output<List<GetGtmDomainResourceLinkArgs>> links;

    /**
     * @return Specifies the URL path that allows direct navigation to the resource.
     * 
     */
    public Optional<Output<List<GetGtmDomainResourceLinkArgs>>> links() {
        return Optional.ofNullable(this.links);
    }

    /**
     * Indicates the percent of load imbalance factor for the domain.
     * 
     */
    @Import(name="loadImbalancePercentage", required=true)
    private Output<Double> loadImbalancePercentage;

    /**
     * @return Indicates the percent of load imbalance factor for the domain.
     * 
     */
    public Output<Double> loadImbalancePercentage() {
        return this.loadImbalancePercentage;
    }

    /**
     * For internal use only.
     * 
     */
    @Import(name="maxUMultiplicativeIncrement", required=true)
    private Output<Double> maxUMultiplicativeIncrement;

    /**
     * @return For internal use only.
     * 
     */
    public Output<Double> maxUMultiplicativeIncrement() {
        return this.maxUMultiplicativeIncrement;
    }

    /**
     * A descriptive label for the resource.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return A descriptive label for the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * List of resource instances.
     * 
     */
    @Import(name="resourceInstances")
    private @Nullable Output<List<GetGtmDomainResourceResourceInstanceArgs>> resourceInstances;

    /**
     * @return List of resource instances.
     * 
     */
    public Optional<Output<List<GetGtmDomainResourceResourceInstanceArgs>>> resourceInstances() {
        return Optional.ofNullable(this.resourceInstances);
    }

    /**
     * Indicates the kind of loadObject format used to determine the load on the resource.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Indicates the kind of loadObject format used to determine the load on the resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * An optional sanity check that specifies the maximum allowed value for any component of the load object.
     * 
     */
    @Import(name="upperBound", required=true)
    private Output<Integer> upperBound;

    /**
     * @return An optional sanity check that specifies the maximum allowed value for any component of the load object.
     * 
     */
    public Output<Integer> upperBound() {
        return this.upperBound;
    }

    private GetGtmDomainResourceArgs() {}

    private GetGtmDomainResourceArgs(GetGtmDomainResourceArgs $) {
        this.aggregationType = $.aggregationType;
        this.constrainedProperty = $.constrainedProperty;
        this.decayRate = $.decayRate;
        this.description = $.description;
        this.hostHeader = $.hostHeader;
        this.leaderString = $.leaderString;
        this.leastSquaresDecay = $.leastSquaresDecay;
        this.links = $.links;
        this.loadImbalancePercentage = $.loadImbalancePercentage;
        this.maxUMultiplicativeIncrement = $.maxUMultiplicativeIncrement;
        this.name = $.name;
        this.resourceInstances = $.resourceInstances;
        this.type = $.type;
        this.upperBound = $.upperBound;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGtmDomainResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGtmDomainResourceArgs $;

        public Builder() {
            $ = new GetGtmDomainResourceArgs();
        }

        public Builder(GetGtmDomainResourceArgs defaults) {
            $ = new GetGtmDomainResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregationType Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.
         * 
         * @return builder
         * 
         */
        public Builder aggregationType(Output<String> aggregationType) {
            $.aggregationType = aggregationType;
            return this;
        }

        /**
         * @param aggregationType Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.
         * 
         * @return builder
         * 
         */
        public Builder aggregationType(String aggregationType) {
            return aggregationType(Output.of(aggregationType));
        }

        /**
         * @param constrainedProperty Specifies the name of the property that this resource constraints.
         * 
         * @return builder
         * 
         */
        public Builder constrainedProperty(Output<String> constrainedProperty) {
            $.constrainedProperty = constrainedProperty;
            return this;
        }

        /**
         * @param constrainedProperty Specifies the name of the property that this resource constraints.
         * 
         * @return builder
         * 
         */
        public Builder constrainedProperty(String constrainedProperty) {
            return constrainedProperty(Output.of(constrainedProperty));
        }

        /**
         * @param decayRate For internal use only.
         * 
         * @return builder
         * 
         */
        public Builder decayRate(Output<Double> decayRate) {
            $.decayRate = decayRate;
            return this;
        }

        /**
         * @param decayRate For internal use only.
         * 
         * @return builder
         * 
         */
        public Builder decayRate(Double decayRate) {
            return decayRate(Output.of(decayRate));
        }

        /**
         * @param description A descriptive note to help you track what the resource constraints.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A descriptive note to help you track what the resource constraints.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param hostHeader Specifies the host header used when fetching the load object.
         * 
         * @return builder
         * 
         */
        public Builder hostHeader(Output<String> hostHeader) {
            $.hostHeader = hostHeader;
            return this;
        }

        /**
         * @param hostHeader Specifies the host header used when fetching the load object.
         * 
         * @return builder
         * 
         */
        public Builder hostHeader(String hostHeader) {
            return hostHeader(Output.of(hostHeader));
        }

        /**
         * @param leaderString Specifies the text that comes before the loadObject.
         * 
         * @return builder
         * 
         */
        public Builder leaderString(Output<String> leaderString) {
            $.leaderString = leaderString;
            return this;
        }

        /**
         * @param leaderString Specifies the text that comes before the loadObject.
         * 
         * @return builder
         * 
         */
        public Builder leaderString(String leaderString) {
            return leaderString(Output.of(leaderString));
        }

        /**
         * @param leastSquaresDecay For internal use only.
         * 
         * @return builder
         * 
         */
        public Builder leastSquaresDecay(Output<Double> leastSquaresDecay) {
            $.leastSquaresDecay = leastSquaresDecay;
            return this;
        }

        /**
         * @param leastSquaresDecay For internal use only.
         * 
         * @return builder
         * 
         */
        public Builder leastSquaresDecay(Double leastSquaresDecay) {
            return leastSquaresDecay(Output.of(leastSquaresDecay));
        }

        /**
         * @param links Specifies the URL path that allows direct navigation to the resource.
         * 
         * @return builder
         * 
         */
        public Builder links(@Nullable Output<List<GetGtmDomainResourceLinkArgs>> links) {
            $.links = links;
            return this;
        }

        /**
         * @param links Specifies the URL path that allows direct navigation to the resource.
         * 
         * @return builder
         * 
         */
        public Builder links(List<GetGtmDomainResourceLinkArgs> links) {
            return links(Output.of(links));
        }

        /**
         * @param links Specifies the URL path that allows direct navigation to the resource.
         * 
         * @return builder
         * 
         */
        public Builder links(GetGtmDomainResourceLinkArgs... links) {
            return links(List.of(links));
        }

        /**
         * @param loadImbalancePercentage Indicates the percent of load imbalance factor for the domain.
         * 
         * @return builder
         * 
         */
        public Builder loadImbalancePercentage(Output<Double> loadImbalancePercentage) {
            $.loadImbalancePercentage = loadImbalancePercentage;
            return this;
        }

        /**
         * @param loadImbalancePercentage Indicates the percent of load imbalance factor for the domain.
         * 
         * @return builder
         * 
         */
        public Builder loadImbalancePercentage(Double loadImbalancePercentage) {
            return loadImbalancePercentage(Output.of(loadImbalancePercentage));
        }

        /**
         * @param maxUMultiplicativeIncrement For internal use only.
         * 
         * @return builder
         * 
         */
        public Builder maxUMultiplicativeIncrement(Output<Double> maxUMultiplicativeIncrement) {
            $.maxUMultiplicativeIncrement = maxUMultiplicativeIncrement;
            return this;
        }

        /**
         * @param maxUMultiplicativeIncrement For internal use only.
         * 
         * @return builder
         * 
         */
        public Builder maxUMultiplicativeIncrement(Double maxUMultiplicativeIncrement) {
            return maxUMultiplicativeIncrement(Output.of(maxUMultiplicativeIncrement));
        }

        /**
         * @param name A descriptive label for the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A descriptive label for the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceInstances List of resource instances.
         * 
         * @return builder
         * 
         */
        public Builder resourceInstances(@Nullable Output<List<GetGtmDomainResourceResourceInstanceArgs>> resourceInstances) {
            $.resourceInstances = resourceInstances;
            return this;
        }

        /**
         * @param resourceInstances List of resource instances.
         * 
         * @return builder
         * 
         */
        public Builder resourceInstances(List<GetGtmDomainResourceResourceInstanceArgs> resourceInstances) {
            return resourceInstances(Output.of(resourceInstances));
        }

        /**
         * @param resourceInstances List of resource instances.
         * 
         * @return builder
         * 
         */
        public Builder resourceInstances(GetGtmDomainResourceResourceInstanceArgs... resourceInstances) {
            return resourceInstances(List.of(resourceInstances));
        }

        /**
         * @param type Indicates the kind of loadObject format used to determine the load on the resource.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Indicates the kind of loadObject format used to determine the load on the resource.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param upperBound An optional sanity check that specifies the maximum allowed value for any component of the load object.
         * 
         * @return builder
         * 
         */
        public Builder upperBound(Output<Integer> upperBound) {
            $.upperBound = upperBound;
            return this;
        }

        /**
         * @param upperBound An optional sanity check that specifies the maximum allowed value for any component of the load object.
         * 
         * @return builder
         * 
         */
        public Builder upperBound(Integer upperBound) {
            return upperBound(Output.of(upperBound));
        }

        public GetGtmDomainResourceArgs build() {
            if ($.aggregationType == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "aggregationType");
            }
            if ($.constrainedProperty == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "constrainedProperty");
            }
            if ($.decayRate == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "decayRate");
            }
            if ($.description == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "description");
            }
            if ($.hostHeader == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "hostHeader");
            }
            if ($.leaderString == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "leaderString");
            }
            if ($.leastSquaresDecay == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "leastSquaresDecay");
            }
            if ($.loadImbalancePercentage == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "loadImbalancePercentage");
            }
            if ($.maxUMultiplicativeIncrement == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "maxUMultiplicativeIncrement");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "name");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "type");
            }
            if ($.upperBound == null) {
                throw new MissingRequiredPropertyException("GetGtmDomainResourceArgs", "upperBound");
            }
            return $;
        }
    }

}
