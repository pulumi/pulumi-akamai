// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PropertyHostnameBucketHostnames {
    /**
     * @return Indicates the type of the certificate used in the property hostname. Either `CPS_MANAGED` for certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for Domain Validation (DV) certificates deployed automatically.
     * 
     */
    private String certProvisioningType;
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    private @Nullable String cnameTo;
    /**
     * @return Identifies the edge hostname you mapped your traffic to on the production network.
     * 
     */
    private String edgeHostnameId;

    private PropertyHostnameBucketHostnames() {}
    /**
     * @return Indicates the type of the certificate used in the property hostname. Either `CPS_MANAGED` for certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for Domain Validation (DV) certificates deployed automatically.
     * 
     */
    public String certProvisioningType() {
        return this.certProvisioningType;
    }
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    public Optional<String> cnameTo() {
        return Optional.ofNullable(this.cnameTo);
    }
    /**
     * @return Identifies the edge hostname you mapped your traffic to on the production network.
     * 
     */
    public String edgeHostnameId() {
        return this.edgeHostnameId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PropertyHostnameBucketHostnames defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certProvisioningType;
        private @Nullable String cnameTo;
        private String edgeHostnameId;
        public Builder() {}
        public Builder(PropertyHostnameBucketHostnames defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certProvisioningType = defaults.certProvisioningType;
    	      this.cnameTo = defaults.cnameTo;
    	      this.edgeHostnameId = defaults.edgeHostnameId;
        }

        @CustomType.Setter
        public Builder certProvisioningType(String certProvisioningType) {
            if (certProvisioningType == null) {
              throw new MissingRequiredPropertyException("PropertyHostnameBucketHostnames", "certProvisioningType");
            }
            this.certProvisioningType = certProvisioningType;
            return this;
        }
        @CustomType.Setter
        public Builder cnameTo(@Nullable String cnameTo) {

            this.cnameTo = cnameTo;
            return this;
        }
        @CustomType.Setter
        public Builder edgeHostnameId(String edgeHostnameId) {
            if (edgeHostnameId == null) {
              throw new MissingRequiredPropertyException("PropertyHostnameBucketHostnames", "edgeHostnameId");
            }
            this.edgeHostnameId = edgeHostnameId;
            return this;
        }
        public PropertyHostnameBucketHostnames build() {
            final var _resultValue = new PropertyHostnameBucketHostnames();
            _resultValue.certProvisioningType = certProvisioningType;
            _resultValue.cnameTo = cnameTo;
            _resultValue.edgeHostnameId = edgeHostnameId;
            return _resultValue;
        }
    }
}
