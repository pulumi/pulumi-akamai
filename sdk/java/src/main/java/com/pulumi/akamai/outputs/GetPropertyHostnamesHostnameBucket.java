// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetPropertyHostnamesHostnameBucketCertStatus;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPropertyHostnamesHostnameBucket {
    private List<GetPropertyHostnamesHostnameBucketCertStatus> certStatuses;
    /**
     * @return The hostname that your end users see, indicated by the Host header in end user requests.
     * 
     */
    private String cnameFrom;
    /**
     * @return A hostname&#39;s CNAME type. Supports only the `EDGE_HOSTNAME` value.
     * 
     */
    private String cnameType;
    /**
     * @return Indicates the certificate&#39;s provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can&#39;t specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.
     * 
     */
    private String productionCertType;
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    private String productionCnameTo;
    /**
     * @return The unique identifier for the edge hostname.
     * 
     */
    private String productionEdgeHostnameId;
    /**
     * @return Indicates the certificate&#39;s provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can&#39;t specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.
     * 
     */
    private String stagingCertType;
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    private String stagingCnameTo;
    /**
     * @return The unique identifier for the edge hostname.
     * 
     */
    private String stagingEdgeHostnameId;

    private GetPropertyHostnamesHostnameBucket() {}
    public List<GetPropertyHostnamesHostnameBucketCertStatus> certStatuses() {
        return this.certStatuses;
    }
    /**
     * @return The hostname that your end users see, indicated by the Host header in end user requests.
     * 
     */
    public String cnameFrom() {
        return this.cnameFrom;
    }
    /**
     * @return A hostname&#39;s CNAME type. Supports only the `EDGE_HOSTNAME` value.
     * 
     */
    public String cnameType() {
        return this.cnameType;
    }
    /**
     * @return Indicates the certificate&#39;s provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can&#39;t specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.
     * 
     */
    public String productionCertType() {
        return this.productionCertType;
    }
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    public String productionCnameTo() {
        return this.productionCnameTo;
    }
    /**
     * @return The unique identifier for the edge hostname.
     * 
     */
    public String productionEdgeHostnameId() {
        return this.productionEdgeHostnameId;
    }
    /**
     * @return Indicates the certificate&#39;s provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can&#39;t specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.
     * 
     */
    public String stagingCertType() {
        return this.stagingCertType;
    }
    /**
     * @return The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object&#39;s `edgeHostnameDomain` member.
     * 
     */
    public String stagingCnameTo() {
        return this.stagingCnameTo;
    }
    /**
     * @return The unique identifier for the edge hostname.
     * 
     */
    public String stagingEdgeHostnameId() {
        return this.stagingEdgeHostnameId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyHostnamesHostnameBucket defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetPropertyHostnamesHostnameBucketCertStatus> certStatuses;
        private String cnameFrom;
        private String cnameType;
        private String productionCertType;
        private String productionCnameTo;
        private String productionEdgeHostnameId;
        private String stagingCertType;
        private String stagingCnameTo;
        private String stagingEdgeHostnameId;
        public Builder() {}
        public Builder(GetPropertyHostnamesHostnameBucket defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certStatuses = defaults.certStatuses;
    	      this.cnameFrom = defaults.cnameFrom;
    	      this.cnameType = defaults.cnameType;
    	      this.productionCertType = defaults.productionCertType;
    	      this.productionCnameTo = defaults.productionCnameTo;
    	      this.productionEdgeHostnameId = defaults.productionEdgeHostnameId;
    	      this.stagingCertType = defaults.stagingCertType;
    	      this.stagingCnameTo = defaults.stagingCnameTo;
    	      this.stagingEdgeHostnameId = defaults.stagingEdgeHostnameId;
        }

        @CustomType.Setter
        public Builder certStatuses(List<GetPropertyHostnamesHostnameBucketCertStatus> certStatuses) {
            if (certStatuses == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameBucket", "certStatuses");
            }
            this.certStatuses = certStatuses;
            return this;
        }
        public Builder certStatuses(GetPropertyHostnamesHostnameBucketCertStatus... certStatuses) {
            return certStatuses(List.of(certStatuses));
        }
        @CustomType.Setter
        public Builder cnameFrom(String cnameFrom) {
            if (cnameFrom == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameBucket", "cnameFrom");
            }
            this.cnameFrom = cnameFrom;
            return this;
        }
        @CustomType.Setter
        public Builder cnameType(String cnameType) {
            if (cnameType == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameBucket", "cnameType");
            }
            this.cnameType = cnameType;
            return this;
        }
        @CustomType.Setter
        public Builder productionCertType(String productionCertType) {
            if (productionCertType == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameBucket", "productionCertType");
            }
            this.productionCertType = productionCertType;
            return this;
        }
        @CustomType.Setter
        public Builder productionCnameTo(String productionCnameTo) {
            if (productionCnameTo == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameBucket", "productionCnameTo");
            }
            this.productionCnameTo = productionCnameTo;
            return this;
        }
        @CustomType.Setter
        public Builder productionEdgeHostnameId(String productionEdgeHostnameId) {
            if (productionEdgeHostnameId == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameBucket", "productionEdgeHostnameId");
            }
            this.productionEdgeHostnameId = productionEdgeHostnameId;
            return this;
        }
        @CustomType.Setter
        public Builder stagingCertType(String stagingCertType) {
            if (stagingCertType == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameBucket", "stagingCertType");
            }
            this.stagingCertType = stagingCertType;
            return this;
        }
        @CustomType.Setter
        public Builder stagingCnameTo(String stagingCnameTo) {
            if (stagingCnameTo == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameBucket", "stagingCnameTo");
            }
            this.stagingCnameTo = stagingCnameTo;
            return this;
        }
        @CustomType.Setter
        public Builder stagingEdgeHostnameId(String stagingEdgeHostnameId) {
            if (stagingEdgeHostnameId == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameBucket", "stagingEdgeHostnameId");
            }
            this.stagingEdgeHostnameId = stagingEdgeHostnameId;
            return this;
        }
        public GetPropertyHostnamesHostnameBucket build() {
            final var _resultValue = new GetPropertyHostnamesHostnameBucket();
            _resultValue.certStatuses = certStatuses;
            _resultValue.cnameFrom = cnameFrom;
            _resultValue.cnameType = cnameType;
            _resultValue.productionCertType = productionCertType;
            _resultValue.productionCnameTo = productionCnameTo;
            _resultValue.productionEdgeHostnameId = productionEdgeHostnameId;
            _resultValue.stagingCertType = stagingCertType;
            _resultValue.stagingCnameTo = stagingCnameTo;
            _resultValue.stagingEdgeHostnameId = stagingEdgeHostnameId;
            return _resultValue;
        }
    }
}
