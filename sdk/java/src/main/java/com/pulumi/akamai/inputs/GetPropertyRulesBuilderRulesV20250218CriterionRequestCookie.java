// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie Empty = new GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie();

    /**
     * The name of the cookie, for example, `visitor` in `visitor:anon`.
     * 
     */
    @Import(name="cookieName")
    private @Nullable String cookieName;

    /**
     * @return The name of the cookie, for example, `visitor` in `visitor:anon`.
     * 
     */
    public Optional<String> cookieName() {
        return Optional.ofNullable(this.cookieName);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Boolean locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * When the `value` is numeric, this field specifies the match&#39;s minimum value.
     * 
     */
    @Import(name="lowerBound")
    private @Nullable Integer lowerBound;

    /**
     * @return When the `value` is numeric, this field specifies the match&#39;s minimum value.
     * 
     */
    public Optional<Integer> lowerBound() {
        return Optional.ofNullable(this.lowerBound);
    }

    /**
     * Sets a case-sensitive match for the `cookieName` field.
     * 
     */
    @Import(name="matchCaseSensitiveName")
    private @Nullable Boolean matchCaseSensitiveName;

    /**
     * @return Sets a case-sensitive match for the `cookieName` field.
     * 
     */
    public Optional<Boolean> matchCaseSensitiveName() {
        return Optional.ofNullable(this.matchCaseSensitiveName);
    }

    /**
     * Sets a case-sensitive match for the `value` field.
     * 
     */
    @Import(name="matchCaseSensitiveValue")
    private @Nullable Boolean matchCaseSensitiveValue;

    /**
     * @return Sets a case-sensitive match for the `value` field.
     * 
     */
    public Optional<Boolean> matchCaseSensitiveValue() {
        return Optional.ofNullable(this.matchCaseSensitiveValue);
    }

    /**
     * Narrows the match criteria.
     * 
     */
    @Import(name="matchOperator")
    private @Nullable String matchOperator;

    /**
     * @return Narrows the match criteria.
     * 
     */
    public Optional<String> matchOperator() {
        return Optional.ofNullable(this.matchOperator);
    }

    /**
     * Allows wildcards in the `cookieName` field, where `?` matches a single character and `*` matches zero or more characters.
     * 
     */
    @Import(name="matchWildcardName")
    private @Nullable Boolean matchWildcardName;

    /**
     * @return Allows wildcards in the `cookieName` field, where `?` matches a single character and `*` matches zero or more characters.
     * 
     */
    public Optional<Boolean> matchWildcardName() {
        return Optional.ofNullable(this.matchWildcardName);
    }

    /**
     * Allows wildcards in the `value` field, where `?` matches a single character and `*` matches zero or more characters.
     * 
     */
    @Import(name="matchWildcardValue")
    private @Nullable Boolean matchWildcardValue;

    /**
     * @return Allows wildcards in the `value` field, where `?` matches a single character and `*` matches zero or more characters.
     * 
     */
    public Optional<Boolean> matchWildcardValue() {
        return Optional.ofNullable(this.matchWildcardValue);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable String templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * When the `value` is numeric, this field specifies the match&#39;s maximum value.
     * 
     */
    @Import(name="upperBound")
    private @Nullable Integer upperBound;

    /**
     * @return When the `value` is numeric, this field specifies the match&#39;s maximum value.
     * 
     */
    public Optional<Integer> upperBound() {
        return Optional.ofNullable(this.upperBound);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable String uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    /**
     * The cookie&#39;s value, for example, `anon` in `visitor:anon`.
     * 
     */
    @Import(name="value")
    private @Nullable String value;

    /**
     * @return The cookie&#39;s value, for example, `anon` in `visitor:anon`.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    private GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie() {}

    private GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie(GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie $) {
        this.cookieName = $.cookieName;
        this.locked = $.locked;
        this.lowerBound = $.lowerBound;
        this.matchCaseSensitiveName = $.matchCaseSensitiveName;
        this.matchCaseSensitiveValue = $.matchCaseSensitiveValue;
        this.matchOperator = $.matchOperator;
        this.matchWildcardName = $.matchWildcardName;
        this.matchWildcardValue = $.matchWildcardValue;
        this.templateUuid = $.templateUuid;
        this.upperBound = $.upperBound;
        this.uuid = $.uuid;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie();
        }

        public Builder(GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie defaults) {
            $ = new GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie(Objects.requireNonNull(defaults));
        }

        /**
         * @param cookieName The name of the cookie, for example, `visitor` in `visitor:anon`.
         * 
         * @return builder
         * 
         */
        public Builder cookieName(@Nullable String cookieName) {
            $.cookieName = cookieName;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Boolean locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param lowerBound When the `value` is numeric, this field specifies the match&#39;s minimum value.
         * 
         * @return builder
         * 
         */
        public Builder lowerBound(@Nullable Integer lowerBound) {
            $.lowerBound = lowerBound;
            return this;
        }

        /**
         * @param matchCaseSensitiveName Sets a case-sensitive match for the `cookieName` field.
         * 
         * @return builder
         * 
         */
        public Builder matchCaseSensitiveName(@Nullable Boolean matchCaseSensitiveName) {
            $.matchCaseSensitiveName = matchCaseSensitiveName;
            return this;
        }

        /**
         * @param matchCaseSensitiveValue Sets a case-sensitive match for the `value` field.
         * 
         * @return builder
         * 
         */
        public Builder matchCaseSensitiveValue(@Nullable Boolean matchCaseSensitiveValue) {
            $.matchCaseSensitiveValue = matchCaseSensitiveValue;
            return this;
        }

        /**
         * @param matchOperator Narrows the match criteria.
         * 
         * @return builder
         * 
         */
        public Builder matchOperator(@Nullable String matchOperator) {
            $.matchOperator = matchOperator;
            return this;
        }

        /**
         * @param matchWildcardName Allows wildcards in the `cookieName` field, where `?` matches a single character and `*` matches zero or more characters.
         * 
         * @return builder
         * 
         */
        public Builder matchWildcardName(@Nullable Boolean matchWildcardName) {
            $.matchWildcardName = matchWildcardName;
            return this;
        }

        /**
         * @param matchWildcardValue Allows wildcards in the `value` field, where `?` matches a single character and `*` matches zero or more characters.
         * 
         * @return builder
         * 
         */
        public Builder matchWildcardValue(@Nullable Boolean matchWildcardValue) {
            $.matchWildcardValue = matchWildcardValue;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable String templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param upperBound When the `value` is numeric, this field specifies the match&#39;s maximum value.
         * 
         * @return builder
         * 
         */
        public Builder upperBound(@Nullable Integer upperBound) {
            $.upperBound = upperBound;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param value The cookie&#39;s value, for example, `anon` in `visitor:anon`.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable String value) {
            $.value = value;
            return this;
        }

        public GetPropertyRulesBuilderRulesV20250218CriterionRequestCookie build() {
            return $;
        }
    }

}
