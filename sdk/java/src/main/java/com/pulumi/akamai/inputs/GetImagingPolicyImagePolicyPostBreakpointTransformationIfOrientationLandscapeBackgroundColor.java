// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor();

    @Import(name="color")
    private @Nullable String color;

    public Optional<String> color() {
        return Optional.ofNullable(this.color);
    }

    @Import(name="colorVar")
    private @Nullable String colorVar;

    public Optional<String> colorVar() {
        return Optional.ofNullable(this.colorVar);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor $) {
        this.color = $.color;
        this.colorVar = $.colorVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor(Objects.requireNonNull(defaults));
        }

        public Builder color(@Nullable String color) {
            $.color = color;
            return this;
        }

        public Builder colorVar(@Nullable String colorVar) {
            $.colorVar = colorVar;
            return this;
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeBackgroundColor build() {
            return $;
        }
    }

}
