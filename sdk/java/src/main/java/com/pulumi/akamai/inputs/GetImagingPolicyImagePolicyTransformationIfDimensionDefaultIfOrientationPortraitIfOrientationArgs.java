// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationDefaultArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationLandscapeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationPortraitArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationSquareArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs Empty = new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs();

    @Import(name="default")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationDefaultArgs> default_;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationDefaultArgs>> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="landscape")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationLandscapeArgs> landscape;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationLandscapeArgs>> landscape() {
        return Optional.ofNullable(this.landscape);
    }

    @Import(name="portrait")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationPortraitArgs> portrait;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationPortraitArgs>> portrait() {
        return Optional.ofNullable(this.portrait);
    }

    @Import(name="square")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationSquareArgs> square;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationSquareArgs>> square() {
        return Optional.ofNullable(this.square);
    }

    private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs() {}

    private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs $) {
        this.default_ = $.default_;
        this.landscape = $.landscape;
        this.portrait = $.portrait;
        this.square = $.square;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationDefaultArgs> default_) {
            $.default_ = default_;
            return this;
        }

        public Builder default_(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationDefaultArgs default_) {
            return default_(Output.of(default_));
        }

        public Builder landscape(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationLandscapeArgs> landscape) {
            $.landscape = landscape;
            return this;
        }

        public Builder landscape(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationLandscapeArgs landscape) {
            return landscape(Output.of(landscape));
        }

        public Builder portrait(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationPortraitArgs> portrait) {
            $.portrait = portrait;
            return this;
        }

        public Builder portrait(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationPortraitArgs portrait) {
            return portrait(Output.of(portrait));
        }

        public Builder square(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationSquareArgs> square) {
            $.square = square;
            return this;
        }

        public Builder square(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationSquareArgs square) {
            return square(Output.of(square));
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionDefaultIfOrientationPortraitIfOrientationArgs build() {
            return $;
        }
    }

}
