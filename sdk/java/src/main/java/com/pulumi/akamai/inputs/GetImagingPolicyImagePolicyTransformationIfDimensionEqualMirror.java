// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror Empty = new GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror();

    @Import(name="horizontal")
    private @Nullable String horizontal;

    public Optional<String> horizontal() {
        return Optional.ofNullable(this.horizontal);
    }

    @Import(name="horizontalVar")
    private @Nullable String horizontalVar;

    public Optional<String> horizontalVar() {
        return Optional.ofNullable(this.horizontalVar);
    }

    @Import(name="vertical")
    private @Nullable String vertical;

    public Optional<String> vertical() {
        return Optional.ofNullable(this.vertical);
    }

    @Import(name="verticalVar")
    private @Nullable String verticalVar;

    public Optional<String> verticalVar() {
        return Optional.ofNullable(this.verticalVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror() {}

    private GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror(GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror $) {
        this.horizontal = $.horizontal;
        this.horizontalVar = $.horizontalVar;
        this.vertical = $.vertical;
        this.verticalVar = $.verticalVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror(Objects.requireNonNull(defaults));
        }

        public Builder horizontal(@Nullable String horizontal) {
            $.horizontal = horizontal;
            return this;
        }

        public Builder horizontalVar(@Nullable String horizontalVar) {
            $.horizontalVar = horizontalVar;
            return this;
        }

        public Builder vertical(@Nullable String vertical) {
            $.vertical = vertical;
            return this;
        }

        public Builder verticalVar(@Nullable String verticalVar) {
            $.verticalVar = verticalVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionEqualMirror build() {
            return $;
        }
    }

}
