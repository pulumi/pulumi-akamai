// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudletsApplicationLoadBalancerPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudletsApplicationLoadBalancerPlainArgs Empty = new GetCloudletsApplicationLoadBalancerPlainArgs();

    /**
     * (Required) A unique identifier for the Conditional Origin that supports the load balancing configuration. The Conditional Origin type must be set to `APPLICATION_LOAD_BALANCER` in the `origin` behavior. See property rules for more information.
     * 
     */
    @Import(name="originId", required=true)
    private String originId;

    /**
     * @return (Required) A unique identifier for the Conditional Origin that supports the load balancing configuration. The Conditional Origin type must be set to `APPLICATION_LOAD_BALANCER` in the `origin` behavior. See property rules for more information.
     * 
     */
    public String originId() {
        return this.originId;
    }

    /**
     * (Optional) The version number of the load balancing configuration.
     * 
     */
    @Import(name="version")
    private @Nullable Integer version;

    /**
     * @return (Optional) The version number of the load balancing configuration.
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    private GetCloudletsApplicationLoadBalancerPlainArgs() {}

    private GetCloudletsApplicationLoadBalancerPlainArgs(GetCloudletsApplicationLoadBalancerPlainArgs $) {
        this.originId = $.originId;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudletsApplicationLoadBalancerPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudletsApplicationLoadBalancerPlainArgs $;

        public Builder() {
            $ = new GetCloudletsApplicationLoadBalancerPlainArgs();
        }

        public Builder(GetCloudletsApplicationLoadBalancerPlainArgs defaults) {
            $ = new GetCloudletsApplicationLoadBalancerPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param originId (Required) A unique identifier for the Conditional Origin that supports the load balancing configuration. The Conditional Origin type must be set to `APPLICATION_LOAD_BALANCER` in the `origin` behavior. See property rules for more information.
         * 
         * @return builder
         * 
         */
        public Builder originId(String originId) {
            $.originId = originId;
            return this;
        }

        /**
         * @param version (Optional) The version number of the load balancing configuration.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Integer version) {
            $.version = version;
            return this;
        }

        public GetCloudletsApplicationLoadBalancerPlainArgs build() {
            $.originId = Objects.requireNonNull($.originId, "expected parameter 'originId' to be non-null");
            return $;
        }
    }

}
