// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.PropertyIncludeArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.PropertyIncludeState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Use the `akamai.PropertyInclude` resource to create an include and its rule tree.
 * 
 * ## Basic usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.akamai.PropertyInclude;
 * import com.pulumi.akamai.PropertyIncludeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myExample = new PropertyInclude(&#34;myExample&#34;, PropertyIncludeArgs.builder()        
 *             .contractId(&#34;ctr_1-AB123&#34;)
 *             .groupId(&#34;grp_12345&#34;)
 *             .productId(&#34;prd_123456&#34;)
 *             .ruleFormat(&#34;v2022-10-18&#34;)
 *             .type(&#34;MICROSERVICES&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Attributes reference
 * 
 * This resource returns these attributes:
 * 
 * * `rule_errors` - Rule&#39;s validation errors. You need to resolve returned errors, as they block an activation.
 * * `rule_warnings` - Rule&#39;s validation warnings. You can activate a version that yields less severe warnings.
 * * `latest_version` - Returns the most recent version of the include.
 * * `staging_version` - The include version currently activated on the staging network.
 * * `production_version` - The include version currently activated on the production network.
 * 
 */
@ResourceType(type="akamai:index/propertyInclude:PropertyInclude")
public class PropertyInclude extends com.pulumi.resources.CustomResource {
    /**
     * (Required) A contract&#39;s unique ID, including the optional `ctr_` prefix.
     * 
     */
    @Export(name="contractId", type=String.class, parameters={})
    private Output<String> contractId;

    /**
     * @return (Required) A contract&#39;s unique ID, including the optional `ctr_` prefix.
     * 
     */
    public Output<String> contractId() {
        return this.contractId;
    }
    /**
     * (Required) A group&#39;s unique ID, including the optional `grp_` prefix.
     * 
     */
    @Export(name="groupId", type=String.class, parameters={})
    private Output<String> groupId;

    /**
     * @return (Required) A group&#39;s unique ID, including the optional `grp_` prefix.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }
    /**
     * Specifies the most recent version of the include
     * 
     */
    @Export(name="latestVersion", type=Integer.class, parameters={})
    private Output<Integer> latestVersion;

    /**
     * @return Specifies the most recent version of the include
     * 
     */
    public Output<Integer> latestVersion() {
        return this.latestVersion;
    }
    /**
     * (Required) The descriptive name for the include.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return (Required) The descriptive name for the include.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The product assigned to the include
     * 
     */
    @Export(name="productId", type=String.class, parameters={})
    private Output</* @Nullable */ String> productId;

    /**
     * @return The product assigned to the include
     * 
     */
    public Output<Optional<String>> productId() {
        return Codegen.optional(this.productId);
    }
    /**
     * The most recent version to be activated to the production network
     * 
     */
    @Export(name="productionVersion", type=String.class, parameters={})
    private Output<String> productionVersion;

    /**
     * @return The most recent version to be activated to the production network
     * 
     */
    public Output<String> productionVersion() {
        return this.productionVersion;
    }
    /**
     * Rule validation errors
     * 
     */
    @Export(name="ruleErrors", type=String.class, parameters={})
    private Output<String> ruleErrors;

    /**
     * @return Rule validation errors
     * 
     */
    public Output<String> ruleErrors() {
        return this.ruleErrors;
    }
    /**
     * (Required) Indicates the versioned set of features and criteria. See [Rule format schemas](https://techdocs.akamai.com/property-mgr/reference/rule-format-schemas) to learn more.
     * 
     */
    @Export(name="ruleFormat", type=String.class, parameters={})
    private Output<String> ruleFormat;

    /**
     * @return (Required) Indicates the versioned set of features and criteria. See [Rule format schemas](https://techdocs.akamai.com/property-mgr/reference/rule-format-schemas) to learn more.
     * 
     */
    public Output<String> ruleFormat() {
        return this.ruleFormat;
    }
    /**
     * Rule validation warnings
     * 
     */
    @Export(name="ruleWarnings", type=String.class, parameters={})
    private Output<String> ruleWarnings;

    /**
     * @return Rule validation warnings
     * 
     */
    public Output<String> ruleWarnings() {
        return this.ruleWarnings;
    }
    /**
     * (Optional) Include&#39;s rules as JSON.
     * 
     */
    @Export(name="rules", type=String.class, parameters={})
    private Output<String> rules;

    /**
     * @return (Optional) Include&#39;s rules as JSON.
     * 
     */
    public Output<String> rules() {
        return this.rules;
    }
    /**
     * The most recent version to be activated to the staging network
     * 
     */
    @Export(name="stagingVersion", type=String.class, parameters={})
    private Output<String> stagingVersion;

    /**
     * @return The most recent version to be activated to the staging network
     * 
     */
    public Output<String> stagingVersion() {
        return this.stagingVersion;
    }
    /**
     * (Required) Specifies the type of the include, either `MICROSERVICES` or `COMMON_SETTINGS`. Use this field for filtering. `MICROSERVICES` allow different teams to work independently on different parts of a single site. `COMMON_SETTINGS` includes are useful for configurations that share a large number of settings, often managed by a central team.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return (Required) Specifies the type of the include, either `MICROSERVICES` or `COMMON_SETTINGS`. Use this field for filtering. `MICROSERVICES` allow different teams to work independently on different parts of a single site. `COMMON_SETTINGS` includes are useful for configurations that share a large number of settings, often managed by a central team.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PropertyInclude(String name) {
        this(name, PropertyIncludeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PropertyInclude(String name, PropertyIncludeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PropertyInclude(String name, PropertyIncludeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/propertyInclude:PropertyInclude", name, args == null ? PropertyIncludeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PropertyInclude(String name, Output<String> id, @Nullable PropertyIncludeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/propertyInclude:PropertyInclude", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PropertyInclude get(String name, Output<String> id, @Nullable PropertyIncludeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PropertyInclude(name, id, state, options);
    }
}
