// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShapePoint;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape();

    @Import(name="points", required=true)
    private List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShapePoint> points;

    public List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShapePoint> points() {
        return this.points;
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape $) {
        this.points = $.points;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape(Objects.requireNonNull(defaults));
        }

        public Builder points(List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShapePoint> points) {
            $.points = points;
            return this;
        }

        public Builder points(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShapePoint... points) {
            return points(List.of(points));
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape build() {
            $.points = Objects.requireNonNull($.points, "expected parameter 'points' to be non-null");
            return $;
        }
    }

}
