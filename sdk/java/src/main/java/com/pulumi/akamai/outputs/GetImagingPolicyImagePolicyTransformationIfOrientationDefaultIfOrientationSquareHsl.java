// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationSquareHsl {
    private @Nullable String hue;
    private @Nullable String hueVar;
    private @Nullable String lightness;
    private @Nullable String lightnessVar;
    private @Nullable String saturation;
    private @Nullable String saturationVar;

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationSquareHsl() {}
    public Optional<String> hue() {
        return Optional.ofNullable(this.hue);
    }
    public Optional<String> hueVar() {
        return Optional.ofNullable(this.hueVar);
    }
    public Optional<String> lightness() {
        return Optional.ofNullable(this.lightness);
    }
    public Optional<String> lightnessVar() {
        return Optional.ofNullable(this.lightnessVar);
    }
    public Optional<String> saturation() {
        return Optional.ofNullable(this.saturation);
    }
    public Optional<String> saturationVar() {
        return Optional.ofNullable(this.saturationVar);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationSquareHsl defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String hue;
        private @Nullable String hueVar;
        private @Nullable String lightness;
        private @Nullable String lightnessVar;
        private @Nullable String saturation;
        private @Nullable String saturationVar;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationSquareHsl defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hue = defaults.hue;
    	      this.hueVar = defaults.hueVar;
    	      this.lightness = defaults.lightness;
    	      this.lightnessVar = defaults.lightnessVar;
    	      this.saturation = defaults.saturation;
    	      this.saturationVar = defaults.saturationVar;
        }

        @CustomType.Setter
        public Builder hue(@Nullable String hue) {
            this.hue = hue;
            return this;
        }
        @CustomType.Setter
        public Builder hueVar(@Nullable String hueVar) {
            this.hueVar = hueVar;
            return this;
        }
        @CustomType.Setter
        public Builder lightness(@Nullable String lightness) {
            this.lightness = lightness;
            return this;
        }
        @CustomType.Setter
        public Builder lightnessVar(@Nullable String lightnessVar) {
            this.lightnessVar = lightnessVar;
            return this;
        }
        @CustomType.Setter
        public Builder saturation(@Nullable String saturation) {
            this.saturation = saturation;
            return this;
        }
        @CustomType.Setter
        public Builder saturationVar(@Nullable String saturationVar) {
            this.saturationVar = saturationVar;
            return this;
        }
        public GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationSquareHsl build() {
            final var o = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfOrientationSquareHsl();
            o.hue = hue;
            o.hueVar = hueVar;
            o.lightness = lightness;
            o.lightnessVar = lightnessVar;
            o.saturation = saturation;
            o.saturationVar = saturationVar;
            return o;
        }
    }
}
