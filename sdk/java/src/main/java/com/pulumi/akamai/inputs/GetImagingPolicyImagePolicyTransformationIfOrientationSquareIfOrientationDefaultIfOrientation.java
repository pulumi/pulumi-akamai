// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationDefault;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationLandscape;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationPortrait;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationSquare;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation();

    @Import(name="default")
    private @Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationDefault default_;

    public Optional<GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationDefault> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="landscape")
    private @Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationLandscape landscape;

    public Optional<GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationLandscape> landscape() {
        return Optional.ofNullable(this.landscape);
    }

    @Import(name="portrait")
    private @Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationPortrait portrait;

    public Optional<GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationPortrait> portrait() {
        return Optional.ofNullable(this.portrait);
    }

    @Import(name="square")
    private @Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationSquare square;

    public Optional<GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationSquare> square() {
        return Optional.ofNullable(this.square);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation(GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation $) {
        this.default_ = $.default_;
        this.landscape = $.landscape;
        this.portrait = $.portrait;
        this.square = $.square;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationDefault default_) {
            $.default_ = default_;
            return this;
        }

        public Builder landscape(@Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationLandscape landscape) {
            $.landscape = landscape;
            return this;
        }

        public Builder portrait(@Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationPortrait portrait) {
            $.portrait = portrait;
            return this;
        }

        public Builder square(@Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientationSquare square) {
            $.square = square;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationSquareIfOrientationDefaultIfOrientation build() {
            return $;
        }
    }

}
