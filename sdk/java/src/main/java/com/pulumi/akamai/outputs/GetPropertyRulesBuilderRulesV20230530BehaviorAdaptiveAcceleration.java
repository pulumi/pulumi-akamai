// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAcceleration {
    private @Nullable String abLogic;
    private @Nullable String abTesting;
    private @Nullable String compression;
    private @Nullable String cookieName;
    private @Nullable Boolean enableBrotliCompression;
    private @Nullable Boolean enableForNoncacheable;
    private @Nullable Boolean enablePreconnect;
    private @Nullable Boolean enablePush;
    private @Nullable Boolean enableRo;
    private @Nullable Boolean locked;
    private @Nullable Boolean preloadEnable;
    private @Nullable String source;
    private @Nullable String templateUuid;
    private @Nullable String titleBrotli;
    private @Nullable String titleHttp2ServerPush;
    private @Nullable String titlePreconnect;
    private @Nullable String titlePreload;
    private @Nullable String titleRo;
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAcceleration() {}
    public Optional<String> abLogic() {
        return Optional.ofNullable(this.abLogic);
    }
    public Optional<String> abTesting() {
        return Optional.ofNullable(this.abTesting);
    }
    public Optional<String> compression() {
        return Optional.ofNullable(this.compression);
    }
    public Optional<String> cookieName() {
        return Optional.ofNullable(this.cookieName);
    }
    public Optional<Boolean> enableBrotliCompression() {
        return Optional.ofNullable(this.enableBrotliCompression);
    }
    public Optional<Boolean> enableForNoncacheable() {
        return Optional.ofNullable(this.enableForNoncacheable);
    }
    public Optional<Boolean> enablePreconnect() {
        return Optional.ofNullable(this.enablePreconnect);
    }
    public Optional<Boolean> enablePush() {
        return Optional.ofNullable(this.enablePush);
    }
    public Optional<Boolean> enableRo() {
        return Optional.ofNullable(this.enableRo);
    }
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    public Optional<Boolean> preloadEnable() {
        return Optional.ofNullable(this.preloadEnable);
    }
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    public Optional<String> titleBrotli() {
        return Optional.ofNullable(this.titleBrotli);
    }
    public Optional<String> titleHttp2ServerPush() {
        return Optional.ofNullable(this.titleHttp2ServerPush);
    }
    public Optional<String> titlePreconnect() {
        return Optional.ofNullable(this.titlePreconnect);
    }
    public Optional<String> titlePreload() {
        return Optional.ofNullable(this.titlePreload);
    }
    public Optional<String> titleRo() {
        return Optional.ofNullable(this.titleRo);
    }
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAcceleration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String abLogic;
        private @Nullable String abTesting;
        private @Nullable String compression;
        private @Nullable String cookieName;
        private @Nullable Boolean enableBrotliCompression;
        private @Nullable Boolean enableForNoncacheable;
        private @Nullable Boolean enablePreconnect;
        private @Nullable Boolean enablePush;
        private @Nullable Boolean enableRo;
        private @Nullable Boolean locked;
        private @Nullable Boolean preloadEnable;
        private @Nullable String source;
        private @Nullable String templateUuid;
        private @Nullable String titleBrotli;
        private @Nullable String titleHttp2ServerPush;
        private @Nullable String titlePreconnect;
        private @Nullable String titlePreload;
        private @Nullable String titleRo;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAcceleration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abLogic = defaults.abLogic;
    	      this.abTesting = defaults.abTesting;
    	      this.compression = defaults.compression;
    	      this.cookieName = defaults.cookieName;
    	      this.enableBrotliCompression = defaults.enableBrotliCompression;
    	      this.enableForNoncacheable = defaults.enableForNoncacheable;
    	      this.enablePreconnect = defaults.enablePreconnect;
    	      this.enablePush = defaults.enablePush;
    	      this.enableRo = defaults.enableRo;
    	      this.locked = defaults.locked;
    	      this.preloadEnable = defaults.preloadEnable;
    	      this.source = defaults.source;
    	      this.templateUuid = defaults.templateUuid;
    	      this.titleBrotli = defaults.titleBrotli;
    	      this.titleHttp2ServerPush = defaults.titleHttp2ServerPush;
    	      this.titlePreconnect = defaults.titlePreconnect;
    	      this.titlePreload = defaults.titlePreload;
    	      this.titleRo = defaults.titleRo;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder abLogic(@Nullable String abLogic) {
            this.abLogic = abLogic;
            return this;
        }
        @CustomType.Setter
        public Builder abTesting(@Nullable String abTesting) {
            this.abTesting = abTesting;
            return this;
        }
        @CustomType.Setter
        public Builder compression(@Nullable String compression) {
            this.compression = compression;
            return this;
        }
        @CustomType.Setter
        public Builder cookieName(@Nullable String cookieName) {
            this.cookieName = cookieName;
            return this;
        }
        @CustomType.Setter
        public Builder enableBrotliCompression(@Nullable Boolean enableBrotliCompression) {
            this.enableBrotliCompression = enableBrotliCompression;
            return this;
        }
        @CustomType.Setter
        public Builder enableForNoncacheable(@Nullable Boolean enableForNoncacheable) {
            this.enableForNoncacheable = enableForNoncacheable;
            return this;
        }
        @CustomType.Setter
        public Builder enablePreconnect(@Nullable Boolean enablePreconnect) {
            this.enablePreconnect = enablePreconnect;
            return this;
        }
        @CustomType.Setter
        public Builder enablePush(@Nullable Boolean enablePush) {
            this.enablePush = enablePush;
            return this;
        }
        @CustomType.Setter
        public Builder enableRo(@Nullable Boolean enableRo) {
            this.enableRo = enableRo;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {
            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder preloadEnable(@Nullable Boolean preloadEnable) {
            this.preloadEnable = preloadEnable;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {
            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder titleBrotli(@Nullable String titleBrotli) {
            this.titleBrotli = titleBrotli;
            return this;
        }
        @CustomType.Setter
        public Builder titleHttp2ServerPush(@Nullable String titleHttp2ServerPush) {
            this.titleHttp2ServerPush = titleHttp2ServerPush;
            return this;
        }
        @CustomType.Setter
        public Builder titlePreconnect(@Nullable String titlePreconnect) {
            this.titlePreconnect = titlePreconnect;
            return this;
        }
        @CustomType.Setter
        public Builder titlePreload(@Nullable String titlePreload) {
            this.titlePreload = titlePreload;
            return this;
        }
        @CustomType.Setter
        public Builder titleRo(@Nullable String titleRo) {
            this.titleRo = titleRo;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {
            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAcceleration build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAcceleration();
            _resultValue.abLogic = abLogic;
            _resultValue.abTesting = abTesting;
            _resultValue.compression = compression;
            _resultValue.cookieName = cookieName;
            _resultValue.enableBrotliCompression = enableBrotliCompression;
            _resultValue.enableForNoncacheable = enableForNoncacheable;
            _resultValue.enablePreconnect = enablePreconnect;
            _resultValue.enablePush = enablePush;
            _resultValue.enableRo = enableRo;
            _resultValue.locked = locked;
            _resultValue.preloadEnable = preloadEnable;
            _resultValue.source = source;
            _resultValue.templateUuid = templateUuid;
            _resultValue.titleBrotli = titleBrotli;
            _resultValue.titleHttp2ServerPush = titleHttp2ServerPush;
            _resultValue.titlePreconnect = titlePreconnect;
            _resultValue.titlePreload = titlePreload;
            _resultValue.titleRo = titleRo;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
