// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.CloudletsPolicyActivationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudletsPolicyActivationState extends com.pulumi.resources.ResourceArgs {

    public static final CloudletsPolicyActivationState Empty = new CloudletsPolicyActivationState();

    /**
     * Set of property IDs to link to this Cloudlets policy
     * 
     */
    @Import(name="associatedProperties")
    private @Nullable Output<List<String>> associatedProperties;

    /**
     * @return Set of property IDs to link to this Cloudlets policy
     * 
     */
    public Optional<Output<List<String>>> associatedProperties() {
        return Optional.ofNullable(this.associatedProperties);
    }

    /**
     * The network you want to activate the policy version on (options are Staging and Production)
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return The network you want to activate the policy version on (options are Staging and Production)
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * ID of the Cloudlets policy you want to activate
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<Integer> policyId;

    /**
     * @return ID of the Cloudlets policy you want to activate
     * 
     */
    public Optional<Output<Integer>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * Activation status for this Cloudlets policy
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Activation status for this Cloudlets policy
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Enables to set timeout for processing
     * 
     */
    @Import(name="timeouts")
    private @Nullable Output<CloudletsPolicyActivationTimeoutsArgs> timeouts;

    /**
     * @return Enables to set timeout for processing
     * 
     */
    public Optional<Output<CloudletsPolicyActivationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * Cloudlets policy version you want to activate
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return Cloudlets policy version you want to activate
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private CloudletsPolicyActivationState() {}

    private CloudletsPolicyActivationState(CloudletsPolicyActivationState $) {
        this.associatedProperties = $.associatedProperties;
        this.network = $.network;
        this.policyId = $.policyId;
        this.status = $.status;
        this.timeouts = $.timeouts;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudletsPolicyActivationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudletsPolicyActivationState $;

        public Builder() {
            $ = new CloudletsPolicyActivationState();
        }

        public Builder(CloudletsPolicyActivationState defaults) {
            $ = new CloudletsPolicyActivationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param associatedProperties Set of property IDs to link to this Cloudlets policy
         * 
         * @return builder
         * 
         */
        public Builder associatedProperties(@Nullable Output<List<String>> associatedProperties) {
            $.associatedProperties = associatedProperties;
            return this;
        }

        /**
         * @param associatedProperties Set of property IDs to link to this Cloudlets policy
         * 
         * @return builder
         * 
         */
        public Builder associatedProperties(List<String> associatedProperties) {
            return associatedProperties(Output.of(associatedProperties));
        }

        /**
         * @param associatedProperties Set of property IDs to link to this Cloudlets policy
         * 
         * @return builder
         * 
         */
        public Builder associatedProperties(String... associatedProperties) {
            return associatedProperties(List.of(associatedProperties));
        }

        /**
         * @param network The network you want to activate the policy version on (options are Staging and Production)
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The network you want to activate the policy version on (options are Staging and Production)
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param policyId ID of the Cloudlets policy you want to activate
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<Integer> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId ID of the Cloudlets policy you want to activate
         * 
         * @return builder
         * 
         */
        public Builder policyId(Integer policyId) {
            return policyId(Output.of(policyId));
        }

        /**
         * @param status Activation status for this Cloudlets policy
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Activation status for this Cloudlets policy
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param timeouts Enables to set timeout for processing
         * 
         * @return builder
         * 
         */
        public Builder timeouts(@Nullable Output<CloudletsPolicyActivationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        /**
         * @param timeouts Enables to set timeout for processing
         * 
         * @return builder
         * 
         */
        public Builder timeouts(CloudletsPolicyActivationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param version Cloudlets policy version you want to activate
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Cloudlets policy version you want to activate
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public CloudletsPolicyActivationState build() {
            return $;
        }
    }

}
