// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompoundTransformation;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound();

    @Import(name="transformations")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompoundTransformation> transformations;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompoundTransformation>> transformations() {
        return Optional.ofNullable(this.transformations);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound $) {
        this.transformations = $.transformations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound(Objects.requireNonNull(defaults));
        }

        public Builder transformations(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompoundTransformation> transformations) {
            $.transformations = transformations;
            return this;
        }

        public Builder transformations(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompoundTransformation... transformations) {
            return transformations(List.of(transformations));
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationDefaultCompoundTransformationCompound build() {
            return $;
        }
    }

}
