// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs Empty = new GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs();

    @Import(name="authKeyName", required=true)
    private Output<String> authKeyName;

    public Output<String> authKeyName() {
        return this.authKeyName;
    }

    @Import(name="expiryDate", required=true)
    private Output<String> expiryDate;

    public Output<String> expiryDate() {
        return this.expiryDate;
    }

    @Import(name="headerName", required=true)
    private Output<String> headerName;

    public Output<String> headerName() {
        return this.headerName;
    }

    @Import(name="secret", required=true)
    private Output<String> secret;

    public Output<String> secret() {
        return this.secret;
    }

    private GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs() {}

    private GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs(GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs $) {
        this.authKeyName = $.authKeyName;
        this.expiryDate = $.expiryDate;
        this.headerName = $.headerName;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs $;

        public Builder() {
            $ = new GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs();
        }

        public Builder(GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs defaults) {
            $ = new GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs(Objects.requireNonNull(defaults));
        }

        public Builder authKeyName(Output<String> authKeyName) {
            $.authKeyName = authKeyName;
            return this;
        }

        public Builder authKeyName(String authKeyName) {
            return authKeyName(Output.of(authKeyName));
        }

        public Builder expiryDate(Output<String> expiryDate) {
            $.expiryDate = expiryDate;
            return this;
        }

        public Builder expiryDate(String expiryDate) {
            return expiryDate(Output.of(expiryDate));
        }

        public Builder headerName(Output<String> headerName) {
            $.headerName = headerName;
            return this;
        }

        public Builder headerName(String headerName) {
            return headerName(Output.of(headerName));
        }

        public Builder secret(Output<String> secret) {
            $.secret = secret;
            return this;
        }

        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        public GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs build() {
            $.authKeyName = Objects.requireNonNull($.authKeyName, "expected parameter 'authKeyName' to be non-null");
            $.expiryDate = Objects.requireNonNull($.expiryDate, "expected parameter 'expiryDate' to be non-null");
            $.headerName = Objects.requireNonNull($.headerName, "expected parameter 'headerName' to be non-null");
            $.secret = Objects.requireNonNull($.secret, "expected parameter 'secret' to be non-null");
            return $;
        }
    }

}
