// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs Empty = new GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs();

    /**
     * The name of the auth key.
     * 
     */
    @Import(name="authKeyName", required=true)
    private Output<String> authKeyName;

    /**
     * @return The name of the auth key.
     * 
     */
    public Output<String> authKeyName() {
        return this.authKeyName;
    }

    /**
     * The expirty date of an auth key.
     * 
     */
    @Import(name="expiryDate", required=true)
    private Output<String> expiryDate;

    /**
     * @return The expirty date of an auth key.
     * 
     */
    public Output<String> expiryDate() {
        return this.expiryDate;
    }

    /**
     * The header name of an auth key.
     * 
     */
    @Import(name="headerName", required=true)
    private Output<String> headerName;

    /**
     * @return The header name of an auth key.
     * 
     */
    public Output<String> headerName() {
        return this.headerName;
    }

    /**
     * The secret of an auth key.
     * 
     */
    @Import(name="secret", required=true)
    private Output<String> secret;

    /**
     * @return The secret of an auth key.
     * 
     */
    public Output<String> secret() {
        return this.secret;
    }

    private GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs() {}

    private GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs(GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs $) {
        this.authKeyName = $.authKeyName;
        this.expiryDate = $.expiryDate;
        this.headerName = $.headerName;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs $;

        public Builder() {
            $ = new GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs();
        }

        public Builder(GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs defaults) {
            $ = new GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authKeyName The name of the auth key.
         * 
         * @return builder
         * 
         */
        public Builder authKeyName(Output<String> authKeyName) {
            $.authKeyName = authKeyName;
            return this;
        }

        /**
         * @param authKeyName The name of the auth key.
         * 
         * @return builder
         * 
         */
        public Builder authKeyName(String authKeyName) {
            return authKeyName(Output.of(authKeyName));
        }

        /**
         * @param expiryDate The expirty date of an auth key.
         * 
         * @return builder
         * 
         */
        public Builder expiryDate(Output<String> expiryDate) {
            $.expiryDate = expiryDate;
            return this;
        }

        /**
         * @param expiryDate The expirty date of an auth key.
         * 
         * @return builder
         * 
         */
        public Builder expiryDate(String expiryDate) {
            return expiryDate(Output.of(expiryDate));
        }

        /**
         * @param headerName The header name of an auth key.
         * 
         * @return builder
         * 
         */
        public Builder headerName(Output<String> headerName) {
            $.headerName = headerName;
            return this;
        }

        /**
         * @param headerName The header name of an auth key.
         * 
         * @return builder
         * 
         */
        public Builder headerName(String headerName) {
            return headerName(Output.of(headerName));
        }

        /**
         * @param secret The secret of an auth key.
         * 
         * @return builder
         * 
         */
        public Builder secret(Output<String> secret) {
            $.secret = secret;
            return this;
        }

        /**
         * @param secret The secret of an auth key.
         * 
         * @return builder
         * 
         */
        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        public GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs build() {
            if ($.authKeyName == null) {
                throw new MissingRequiredPropertyException("GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs", "authKeyName");
            }
            if ($.expiryDate == null) {
                throw new MissingRequiredPropertyException("GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs", "expiryDate");
            }
            if ($.headerName == null) {
                throw new MissingRequiredPropertyException("GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs", "headerName");
            }
            if ($.secret == null) {
                throw new MissingRequiredPropertyException("GetCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKeyArgs", "secret");
            }
            return $;
        }
    }

}
