// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PropertyHostnameCertStatus {
    /**
     * @return The hostname part of the CNAME record used to validate the certificate&#39;s domain.
     * 
     */
    private @Nullable String hostname;
    /**
     * @return The certificate&#39;s deployment status on the production network.
     * 
     */
    private @Nullable String productionStatus;
    /**
     * @return The certificate&#39;s deployment status on the staging network.
     * 
     */
    private @Nullable String stagingStatus;
    /**
     * @return The destination part of the CNAME record used to validate the certificate&#39;s domain.
     * 
     */
    private @Nullable String target;

    private PropertyHostnameCertStatus() {}
    /**
     * @return The hostname part of the CNAME record used to validate the certificate&#39;s domain.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return The certificate&#39;s deployment status on the production network.
     * 
     */
    public Optional<String> productionStatus() {
        return Optional.ofNullable(this.productionStatus);
    }
    /**
     * @return The certificate&#39;s deployment status on the staging network.
     * 
     */
    public Optional<String> stagingStatus() {
        return Optional.ofNullable(this.stagingStatus);
    }
    /**
     * @return The destination part of the CNAME record used to validate the certificate&#39;s domain.
     * 
     */
    public Optional<String> target() {
        return Optional.ofNullable(this.target);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PropertyHostnameCertStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String hostname;
        private @Nullable String productionStatus;
        private @Nullable String stagingStatus;
        private @Nullable String target;
        public Builder() {}
        public Builder(PropertyHostnameCertStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.productionStatus = defaults.productionStatus;
    	      this.stagingStatus = defaults.stagingStatus;
    	      this.target = defaults.target;
        }

        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {

            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder productionStatus(@Nullable String productionStatus) {

            this.productionStatus = productionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder stagingStatus(@Nullable String stagingStatus) {

            this.stagingStatus = stagingStatus;
            return this;
        }
        @CustomType.Setter
        public Builder target(@Nullable String target) {

            this.target = target;
            return this;
        }
        public PropertyHostnameCertStatus build() {
            final var _resultValue = new PropertyHostnameCertStatus();
            _resultValue.hostname = hostname;
            _resultValue.productionStatus = productionStatus;
            _resultValue.stagingStatus = stagingStatus;
            _resultValue.target = target;
            return _resultValue;
        }
    }
}
