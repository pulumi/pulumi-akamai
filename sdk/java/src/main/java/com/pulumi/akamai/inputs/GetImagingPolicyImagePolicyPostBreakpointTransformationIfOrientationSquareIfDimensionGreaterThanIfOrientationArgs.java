// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationDefaultArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationLandscapeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationPortraitArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationSquareArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs();

    @Import(name="default")
    private @Nullable Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationDefaultArgs> default_;

    public Optional<Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationDefaultArgs>> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="landscape")
    private @Nullable Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationLandscapeArgs> landscape;

    public Optional<Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationLandscapeArgs>> landscape() {
        return Optional.ofNullable(this.landscape);
    }

    @Import(name="portrait")
    private @Nullable Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationPortraitArgs> portrait;

    public Optional<Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationPortraitArgs>> portrait() {
        return Optional.ofNullable(this.portrait);
    }

    @Import(name="square")
    private @Nullable Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationSquareArgs> square;

    public Optional<Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationSquareArgs>> square() {
        return Optional.ofNullable(this.square);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs $) {
        this.default_ = $.default_;
        this.landscape = $.landscape;
        this.portrait = $.portrait;
        this.square = $.square;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationDefaultArgs> default_) {
            $.default_ = default_;
            return this;
        }

        public Builder default_(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationDefaultArgs default_) {
            return default_(Output.of(default_));
        }

        public Builder landscape(@Nullable Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationLandscapeArgs> landscape) {
            $.landscape = landscape;
            return this;
        }

        public Builder landscape(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationLandscapeArgs landscape) {
            return landscape(Output.of(landscape));
        }

        public Builder portrait(@Nullable Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationPortraitArgs> portrait) {
            $.portrait = portrait;
            return this;
        }

        public Builder portrait(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationPortraitArgs portrait) {
            return portrait(Output.of(portrait));
        }

        public Builder square(@Nullable Output<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationSquareArgs> square) {
            $.square = square;
            return this;
        }

        public Builder square(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationSquareArgs square) {
            return square(Output.of(square));
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationSquareIfDimensionGreaterThanIfOrientationArgs build() {
            return $;
        }
    }

}
