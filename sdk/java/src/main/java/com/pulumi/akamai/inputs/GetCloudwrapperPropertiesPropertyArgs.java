// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetCloudwrapperPropertiesPropertyArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCloudwrapperPropertiesPropertyArgs Empty = new GetCloudwrapperPropertiesPropertyArgs();

    @Import(name="contractId", required=true)
    private Output<String> contractId;

    public Output<String> contractId() {
        return this.contractId;
    }

    @Import(name="groupId", required=true)
    private Output<Integer> groupId;

    public Output<Integer> groupId() {
        return this.groupId;
    }

    @Import(name="propertyId", required=true)
    private Output<Integer> propertyId;

    public Output<Integer> propertyId() {
        return this.propertyId;
    }

    @Import(name="propertyName", required=true)
    private Output<String> propertyName;

    public Output<String> propertyName() {
        return this.propertyName;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private GetCloudwrapperPropertiesPropertyArgs() {}

    private GetCloudwrapperPropertiesPropertyArgs(GetCloudwrapperPropertiesPropertyArgs $) {
        this.contractId = $.contractId;
        this.groupId = $.groupId;
        this.propertyId = $.propertyId;
        this.propertyName = $.propertyName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudwrapperPropertiesPropertyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudwrapperPropertiesPropertyArgs $;

        public Builder() {
            $ = new GetCloudwrapperPropertiesPropertyArgs();
        }

        public Builder(GetCloudwrapperPropertiesPropertyArgs defaults) {
            $ = new GetCloudwrapperPropertiesPropertyArgs(Objects.requireNonNull(defaults));
        }

        public Builder contractId(Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        public Builder groupId(Output<Integer> groupId) {
            $.groupId = groupId;
            return this;
        }

        public Builder groupId(Integer groupId) {
            return groupId(Output.of(groupId));
        }

        public Builder propertyId(Output<Integer> propertyId) {
            $.propertyId = propertyId;
            return this;
        }

        public Builder propertyId(Integer propertyId) {
            return propertyId(Output.of(propertyId));
        }

        public Builder propertyName(Output<String> propertyName) {
            $.propertyName = propertyName;
            return this;
        }

        public Builder propertyName(String propertyName) {
            return propertyName(Output.of(propertyName));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetCloudwrapperPropertiesPropertyArgs build() {
            $.contractId = Objects.requireNonNull($.contractId, "expected parameter 'contractId' to be non-null");
            $.groupId = Objects.requireNonNull($.groupId, "expected parameter 'groupId' to be non-null");
            $.propertyId = Objects.requireNonNull($.propertyId, "expected parameter 'propertyId' to be non-null");
            $.propertyName = Objects.requireNonNull($.propertyName, "expected parameter 'propertyName' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
