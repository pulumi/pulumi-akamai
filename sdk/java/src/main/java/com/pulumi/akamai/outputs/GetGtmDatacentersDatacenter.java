// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetGtmDatacentersDatacenterDefaultLoadObject;
import com.pulumi.akamai.outputs.GetGtmDatacentersDatacenterLink;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGtmDatacentersDatacenter {
    private String city;
    private Integer cloneOf;
    private Boolean cloudServerHostHeaderOverride;
    private Boolean cloudServerTargeting;
    private String continent;
    private String country;
    private Integer datacenterId;
    private List<GetGtmDatacentersDatacenterDefaultLoadObject> defaultLoadObjects;
    private Double latitude;
    private List<GetGtmDatacentersDatacenterLink> links;
    private Double longitude;
    private String nickname;
    private Integer scorePenalty;
    private String servermonitorPool;
    private String stateOrProvince;
    private Boolean virtual;

    private GetGtmDatacentersDatacenter() {}
    public String city() {
        return this.city;
    }
    public Integer cloneOf() {
        return this.cloneOf;
    }
    public Boolean cloudServerHostHeaderOverride() {
        return this.cloudServerHostHeaderOverride;
    }
    public Boolean cloudServerTargeting() {
        return this.cloudServerTargeting;
    }
    public String continent() {
        return this.continent;
    }
    public String country() {
        return this.country;
    }
    public Integer datacenterId() {
        return this.datacenterId;
    }
    public List<GetGtmDatacentersDatacenterDefaultLoadObject> defaultLoadObjects() {
        return this.defaultLoadObjects;
    }
    public Double latitude() {
        return this.latitude;
    }
    public List<GetGtmDatacentersDatacenterLink> links() {
        return this.links;
    }
    public Double longitude() {
        return this.longitude;
    }
    public String nickname() {
        return this.nickname;
    }
    public Integer scorePenalty() {
        return this.scorePenalty;
    }
    public String servermonitorPool() {
        return this.servermonitorPool;
    }
    public String stateOrProvince() {
        return this.stateOrProvince;
    }
    public Boolean virtual() {
        return this.virtual;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGtmDatacentersDatacenter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String city;
        private Integer cloneOf;
        private Boolean cloudServerHostHeaderOverride;
        private Boolean cloudServerTargeting;
        private String continent;
        private String country;
        private Integer datacenterId;
        private List<GetGtmDatacentersDatacenterDefaultLoadObject> defaultLoadObjects;
        private Double latitude;
        private List<GetGtmDatacentersDatacenterLink> links;
        private Double longitude;
        private String nickname;
        private Integer scorePenalty;
        private String servermonitorPool;
        private String stateOrProvince;
        private Boolean virtual;
        public Builder() {}
        public Builder(GetGtmDatacentersDatacenter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.city = defaults.city;
    	      this.cloneOf = defaults.cloneOf;
    	      this.cloudServerHostHeaderOverride = defaults.cloudServerHostHeaderOverride;
    	      this.cloudServerTargeting = defaults.cloudServerTargeting;
    	      this.continent = defaults.continent;
    	      this.country = defaults.country;
    	      this.datacenterId = defaults.datacenterId;
    	      this.defaultLoadObjects = defaults.defaultLoadObjects;
    	      this.latitude = defaults.latitude;
    	      this.links = defaults.links;
    	      this.longitude = defaults.longitude;
    	      this.nickname = defaults.nickname;
    	      this.scorePenalty = defaults.scorePenalty;
    	      this.servermonitorPool = defaults.servermonitorPool;
    	      this.stateOrProvince = defaults.stateOrProvince;
    	      this.virtual = defaults.virtual;
        }

        @CustomType.Setter
        public Builder city(String city) {
            if (city == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "city");
            }
            this.city = city;
            return this;
        }
        @CustomType.Setter
        public Builder cloneOf(Integer cloneOf) {
            if (cloneOf == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "cloneOf");
            }
            this.cloneOf = cloneOf;
            return this;
        }
        @CustomType.Setter
        public Builder cloudServerHostHeaderOverride(Boolean cloudServerHostHeaderOverride) {
            if (cloudServerHostHeaderOverride == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "cloudServerHostHeaderOverride");
            }
            this.cloudServerHostHeaderOverride = cloudServerHostHeaderOverride;
            return this;
        }
        @CustomType.Setter
        public Builder cloudServerTargeting(Boolean cloudServerTargeting) {
            if (cloudServerTargeting == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "cloudServerTargeting");
            }
            this.cloudServerTargeting = cloudServerTargeting;
            return this;
        }
        @CustomType.Setter
        public Builder continent(String continent) {
            if (continent == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "continent");
            }
            this.continent = continent;
            return this;
        }
        @CustomType.Setter
        public Builder country(String country) {
            if (country == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "country");
            }
            this.country = country;
            return this;
        }
        @CustomType.Setter
        public Builder datacenterId(Integer datacenterId) {
            if (datacenterId == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "datacenterId");
            }
            this.datacenterId = datacenterId;
            return this;
        }
        @CustomType.Setter
        public Builder defaultLoadObjects(List<GetGtmDatacentersDatacenterDefaultLoadObject> defaultLoadObjects) {
            if (defaultLoadObjects == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "defaultLoadObjects");
            }
            this.defaultLoadObjects = defaultLoadObjects;
            return this;
        }
        public Builder defaultLoadObjects(GetGtmDatacentersDatacenterDefaultLoadObject... defaultLoadObjects) {
            return defaultLoadObjects(List.of(defaultLoadObjects));
        }
        @CustomType.Setter
        public Builder latitude(Double latitude) {
            if (latitude == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "latitude");
            }
            this.latitude = latitude;
            return this;
        }
        @CustomType.Setter
        public Builder links(List<GetGtmDatacentersDatacenterLink> links) {
            if (links == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "links");
            }
            this.links = links;
            return this;
        }
        public Builder links(GetGtmDatacentersDatacenterLink... links) {
            return links(List.of(links));
        }
        @CustomType.Setter
        public Builder longitude(Double longitude) {
            if (longitude == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "longitude");
            }
            this.longitude = longitude;
            return this;
        }
        @CustomType.Setter
        public Builder nickname(String nickname) {
            if (nickname == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "nickname");
            }
            this.nickname = nickname;
            return this;
        }
        @CustomType.Setter
        public Builder scorePenalty(Integer scorePenalty) {
            if (scorePenalty == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "scorePenalty");
            }
            this.scorePenalty = scorePenalty;
            return this;
        }
        @CustomType.Setter
        public Builder servermonitorPool(String servermonitorPool) {
            if (servermonitorPool == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "servermonitorPool");
            }
            this.servermonitorPool = servermonitorPool;
            return this;
        }
        @CustomType.Setter
        public Builder stateOrProvince(String stateOrProvince) {
            if (stateOrProvince == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "stateOrProvince");
            }
            this.stateOrProvince = stateOrProvince;
            return this;
        }
        @CustomType.Setter
        public Builder virtual(Boolean virtual) {
            if (virtual == null) {
              throw new MissingRequiredPropertyException("GetGtmDatacentersDatacenter", "virtual");
            }
            this.virtual = virtual;
            return this;
        }
        public GetGtmDatacentersDatacenter build() {
            final var _resultValue = new GetGtmDatacentersDatacenter();
            _resultValue.city = city;
            _resultValue.cloneOf = cloneOf;
            _resultValue.cloudServerHostHeaderOverride = cloudServerHostHeaderOverride;
            _resultValue.cloudServerTargeting = cloudServerTargeting;
            _resultValue.continent = continent;
            _resultValue.country = country;
            _resultValue.datacenterId = datacenterId;
            _resultValue.defaultLoadObjects = defaultLoadObjects;
            _resultValue.latitude = latitude;
            _resultValue.links = links;
            _resultValue.longitude = longitude;
            _resultValue.nickname = nickname;
            _resultValue.scorePenalty = scorePenalty;
            _resultValue.servermonitorPool = servermonitorPool;
            _resultValue.stateOrProvince = stateOrProvince;
            _resultValue.virtual = virtual;
            return _resultValue;
        }
    }
}
