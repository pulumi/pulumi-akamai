// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppSecConfigurationArgs Empty = new AppSecConfigurationArgs();

    /**
     * Unique identifier of the Akamai contract associated with the new configuration
     * 
     */
    @Import(name="contractId", required=true)
    private Output<String> contractId;

    /**
     * @return Unique identifier of the Akamai contract associated with the new configuration
     * 
     */
    public Output<String> contractId() {
        return this.contractId;
    }

    /**
     * Unique identifier of the existing configuration being cloned to create the new configuration
     * 
     */
    @Import(name="createFromConfigId")
    private @Nullable Output<Integer> createFromConfigId;

    /**
     * @return Unique identifier of the existing configuration being cloned to create the new configuration
     * 
     */
    public Optional<Output<Integer>> createFromConfigId() {
        return Optional.ofNullable(this.createFromConfigId);
    }

    /**
     * Version number of the existing configuration being cloned to create the new configuration
     * 
     */
    @Import(name="createFromVersion")
    private @Nullable Output<Integer> createFromVersion;

    /**
     * @return Version number of the existing configuration being cloned to create the new configuration
     * 
     */
    public Optional<Output<Integer>> createFromVersion() {
        return Optional.ofNullable(this.createFromVersion);
    }

    /**
     * Brief description of the new configuration
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return Brief description of the new configuration
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * Unique identifier of the contract group associated with the new configuration
     * 
     */
    @Import(name="groupId", required=true)
    private Output<Integer> groupId;

    /**
     * @return Unique identifier of the contract group associated with the new configuration
     * 
     */
    public Output<Integer> groupId() {
        return this.groupId;
    }

    /**
     * Hostnames to be protected by the new configuration
     * 
     */
    @Import(name="hostNames", required=true)
    private Output<List<String>> hostNames;

    /**
     * @return Hostnames to be protected by the new configuration
     * 
     */
    public Output<List<String>> hostNames() {
        return this.hostNames;
    }

    /**
     * Name of the new configuration
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the new configuration
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private AppSecConfigurationArgs() {}

    private AppSecConfigurationArgs(AppSecConfigurationArgs $) {
        this.contractId = $.contractId;
        this.createFromConfigId = $.createFromConfigId;
        this.createFromVersion = $.createFromVersion;
        this.description = $.description;
        this.groupId = $.groupId;
        this.hostNames = $.hostNames;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecConfigurationArgs $;

        public Builder() {
            $ = new AppSecConfigurationArgs();
        }

        public Builder(AppSecConfigurationArgs defaults) {
            $ = new AppSecConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contractId Unique identifier of the Akamai contract associated with the new configuration
         * 
         * @return builder
         * 
         */
        public Builder contractId(Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        /**
         * @param contractId Unique identifier of the Akamai contract associated with the new configuration
         * 
         * @return builder
         * 
         */
        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        /**
         * @param createFromConfigId Unique identifier of the existing configuration being cloned to create the new configuration
         * 
         * @return builder
         * 
         */
        public Builder createFromConfigId(@Nullable Output<Integer> createFromConfigId) {
            $.createFromConfigId = createFromConfigId;
            return this;
        }

        /**
         * @param createFromConfigId Unique identifier of the existing configuration being cloned to create the new configuration
         * 
         * @return builder
         * 
         */
        public Builder createFromConfigId(Integer createFromConfigId) {
            return createFromConfigId(Output.of(createFromConfigId));
        }

        /**
         * @param createFromVersion Version number of the existing configuration being cloned to create the new configuration
         * 
         * @return builder
         * 
         */
        public Builder createFromVersion(@Nullable Output<Integer> createFromVersion) {
            $.createFromVersion = createFromVersion;
            return this;
        }

        /**
         * @param createFromVersion Version number of the existing configuration being cloned to create the new configuration
         * 
         * @return builder
         * 
         */
        public Builder createFromVersion(Integer createFromVersion) {
            return createFromVersion(Output.of(createFromVersion));
        }

        /**
         * @param description Brief description of the new configuration
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Brief description of the new configuration
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param groupId Unique identifier of the contract group associated with the new configuration
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output<Integer> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId Unique identifier of the contract group associated with the new configuration
         * 
         * @return builder
         * 
         */
        public Builder groupId(Integer groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param hostNames Hostnames to be protected by the new configuration
         * 
         * @return builder
         * 
         */
        public Builder hostNames(Output<List<String>> hostNames) {
            $.hostNames = hostNames;
            return this;
        }

        /**
         * @param hostNames Hostnames to be protected by the new configuration
         * 
         * @return builder
         * 
         */
        public Builder hostNames(List<String> hostNames) {
            return hostNames(Output.of(hostNames));
        }

        /**
         * @param hostNames Hostnames to be protected by the new configuration
         * 
         * @return builder
         * 
         */
        public Builder hostNames(String... hostNames) {
            return hostNames(List.of(hostNames));
        }

        /**
         * @param name Name of the new configuration
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the new configuration
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AppSecConfigurationArgs build() {
            if ($.contractId == null) {
                throw new MissingRequiredPropertyException("AppSecConfigurationArgs", "contractId");
            }
            if ($.description == null) {
                throw new MissingRequiredPropertyException("AppSecConfigurationArgs", "description");
            }
            if ($.groupId == null) {
                throw new MissingRequiredPropertyException("AppSecConfigurationArgs", "groupId");
            }
            if ($.hostNames == null) {
                throw new MissingRequiredPropertyException("AppSecConfigurationArgs", "hostNames");
            }
            return $;
        }
    }

}
