// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetIamAllowedApisAllowedApi;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIamAllowedApisResult {
    private @Nullable Boolean allowAccountSwitch;
    private List<GetIamAllowedApisAllowedApi> allowedApis;
    private @Nullable String clientType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String username;

    private GetIamAllowedApisResult() {}
    public Optional<Boolean> allowAccountSwitch() {
        return Optional.ofNullable(this.allowAccountSwitch);
    }
    public List<GetIamAllowedApisAllowedApi> allowedApis() {
        return this.allowedApis;
    }
    public Optional<String> clientType() {
        return Optional.ofNullable(this.clientType);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamAllowedApisResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowAccountSwitch;
        private List<GetIamAllowedApisAllowedApi> allowedApis;
        private @Nullable String clientType;
        private String id;
        private String username;
        public Builder() {}
        public Builder(GetIamAllowedApisResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowAccountSwitch = defaults.allowAccountSwitch;
    	      this.allowedApis = defaults.allowedApis;
    	      this.clientType = defaults.clientType;
    	      this.id = defaults.id;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder allowAccountSwitch(@Nullable Boolean allowAccountSwitch) {

            this.allowAccountSwitch = allowAccountSwitch;
            return this;
        }
        @CustomType.Setter
        public Builder allowedApis(List<GetIamAllowedApisAllowedApi> allowedApis) {
            if (allowedApis == null) {
              throw new MissingRequiredPropertyException("GetIamAllowedApisResult", "allowedApis");
            }
            this.allowedApis = allowedApis;
            return this;
        }
        public Builder allowedApis(GetIamAllowedApisAllowedApi... allowedApis) {
            return allowedApis(List.of(allowedApis));
        }
        @CustomType.Setter
        public Builder clientType(@Nullable String clientType) {

            this.clientType = clientType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIamAllowedApisResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetIamAllowedApisResult", "username");
            }
            this.username = username;
            return this;
        }
        public GetIamAllowedApisResult build() {
            final var _resultValue = new GetIamAllowedApisResult();
            _resultValue.allowAccountSwitch = allowAccountSwitch;
            _resultValue.allowedApis = allowedApis;
            _resultValue.clientType = clientType;
            _resultValue.id = id;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
