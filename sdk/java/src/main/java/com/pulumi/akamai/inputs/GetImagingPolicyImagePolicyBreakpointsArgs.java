// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyBreakpointsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyBreakpointsArgs Empty = new GetImagingPolicyImagePolicyBreakpointsArgs();

    @Import(name="widths")
    private @Nullable Output<List<Integer>> widths;

    public Optional<Output<List<Integer>>> widths() {
        return Optional.ofNullable(this.widths);
    }

    private GetImagingPolicyImagePolicyBreakpointsArgs() {}

    private GetImagingPolicyImagePolicyBreakpointsArgs(GetImagingPolicyImagePolicyBreakpointsArgs $) {
        this.widths = $.widths;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyBreakpointsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyBreakpointsArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyBreakpointsArgs();
        }

        public Builder(GetImagingPolicyImagePolicyBreakpointsArgs defaults) {
            $ = new GetImagingPolicyImagePolicyBreakpointsArgs(Objects.requireNonNull(defaults));
        }

        public Builder widths(@Nullable Output<List<Integer>> widths) {
            $.widths = widths;
            return this;
        }

        public Builder widths(List<Integer> widths) {
            return widths(Output.of(widths));
        }

        public Builder widths(Integer... widths) {
            return widths(List.of(widths));
        }

        public GetImagingPolicyImagePolicyBreakpointsArgs build() {
            return $;
        }
    }

}
