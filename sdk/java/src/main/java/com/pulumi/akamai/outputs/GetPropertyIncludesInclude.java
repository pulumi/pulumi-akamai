// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPropertyIncludesInclude {
    private String id;
    private Integer latestVersion;
    private String name;
    private String productionVersion;
    private String stagingVersion;
    private String type;

    private GetPropertyIncludesInclude() {}
    public String id() {
        return this.id;
    }
    public Integer latestVersion() {
        return this.latestVersion;
    }
    public String name() {
        return this.name;
    }
    public String productionVersion() {
        return this.productionVersion;
    }
    public String stagingVersion() {
        return this.stagingVersion;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyIncludesInclude defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Integer latestVersion;
        private String name;
        private String productionVersion;
        private String stagingVersion;
        private String type;
        public Builder() {}
        public Builder(GetPropertyIncludesInclude defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.latestVersion = defaults.latestVersion;
    	      this.name = defaults.name;
    	      this.productionVersion = defaults.productionVersion;
    	      this.stagingVersion = defaults.stagingVersion;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludesInclude", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder latestVersion(Integer latestVersion) {
            if (latestVersion == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludesInclude", "latestVersion");
            }
            this.latestVersion = latestVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludesInclude", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder productionVersion(String productionVersion) {
            if (productionVersion == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludesInclude", "productionVersion");
            }
            this.productionVersion = productionVersion;
            return this;
        }
        @CustomType.Setter
        public Builder stagingVersion(String stagingVersion) {
            if (stagingVersion == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludesInclude", "stagingVersion");
            }
            this.stagingVersion = stagingVersion;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludesInclude", "type");
            }
            this.type = type;
            return this;
        }
        public GetPropertyIncludesInclude build() {
            final var _resultValue = new GetPropertyIncludesInclude();
            _resultValue.id = id;
            _resultValue.latestVersion = latestVersion;
            _resultValue.name = name;
            _resultValue.productionVersion = productionVersion;
            _resultValue.stagingVersion = stagingVersion;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
