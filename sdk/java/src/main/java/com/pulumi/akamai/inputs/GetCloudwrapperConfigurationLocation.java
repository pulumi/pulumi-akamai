// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetCloudwrapperConfigurationLocationCapacity;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GetCloudwrapperConfigurationLocation extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudwrapperConfigurationLocation Empty = new GetCloudwrapperConfigurationLocation();

    @Import(name="capacity", required=true)
    private GetCloudwrapperConfigurationLocationCapacity capacity;

    public GetCloudwrapperConfigurationLocationCapacity capacity() {
        return this.capacity;
    }

    @Import(name="comments", required=true)
    private String comments;

    public String comments() {
        return this.comments;
    }

    @Import(name="mapName", required=true)
    private String mapName;

    public String mapName() {
        return this.mapName;
    }

    @Import(name="trafficTypeId", required=true)
    private Integer trafficTypeId;

    public Integer trafficTypeId() {
        return this.trafficTypeId;
    }

    private GetCloudwrapperConfigurationLocation() {}

    private GetCloudwrapperConfigurationLocation(GetCloudwrapperConfigurationLocation $) {
        this.capacity = $.capacity;
        this.comments = $.comments;
        this.mapName = $.mapName;
        this.trafficTypeId = $.trafficTypeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudwrapperConfigurationLocation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudwrapperConfigurationLocation $;

        public Builder() {
            $ = new GetCloudwrapperConfigurationLocation();
        }

        public Builder(GetCloudwrapperConfigurationLocation defaults) {
            $ = new GetCloudwrapperConfigurationLocation(Objects.requireNonNull(defaults));
        }

        public Builder capacity(GetCloudwrapperConfigurationLocationCapacity capacity) {
            $.capacity = capacity;
            return this;
        }

        public Builder comments(String comments) {
            $.comments = comments;
            return this;
        }

        public Builder mapName(String mapName) {
            $.mapName = mapName;
            return this;
        }

        public Builder trafficTypeId(Integer trafficTypeId) {
            $.trafficTypeId = trafficTypeId;
            return this;
        }

        public GetCloudwrapperConfigurationLocation build() {
            $.capacity = Objects.requireNonNull($.capacity, "expected parameter 'capacity' to be non-null");
            $.comments = Objects.requireNonNull($.comments, "expected parameter 'comments' to be non-null");
            $.mapName = Objects.requireNonNull($.mapName, "expected parameter 'mapName' to be non-null");
            $.trafficTypeId = Objects.requireNonNull($.trafficTypeId, "expected parameter 'trafficTypeId' to be non-null");
            return $;
        }
    }

}
