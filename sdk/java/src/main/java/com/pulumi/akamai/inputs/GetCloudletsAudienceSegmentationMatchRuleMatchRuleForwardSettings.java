// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings Empty = new GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings();

    /**
     * The ID of the Conditional Origin requests are forwarded to
     * 
     */
    @Import(name="originId")
    private @Nullable String originId;

    /**
     * @return The ID of the Conditional Origin requests are forwarded to
     * 
     */
    public Optional<String> originId() {
        return Optional.ofNullable(this.originId);
    }

    /**
     * If a value is provided and match conditions are met, this property defines the path/resource/query string to rewrite URL for the incoming request.
     * 
     */
    @Import(name="pathAndQs")
    private @Nullable String pathAndQs;

    /**
     * @return If a value is provided and match conditions are met, this property defines the path/resource/query string to rewrite URL for the incoming request.
     * 
     */
    public Optional<String> pathAndQs() {
        return Optional.ofNullable(this.pathAndQs);
    }

    /**
     * If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL.
     * 
     */
    @Import(name="useIncomingQueryString")
    private @Nullable Boolean useIncomingQueryString;

    /**
     * @return If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL.
     * 
     */
    public Optional<Boolean> useIncomingQueryString() {
        return Optional.ofNullable(this.useIncomingQueryString);
    }

    private GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings() {}

    private GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings(GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings $) {
        this.originId = $.originId;
        this.pathAndQs = $.pathAndQs;
        this.useIncomingQueryString = $.useIncomingQueryString;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings $;

        public Builder() {
            $ = new GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings();
        }

        public Builder(GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings defaults) {
            $ = new GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings(Objects.requireNonNull(defaults));
        }

        /**
         * @param originId The ID of the Conditional Origin requests are forwarded to
         * 
         * @return builder
         * 
         */
        public Builder originId(@Nullable String originId) {
            $.originId = originId;
            return this;
        }

        /**
         * @param pathAndQs If a value is provided and match conditions are met, this property defines the path/resource/query string to rewrite URL for the incoming request.
         * 
         * @return builder
         * 
         */
        public Builder pathAndQs(@Nullable String pathAndQs) {
            $.pathAndQs = pathAndQs;
            return this;
        }

        /**
         * @param useIncomingQueryString If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL.
         * 
         * @return builder
         * 
         */
        public Builder useIncomingQueryString(@Nullable Boolean useIncomingQueryString) {
            $.useIncomingQueryString = useIncomingQueryString;
            return this;
        }

        public GetCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings build() {
            return $;
        }
    }

}
