// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class BotmanRecategorizedAkamaiDefinedBotArgs extends com.pulumi.resources.ResourceArgs {

    public static final BotmanRecategorizedAkamaiDefinedBotArgs Empty = new BotmanRecategorizedAkamaiDefinedBotArgs();

    @Import(name="botId", required=true)
    private Output<String> botId;

    public Output<String> botId() {
        return this.botId;
    }

    @Import(name="categoryId", required=true)
    private Output<String> categoryId;

    public Output<String> categoryId() {
        return this.categoryId;
    }

    @Import(name="configId", required=true)
    private Output<Integer> configId;

    public Output<Integer> configId() {
        return this.configId;
    }

    private BotmanRecategorizedAkamaiDefinedBotArgs() {}

    private BotmanRecategorizedAkamaiDefinedBotArgs(BotmanRecategorizedAkamaiDefinedBotArgs $) {
        this.botId = $.botId;
        this.categoryId = $.categoryId;
        this.configId = $.configId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotmanRecategorizedAkamaiDefinedBotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotmanRecategorizedAkamaiDefinedBotArgs $;

        public Builder() {
            $ = new BotmanRecategorizedAkamaiDefinedBotArgs();
        }

        public Builder(BotmanRecategorizedAkamaiDefinedBotArgs defaults) {
            $ = new BotmanRecategorizedAkamaiDefinedBotArgs(Objects.requireNonNull(defaults));
        }

        public Builder botId(Output<String> botId) {
            $.botId = botId;
            return this;
        }

        public Builder botId(String botId) {
            return botId(Output.of(botId));
        }

        public Builder categoryId(Output<String> categoryId) {
            $.categoryId = categoryId;
            return this;
        }

        public Builder categoryId(String categoryId) {
            return categoryId(Output.of(categoryId));
        }

        public Builder configId(Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        public BotmanRecategorizedAkamaiDefinedBotArgs build() {
            $.botId = Objects.requireNonNull($.botId, "expected parameter 'botId' to be non-null");
            $.categoryId = Objects.requireNonNull($.categoryId, "expected parameter 'categoryId' to be non-null");
            $.configId = Objects.requireNonNull($.configId, "expected parameter 'configId' to be non-null");
            return $;
        }
    }

}
