// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlCloudletPolicyArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlNetStorageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs Empty = new GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs();

    @Import(name="branded403File")
    private @Nullable Output<String> branded403File;

    public Optional<Output<String>> branded403File() {
        return Optional.ofNullable(this.branded403File);
    }

    @Import(name="branded403StatusCode")
    private @Nullable Output<Integer> branded403StatusCode;

    public Optional<Output<Integer>> branded403StatusCode() {
        return Optional.ofNullable(this.branded403StatusCode);
    }

    @Import(name="branded403Url")
    private @Nullable Output<String> branded403Url;

    public Optional<Output<String>> branded403Url() {
        return Optional.ofNullable(this.branded403Url);
    }

    @Import(name="brandedDenyCacheTtl")
    private @Nullable Output<Integer> brandedDenyCacheTtl;

    public Optional<Output<Integer>> brandedDenyCacheTtl() {
        return Optional.ofNullable(this.brandedDenyCacheTtl);
    }

    @Import(name="cloudletPolicy")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlCloudletPolicyArgs> cloudletPolicy;

    public Optional<Output<GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlCloudletPolicyArgs>> cloudletPolicy() {
        return Optional.ofNullable(this.cloudletPolicy);
    }

    @Import(name="cloudletSharedPolicy")
    private @Nullable Output<Integer> cloudletSharedPolicy;

    public Optional<Output<Integer>> cloudletSharedPolicy() {
        return Optional.ofNullable(this.cloudletSharedPolicy);
    }

    @Import(name="enableBranded403")
    private @Nullable Output<Boolean> enableBranded403;

    public Optional<Output<Boolean>> enableBranded403() {
        return Optional.ofNullable(this.enableBranded403);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="isSharedPolicy")
    private @Nullable Output<Boolean> isSharedPolicy;

    public Optional<Output<Boolean>> isSharedPolicy() {
        return Optional.ofNullable(this.isSharedPolicy);
    }

    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    @Import(name="netStorage")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlNetStorageArgs> netStorage;

    public Optional<Output<GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlNetStorageArgs>> netStorage() {
        return Optional.ofNullable(this.netStorage);
    }

    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs() {}

    private GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs(GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs $) {
        this.branded403File = $.branded403File;
        this.branded403StatusCode = $.branded403StatusCode;
        this.branded403Url = $.branded403Url;
        this.brandedDenyCacheTtl = $.brandedDenyCacheTtl;
        this.cloudletPolicy = $.cloudletPolicy;
        this.cloudletSharedPolicy = $.cloudletSharedPolicy;
        this.enableBranded403 = $.enableBranded403;
        this.enabled = $.enabled;
        this.isSharedPolicy = $.isSharedPolicy;
        this.locked = $.locked;
        this.netStorage = $.netStorage;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs(Objects.requireNonNull(defaults));
        }

        public Builder branded403File(@Nullable Output<String> branded403File) {
            $.branded403File = branded403File;
            return this;
        }

        public Builder branded403File(String branded403File) {
            return branded403File(Output.of(branded403File));
        }

        public Builder branded403StatusCode(@Nullable Output<Integer> branded403StatusCode) {
            $.branded403StatusCode = branded403StatusCode;
            return this;
        }

        public Builder branded403StatusCode(Integer branded403StatusCode) {
            return branded403StatusCode(Output.of(branded403StatusCode));
        }

        public Builder branded403Url(@Nullable Output<String> branded403Url) {
            $.branded403Url = branded403Url;
            return this;
        }

        public Builder branded403Url(String branded403Url) {
            return branded403Url(Output.of(branded403Url));
        }

        public Builder brandedDenyCacheTtl(@Nullable Output<Integer> brandedDenyCacheTtl) {
            $.brandedDenyCacheTtl = brandedDenyCacheTtl;
            return this;
        }

        public Builder brandedDenyCacheTtl(Integer brandedDenyCacheTtl) {
            return brandedDenyCacheTtl(Output.of(brandedDenyCacheTtl));
        }

        public Builder cloudletPolicy(@Nullable Output<GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlCloudletPolicyArgs> cloudletPolicy) {
            $.cloudletPolicy = cloudletPolicy;
            return this;
        }

        public Builder cloudletPolicy(GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlCloudletPolicyArgs cloudletPolicy) {
            return cloudletPolicy(Output.of(cloudletPolicy));
        }

        public Builder cloudletSharedPolicy(@Nullable Output<Integer> cloudletSharedPolicy) {
            $.cloudletSharedPolicy = cloudletSharedPolicy;
            return this;
        }

        public Builder cloudletSharedPolicy(Integer cloudletSharedPolicy) {
            return cloudletSharedPolicy(Output.of(cloudletSharedPolicy));
        }

        public Builder enableBranded403(@Nullable Output<Boolean> enableBranded403) {
            $.enableBranded403 = enableBranded403;
            return this;
        }

        public Builder enableBranded403(Boolean enableBranded403) {
            return enableBranded403(Output.of(enableBranded403));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder isSharedPolicy(@Nullable Output<Boolean> isSharedPolicy) {
            $.isSharedPolicy = isSharedPolicy;
            return this;
        }

        public Builder isSharedPolicy(Boolean isSharedPolicy) {
            return isSharedPolicy(Output.of(isSharedPolicy));
        }

        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        public Builder netStorage(@Nullable Output<GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlNetStorageArgs> netStorage) {
            $.netStorage = netStorage;
            return this;
        }

        public Builder netStorage(GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlNetStorageArgs netStorage) {
            return netStorage(Output.of(netStorage));
        }

        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20230920BehaviorRequestControlArgs build() {
            return $;
        }
    }

}
