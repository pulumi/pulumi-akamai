// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionDefault;
import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionEqual;
import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionGreaterThan;
import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionLessThan;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimension {
    private @Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionDefault default_;
    private @Nullable String dimension;
    private @Nullable String dimensionVar;
    private @Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionEqual equal;
    private @Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionGreaterThan greaterThan;
    private @Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionLessThan lessThan;
    private @Nullable String value;
    private @Nullable String valueVar;

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimension() {}
    public Optional<GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionDefault> default_() {
        return Optional.ofNullable(this.default_);
    }
    public Optional<String> dimension() {
        return Optional.ofNullable(this.dimension);
    }
    public Optional<String> dimensionVar() {
        return Optional.ofNullable(this.dimensionVar);
    }
    public Optional<GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionEqual> equal() {
        return Optional.ofNullable(this.equal);
    }
    public Optional<GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionGreaterThan> greaterThan() {
        return Optional.ofNullable(this.greaterThan);
    }
    public Optional<GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionLessThan> lessThan() {
        return Optional.ofNullable(this.lessThan);
    }
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }
    public Optional<String> valueVar() {
        return Optional.ofNullable(this.valueVar);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimension defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionDefault default_;
        private @Nullable String dimension;
        private @Nullable String dimensionVar;
        private @Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionEqual equal;
        private @Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionGreaterThan greaterThan;
        private @Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionLessThan lessThan;
        private @Nullable String value;
        private @Nullable String valueVar;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimension defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.default_ = defaults.default_;
    	      this.dimension = defaults.dimension;
    	      this.dimensionVar = defaults.dimensionVar;
    	      this.equal = defaults.equal;
    	      this.greaterThan = defaults.greaterThan;
    	      this.lessThan = defaults.lessThan;
    	      this.value = defaults.value;
    	      this.valueVar = defaults.valueVar;
        }

        @CustomType.Setter("default")
        public Builder default_(@Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionDefault default_) {
            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder dimension(@Nullable String dimension) {
            this.dimension = dimension;
            return this;
        }
        @CustomType.Setter
        public Builder dimensionVar(@Nullable String dimensionVar) {
            this.dimensionVar = dimensionVar;
            return this;
        }
        @CustomType.Setter
        public Builder equal(@Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionEqual equal) {
            this.equal = equal;
            return this;
        }
        @CustomType.Setter
        public Builder greaterThan(@Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionGreaterThan greaterThan) {
            this.greaterThan = greaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder lessThan(@Nullable GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimensionLessThan lessThan) {
            this.lessThan = lessThan;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        @CustomType.Setter
        public Builder valueVar(@Nullable String valueVar) {
            this.valueVar = valueVar;
            return this;
        }
        public GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimension build() {
            final var o = new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfOrientationLandscapeIfDimension();
            o.default_ = default_;
            o.dimension = dimension;
            o.dimensionVar = dimensionVar;
            o.equal = equal;
            o.greaterThan = greaterThan;
            o.lessThan = lessThan;
            o.value = value;
            o.valueVar = valueVar;
            return o;
        }
    }
}
