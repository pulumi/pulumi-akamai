// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecSecurityPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppSecSecurityPolicyArgs Empty = new AppSecSecurityPolicyArgs();

    /**
     * Unique identifier of the security configuration
     * 
     */
    @Import(name="configId", required=true)
    private Output<Integer> configId;

    /**
     * @return Unique identifier of the security configuration
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }

    /**
     * Unique identifier of the existing security policy being cloned
     * 
     */
    @Import(name="createFromSecurityPolicyId")
    private @Nullable Output<String> createFromSecurityPolicyId;

    /**
     * @return Unique identifier of the existing security policy being cloned
     * 
     */
    public Optional<Output<String>> createFromSecurityPolicyId() {
        return Optional.ofNullable(this.createFromSecurityPolicyId);
    }

    /**
     * Whether to assign default settings to the new security policy
     * 
     */
    @Import(name="defaultSettings")
    private @Nullable Output<Boolean> defaultSettings;

    /**
     * @return Whether to assign default settings to the new security policy
     * 
     */
    public Optional<Output<Boolean>> defaultSettings() {
        return Optional.ofNullable(this.defaultSettings);
    }

    /**
     * Name of the new security policy
     * 
     */
    @Import(name="securityPolicyName", required=true)
    private Output<String> securityPolicyName;

    /**
     * @return Name of the new security policy
     * 
     */
    public Output<String> securityPolicyName() {
        return this.securityPolicyName;
    }

    /**
     * Four-character alphanumeric string prefix used in creating the security policy ID
     * 
     */
    @Import(name="securityPolicyPrefix", required=true)
    private Output<String> securityPolicyPrefix;

    /**
     * @return Four-character alphanumeric string prefix used in creating the security policy ID
     * 
     */
    public Output<String> securityPolicyPrefix() {
        return this.securityPolicyPrefix;
    }

    private AppSecSecurityPolicyArgs() {}

    private AppSecSecurityPolicyArgs(AppSecSecurityPolicyArgs $) {
        this.configId = $.configId;
        this.createFromSecurityPolicyId = $.createFromSecurityPolicyId;
        this.defaultSettings = $.defaultSettings;
        this.securityPolicyName = $.securityPolicyName;
        this.securityPolicyPrefix = $.securityPolicyPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecSecurityPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecSecurityPolicyArgs $;

        public Builder() {
            $ = new AppSecSecurityPolicyArgs();
        }

        public Builder(AppSecSecurityPolicyArgs defaults) {
            $ = new AppSecSecurityPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param createFromSecurityPolicyId Unique identifier of the existing security policy being cloned
         * 
         * @return builder
         * 
         */
        public Builder createFromSecurityPolicyId(@Nullable Output<String> createFromSecurityPolicyId) {
            $.createFromSecurityPolicyId = createFromSecurityPolicyId;
            return this;
        }

        /**
         * @param createFromSecurityPolicyId Unique identifier of the existing security policy being cloned
         * 
         * @return builder
         * 
         */
        public Builder createFromSecurityPolicyId(String createFromSecurityPolicyId) {
            return createFromSecurityPolicyId(Output.of(createFromSecurityPolicyId));
        }

        /**
         * @param defaultSettings Whether to assign default settings to the new security policy
         * 
         * @return builder
         * 
         */
        public Builder defaultSettings(@Nullable Output<Boolean> defaultSettings) {
            $.defaultSettings = defaultSettings;
            return this;
        }

        /**
         * @param defaultSettings Whether to assign default settings to the new security policy
         * 
         * @return builder
         * 
         */
        public Builder defaultSettings(Boolean defaultSettings) {
            return defaultSettings(Output.of(defaultSettings));
        }

        /**
         * @param securityPolicyName Name of the new security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyName(Output<String> securityPolicyName) {
            $.securityPolicyName = securityPolicyName;
            return this;
        }

        /**
         * @param securityPolicyName Name of the new security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyName(String securityPolicyName) {
            return securityPolicyName(Output.of(securityPolicyName));
        }

        /**
         * @param securityPolicyPrefix Four-character alphanumeric string prefix used in creating the security policy ID
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyPrefix(Output<String> securityPolicyPrefix) {
            $.securityPolicyPrefix = securityPolicyPrefix;
            return this;
        }

        /**
         * @param securityPolicyPrefix Four-character alphanumeric string prefix used in creating the security policy ID
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyPrefix(String securityPolicyPrefix) {
            return securityPolicyPrefix(Output.of(securityPolicyPrefix));
        }

        public AppSecSecurityPolicyArgs build() {
            if ($.configId == null) {
                throw new MissingRequiredPropertyException("AppSecSecurityPolicyArgs", "configId");
            }
            if ($.securityPolicyName == null) {
                throw new MissingRequiredPropertyException("AppSecSecurityPolicyArgs", "securityPolicyName");
            }
            if ($.securityPolicyPrefix == null) {
                throw new MissingRequiredPropertyException("AppSecSecurityPolicyArgs", "securityPolicyPrefix");
            }
            return $;
        }
    }

}
