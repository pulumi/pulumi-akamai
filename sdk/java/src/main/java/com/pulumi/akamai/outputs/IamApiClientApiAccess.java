// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.IamApiClientApiAccessApi;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class IamApiClientApiAccess {
    /**
     * @return Enables the API client to access a full set of available APIs.
     * 
     */
    private Boolean allAccessibleApis;
    /**
     * @return The set of APIs the API client can access when `all_accessible_apis` is `false`.
     * 
     */
    private @Nullable List<IamApiClientApiAccessApi> apis;

    private IamApiClientApiAccess() {}
    /**
     * @return Enables the API client to access a full set of available APIs.
     * 
     */
    public Boolean allAccessibleApis() {
        return this.allAccessibleApis;
    }
    /**
     * @return The set of APIs the API client can access when `all_accessible_apis` is `false`.
     * 
     */
    public List<IamApiClientApiAccessApi> apis() {
        return this.apis == null ? List.of() : this.apis;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IamApiClientApiAccess defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allAccessibleApis;
        private @Nullable List<IamApiClientApiAccessApi> apis;
        public Builder() {}
        public Builder(IamApiClientApiAccess defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allAccessibleApis = defaults.allAccessibleApis;
    	      this.apis = defaults.apis;
        }

        @CustomType.Setter
        public Builder allAccessibleApis(Boolean allAccessibleApis) {
            if (allAccessibleApis == null) {
              throw new MissingRequiredPropertyException("IamApiClientApiAccess", "allAccessibleApis");
            }
            this.allAccessibleApis = allAccessibleApis;
            return this;
        }
        @CustomType.Setter
        public Builder apis(@Nullable List<IamApiClientApiAccessApi> apis) {

            this.apis = apis;
            return this;
        }
        public Builder apis(IamApiClientApiAccessApi... apis) {
            return apis(List.of(apis));
        }
        public IamApiClientApiAccess build() {
            final var _resultValue = new IamApiClientApiAccess();
            _resultValue.allAccessibleApis = allAccessibleApis;
            _resultValue.apis = apis;
            return _resultValue;
        }
    }
}
