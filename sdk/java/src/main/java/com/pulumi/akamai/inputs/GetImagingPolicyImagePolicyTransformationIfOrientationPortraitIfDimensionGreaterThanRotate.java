// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate();

    @Import(name="degrees")
    private @Nullable String degrees;

    public Optional<String> degrees() {
        return Optional.ofNullable(this.degrees);
    }

    @Import(name="degreesVar")
    private @Nullable String degreesVar;

    public Optional<String> degreesVar() {
        return Optional.ofNullable(this.degreesVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate $) {
        this.degrees = $.degrees;
        this.degreesVar = $.degreesVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate(Objects.requireNonNull(defaults));
        }

        public Builder degrees(@Nullable String degrees) {
            $.degrees = degrees;
            return this;
        }

        public Builder degreesVar(@Nullable String degreesVar) {
            $.degreesVar = degreesVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfDimensionGreaterThanRotate build() {
            return $;
        }
    }

}
