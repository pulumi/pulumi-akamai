// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanMonoHue {
    private @Nullable String hue;
    private @Nullable String hueVar;

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanMonoHue() {}
    public Optional<String> hue() {
        return Optional.ofNullable(this.hue);
    }
    public Optional<String> hueVar() {
        return Optional.ofNullable(this.hueVar);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanMonoHue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String hue;
        private @Nullable String hueVar;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanMonoHue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hue = defaults.hue;
    	      this.hueVar = defaults.hueVar;
        }

        @CustomType.Setter
        public Builder hue(@Nullable String hue) {
            this.hue = hue;
            return this;
        }
        @CustomType.Setter
        public Builder hueVar(@Nullable String hueVar) {
            this.hueVar = hueVar;
            return this;
        }
        public GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanMonoHue build() {
            final var o = new GetImagingPolicyImagePolicyTransformationCompoundTransformationIfDimensionLessThanMonoHue();
            o.hue = hue;
            o.hueVar = hueVar;
            return o;
        }
    }
}
