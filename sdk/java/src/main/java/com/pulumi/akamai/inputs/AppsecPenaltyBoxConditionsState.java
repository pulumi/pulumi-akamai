// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppsecPenaltyBoxConditionsState extends com.pulumi.resources.ResourceArgs {

    public static final AppsecPenaltyBoxConditionsState Empty = new AppsecPenaltyBoxConditionsState();

    /**
     * Unique identifier of the security configuration
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return Unique identifier of the security configuration
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * Describes the conditions and the operator to be applied for penalty box
     * 
     */
    @Import(name="penaltyBoxConditions")
    private @Nullable Output<String> penaltyBoxConditions;

    /**
     * @return Describes the conditions and the operator to be applied for penalty box
     * 
     */
    public Optional<Output<String>> penaltyBoxConditions() {
        return Optional.ofNullable(this.penaltyBoxConditions);
    }

    /**
     * Unique identifier of the security policy
     * 
     */
    @Import(name="securityPolicyId")
    private @Nullable Output<String> securityPolicyId;

    /**
     * @return Unique identifier of the security policy
     * 
     */
    public Optional<Output<String>> securityPolicyId() {
        return Optional.ofNullable(this.securityPolicyId);
    }

    private AppsecPenaltyBoxConditionsState() {}

    private AppsecPenaltyBoxConditionsState(AppsecPenaltyBoxConditionsState $) {
        this.configId = $.configId;
        this.penaltyBoxConditions = $.penaltyBoxConditions;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppsecPenaltyBoxConditionsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppsecPenaltyBoxConditionsState $;

        public Builder() {
            $ = new AppsecPenaltyBoxConditionsState();
        }

        public Builder(AppsecPenaltyBoxConditionsState defaults) {
            $ = new AppsecPenaltyBoxConditionsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param penaltyBoxConditions Describes the conditions and the operator to be applied for penalty box
         * 
         * @return builder
         * 
         */
        public Builder penaltyBoxConditions(@Nullable Output<String> penaltyBoxConditions) {
            $.penaltyBoxConditions = penaltyBoxConditions;
            return this;
        }

        /**
         * @param penaltyBoxConditions Describes the conditions and the operator to be applied for penalty box
         * 
         * @return builder
         * 
         */
        public Builder penaltyBoxConditions(String penaltyBoxConditions) {
            return penaltyBoxConditions(Output.of(penaltyBoxConditions));
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(@Nullable Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        public AppsecPenaltyBoxConditionsState build() {
            return $;
        }
    }

}
