// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificate;
import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificateAuthority;
import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20240212BehaviorOriginNetStorage;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20240212BehaviorOrigin {
    /**
     * @return Specifies the hostname to use when forming a cache key.
     * 
     */
    private @Nullable String cacheKeyHostname;
    /**
     * @return Enables `gzip` compression for non-NetStorage origins.
     * 
     */
    private @Nullable Boolean compress;
    /**
     * @return Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
     * 
     */
    private @Nullable List<GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificateAuthority> customCertificateAuthorities;
    /**
     * @return Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
     * 
     */
    private @Nullable List<GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificate> customCertificates;
    /**
     * @return This specifies the name of the custom host header the edge server should pass to the origin.
     * 
     */
    private @Nullable String customForwardHostHeader;
    /**
     * @return Specifies values to look for in the origin certificate&#39;s `Subject Alternate Name` or `Common Name` fields. Specify `{{Origin Hostname}}` and `{{Forward Host Header}}` within the text in the order you want them to be evaluated. (Note that these two template items are not the same as in-line `variables`, which use the same curly-brace syntax.)
     * 
     */
    private @Nullable List<String> customValidCnValues;
    /**
     * @return When enabled on non-NetStorage origins, allows you to send a custom header (the `trueClientIpHeader`) identifying the IP address of the immediate client connecting to the edge server. This may provide more useful information than the standard `X-Forward-For` header, which proxies may modify.
     * 
     */
    private @Nullable Boolean enableTrueClientIp;
    /**
     * @return When the `originType` is set to either `CUSTOMER` or `SAAS_DYNAMIC_ORIGIN`, this specifies which `Host` header to pass to the origin.
     * 
     */
    private @Nullable String forwardHostHeader;
    /**
     * @return Specifies the hostname or IPv4 address of your origin server, from which edge servers can retrieve your content.
     * 
     */
    private @Nullable String hostname;
    /**
     * @return Specifies the port on your origin server to which edge servers should connect for HTTP requests, customarily `80`.
     * 
     */
    private @Nullable Integer httpPort;
    /**
     * @return Specifies the port on your origin server to which edge servers should connect for secure HTTPS requests, customarily `443`. This option only applies if the property is marked as secure. See `Secure property requirements` for guidance.
     * 
     */
    private @Nullable Integer httpsPort;
    /**
     * @return Specifies which IP version to use when getting content from the origin.
     * 
     */
    private @Nullable String ipVersion;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Specifies the maximum TLS version to use for connections to your origin server. As best practice, use `DYNAMIC` to automatically apply the latest supported version.
     * 
     */
    private @Nullable String maxTlsVersion;
    /**
     * @return Specifies the minimum TLS version to use for connections to your origin server.
     * 
     */
    private @Nullable String minTlsVersion;
    /**
     * @return This specifies the media&#39;s origin server.
     * 
     */
    private @Nullable String mslorigin;
    /**
     * @return Specifies the details of the NetStorage server.
     * 
     */
    private @Nullable GetPropertyRulesBuilderRulesV20240212BehaviorOriginNetStorage netStorage;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String originCertificate;
    /**
     * @return Specifies which certificate to trust.
     * 
     */
    private @Nullable String originCertsToHonor;
    /**
     * @return Identifies the Edge Load Balancing origin. This needs to correspond to an `edgeLoadBalancingOrigin` behavior&#39;s `id` attribute within the same property.
     * 
     */
    private @Nullable String originId;
    /**
     * @return For non-NetStorage origins, enabling this adds a Server Name Indication (SNI) header in the SSL request sent to the origin, with the origin hostname as the value. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for more information. If you want to use TLS version 1.3 in your existing properties, enable this option. New properties have this enabled by default.
     * 
     */
    private @Nullable Boolean originSni;
    /**
     * @return Choose where your content is retrieved from.
     * 
     */
    private @Nullable String originType;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String ports;
    /**
     * @return Enabling this allows you to use a `CNAME chain` to determine the hostname for this SaaS dynamic origin.
     * 
     */
    private @Nullable Boolean saasCnameEnabled;
    /**
     * @return Specifies the desired number of hostnames to use in the `CNAME chain`, starting backwards from the edge server.
     * 
     */
    private @Nullable Integer saasCnameLevel;
    /**
     * @return Specifies the name of the cookie that identifies this SaaS dynamic origin.
     * 
     */
    private @Nullable String saasCookie;
    /**
     * @return Specifies the name of the query parameter that identifies this SaaS dynamic origin.
     * 
     */
    private @Nullable String saasQueryString;
    /**
     * @return Specifies the Perl-compatible regular expression match that identifies this SaaS dynamic origin.
     * 
     */
    private @Nullable String saasRegex;
    /**
     * @return Specifies replacement text for what `saasRegex` matches.
     * 
     */
    private @Nullable String saasReplace;
    /**
     * @return Specifies the static part of the SaaS dynamic origin.
     * 
     */
    private @Nullable String saasSuffix;
    /**
     * @return Specifies the part of the request that identifies this SaaS dynamic origin.
     * 
     */
    private @Nullable String saasType;
    /**
     * @return Specifies the origin server&#39;s hostname, IPv4 address, or IPv6 address. Edge servers retrieve your content from this origin server.
     * 
     */
    private @Nullable String secondHostname;
    /**
     * @return Available only for certain products. This specifies whether you want to use an additional origin server address.
     * 
     */
    private @Nullable Boolean secondHostnameEnabled;
    private @Nullable List<String> standardCertificateAuthorities;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    private @Nullable Boolean tls13Support;
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    private @Nullable String tlsVersionTitle;
    /**
     * @return If a client sets the `True-Client-IP` header, the edge server allows it and passes the value to the origin. Otherwise the edge server removes it and sets the value itself.
     * 
     */
    private @Nullable Boolean trueClientIpClientSetting;
    /**
     * @return This specifies the name of the field that identifies the end client&#39;s IP address, for example `True-Client-IP`.
     * 
     */
    private @Nullable String trueClientIpHeader;
    /**
     * @return With a shared `hostname` such as provided by Amazon AWS, sets a unique cache key for your content.
     * 
     */
    private @Nullable Boolean useUniqueCacheKey;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;
    /**
     * @return For non-NetStorage origins, maximize security by controlling which certificates edge servers should trust.
     * 
     */
    private @Nullable String verificationMode;

    private GetPropertyRulesBuilderRulesV20240212BehaviorOrigin() {}
    /**
     * @return Specifies the hostname to use when forming a cache key.
     * 
     */
    public Optional<String> cacheKeyHostname() {
        return Optional.ofNullable(this.cacheKeyHostname);
    }
    /**
     * @return Enables `gzip` compression for non-NetStorage origins.
     * 
     */
    public Optional<Boolean> compress() {
        return Optional.ofNullable(this.compress);
    }
    /**
     * @return Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
     * 
     */
    public List<GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificateAuthority> customCertificateAuthorities() {
        return this.customCertificateAuthorities == null ? List.of() : this.customCertificateAuthorities;
    }
    /**
     * @return Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
     * 
     */
    public List<GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificate> customCertificates() {
        return this.customCertificates == null ? List.of() : this.customCertificates;
    }
    /**
     * @return This specifies the name of the custom host header the edge server should pass to the origin.
     * 
     */
    public Optional<String> customForwardHostHeader() {
        return Optional.ofNullable(this.customForwardHostHeader);
    }
    /**
     * @return Specifies values to look for in the origin certificate&#39;s `Subject Alternate Name` or `Common Name` fields. Specify `{{Origin Hostname}}` and `{{Forward Host Header}}` within the text in the order you want them to be evaluated. (Note that these two template items are not the same as in-line `variables`, which use the same curly-brace syntax.)
     * 
     */
    public List<String> customValidCnValues() {
        return this.customValidCnValues == null ? List.of() : this.customValidCnValues;
    }
    /**
     * @return When enabled on non-NetStorage origins, allows you to send a custom header (the `trueClientIpHeader`) identifying the IP address of the immediate client connecting to the edge server. This may provide more useful information than the standard `X-Forward-For` header, which proxies may modify.
     * 
     */
    public Optional<Boolean> enableTrueClientIp() {
        return Optional.ofNullable(this.enableTrueClientIp);
    }
    /**
     * @return When the `originType` is set to either `CUSTOMER` or `SAAS_DYNAMIC_ORIGIN`, this specifies which `Host` header to pass to the origin.
     * 
     */
    public Optional<String> forwardHostHeader() {
        return Optional.ofNullable(this.forwardHostHeader);
    }
    /**
     * @return Specifies the hostname or IPv4 address of your origin server, from which edge servers can retrieve your content.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return Specifies the port on your origin server to which edge servers should connect for HTTP requests, customarily `80`.
     * 
     */
    public Optional<Integer> httpPort() {
        return Optional.ofNullable(this.httpPort);
    }
    /**
     * @return Specifies the port on your origin server to which edge servers should connect for secure HTTPS requests, customarily `443`. This option only applies if the property is marked as secure. See `Secure property requirements` for guidance.
     * 
     */
    public Optional<Integer> httpsPort() {
        return Optional.ofNullable(this.httpsPort);
    }
    /**
     * @return Specifies which IP version to use when getting content from the origin.
     * 
     */
    public Optional<String> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Specifies the maximum TLS version to use for connections to your origin server. As best practice, use `DYNAMIC` to automatically apply the latest supported version.
     * 
     */
    public Optional<String> maxTlsVersion() {
        return Optional.ofNullable(this.maxTlsVersion);
    }
    /**
     * @return Specifies the minimum TLS version to use for connections to your origin server.
     * 
     */
    public Optional<String> minTlsVersion() {
        return Optional.ofNullable(this.minTlsVersion);
    }
    /**
     * @return This specifies the media&#39;s origin server.
     * 
     */
    public Optional<String> mslorigin() {
        return Optional.ofNullable(this.mslorigin);
    }
    /**
     * @return Specifies the details of the NetStorage server.
     * 
     */
    public Optional<GetPropertyRulesBuilderRulesV20240212BehaviorOriginNetStorage> netStorage() {
        return Optional.ofNullable(this.netStorage);
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> originCertificate() {
        return Optional.ofNullable(this.originCertificate);
    }
    /**
     * @return Specifies which certificate to trust.
     * 
     */
    public Optional<String> originCertsToHonor() {
        return Optional.ofNullable(this.originCertsToHonor);
    }
    /**
     * @return Identifies the Edge Load Balancing origin. This needs to correspond to an `edgeLoadBalancingOrigin` behavior&#39;s `id` attribute within the same property.
     * 
     */
    public Optional<String> originId() {
        return Optional.ofNullable(this.originId);
    }
    /**
     * @return For non-NetStorage origins, enabling this adds a Server Name Indication (SNI) header in the SSL request sent to the origin, with the origin hostname as the value. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for more information. If you want to use TLS version 1.3 in your existing properties, enable this option. New properties have this enabled by default.
     * 
     */
    public Optional<Boolean> originSni() {
        return Optional.ofNullable(this.originSni);
    }
    /**
     * @return Choose where your content is retrieved from.
     * 
     */
    public Optional<String> originType() {
        return Optional.ofNullable(this.originType);
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> ports() {
        return Optional.ofNullable(this.ports);
    }
    /**
     * @return Enabling this allows you to use a `CNAME chain` to determine the hostname for this SaaS dynamic origin.
     * 
     */
    public Optional<Boolean> saasCnameEnabled() {
        return Optional.ofNullable(this.saasCnameEnabled);
    }
    /**
     * @return Specifies the desired number of hostnames to use in the `CNAME chain`, starting backwards from the edge server.
     * 
     */
    public Optional<Integer> saasCnameLevel() {
        return Optional.ofNullable(this.saasCnameLevel);
    }
    /**
     * @return Specifies the name of the cookie that identifies this SaaS dynamic origin.
     * 
     */
    public Optional<String> saasCookie() {
        return Optional.ofNullable(this.saasCookie);
    }
    /**
     * @return Specifies the name of the query parameter that identifies this SaaS dynamic origin.
     * 
     */
    public Optional<String> saasQueryString() {
        return Optional.ofNullable(this.saasQueryString);
    }
    /**
     * @return Specifies the Perl-compatible regular expression match that identifies this SaaS dynamic origin.
     * 
     */
    public Optional<String> saasRegex() {
        return Optional.ofNullable(this.saasRegex);
    }
    /**
     * @return Specifies replacement text for what `saasRegex` matches.
     * 
     */
    public Optional<String> saasReplace() {
        return Optional.ofNullable(this.saasReplace);
    }
    /**
     * @return Specifies the static part of the SaaS dynamic origin.
     * 
     */
    public Optional<String> saasSuffix() {
        return Optional.ofNullable(this.saasSuffix);
    }
    /**
     * @return Specifies the part of the request that identifies this SaaS dynamic origin.
     * 
     */
    public Optional<String> saasType() {
        return Optional.ofNullable(this.saasType);
    }
    /**
     * @return Specifies the origin server&#39;s hostname, IPv4 address, or IPv6 address. Edge servers retrieve your content from this origin server.
     * 
     */
    public Optional<String> secondHostname() {
        return Optional.ofNullable(this.secondHostname);
    }
    /**
     * @return Available only for certain products. This specifies whether you want to use an additional origin server address.
     * 
     */
    public Optional<Boolean> secondHostnameEnabled() {
        return Optional.ofNullable(this.secondHostnameEnabled);
    }
    public List<String> standardCertificateAuthorities() {
        return this.standardCertificateAuthorities == null ? List.of() : this.standardCertificateAuthorities;
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    public Optional<Boolean> tls13Support() {
        return Optional.ofNullable(this.tls13Support);
    }
    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<String> tlsVersionTitle() {
        return Optional.ofNullable(this.tlsVersionTitle);
    }
    /**
     * @return If a client sets the `True-Client-IP` header, the edge server allows it and passes the value to the origin. Otherwise the edge server removes it and sets the value itself.
     * 
     */
    public Optional<Boolean> trueClientIpClientSetting() {
        return Optional.ofNullable(this.trueClientIpClientSetting);
    }
    /**
     * @return This specifies the name of the field that identifies the end client&#39;s IP address, for example `True-Client-IP`.
     * 
     */
    public Optional<String> trueClientIpHeader() {
        return Optional.ofNullable(this.trueClientIpHeader);
    }
    /**
     * @return With a shared `hostname` such as provided by Amazon AWS, sets a unique cache key for your content.
     * 
     */
    public Optional<Boolean> useUniqueCacheKey() {
        return Optional.ofNullable(this.useUniqueCacheKey);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }
    /**
     * @return For non-NetStorage origins, maximize security by controlling which certificates edge servers should trust.
     * 
     */
    public Optional<String> verificationMode() {
        return Optional.ofNullable(this.verificationMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20240212BehaviorOrigin defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cacheKeyHostname;
        private @Nullable Boolean compress;
        private @Nullable List<GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificateAuthority> customCertificateAuthorities;
        private @Nullable List<GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificate> customCertificates;
        private @Nullable String customForwardHostHeader;
        private @Nullable List<String> customValidCnValues;
        private @Nullable Boolean enableTrueClientIp;
        private @Nullable String forwardHostHeader;
        private @Nullable String hostname;
        private @Nullable Integer httpPort;
        private @Nullable Integer httpsPort;
        private @Nullable String ipVersion;
        private @Nullable Boolean locked;
        private @Nullable String maxTlsVersion;
        private @Nullable String minTlsVersion;
        private @Nullable String mslorigin;
        private @Nullable GetPropertyRulesBuilderRulesV20240212BehaviorOriginNetStorage netStorage;
        private @Nullable String originCertificate;
        private @Nullable String originCertsToHonor;
        private @Nullable String originId;
        private @Nullable Boolean originSni;
        private @Nullable String originType;
        private @Nullable String ports;
        private @Nullable Boolean saasCnameEnabled;
        private @Nullable Integer saasCnameLevel;
        private @Nullable String saasCookie;
        private @Nullable String saasQueryString;
        private @Nullable String saasRegex;
        private @Nullable String saasReplace;
        private @Nullable String saasSuffix;
        private @Nullable String saasType;
        private @Nullable String secondHostname;
        private @Nullable Boolean secondHostnameEnabled;
        private @Nullable List<String> standardCertificateAuthorities;
        private @Nullable String templateUuid;
        private @Nullable Boolean tls13Support;
        private @Nullable String tlsVersionTitle;
        private @Nullable Boolean trueClientIpClientSetting;
        private @Nullable String trueClientIpHeader;
        private @Nullable Boolean useUniqueCacheKey;
        private @Nullable String uuid;
        private @Nullable String verificationMode;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20240212BehaviorOrigin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cacheKeyHostname = defaults.cacheKeyHostname;
    	      this.compress = defaults.compress;
    	      this.customCertificateAuthorities = defaults.customCertificateAuthorities;
    	      this.customCertificates = defaults.customCertificates;
    	      this.customForwardHostHeader = defaults.customForwardHostHeader;
    	      this.customValidCnValues = defaults.customValidCnValues;
    	      this.enableTrueClientIp = defaults.enableTrueClientIp;
    	      this.forwardHostHeader = defaults.forwardHostHeader;
    	      this.hostname = defaults.hostname;
    	      this.httpPort = defaults.httpPort;
    	      this.httpsPort = defaults.httpsPort;
    	      this.ipVersion = defaults.ipVersion;
    	      this.locked = defaults.locked;
    	      this.maxTlsVersion = defaults.maxTlsVersion;
    	      this.minTlsVersion = defaults.minTlsVersion;
    	      this.mslorigin = defaults.mslorigin;
    	      this.netStorage = defaults.netStorage;
    	      this.originCertificate = defaults.originCertificate;
    	      this.originCertsToHonor = defaults.originCertsToHonor;
    	      this.originId = defaults.originId;
    	      this.originSni = defaults.originSni;
    	      this.originType = defaults.originType;
    	      this.ports = defaults.ports;
    	      this.saasCnameEnabled = defaults.saasCnameEnabled;
    	      this.saasCnameLevel = defaults.saasCnameLevel;
    	      this.saasCookie = defaults.saasCookie;
    	      this.saasQueryString = defaults.saasQueryString;
    	      this.saasRegex = defaults.saasRegex;
    	      this.saasReplace = defaults.saasReplace;
    	      this.saasSuffix = defaults.saasSuffix;
    	      this.saasType = defaults.saasType;
    	      this.secondHostname = defaults.secondHostname;
    	      this.secondHostnameEnabled = defaults.secondHostnameEnabled;
    	      this.standardCertificateAuthorities = defaults.standardCertificateAuthorities;
    	      this.templateUuid = defaults.templateUuid;
    	      this.tls13Support = defaults.tls13Support;
    	      this.tlsVersionTitle = defaults.tlsVersionTitle;
    	      this.trueClientIpClientSetting = defaults.trueClientIpClientSetting;
    	      this.trueClientIpHeader = defaults.trueClientIpHeader;
    	      this.useUniqueCacheKey = defaults.useUniqueCacheKey;
    	      this.uuid = defaults.uuid;
    	      this.verificationMode = defaults.verificationMode;
        }

        @CustomType.Setter
        public Builder cacheKeyHostname(@Nullable String cacheKeyHostname) {

            this.cacheKeyHostname = cacheKeyHostname;
            return this;
        }
        @CustomType.Setter
        public Builder compress(@Nullable Boolean compress) {

            this.compress = compress;
            return this;
        }
        @CustomType.Setter
        public Builder customCertificateAuthorities(@Nullable List<GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificateAuthority> customCertificateAuthorities) {

            this.customCertificateAuthorities = customCertificateAuthorities;
            return this;
        }
        public Builder customCertificateAuthorities(GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificateAuthority... customCertificateAuthorities) {
            return customCertificateAuthorities(List.of(customCertificateAuthorities));
        }
        @CustomType.Setter
        public Builder customCertificates(@Nullable List<GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificate> customCertificates) {

            this.customCertificates = customCertificates;
            return this;
        }
        public Builder customCertificates(GetPropertyRulesBuilderRulesV20240212BehaviorOriginCustomCertificate... customCertificates) {
            return customCertificates(List.of(customCertificates));
        }
        @CustomType.Setter
        public Builder customForwardHostHeader(@Nullable String customForwardHostHeader) {

            this.customForwardHostHeader = customForwardHostHeader;
            return this;
        }
        @CustomType.Setter
        public Builder customValidCnValues(@Nullable List<String> customValidCnValues) {

            this.customValidCnValues = customValidCnValues;
            return this;
        }
        public Builder customValidCnValues(String... customValidCnValues) {
            return customValidCnValues(List.of(customValidCnValues));
        }
        @CustomType.Setter
        public Builder enableTrueClientIp(@Nullable Boolean enableTrueClientIp) {

            this.enableTrueClientIp = enableTrueClientIp;
            return this;
        }
        @CustomType.Setter
        public Builder forwardHostHeader(@Nullable String forwardHostHeader) {

            this.forwardHostHeader = forwardHostHeader;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {

            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder httpPort(@Nullable Integer httpPort) {

            this.httpPort = httpPort;
            return this;
        }
        @CustomType.Setter
        public Builder httpsPort(@Nullable Integer httpsPort) {

            this.httpsPort = httpsPort;
            return this;
        }
        @CustomType.Setter
        public Builder ipVersion(@Nullable String ipVersion) {

            this.ipVersion = ipVersion;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder maxTlsVersion(@Nullable String maxTlsVersion) {

            this.maxTlsVersion = maxTlsVersion;
            return this;
        }
        @CustomType.Setter
        public Builder minTlsVersion(@Nullable String minTlsVersion) {

            this.minTlsVersion = minTlsVersion;
            return this;
        }
        @CustomType.Setter
        public Builder mslorigin(@Nullable String mslorigin) {

            this.mslorigin = mslorigin;
            return this;
        }
        @CustomType.Setter
        public Builder netStorage(@Nullable GetPropertyRulesBuilderRulesV20240212BehaviorOriginNetStorage netStorage) {

            this.netStorage = netStorage;
            return this;
        }
        @CustomType.Setter
        public Builder originCertificate(@Nullable String originCertificate) {

            this.originCertificate = originCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder originCertsToHonor(@Nullable String originCertsToHonor) {

            this.originCertsToHonor = originCertsToHonor;
            return this;
        }
        @CustomType.Setter
        public Builder originId(@Nullable String originId) {

            this.originId = originId;
            return this;
        }
        @CustomType.Setter
        public Builder originSni(@Nullable Boolean originSni) {

            this.originSni = originSni;
            return this;
        }
        @CustomType.Setter
        public Builder originType(@Nullable String originType) {

            this.originType = originType;
            return this;
        }
        @CustomType.Setter
        public Builder ports(@Nullable String ports) {

            this.ports = ports;
            return this;
        }
        @CustomType.Setter
        public Builder saasCnameEnabled(@Nullable Boolean saasCnameEnabled) {

            this.saasCnameEnabled = saasCnameEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder saasCnameLevel(@Nullable Integer saasCnameLevel) {

            this.saasCnameLevel = saasCnameLevel;
            return this;
        }
        @CustomType.Setter
        public Builder saasCookie(@Nullable String saasCookie) {

            this.saasCookie = saasCookie;
            return this;
        }
        @CustomType.Setter
        public Builder saasQueryString(@Nullable String saasQueryString) {

            this.saasQueryString = saasQueryString;
            return this;
        }
        @CustomType.Setter
        public Builder saasRegex(@Nullable String saasRegex) {

            this.saasRegex = saasRegex;
            return this;
        }
        @CustomType.Setter
        public Builder saasReplace(@Nullable String saasReplace) {

            this.saasReplace = saasReplace;
            return this;
        }
        @CustomType.Setter
        public Builder saasSuffix(@Nullable String saasSuffix) {

            this.saasSuffix = saasSuffix;
            return this;
        }
        @CustomType.Setter
        public Builder saasType(@Nullable String saasType) {

            this.saasType = saasType;
            return this;
        }
        @CustomType.Setter
        public Builder secondHostname(@Nullable String secondHostname) {

            this.secondHostname = secondHostname;
            return this;
        }
        @CustomType.Setter
        public Builder secondHostnameEnabled(@Nullable Boolean secondHostnameEnabled) {

            this.secondHostnameEnabled = secondHostnameEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder standardCertificateAuthorities(@Nullable List<String> standardCertificateAuthorities) {

            this.standardCertificateAuthorities = standardCertificateAuthorities;
            return this;
        }
        public Builder standardCertificateAuthorities(String... standardCertificateAuthorities) {
            return standardCertificateAuthorities(List.of(standardCertificateAuthorities));
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder tls13Support(@Nullable Boolean tls13Support) {

            this.tls13Support = tls13Support;
            return this;
        }
        @CustomType.Setter
        public Builder tlsVersionTitle(@Nullable String tlsVersionTitle) {

            this.tlsVersionTitle = tlsVersionTitle;
            return this;
        }
        @CustomType.Setter
        public Builder trueClientIpClientSetting(@Nullable Boolean trueClientIpClientSetting) {

            this.trueClientIpClientSetting = trueClientIpClientSetting;
            return this;
        }
        @CustomType.Setter
        public Builder trueClientIpHeader(@Nullable String trueClientIpHeader) {

            this.trueClientIpHeader = trueClientIpHeader;
            return this;
        }
        @CustomType.Setter
        public Builder useUniqueCacheKey(@Nullable Boolean useUniqueCacheKey) {

            this.useUniqueCacheKey = useUniqueCacheKey;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        @CustomType.Setter
        public Builder verificationMode(@Nullable String verificationMode) {

            this.verificationMode = verificationMode;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20240212BehaviorOrigin build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20240212BehaviorOrigin();
            _resultValue.cacheKeyHostname = cacheKeyHostname;
            _resultValue.compress = compress;
            _resultValue.customCertificateAuthorities = customCertificateAuthorities;
            _resultValue.customCertificates = customCertificates;
            _resultValue.customForwardHostHeader = customForwardHostHeader;
            _resultValue.customValidCnValues = customValidCnValues;
            _resultValue.enableTrueClientIp = enableTrueClientIp;
            _resultValue.forwardHostHeader = forwardHostHeader;
            _resultValue.hostname = hostname;
            _resultValue.httpPort = httpPort;
            _resultValue.httpsPort = httpsPort;
            _resultValue.ipVersion = ipVersion;
            _resultValue.locked = locked;
            _resultValue.maxTlsVersion = maxTlsVersion;
            _resultValue.minTlsVersion = minTlsVersion;
            _resultValue.mslorigin = mslorigin;
            _resultValue.netStorage = netStorage;
            _resultValue.originCertificate = originCertificate;
            _resultValue.originCertsToHonor = originCertsToHonor;
            _resultValue.originId = originId;
            _resultValue.originSni = originSni;
            _resultValue.originType = originType;
            _resultValue.ports = ports;
            _resultValue.saasCnameEnabled = saasCnameEnabled;
            _resultValue.saasCnameLevel = saasCnameLevel;
            _resultValue.saasCookie = saasCookie;
            _resultValue.saasQueryString = saasQueryString;
            _resultValue.saasRegex = saasRegex;
            _resultValue.saasReplace = saasReplace;
            _resultValue.saasSuffix = saasSuffix;
            _resultValue.saasType = saasType;
            _resultValue.secondHostname = secondHostname;
            _resultValue.secondHostnameEnabled = secondHostnameEnabled;
            _resultValue.standardCertificateAuthorities = standardCertificateAuthorities;
            _resultValue.templateUuid = templateUuid;
            _resultValue.tls13Support = tls13Support;
            _resultValue.tlsVersionTitle = tlsVersionTitle;
            _resultValue.trueClientIpClientSetting = trueClientIpClientSetting;
            _resultValue.trueClientIpHeader = trueClientIpHeader;
            _resultValue.useUniqueCacheKey = useUniqueCacheKey;
            _resultValue.uuid = uuid;
            _resultValue.verificationMode = verificationMode;
            return _resultValue;
        }
    }
}
