// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GtmAsmapDefaultDatacenterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GtmAsmapDefaultDatacenterArgs Empty = new GtmAsmapDefaultDatacenterArgs();

    @Import(name="datacenterId", required=true)
    private Output<Integer> datacenterId;

    public Output<Integer> datacenterId() {
        return this.datacenterId;
    }

    @Import(name="nickname")
    private @Nullable Output<String> nickname;

    public Optional<Output<String>> nickname() {
        return Optional.ofNullable(this.nickname);
    }

    private GtmAsmapDefaultDatacenterArgs() {}

    private GtmAsmapDefaultDatacenterArgs(GtmAsmapDefaultDatacenterArgs $) {
        this.datacenterId = $.datacenterId;
        this.nickname = $.nickname;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GtmAsmapDefaultDatacenterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GtmAsmapDefaultDatacenterArgs $;

        public Builder() {
            $ = new GtmAsmapDefaultDatacenterArgs();
        }

        public Builder(GtmAsmapDefaultDatacenterArgs defaults) {
            $ = new GtmAsmapDefaultDatacenterArgs(Objects.requireNonNull(defaults));
        }

        public Builder datacenterId(Output<Integer> datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        public Builder datacenterId(Integer datacenterId) {
            return datacenterId(Output.of(datacenterId));
        }

        public Builder nickname(@Nullable Output<String> nickname) {
            $.nickname = nickname;
            return this;
        }

        public Builder nickname(String nickname) {
            return nickname(Output.of(nickname));
        }

        public GtmAsmapDefaultDatacenterArgs build() {
            if ($.datacenterId == null) {
                throw new MissingRequiredPropertyException("GtmAsmapDefaultDatacenterArgs", "datacenterId");
            }
            return $;
        }
    }

}
