// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey();

    @Import(name="hue")
    private @Nullable String hue;

    public Optional<String> hue() {
        return Optional.ofNullable(this.hue);
    }

    @Import(name="hueFeather")
    private @Nullable String hueFeather;

    public Optional<String> hueFeather() {
        return Optional.ofNullable(this.hueFeather);
    }

    @Import(name="hueFeatherVar")
    private @Nullable String hueFeatherVar;

    public Optional<String> hueFeatherVar() {
        return Optional.ofNullable(this.hueFeatherVar);
    }

    @Import(name="hueTolerance")
    private @Nullable String hueTolerance;

    public Optional<String> hueTolerance() {
        return Optional.ofNullable(this.hueTolerance);
    }

    @Import(name="hueToleranceVar")
    private @Nullable String hueToleranceVar;

    public Optional<String> hueToleranceVar() {
        return Optional.ofNullable(this.hueToleranceVar);
    }

    @Import(name="hueVar")
    private @Nullable String hueVar;

    public Optional<String> hueVar() {
        return Optional.ofNullable(this.hueVar);
    }

    @Import(name="lightnessFeather")
    private @Nullable String lightnessFeather;

    public Optional<String> lightnessFeather() {
        return Optional.ofNullable(this.lightnessFeather);
    }

    @Import(name="lightnessFeatherVar")
    private @Nullable String lightnessFeatherVar;

    public Optional<String> lightnessFeatherVar() {
        return Optional.ofNullable(this.lightnessFeatherVar);
    }

    @Import(name="lightnessTolerance")
    private @Nullable String lightnessTolerance;

    public Optional<String> lightnessTolerance() {
        return Optional.ofNullable(this.lightnessTolerance);
    }

    @Import(name="lightnessToleranceVar")
    private @Nullable String lightnessToleranceVar;

    public Optional<String> lightnessToleranceVar() {
        return Optional.ofNullable(this.lightnessToleranceVar);
    }

    @Import(name="saturationFeather")
    private @Nullable String saturationFeather;

    public Optional<String> saturationFeather() {
        return Optional.ofNullable(this.saturationFeather);
    }

    @Import(name="saturationFeatherVar")
    private @Nullable String saturationFeatherVar;

    public Optional<String> saturationFeatherVar() {
        return Optional.ofNullable(this.saturationFeatherVar);
    }

    @Import(name="saturationTolerance")
    private @Nullable String saturationTolerance;

    public Optional<String> saturationTolerance() {
        return Optional.ofNullable(this.saturationTolerance);
    }

    @Import(name="saturationToleranceVar")
    private @Nullable String saturationToleranceVar;

    public Optional<String> saturationToleranceVar() {
        return Optional.ofNullable(this.saturationToleranceVar);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey $) {
        this.hue = $.hue;
        this.hueFeather = $.hueFeather;
        this.hueFeatherVar = $.hueFeatherVar;
        this.hueTolerance = $.hueTolerance;
        this.hueToleranceVar = $.hueToleranceVar;
        this.hueVar = $.hueVar;
        this.lightnessFeather = $.lightnessFeather;
        this.lightnessFeatherVar = $.lightnessFeatherVar;
        this.lightnessTolerance = $.lightnessTolerance;
        this.lightnessToleranceVar = $.lightnessToleranceVar;
        this.saturationFeather = $.saturationFeather;
        this.saturationFeatherVar = $.saturationFeatherVar;
        this.saturationTolerance = $.saturationTolerance;
        this.saturationToleranceVar = $.saturationToleranceVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey(Objects.requireNonNull(defaults));
        }

        public Builder hue(@Nullable String hue) {
            $.hue = hue;
            return this;
        }

        public Builder hueFeather(@Nullable String hueFeather) {
            $.hueFeather = hueFeather;
            return this;
        }

        public Builder hueFeatherVar(@Nullable String hueFeatherVar) {
            $.hueFeatherVar = hueFeatherVar;
            return this;
        }

        public Builder hueTolerance(@Nullable String hueTolerance) {
            $.hueTolerance = hueTolerance;
            return this;
        }

        public Builder hueToleranceVar(@Nullable String hueToleranceVar) {
            $.hueToleranceVar = hueToleranceVar;
            return this;
        }

        public Builder hueVar(@Nullable String hueVar) {
            $.hueVar = hueVar;
            return this;
        }

        public Builder lightnessFeather(@Nullable String lightnessFeather) {
            $.lightnessFeather = lightnessFeather;
            return this;
        }

        public Builder lightnessFeatherVar(@Nullable String lightnessFeatherVar) {
            $.lightnessFeatherVar = lightnessFeatherVar;
            return this;
        }

        public Builder lightnessTolerance(@Nullable String lightnessTolerance) {
            $.lightnessTolerance = lightnessTolerance;
            return this;
        }

        public Builder lightnessToleranceVar(@Nullable String lightnessToleranceVar) {
            $.lightnessToleranceVar = lightnessToleranceVar;
            return this;
        }

        public Builder saturationFeather(@Nullable String saturationFeather) {
            $.saturationFeather = saturationFeather;
            return this;
        }

        public Builder saturationFeatherVar(@Nullable String saturationFeatherVar) {
            $.saturationFeatherVar = saturationFeatherVar;
            return this;
        }

        public Builder saturationTolerance(@Nullable String saturationTolerance) {
            $.saturationTolerance = saturationTolerance;
            return this;
        }

        public Builder saturationToleranceVar(@Nullable String saturationToleranceVar) {
            $.saturationToleranceVar = saturationToleranceVar;
            return this;
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitChromaKey build() {
            return $;
        }
    }

}
