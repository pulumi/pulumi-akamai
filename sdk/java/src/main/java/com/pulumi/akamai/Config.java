// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;

public final class Config {

    private static final com.pulumi.Config config = com.pulumi.Config.of("akamai");
    public Optional<Boolean> cacheEnabled() {
        return Codegen.booleanProp("cacheEnabled").config(config).get();
    }
    public Optional<com.pulumi.akamai.config.inputs.Config> config() {
        return Codegen.objectProp("config", com.pulumi.akamai.config.inputs.Config.class).config(config).get();
    }
/**
 * The section of the edgerc file to use for configuration
 * 
 */
    public Optional<String> configSection() {
        return Codegen.stringProp("configSection").config(config).get();
    }
    public Optional<String> edgerc() {
        return Codegen.stringProp("edgerc").config(config).get();
    }
/**
 * The maximum number of API requests to be made per second (0 for no limit)
 * 
 */
    public Optional<Integer> requestLimit() {
        return Codegen.integerProp("requestLimit").config(config).get();
    }
/**
 * Should the retries of API requests be disabled, default false
 * 
 */
    public Optional<Boolean> retryDisabled() {
        return Codegen.booleanProp("retryDisabled").config(config).get();
    }
/**
 * The maximum number retires of API requests, default 10
 * 
 */
    public Optional<Integer> retryMax() {
        return Codegen.integerProp("retryMax").config(config).get();
    }
/**
 * The maximum wait time in seconds between API requests retries, default is 30 sec
 * 
 */
    public Optional<Integer> retryWaitMax() {
        return Codegen.integerProp("retryWaitMax").config(config).get();
    }
/**
 * The minimum wait time in seconds between API requests retries, default is 1 sec
 * 
 */
    public Optional<Integer> retryWaitMin() {
        return Codegen.integerProp("retryWaitMin").config(config).get();
    }
}
