// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRateBitrateTable;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRateThresholdTable;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate Empty = new GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate();

    /**
     * Specifies a download rate that corresponds to a `thresholdTable` entry. The bit rate appears as a two-member object consisting of a numeric `bitrateValue` and a `bitrateUnit` string, with allowed values of `Kbps`, `Mbps`, and `Gbps`.
     * 
     */
    @Import(name="bitrateTables")
    private @Nullable List<GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRateBitrateTable> bitrateTables;

    /**
     * @return Specifies a download rate that corresponds to a `thresholdTable` entry. The bit rate appears as a two-member object consisting of a numeric `bitrateValue` and a `bitrateUnit` string, with allowed values of `Kbps`, `Mbps`, and `Gbps`.
     * 
     */
    public Optional<List<GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRateBitrateTable>> bitrateTables() {
        return Optional.ofNullable(this.bitrateTables);
    }

    /**
     * When enabled, activates the bit rate limiting behavior.
     * 
     */
    @Import(name="enabled")
    private @Nullable Boolean enabled;

    /**
     * @return When enabled, activates the bit rate limiting behavior.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Boolean locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable String templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * Specifies the minimum size of the file or the amount of elapsed download time before applying the bit rate limit from the corresponding `bitrateTable` entry. The threshold appears as a two-member object consisting of a numeric `thresholdValue` and `thresholdUnit` string, with allowed values of `SECONDS` or `BYTES`.
     * 
     */
    @Import(name="thresholdTables")
    private @Nullable List<GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRateThresholdTable> thresholdTables;

    /**
     * @return Specifies the minimum size of the file or the amount of elapsed download time before applying the bit rate limit from the corresponding `bitrateTable` entry. The threshold appears as a two-member object consisting of a numeric `thresholdValue` and `thresholdUnit` string, with allowed values of `SECONDS` or `BYTES`.
     * 
     */
    public Optional<List<GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRateThresholdTable>> thresholdTables() {
        return Optional.ofNullable(this.thresholdTables);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable String uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate() {}

    private GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate(GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate $) {
        this.bitrateTables = $.bitrateTables;
        this.enabled = $.enabled;
        this.locked = $.locked;
        this.templateUuid = $.templateUuid;
        this.thresholdTables = $.thresholdTables;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate();
        }

        public Builder(GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate defaults) {
            $ = new GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate(Objects.requireNonNull(defaults));
        }

        /**
         * @param bitrateTables Specifies a download rate that corresponds to a `thresholdTable` entry. The bit rate appears as a two-member object consisting of a numeric `bitrateValue` and a `bitrateUnit` string, with allowed values of `Kbps`, `Mbps`, and `Gbps`.
         * 
         * @return builder
         * 
         */
        public Builder bitrateTables(@Nullable List<GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRateBitrateTable> bitrateTables) {
            $.bitrateTables = bitrateTables;
            return this;
        }

        /**
         * @param bitrateTables Specifies a download rate that corresponds to a `thresholdTable` entry. The bit rate appears as a two-member object consisting of a numeric `bitrateValue` and a `bitrateUnit` string, with allowed values of `Kbps`, `Mbps`, and `Gbps`.
         * 
         * @return builder
         * 
         */
        public Builder bitrateTables(GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRateBitrateTable... bitrateTables) {
            return bitrateTables(List.of(bitrateTables));
        }

        /**
         * @param enabled When enabled, activates the bit rate limiting behavior.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Boolean locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable String templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param thresholdTables Specifies the minimum size of the file or the amount of elapsed download time before applying the bit rate limit from the corresponding `bitrateTable` entry. The threshold appears as a two-member object consisting of a numeric `thresholdValue` and `thresholdUnit` string, with allowed values of `SECONDS` or `BYTES`.
         * 
         * @return builder
         * 
         */
        public Builder thresholdTables(@Nullable List<GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRateThresholdTable> thresholdTables) {
            $.thresholdTables = thresholdTables;
            return this;
        }

        /**
         * @param thresholdTables Specifies the minimum size of the file or the amount of elapsed download time before applying the bit rate limit from the corresponding `bitrateTable` entry. The threshold appears as a two-member object consisting of a numeric `thresholdValue` and `thresholdUnit` string, with allowed values of `SECONDS` or `BYTES`.
         * 
         * @return builder
         * 
         */
        public Builder thresholdTables(GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRateThresholdTable... thresholdTables) {
            return thresholdTables(List.of(thresholdTables));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        public GetPropertyRulesBuilderRulesV20250113BehaviorLimitBitRate build() {
            return $;
        }
    }

}
