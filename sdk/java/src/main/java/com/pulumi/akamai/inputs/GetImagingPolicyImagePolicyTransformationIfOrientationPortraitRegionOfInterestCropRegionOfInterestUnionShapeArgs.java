// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeShapeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs();

    @Import(name="shapes", required=true)
    private Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeShapeArgs>> shapes;

    public Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeShapeArgs>> shapes() {
        return this.shapes;
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs $) {
        this.shapes = $.shapes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs(Objects.requireNonNull(defaults));
        }

        public Builder shapes(Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeShapeArgs>> shapes) {
            $.shapes = shapes;
            return this;
        }

        public Builder shapes(List<GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeShapeArgs> shapes) {
            return shapes(Output.of(shapes));
        }

        public Builder shapes(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeShapeArgs... shapes) {
            return shapes(List.of(shapes));
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationPortraitRegionOfInterestCropRegionOfInterestUnionShapeArgs build() {
            $.shapes = Objects.requireNonNull($.shapes, "expected parameter 'shapes' to be non-null");
            return $;
        }
    }

}
