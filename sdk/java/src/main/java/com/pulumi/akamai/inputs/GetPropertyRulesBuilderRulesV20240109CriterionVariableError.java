// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20240109CriterionVariableError extends com.pulumi.resources.InvokeArgs {

    public static final GetPropertyRulesBuilderRulesV20240109CriterionVariableError Empty = new GetPropertyRulesBuilderRulesV20240109CriterionVariableError();

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Boolean locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Matches errors for the specified set of `variableNames`, otherwise matches errors from variables outside that set.
     * 
     */
    @Import(name="result")
    private @Nullable Boolean result;

    /**
     * @return Matches errors for the specified set of `variableNames`, otherwise matches errors from variables outside that set.
     * 
     */
    public Optional<Boolean> result() {
        return Optional.ofNullable(this.result);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable String templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable String uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    /**
     * The name of the variable whose error triggers the match, or a space- or comma-delimited list of more than one variable name. Note that if you define a variable named `VAR`, the name in this field needs to appear with its added prefix as `PMUSER_VAR`. When such a variable is inserted into other fields, it appears with an additional namespace as `{{user.PMUSER_VAR}}`. See the `setVariable` behavior for details on variable names.
     * 
     */
    @Import(name="variableNames")
    private @Nullable List<String> variableNames;

    /**
     * @return The name of the variable whose error triggers the match, or a space- or comma-delimited list of more than one variable name. Note that if you define a variable named `VAR`, the name in this field needs to appear with its added prefix as `PMUSER_VAR`. When such a variable is inserted into other fields, it appears with an additional namespace as `{{user.PMUSER_VAR}}`. See the `setVariable` behavior for details on variable names.
     * 
     */
    public Optional<List<String>> variableNames() {
        return Optional.ofNullable(this.variableNames);
    }

    private GetPropertyRulesBuilderRulesV20240109CriterionVariableError() {}

    private GetPropertyRulesBuilderRulesV20240109CriterionVariableError(GetPropertyRulesBuilderRulesV20240109CriterionVariableError $) {
        this.locked = $.locked;
        this.result = $.result;
        this.templateUuid = $.templateUuid;
        this.uuid = $.uuid;
        this.variableNames = $.variableNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20240109CriterionVariableError defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20240109CriterionVariableError $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20240109CriterionVariableError();
        }

        public Builder(GetPropertyRulesBuilderRulesV20240109CriterionVariableError defaults) {
            $ = new GetPropertyRulesBuilderRulesV20240109CriterionVariableError(Objects.requireNonNull(defaults));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Boolean locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param result Matches errors for the specified set of `variableNames`, otherwise matches errors from variables outside that set.
         * 
         * @return builder
         * 
         */
        public Builder result(@Nullable Boolean result) {
            $.result = result;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable String templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param variableNames The name of the variable whose error triggers the match, or a space- or comma-delimited list of more than one variable name. Note that if you define a variable named `VAR`, the name in this field needs to appear with its added prefix as `PMUSER_VAR`. When such a variable is inserted into other fields, it appears with an additional namespace as `{{user.PMUSER_VAR}}`. See the `setVariable` behavior for details on variable names.
         * 
         * @return builder
         * 
         */
        public Builder variableNames(@Nullable List<String> variableNames) {
            $.variableNames = variableNames;
            return this;
        }

        /**
         * @param variableNames The name of the variable whose error triggers the match, or a space- or comma-delimited list of more than one variable name. Note that if you define a variable named `VAR`, the name in this field needs to appear with its added prefix as `PMUSER_VAR`. When such a variable is inserted into other fields, it appears with an additional namespace as `{{user.PMUSER_VAR}}`. See the `setVariable` behavior for details on variable names.
         * 
         * @return builder
         * 
         */
        public Builder variableNames(String... variableNames) {
            return variableNames(List.of(variableNames));
        }

        public GetPropertyRulesBuilderRulesV20240109CriterionVariableError build() {
            return $;
        }
    }

}
