// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIamAllowedApisArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIamAllowedApisArgs Empty = new GetIamAllowedApisArgs();

    @Import(name="allowAccountSwitch")
    private @Nullable Output<Boolean> allowAccountSwitch;

    public Optional<Output<Boolean>> allowAccountSwitch() {
        return Optional.ofNullable(this.allowAccountSwitch);
    }

    @Import(name="clientType")
    private @Nullable Output<String> clientType;

    public Optional<Output<String>> clientType() {
        return Optional.ofNullable(this.clientType);
    }

    @Import(name="username", required=true)
    private Output<String> username;

    public Output<String> username() {
        return this.username;
    }

    private GetIamAllowedApisArgs() {}

    private GetIamAllowedApisArgs(GetIamAllowedApisArgs $) {
        this.allowAccountSwitch = $.allowAccountSwitch;
        this.clientType = $.clientType;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIamAllowedApisArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIamAllowedApisArgs $;

        public Builder() {
            $ = new GetIamAllowedApisArgs();
        }

        public Builder(GetIamAllowedApisArgs defaults) {
            $ = new GetIamAllowedApisArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowAccountSwitch(@Nullable Output<Boolean> allowAccountSwitch) {
            $.allowAccountSwitch = allowAccountSwitch;
            return this;
        }

        public Builder allowAccountSwitch(Boolean allowAccountSwitch) {
            return allowAccountSwitch(Output.of(allowAccountSwitch));
        }

        public Builder clientType(@Nullable Output<String> clientType) {
            $.clientType = clientType;
            return this;
        }

        public Builder clientType(String clientType) {
            return clientType(Output.of(clientType));
        }

        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public GetIamAllowedApisArgs build() {
            if ($.username == null) {
                throw new MissingRequiredPropertyException("GetIamAllowedApisArgs", "username");
            }
            return $;
        }
    }

}
