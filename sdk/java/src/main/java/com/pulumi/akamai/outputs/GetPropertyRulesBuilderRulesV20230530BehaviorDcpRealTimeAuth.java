// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuth {
    /**
     * @return Extracts a hostname from JWT.
     * 
     */
    private @Nullable Boolean extractHostname;
    /**
     * @return Extracts a jurisdiction that defines a geographically distributed set of servers from JWT.
     * 
     */
    private @Nullable Boolean extractJurisdiction;
    /**
     * @return Extracts a namespace from JSON web tokens (JWT).
     * 
     */
    private @Nullable Boolean extractNamespace;
    /**
     * @return Specifies the claim in JWT to extract the hostname from.
     * 
     */
    private @Nullable String hostnameClaim;
    /**
     * @return Specifies the claim in JWT to extract the jurisdiction from.
     * 
     */
    private @Nullable String jurisdictionClaim;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Specifies the claim in JWT to extract the namespace from.
     * 
     */
    private @Nullable String namespaceClaim;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuth() {}
    /**
     * @return Extracts a hostname from JWT.
     * 
     */
    public Optional<Boolean> extractHostname() {
        return Optional.ofNullable(this.extractHostname);
    }
    /**
     * @return Extracts a jurisdiction that defines a geographically distributed set of servers from JWT.
     * 
     */
    public Optional<Boolean> extractJurisdiction() {
        return Optional.ofNullable(this.extractJurisdiction);
    }
    /**
     * @return Extracts a namespace from JSON web tokens (JWT).
     * 
     */
    public Optional<Boolean> extractNamespace() {
        return Optional.ofNullable(this.extractNamespace);
    }
    /**
     * @return Specifies the claim in JWT to extract the hostname from.
     * 
     */
    public Optional<String> hostnameClaim() {
        return Optional.ofNullable(this.hostnameClaim);
    }
    /**
     * @return Specifies the claim in JWT to extract the jurisdiction from.
     * 
     */
    public Optional<String> jurisdictionClaim() {
        return Optional.ofNullable(this.jurisdictionClaim);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Specifies the claim in JWT to extract the namespace from.
     * 
     */
    public Optional<String> namespaceClaim() {
        return Optional.ofNullable(this.namespaceClaim);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean extractHostname;
        private @Nullable Boolean extractJurisdiction;
        private @Nullable Boolean extractNamespace;
        private @Nullable String hostnameClaim;
        private @Nullable String jurisdictionClaim;
        private @Nullable Boolean locked;
        private @Nullable String namespaceClaim;
        private @Nullable String templateUuid;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extractHostname = defaults.extractHostname;
    	      this.extractJurisdiction = defaults.extractJurisdiction;
    	      this.extractNamespace = defaults.extractNamespace;
    	      this.hostnameClaim = defaults.hostnameClaim;
    	      this.jurisdictionClaim = defaults.jurisdictionClaim;
    	      this.locked = defaults.locked;
    	      this.namespaceClaim = defaults.namespaceClaim;
    	      this.templateUuid = defaults.templateUuid;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder extractHostname(@Nullable Boolean extractHostname) {

            this.extractHostname = extractHostname;
            return this;
        }
        @CustomType.Setter
        public Builder extractJurisdiction(@Nullable Boolean extractJurisdiction) {

            this.extractJurisdiction = extractJurisdiction;
            return this;
        }
        @CustomType.Setter
        public Builder extractNamespace(@Nullable Boolean extractNamespace) {

            this.extractNamespace = extractNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder hostnameClaim(@Nullable String hostnameClaim) {

            this.hostnameClaim = hostnameClaim;
            return this;
        }
        @CustomType.Setter
        public Builder jurisdictionClaim(@Nullable String jurisdictionClaim) {

            this.jurisdictionClaim = jurisdictionClaim;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceClaim(@Nullable String namespaceClaim) {

            this.namespaceClaim = namespaceClaim;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuth build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuth();
            _resultValue.extractHostname = extractHostname;
            _resultValue.extractJurisdiction = extractJurisdiction;
            _resultValue.extractNamespace = extractNamespace;
            _resultValue.hostnameClaim = hostnameClaim;
            _resultValue.jurisdictionClaim = jurisdictionClaim;
            _resultValue.locked = locked;
            _resultValue.namespaceClaim = namespaceClaim;
            _resultValue.templateUuid = templateUuid;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
