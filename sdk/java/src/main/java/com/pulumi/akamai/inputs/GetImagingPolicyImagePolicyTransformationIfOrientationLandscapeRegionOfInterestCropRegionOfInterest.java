// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestCircleShape;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPointShape;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestRectangleShape;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestUnionShape;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest();

    @Import(name="circleShapes")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestCircleShape> circleShapes;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestCircleShape>> circleShapes() {
        return Optional.ofNullable(this.circleShapes);
    }

    @Import(name="pointShapes")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPointShape> pointShapes;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPointShape>> pointShapes() {
        return Optional.ofNullable(this.pointShapes);
    }

    @Import(name="polygonShapes")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape> polygonShapes;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape>> polygonShapes() {
        return Optional.ofNullable(this.polygonShapes);
    }

    @Import(name="rectangleShapes")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestRectangleShape> rectangleShapes;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestRectangleShape>> rectangleShapes() {
        return Optional.ofNullable(this.rectangleShapes);
    }

    @Import(name="unionShapes")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestUnionShape> unionShapes;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestUnionShape>> unionShapes() {
        return Optional.ofNullable(this.unionShapes);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest $) {
        this.circleShapes = $.circleShapes;
        this.pointShapes = $.pointShapes;
        this.polygonShapes = $.polygonShapes;
        this.rectangleShapes = $.rectangleShapes;
        this.unionShapes = $.unionShapes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest(Objects.requireNonNull(defaults));
        }

        public Builder circleShapes(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestCircleShape> circleShapes) {
            $.circleShapes = circleShapes;
            return this;
        }

        public Builder circleShapes(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestCircleShape... circleShapes) {
            return circleShapes(List.of(circleShapes));
        }

        public Builder pointShapes(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPointShape> pointShapes) {
            $.pointShapes = pointShapes;
            return this;
        }

        public Builder pointShapes(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPointShape... pointShapes) {
            return pointShapes(List.of(pointShapes));
        }

        public Builder polygonShapes(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape> polygonShapes) {
            $.polygonShapes = polygonShapes;
            return this;
        }

        public Builder polygonShapes(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestPolygonShape... polygonShapes) {
            return polygonShapes(List.of(polygonShapes));
        }

        public Builder rectangleShapes(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestRectangleShape> rectangleShapes) {
            $.rectangleShapes = rectangleShapes;
            return this;
        }

        public Builder rectangleShapes(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestRectangleShape... rectangleShapes) {
            return rectangleShapes(List.of(rectangleShapes));
        }

        public Builder unionShapes(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestUnionShape> unionShapes) {
            $.unionShapes = unionShapes;
            return this;
        }

        public Builder unionShapes(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterestUnionShape... unionShapes) {
            return unionShapes(List.of(unionShapes));
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeRegionOfInterestCropRegionOfInterest build() {
            return $;
        }
    }

}
