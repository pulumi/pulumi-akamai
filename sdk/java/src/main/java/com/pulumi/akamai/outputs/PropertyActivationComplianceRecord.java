// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.PropertyActivationComplianceRecordNoncomplianceReasonEmergency;
import com.pulumi.akamai.outputs.PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic;
import com.pulumi.akamai.outputs.PropertyActivationComplianceRecordNoncomplianceReasonNone;
import com.pulumi.akamai.outputs.PropertyActivationComplianceRecordNoncomplianceReasonOther;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PropertyActivationComplianceRecord {
    private @Nullable PropertyActivationComplianceRecordNoncomplianceReasonEmergency noncomplianceReasonEmergency;
    private @Nullable PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic noncomplianceReasonNoProductionTraffic;
    private @Nullable PropertyActivationComplianceRecordNoncomplianceReasonNone noncomplianceReasonNone;
    private @Nullable PropertyActivationComplianceRecordNoncomplianceReasonOther noncomplianceReasonOther;

    private PropertyActivationComplianceRecord() {}
    public Optional<PropertyActivationComplianceRecordNoncomplianceReasonEmergency> noncomplianceReasonEmergency() {
        return Optional.ofNullable(this.noncomplianceReasonEmergency);
    }
    public Optional<PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic> noncomplianceReasonNoProductionTraffic() {
        return Optional.ofNullable(this.noncomplianceReasonNoProductionTraffic);
    }
    public Optional<PropertyActivationComplianceRecordNoncomplianceReasonNone> noncomplianceReasonNone() {
        return Optional.ofNullable(this.noncomplianceReasonNone);
    }
    public Optional<PropertyActivationComplianceRecordNoncomplianceReasonOther> noncomplianceReasonOther() {
        return Optional.ofNullable(this.noncomplianceReasonOther);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PropertyActivationComplianceRecord defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PropertyActivationComplianceRecordNoncomplianceReasonEmergency noncomplianceReasonEmergency;
        private @Nullable PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic noncomplianceReasonNoProductionTraffic;
        private @Nullable PropertyActivationComplianceRecordNoncomplianceReasonNone noncomplianceReasonNone;
        private @Nullable PropertyActivationComplianceRecordNoncomplianceReasonOther noncomplianceReasonOther;
        public Builder() {}
        public Builder(PropertyActivationComplianceRecord defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.noncomplianceReasonEmergency = defaults.noncomplianceReasonEmergency;
    	      this.noncomplianceReasonNoProductionTraffic = defaults.noncomplianceReasonNoProductionTraffic;
    	      this.noncomplianceReasonNone = defaults.noncomplianceReasonNone;
    	      this.noncomplianceReasonOther = defaults.noncomplianceReasonOther;
        }

        @CustomType.Setter
        public Builder noncomplianceReasonEmergency(@Nullable PropertyActivationComplianceRecordNoncomplianceReasonEmergency noncomplianceReasonEmergency) {
            this.noncomplianceReasonEmergency = noncomplianceReasonEmergency;
            return this;
        }
        @CustomType.Setter
        public Builder noncomplianceReasonNoProductionTraffic(@Nullable PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic noncomplianceReasonNoProductionTraffic) {
            this.noncomplianceReasonNoProductionTraffic = noncomplianceReasonNoProductionTraffic;
            return this;
        }
        @CustomType.Setter
        public Builder noncomplianceReasonNone(@Nullable PropertyActivationComplianceRecordNoncomplianceReasonNone noncomplianceReasonNone) {
            this.noncomplianceReasonNone = noncomplianceReasonNone;
            return this;
        }
        @CustomType.Setter
        public Builder noncomplianceReasonOther(@Nullable PropertyActivationComplianceRecordNoncomplianceReasonOther noncomplianceReasonOther) {
            this.noncomplianceReasonOther = noncomplianceReasonOther;
            return this;
        }
        public PropertyActivationComplianceRecord build() {
            final var o = new PropertyActivationComplianceRecord();
            o.noncomplianceReasonEmergency = noncomplianceReasonEmergency;
            o.noncomplianceReasonNoProductionTraffic = noncomplianceReasonNoProductionTraffic;
            o.noncomplianceReasonNone = noncomplianceReasonNone;
            o.noncomplianceReasonOther = noncomplianceReasonOther;
            return o;
        }
    }
}
