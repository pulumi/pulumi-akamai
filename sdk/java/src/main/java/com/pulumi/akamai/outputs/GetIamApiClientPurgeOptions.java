// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetIamApiClientPurgeOptionsCpCodeAccess;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetIamApiClientPurgeOptions {
    /**
     * @return Whether the API client can purge content by cache tag.
     * 
     */
    private Boolean canPurgeByCacheTag;
    /**
     * @return Whether the API client can purge content by CP code.
     * 
     */
    private Boolean canPurgeByCpCode;
    /**
     * @return CP codes the API client can purge.
     * 
     */
    private GetIamApiClientPurgeOptionsCpCodeAccess cpCodeAccess;

    private GetIamApiClientPurgeOptions() {}
    /**
     * @return Whether the API client can purge content by cache tag.
     * 
     */
    public Boolean canPurgeByCacheTag() {
        return this.canPurgeByCacheTag;
    }
    /**
     * @return Whether the API client can purge content by CP code.
     * 
     */
    public Boolean canPurgeByCpCode() {
        return this.canPurgeByCpCode;
    }
    /**
     * @return CP codes the API client can purge.
     * 
     */
    public GetIamApiClientPurgeOptionsCpCodeAccess cpCodeAccess() {
        return this.cpCodeAccess;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamApiClientPurgeOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean canPurgeByCacheTag;
        private Boolean canPurgeByCpCode;
        private GetIamApiClientPurgeOptionsCpCodeAccess cpCodeAccess;
        public Builder() {}
        public Builder(GetIamApiClientPurgeOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.canPurgeByCacheTag = defaults.canPurgeByCacheTag;
    	      this.canPurgeByCpCode = defaults.canPurgeByCpCode;
    	      this.cpCodeAccess = defaults.cpCodeAccess;
        }

        @CustomType.Setter
        public Builder canPurgeByCacheTag(Boolean canPurgeByCacheTag) {
            if (canPurgeByCacheTag == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientPurgeOptions", "canPurgeByCacheTag");
            }
            this.canPurgeByCacheTag = canPurgeByCacheTag;
            return this;
        }
        @CustomType.Setter
        public Builder canPurgeByCpCode(Boolean canPurgeByCpCode) {
            if (canPurgeByCpCode == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientPurgeOptions", "canPurgeByCpCode");
            }
            this.canPurgeByCpCode = canPurgeByCpCode;
            return this;
        }
        @CustomType.Setter
        public Builder cpCodeAccess(GetIamApiClientPurgeOptionsCpCodeAccess cpCodeAccess) {
            if (cpCodeAccess == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientPurgeOptions", "cpCodeAccess");
            }
            this.cpCodeAccess = cpCodeAccess;
            return this;
        }
        public GetIamApiClientPurgeOptions build() {
            final var _resultValue = new GetIamApiClientPurgeOptions();
            _resultValue.canPurgeByCacheTag = canPurgeByCacheTag;
            _resultValue.canPurgeByCpCode = canPurgeByCpCode;
            _resultValue.cpCodeAccess = cpCodeAccess;
            return _resultValue;
        }
    }
}
