// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecRuleUpgradeState extends com.pulumi.resources.ResourceArgs {

    public static final AppSecRuleUpgradeState Empty = new AppSecRuleUpgradeState();

    /**
     * . Unique identifier of the security configuration associated with the ruleset being upgraded.
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return . Unique identifier of the security configuration associated with the ruleset being upgraded.
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * Versioning information for the current KRS rule set
     * 
     */
    @Import(name="currentRuleset")
    private @Nullable Output<String> currentRuleset;

    /**
     * @return Versioning information for the current KRS rule set
     * 
     */
    public Optional<Output<String>> currentRuleset() {
        return Optional.ofNullable(this.currentRuleset);
    }

    /**
     * Whether an evaluation is currently in progress
     * 
     */
    @Import(name="evalStatus")
    private @Nullable Output<String> evalStatus;

    /**
     * @return Whether an evaluation is currently in progress
     * 
     */
    public Optional<Output<String>> evalStatus() {
        return Optional.ofNullable(this.evalStatus);
    }

    /**
     * Upgrade mode (KRS, AAG, ASE_MANUAL or ASE_AUTO)
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return Upgrade mode (KRS, AAG, ASE_MANUAL or ASE_AUTO)
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * . Unique identifier of the security policy associated with the ruleset being upgraded.
     * 
     */
    @Import(name="securityPolicyId")
    private @Nullable Output<String> securityPolicyId;

    /**
     * @return . Unique identifier of the security policy associated with the ruleset being upgraded.
     * 
     */
    public Optional<Output<String>> securityPolicyId() {
        return Optional.ofNullable(this.securityPolicyId);
    }

    /**
     * . (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:
     * - **ASE_AUTO**. Akamai automatically updates your rulesets.
     * - **ASE_MANUAL**. Manually updates your rulesets.
     * 
     */
    @Import(name="upgradeMode")
    private @Nullable Output<String> upgradeMode;

    /**
     * @return . (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:
     * - **ASE_AUTO**. Akamai automatically updates your rulesets.
     * - **ASE_MANUAL**. Manually updates your rulesets.
     * 
     */
    public Optional<Output<String>> upgradeMode() {
        return Optional.ofNullable(this.upgradeMode);
    }

    private AppSecRuleUpgradeState() {}

    private AppSecRuleUpgradeState(AppSecRuleUpgradeState $) {
        this.configId = $.configId;
        this.currentRuleset = $.currentRuleset;
        this.evalStatus = $.evalStatus;
        this.mode = $.mode;
        this.securityPolicyId = $.securityPolicyId;
        this.upgradeMode = $.upgradeMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecRuleUpgradeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecRuleUpgradeState $;

        public Builder() {
            $ = new AppSecRuleUpgradeState();
        }

        public Builder(AppSecRuleUpgradeState defaults) {
            $ = new AppSecRuleUpgradeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the ruleset being upgraded.
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the ruleset being upgraded.
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param currentRuleset Versioning information for the current KRS rule set
         * 
         * @return builder
         * 
         */
        public Builder currentRuleset(@Nullable Output<String> currentRuleset) {
            $.currentRuleset = currentRuleset;
            return this;
        }

        /**
         * @param currentRuleset Versioning information for the current KRS rule set
         * 
         * @return builder
         * 
         */
        public Builder currentRuleset(String currentRuleset) {
            return currentRuleset(Output.of(currentRuleset));
        }

        /**
         * @param evalStatus Whether an evaluation is currently in progress
         * 
         * @return builder
         * 
         */
        public Builder evalStatus(@Nullable Output<String> evalStatus) {
            $.evalStatus = evalStatus;
            return this;
        }

        /**
         * @param evalStatus Whether an evaluation is currently in progress
         * 
         * @return builder
         * 
         */
        public Builder evalStatus(String evalStatus) {
            return evalStatus(Output.of(evalStatus));
        }

        /**
         * @param mode Upgrade mode (KRS, AAG, ASE_MANUAL or ASE_AUTO)
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Upgrade mode (KRS, AAG, ASE_MANUAL or ASE_AUTO)
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the ruleset being upgraded.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(@Nullable Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the ruleset being upgraded.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        /**
         * @param upgradeMode . (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:
         * - **ASE_AUTO**. Akamai automatically updates your rulesets.
         * - **ASE_MANUAL**. Manually updates your rulesets.
         * 
         * @return builder
         * 
         */
        public Builder upgradeMode(@Nullable Output<String> upgradeMode) {
            $.upgradeMode = upgradeMode;
            return this;
        }

        /**
         * @param upgradeMode . (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:
         * - **ASE_AUTO**. Akamai automatically updates your rulesets.
         * - **ASE_MANUAL**. Manually updates your rulesets.
         * 
         * @return builder
         * 
         */
        public Builder upgradeMode(String upgradeMode) {
            return upgradeMode(Output.of(upgradeMode));
        }

        public AppSecRuleUpgradeState build() {
            return $;
        }
    }

}
