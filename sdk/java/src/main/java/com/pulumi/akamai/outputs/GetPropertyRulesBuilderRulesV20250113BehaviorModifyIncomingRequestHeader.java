// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20250113BehaviorModifyIncomingRequestHeader {
    /**
     * @return Either `ADD`, `DELETE`, `MODIFY`, or `PASS` incoming HTTP request headers.
     * 
     */
    private @Nullable String action;
    /**
     * @return When enabled with the `action` set to `MODIFY`, prevents creation of more than one instance of a header.
     * 
     */
    private @Nullable Boolean avoidDuplicateHeaders;
    /**
     * @return Specifies a custom field name that applies when the relevant `standard` header name is set to `OTHER`.
     * 
     */
    private @Nullable String customHeaderName;
    /**
     * @return Specifies the new header value.
     * 
     */
    private @Nullable String headerValue;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Supplies an HTTP header replacement value.
     * 
     */
    private @Nullable String newHeaderValue;
    /**
     * @return If the value of `action` is `ADD`, this specifies the name of the field to add.
     * 
     */
    private @Nullable String standardAddHeaderName;
    /**
     * @return If the value of `action` is `DELETE`, this specifies the name of the field to remove.
     * 
     */
    private @Nullable String standardDeleteHeaderName;
    /**
     * @return If the value of `action` is `MODIFY`, this specifies the name of the field to modify.
     * 
     */
    private @Nullable String standardModifyHeaderName;
    /**
     * @return If the value of `action` is `PASS`, this specifies the name of the field to pass through.
     * 
     */
    private @Nullable String standardPassHeaderName;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20250113BehaviorModifyIncomingRequestHeader() {}
    /**
     * @return Either `ADD`, `DELETE`, `MODIFY`, or `PASS` incoming HTTP request headers.
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return When enabled with the `action` set to `MODIFY`, prevents creation of more than one instance of a header.
     * 
     */
    public Optional<Boolean> avoidDuplicateHeaders() {
        return Optional.ofNullable(this.avoidDuplicateHeaders);
    }
    /**
     * @return Specifies a custom field name that applies when the relevant `standard` header name is set to `OTHER`.
     * 
     */
    public Optional<String> customHeaderName() {
        return Optional.ofNullable(this.customHeaderName);
    }
    /**
     * @return Specifies the new header value.
     * 
     */
    public Optional<String> headerValue() {
        return Optional.ofNullable(this.headerValue);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Supplies an HTTP header replacement value.
     * 
     */
    public Optional<String> newHeaderValue() {
        return Optional.ofNullable(this.newHeaderValue);
    }
    /**
     * @return If the value of `action` is `ADD`, this specifies the name of the field to add.
     * 
     */
    public Optional<String> standardAddHeaderName() {
        return Optional.ofNullable(this.standardAddHeaderName);
    }
    /**
     * @return If the value of `action` is `DELETE`, this specifies the name of the field to remove.
     * 
     */
    public Optional<String> standardDeleteHeaderName() {
        return Optional.ofNullable(this.standardDeleteHeaderName);
    }
    /**
     * @return If the value of `action` is `MODIFY`, this specifies the name of the field to modify.
     * 
     */
    public Optional<String> standardModifyHeaderName() {
        return Optional.ofNullable(this.standardModifyHeaderName);
    }
    /**
     * @return If the value of `action` is `PASS`, this specifies the name of the field to pass through.
     * 
     */
    public Optional<String> standardPassHeaderName() {
        return Optional.ofNullable(this.standardPassHeaderName);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20250113BehaviorModifyIncomingRequestHeader defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable Boolean avoidDuplicateHeaders;
        private @Nullable String customHeaderName;
        private @Nullable String headerValue;
        private @Nullable Boolean locked;
        private @Nullable String newHeaderValue;
        private @Nullable String standardAddHeaderName;
        private @Nullable String standardDeleteHeaderName;
        private @Nullable String standardModifyHeaderName;
        private @Nullable String standardPassHeaderName;
        private @Nullable String templateUuid;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20250113BehaviorModifyIncomingRequestHeader defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.avoidDuplicateHeaders = defaults.avoidDuplicateHeaders;
    	      this.customHeaderName = defaults.customHeaderName;
    	      this.headerValue = defaults.headerValue;
    	      this.locked = defaults.locked;
    	      this.newHeaderValue = defaults.newHeaderValue;
    	      this.standardAddHeaderName = defaults.standardAddHeaderName;
    	      this.standardDeleteHeaderName = defaults.standardDeleteHeaderName;
    	      this.standardModifyHeaderName = defaults.standardModifyHeaderName;
    	      this.standardPassHeaderName = defaults.standardPassHeaderName;
    	      this.templateUuid = defaults.templateUuid;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {

            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder avoidDuplicateHeaders(@Nullable Boolean avoidDuplicateHeaders) {

            this.avoidDuplicateHeaders = avoidDuplicateHeaders;
            return this;
        }
        @CustomType.Setter
        public Builder customHeaderName(@Nullable String customHeaderName) {

            this.customHeaderName = customHeaderName;
            return this;
        }
        @CustomType.Setter
        public Builder headerValue(@Nullable String headerValue) {

            this.headerValue = headerValue;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder newHeaderValue(@Nullable String newHeaderValue) {

            this.newHeaderValue = newHeaderValue;
            return this;
        }
        @CustomType.Setter
        public Builder standardAddHeaderName(@Nullable String standardAddHeaderName) {

            this.standardAddHeaderName = standardAddHeaderName;
            return this;
        }
        @CustomType.Setter
        public Builder standardDeleteHeaderName(@Nullable String standardDeleteHeaderName) {

            this.standardDeleteHeaderName = standardDeleteHeaderName;
            return this;
        }
        @CustomType.Setter
        public Builder standardModifyHeaderName(@Nullable String standardModifyHeaderName) {

            this.standardModifyHeaderName = standardModifyHeaderName;
            return this;
        }
        @CustomType.Setter
        public Builder standardPassHeaderName(@Nullable String standardPassHeaderName) {

            this.standardPassHeaderName = standardPassHeaderName;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20250113BehaviorModifyIncomingRequestHeader build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20250113BehaviorModifyIncomingRequestHeader();
            _resultValue.action = action;
            _resultValue.avoidDuplicateHeaders = avoidDuplicateHeaders;
            _resultValue.customHeaderName = customHeaderName;
            _resultValue.headerValue = headerValue;
            _resultValue.locked = locked;
            _resultValue.newHeaderValue = newHeaderValue;
            _resultValue.standardAddHeaderName = standardAddHeaderName;
            _resultValue.standardDeleteHeaderName = standardDeleteHeaderName;
            _resultValue.standardModifyHeaderName = standardModifyHeaderName;
            _resultValue.standardPassHeaderName = standardPassHeaderName;
            _resultValue.templateUuid = templateUuid;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
