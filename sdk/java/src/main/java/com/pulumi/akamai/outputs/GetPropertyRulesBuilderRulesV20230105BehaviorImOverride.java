// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230105BehaviorImOverride {
    private @Nullable Double dpr;
    private @Nullable String dprvar;
    private @Nullable Boolean excludeAllQueryParameters;
    private @Nullable List<String> excludedQueryParameters;
    private @Nullable String format;
    private @Nullable String formatvar;
    private @Nullable Boolean locked;
    private @Nullable String override;
    private @Nullable String policy;
    private @Nullable String policyvar;
    private @Nullable String policyvarIMvar;
    private @Nullable String policyvarName;
    private @Nullable String templateUuid;
    private @Nullable String typesel;
    private @Nullable String uuid;
    private @Nullable Double width;
    private @Nullable String widthvar;

    private GetPropertyRulesBuilderRulesV20230105BehaviorImOverride() {}
    public Optional<Double> dpr() {
        return Optional.ofNullable(this.dpr);
    }
    public Optional<String> dprvar() {
        return Optional.ofNullable(this.dprvar);
    }
    public Optional<Boolean> excludeAllQueryParameters() {
        return Optional.ofNullable(this.excludeAllQueryParameters);
    }
    public List<String> excludedQueryParameters() {
        return this.excludedQueryParameters == null ? List.of() : this.excludedQueryParameters;
    }
    public Optional<String> format() {
        return Optional.ofNullable(this.format);
    }
    public Optional<String> formatvar() {
        return Optional.ofNullable(this.formatvar);
    }
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    public Optional<String> override() {
        return Optional.ofNullable(this.override);
    }
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }
    public Optional<String> policyvar() {
        return Optional.ofNullable(this.policyvar);
    }
    public Optional<String> policyvarIMvar() {
        return Optional.ofNullable(this.policyvarIMvar);
    }
    public Optional<String> policyvarName() {
        return Optional.ofNullable(this.policyvarName);
    }
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    public Optional<String> typesel() {
        return Optional.ofNullable(this.typesel);
    }
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }
    public Optional<Double> width() {
        return Optional.ofNullable(this.width);
    }
    public Optional<String> widthvar() {
        return Optional.ofNullable(this.widthvar);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230105BehaviorImOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double dpr;
        private @Nullable String dprvar;
        private @Nullable Boolean excludeAllQueryParameters;
        private @Nullable List<String> excludedQueryParameters;
        private @Nullable String format;
        private @Nullable String formatvar;
        private @Nullable Boolean locked;
        private @Nullable String override;
        private @Nullable String policy;
        private @Nullable String policyvar;
        private @Nullable String policyvarIMvar;
        private @Nullable String policyvarName;
        private @Nullable String templateUuid;
        private @Nullable String typesel;
        private @Nullable String uuid;
        private @Nullable Double width;
        private @Nullable String widthvar;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230105BehaviorImOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dpr = defaults.dpr;
    	      this.dprvar = defaults.dprvar;
    	      this.excludeAllQueryParameters = defaults.excludeAllQueryParameters;
    	      this.excludedQueryParameters = defaults.excludedQueryParameters;
    	      this.format = defaults.format;
    	      this.formatvar = defaults.formatvar;
    	      this.locked = defaults.locked;
    	      this.override = defaults.override;
    	      this.policy = defaults.policy;
    	      this.policyvar = defaults.policyvar;
    	      this.policyvarIMvar = defaults.policyvarIMvar;
    	      this.policyvarName = defaults.policyvarName;
    	      this.templateUuid = defaults.templateUuid;
    	      this.typesel = defaults.typesel;
    	      this.uuid = defaults.uuid;
    	      this.width = defaults.width;
    	      this.widthvar = defaults.widthvar;
        }

        @CustomType.Setter
        public Builder dpr(@Nullable Double dpr) {
            this.dpr = dpr;
            return this;
        }
        @CustomType.Setter
        public Builder dprvar(@Nullable String dprvar) {
            this.dprvar = dprvar;
            return this;
        }
        @CustomType.Setter
        public Builder excludeAllQueryParameters(@Nullable Boolean excludeAllQueryParameters) {
            this.excludeAllQueryParameters = excludeAllQueryParameters;
            return this;
        }
        @CustomType.Setter
        public Builder excludedQueryParameters(@Nullable List<String> excludedQueryParameters) {
            this.excludedQueryParameters = excludedQueryParameters;
            return this;
        }
        public Builder excludedQueryParameters(String... excludedQueryParameters) {
            return excludedQueryParameters(List.of(excludedQueryParameters));
        }
        @CustomType.Setter
        public Builder format(@Nullable String format) {
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder formatvar(@Nullable String formatvar) {
            this.formatvar = formatvar;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {
            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder override(@Nullable String override) {
            this.override = override;
            return this;
        }
        @CustomType.Setter
        public Builder policy(@Nullable String policy) {
            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder policyvar(@Nullable String policyvar) {
            this.policyvar = policyvar;
            return this;
        }
        @CustomType.Setter
        public Builder policyvarIMvar(@Nullable String policyvarIMvar) {
            this.policyvarIMvar = policyvarIMvar;
            return this;
        }
        @CustomType.Setter
        public Builder policyvarName(@Nullable String policyvarName) {
            this.policyvarName = policyvarName;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {
            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder typesel(@Nullable String typesel) {
            this.typesel = typesel;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {
            this.uuid = uuid;
            return this;
        }
        @CustomType.Setter
        public Builder width(@Nullable Double width) {
            this.width = width;
            return this;
        }
        @CustomType.Setter
        public Builder widthvar(@Nullable String widthvar) {
            this.widthvar = widthvar;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230105BehaviorImOverride build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230105BehaviorImOverride();
            _resultValue.dpr = dpr;
            _resultValue.dprvar = dprvar;
            _resultValue.excludeAllQueryParameters = excludeAllQueryParameters;
            _resultValue.excludedQueryParameters = excludedQueryParameters;
            _resultValue.format = format;
            _resultValue.formatvar = formatvar;
            _resultValue.locked = locked;
            _resultValue.override = override;
            _resultValue.policy = policy;
            _resultValue.policyvar = policyvar;
            _resultValue.policyvarIMvar = policyvarIMvar;
            _resultValue.policyvarName = policyvarName;
            _resultValue.templateUuid = templateUuid;
            _resultValue.typesel = typesel;
            _resultValue.uuid = uuid;
            _resultValue.width = width;
            _resultValue.widthvar = widthvar;
            return _resultValue;
        }
    }
}
