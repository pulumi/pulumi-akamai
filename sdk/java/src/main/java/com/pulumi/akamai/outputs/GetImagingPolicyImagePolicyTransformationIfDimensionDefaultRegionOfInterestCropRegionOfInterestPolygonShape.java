// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapePoint;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShape {
    private List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapePoint> points;

    private GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShape() {}
    public List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapePoint> points() {
        return this.points;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShape defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapePoint> points;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShape defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.points = defaults.points;
        }

        @CustomType.Setter
        public Builder points(List<GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapePoint> points) {
            this.points = Objects.requireNonNull(points);
            return this;
        }
        public Builder points(GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShapePoint... points) {
            return points(List.of(points));
        }
        public GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShape build() {
            final var o = new GetImagingPolicyImagePolicyTransformationIfDimensionDefaultRegionOfInterestCropRegionOfInterestPolygonShape();
            o.points = points;
            return o;
        }
    }
}
