// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230530BehaviorSureRoute {
    private @Nullable Boolean allowFcmParentOverride;
    private @Nullable String customMap;
    private @Nullable String customStatKey;
    private @Nullable Boolean enableCustomKey;
    private @Nullable Boolean enabled;
    private @Nullable Boolean forceSslForward;
    private @Nullable Boolean locked;
    private @Nullable String raceStatTtl;
    private @Nullable String srDownloadLinkTitle;
    private @Nullable String templateUuid;
    private @Nullable String testObjectUrl;
    private @Nullable String toHost;
    private @Nullable String toHostStatus;
    private @Nullable String type;
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20230530BehaviorSureRoute() {}
    public Optional<Boolean> allowFcmParentOverride() {
        return Optional.ofNullable(this.allowFcmParentOverride);
    }
    public Optional<String> customMap() {
        return Optional.ofNullable(this.customMap);
    }
    public Optional<String> customStatKey() {
        return Optional.ofNullable(this.customStatKey);
    }
    public Optional<Boolean> enableCustomKey() {
        return Optional.ofNullable(this.enableCustomKey);
    }
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    public Optional<Boolean> forceSslForward() {
        return Optional.ofNullable(this.forceSslForward);
    }
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    public Optional<String> raceStatTtl() {
        return Optional.ofNullable(this.raceStatTtl);
    }
    public Optional<String> srDownloadLinkTitle() {
        return Optional.ofNullable(this.srDownloadLinkTitle);
    }
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    public Optional<String> testObjectUrl() {
        return Optional.ofNullable(this.testObjectUrl);
    }
    public Optional<String> toHost() {
        return Optional.ofNullable(this.toHost);
    }
    public Optional<String> toHostStatus() {
        return Optional.ofNullable(this.toHostStatus);
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230530BehaviorSureRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowFcmParentOverride;
        private @Nullable String customMap;
        private @Nullable String customStatKey;
        private @Nullable Boolean enableCustomKey;
        private @Nullable Boolean enabled;
        private @Nullable Boolean forceSslForward;
        private @Nullable Boolean locked;
        private @Nullable String raceStatTtl;
        private @Nullable String srDownloadLinkTitle;
        private @Nullable String templateUuid;
        private @Nullable String testObjectUrl;
        private @Nullable String toHost;
        private @Nullable String toHostStatus;
        private @Nullable String type;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230530BehaviorSureRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowFcmParentOverride = defaults.allowFcmParentOverride;
    	      this.customMap = defaults.customMap;
    	      this.customStatKey = defaults.customStatKey;
    	      this.enableCustomKey = defaults.enableCustomKey;
    	      this.enabled = defaults.enabled;
    	      this.forceSslForward = defaults.forceSslForward;
    	      this.locked = defaults.locked;
    	      this.raceStatTtl = defaults.raceStatTtl;
    	      this.srDownloadLinkTitle = defaults.srDownloadLinkTitle;
    	      this.templateUuid = defaults.templateUuid;
    	      this.testObjectUrl = defaults.testObjectUrl;
    	      this.toHost = defaults.toHost;
    	      this.toHostStatus = defaults.toHostStatus;
    	      this.type = defaults.type;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder allowFcmParentOverride(@Nullable Boolean allowFcmParentOverride) {
            this.allowFcmParentOverride = allowFcmParentOverride;
            return this;
        }
        @CustomType.Setter
        public Builder customMap(@Nullable String customMap) {
            this.customMap = customMap;
            return this;
        }
        @CustomType.Setter
        public Builder customStatKey(@Nullable String customStatKey) {
            this.customStatKey = customStatKey;
            return this;
        }
        @CustomType.Setter
        public Builder enableCustomKey(@Nullable Boolean enableCustomKey) {
            this.enableCustomKey = enableCustomKey;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder forceSslForward(@Nullable Boolean forceSslForward) {
            this.forceSslForward = forceSslForward;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {
            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder raceStatTtl(@Nullable String raceStatTtl) {
            this.raceStatTtl = raceStatTtl;
            return this;
        }
        @CustomType.Setter
        public Builder srDownloadLinkTitle(@Nullable String srDownloadLinkTitle) {
            this.srDownloadLinkTitle = srDownloadLinkTitle;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {
            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder testObjectUrl(@Nullable String testObjectUrl) {
            this.testObjectUrl = testObjectUrl;
            return this;
        }
        @CustomType.Setter
        public Builder toHost(@Nullable String toHost) {
            this.toHost = toHost;
            return this;
        }
        @CustomType.Setter
        public Builder toHostStatus(@Nullable String toHostStatus) {
            this.toHostStatus = toHostStatus;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {
            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230530BehaviorSureRoute build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230530BehaviorSureRoute();
            _resultValue.allowFcmParentOverride = allowFcmParentOverride;
            _resultValue.customMap = customMap;
            _resultValue.customStatKey = customStatKey;
            _resultValue.enableCustomKey = enableCustomKey;
            _resultValue.enabled = enabled;
            _resultValue.forceSslForward = forceSslForward;
            _resultValue.locked = locked;
            _resultValue.raceStatTtl = raceStatTtl;
            _resultValue.srDownloadLinkTitle = srDownloadLinkTitle;
            _resultValue.templateUuid = templateUuid;
            _resultValue.testObjectUrl = testObjectUrl;
            _resultValue.toHost = toHost;
            _resultValue.toHostStatus = toHostStatus;
            _resultValue.type = type;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
