// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230105CriterionUserLocation {
    private @Nullable String checkIps;
    private @Nullable List<String> continentValues;
    private @Nullable List<String> countryValues;
    private @Nullable String field;
    private @Nullable Boolean locked;
    private @Nullable String matchOperator;
    private @Nullable List<String> regionValues;
    private @Nullable String templateUuid;
    private @Nullable Boolean useOnlyFirstXForwardedForIp;
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20230105CriterionUserLocation() {}
    public Optional<String> checkIps() {
        return Optional.ofNullable(this.checkIps);
    }
    public List<String> continentValues() {
        return this.continentValues == null ? List.of() : this.continentValues;
    }
    public List<String> countryValues() {
        return this.countryValues == null ? List.of() : this.countryValues;
    }
    public Optional<String> field() {
        return Optional.ofNullable(this.field);
    }
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    public Optional<String> matchOperator() {
        return Optional.ofNullable(this.matchOperator);
    }
    public List<String> regionValues() {
        return this.regionValues == null ? List.of() : this.regionValues;
    }
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    public Optional<Boolean> useOnlyFirstXForwardedForIp() {
        return Optional.ofNullable(this.useOnlyFirstXForwardedForIp);
    }
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230105CriterionUserLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String checkIps;
        private @Nullable List<String> continentValues;
        private @Nullable List<String> countryValues;
        private @Nullable String field;
        private @Nullable Boolean locked;
        private @Nullable String matchOperator;
        private @Nullable List<String> regionValues;
        private @Nullable String templateUuid;
        private @Nullable Boolean useOnlyFirstXForwardedForIp;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230105CriterionUserLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkIps = defaults.checkIps;
    	      this.continentValues = defaults.continentValues;
    	      this.countryValues = defaults.countryValues;
    	      this.field = defaults.field;
    	      this.locked = defaults.locked;
    	      this.matchOperator = defaults.matchOperator;
    	      this.regionValues = defaults.regionValues;
    	      this.templateUuid = defaults.templateUuid;
    	      this.useOnlyFirstXForwardedForIp = defaults.useOnlyFirstXForwardedForIp;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder checkIps(@Nullable String checkIps) {
            this.checkIps = checkIps;
            return this;
        }
        @CustomType.Setter
        public Builder continentValues(@Nullable List<String> continentValues) {
            this.continentValues = continentValues;
            return this;
        }
        public Builder continentValues(String... continentValues) {
            return continentValues(List.of(continentValues));
        }
        @CustomType.Setter
        public Builder countryValues(@Nullable List<String> countryValues) {
            this.countryValues = countryValues;
            return this;
        }
        public Builder countryValues(String... countryValues) {
            return countryValues(List.of(countryValues));
        }
        @CustomType.Setter
        public Builder field(@Nullable String field) {
            this.field = field;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {
            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder matchOperator(@Nullable String matchOperator) {
            this.matchOperator = matchOperator;
            return this;
        }
        @CustomType.Setter
        public Builder regionValues(@Nullable List<String> regionValues) {
            this.regionValues = regionValues;
            return this;
        }
        public Builder regionValues(String... regionValues) {
            return regionValues(List.of(regionValues));
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {
            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder useOnlyFirstXForwardedForIp(@Nullable Boolean useOnlyFirstXForwardedForIp) {
            this.useOnlyFirstXForwardedForIp = useOnlyFirstXForwardedForIp;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {
            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230105CriterionUserLocation build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230105CriterionUserLocation();
            _resultValue.checkIps = checkIps;
            _resultValue.continentValues = continentValues;
            _resultValue.countryValues = countryValues;
            _resultValue.field = field;
            _resultValue.locked = locked;
            _resultValue.matchOperator = matchOperator;
            _resultValue.regionValues = regionValues;
            _resultValue.templateUuid = templateUuid;
            _resultValue.useOnlyFirstXForwardedForIp = useOnlyFirstXForwardedForIp;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
