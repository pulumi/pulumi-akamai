// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatastreamSumologicConnectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatastreamSumologicConnectorArgs Empty = new DatastreamSumologicConnectorArgs();

    @Import(name="collectorCode", required=true)
    private Output<String> collectorCode;

    public Output<String> collectorCode() {
        return this.collectorCode;
    }

    @Import(name="compressLogs")
    private @Nullable Output<Boolean> compressLogs;

    public Optional<Output<Boolean>> compressLogs() {
        return Optional.ofNullable(this.compressLogs);
    }

    @Import(name="contentType")
    private @Nullable Output<String> contentType;

    public Optional<Output<String>> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    @Import(name="customHeaderName")
    private @Nullable Output<String> customHeaderName;

    public Optional<Output<String>> customHeaderName() {
        return Optional.ofNullable(this.customHeaderName);
    }

    @Import(name="customHeaderValue")
    private @Nullable Output<String> customHeaderValue;

    public Optional<Output<String>> customHeaderValue() {
        return Optional.ofNullable(this.customHeaderValue);
    }

    @Import(name="displayName", required=true)
    private Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    @Import(name="endpoint", required=true)
    private Output<String> endpoint;

    public Output<String> endpoint() {
        return this.endpoint;
    }

    private DatastreamSumologicConnectorArgs() {}

    private DatastreamSumologicConnectorArgs(DatastreamSumologicConnectorArgs $) {
        this.collectorCode = $.collectorCode;
        this.compressLogs = $.compressLogs;
        this.contentType = $.contentType;
        this.customHeaderName = $.customHeaderName;
        this.customHeaderValue = $.customHeaderValue;
        this.displayName = $.displayName;
        this.endpoint = $.endpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatastreamSumologicConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatastreamSumologicConnectorArgs $;

        public Builder() {
            $ = new DatastreamSumologicConnectorArgs();
        }

        public Builder(DatastreamSumologicConnectorArgs defaults) {
            $ = new DatastreamSumologicConnectorArgs(Objects.requireNonNull(defaults));
        }

        public Builder collectorCode(Output<String> collectorCode) {
            $.collectorCode = collectorCode;
            return this;
        }

        public Builder collectorCode(String collectorCode) {
            return collectorCode(Output.of(collectorCode));
        }

        public Builder compressLogs(@Nullable Output<Boolean> compressLogs) {
            $.compressLogs = compressLogs;
            return this;
        }

        public Builder compressLogs(Boolean compressLogs) {
            return compressLogs(Output.of(compressLogs));
        }

        public Builder contentType(@Nullable Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        public Builder customHeaderName(@Nullable Output<String> customHeaderName) {
            $.customHeaderName = customHeaderName;
            return this;
        }

        public Builder customHeaderName(String customHeaderName) {
            return customHeaderName(Output.of(customHeaderName));
        }

        public Builder customHeaderValue(@Nullable Output<String> customHeaderValue) {
            $.customHeaderValue = customHeaderValue;
            return this;
        }

        public Builder customHeaderValue(String customHeaderValue) {
            return customHeaderValue(Output.of(customHeaderValue));
        }

        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder endpoint(Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public DatastreamSumologicConnectorArgs build() {
            if ($.collectorCode == null) {
                throw new MissingRequiredPropertyException("DatastreamSumologicConnectorArgs", "collectorCode");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("DatastreamSumologicConnectorArgs", "displayName");
            }
            if ($.endpoint == null) {
                throw new MissingRequiredPropertyException("DatastreamSumologicConnectorArgs", "endpoint");
            }
            return $;
        }
    }

}
