// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs Empty = new GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs();

    /**
     * Specify the caching option.
     * 
     */
    @Import(name="behavior")
    private @Nullable Output<String> behavior;

    /**
     * @return Specify the caching option.
     * 
     */
    public Optional<Output<String>> behavior() {
        return Optional.ofNullable(this.behavior);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="cacheControlDirectives")
    private @Nullable Output<String> cacheControlDirectives;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> cacheControlDirectives() {
        return Optional.ofNullable(this.cacheControlDirectives);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="cacheabilitySettings")
    private @Nullable Output<String> cacheabilitySettings;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> cacheabilitySettings() {
        return Optional.ofNullable(this.cacheabilitySettings);
    }

    /**
     * Set the `MAX_AGE` header for the cached content.
     * 
     */
    @Import(name="defaultTtl")
    private @Nullable Output<String> defaultTtl;

    /**
     * @return Set the `MAX_AGE` header for the cached content.
     * 
     */
    public Optional<Output<String>> defaultTtl() {
        return Optional.ofNullable(this.defaultTtl);
    }

    /**
     * This enables honoring particular `Cache-Control` header directives from the origin. Supports all official `RFC 7234` directives except for `no-transform`.
     * 
     */
    @Import(name="enhancedRfcSupport")
    private @Nullable Output<Boolean> enhancedRfcSupport;

    /**
     * @return This enables honoring particular `Cache-Control` header directives from the origin. Supports all official `RFC 7234` directives except for `no-transform`.
     * 
     */
    public Optional<Output<Boolean>> enhancedRfcSupport() {
        return Optional.ofNullable(this.enhancedRfcSupport);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="expirationSettings")
    private @Nullable Output<String> expirationSettings;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> expirationSettings() {
        return Optional.ofNullable(this.expirationSettings);
    }

    /**
     * This instructs edge servers to cache the object for a length of time set by the `max-age` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
     * 
     */
    @Import(name="honorMaxAge")
    private @Nullable Output<Boolean> honorMaxAge;

    /**
     * @return This instructs edge servers to cache the object for a length of time set by the `max-age` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
     * 
     */
    public Optional<Output<Boolean>> honorMaxAge() {
        return Optional.ofNullable(this.honorMaxAge);
    }

    /**
     * This instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
     * 
     */
    @Import(name="honorMustRevalidate")
    private @Nullable Output<Boolean> honorMustRevalidate;

    /**
     * @return This instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
     * 
     */
    public Optional<Output<Boolean>> honorMustRevalidate() {
        return Optional.ofNullable(this.honorMustRevalidate);
    }

    /**
     * With the `no-cache` directive present in the response, this instructs edge servers to validate or refetch the response for each request. Effectively, set the time to live `ttl` to zero seconds.
     * 
     */
    @Import(name="honorNoCache")
    private @Nullable Output<Boolean> honorNoCache;

    /**
     * @return With the `no-cache` directive present in the response, this instructs edge servers to validate or refetch the response for each request. Effectively, set the time to live `ttl` to zero seconds.
     * 
     */
    public Optional<Output<Boolean>> honorNoCache() {
        return Optional.ofNullable(this.honorNoCache);
    }

    /**
     * Instructs edge servers not to cache the response when the origin response includes the `no-store` directive.
     * 
     */
    @Import(name="honorNoStore")
    private @Nullable Output<Boolean> honorNoStore;

    /**
     * @return Instructs edge servers not to cache the response when the origin response includes the `no-store` directive.
     * 
     */
    public Optional<Output<Boolean>> honorNoStore() {
        return Optional.ofNullable(this.honorNoStore);
    }

    /**
     * Instructs edge servers not to cache the response when the origin response includes the `private` directive.
     * 
     */
    @Import(name="honorPrivate")
    private @Nullable Output<Boolean> honorPrivate;

    /**
     * @return Instructs edge servers not to cache the response when the origin response includes the `private` directive.
     * 
     */
    public Optional<Output<Boolean>> honorPrivate() {
        return Optional.ofNullable(this.honorPrivate);
    }

    /**
     * With the `proxy-revalidate` directive present in the response, this instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
     * 
     */
    @Import(name="honorProxyRevalidate")
    private @Nullable Output<Boolean> honorProxyRevalidate;

    /**
     * @return With the `proxy-revalidate` directive present in the response, this instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
     * 
     */
    public Optional<Output<Boolean>> honorProxyRevalidate() {
        return Optional.ofNullable(this.honorProxyRevalidate);
    }

    /**
     * Instructs edge servers to cache the object for a length of time set by the `s-maxage` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
     * 
     */
    @Import(name="honorSMaxage")
    private @Nullable Output<Boolean> honorSMaxage;

    /**
     * @return Instructs edge servers to cache the object for a length of time set by the `s-maxage` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
     * 
     */
    public Optional<Output<Boolean>> honorSMaxage() {
        return Optional.ofNullable(this.honorSMaxage);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Determines what to do once the cached content has expired, by which time the Akamai platform should have re-fetched and validated content from the origin. If enabled, only allows the re-fetched content to be served. If disabled, may serve stale content if the origin is unavailable.
     * 
     */
    @Import(name="mustRevalidate")
    private @Nullable Output<Boolean> mustRevalidate;

    /**
     * @return Determines what to do once the cached content has expired, by which time the Akamai platform should have re-fetched and validated content from the origin. If enabled, only allows the re-fetched content to be served. If disabled, may serve stale content if the origin is unavailable.
     * 
     */
    public Optional<Output<Boolean>> mustRevalidate() {
        return Optional.ofNullable(this.mustRevalidate);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="revalidationSettings")
    private @Nullable Output<String> revalidationSettings;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> revalidationSettings() {
        return Optional.ofNullable(this.revalidationSettings);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * The maximum time content may remain cached. Setting the value to `0` is the same as setting a `no-cache` header, which forces content to revalidate.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<String> ttl;

    /**
     * @return The maximum time content may remain cached. Setting the value to `0` is the same as setting a `no-cache` header, which forces content to revalidate.
     * 
     */
    public Optional<Output<String>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs() {}

    private GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs(GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs $) {
        this.behavior = $.behavior;
        this.cacheControlDirectives = $.cacheControlDirectives;
        this.cacheabilitySettings = $.cacheabilitySettings;
        this.defaultTtl = $.defaultTtl;
        this.enhancedRfcSupport = $.enhancedRfcSupport;
        this.expirationSettings = $.expirationSettings;
        this.honorMaxAge = $.honorMaxAge;
        this.honorMustRevalidate = $.honorMustRevalidate;
        this.honorNoCache = $.honorNoCache;
        this.honorNoStore = $.honorNoStore;
        this.honorPrivate = $.honorPrivate;
        this.honorProxyRevalidate = $.honorProxyRevalidate;
        this.honorSMaxage = $.honorSMaxage;
        this.locked = $.locked;
        this.mustRevalidate = $.mustRevalidate;
        this.revalidationSettings = $.revalidationSettings;
        this.templateUuid = $.templateUuid;
        this.ttl = $.ttl;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param behavior Specify the caching option.
         * 
         * @return builder
         * 
         */
        public Builder behavior(@Nullable Output<String> behavior) {
            $.behavior = behavior;
            return this;
        }

        /**
         * @param behavior Specify the caching option.
         * 
         * @return builder
         * 
         */
        public Builder behavior(String behavior) {
            return behavior(Output.of(behavior));
        }

        /**
         * @param cacheControlDirectives This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder cacheControlDirectives(@Nullable Output<String> cacheControlDirectives) {
            $.cacheControlDirectives = cacheControlDirectives;
            return this;
        }

        /**
         * @param cacheControlDirectives This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder cacheControlDirectives(String cacheControlDirectives) {
            return cacheControlDirectives(Output.of(cacheControlDirectives));
        }

        /**
         * @param cacheabilitySettings This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder cacheabilitySettings(@Nullable Output<String> cacheabilitySettings) {
            $.cacheabilitySettings = cacheabilitySettings;
            return this;
        }

        /**
         * @param cacheabilitySettings This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder cacheabilitySettings(String cacheabilitySettings) {
            return cacheabilitySettings(Output.of(cacheabilitySettings));
        }

        /**
         * @param defaultTtl Set the `MAX_AGE` header for the cached content.
         * 
         * @return builder
         * 
         */
        public Builder defaultTtl(@Nullable Output<String> defaultTtl) {
            $.defaultTtl = defaultTtl;
            return this;
        }

        /**
         * @param defaultTtl Set the `MAX_AGE` header for the cached content.
         * 
         * @return builder
         * 
         */
        public Builder defaultTtl(String defaultTtl) {
            return defaultTtl(Output.of(defaultTtl));
        }

        /**
         * @param enhancedRfcSupport This enables honoring particular `Cache-Control` header directives from the origin. Supports all official `RFC 7234` directives except for `no-transform`.
         * 
         * @return builder
         * 
         */
        public Builder enhancedRfcSupport(@Nullable Output<Boolean> enhancedRfcSupport) {
            $.enhancedRfcSupport = enhancedRfcSupport;
            return this;
        }

        /**
         * @param enhancedRfcSupport This enables honoring particular `Cache-Control` header directives from the origin. Supports all official `RFC 7234` directives except for `no-transform`.
         * 
         * @return builder
         * 
         */
        public Builder enhancedRfcSupport(Boolean enhancedRfcSupport) {
            return enhancedRfcSupport(Output.of(enhancedRfcSupport));
        }

        /**
         * @param expirationSettings This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder expirationSettings(@Nullable Output<String> expirationSettings) {
            $.expirationSettings = expirationSettings;
            return this;
        }

        /**
         * @param expirationSettings This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder expirationSettings(String expirationSettings) {
            return expirationSettings(Output.of(expirationSettings));
        }

        /**
         * @param honorMaxAge This instructs edge servers to cache the object for a length of time set by the `max-age` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
         * 
         * @return builder
         * 
         */
        public Builder honorMaxAge(@Nullable Output<Boolean> honorMaxAge) {
            $.honorMaxAge = honorMaxAge;
            return this;
        }

        /**
         * @param honorMaxAge This instructs edge servers to cache the object for a length of time set by the `max-age` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
         * 
         * @return builder
         * 
         */
        public Builder honorMaxAge(Boolean honorMaxAge) {
            return honorMaxAge(Output.of(honorMaxAge));
        }

        /**
         * @param honorMustRevalidate This instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
         * 
         * @return builder
         * 
         */
        public Builder honorMustRevalidate(@Nullable Output<Boolean> honorMustRevalidate) {
            $.honorMustRevalidate = honorMustRevalidate;
            return this;
        }

        /**
         * @param honorMustRevalidate This instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
         * 
         * @return builder
         * 
         */
        public Builder honorMustRevalidate(Boolean honorMustRevalidate) {
            return honorMustRevalidate(Output.of(honorMustRevalidate));
        }

        /**
         * @param honorNoCache With the `no-cache` directive present in the response, this instructs edge servers to validate or refetch the response for each request. Effectively, set the time to live `ttl` to zero seconds.
         * 
         * @return builder
         * 
         */
        public Builder honorNoCache(@Nullable Output<Boolean> honorNoCache) {
            $.honorNoCache = honorNoCache;
            return this;
        }

        /**
         * @param honorNoCache With the `no-cache` directive present in the response, this instructs edge servers to validate or refetch the response for each request. Effectively, set the time to live `ttl` to zero seconds.
         * 
         * @return builder
         * 
         */
        public Builder honorNoCache(Boolean honorNoCache) {
            return honorNoCache(Output.of(honorNoCache));
        }

        /**
         * @param honorNoStore Instructs edge servers not to cache the response when the origin response includes the `no-store` directive.
         * 
         * @return builder
         * 
         */
        public Builder honorNoStore(@Nullable Output<Boolean> honorNoStore) {
            $.honorNoStore = honorNoStore;
            return this;
        }

        /**
         * @param honorNoStore Instructs edge servers not to cache the response when the origin response includes the `no-store` directive.
         * 
         * @return builder
         * 
         */
        public Builder honorNoStore(Boolean honorNoStore) {
            return honorNoStore(Output.of(honorNoStore));
        }

        /**
         * @param honorPrivate Instructs edge servers not to cache the response when the origin response includes the `private` directive.
         * 
         * @return builder
         * 
         */
        public Builder honorPrivate(@Nullable Output<Boolean> honorPrivate) {
            $.honorPrivate = honorPrivate;
            return this;
        }

        /**
         * @param honorPrivate Instructs edge servers not to cache the response when the origin response includes the `private` directive.
         * 
         * @return builder
         * 
         */
        public Builder honorPrivate(Boolean honorPrivate) {
            return honorPrivate(Output.of(honorPrivate));
        }

        /**
         * @param honorProxyRevalidate With the `proxy-revalidate` directive present in the response, this instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
         * 
         * @return builder
         * 
         */
        public Builder honorProxyRevalidate(@Nullable Output<Boolean> honorProxyRevalidate) {
            $.honorProxyRevalidate = honorProxyRevalidate;
            return this;
        }

        /**
         * @param honorProxyRevalidate With the `proxy-revalidate` directive present in the response, this instructs edge servers to successfully revalidate with the origin server before using stale objects in the cache to satisfy new requests.
         * 
         * @return builder
         * 
         */
        public Builder honorProxyRevalidate(Boolean honorProxyRevalidate) {
            return honorProxyRevalidate(Output.of(honorProxyRevalidate));
        }

        /**
         * @param honorSMaxage Instructs edge servers to cache the object for a length of time set by the `s-maxage` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
         * 
         * @return builder
         * 
         */
        public Builder honorSMaxage(@Nullable Output<Boolean> honorSMaxage) {
            $.honorSMaxage = honorSMaxage;
            return this;
        }

        /**
         * @param honorSMaxage Instructs edge servers to cache the object for a length of time set by the `s-maxage` directive in the response. When present in the origin response, this directive takes precedence over the `max-age` directive and the `defaultTtl` setting.
         * 
         * @return builder
         * 
         */
        public Builder honorSMaxage(Boolean honorSMaxage) {
            return honorSMaxage(Output.of(honorSMaxage));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param mustRevalidate Determines what to do once the cached content has expired, by which time the Akamai platform should have re-fetched and validated content from the origin. If enabled, only allows the re-fetched content to be served. If disabled, may serve stale content if the origin is unavailable.
         * 
         * @return builder
         * 
         */
        public Builder mustRevalidate(@Nullable Output<Boolean> mustRevalidate) {
            $.mustRevalidate = mustRevalidate;
            return this;
        }

        /**
         * @param mustRevalidate Determines what to do once the cached content has expired, by which time the Akamai platform should have re-fetched and validated content from the origin. If enabled, only allows the re-fetched content to be served. If disabled, may serve stale content if the origin is unavailable.
         * 
         * @return builder
         * 
         */
        public Builder mustRevalidate(Boolean mustRevalidate) {
            return mustRevalidate(Output.of(mustRevalidate));
        }

        /**
         * @param revalidationSettings This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder revalidationSettings(@Nullable Output<String> revalidationSettings) {
            $.revalidationSettings = revalidationSettings;
            return this;
        }

        /**
         * @param revalidationSettings This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder revalidationSettings(String revalidationSettings) {
            return revalidationSettings(Output.of(revalidationSettings));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param ttl The maximum time content may remain cached. Setting the value to `0` is the same as setting a `no-cache` header, which forces content to revalidate.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<String> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl The maximum time content may remain cached. Setting the value to `0` is the same as setting a `no-cache` header, which forces content to revalidate.
         * 
         * @return builder
         * 
         */
        public Builder ttl(String ttl) {
            return ttl(Output.of(ttl));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20250113BehaviorCachingArgs build() {
            return $;
        }
    }

}
