// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetCloudwrapperConfigurationMultiCdnSettingsBoccArgs;
import com.pulumi.akamai.inputs.GetCloudwrapperConfigurationMultiCdnSettingsCdnArgs;
import com.pulumi.akamai.inputs.GetCloudwrapperConfigurationMultiCdnSettingsDataStreamsArgs;
import com.pulumi.akamai.inputs.GetCloudwrapperConfigurationMultiCdnSettingsOriginArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudwrapperConfigurationMultiCdnSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCloudwrapperConfigurationMultiCdnSettingsArgs Empty = new GetCloudwrapperConfigurationMultiCdnSettingsArgs();

    @Import(name="bocc")
    private @Nullable Output<GetCloudwrapperConfigurationMultiCdnSettingsBoccArgs> bocc;

    public Optional<Output<GetCloudwrapperConfigurationMultiCdnSettingsBoccArgs>> bocc() {
        return Optional.ofNullable(this.bocc);
    }

    @Import(name="cdns")
    private @Nullable Output<List<GetCloudwrapperConfigurationMultiCdnSettingsCdnArgs>> cdns;

    public Optional<Output<List<GetCloudwrapperConfigurationMultiCdnSettingsCdnArgs>>> cdns() {
        return Optional.ofNullable(this.cdns);
    }

    @Import(name="dataStreams")
    private @Nullable Output<GetCloudwrapperConfigurationMultiCdnSettingsDataStreamsArgs> dataStreams;

    public Optional<Output<GetCloudwrapperConfigurationMultiCdnSettingsDataStreamsArgs>> dataStreams() {
        return Optional.ofNullable(this.dataStreams);
    }

    @Import(name="enableSoftAlerts", required=true)
    private Output<Boolean> enableSoftAlerts;

    public Output<Boolean> enableSoftAlerts() {
        return this.enableSoftAlerts;
    }

    @Import(name="origins")
    private @Nullable Output<List<GetCloudwrapperConfigurationMultiCdnSettingsOriginArgs>> origins;

    public Optional<Output<List<GetCloudwrapperConfigurationMultiCdnSettingsOriginArgs>>> origins() {
        return Optional.ofNullable(this.origins);
    }

    private GetCloudwrapperConfigurationMultiCdnSettingsArgs() {}

    private GetCloudwrapperConfigurationMultiCdnSettingsArgs(GetCloudwrapperConfigurationMultiCdnSettingsArgs $) {
        this.bocc = $.bocc;
        this.cdns = $.cdns;
        this.dataStreams = $.dataStreams;
        this.enableSoftAlerts = $.enableSoftAlerts;
        this.origins = $.origins;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudwrapperConfigurationMultiCdnSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudwrapperConfigurationMultiCdnSettingsArgs $;

        public Builder() {
            $ = new GetCloudwrapperConfigurationMultiCdnSettingsArgs();
        }

        public Builder(GetCloudwrapperConfigurationMultiCdnSettingsArgs defaults) {
            $ = new GetCloudwrapperConfigurationMultiCdnSettingsArgs(Objects.requireNonNull(defaults));
        }

        public Builder bocc(@Nullable Output<GetCloudwrapperConfigurationMultiCdnSettingsBoccArgs> bocc) {
            $.bocc = bocc;
            return this;
        }

        public Builder bocc(GetCloudwrapperConfigurationMultiCdnSettingsBoccArgs bocc) {
            return bocc(Output.of(bocc));
        }

        public Builder cdns(@Nullable Output<List<GetCloudwrapperConfigurationMultiCdnSettingsCdnArgs>> cdns) {
            $.cdns = cdns;
            return this;
        }

        public Builder cdns(List<GetCloudwrapperConfigurationMultiCdnSettingsCdnArgs> cdns) {
            return cdns(Output.of(cdns));
        }

        public Builder cdns(GetCloudwrapperConfigurationMultiCdnSettingsCdnArgs... cdns) {
            return cdns(List.of(cdns));
        }

        public Builder dataStreams(@Nullable Output<GetCloudwrapperConfigurationMultiCdnSettingsDataStreamsArgs> dataStreams) {
            $.dataStreams = dataStreams;
            return this;
        }

        public Builder dataStreams(GetCloudwrapperConfigurationMultiCdnSettingsDataStreamsArgs dataStreams) {
            return dataStreams(Output.of(dataStreams));
        }

        public Builder enableSoftAlerts(Output<Boolean> enableSoftAlerts) {
            $.enableSoftAlerts = enableSoftAlerts;
            return this;
        }

        public Builder enableSoftAlerts(Boolean enableSoftAlerts) {
            return enableSoftAlerts(Output.of(enableSoftAlerts));
        }

        public Builder origins(@Nullable Output<List<GetCloudwrapperConfigurationMultiCdnSettingsOriginArgs>> origins) {
            $.origins = origins;
            return this;
        }

        public Builder origins(List<GetCloudwrapperConfigurationMultiCdnSettingsOriginArgs> origins) {
            return origins(Output.of(origins));
        }

        public Builder origins(GetCloudwrapperConfigurationMultiCdnSettingsOriginArgs... origins) {
            return origins(List.of(origins));
        }

        public GetCloudwrapperConfigurationMultiCdnSettingsArgs build() {
            $.enableSoftAlerts = Objects.requireNonNull($.enableSoftAlerts, "expected parameter 'enableSoftAlerts' to be non-null");
            return $;
        }
    }

}
