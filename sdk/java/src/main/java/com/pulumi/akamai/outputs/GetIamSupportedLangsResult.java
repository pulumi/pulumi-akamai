// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIamSupportedLangsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> languages;

    private GetIamSupportedLangsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> languages() {
        return this.languages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamSupportedLangsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> languages;
        public Builder() {}
        public Builder(GetIamSupportedLangsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.languages = defaults.languages;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIamSupportedLangsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder languages(List<String> languages) {
            if (languages == null) {
              throw new MissingRequiredPropertyException("GetIamSupportedLangsResult", "languages");
            }
            this.languages = languages;
            return this;
        }
        public Builder languages(String... languages) {
            return languages(List.of(languages));
        }
        public GetIamSupportedLangsResult build() {
            final var _resultValue = new GetIamSupportedLangsResult();
            _resultValue.id = id;
            _resultValue.languages = languages;
            return _resultValue;
        }
    }
}
