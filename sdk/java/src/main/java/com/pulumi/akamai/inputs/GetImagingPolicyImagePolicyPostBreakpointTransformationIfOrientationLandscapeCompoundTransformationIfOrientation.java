// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationDefault;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationLandscape;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationPortrait;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationSquare;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation();

    @Import(name="default")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationDefault default_;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationDefault> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="landscape")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationLandscape landscape;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationLandscape> landscape() {
        return Optional.ofNullable(this.landscape);
    }

    @Import(name="portrait")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationPortrait portrait;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationPortrait> portrait() {
        return Optional.ofNullable(this.portrait);
    }

    @Import(name="square")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationSquare square;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationSquare> square() {
        return Optional.ofNullable(this.square);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation $) {
        this.default_ = $.default_;
        this.landscape = $.landscape;
        this.portrait = $.portrait;
        this.square = $.square;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationDefault default_) {
            $.default_ = default_;
            return this;
        }

        public Builder landscape(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationLandscape landscape) {
            $.landscape = landscape;
            return this;
        }

        public Builder portrait(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationPortrait portrait) {
            $.portrait = portrait;
            return this;
        }

        public Builder square(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientationSquare square) {
            $.square = square;
            return this;
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationLandscapeCompoundTransformationIfOrientation build() {
            return $;
        }
    }

}
