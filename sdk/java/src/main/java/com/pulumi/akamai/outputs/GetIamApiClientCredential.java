// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetIamApiClientCredentialActions;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIamApiClientCredential {
    /**
     * @return Specifies activities available on the API client&#39;s credentials.
     * 
     */
    private GetIamApiClientCredentialActions actions;
    /**
     * @return The part of the credential that identifies the API client.
     * 
     */
    private String clientToken;
    /**
     * @return The ISO 8601 timestamp indicating when the credential was created.
     * 
     */
    private String createdOn;
    /**
     * @return A unique identifier for each credential.
     * 
     */
    private Integer credentialId;
    /**
     * @return A human-readable description for the API client.
     * 
     */
    private String description;
    /**
     * @return The ISO 8601 timestamp indicating when the credential expires.
     * 
     */
    private String expiresOn;
    /**
     * @return Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`.
     * 
     */
    private String status;

    private GetIamApiClientCredential() {}
    /**
     * @return Specifies activities available on the API client&#39;s credentials.
     * 
     */
    public GetIamApiClientCredentialActions actions() {
        return this.actions;
    }
    /**
     * @return The part of the credential that identifies the API client.
     * 
     */
    public String clientToken() {
        return this.clientToken;
    }
    /**
     * @return The ISO 8601 timestamp indicating when the credential was created.
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return A unique identifier for each credential.
     * 
     */
    public Integer credentialId() {
        return this.credentialId;
    }
    /**
     * @return A human-readable description for the API client.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ISO 8601 timestamp indicating when the credential expires.
     * 
     */
    public String expiresOn() {
        return this.expiresOn;
    }
    /**
     * @return Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamApiClientCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetIamApiClientCredentialActions actions;
        private String clientToken;
        private String createdOn;
        private Integer credentialId;
        private String description;
        private String expiresOn;
        private String status;
        public Builder() {}
        public Builder(GetIamApiClientCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.clientToken = defaults.clientToken;
    	      this.createdOn = defaults.createdOn;
    	      this.credentialId = defaults.credentialId;
    	      this.description = defaults.description;
    	      this.expiresOn = defaults.expiresOn;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder actions(GetIamApiClientCredentialActions actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientCredential", "actions");
            }
            this.actions = actions;
            return this;
        }
        @CustomType.Setter
        public Builder clientToken(String clientToken) {
            if (clientToken == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientCredential", "clientToken");
            }
            this.clientToken = clientToken;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientCredential", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder credentialId(Integer credentialId) {
            if (credentialId == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientCredential", "credentialId");
            }
            this.credentialId = credentialId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientCredential", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder expiresOn(String expiresOn) {
            if (expiresOn == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientCredential", "expiresOn");
            }
            this.expiresOn = expiresOn;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetIamApiClientCredential", "status");
            }
            this.status = status;
            return this;
        }
        public GetIamApiClientCredential build() {
            final var _resultValue = new GetIamApiClientCredential();
            _resultValue.actions = actions;
            _resultValue.clientToken = clientToken;
            _resultValue.createdOn = createdOn;
            _resultValue.credentialId = credentialId;
            _resultValue.description = description;
            _resultValue.expiresOn = expiresOn;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
