// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPropertiesProperty {
    private String contractId;
    private String groupId;
    private Integer latestVersion;
    private String note;
    private String productId;
    private Integer productionVersion;
    private String propertyId;
    private String propertyName;
    private String ruleFormat;
    private Integer stagingVersion;

    private GetPropertiesProperty() {}
    public String contractId() {
        return this.contractId;
    }
    public String groupId() {
        return this.groupId;
    }
    public Integer latestVersion() {
        return this.latestVersion;
    }
    public String note() {
        return this.note;
    }
    public String productId() {
        return this.productId;
    }
    public Integer productionVersion() {
        return this.productionVersion;
    }
    public String propertyId() {
        return this.propertyId;
    }
    public String propertyName() {
        return this.propertyName;
    }
    public String ruleFormat() {
        return this.ruleFormat;
    }
    public Integer stagingVersion() {
        return this.stagingVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertiesProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String contractId;
        private String groupId;
        private Integer latestVersion;
        private String note;
        private String productId;
        private Integer productionVersion;
        private String propertyId;
        private String propertyName;
        private String ruleFormat;
        private Integer stagingVersion;
        public Builder() {}
        public Builder(GetPropertiesProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contractId = defaults.contractId;
    	      this.groupId = defaults.groupId;
    	      this.latestVersion = defaults.latestVersion;
    	      this.note = defaults.note;
    	      this.productId = defaults.productId;
    	      this.productionVersion = defaults.productionVersion;
    	      this.propertyId = defaults.propertyId;
    	      this.propertyName = defaults.propertyName;
    	      this.ruleFormat = defaults.ruleFormat;
    	      this.stagingVersion = defaults.stagingVersion;
        }

        @CustomType.Setter
        public Builder contractId(String contractId) {
            if (contractId == null) {
              throw new MissingRequiredPropertyException("GetPropertiesProperty", "contractId");
            }
            this.contractId = contractId;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetPropertiesProperty", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder latestVersion(Integer latestVersion) {
            if (latestVersion == null) {
              throw new MissingRequiredPropertyException("GetPropertiesProperty", "latestVersion");
            }
            this.latestVersion = latestVersion;
            return this;
        }
        @CustomType.Setter
        public Builder note(String note) {
            if (note == null) {
              throw new MissingRequiredPropertyException("GetPropertiesProperty", "note");
            }
            this.note = note;
            return this;
        }
        @CustomType.Setter
        public Builder productId(String productId) {
            if (productId == null) {
              throw new MissingRequiredPropertyException("GetPropertiesProperty", "productId");
            }
            this.productId = productId;
            return this;
        }
        @CustomType.Setter
        public Builder productionVersion(Integer productionVersion) {
            if (productionVersion == null) {
              throw new MissingRequiredPropertyException("GetPropertiesProperty", "productionVersion");
            }
            this.productionVersion = productionVersion;
            return this;
        }
        @CustomType.Setter
        public Builder propertyId(String propertyId) {
            if (propertyId == null) {
              throw new MissingRequiredPropertyException("GetPropertiesProperty", "propertyId");
            }
            this.propertyId = propertyId;
            return this;
        }
        @CustomType.Setter
        public Builder propertyName(String propertyName) {
            if (propertyName == null) {
              throw new MissingRequiredPropertyException("GetPropertiesProperty", "propertyName");
            }
            this.propertyName = propertyName;
            return this;
        }
        @CustomType.Setter
        public Builder ruleFormat(String ruleFormat) {
            if (ruleFormat == null) {
              throw new MissingRequiredPropertyException("GetPropertiesProperty", "ruleFormat");
            }
            this.ruleFormat = ruleFormat;
            return this;
        }
        @CustomType.Setter
        public Builder stagingVersion(Integer stagingVersion) {
            if (stagingVersion == null) {
              throw new MissingRequiredPropertyException("GetPropertiesProperty", "stagingVersion");
            }
            this.stagingVersion = stagingVersion;
            return this;
        }
        public GetPropertiesProperty build() {
            final var _resultValue = new GetPropertiesProperty();
            _resultValue.contractId = contractId;
            _resultValue.groupId = groupId;
            _resultValue.latestVersion = latestVersion;
            _resultValue.note = note;
            _resultValue.productId = productId;
            _resultValue.productionVersion = productionVersion;
            _resultValue.propertyId = propertyId;
            _resultValue.propertyName = propertyName;
            _resultValue.ruleFormat = ruleFormat;
            _resultValue.stagingVersion = stagingVersion;
            return _resultValue;
        }
    }
}
