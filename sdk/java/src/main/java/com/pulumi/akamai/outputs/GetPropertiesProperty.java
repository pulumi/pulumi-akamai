// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPropertiesProperty {
    /**
     * @return (Required) A contract&#39;s unique ID, including the `ctr_` prefix.
     * 
     */
    private String contractId;
    /**
     * @return (Required) A group&#39;s unique ID, including the `grp_` prefix.
     * 
     */
    private String groupId;
    private Integer latestVersion;
    private String note;
    private String productId;
    private Integer productionVersion;
    private String propertyId;
    private String propertyName;
    private String ruleFormat;
    private Integer stagingVersion;

    private GetPropertiesProperty() {}
    /**
     * @return (Required) A contract&#39;s unique ID, including the `ctr_` prefix.
     * 
     */
    public String contractId() {
        return this.contractId;
    }
    /**
     * @return (Required) A group&#39;s unique ID, including the `grp_` prefix.
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    public Integer latestVersion() {
        return this.latestVersion;
    }
    public String note() {
        return this.note;
    }
    public String productId() {
        return this.productId;
    }
    public Integer productionVersion() {
        return this.productionVersion;
    }
    public String propertyId() {
        return this.propertyId;
    }
    public String propertyName() {
        return this.propertyName;
    }
    public String ruleFormat() {
        return this.ruleFormat;
    }
    public Integer stagingVersion() {
        return this.stagingVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertiesProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String contractId;
        private String groupId;
        private Integer latestVersion;
        private String note;
        private String productId;
        private Integer productionVersion;
        private String propertyId;
        private String propertyName;
        private String ruleFormat;
        private Integer stagingVersion;
        public Builder() {}
        public Builder(GetPropertiesProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contractId = defaults.contractId;
    	      this.groupId = defaults.groupId;
    	      this.latestVersion = defaults.latestVersion;
    	      this.note = defaults.note;
    	      this.productId = defaults.productId;
    	      this.productionVersion = defaults.productionVersion;
    	      this.propertyId = defaults.propertyId;
    	      this.propertyName = defaults.propertyName;
    	      this.ruleFormat = defaults.ruleFormat;
    	      this.stagingVersion = defaults.stagingVersion;
        }

        @CustomType.Setter
        public Builder contractId(String contractId) {
            this.contractId = Objects.requireNonNull(contractId);
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            this.groupId = Objects.requireNonNull(groupId);
            return this;
        }
        @CustomType.Setter
        public Builder latestVersion(Integer latestVersion) {
            this.latestVersion = Objects.requireNonNull(latestVersion);
            return this;
        }
        @CustomType.Setter
        public Builder note(String note) {
            this.note = Objects.requireNonNull(note);
            return this;
        }
        @CustomType.Setter
        public Builder productId(String productId) {
            this.productId = Objects.requireNonNull(productId);
            return this;
        }
        @CustomType.Setter
        public Builder productionVersion(Integer productionVersion) {
            this.productionVersion = Objects.requireNonNull(productionVersion);
            return this;
        }
        @CustomType.Setter
        public Builder propertyId(String propertyId) {
            this.propertyId = Objects.requireNonNull(propertyId);
            return this;
        }
        @CustomType.Setter
        public Builder propertyName(String propertyName) {
            this.propertyName = Objects.requireNonNull(propertyName);
            return this;
        }
        @CustomType.Setter
        public Builder ruleFormat(String ruleFormat) {
            this.ruleFormat = Objects.requireNonNull(ruleFormat);
            return this;
        }
        @CustomType.Setter
        public Builder stagingVersion(Integer stagingVersion) {
            this.stagingVersion = Objects.requireNonNull(stagingVersion);
            return this;
        }
        public GetPropertiesProperty build() {
            final var o = new GetPropertiesProperty();
            o.contractId = contractId;
            o.groupId = groupId;
            o.latestVersion = latestVersion;
            o.note = note;
            o.productId = productId;
            o.productionVersion = productionVersion;
            o.propertyId = propertyId;
            o.propertyName = propertyName;
            o.ruleFormat = ruleFormat;
            o.stagingVersion = stagingVersion;
            return o;
        }
    }
}
