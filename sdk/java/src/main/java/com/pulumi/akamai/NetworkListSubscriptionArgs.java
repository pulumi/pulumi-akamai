// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class NetworkListSubscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkListSubscriptionArgs Empty = new NetworkListSubscriptionArgs();

    @Import(name="networkLists", required=true)
    private Output<List<String>> networkLists;

    public Output<List<String>> networkLists() {
        return this.networkLists;
    }

    @Import(name="recipients", required=true)
    private Output<List<String>> recipients;

    public Output<List<String>> recipients() {
        return this.recipients;
    }

    private NetworkListSubscriptionArgs() {}

    private NetworkListSubscriptionArgs(NetworkListSubscriptionArgs $) {
        this.networkLists = $.networkLists;
        this.recipients = $.recipients;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkListSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkListSubscriptionArgs $;

        public Builder() {
            $ = new NetworkListSubscriptionArgs();
        }

        public Builder(NetworkListSubscriptionArgs defaults) {
            $ = new NetworkListSubscriptionArgs(Objects.requireNonNull(defaults));
        }

        public Builder networkLists(Output<List<String>> networkLists) {
            $.networkLists = networkLists;
            return this;
        }

        public Builder networkLists(List<String> networkLists) {
            return networkLists(Output.of(networkLists));
        }

        public Builder networkLists(String... networkLists) {
            return networkLists(List.of(networkLists));
        }

        public Builder recipients(Output<List<String>> recipients) {
            $.recipients = recipients;
            return this;
        }

        public Builder recipients(List<String> recipients) {
            return recipients(Output.of(recipients));
        }

        public Builder recipients(String... recipients) {
            return recipients(List.of(recipients));
        }

        public NetworkListSubscriptionArgs build() {
            if ($.networkLists == null) {
                throw new MissingRequiredPropertyException("NetworkListSubscriptionArgs", "networkLists");
            }
            if ($.recipients == null) {
                throw new MissingRequiredPropertyException("NetworkListSubscriptionArgs", "recipients");
            }
            return $;
        }
    }

}
