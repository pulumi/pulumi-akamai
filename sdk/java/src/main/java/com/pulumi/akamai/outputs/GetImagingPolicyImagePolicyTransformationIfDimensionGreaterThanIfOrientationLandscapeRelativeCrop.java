// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationLandscapeRelativeCrop {
    private @Nullable String east;
    private @Nullable String eastVar;
    private @Nullable String north;
    private @Nullable String northVar;
    private @Nullable String south;
    private @Nullable String southVar;
    private @Nullable String west;
    private @Nullable String westVar;

    private GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationLandscapeRelativeCrop() {}
    public Optional<String> east() {
        return Optional.ofNullable(this.east);
    }
    public Optional<String> eastVar() {
        return Optional.ofNullable(this.eastVar);
    }
    public Optional<String> north() {
        return Optional.ofNullable(this.north);
    }
    public Optional<String> northVar() {
        return Optional.ofNullable(this.northVar);
    }
    public Optional<String> south() {
        return Optional.ofNullable(this.south);
    }
    public Optional<String> southVar() {
        return Optional.ofNullable(this.southVar);
    }
    public Optional<String> west() {
        return Optional.ofNullable(this.west);
    }
    public Optional<String> westVar() {
        return Optional.ofNullable(this.westVar);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationLandscapeRelativeCrop defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String east;
        private @Nullable String eastVar;
        private @Nullable String north;
        private @Nullable String northVar;
        private @Nullable String south;
        private @Nullable String southVar;
        private @Nullable String west;
        private @Nullable String westVar;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationLandscapeRelativeCrop defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.east = defaults.east;
    	      this.eastVar = defaults.eastVar;
    	      this.north = defaults.north;
    	      this.northVar = defaults.northVar;
    	      this.south = defaults.south;
    	      this.southVar = defaults.southVar;
    	      this.west = defaults.west;
    	      this.westVar = defaults.westVar;
        }

        @CustomType.Setter
        public Builder east(@Nullable String east) {
            this.east = east;
            return this;
        }
        @CustomType.Setter
        public Builder eastVar(@Nullable String eastVar) {
            this.eastVar = eastVar;
            return this;
        }
        @CustomType.Setter
        public Builder north(@Nullable String north) {
            this.north = north;
            return this;
        }
        @CustomType.Setter
        public Builder northVar(@Nullable String northVar) {
            this.northVar = northVar;
            return this;
        }
        @CustomType.Setter
        public Builder south(@Nullable String south) {
            this.south = south;
            return this;
        }
        @CustomType.Setter
        public Builder southVar(@Nullable String southVar) {
            this.southVar = southVar;
            return this;
        }
        @CustomType.Setter
        public Builder west(@Nullable String west) {
            this.west = west;
            return this;
        }
        @CustomType.Setter
        public Builder westVar(@Nullable String westVar) {
            this.westVar = westVar;
            return this;
        }
        public GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationLandscapeRelativeCrop build() {
            final var o = new GetImagingPolicyImagePolicyTransformationIfDimensionGreaterThanIfOrientationLandscapeRelativeCrop();
            o.east = east;
            o.eastVar = eastVar;
            o.north = north;
            o.northVar = northVar;
            o.south = south;
            o.southVar = southVar;
            o.west = west;
            o.westVar = westVar;
            return o;
        }
    }
}
