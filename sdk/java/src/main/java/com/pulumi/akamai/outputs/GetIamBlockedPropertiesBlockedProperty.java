// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIamBlockedPropertiesBlockedProperty {
    /**
     * @return IAM&#39;s blocked property ID.
     * 
     */
    private Integer assetId;
    /**
     * @return PAPI&#39;s blocked property ID.
     * 
     */
    private String propertyId;

    private GetIamBlockedPropertiesBlockedProperty() {}
    /**
     * @return IAM&#39;s blocked property ID.
     * 
     */
    public Integer assetId() {
        return this.assetId;
    }
    /**
     * @return PAPI&#39;s blocked property ID.
     * 
     */
    public String propertyId() {
        return this.propertyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamBlockedPropertiesBlockedProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer assetId;
        private String propertyId;
        public Builder() {}
        public Builder(GetIamBlockedPropertiesBlockedProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetId = defaults.assetId;
    	      this.propertyId = defaults.propertyId;
        }

        @CustomType.Setter
        public Builder assetId(Integer assetId) {
            if (assetId == null) {
              throw new MissingRequiredPropertyException("GetIamBlockedPropertiesBlockedProperty", "assetId");
            }
            this.assetId = assetId;
            return this;
        }
        @CustomType.Setter
        public Builder propertyId(String propertyId) {
            if (propertyId == null) {
              throw new MissingRequiredPropertyException("GetIamBlockedPropertiesBlockedProperty", "propertyId");
            }
            this.propertyId = propertyId;
            return this;
        }
        public GetIamBlockedPropertiesBlockedProperty build() {
            final var _resultValue = new GetIamBlockedPropertiesBlockedProperty();
            _resultValue.assetId = assetId;
            _resultValue.propertyId = propertyId;
            return _resultValue;
        }
    }
}
