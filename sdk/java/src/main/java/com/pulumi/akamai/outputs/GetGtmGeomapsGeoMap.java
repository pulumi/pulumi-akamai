// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetGtmGeomapsGeoMapAssignment;
import com.pulumi.akamai.outputs.GetGtmGeomapsGeoMapDefaultDatacenter;
import com.pulumi.akamai.outputs.GetGtmGeomapsGeoMapLink;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGtmGeomapsGeoMap {
    /**
     * @return Contains information about the geographic zone groupings of countries.
     * 
     */
    private List<GetGtmGeomapsGeoMapAssignment> assignments;
    /**
     * @return A placeholder for all other geographic zones, countries not found in these geographic zones.
     * 
     */
    private GetGtmGeomapsGeoMapDefaultDatacenter defaultDatacenter;
    /**
     * @return Specifies the URL path that allows direct navigation to the Geographic maps.
     * 
     */
    private List<GetGtmGeomapsGeoMapLink> links;
    /**
     * @return A descriptive label for the Geographic map.
     * 
     */
    private String name;

    private GetGtmGeomapsGeoMap() {}
    /**
     * @return Contains information about the geographic zone groupings of countries.
     * 
     */
    public List<GetGtmGeomapsGeoMapAssignment> assignments() {
        return this.assignments;
    }
    /**
     * @return A placeholder for all other geographic zones, countries not found in these geographic zones.
     * 
     */
    public GetGtmGeomapsGeoMapDefaultDatacenter defaultDatacenter() {
        return this.defaultDatacenter;
    }
    /**
     * @return Specifies the URL path that allows direct navigation to the Geographic maps.
     * 
     */
    public List<GetGtmGeomapsGeoMapLink> links() {
        return this.links;
    }
    /**
     * @return A descriptive label for the Geographic map.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGtmGeomapsGeoMap defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetGtmGeomapsGeoMapAssignment> assignments;
        private GetGtmGeomapsGeoMapDefaultDatacenter defaultDatacenter;
        private List<GetGtmGeomapsGeoMapLink> links;
        private String name;
        public Builder() {}
        public Builder(GetGtmGeomapsGeoMap defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignments = defaults.assignments;
    	      this.defaultDatacenter = defaults.defaultDatacenter;
    	      this.links = defaults.links;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder assignments(List<GetGtmGeomapsGeoMapAssignment> assignments) {
            if (assignments == null) {
              throw new MissingRequiredPropertyException("GetGtmGeomapsGeoMap", "assignments");
            }
            this.assignments = assignments;
            return this;
        }
        public Builder assignments(GetGtmGeomapsGeoMapAssignment... assignments) {
            return assignments(List.of(assignments));
        }
        @CustomType.Setter
        public Builder defaultDatacenter(GetGtmGeomapsGeoMapDefaultDatacenter defaultDatacenter) {
            if (defaultDatacenter == null) {
              throw new MissingRequiredPropertyException("GetGtmGeomapsGeoMap", "defaultDatacenter");
            }
            this.defaultDatacenter = defaultDatacenter;
            return this;
        }
        @CustomType.Setter
        public Builder links(List<GetGtmGeomapsGeoMapLink> links) {
            if (links == null) {
              throw new MissingRequiredPropertyException("GetGtmGeomapsGeoMap", "links");
            }
            this.links = links;
            return this;
        }
        public Builder links(GetGtmGeomapsGeoMapLink... links) {
            return links(List.of(links));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGtmGeomapsGeoMap", "name");
            }
            this.name = name;
            return this;
        }
        public GetGtmGeomapsGeoMap build() {
            final var _resultValue = new GetGtmGeomapsGeoMap();
            _resultValue.assignments = assignments;
            _resultValue.defaultDatacenter = defaultDatacenter;
            _resultValue.links = links;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
