// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClientlistListsList {
    private String createDate;
    private String createdBy;
    private Boolean deprecated;
    private Integer itemsCount;
    private String listId;
    private String listType;
    private @Nullable String name;
    private String notes;
    private String productionActivationStatus;
    private Boolean readOnly;
    private Boolean shared;
    private String stagingActivationStatus;
    private List<String> tags;
    private @Nullable String type;
    private String updateDate;
    private String updatedBy;
    private Integer version;

    private GetClientlistListsList() {}
    public String createDate() {
        return this.createDate;
    }
    public String createdBy() {
        return this.createdBy;
    }
    public Boolean deprecated() {
        return this.deprecated;
    }
    public Integer itemsCount() {
        return this.itemsCount;
    }
    public String listId() {
        return this.listId;
    }
    public String listType() {
        return this.listType;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String notes() {
        return this.notes;
    }
    public String productionActivationStatus() {
        return this.productionActivationStatus;
    }
    public Boolean readOnly() {
        return this.readOnly;
    }
    public Boolean shared() {
        return this.shared;
    }
    public String stagingActivationStatus() {
        return this.stagingActivationStatus;
    }
    public List<String> tags() {
        return this.tags;
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    public String updateDate() {
        return this.updateDate;
    }
    public String updatedBy() {
        return this.updatedBy;
    }
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClientlistListsList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createDate;
        private String createdBy;
        private Boolean deprecated;
        private Integer itemsCount;
        private String listId;
        private String listType;
        private @Nullable String name;
        private String notes;
        private String productionActivationStatus;
        private Boolean readOnly;
        private Boolean shared;
        private String stagingActivationStatus;
        private List<String> tags;
        private @Nullable String type;
        private String updateDate;
        private String updatedBy;
        private Integer version;
        public Builder() {}
        public Builder(GetClientlistListsList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createDate = defaults.createDate;
    	      this.createdBy = defaults.createdBy;
    	      this.deprecated = defaults.deprecated;
    	      this.itemsCount = defaults.itemsCount;
    	      this.listId = defaults.listId;
    	      this.listType = defaults.listType;
    	      this.name = defaults.name;
    	      this.notes = defaults.notes;
    	      this.productionActivationStatus = defaults.productionActivationStatus;
    	      this.readOnly = defaults.readOnly;
    	      this.shared = defaults.shared;
    	      this.stagingActivationStatus = defaults.stagingActivationStatus;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.updateDate = defaults.updateDate;
    	      this.updatedBy = defaults.updatedBy;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder createDate(String createDate) {
            this.createDate = Objects.requireNonNull(createDate);
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        @CustomType.Setter
        public Builder deprecated(Boolean deprecated) {
            this.deprecated = Objects.requireNonNull(deprecated);
            return this;
        }
        @CustomType.Setter
        public Builder itemsCount(Integer itemsCount) {
            this.itemsCount = Objects.requireNonNull(itemsCount);
            return this;
        }
        @CustomType.Setter
        public Builder listId(String listId) {
            this.listId = Objects.requireNonNull(listId);
            return this;
        }
        @CustomType.Setter
        public Builder listType(String listType) {
            this.listType = Objects.requireNonNull(listType);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notes(String notes) {
            this.notes = Objects.requireNonNull(notes);
            return this;
        }
        @CustomType.Setter
        public Builder productionActivationStatus(String productionActivationStatus) {
            this.productionActivationStatus = Objects.requireNonNull(productionActivationStatus);
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(Boolean readOnly) {
            this.readOnly = Objects.requireNonNull(readOnly);
            return this;
        }
        @CustomType.Setter
        public Builder shared(Boolean shared) {
            this.shared = Objects.requireNonNull(shared);
            return this;
        }
        @CustomType.Setter
        public Builder stagingActivationStatus(String stagingActivationStatus) {
            this.stagingActivationStatus = Objects.requireNonNull(stagingActivationStatus);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder updateDate(String updateDate) {
            this.updateDate = Objects.requireNonNull(updateDate);
            return this;
        }
        @CustomType.Setter
        public Builder updatedBy(String updatedBy) {
            this.updatedBy = Objects.requireNonNull(updatedBy);
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetClientlistListsList build() {
            final var _resultValue = new GetClientlistListsList();
            _resultValue.createDate = createDate;
            _resultValue.createdBy = createdBy;
            _resultValue.deprecated = deprecated;
            _resultValue.itemsCount = itemsCount;
            _resultValue.listId = listId;
            _resultValue.listType = listType;
            _resultValue.name = name;
            _resultValue.notes = notes;
            _resultValue.productionActivationStatus = productionActivationStatus;
            _resultValue.readOnly = readOnly;
            _resultValue.shared = shared;
            _resultValue.stagingActivationStatus = stagingActivationStatus;
            _resultValue.tags = tags;
            _resultValue.type = type;
            _resultValue.updateDate = updateDate;
            _resultValue.updatedBy = updatedBy;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
