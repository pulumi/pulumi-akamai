// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetCloudwrapperPropertiesPropertyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudwrapperPropertiesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudwrapperPropertiesArgs Empty = new GetCloudwrapperPropertiesArgs();

    @Import(name="contractIds")
    private @Nullable Output<List<String>> contractIds;

    public Optional<Output<List<String>>> contractIds() {
        return Optional.ofNullable(this.contractIds);
    }

    @Import(name="properties")
    private @Nullable Output<List<GetCloudwrapperPropertiesPropertyArgs>> properties;

    public Optional<Output<List<GetCloudwrapperPropertiesPropertyArgs>>> properties() {
        return Optional.ofNullable(this.properties);
    }

    @Import(name="unused")
    private @Nullable Output<Boolean> unused;

    public Optional<Output<Boolean>> unused() {
        return Optional.ofNullable(this.unused);
    }

    private GetCloudwrapperPropertiesArgs() {}

    private GetCloudwrapperPropertiesArgs(GetCloudwrapperPropertiesArgs $) {
        this.contractIds = $.contractIds;
        this.properties = $.properties;
        this.unused = $.unused;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudwrapperPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudwrapperPropertiesArgs $;

        public Builder() {
            $ = new GetCloudwrapperPropertiesArgs();
        }

        public Builder(GetCloudwrapperPropertiesArgs defaults) {
            $ = new GetCloudwrapperPropertiesArgs(Objects.requireNonNull(defaults));
        }

        public Builder contractIds(@Nullable Output<List<String>> contractIds) {
            $.contractIds = contractIds;
            return this;
        }

        public Builder contractIds(List<String> contractIds) {
            return contractIds(Output.of(contractIds));
        }

        public Builder contractIds(String... contractIds) {
            return contractIds(List.of(contractIds));
        }

        public Builder properties(@Nullable Output<List<GetCloudwrapperPropertiesPropertyArgs>> properties) {
            $.properties = properties;
            return this;
        }

        public Builder properties(List<GetCloudwrapperPropertiesPropertyArgs> properties) {
            return properties(Output.of(properties));
        }

        public Builder properties(GetCloudwrapperPropertiesPropertyArgs... properties) {
            return properties(List.of(properties));
        }

        public Builder unused(@Nullable Output<Boolean> unused) {
            $.unused = unused;
            return this;
        }

        public Builder unused(Boolean unused) {
            return unused(Output.of(unused));
        }

        public GetCloudwrapperPropertiesArgs build() {
            return $;
        }
    }

}
