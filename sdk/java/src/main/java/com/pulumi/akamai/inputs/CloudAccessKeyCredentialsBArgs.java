// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudAccessKeyCredentialsBArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudAccessKeyCredentialsBArgs Empty = new CloudAccessKeyCredentialsBArgs();

    /**
     * Access key id from cloud provider which is used to sign API requests
     * 
     */
    @Import(name="cloudAccessKeyId", required=true)
    private Output<String> cloudAccessKeyId;

    /**
     * @return Access key id from cloud provider which is used to sign API requests
     * 
     */
    public Output<String> cloudAccessKeyId() {
        return this.cloudAccessKeyId;
    }

    /**
     * Cloud Access secret from cloud provider which is used to sign API requests
     * 
     */
    @Import(name="cloudSecretAccessKey", required=true)
    private Output<String> cloudSecretAccessKey;

    /**
     * @return Cloud Access secret from cloud provider which is used to sign API requests
     * 
     */
    public Output<String> cloudSecretAccessKey() {
        return this.cloudSecretAccessKey;
    }

    /**
     * Boolean value which helps to define if credentials should be assigned to property
     * 
     */
    @Import(name="primaryKey", required=true)
    private Output<Boolean> primaryKey;

    /**
     * @return Boolean value which helps to define if credentials should be assigned to property
     * 
     */
    public Output<Boolean> primaryKey() {
        return this.primaryKey;
    }

    /**
     * Numeric access key version associated with specific pair of cloud access credentials used to sign API requests
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return Numeric access key version associated with specific pair of cloud access credentials used to sign API requests
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * The unique identifier assigned to specific access key version
     * 
     */
    @Import(name="versionGuid")
    private @Nullable Output<String> versionGuid;

    /**
     * @return The unique identifier assigned to specific access key version
     * 
     */
    public Optional<Output<String>> versionGuid() {
        return Optional.ofNullable(this.versionGuid);
    }

    private CloudAccessKeyCredentialsBArgs() {}

    private CloudAccessKeyCredentialsBArgs(CloudAccessKeyCredentialsBArgs $) {
        this.cloudAccessKeyId = $.cloudAccessKeyId;
        this.cloudSecretAccessKey = $.cloudSecretAccessKey;
        this.primaryKey = $.primaryKey;
        this.version = $.version;
        this.versionGuid = $.versionGuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudAccessKeyCredentialsBArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudAccessKeyCredentialsBArgs $;

        public Builder() {
            $ = new CloudAccessKeyCredentialsBArgs();
        }

        public Builder(CloudAccessKeyCredentialsBArgs defaults) {
            $ = new CloudAccessKeyCredentialsBArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudAccessKeyId Access key id from cloud provider which is used to sign API requests
         * 
         * @return builder
         * 
         */
        public Builder cloudAccessKeyId(Output<String> cloudAccessKeyId) {
            $.cloudAccessKeyId = cloudAccessKeyId;
            return this;
        }

        /**
         * @param cloudAccessKeyId Access key id from cloud provider which is used to sign API requests
         * 
         * @return builder
         * 
         */
        public Builder cloudAccessKeyId(String cloudAccessKeyId) {
            return cloudAccessKeyId(Output.of(cloudAccessKeyId));
        }

        /**
         * @param cloudSecretAccessKey Cloud Access secret from cloud provider which is used to sign API requests
         * 
         * @return builder
         * 
         */
        public Builder cloudSecretAccessKey(Output<String> cloudSecretAccessKey) {
            $.cloudSecretAccessKey = cloudSecretAccessKey;
            return this;
        }

        /**
         * @param cloudSecretAccessKey Cloud Access secret from cloud provider which is used to sign API requests
         * 
         * @return builder
         * 
         */
        public Builder cloudSecretAccessKey(String cloudSecretAccessKey) {
            return cloudSecretAccessKey(Output.of(cloudSecretAccessKey));
        }

        /**
         * @param primaryKey Boolean value which helps to define if credentials should be assigned to property
         * 
         * @return builder
         * 
         */
        public Builder primaryKey(Output<Boolean> primaryKey) {
            $.primaryKey = primaryKey;
            return this;
        }

        /**
         * @param primaryKey Boolean value which helps to define if credentials should be assigned to property
         * 
         * @return builder
         * 
         */
        public Builder primaryKey(Boolean primaryKey) {
            return primaryKey(Output.of(primaryKey));
        }

        /**
         * @param version Numeric access key version associated with specific pair of cloud access credentials used to sign API requests
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Numeric access key version associated with specific pair of cloud access credentials used to sign API requests
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        /**
         * @param versionGuid The unique identifier assigned to specific access key version
         * 
         * @return builder
         * 
         */
        public Builder versionGuid(@Nullable Output<String> versionGuid) {
            $.versionGuid = versionGuid;
            return this;
        }

        /**
         * @param versionGuid The unique identifier assigned to specific access key version
         * 
         * @return builder
         * 
         */
        public Builder versionGuid(String versionGuid) {
            return versionGuid(Output.of(versionGuid));
        }

        public CloudAccessKeyCredentialsBArgs build() {
            if ($.cloudAccessKeyId == null) {
                throw new MissingRequiredPropertyException("CloudAccessKeyCredentialsBArgs", "cloudAccessKeyId");
            }
            if ($.cloudSecretAccessKey == null) {
                throw new MissingRequiredPropertyException("CloudAccessKeyCredentialsBArgs", "cloudSecretAccessKey");
            }
            if ($.primaryKey == null) {
                throw new MissingRequiredPropertyException("CloudAccessKeyCredentialsBArgs", "primaryKey");
            }
            return $;
        }
    }

}
