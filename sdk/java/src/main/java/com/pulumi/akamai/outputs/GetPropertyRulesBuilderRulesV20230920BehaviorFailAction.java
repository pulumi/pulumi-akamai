// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20230920BehaviorFailActionCpCode;
import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20230920BehaviorFailActionNetStorageHostname;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20230920BehaviorFailAction {
    private @Nullable String actionType;
    private @Nullable Boolean allowFcmParentOverride;
    private @Nullable Boolean cexCustomPath;
    private @Nullable String cexHostname;
    private @Nullable String cexPath;
    private @Nullable Boolean contentCustomPath;
    private @Nullable String contentHostname;
    private @Nullable String contentPath;
    private @Nullable GetPropertyRulesBuilderRulesV20230920BehaviorFailActionCpCode cpCode;
    private @Nullable Boolean dynamicCustomPath;
    private @Nullable String dynamicMethod;
    private @Nullable String dynamicPath;
    private @Nullable Boolean enabled;
    private @Nullable Boolean locked;
    private @Nullable Boolean modifyProtocol;
    private @Nullable GetPropertyRulesBuilderRulesV20230920BehaviorFailActionNetStorageHostname netStorageHostname;
    private @Nullable String netStoragePath;
    private @Nullable Boolean preserveQueryString;
    private @Nullable String protocol;
    private @Nullable Boolean redirectCustomPath;
    private @Nullable String redirectHostname;
    private @Nullable String redirectHostnameType;
    private @Nullable Integer redirectMethod;
    private @Nullable String redirectPath;
    private @Nullable Boolean saasCnameEnabled;
    private @Nullable Integer saasCnameLevel;
    private @Nullable String saasCookie;
    private @Nullable String saasQueryString;
    private @Nullable String saasRegex;
    private @Nullable String saasReplace;
    private @Nullable String saasSuffix;
    private @Nullable String saasType;
    private @Nullable Integer statusCode;
    private @Nullable String templateUuid;
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20230920BehaviorFailAction() {}
    public Optional<String> actionType() {
        return Optional.ofNullable(this.actionType);
    }
    public Optional<Boolean> allowFcmParentOverride() {
        return Optional.ofNullable(this.allowFcmParentOverride);
    }
    public Optional<Boolean> cexCustomPath() {
        return Optional.ofNullable(this.cexCustomPath);
    }
    public Optional<String> cexHostname() {
        return Optional.ofNullable(this.cexHostname);
    }
    public Optional<String> cexPath() {
        return Optional.ofNullable(this.cexPath);
    }
    public Optional<Boolean> contentCustomPath() {
        return Optional.ofNullable(this.contentCustomPath);
    }
    public Optional<String> contentHostname() {
        return Optional.ofNullable(this.contentHostname);
    }
    public Optional<String> contentPath() {
        return Optional.ofNullable(this.contentPath);
    }
    public Optional<GetPropertyRulesBuilderRulesV20230920BehaviorFailActionCpCode> cpCode() {
        return Optional.ofNullable(this.cpCode);
    }
    public Optional<Boolean> dynamicCustomPath() {
        return Optional.ofNullable(this.dynamicCustomPath);
    }
    public Optional<String> dynamicMethod() {
        return Optional.ofNullable(this.dynamicMethod);
    }
    public Optional<String> dynamicPath() {
        return Optional.ofNullable(this.dynamicPath);
    }
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    public Optional<Boolean> modifyProtocol() {
        return Optional.ofNullable(this.modifyProtocol);
    }
    public Optional<GetPropertyRulesBuilderRulesV20230920BehaviorFailActionNetStorageHostname> netStorageHostname() {
        return Optional.ofNullable(this.netStorageHostname);
    }
    public Optional<String> netStoragePath() {
        return Optional.ofNullable(this.netStoragePath);
    }
    public Optional<Boolean> preserveQueryString() {
        return Optional.ofNullable(this.preserveQueryString);
    }
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    public Optional<Boolean> redirectCustomPath() {
        return Optional.ofNullable(this.redirectCustomPath);
    }
    public Optional<String> redirectHostname() {
        return Optional.ofNullable(this.redirectHostname);
    }
    public Optional<String> redirectHostnameType() {
        return Optional.ofNullable(this.redirectHostnameType);
    }
    public Optional<Integer> redirectMethod() {
        return Optional.ofNullable(this.redirectMethod);
    }
    public Optional<String> redirectPath() {
        return Optional.ofNullable(this.redirectPath);
    }
    public Optional<Boolean> saasCnameEnabled() {
        return Optional.ofNullable(this.saasCnameEnabled);
    }
    public Optional<Integer> saasCnameLevel() {
        return Optional.ofNullable(this.saasCnameLevel);
    }
    public Optional<String> saasCookie() {
        return Optional.ofNullable(this.saasCookie);
    }
    public Optional<String> saasQueryString() {
        return Optional.ofNullable(this.saasQueryString);
    }
    public Optional<String> saasRegex() {
        return Optional.ofNullable(this.saasRegex);
    }
    public Optional<String> saasReplace() {
        return Optional.ofNullable(this.saasReplace);
    }
    public Optional<String> saasSuffix() {
        return Optional.ofNullable(this.saasSuffix);
    }
    public Optional<String> saasType() {
        return Optional.ofNullable(this.saasType);
    }
    public Optional<Integer> statusCode() {
        return Optional.ofNullable(this.statusCode);
    }
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20230920BehaviorFailAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String actionType;
        private @Nullable Boolean allowFcmParentOverride;
        private @Nullable Boolean cexCustomPath;
        private @Nullable String cexHostname;
        private @Nullable String cexPath;
        private @Nullable Boolean contentCustomPath;
        private @Nullable String contentHostname;
        private @Nullable String contentPath;
        private @Nullable GetPropertyRulesBuilderRulesV20230920BehaviorFailActionCpCode cpCode;
        private @Nullable Boolean dynamicCustomPath;
        private @Nullable String dynamicMethod;
        private @Nullable String dynamicPath;
        private @Nullable Boolean enabled;
        private @Nullable Boolean locked;
        private @Nullable Boolean modifyProtocol;
        private @Nullable GetPropertyRulesBuilderRulesV20230920BehaviorFailActionNetStorageHostname netStorageHostname;
        private @Nullable String netStoragePath;
        private @Nullable Boolean preserveQueryString;
        private @Nullable String protocol;
        private @Nullable Boolean redirectCustomPath;
        private @Nullable String redirectHostname;
        private @Nullable String redirectHostnameType;
        private @Nullable Integer redirectMethod;
        private @Nullable String redirectPath;
        private @Nullable Boolean saasCnameEnabled;
        private @Nullable Integer saasCnameLevel;
        private @Nullable String saasCookie;
        private @Nullable String saasQueryString;
        private @Nullable String saasRegex;
        private @Nullable String saasReplace;
        private @Nullable String saasSuffix;
        private @Nullable String saasType;
        private @Nullable Integer statusCode;
        private @Nullable String templateUuid;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20230920BehaviorFailAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionType = defaults.actionType;
    	      this.allowFcmParentOverride = defaults.allowFcmParentOverride;
    	      this.cexCustomPath = defaults.cexCustomPath;
    	      this.cexHostname = defaults.cexHostname;
    	      this.cexPath = defaults.cexPath;
    	      this.contentCustomPath = defaults.contentCustomPath;
    	      this.contentHostname = defaults.contentHostname;
    	      this.contentPath = defaults.contentPath;
    	      this.cpCode = defaults.cpCode;
    	      this.dynamicCustomPath = defaults.dynamicCustomPath;
    	      this.dynamicMethod = defaults.dynamicMethod;
    	      this.dynamicPath = defaults.dynamicPath;
    	      this.enabled = defaults.enabled;
    	      this.locked = defaults.locked;
    	      this.modifyProtocol = defaults.modifyProtocol;
    	      this.netStorageHostname = defaults.netStorageHostname;
    	      this.netStoragePath = defaults.netStoragePath;
    	      this.preserveQueryString = defaults.preserveQueryString;
    	      this.protocol = defaults.protocol;
    	      this.redirectCustomPath = defaults.redirectCustomPath;
    	      this.redirectHostname = defaults.redirectHostname;
    	      this.redirectHostnameType = defaults.redirectHostnameType;
    	      this.redirectMethod = defaults.redirectMethod;
    	      this.redirectPath = defaults.redirectPath;
    	      this.saasCnameEnabled = defaults.saasCnameEnabled;
    	      this.saasCnameLevel = defaults.saasCnameLevel;
    	      this.saasCookie = defaults.saasCookie;
    	      this.saasQueryString = defaults.saasQueryString;
    	      this.saasRegex = defaults.saasRegex;
    	      this.saasReplace = defaults.saasReplace;
    	      this.saasSuffix = defaults.saasSuffix;
    	      this.saasType = defaults.saasType;
    	      this.statusCode = defaults.statusCode;
    	      this.templateUuid = defaults.templateUuid;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder actionType(@Nullable String actionType) {
            this.actionType = actionType;
            return this;
        }
        @CustomType.Setter
        public Builder allowFcmParentOverride(@Nullable Boolean allowFcmParentOverride) {
            this.allowFcmParentOverride = allowFcmParentOverride;
            return this;
        }
        @CustomType.Setter
        public Builder cexCustomPath(@Nullable Boolean cexCustomPath) {
            this.cexCustomPath = cexCustomPath;
            return this;
        }
        @CustomType.Setter
        public Builder cexHostname(@Nullable String cexHostname) {
            this.cexHostname = cexHostname;
            return this;
        }
        @CustomType.Setter
        public Builder cexPath(@Nullable String cexPath) {
            this.cexPath = cexPath;
            return this;
        }
        @CustomType.Setter
        public Builder contentCustomPath(@Nullable Boolean contentCustomPath) {
            this.contentCustomPath = contentCustomPath;
            return this;
        }
        @CustomType.Setter
        public Builder contentHostname(@Nullable String contentHostname) {
            this.contentHostname = contentHostname;
            return this;
        }
        @CustomType.Setter
        public Builder contentPath(@Nullable String contentPath) {
            this.contentPath = contentPath;
            return this;
        }
        @CustomType.Setter
        public Builder cpCode(@Nullable GetPropertyRulesBuilderRulesV20230920BehaviorFailActionCpCode cpCode) {
            this.cpCode = cpCode;
            return this;
        }
        @CustomType.Setter
        public Builder dynamicCustomPath(@Nullable Boolean dynamicCustomPath) {
            this.dynamicCustomPath = dynamicCustomPath;
            return this;
        }
        @CustomType.Setter
        public Builder dynamicMethod(@Nullable String dynamicMethod) {
            this.dynamicMethod = dynamicMethod;
            return this;
        }
        @CustomType.Setter
        public Builder dynamicPath(@Nullable String dynamicPath) {
            this.dynamicPath = dynamicPath;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {
            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder modifyProtocol(@Nullable Boolean modifyProtocol) {
            this.modifyProtocol = modifyProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder netStorageHostname(@Nullable GetPropertyRulesBuilderRulesV20230920BehaviorFailActionNetStorageHostname netStorageHostname) {
            this.netStorageHostname = netStorageHostname;
            return this;
        }
        @CustomType.Setter
        public Builder netStoragePath(@Nullable String netStoragePath) {
            this.netStoragePath = netStoragePath;
            return this;
        }
        @CustomType.Setter
        public Builder preserveQueryString(@Nullable Boolean preserveQueryString) {
            this.preserveQueryString = preserveQueryString;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder redirectCustomPath(@Nullable Boolean redirectCustomPath) {
            this.redirectCustomPath = redirectCustomPath;
            return this;
        }
        @CustomType.Setter
        public Builder redirectHostname(@Nullable String redirectHostname) {
            this.redirectHostname = redirectHostname;
            return this;
        }
        @CustomType.Setter
        public Builder redirectHostnameType(@Nullable String redirectHostnameType) {
            this.redirectHostnameType = redirectHostnameType;
            return this;
        }
        @CustomType.Setter
        public Builder redirectMethod(@Nullable Integer redirectMethod) {
            this.redirectMethod = redirectMethod;
            return this;
        }
        @CustomType.Setter
        public Builder redirectPath(@Nullable String redirectPath) {
            this.redirectPath = redirectPath;
            return this;
        }
        @CustomType.Setter
        public Builder saasCnameEnabled(@Nullable Boolean saasCnameEnabled) {
            this.saasCnameEnabled = saasCnameEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder saasCnameLevel(@Nullable Integer saasCnameLevel) {
            this.saasCnameLevel = saasCnameLevel;
            return this;
        }
        @CustomType.Setter
        public Builder saasCookie(@Nullable String saasCookie) {
            this.saasCookie = saasCookie;
            return this;
        }
        @CustomType.Setter
        public Builder saasQueryString(@Nullable String saasQueryString) {
            this.saasQueryString = saasQueryString;
            return this;
        }
        @CustomType.Setter
        public Builder saasRegex(@Nullable String saasRegex) {
            this.saasRegex = saasRegex;
            return this;
        }
        @CustomType.Setter
        public Builder saasReplace(@Nullable String saasReplace) {
            this.saasReplace = saasReplace;
            return this;
        }
        @CustomType.Setter
        public Builder saasSuffix(@Nullable String saasSuffix) {
            this.saasSuffix = saasSuffix;
            return this;
        }
        @CustomType.Setter
        public Builder saasType(@Nullable String saasType) {
            this.saasType = saasType;
            return this;
        }
        @CustomType.Setter
        public Builder statusCode(@Nullable Integer statusCode) {
            this.statusCode = statusCode;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {
            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {
            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20230920BehaviorFailAction build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20230920BehaviorFailAction();
            _resultValue.actionType = actionType;
            _resultValue.allowFcmParentOverride = allowFcmParentOverride;
            _resultValue.cexCustomPath = cexCustomPath;
            _resultValue.cexHostname = cexHostname;
            _resultValue.cexPath = cexPath;
            _resultValue.contentCustomPath = contentCustomPath;
            _resultValue.contentHostname = contentHostname;
            _resultValue.contentPath = contentPath;
            _resultValue.cpCode = cpCode;
            _resultValue.dynamicCustomPath = dynamicCustomPath;
            _resultValue.dynamicMethod = dynamicMethod;
            _resultValue.dynamicPath = dynamicPath;
            _resultValue.enabled = enabled;
            _resultValue.locked = locked;
            _resultValue.modifyProtocol = modifyProtocol;
            _resultValue.netStorageHostname = netStorageHostname;
            _resultValue.netStoragePath = netStoragePath;
            _resultValue.preserveQueryString = preserveQueryString;
            _resultValue.protocol = protocol;
            _resultValue.redirectCustomPath = redirectCustomPath;
            _resultValue.redirectHostname = redirectHostname;
            _resultValue.redirectHostnameType = redirectHostnameType;
            _resultValue.redirectMethod = redirectMethod;
            _resultValue.redirectPath = redirectPath;
            _resultValue.saasCnameEnabled = saasCnameEnabled;
            _resultValue.saasCnameLevel = saasCnameLevel;
            _resultValue.saasCookie = saasCookie;
            _resultValue.saasQueryString = saasQueryString;
            _resultValue.saasRegex = saasRegex;
            _resultValue.saasReplace = saasReplace;
            _resultValue.saasSuffix = saasSuffix;
            _resultValue.saasType = saasType;
            _resultValue.statusCode = statusCode;
            _resultValue.templateUuid = templateUuid;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
