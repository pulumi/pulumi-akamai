// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;


public final class GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs Empty = new GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs();

    @Import(name="dataStreamIds", required=true)
    private Output<List<Integer>> dataStreamIds;

    public Output<List<Integer>> dataStreamIds() {
        return this.dataStreamIds;
    }

    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    @Import(name="samplingRate", required=true)
    private Output<Integer> samplingRate;

    public Output<Integer> samplingRate() {
        return this.samplingRate;
    }

    private GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs() {}

    private GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs(GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs $) {
        this.dataStreamIds = $.dataStreamIds;
        this.enabled = $.enabled;
        this.samplingRate = $.samplingRate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs $;

        public Builder() {
            $ = new GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs();
        }

        public Builder(GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs defaults) {
            $ = new GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataStreamIds(Output<List<Integer>> dataStreamIds) {
            $.dataStreamIds = dataStreamIds;
            return this;
        }

        public Builder dataStreamIds(List<Integer> dataStreamIds) {
            return dataStreamIds(Output.of(dataStreamIds));
        }

        public Builder dataStreamIds(Integer... dataStreamIds) {
            return dataStreamIds(List.of(dataStreamIds));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder samplingRate(Output<Integer> samplingRate) {
            $.samplingRate = samplingRate;
            return this;
        }

        public Builder samplingRate(Integer samplingRate) {
            return samplingRate(Output.of(samplingRate));
        }

        public GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs build() {
            if ($.dataStreamIds == null) {
                throw new MissingRequiredPropertyException("GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs", "dataStreamIds");
            }
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs", "enabled");
            }
            if ($.samplingRate == null) {
                throw new MissingRequiredPropertyException("GetCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreamsArgs", "samplingRate");
            }
            return $;
        }
    }

}
