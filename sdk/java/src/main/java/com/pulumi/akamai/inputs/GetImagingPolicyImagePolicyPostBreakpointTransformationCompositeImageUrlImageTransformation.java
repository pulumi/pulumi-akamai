// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationBackgroundColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationBlur;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationChromaKey;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationComposite;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationCompound;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationContrast;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationGoop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationGrayscale;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationHsl;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationHsv;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationIfDimension;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationIfOrientation;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMaxColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMirror;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMonoHue;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationOpacity;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationRemoveColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationUnsharpMask;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation();

    @Import(name="backgroundColors")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationBackgroundColor> backgroundColors;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationBackgroundColor>> backgroundColors() {
        return Optional.ofNullable(this.backgroundColors);
    }

    @Import(name="blurs")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationBlur> blurs;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationBlur>> blurs() {
        return Optional.ofNullable(this.blurs);
    }

    @Import(name="chromaKeys")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationChromaKey> chromaKeys;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationChromaKey>> chromaKeys() {
        return Optional.ofNullable(this.chromaKeys);
    }

    @Import(name="composites")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationComposite> composites;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationComposite>> composites() {
        return Optional.ofNullable(this.composites);
    }

    @Import(name="compounds")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationCompound> compounds;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationCompound>> compounds() {
        return Optional.ofNullable(this.compounds);
    }

    @Import(name="contrasts")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationContrast> contrasts;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationContrast>> contrasts() {
        return Optional.ofNullable(this.contrasts);
    }

    @Import(name="goops")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationGoop> goops;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationGoop>> goops() {
        return Optional.ofNullable(this.goops);
    }

    @Import(name="grayscales")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationGrayscale> grayscales;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationGrayscale>> grayscales() {
        return Optional.ofNullable(this.grayscales);
    }

    @Import(name="hsls")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationHsl> hsls;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationHsl>> hsls() {
        return Optional.ofNullable(this.hsls);
    }

    @Import(name="hsvs")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationHsv> hsvs;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationHsv>> hsvs() {
        return Optional.ofNullable(this.hsvs);
    }

    @Import(name="ifDimensions")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationIfDimension> ifDimensions;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationIfDimension>> ifDimensions() {
        return Optional.ofNullable(this.ifDimensions);
    }

    @Import(name="ifOrientations")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationIfOrientation> ifOrientations;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationIfOrientation>> ifOrientations() {
        return Optional.ofNullable(this.ifOrientations);
    }

    @Import(name="maxColors")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMaxColor> maxColors;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMaxColor>> maxColors() {
        return Optional.ofNullable(this.maxColors);
    }

    @Import(name="mirrors")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMirror> mirrors;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMirror>> mirrors() {
        return Optional.ofNullable(this.mirrors);
    }

    @Import(name="monoHues")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMonoHue> monoHues;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMonoHue>> monoHues() {
        return Optional.ofNullable(this.monoHues);
    }

    @Import(name="opacities")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationOpacity> opacities;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationOpacity>> opacities() {
        return Optional.ofNullable(this.opacities);
    }

    @Import(name="removeColors")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationRemoveColor> removeColors;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationRemoveColor>> removeColors() {
        return Optional.ofNullable(this.removeColors);
    }

    @Import(name="unsharpMasks")
    private @Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationUnsharpMask> unsharpMasks;

    public Optional<List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationUnsharpMask>> unsharpMasks() {
        return Optional.ofNullable(this.unsharpMasks);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation $) {
        this.backgroundColors = $.backgroundColors;
        this.blurs = $.blurs;
        this.chromaKeys = $.chromaKeys;
        this.composites = $.composites;
        this.compounds = $.compounds;
        this.contrasts = $.contrasts;
        this.goops = $.goops;
        this.grayscales = $.grayscales;
        this.hsls = $.hsls;
        this.hsvs = $.hsvs;
        this.ifDimensions = $.ifDimensions;
        this.ifOrientations = $.ifOrientations;
        this.maxColors = $.maxColors;
        this.mirrors = $.mirrors;
        this.monoHues = $.monoHues;
        this.opacities = $.opacities;
        this.removeColors = $.removeColors;
        this.unsharpMasks = $.unsharpMasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation(Objects.requireNonNull(defaults));
        }

        public Builder backgroundColors(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationBackgroundColor> backgroundColors) {
            $.backgroundColors = backgroundColors;
            return this;
        }

        public Builder backgroundColors(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationBackgroundColor... backgroundColors) {
            return backgroundColors(List.of(backgroundColors));
        }

        public Builder blurs(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationBlur> blurs) {
            $.blurs = blurs;
            return this;
        }

        public Builder blurs(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationBlur... blurs) {
            return blurs(List.of(blurs));
        }

        public Builder chromaKeys(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationChromaKey> chromaKeys) {
            $.chromaKeys = chromaKeys;
            return this;
        }

        public Builder chromaKeys(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationChromaKey... chromaKeys) {
            return chromaKeys(List.of(chromaKeys));
        }

        public Builder composites(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationComposite> composites) {
            $.composites = composites;
            return this;
        }

        public Builder composites(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationComposite... composites) {
            return composites(List.of(composites));
        }

        public Builder compounds(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationCompound> compounds) {
            $.compounds = compounds;
            return this;
        }

        public Builder compounds(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationCompound... compounds) {
            return compounds(List.of(compounds));
        }

        public Builder contrasts(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationContrast> contrasts) {
            $.contrasts = contrasts;
            return this;
        }

        public Builder contrasts(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationContrast... contrasts) {
            return contrasts(List.of(contrasts));
        }

        public Builder goops(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationGoop> goops) {
            $.goops = goops;
            return this;
        }

        public Builder goops(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationGoop... goops) {
            return goops(List.of(goops));
        }

        public Builder grayscales(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationGrayscale> grayscales) {
            $.grayscales = grayscales;
            return this;
        }

        public Builder grayscales(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationGrayscale... grayscales) {
            return grayscales(List.of(grayscales));
        }

        public Builder hsls(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationHsl> hsls) {
            $.hsls = hsls;
            return this;
        }

        public Builder hsls(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationHsl... hsls) {
            return hsls(List.of(hsls));
        }

        public Builder hsvs(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationHsv> hsvs) {
            $.hsvs = hsvs;
            return this;
        }

        public Builder hsvs(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationHsv... hsvs) {
            return hsvs(List.of(hsvs));
        }

        public Builder ifDimensions(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationIfDimension> ifDimensions) {
            $.ifDimensions = ifDimensions;
            return this;
        }

        public Builder ifDimensions(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationIfDimension... ifDimensions) {
            return ifDimensions(List.of(ifDimensions));
        }

        public Builder ifOrientations(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationIfOrientation> ifOrientations) {
            $.ifOrientations = ifOrientations;
            return this;
        }

        public Builder ifOrientations(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationIfOrientation... ifOrientations) {
            return ifOrientations(List.of(ifOrientations));
        }

        public Builder maxColors(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMaxColor> maxColors) {
            $.maxColors = maxColors;
            return this;
        }

        public Builder maxColors(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMaxColor... maxColors) {
            return maxColors(List.of(maxColors));
        }

        public Builder mirrors(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMirror> mirrors) {
            $.mirrors = mirrors;
            return this;
        }

        public Builder mirrors(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMirror... mirrors) {
            return mirrors(List.of(mirrors));
        }

        public Builder monoHues(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMonoHue> monoHues) {
            $.monoHues = monoHues;
            return this;
        }

        public Builder monoHues(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationMonoHue... monoHues) {
            return monoHues(List.of(monoHues));
        }

        public Builder opacities(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationOpacity> opacities) {
            $.opacities = opacities;
            return this;
        }

        public Builder opacities(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationOpacity... opacities) {
            return opacities(List.of(opacities));
        }

        public Builder removeColors(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationRemoveColor> removeColors) {
            $.removeColors = removeColors;
            return this;
        }

        public Builder removeColors(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationRemoveColor... removeColors) {
            return removeColors(List.of(removeColors));
        }

        public Builder unsharpMasks(@Nullable List<GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationUnsharpMask> unsharpMasks) {
            $.unsharpMasks = unsharpMasks;
            return this;
        }

        public Builder unsharpMasks(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformationUnsharpMask... unsharpMasks) {
            return unsharpMasks(List.of(unsharpMasks));
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImageTransformation build() {
            return $;
        }
    }

}
