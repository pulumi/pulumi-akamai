// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BotmanServeAlternateActionState extends com.pulumi.resources.ResourceArgs {

    public static final BotmanServeAlternateActionState Empty = new BotmanServeAlternateActionState();

    @Import(name="actionId")
    private @Nullable Output<String> actionId;

    public Optional<Output<String>> actionId() {
        return Optional.ofNullable(this.actionId);
    }

    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    @Import(name="serveAlternateAction")
    private @Nullable Output<String> serveAlternateAction;

    public Optional<Output<String>> serveAlternateAction() {
        return Optional.ofNullable(this.serveAlternateAction);
    }

    private BotmanServeAlternateActionState() {}

    private BotmanServeAlternateActionState(BotmanServeAlternateActionState $) {
        this.actionId = $.actionId;
        this.configId = $.configId;
        this.serveAlternateAction = $.serveAlternateAction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BotmanServeAlternateActionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BotmanServeAlternateActionState $;

        public Builder() {
            $ = new BotmanServeAlternateActionState();
        }

        public Builder(BotmanServeAlternateActionState defaults) {
            $ = new BotmanServeAlternateActionState(Objects.requireNonNull(defaults));
        }

        public Builder actionId(@Nullable Output<String> actionId) {
            $.actionId = actionId;
            return this;
        }

        public Builder actionId(String actionId) {
            return actionId(Output.of(actionId));
        }

        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        public Builder serveAlternateAction(@Nullable Output<String> serveAlternateAction) {
            $.serveAlternateAction = serveAlternateAction;
            return this;
        }

        public Builder serveAlternateAction(String serveAlternateAction) {
            return serveAlternateAction(Output.of(serveAlternateAction));
        }

        public BotmanServeAlternateActionState build() {
            return $;
        }
    }

}
