// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCpCodesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCpCodesArgs Empty = new GetCpCodesArgs();

    @Import(name="contractId", required=true)
    private Output<String> contractId;

    public Output<String> contractId() {
        return this.contractId;
    }

    @Import(name="filterByName")
    private @Nullable Output<String> filterByName;

    public Optional<Output<String>> filterByName() {
        return Optional.ofNullable(this.filterByName);
    }

    @Import(name="filterByProductId")
    private @Nullable Output<String> filterByProductId;

    public Optional<Output<String>> filterByProductId() {
        return Optional.ofNullable(this.filterByProductId);
    }

    @Import(name="groupId", required=true)
    private Output<String> groupId;

    public Output<String> groupId() {
        return this.groupId;
    }

    private GetCpCodesArgs() {}

    private GetCpCodesArgs(GetCpCodesArgs $) {
        this.contractId = $.contractId;
        this.filterByName = $.filterByName;
        this.filterByProductId = $.filterByProductId;
        this.groupId = $.groupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCpCodesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCpCodesArgs $;

        public Builder() {
            $ = new GetCpCodesArgs();
        }

        public Builder(GetCpCodesArgs defaults) {
            $ = new GetCpCodesArgs(Objects.requireNonNull(defaults));
        }

        public Builder contractId(Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        public Builder filterByName(@Nullable Output<String> filterByName) {
            $.filterByName = filterByName;
            return this;
        }

        public Builder filterByName(String filterByName) {
            return filterByName(Output.of(filterByName));
        }

        public Builder filterByProductId(@Nullable Output<String> filterByProductId) {
            $.filterByProductId = filterByProductId;
            return this;
        }

        public Builder filterByProductId(String filterByProductId) {
            return filterByProductId(Output.of(filterByProductId));
        }

        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        public GetCpCodesArgs build() {
            if ($.contractId == null) {
                throw new MissingRequiredPropertyException("GetCpCodesArgs", "contractId");
            }
            if ($.groupId == null) {
                throw new MissingRequiredPropertyException("GetCpCodesArgs", "groupId");
            }
            return $;
        }
    }

}
