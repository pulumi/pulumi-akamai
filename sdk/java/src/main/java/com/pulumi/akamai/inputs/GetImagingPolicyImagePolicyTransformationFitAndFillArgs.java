// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationFitAndFillArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationFitAndFillArgs Empty = new GetImagingPolicyImagePolicyTransformationFitAndFillArgs();

    @Import(name="fillTransformation")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationArgs> fillTransformation;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationArgs>> fillTransformation() {
        return Optional.ofNullable(this.fillTransformation);
    }

    /**
     * The height value of the resized image.
     * 
     */
    @Import(name="height")
    private @Nullable Output<String> height;

    /**
     * @return The height value of the resized image.
     * 
     */
    public Optional<Output<String>> height() {
        return Optional.ofNullable(this.height);
    }

    /**
     * The height value of the resized image.
     * 
     */
    @Import(name="heightVar")
    private @Nullable Output<String> heightVar;

    /**
     * @return The height value of the resized image.
     * 
     */
    public Optional<Output<String>> heightVar() {
        return Optional.ofNullable(this.heightVar);
    }

    /**
     * The width value of the resized image.
     * 
     */
    @Import(name="width")
    private @Nullable Output<String> width;

    /**
     * @return The width value of the resized image.
     * 
     */
    public Optional<Output<String>> width() {
        return Optional.ofNullable(this.width);
    }

    /**
     * The width value of the resized image.
     * 
     */
    @Import(name="widthVar")
    private @Nullable Output<String> widthVar;

    /**
     * @return The width value of the resized image.
     * 
     */
    public Optional<Output<String>> widthVar() {
        return Optional.ofNullable(this.widthVar);
    }

    private GetImagingPolicyImagePolicyTransformationFitAndFillArgs() {}

    private GetImagingPolicyImagePolicyTransformationFitAndFillArgs(GetImagingPolicyImagePolicyTransformationFitAndFillArgs $) {
        this.fillTransformation = $.fillTransformation;
        this.height = $.height;
        this.heightVar = $.heightVar;
        this.width = $.width;
        this.widthVar = $.widthVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationFitAndFillArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationFitAndFillArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationFitAndFillArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationFitAndFillArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationFitAndFillArgs(Objects.requireNonNull(defaults));
        }

        public Builder fillTransformation(@Nullable Output<GetImagingPolicyImagePolicyTransformationArgs> fillTransformation) {
            $.fillTransformation = fillTransformation;
            return this;
        }

        public Builder fillTransformation(GetImagingPolicyImagePolicyTransformationArgs fillTransformation) {
            return fillTransformation(Output.of(fillTransformation));
        }

        /**
         * @param height The height value of the resized image.
         * 
         * @return builder
         * 
         */
        public Builder height(@Nullable Output<String> height) {
            $.height = height;
            return this;
        }

        /**
         * @param height The height value of the resized image.
         * 
         * @return builder
         * 
         */
        public Builder height(String height) {
            return height(Output.of(height));
        }

        /**
         * @param heightVar The height value of the resized image.
         * 
         * @return builder
         * 
         */
        public Builder heightVar(@Nullable Output<String> heightVar) {
            $.heightVar = heightVar;
            return this;
        }

        /**
         * @param heightVar The height value of the resized image.
         * 
         * @return builder
         * 
         */
        public Builder heightVar(String heightVar) {
            return heightVar(Output.of(heightVar));
        }

        /**
         * @param width The width value of the resized image.
         * 
         * @return builder
         * 
         */
        public Builder width(@Nullable Output<String> width) {
            $.width = width;
            return this;
        }

        /**
         * @param width The width value of the resized image.
         * 
         * @return builder
         * 
         */
        public Builder width(String width) {
            return width(Output.of(width));
        }

        /**
         * @param widthVar The width value of the resized image.
         * 
         * @return builder
         * 
         */
        public Builder widthVar(@Nullable Output<String> widthVar) {
            $.widthVar = widthVar;
            return this;
        }

        /**
         * @param widthVar The width value of the resized image.
         * 
         * @return builder
         * 
         */
        public Builder widthVar(String widthVar) {
            return widthVar(Output.of(widthVar));
        }

        public GetImagingPolicyImagePolicyTransformationFitAndFillArgs build() {
            return $;
        }
    }

}
