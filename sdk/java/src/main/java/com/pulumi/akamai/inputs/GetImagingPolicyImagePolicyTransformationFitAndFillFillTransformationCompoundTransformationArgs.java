// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAppendArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAspectCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBackgroundColorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBlurArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationChromaKeyArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompositeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompoundArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationContrastArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFaceCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFeatureCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFitAndFillArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGoopArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGrayscaleArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHslArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHsvArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfDimensionArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfOrientationArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationImQueryArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMaxColorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMirrorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMonoHueArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationOpacityArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRegionOfInterestCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRelativeCropArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRemoveColorArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationResizeArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRotateArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationScaleArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationShearsArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationTrimArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationUnsharpMaskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs Empty = new GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs();

    @Import(name="appends")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAppendArgs>> appends;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAppendArgs>>> appends() {
        return Optional.ofNullable(this.appends);
    }

    @Import(name="aspectCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAspectCropArgs>> aspectCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAspectCropArgs>>> aspectCrops() {
        return Optional.ofNullable(this.aspectCrops);
    }

    @Import(name="backgroundColors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBackgroundColorArgs>> backgroundColors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBackgroundColorArgs>>> backgroundColors() {
        return Optional.ofNullable(this.backgroundColors);
    }

    @Import(name="blurs")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBlurArgs>> blurs;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBlurArgs>>> blurs() {
        return Optional.ofNullable(this.blurs);
    }

    @Import(name="chromaKeys")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationChromaKeyArgs>> chromaKeys;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationChromaKeyArgs>>> chromaKeys() {
        return Optional.ofNullable(this.chromaKeys);
    }

    @Import(name="composites")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompositeArgs>> composites;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompositeArgs>>> composites() {
        return Optional.ofNullable(this.composites);
    }

    @Import(name="compounds")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompoundArgs>> compounds;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompoundArgs>>> compounds() {
        return Optional.ofNullable(this.compounds);
    }

    @Import(name="contrasts")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationContrastArgs>> contrasts;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationContrastArgs>>> contrasts() {
        return Optional.ofNullable(this.contrasts);
    }

    @Import(name="crops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCropArgs>> crops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCropArgs>>> crops() {
        return Optional.ofNullable(this.crops);
    }

    @Import(name="faceCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFaceCropArgs>> faceCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFaceCropArgs>>> faceCrops() {
        return Optional.ofNullable(this.faceCrops);
    }

    @Import(name="featureCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFeatureCropArgs>> featureCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFeatureCropArgs>>> featureCrops() {
        return Optional.ofNullable(this.featureCrops);
    }

    @Import(name="fitAndFills")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFitAndFillArgs>> fitAndFills;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFitAndFillArgs>>> fitAndFills() {
        return Optional.ofNullable(this.fitAndFills);
    }

    @Import(name="goops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGoopArgs>> goops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGoopArgs>>> goops() {
        return Optional.ofNullable(this.goops);
    }

    @Import(name="grayscales")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGrayscaleArgs>> grayscales;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGrayscaleArgs>>> grayscales() {
        return Optional.ofNullable(this.grayscales);
    }

    @Import(name="hsls")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHslArgs>> hsls;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHslArgs>>> hsls() {
        return Optional.ofNullable(this.hsls);
    }

    @Import(name="hsvs")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHsvArgs>> hsvs;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHsvArgs>>> hsvs() {
        return Optional.ofNullable(this.hsvs);
    }

    @Import(name="ifDimensions")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfDimensionArgs>> ifDimensions;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfDimensionArgs>>> ifDimensions() {
        return Optional.ofNullable(this.ifDimensions);
    }

    @Import(name="ifOrientations")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfOrientationArgs>> ifOrientations;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfOrientationArgs>>> ifOrientations() {
        return Optional.ofNullable(this.ifOrientations);
    }

    @Import(name="imQueries")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationImQueryArgs>> imQueries;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationImQueryArgs>>> imQueries() {
        return Optional.ofNullable(this.imQueries);
    }

    @Import(name="maxColors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMaxColorArgs>> maxColors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMaxColorArgs>>> maxColors() {
        return Optional.ofNullable(this.maxColors);
    }

    @Import(name="mirrors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMirrorArgs>> mirrors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMirrorArgs>>> mirrors() {
        return Optional.ofNullable(this.mirrors);
    }

    @Import(name="monoHues")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMonoHueArgs>> monoHues;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMonoHueArgs>>> monoHues() {
        return Optional.ofNullable(this.monoHues);
    }

    @Import(name="opacities")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationOpacityArgs>> opacities;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationOpacityArgs>>> opacities() {
        return Optional.ofNullable(this.opacities);
    }

    @Import(name="regionOfInterestCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRegionOfInterestCropArgs>> regionOfInterestCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRegionOfInterestCropArgs>>> regionOfInterestCrops() {
        return Optional.ofNullable(this.regionOfInterestCrops);
    }

    @Import(name="relativeCrops")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRelativeCropArgs>> relativeCrops;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRelativeCropArgs>>> relativeCrops() {
        return Optional.ofNullable(this.relativeCrops);
    }

    @Import(name="removeColors")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRemoveColorArgs>> removeColors;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRemoveColorArgs>>> removeColors() {
        return Optional.ofNullable(this.removeColors);
    }

    @Import(name="resizes")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationResizeArgs>> resizes;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationResizeArgs>>> resizes() {
        return Optional.ofNullable(this.resizes);
    }

    @Import(name="rotates")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRotateArgs>> rotates;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRotateArgs>>> rotates() {
        return Optional.ofNullable(this.rotates);
    }

    @Import(name="scales")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationScaleArgs>> scales;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationScaleArgs>>> scales() {
        return Optional.ofNullable(this.scales);
    }

    @Import(name="shears")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationShearsArgs>> shears;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationShearsArgs>>> shears() {
        return Optional.ofNullable(this.shears);
    }

    @Import(name="trims")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationTrimArgs>> trims;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationTrimArgs>>> trims() {
        return Optional.ofNullable(this.trims);
    }

    @Import(name="unsharpMasks")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationUnsharpMaskArgs>> unsharpMasks;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationUnsharpMaskArgs>>> unsharpMasks() {
        return Optional.ofNullable(this.unsharpMasks);
    }

    private GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs() {}

    private GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs $) {
        this.appends = $.appends;
        this.aspectCrops = $.aspectCrops;
        this.backgroundColors = $.backgroundColors;
        this.blurs = $.blurs;
        this.chromaKeys = $.chromaKeys;
        this.composites = $.composites;
        this.compounds = $.compounds;
        this.contrasts = $.contrasts;
        this.crops = $.crops;
        this.faceCrops = $.faceCrops;
        this.featureCrops = $.featureCrops;
        this.fitAndFills = $.fitAndFills;
        this.goops = $.goops;
        this.grayscales = $.grayscales;
        this.hsls = $.hsls;
        this.hsvs = $.hsvs;
        this.ifDimensions = $.ifDimensions;
        this.ifOrientations = $.ifOrientations;
        this.imQueries = $.imQueries;
        this.maxColors = $.maxColors;
        this.mirrors = $.mirrors;
        this.monoHues = $.monoHues;
        this.opacities = $.opacities;
        this.regionOfInterestCrops = $.regionOfInterestCrops;
        this.relativeCrops = $.relativeCrops;
        this.removeColors = $.removeColors;
        this.resizes = $.resizes;
        this.rotates = $.rotates;
        this.scales = $.scales;
        this.shears = $.shears;
        this.trims = $.trims;
        this.unsharpMasks = $.unsharpMasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs(Objects.requireNonNull(defaults));
        }

        public Builder appends(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAppendArgs>> appends) {
            $.appends = appends;
            return this;
        }

        public Builder appends(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAppendArgs> appends) {
            return appends(Output.of(appends));
        }

        public Builder appends(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAppendArgs... appends) {
            return appends(List.of(appends));
        }

        public Builder aspectCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAspectCropArgs>> aspectCrops) {
            $.aspectCrops = aspectCrops;
            return this;
        }

        public Builder aspectCrops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAspectCropArgs> aspectCrops) {
            return aspectCrops(Output.of(aspectCrops));
        }

        public Builder aspectCrops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationAspectCropArgs... aspectCrops) {
            return aspectCrops(List.of(aspectCrops));
        }

        public Builder backgroundColors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBackgroundColorArgs>> backgroundColors) {
            $.backgroundColors = backgroundColors;
            return this;
        }

        public Builder backgroundColors(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBackgroundColorArgs> backgroundColors) {
            return backgroundColors(Output.of(backgroundColors));
        }

        public Builder backgroundColors(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBackgroundColorArgs... backgroundColors) {
            return backgroundColors(List.of(backgroundColors));
        }

        public Builder blurs(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBlurArgs>> blurs) {
            $.blurs = blurs;
            return this;
        }

        public Builder blurs(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBlurArgs> blurs) {
            return blurs(Output.of(blurs));
        }

        public Builder blurs(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationBlurArgs... blurs) {
            return blurs(List.of(blurs));
        }

        public Builder chromaKeys(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationChromaKeyArgs>> chromaKeys) {
            $.chromaKeys = chromaKeys;
            return this;
        }

        public Builder chromaKeys(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationChromaKeyArgs> chromaKeys) {
            return chromaKeys(Output.of(chromaKeys));
        }

        public Builder chromaKeys(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationChromaKeyArgs... chromaKeys) {
            return chromaKeys(List.of(chromaKeys));
        }

        public Builder composites(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompositeArgs>> composites) {
            $.composites = composites;
            return this;
        }

        public Builder composites(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompositeArgs> composites) {
            return composites(Output.of(composites));
        }

        public Builder composites(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompositeArgs... composites) {
            return composites(List.of(composites));
        }

        public Builder compounds(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompoundArgs>> compounds) {
            $.compounds = compounds;
            return this;
        }

        public Builder compounds(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompoundArgs> compounds) {
            return compounds(Output.of(compounds));
        }

        public Builder compounds(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCompoundArgs... compounds) {
            return compounds(List.of(compounds));
        }

        public Builder contrasts(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationContrastArgs>> contrasts) {
            $.contrasts = contrasts;
            return this;
        }

        public Builder contrasts(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationContrastArgs> contrasts) {
            return contrasts(Output.of(contrasts));
        }

        public Builder contrasts(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationContrastArgs... contrasts) {
            return contrasts(List.of(contrasts));
        }

        public Builder crops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCropArgs>> crops) {
            $.crops = crops;
            return this;
        }

        public Builder crops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCropArgs> crops) {
            return crops(Output.of(crops));
        }

        public Builder crops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationCropArgs... crops) {
            return crops(List.of(crops));
        }

        public Builder faceCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFaceCropArgs>> faceCrops) {
            $.faceCrops = faceCrops;
            return this;
        }

        public Builder faceCrops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFaceCropArgs> faceCrops) {
            return faceCrops(Output.of(faceCrops));
        }

        public Builder faceCrops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFaceCropArgs... faceCrops) {
            return faceCrops(List.of(faceCrops));
        }

        public Builder featureCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFeatureCropArgs>> featureCrops) {
            $.featureCrops = featureCrops;
            return this;
        }

        public Builder featureCrops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFeatureCropArgs> featureCrops) {
            return featureCrops(Output.of(featureCrops));
        }

        public Builder featureCrops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFeatureCropArgs... featureCrops) {
            return featureCrops(List.of(featureCrops));
        }

        public Builder fitAndFills(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFitAndFillArgs>> fitAndFills) {
            $.fitAndFills = fitAndFills;
            return this;
        }

        public Builder fitAndFills(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFitAndFillArgs> fitAndFills) {
            return fitAndFills(Output.of(fitAndFills));
        }

        public Builder fitAndFills(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationFitAndFillArgs... fitAndFills) {
            return fitAndFills(List.of(fitAndFills));
        }

        public Builder goops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGoopArgs>> goops) {
            $.goops = goops;
            return this;
        }

        public Builder goops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGoopArgs> goops) {
            return goops(Output.of(goops));
        }

        public Builder goops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGoopArgs... goops) {
            return goops(List.of(goops));
        }

        public Builder grayscales(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGrayscaleArgs>> grayscales) {
            $.grayscales = grayscales;
            return this;
        }

        public Builder grayscales(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGrayscaleArgs> grayscales) {
            return grayscales(Output.of(grayscales));
        }

        public Builder grayscales(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationGrayscaleArgs... grayscales) {
            return grayscales(List.of(grayscales));
        }

        public Builder hsls(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHslArgs>> hsls) {
            $.hsls = hsls;
            return this;
        }

        public Builder hsls(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHslArgs> hsls) {
            return hsls(Output.of(hsls));
        }

        public Builder hsls(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHslArgs... hsls) {
            return hsls(List.of(hsls));
        }

        public Builder hsvs(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHsvArgs>> hsvs) {
            $.hsvs = hsvs;
            return this;
        }

        public Builder hsvs(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHsvArgs> hsvs) {
            return hsvs(Output.of(hsvs));
        }

        public Builder hsvs(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationHsvArgs... hsvs) {
            return hsvs(List.of(hsvs));
        }

        public Builder ifDimensions(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfDimensionArgs>> ifDimensions) {
            $.ifDimensions = ifDimensions;
            return this;
        }

        public Builder ifDimensions(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfDimensionArgs> ifDimensions) {
            return ifDimensions(Output.of(ifDimensions));
        }

        public Builder ifDimensions(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfDimensionArgs... ifDimensions) {
            return ifDimensions(List.of(ifDimensions));
        }

        public Builder ifOrientations(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfOrientationArgs>> ifOrientations) {
            $.ifOrientations = ifOrientations;
            return this;
        }

        public Builder ifOrientations(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfOrientationArgs> ifOrientations) {
            return ifOrientations(Output.of(ifOrientations));
        }

        public Builder ifOrientations(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationIfOrientationArgs... ifOrientations) {
            return ifOrientations(List.of(ifOrientations));
        }

        public Builder imQueries(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationImQueryArgs>> imQueries) {
            $.imQueries = imQueries;
            return this;
        }

        public Builder imQueries(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationImQueryArgs> imQueries) {
            return imQueries(Output.of(imQueries));
        }

        public Builder imQueries(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationImQueryArgs... imQueries) {
            return imQueries(List.of(imQueries));
        }

        public Builder maxColors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMaxColorArgs>> maxColors) {
            $.maxColors = maxColors;
            return this;
        }

        public Builder maxColors(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMaxColorArgs> maxColors) {
            return maxColors(Output.of(maxColors));
        }

        public Builder maxColors(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMaxColorArgs... maxColors) {
            return maxColors(List.of(maxColors));
        }

        public Builder mirrors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMirrorArgs>> mirrors) {
            $.mirrors = mirrors;
            return this;
        }

        public Builder mirrors(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMirrorArgs> mirrors) {
            return mirrors(Output.of(mirrors));
        }

        public Builder mirrors(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMirrorArgs... mirrors) {
            return mirrors(List.of(mirrors));
        }

        public Builder monoHues(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMonoHueArgs>> monoHues) {
            $.monoHues = monoHues;
            return this;
        }

        public Builder monoHues(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMonoHueArgs> monoHues) {
            return monoHues(Output.of(monoHues));
        }

        public Builder monoHues(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationMonoHueArgs... monoHues) {
            return monoHues(List.of(monoHues));
        }

        public Builder opacities(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationOpacityArgs>> opacities) {
            $.opacities = opacities;
            return this;
        }

        public Builder opacities(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationOpacityArgs> opacities) {
            return opacities(Output.of(opacities));
        }

        public Builder opacities(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationOpacityArgs... opacities) {
            return opacities(List.of(opacities));
        }

        public Builder regionOfInterestCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRegionOfInterestCropArgs>> regionOfInterestCrops) {
            $.regionOfInterestCrops = regionOfInterestCrops;
            return this;
        }

        public Builder regionOfInterestCrops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRegionOfInterestCropArgs> regionOfInterestCrops) {
            return regionOfInterestCrops(Output.of(regionOfInterestCrops));
        }

        public Builder regionOfInterestCrops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRegionOfInterestCropArgs... regionOfInterestCrops) {
            return regionOfInterestCrops(List.of(regionOfInterestCrops));
        }

        public Builder relativeCrops(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRelativeCropArgs>> relativeCrops) {
            $.relativeCrops = relativeCrops;
            return this;
        }

        public Builder relativeCrops(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRelativeCropArgs> relativeCrops) {
            return relativeCrops(Output.of(relativeCrops));
        }

        public Builder relativeCrops(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRelativeCropArgs... relativeCrops) {
            return relativeCrops(List.of(relativeCrops));
        }

        public Builder removeColors(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRemoveColorArgs>> removeColors) {
            $.removeColors = removeColors;
            return this;
        }

        public Builder removeColors(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRemoveColorArgs> removeColors) {
            return removeColors(Output.of(removeColors));
        }

        public Builder removeColors(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRemoveColorArgs... removeColors) {
            return removeColors(List.of(removeColors));
        }

        public Builder resizes(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationResizeArgs>> resizes) {
            $.resizes = resizes;
            return this;
        }

        public Builder resizes(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationResizeArgs> resizes) {
            return resizes(Output.of(resizes));
        }

        public Builder resizes(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationResizeArgs... resizes) {
            return resizes(List.of(resizes));
        }

        public Builder rotates(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRotateArgs>> rotates) {
            $.rotates = rotates;
            return this;
        }

        public Builder rotates(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRotateArgs> rotates) {
            return rotates(Output.of(rotates));
        }

        public Builder rotates(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationRotateArgs... rotates) {
            return rotates(List.of(rotates));
        }

        public Builder scales(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationScaleArgs>> scales) {
            $.scales = scales;
            return this;
        }

        public Builder scales(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationScaleArgs> scales) {
            return scales(Output.of(scales));
        }

        public Builder scales(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationScaleArgs... scales) {
            return scales(List.of(scales));
        }

        public Builder shears(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationShearsArgs>> shears) {
            $.shears = shears;
            return this;
        }

        public Builder shears(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationShearsArgs> shears) {
            return shears(Output.of(shears));
        }

        public Builder shears(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationShearsArgs... shears) {
            return shears(List.of(shears));
        }

        public Builder trims(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationTrimArgs>> trims) {
            $.trims = trims;
            return this;
        }

        public Builder trims(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationTrimArgs> trims) {
            return trims(Output.of(trims));
        }

        public Builder trims(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationTrimArgs... trims) {
            return trims(List.of(trims));
        }

        public Builder unsharpMasks(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationUnsharpMaskArgs>> unsharpMasks) {
            $.unsharpMasks = unsharpMasks;
            return this;
        }

        public Builder unsharpMasks(List<GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationUnsharpMaskArgs> unsharpMasks) {
            return unsharpMasks(Output.of(unsharpMasks));
        }

        public Builder unsharpMasks(GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationUnsharpMaskArgs... unsharpMasks) {
            return unsharpMasks(List.of(unsharpMasks));
        }

        public GetImagingPolicyImagePolicyTransformationFitAndFillFillTransformationCompoundTransformationArgs build() {
            return $;
        }
    }

}
