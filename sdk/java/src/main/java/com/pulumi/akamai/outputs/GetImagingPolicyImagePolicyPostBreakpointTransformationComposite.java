// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImagingPolicyImagePolicyPostBreakpointTransformationComposite {
    private @Nullable String gravity;
    private @Nullable String gravityVar;
    private GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage image;
    private @Nullable String placement;
    private @Nullable String placementVar;
    private @Nullable String scale;
    private @Nullable String scaleDimension;
    private @Nullable String scaleDimensionVar;
    private @Nullable String scaleVar;
    private @Nullable String xPosition;
    private @Nullable String xPositionVar;
    private @Nullable String yPosition;
    private @Nullable String yPositionVar;

    private GetImagingPolicyImagePolicyPostBreakpointTransformationComposite() {}
    public Optional<String> gravity() {
        return Optional.ofNullable(this.gravity);
    }
    public Optional<String> gravityVar() {
        return Optional.ofNullable(this.gravityVar);
    }
    public GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage image() {
        return this.image;
    }
    public Optional<String> placement() {
        return Optional.ofNullable(this.placement);
    }
    public Optional<String> placementVar() {
        return Optional.ofNullable(this.placementVar);
    }
    public Optional<String> scale() {
        return Optional.ofNullable(this.scale);
    }
    public Optional<String> scaleDimension() {
        return Optional.ofNullable(this.scaleDimension);
    }
    public Optional<String> scaleDimensionVar() {
        return Optional.ofNullable(this.scaleDimensionVar);
    }
    public Optional<String> scaleVar() {
        return Optional.ofNullable(this.scaleVar);
    }
    public Optional<String> xPosition() {
        return Optional.ofNullable(this.xPosition);
    }
    public Optional<String> xPositionVar() {
        return Optional.ofNullable(this.xPositionVar);
    }
    public Optional<String> yPosition() {
        return Optional.ofNullable(this.yPosition);
    }
    public Optional<String> yPositionVar() {
        return Optional.ofNullable(this.yPositionVar);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationComposite defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String gravity;
        private @Nullable String gravityVar;
        private GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage image;
        private @Nullable String placement;
        private @Nullable String placementVar;
        private @Nullable String scale;
        private @Nullable String scaleDimension;
        private @Nullable String scaleDimensionVar;
        private @Nullable String scaleVar;
        private @Nullable String xPosition;
        private @Nullable String xPositionVar;
        private @Nullable String yPosition;
        private @Nullable String yPositionVar;
        public Builder() {}
        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationComposite defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gravity = defaults.gravity;
    	      this.gravityVar = defaults.gravityVar;
    	      this.image = defaults.image;
    	      this.placement = defaults.placement;
    	      this.placementVar = defaults.placementVar;
    	      this.scale = defaults.scale;
    	      this.scaleDimension = defaults.scaleDimension;
    	      this.scaleDimensionVar = defaults.scaleDimensionVar;
    	      this.scaleVar = defaults.scaleVar;
    	      this.xPosition = defaults.xPosition;
    	      this.xPositionVar = defaults.xPositionVar;
    	      this.yPosition = defaults.yPosition;
    	      this.yPositionVar = defaults.yPositionVar;
        }

        @CustomType.Setter
        public Builder gravity(@Nullable String gravity) {
            this.gravity = gravity;
            return this;
        }
        @CustomType.Setter
        public Builder gravityVar(@Nullable String gravityVar) {
            this.gravityVar = gravityVar;
            return this;
        }
        @CustomType.Setter
        public Builder image(GetImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage image) {
            this.image = Objects.requireNonNull(image);
            return this;
        }
        @CustomType.Setter
        public Builder placement(@Nullable String placement) {
            this.placement = placement;
            return this;
        }
        @CustomType.Setter
        public Builder placementVar(@Nullable String placementVar) {
            this.placementVar = placementVar;
            return this;
        }
        @CustomType.Setter
        public Builder scale(@Nullable String scale) {
            this.scale = scale;
            return this;
        }
        @CustomType.Setter
        public Builder scaleDimension(@Nullable String scaleDimension) {
            this.scaleDimension = scaleDimension;
            return this;
        }
        @CustomType.Setter
        public Builder scaleDimensionVar(@Nullable String scaleDimensionVar) {
            this.scaleDimensionVar = scaleDimensionVar;
            return this;
        }
        @CustomType.Setter
        public Builder scaleVar(@Nullable String scaleVar) {
            this.scaleVar = scaleVar;
            return this;
        }
        @CustomType.Setter
        public Builder xPosition(@Nullable String xPosition) {
            this.xPosition = xPosition;
            return this;
        }
        @CustomType.Setter
        public Builder xPositionVar(@Nullable String xPositionVar) {
            this.xPositionVar = xPositionVar;
            return this;
        }
        @CustomType.Setter
        public Builder yPosition(@Nullable String yPosition) {
            this.yPosition = yPosition;
            return this;
        }
        @CustomType.Setter
        public Builder yPositionVar(@Nullable String yPositionVar) {
            this.yPositionVar = yPositionVar;
            return this;
        }
        public GetImagingPolicyImagePolicyPostBreakpointTransformationComposite build() {
            final var _resultValue = new GetImagingPolicyImagePolicyPostBreakpointTransformationComposite();
            _resultValue.gravity = gravity;
            _resultValue.gravityVar = gravityVar;
            _resultValue.image = image;
            _resultValue.placement = placement;
            _resultValue.placementVar = placementVar;
            _resultValue.scale = scale;
            _resultValue.scaleDimension = scaleDimension;
            _resultValue.scaleDimensionVar = scaleDimensionVar;
            _resultValue.scaleVar = scaleVar;
            _resultValue.xPosition = xPosition;
            _resultValue.xPositionVar = xPositionVar;
            _resultValue.yPosition = yPosition;
            _resultValue.yPositionVar = yPositionVar;
            return _resultValue;
        }
    }
}
