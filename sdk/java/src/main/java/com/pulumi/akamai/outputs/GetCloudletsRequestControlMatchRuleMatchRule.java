// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetCloudletsRequestControlMatchRuleMatchRuleMatch;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudletsRequestControlMatchRuleMatchRule {
    /**
     * @return If set to allow, the request is sent to origin when all conditions are true. If deny, the request is denied when all conditions are true. If denybranded, the request is denied and rerouted according to the configuration of the Request Control behavior
     * 
     */
    private String allowDeny;
    /**
     * @return If set to true, disables a rule so it is not evaluated against incoming requests.
     * 
     */
    private @Nullable Boolean disabled;
    /**
     * @return The end time for this match (in seconds since the epoch)
     * 
     */
    private @Nullable Integer end;
    /**
     * @return Defines a set of match objects
     * 
     */
    private @Nullable List<GetCloudletsRequestControlMatchRuleMatchRuleMatch> matches;
    /**
     * @return Is used in some cloudlets to support default rules (rule that is always matched)
     * 
     */
    private @Nullable Boolean matchesAlways;
    /**
     * @return The name of the rule
     * 
     */
    private @Nullable String name;
    /**
     * @return The start time for this match (in seconds since the epoch)
     * 
     */
    private @Nullable Integer start;
    /**
     * @return The type of Cloudlet the rule is for
     * 
     */
    private String type;

    private GetCloudletsRequestControlMatchRuleMatchRule() {}
    /**
     * @return If set to allow, the request is sent to origin when all conditions are true. If deny, the request is denied when all conditions are true. If denybranded, the request is denied and rerouted according to the configuration of the Request Control behavior
     * 
     */
    public String allowDeny() {
        return this.allowDeny;
    }
    /**
     * @return If set to true, disables a rule so it is not evaluated against incoming requests.
     * 
     */
    public Optional<Boolean> disabled() {
        return Optional.ofNullable(this.disabled);
    }
    /**
     * @return The end time for this match (in seconds since the epoch)
     * 
     */
    public Optional<Integer> end() {
        return Optional.ofNullable(this.end);
    }
    /**
     * @return Defines a set of match objects
     * 
     */
    public List<GetCloudletsRequestControlMatchRuleMatchRuleMatch> matches() {
        return this.matches == null ? List.of() : this.matches;
    }
    /**
     * @return Is used in some cloudlets to support default rules (rule that is always matched)
     * 
     */
    public Optional<Boolean> matchesAlways() {
        return Optional.ofNullable(this.matchesAlways);
    }
    /**
     * @return The name of the rule
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The start time for this match (in seconds since the epoch)
     * 
     */
    public Optional<Integer> start() {
        return Optional.ofNullable(this.start);
    }
    /**
     * @return The type of Cloudlet the rule is for
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudletsRequestControlMatchRuleMatchRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String allowDeny;
        private @Nullable Boolean disabled;
        private @Nullable Integer end;
        private @Nullable List<GetCloudletsRequestControlMatchRuleMatchRuleMatch> matches;
        private @Nullable Boolean matchesAlways;
        private @Nullable String name;
        private @Nullable Integer start;
        private String type;
        public Builder() {}
        public Builder(GetCloudletsRequestControlMatchRuleMatchRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowDeny = defaults.allowDeny;
    	      this.disabled = defaults.disabled;
    	      this.end = defaults.end;
    	      this.matches = defaults.matches;
    	      this.matchesAlways = defaults.matchesAlways;
    	      this.name = defaults.name;
    	      this.start = defaults.start;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder allowDeny(String allowDeny) {
            if (allowDeny == null) {
              throw new MissingRequiredPropertyException("GetCloudletsRequestControlMatchRuleMatchRule", "allowDeny");
            }
            this.allowDeny = allowDeny;
            return this;
        }
        @CustomType.Setter
        public Builder disabled(@Nullable Boolean disabled) {

            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder end(@Nullable Integer end) {

            this.end = end;
            return this;
        }
        @CustomType.Setter
        public Builder matches(@Nullable List<GetCloudletsRequestControlMatchRuleMatchRuleMatch> matches) {

            this.matches = matches;
            return this;
        }
        public Builder matches(GetCloudletsRequestControlMatchRuleMatchRuleMatch... matches) {
            return matches(List.of(matches));
        }
        @CustomType.Setter
        public Builder matchesAlways(@Nullable Boolean matchesAlways) {

            this.matchesAlways = matchesAlways;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder start(@Nullable Integer start) {

            this.start = start;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetCloudletsRequestControlMatchRuleMatchRule", "type");
            }
            this.type = type;
            return this;
        }
        public GetCloudletsRequestControlMatchRuleMatchRule build() {
            final var _resultValue = new GetCloudletsRequestControlMatchRuleMatchRule();
            _resultValue.allowDeny = allowDeny;
            _resultValue.disabled = disabled;
            _resultValue.end = end;
            _resultValue.matches = matches;
            _resultValue.matchesAlways = matchesAlways;
            _resultValue.name = name;
            _resultValue.start = start;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
