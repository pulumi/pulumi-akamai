// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.AppSecRuleUpgradeArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.AppSecRuleUpgradeState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * Basic usage:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.akamai.AkamaiFunctions;
 * import com.pulumi.akamai.inputs.GetAppSecConfigurationArgs;
 * import com.pulumi.akamai.AppSecRuleUpgrade;
 * import com.pulumi.akamai.AppSecRuleUpgradeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var configuration = AkamaiFunctions.getAppSecConfiguration(GetAppSecConfigurationArgs.builder()
 *             .name(&#34;Documentation&#34;)
 *             .build());
 * 
 *         var ruleUpgrade = new AppSecRuleUpgrade(&#34;ruleUpgrade&#34;, AppSecRuleUpgradeArgs.builder()        
 *             .configId(configuration.applyValue(getAppSecConfigurationResult -&gt; getAppSecConfigurationResult.configId()))
 *             .securityPolicyId(&#34;gms1_134637&#34;)
 *             .build());
 * 
 *         ctx.export(&#34;ruleUpgradeCurrentRuleset&#34;, ruleUpgrade.currentRuleset());
 *         ctx.export(&#34;ruleUpgradeMode&#34;, ruleUpgrade.mode());
 *         ctx.export(&#34;ruleUpgradeEvalStatus&#34;, ruleUpgrade.evalStatus());
 *     }
 * }
 * ```
 * ## Output Options
 * 
 * The following options can be used to determine the information returned and how that returned information is formatted:
 * 
 * - `current_ruleset`. Versioning information for your current KRS rule set.
 * - `mode`. Specifies the current upgrade mode type. Valid values are:
 *   - **KRS**. Rulesets must be manually upgraded.
 *   
 *   - **AAG**. Rulesets are automatically upgraded by Akamai.
 *   
 *   - **ASE_MANUAL**. Adaptive Security Engine rulesets must be manually upgraded.
 *   
 *   - **ASE_AUTO**. Adaptive Security Engine rulesets are automatically updated by Akamai.
 * 
 * - `eval_status`. Returns **enabled** if an evaluation is currently in progress; otherwise returns **disabled**.
 * 
 */
@ResourceType(type="akamai:index/appSecRuleUpgrade:AppSecRuleUpgrade")
public class AppSecRuleUpgrade extends com.pulumi.resources.CustomResource {
    /**
     * . Unique identifier of the security configuration associated with the ruleset being upgraded.
     * 
     */
    @Export(name="configId", type=Integer.class, parameters={})
    private Output<Integer> configId;

    /**
     * @return . Unique identifier of the security configuration associated with the ruleset being upgraded.
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }
    /**
     * Versioning information for the current KRS rule set
     * 
     */
    @Export(name="currentRuleset", type=String.class, parameters={})
    private Output<String> currentRuleset;

    /**
     * @return Versioning information for the current KRS rule set
     * 
     */
    public Output<String> currentRuleset() {
        return this.currentRuleset;
    }
    /**
     * Whether an evaluation is currently in progress
     * 
     */
    @Export(name="evalStatus", type=String.class, parameters={})
    private Output<String> evalStatus;

    /**
     * @return Whether an evaluation is currently in progress
     * 
     */
    public Output<String> evalStatus() {
        return this.evalStatus;
    }
    /**
     * Upgrade mode (KRS, AAG, ASE_MANUAL or ASE_AUTO)
     * 
     */
    @Export(name="mode", type=String.class, parameters={})
    private Output<String> mode;

    /**
     * @return Upgrade mode (KRS, AAG, ASE_MANUAL or ASE_AUTO)
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }
    /**
     * . Unique identifier of the security policy associated with the ruleset being upgraded.
     * 
     */
    @Export(name="securityPolicyId", type=String.class, parameters={})
    private Output<String> securityPolicyId;

    /**
     * @return . Unique identifier of the security policy associated with the ruleset being upgraded.
     * 
     */
    public Output<String> securityPolicyId() {
        return this.securityPolicyId;
    }
    /**
     * . (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:
     * - **ASE_AUTO**. Akamai automatically updates your rulesets.
     * - **ASE_MANUAL**. Manually updates your rulesets.
     * 
     */
    @Export(name="upgradeMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> upgradeMode;

    /**
     * @return . (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:
     * - **ASE_AUTO**. Akamai automatically updates your rulesets.
     * - **ASE_MANUAL**. Manually updates your rulesets.
     * 
     */
    public Output<Optional<String>> upgradeMode() {
        return Codegen.optional(this.upgradeMode);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppSecRuleUpgrade(String name) {
        this(name, AppSecRuleUpgradeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppSecRuleUpgrade(String name, AppSecRuleUpgradeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppSecRuleUpgrade(String name, AppSecRuleUpgradeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/appSecRuleUpgrade:AppSecRuleUpgrade", name, args == null ? AppSecRuleUpgradeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AppSecRuleUpgrade(String name, Output<String> id, @Nullable AppSecRuleUpgradeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/appSecRuleUpgrade:AppSecRuleUpgrade", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppSecRuleUpgrade get(String name, Output<String> id, @Nullable AppSecRuleUpgradeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppSecRuleUpgrade(name, id, state, options);
    }
}
