// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatch;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudletsEdgeRedirectorMatchRuleMatchRule {
    /**
     * @return If set to true, disables a rule so it is not evaluated against incoming requests.
     * 
     */
    private @Nullable Boolean disabled;
    /**
     * @return The end time for this match (in seconds since the epoch)
     * 
     */
    private @Nullable Integer end;
    /**
     * @return If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request
     * 
     */
    private @Nullable String matchUrl;
    /**
     * @return Defines a set of match objects
     * 
     */
    private @Nullable List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatch> matches;
    /**
     * @return The name of the rule
     * 
     */
    private @Nullable String name;
    /**
     * @return The URL Edge Redirector redirects the request to. If using use_relative_url, you can enter a path for the value
     * 
     */
    private String redirectUrl;
    /**
     * @return The start time for this match (in seconds since the epoch)
     * 
     */
    private @Nullable Integer start;
    /**
     * @return The HTTP response status code (allowed values: 301, 302, 303, 307, 308)
     * 
     */
    private Integer statusCode;
    /**
     * @return The type of Cloudlet the rule is for
     * 
     */
    private String type;
    /**
     * @return If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL
     * 
     */
    private @Nullable Boolean useIncomingQueryString;
    /**
     * @return If set to relative_url, takes the path entered for the redirectUrl and sets it in the response’s Location header. If set to copy_scheme_hostname, creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the redirectUrl. If this property is not included, or is set to none, then the redirect_url should be fully-qualified URL
     * 
     */
    private @Nullable String useRelativeUrl;

    private GetCloudletsEdgeRedirectorMatchRuleMatchRule() {}
    /**
     * @return If set to true, disables a rule so it is not evaluated against incoming requests.
     * 
     */
    public Optional<Boolean> disabled() {
        return Optional.ofNullable(this.disabled);
    }
    /**
     * @return The end time for this match (in seconds since the epoch)
     * 
     */
    public Optional<Integer> end() {
        return Optional.ofNullable(this.end);
    }
    /**
     * @return If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request
     * 
     */
    public Optional<String> matchUrl() {
        return Optional.ofNullable(this.matchUrl);
    }
    /**
     * @return Defines a set of match objects
     * 
     */
    public List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatch> matches() {
        return this.matches == null ? List.of() : this.matches;
    }
    /**
     * @return The name of the rule
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The URL Edge Redirector redirects the request to. If using use_relative_url, you can enter a path for the value
     * 
     */
    public String redirectUrl() {
        return this.redirectUrl;
    }
    /**
     * @return The start time for this match (in seconds since the epoch)
     * 
     */
    public Optional<Integer> start() {
        return Optional.ofNullable(this.start);
    }
    /**
     * @return The HTTP response status code (allowed values: 301, 302, 303, 307, 308)
     * 
     */
    public Integer statusCode() {
        return this.statusCode;
    }
    /**
     * @return The type of Cloudlet the rule is for
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL
     * 
     */
    public Optional<Boolean> useIncomingQueryString() {
        return Optional.ofNullable(this.useIncomingQueryString);
    }
    /**
     * @return If set to relative_url, takes the path entered for the redirectUrl and sets it in the response’s Location header. If set to copy_scheme_hostname, creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the redirectUrl. If this property is not included, or is set to none, then the redirect_url should be fully-qualified URL
     * 
     */
    public Optional<String> useRelativeUrl() {
        return Optional.ofNullable(this.useRelativeUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudletsEdgeRedirectorMatchRuleMatchRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean disabled;
        private @Nullable Integer end;
        private @Nullable String matchUrl;
        private @Nullable List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatch> matches;
        private @Nullable String name;
        private String redirectUrl;
        private @Nullable Integer start;
        private Integer statusCode;
        private String type;
        private @Nullable Boolean useIncomingQueryString;
        private @Nullable String useRelativeUrl;
        public Builder() {}
        public Builder(GetCloudletsEdgeRedirectorMatchRuleMatchRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disabled = defaults.disabled;
    	      this.end = defaults.end;
    	      this.matchUrl = defaults.matchUrl;
    	      this.matches = defaults.matches;
    	      this.name = defaults.name;
    	      this.redirectUrl = defaults.redirectUrl;
    	      this.start = defaults.start;
    	      this.statusCode = defaults.statusCode;
    	      this.type = defaults.type;
    	      this.useIncomingQueryString = defaults.useIncomingQueryString;
    	      this.useRelativeUrl = defaults.useRelativeUrl;
        }

        @CustomType.Setter
        public Builder disabled(@Nullable Boolean disabled) {

            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder end(@Nullable Integer end) {

            this.end = end;
            return this;
        }
        @CustomType.Setter
        public Builder matchUrl(@Nullable String matchUrl) {

            this.matchUrl = matchUrl;
            return this;
        }
        @CustomType.Setter
        public Builder matches(@Nullable List<GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatch> matches) {

            this.matches = matches;
            return this;
        }
        public Builder matches(GetCloudletsEdgeRedirectorMatchRuleMatchRuleMatch... matches) {
            return matches(List.of(matches));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder redirectUrl(String redirectUrl) {
            if (redirectUrl == null) {
              throw new MissingRequiredPropertyException("GetCloudletsEdgeRedirectorMatchRuleMatchRule", "redirectUrl");
            }
            this.redirectUrl = redirectUrl;
            return this;
        }
        @CustomType.Setter
        public Builder start(@Nullable Integer start) {

            this.start = start;
            return this;
        }
        @CustomType.Setter
        public Builder statusCode(Integer statusCode) {
            if (statusCode == null) {
              throw new MissingRequiredPropertyException("GetCloudletsEdgeRedirectorMatchRuleMatchRule", "statusCode");
            }
            this.statusCode = statusCode;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetCloudletsEdgeRedirectorMatchRuleMatchRule", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder useIncomingQueryString(@Nullable Boolean useIncomingQueryString) {

            this.useIncomingQueryString = useIncomingQueryString;
            return this;
        }
        @CustomType.Setter
        public Builder useRelativeUrl(@Nullable String useRelativeUrl) {

            this.useRelativeUrl = useRelativeUrl;
            return this;
        }
        public GetCloudletsEdgeRedirectorMatchRuleMatchRule build() {
            final var _resultValue = new GetCloudletsEdgeRedirectorMatchRuleMatchRule();
            _resultValue.disabled = disabled;
            _resultValue.end = end;
            _resultValue.matchUrl = matchUrl;
            _resultValue.matches = matches;
            _resultValue.name = name;
            _resultValue.redirectUrl = redirectUrl;
            _resultValue.start = start;
            _resultValue.statusCode = statusCode;
            _resultValue.type = type;
            _resultValue.useIncomingQueryString = useIncomingQueryString;
            _resultValue.useRelativeUrl = useRelativeUrl;
            return _resultValue;
        }
    }
}
