// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendImageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs Empty = new GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs();

    @Import(name="gravity")
    private @Nullable Output<String> gravity;

    public Optional<Output<String>> gravity() {
        return Optional.ofNullable(this.gravity);
    }

    @Import(name="gravityPriority")
    private @Nullable Output<String> gravityPriority;

    public Optional<Output<String>> gravityPriority() {
        return Optional.ofNullable(this.gravityPriority);
    }

    @Import(name="gravityPriorityVar")
    private @Nullable Output<String> gravityPriorityVar;

    public Optional<Output<String>> gravityPriorityVar() {
        return Optional.ofNullable(this.gravityPriorityVar);
    }

    @Import(name="gravityVar")
    private @Nullable Output<String> gravityVar;

    public Optional<Output<String>> gravityVar() {
        return Optional.ofNullable(this.gravityVar);
    }

    @Import(name="image", required=true)
    private Output<GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendImageArgs> image;

    public Output<GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendImageArgs> image() {
        return this.image;
    }

    @Import(name="preserveMinorDimension")
    private @Nullable Output<String> preserveMinorDimension;

    public Optional<Output<String>> preserveMinorDimension() {
        return Optional.ofNullable(this.preserveMinorDimension);
    }

    @Import(name="preserveMinorDimensionVar")
    private @Nullable Output<String> preserveMinorDimensionVar;

    public Optional<Output<String>> preserveMinorDimensionVar() {
        return Optional.ofNullable(this.preserveMinorDimensionVar);
    }

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs() {}

    private GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs(GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs $) {
        this.gravity = $.gravity;
        this.gravityPriority = $.gravityPriority;
        this.gravityPriorityVar = $.gravityPriorityVar;
        this.gravityVar = $.gravityVar;
        this.image = $.image;
        this.preserveMinorDimension = $.preserveMinorDimension;
        this.preserveMinorDimensionVar = $.preserveMinorDimensionVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs(Objects.requireNonNull(defaults));
        }

        public Builder gravity(@Nullable Output<String> gravity) {
            $.gravity = gravity;
            return this;
        }

        public Builder gravity(String gravity) {
            return gravity(Output.of(gravity));
        }

        public Builder gravityPriority(@Nullable Output<String> gravityPriority) {
            $.gravityPriority = gravityPriority;
            return this;
        }

        public Builder gravityPriority(String gravityPriority) {
            return gravityPriority(Output.of(gravityPriority));
        }

        public Builder gravityPriorityVar(@Nullable Output<String> gravityPriorityVar) {
            $.gravityPriorityVar = gravityPriorityVar;
            return this;
        }

        public Builder gravityPriorityVar(String gravityPriorityVar) {
            return gravityPriorityVar(Output.of(gravityPriorityVar));
        }

        public Builder gravityVar(@Nullable Output<String> gravityVar) {
            $.gravityVar = gravityVar;
            return this;
        }

        public Builder gravityVar(String gravityVar) {
            return gravityVar(Output.of(gravityVar));
        }

        public Builder image(Output<GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendImageArgs> image) {
            $.image = image;
            return this;
        }

        public Builder image(GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendImageArgs image) {
            return image(Output.of(image));
        }

        public Builder preserveMinorDimension(@Nullable Output<String> preserveMinorDimension) {
            $.preserveMinorDimension = preserveMinorDimension;
            return this;
        }

        public Builder preserveMinorDimension(String preserveMinorDimension) {
            return preserveMinorDimension(Output.of(preserveMinorDimension));
        }

        public Builder preserveMinorDimensionVar(@Nullable Output<String> preserveMinorDimensionVar) {
            $.preserveMinorDimensionVar = preserveMinorDimensionVar;
            return this;
        }

        public Builder preserveMinorDimensionVar(String preserveMinorDimensionVar) {
            return preserveMinorDimensionVar(Output.of(preserveMinorDimensionVar));
        }

        public GetImagingPolicyImagePolicyTransformationCompoundTransformationAppendArgs build() {
            $.image = Objects.requireNonNull($.image, "expected parameter 'image' to be non-null");
            return $;
        }
    }

}
