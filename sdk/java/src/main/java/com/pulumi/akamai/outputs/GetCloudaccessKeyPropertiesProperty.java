// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCloudaccessKeyPropertiesProperty {
    /**
     * @return Version of the access key.
     * 
     */
    private Integer accessKeyVersion;
    /**
     * @return Identifies the specific property version whose production status is either active or activating.
     * 
     */
    private Integer productionVersion;
    /**
     * @return The unique identifier Akamai assigned to the matching property.
     * 
     */
    private String propertyId;
    /**
     * @return Identifies the specific property name whose Origin Characteristics behavior uses the access key version.
     * 
     */
    private String propertyName;
    /**
     * @return Identifies the specific property version whose staging status is either active or activating.
     * 
     */
    private Integer stagingVersion;

    private GetCloudaccessKeyPropertiesProperty() {}
    /**
     * @return Version of the access key.
     * 
     */
    public Integer accessKeyVersion() {
        return this.accessKeyVersion;
    }
    /**
     * @return Identifies the specific property version whose production status is either active or activating.
     * 
     */
    public Integer productionVersion() {
        return this.productionVersion;
    }
    /**
     * @return The unique identifier Akamai assigned to the matching property.
     * 
     */
    public String propertyId() {
        return this.propertyId;
    }
    /**
     * @return Identifies the specific property name whose Origin Characteristics behavior uses the access key version.
     * 
     */
    public String propertyName() {
        return this.propertyName;
    }
    /**
     * @return Identifies the specific property version whose staging status is either active or activating.
     * 
     */
    public Integer stagingVersion() {
        return this.stagingVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudaccessKeyPropertiesProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer accessKeyVersion;
        private Integer productionVersion;
        private String propertyId;
        private String propertyName;
        private Integer stagingVersion;
        public Builder() {}
        public Builder(GetCloudaccessKeyPropertiesProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKeyVersion = defaults.accessKeyVersion;
    	      this.productionVersion = defaults.productionVersion;
    	      this.propertyId = defaults.propertyId;
    	      this.propertyName = defaults.propertyName;
    	      this.stagingVersion = defaults.stagingVersion;
        }

        @CustomType.Setter
        public Builder accessKeyVersion(Integer accessKeyVersion) {
            if (accessKeyVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudaccessKeyPropertiesProperty", "accessKeyVersion");
            }
            this.accessKeyVersion = accessKeyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder productionVersion(Integer productionVersion) {
            if (productionVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudaccessKeyPropertiesProperty", "productionVersion");
            }
            this.productionVersion = productionVersion;
            return this;
        }
        @CustomType.Setter
        public Builder propertyId(String propertyId) {
            if (propertyId == null) {
              throw new MissingRequiredPropertyException("GetCloudaccessKeyPropertiesProperty", "propertyId");
            }
            this.propertyId = propertyId;
            return this;
        }
        @CustomType.Setter
        public Builder propertyName(String propertyName) {
            if (propertyName == null) {
              throw new MissingRequiredPropertyException("GetCloudaccessKeyPropertiesProperty", "propertyName");
            }
            this.propertyName = propertyName;
            return this;
        }
        @CustomType.Setter
        public Builder stagingVersion(Integer stagingVersion) {
            if (stagingVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudaccessKeyPropertiesProperty", "stagingVersion");
            }
            this.stagingVersion = stagingVersion;
            return this;
        }
        public GetCloudaccessKeyPropertiesProperty build() {
            final var _resultValue = new GetCloudaccessKeyPropertiesProperty();
            _resultValue.accessKeyVersion = accessKeyVersion;
            _resultValue.productionVersion = productionVersion;
            _resultValue.propertyId = propertyId;
            _resultValue.propertyName = propertyName;
            _resultValue.stagingVersion = stagingVersion;
            return _resultValue;
        }
    }
}
