// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim();

    @Import(name="fuzz")
    private @Nullable String fuzz;

    public Optional<String> fuzz() {
        return Optional.ofNullable(this.fuzz);
    }

    @Import(name="fuzzVar")
    private @Nullable String fuzzVar;

    public Optional<String> fuzzVar() {
        return Optional.ofNullable(this.fuzzVar);
    }

    @Import(name="padding")
    private @Nullable String padding;

    public Optional<String> padding() {
        return Optional.ofNullable(this.padding);
    }

    @Import(name="paddingVar")
    private @Nullable String paddingVar;

    public Optional<String> paddingVar() {
        return Optional.ofNullable(this.paddingVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim $) {
        this.fuzz = $.fuzz;
        this.fuzzVar = $.fuzzVar;
        this.padding = $.padding;
        this.paddingVar = $.paddingVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim(Objects.requireNonNull(defaults));
        }

        public Builder fuzz(@Nullable String fuzz) {
            $.fuzz = fuzz;
            return this;
        }

        public Builder fuzzVar(@Nullable String fuzzVar) {
            $.fuzzVar = fuzzVar;
            return this;
        }

        public Builder padding(@Nullable String padding) {
            $.padding = padding;
            return this;
        }

        public Builder paddingVar(@Nullable String paddingVar) {
            $.paddingVar = paddingVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationPortraitIfOrientationDefaultTrim build() {
            return $;
        }
    }

}
