// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetCloudwrapperLocationsLocationTrafficType;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudwrapperLocationsLocation {
    private Integer locationId;
    private String locationName;
    private String multiCdnLocationId;
    private @Nullable List<GetCloudwrapperLocationsLocationTrafficType> trafficTypes;

    private GetCloudwrapperLocationsLocation() {}
    public Integer locationId() {
        return this.locationId;
    }
    public String locationName() {
        return this.locationName;
    }
    public String multiCdnLocationId() {
        return this.multiCdnLocationId;
    }
    public List<GetCloudwrapperLocationsLocationTrafficType> trafficTypes() {
        return this.trafficTypes == null ? List.of() : this.trafficTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudwrapperLocationsLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer locationId;
        private String locationName;
        private String multiCdnLocationId;
        private @Nullable List<GetCloudwrapperLocationsLocationTrafficType> trafficTypes;
        public Builder() {}
        public Builder(GetCloudwrapperLocationsLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.locationId = defaults.locationId;
    	      this.locationName = defaults.locationName;
    	      this.multiCdnLocationId = defaults.multiCdnLocationId;
    	      this.trafficTypes = defaults.trafficTypes;
        }

        @CustomType.Setter
        public Builder locationId(Integer locationId) {
            this.locationId = Objects.requireNonNull(locationId);
            return this;
        }
        @CustomType.Setter
        public Builder locationName(String locationName) {
            this.locationName = Objects.requireNonNull(locationName);
            return this;
        }
        @CustomType.Setter
        public Builder multiCdnLocationId(String multiCdnLocationId) {
            this.multiCdnLocationId = Objects.requireNonNull(multiCdnLocationId);
            return this;
        }
        @CustomType.Setter
        public Builder trafficTypes(@Nullable List<GetCloudwrapperLocationsLocationTrafficType> trafficTypes) {
            this.trafficTypes = trafficTypes;
            return this;
        }
        public Builder trafficTypes(GetCloudwrapperLocationsLocationTrafficType... trafficTypes) {
            return trafficTypes(List.of(trafficTypes));
        }
        public GetCloudwrapperLocationsLocation build() {
            final var o = new GetCloudwrapperLocationsLocation();
            o.locationId = locationId;
            o.locationName = locationName;
            o.multiCdnLocationId = multiCdnLocationId;
            o.trafficTypes = trafficTypes;
            return o;
        }
    }
}
