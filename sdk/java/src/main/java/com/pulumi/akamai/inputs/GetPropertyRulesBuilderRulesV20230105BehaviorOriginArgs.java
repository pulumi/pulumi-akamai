// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthorityArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230105BehaviorOriginNetStorageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs Empty = new GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs();

    /**
     * Specifies the hostname to use when forming a cache key.
     * 
     */
    @Import(name="cacheKeyHostname")
    private @Nullable Output<String> cacheKeyHostname;

    /**
     * @return Specifies the hostname to use when forming a cache key.
     * 
     */
    public Optional<Output<String>> cacheKeyHostname() {
        return Optional.ofNullable(this.cacheKeyHostname);
    }

    /**
     * Enables `gzip` compression for non-NetStorage origins.
     * 
     */
    @Import(name="compress")
    private @Nullable Output<Boolean> compress;

    /**
     * @return Enables `gzip` compression for non-NetStorage origins.
     * 
     */
    public Optional<Output<Boolean>> compress() {
        return Optional.ofNullable(this.compress);
    }

    /**
     * Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
     * 
     */
    @Import(name="customCertificateAuthorities")
    private @Nullable Output<List<GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthorityArgs>> customCertificateAuthorities;

    /**
     * @return Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
     * 
     */
    public Optional<Output<List<GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthorityArgs>>> customCertificateAuthorities() {
        return Optional.ofNullable(this.customCertificateAuthorities);
    }

    /**
     * Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
     * 
     */
    @Import(name="customCertificates")
    private @Nullable Output<List<GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateArgs>> customCertificates;

    /**
     * @return Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
     * 
     */
    public Optional<Output<List<GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateArgs>>> customCertificates() {
        return Optional.ofNullable(this.customCertificates);
    }

    /**
     * This specifies the name of the custom host header the edge server should pass to the origin.
     * 
     */
    @Import(name="customForwardHostHeader")
    private @Nullable Output<String> customForwardHostHeader;

    /**
     * @return This specifies the name of the custom host header the edge server should pass to the origin.
     * 
     */
    public Optional<Output<String>> customForwardHostHeader() {
        return Optional.ofNullable(this.customForwardHostHeader);
    }

    /**
     * Specifies values to look for in the origin certificate&#39;s `Subject Alternate Name` or `Common Name` fields. Specify `{{Origin Hostname}}` and `{{Forward Host Header}}` within the text in the order you want them to be evaluated. (Note that these two template items are not the same as in-line `variables`, which use the same curly-brace syntax.)
     * 
     */
    @Import(name="customValidCnValues")
    private @Nullable Output<List<String>> customValidCnValues;

    /**
     * @return Specifies values to look for in the origin certificate&#39;s `Subject Alternate Name` or `Common Name` fields. Specify `{{Origin Hostname}}` and `{{Forward Host Header}}` within the text in the order you want them to be evaluated. (Note that these two template items are not the same as in-line `variables`, which use the same curly-brace syntax.)
     * 
     */
    public Optional<Output<List<String>>> customValidCnValues() {
        return Optional.ofNullable(this.customValidCnValues);
    }

    /**
     * When enabled on non-NetStorage origins, allows you to send a custom header (the `trueClientIpHeader`) identifying the IP address of the immediate client connecting to the edge server. This may provide more useful information than the standard `X-Forward-For` header, which proxies may modify.
     * 
     */
    @Import(name="enableTrueClientIp")
    private @Nullable Output<Boolean> enableTrueClientIp;

    /**
     * @return When enabled on non-NetStorage origins, allows you to send a custom header (the `trueClientIpHeader`) identifying the IP address of the immediate client connecting to the edge server. This may provide more useful information than the standard `X-Forward-For` header, which proxies may modify.
     * 
     */
    public Optional<Output<Boolean>> enableTrueClientIp() {
        return Optional.ofNullable(this.enableTrueClientIp);
    }

    /**
     * When the `originType` is set to either `CUSTOMER` or `SAAS_DYNAMIC_ORIGIN`, this specifies which `Host` header to pass to the origin.
     * 
     */
    @Import(name="forwardHostHeader")
    private @Nullable Output<String> forwardHostHeader;

    /**
     * @return When the `originType` is set to either `CUSTOMER` or `SAAS_DYNAMIC_ORIGIN`, this specifies which `Host` header to pass to the origin.
     * 
     */
    public Optional<Output<String>> forwardHostHeader() {
        return Optional.ofNullable(this.forwardHostHeader);
    }

    /**
     * Specifies the hostname or IPv4 address of your origin server, from which edge servers can retrieve your content.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return Specifies the hostname or IPv4 address of your origin server, from which edge servers can retrieve your content.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * Specifies the port on your origin server to which edge servers should connect for HTTP requests, customarily `80`.
     * 
     */
    @Import(name="httpPort")
    private @Nullable Output<Integer> httpPort;

    /**
     * @return Specifies the port on your origin server to which edge servers should connect for HTTP requests, customarily `80`.
     * 
     */
    public Optional<Output<Integer>> httpPort() {
        return Optional.ofNullable(this.httpPort);
    }

    /**
     * Specifies the port on your origin server to which edge servers should connect for secure HTTPS requests, customarily `443`. This option only applies if the property is marked as secure. See `Secure property requirements` for guidance.
     * 
     */
    @Import(name="httpsPort")
    private @Nullable Output<Integer> httpsPort;

    /**
     * @return Specifies the port on your origin server to which edge servers should connect for secure HTTPS requests, customarily `443`. This option only applies if the property is marked as secure. See `Secure property requirements` for guidance.
     * 
     */
    public Optional<Output<Integer>> httpsPort() {
        return Optional.ofNullable(this.httpsPort);
    }

    /**
     * Specifies which IP version to use when getting content from the origin.
     * 
     */
    @Import(name="ipVersion")
    private @Nullable Output<String> ipVersion;

    /**
     * @return Specifies which IP version to use when getting content from the origin.
     * 
     */
    public Optional<Output<String>> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * This specifies the media&#39;s origin server.
     * 
     */
    @Import(name="mslorigin")
    private @Nullable Output<String> mslorigin;

    /**
     * @return This specifies the media&#39;s origin server.
     * 
     */
    public Optional<Output<String>> mslorigin() {
        return Optional.ofNullable(this.mslorigin);
    }

    /**
     * Specifies the details of the NetStorage server.
     * 
     */
    @Import(name="netStorage")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230105BehaviorOriginNetStorageArgs> netStorage;

    /**
     * @return Specifies the details of the NetStorage server.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230105BehaviorOriginNetStorageArgs>> netStorage() {
        return Optional.ofNullable(this.netStorage);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="originCertificate")
    private @Nullable Output<String> originCertificate;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> originCertificate() {
        return Optional.ofNullable(this.originCertificate);
    }

    /**
     * Specifies which certificate to trust.
     * 
     */
    @Import(name="originCertsToHonor")
    private @Nullable Output<String> originCertsToHonor;

    /**
     * @return Specifies which certificate to trust.
     * 
     */
    public Optional<Output<String>> originCertsToHonor() {
        return Optional.ofNullable(this.originCertsToHonor);
    }

    /**
     * Identifies the Edge Load Balancing origin. This needs to correspond to an `edgeLoadBalancingOrigin` behavior&#39;s `id` attribute within the same property.
     * 
     */
    @Import(name="originId")
    private @Nullable Output<String> originId;

    /**
     * @return Identifies the Edge Load Balancing origin. This needs to correspond to an `edgeLoadBalancingOrigin` behavior&#39;s `id` attribute within the same property.
     * 
     */
    public Optional<Output<String>> originId() {
        return Optional.ofNullable(this.originId);
    }

    /**
     * For non-NetStorage origins, enabling this adds a Server Name Indication (SNI) header in the SSL request sent to the origin, with the origin hostname as the value. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for more information. If you want to use TLS version 1.3 in your existing properties, enable this option. New properties have this enabled by default.
     * 
     */
    @Import(name="originSni")
    private @Nullable Output<Boolean> originSni;

    /**
     * @return For non-NetStorage origins, enabling this adds a Server Name Indication (SNI) header in the SSL request sent to the origin, with the origin hostname as the value. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for more information. If you want to use TLS version 1.3 in your existing properties, enable this option. New properties have this enabled by default.
     * 
     */
    public Optional<Output<Boolean>> originSni() {
        return Optional.ofNullable(this.originSni);
    }

    /**
     * Choose where your content is retrieved from.
     * 
     */
    @Import(name="originType")
    private @Nullable Output<String> originType;

    /**
     * @return Choose where your content is retrieved from.
     * 
     */
    public Optional<Output<String>> originType() {
        return Optional.ofNullable(this.originType);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="ports")
    private @Nullable Output<String> ports;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> ports() {
        return Optional.ofNullable(this.ports);
    }

    /**
     * Enabling this allows you to use a `CNAME chain` to determine the hostname for this SaaS dynamic origin.
     * 
     */
    @Import(name="saasCnameEnabled")
    private @Nullable Output<Boolean> saasCnameEnabled;

    /**
     * @return Enabling this allows you to use a `CNAME chain` to determine the hostname for this SaaS dynamic origin.
     * 
     */
    public Optional<Output<Boolean>> saasCnameEnabled() {
        return Optional.ofNullable(this.saasCnameEnabled);
    }

    /**
     * Specifies the desired number of hostnames to use in the `CNAME chain`, starting backwards from the edge server.
     * 
     */
    @Import(name="saasCnameLevel")
    private @Nullable Output<Integer> saasCnameLevel;

    /**
     * @return Specifies the desired number of hostnames to use in the `CNAME chain`, starting backwards from the edge server.
     * 
     */
    public Optional<Output<Integer>> saasCnameLevel() {
        return Optional.ofNullable(this.saasCnameLevel);
    }

    /**
     * Specifies the name of the cookie that identifies this SaaS dynamic origin.
     * 
     */
    @Import(name="saasCookie")
    private @Nullable Output<String> saasCookie;

    /**
     * @return Specifies the name of the cookie that identifies this SaaS dynamic origin.
     * 
     */
    public Optional<Output<String>> saasCookie() {
        return Optional.ofNullable(this.saasCookie);
    }

    /**
     * Specifies the name of the query parameter that identifies this SaaS dynamic origin.
     * 
     */
    @Import(name="saasQueryString")
    private @Nullable Output<String> saasQueryString;

    /**
     * @return Specifies the name of the query parameter that identifies this SaaS dynamic origin.
     * 
     */
    public Optional<Output<String>> saasQueryString() {
        return Optional.ofNullable(this.saasQueryString);
    }

    /**
     * Specifies the Perl-compatible regular expression match that identifies this SaaS dynamic origin.
     * 
     */
    @Import(name="saasRegex")
    private @Nullable Output<String> saasRegex;

    /**
     * @return Specifies the Perl-compatible regular expression match that identifies this SaaS dynamic origin.
     * 
     */
    public Optional<Output<String>> saasRegex() {
        return Optional.ofNullable(this.saasRegex);
    }

    /**
     * Specifies replacement text for what `saasRegex` matches.
     * 
     */
    @Import(name="saasReplace")
    private @Nullable Output<String> saasReplace;

    /**
     * @return Specifies replacement text for what `saasRegex` matches.
     * 
     */
    public Optional<Output<String>> saasReplace() {
        return Optional.ofNullable(this.saasReplace);
    }

    /**
     * Specifies the static part of the SaaS dynamic origin.
     * 
     */
    @Import(name="saasSuffix")
    private @Nullable Output<String> saasSuffix;

    /**
     * @return Specifies the static part of the SaaS dynamic origin.
     * 
     */
    public Optional<Output<String>> saasSuffix() {
        return Optional.ofNullable(this.saasSuffix);
    }

    /**
     * Specifies the part of the request that identifies this SaaS dynamic origin.
     * 
     */
    @Import(name="saasType")
    private @Nullable Output<String> saasType;

    /**
     * @return Specifies the part of the request that identifies this SaaS dynamic origin.
     * 
     */
    public Optional<Output<String>> saasType() {
        return Optional.ofNullable(this.saasType);
    }

    /**
     * Specifies the origin server&#39;s hostname, IPv4 address, or IPv6 address. Edge servers retrieve your content from this origin server.
     * 
     */
    @Import(name="secondHostname")
    private @Nullable Output<String> secondHostname;

    /**
     * @return Specifies the origin server&#39;s hostname, IPv4 address, or IPv6 address. Edge servers retrieve your content from this origin server.
     * 
     */
    public Optional<Output<String>> secondHostname() {
        return Optional.ofNullable(this.secondHostname);
    }

    /**
     * Available only for certain products. This specifies whether you want to use an additional origin server address.
     * 
     */
    @Import(name="secondHostnameEnabled")
    private @Nullable Output<Boolean> secondHostnameEnabled;

    /**
     * @return Available only for certain products. This specifies whether you want to use an additional origin server address.
     * 
     */
    public Optional<Output<Boolean>> secondHostnameEnabled() {
        return Optional.ofNullable(this.secondHostnameEnabled);
    }

    @Import(name="standardCertificateAuthorities")
    private @Nullable Output<List<String>> standardCertificateAuthorities;

    public Optional<Output<List<String>>> standardCertificateAuthorities() {
        return Optional.ofNullable(this.standardCertificateAuthorities);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * If a client sets the `True-Client-IP` header, the edge server allows it and passes the value to the origin. Otherwise the edge server removes it and sets the value itself.
     * 
     */
    @Import(name="trueClientIpClientSetting")
    private @Nullable Output<Boolean> trueClientIpClientSetting;

    /**
     * @return If a client sets the `True-Client-IP` header, the edge server allows it and passes the value to the origin. Otherwise the edge server removes it and sets the value itself.
     * 
     */
    public Optional<Output<Boolean>> trueClientIpClientSetting() {
        return Optional.ofNullable(this.trueClientIpClientSetting);
    }

    /**
     * This specifies the name of the field that identifies the end client&#39;s IP address, for example `True-Client-IP`.
     * 
     */
    @Import(name="trueClientIpHeader")
    private @Nullable Output<String> trueClientIpHeader;

    /**
     * @return This specifies the name of the field that identifies the end client&#39;s IP address, for example `True-Client-IP`.
     * 
     */
    public Optional<Output<String>> trueClientIpHeader() {
        return Optional.ofNullable(this.trueClientIpHeader);
    }

    /**
     * With a shared `hostname` such as provided by Amazon AWS, sets a unique cache key for your content.
     * 
     */
    @Import(name="useUniqueCacheKey")
    private @Nullable Output<Boolean> useUniqueCacheKey;

    /**
     * @return With a shared `hostname` such as provided by Amazon AWS, sets a unique cache key for your content.
     * 
     */
    public Optional<Output<Boolean>> useUniqueCacheKey() {
        return Optional.ofNullable(this.useUniqueCacheKey);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    /**
     * For non-NetStorage origins, maximize security by controlling which certificates edge servers should trust.
     * 
     */
    @Import(name="verificationMode")
    private @Nullable Output<String> verificationMode;

    /**
     * @return For non-NetStorage origins, maximize security by controlling which certificates edge servers should trust.
     * 
     */
    public Optional<Output<String>> verificationMode() {
        return Optional.ofNullable(this.verificationMode);
    }

    private GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs() {}

    private GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs(GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs $) {
        this.cacheKeyHostname = $.cacheKeyHostname;
        this.compress = $.compress;
        this.customCertificateAuthorities = $.customCertificateAuthorities;
        this.customCertificates = $.customCertificates;
        this.customForwardHostHeader = $.customForwardHostHeader;
        this.customValidCnValues = $.customValidCnValues;
        this.enableTrueClientIp = $.enableTrueClientIp;
        this.forwardHostHeader = $.forwardHostHeader;
        this.hostname = $.hostname;
        this.httpPort = $.httpPort;
        this.httpsPort = $.httpsPort;
        this.ipVersion = $.ipVersion;
        this.locked = $.locked;
        this.mslorigin = $.mslorigin;
        this.netStorage = $.netStorage;
        this.originCertificate = $.originCertificate;
        this.originCertsToHonor = $.originCertsToHonor;
        this.originId = $.originId;
        this.originSni = $.originSni;
        this.originType = $.originType;
        this.ports = $.ports;
        this.saasCnameEnabled = $.saasCnameEnabled;
        this.saasCnameLevel = $.saasCnameLevel;
        this.saasCookie = $.saasCookie;
        this.saasQueryString = $.saasQueryString;
        this.saasRegex = $.saasRegex;
        this.saasReplace = $.saasReplace;
        this.saasSuffix = $.saasSuffix;
        this.saasType = $.saasType;
        this.secondHostname = $.secondHostname;
        this.secondHostnameEnabled = $.secondHostnameEnabled;
        this.standardCertificateAuthorities = $.standardCertificateAuthorities;
        this.templateUuid = $.templateUuid;
        this.trueClientIpClientSetting = $.trueClientIpClientSetting;
        this.trueClientIpHeader = $.trueClientIpHeader;
        this.useUniqueCacheKey = $.useUniqueCacheKey;
        this.uuid = $.uuid;
        this.verificationMode = $.verificationMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cacheKeyHostname Specifies the hostname to use when forming a cache key.
         * 
         * @return builder
         * 
         */
        public Builder cacheKeyHostname(@Nullable Output<String> cacheKeyHostname) {
            $.cacheKeyHostname = cacheKeyHostname;
            return this;
        }

        /**
         * @param cacheKeyHostname Specifies the hostname to use when forming a cache key.
         * 
         * @return builder
         * 
         */
        public Builder cacheKeyHostname(String cacheKeyHostname) {
            return cacheKeyHostname(Output.of(cacheKeyHostname));
        }

        /**
         * @param compress Enables `gzip` compression for non-NetStorage origins.
         * 
         * @return builder
         * 
         */
        public Builder compress(@Nullable Output<Boolean> compress) {
            $.compress = compress;
            return this;
        }

        /**
         * @param compress Enables `gzip` compression for non-NetStorage origins.
         * 
         * @return builder
         * 
         */
        public Builder compress(Boolean compress) {
            return compress(Output.of(compress));
        }

        /**
         * @param customCertificateAuthorities Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
         * 
         * @return builder
         * 
         */
        public Builder customCertificateAuthorities(@Nullable Output<List<GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthorityArgs>> customCertificateAuthorities) {
            $.customCertificateAuthorities = customCertificateAuthorities;
            return this;
        }

        /**
         * @param customCertificateAuthorities Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
         * 
         * @return builder
         * 
         */
        public Builder customCertificateAuthorities(List<GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthorityArgs> customCertificateAuthorities) {
            return customCertificateAuthorities(Output.of(customCertificateAuthorities));
        }

        /**
         * @param customCertificateAuthorities Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
         * 
         * @return builder
         * 
         */
        public Builder customCertificateAuthorities(GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateAuthorityArgs... customCertificateAuthorities) {
            return customCertificateAuthorities(List.of(customCertificateAuthorities));
        }

        /**
         * @param customCertificates Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
         * 
         * @return builder
         * 
         */
        public Builder customCertificates(@Nullable Output<List<GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateArgs>> customCertificates) {
            $.customCertificates = customCertificates;
            return this;
        }

        /**
         * @param customCertificates Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
         * 
         * @return builder
         * 
         */
        public Builder customCertificates(List<GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateArgs> customCertificates) {
            return customCertificates(Output.of(customCertificates));
        }

        /**
         * @param customCertificates Specifies an array of certification objects. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for details on this object&#39;s requirements.
         * 
         * @return builder
         * 
         */
        public Builder customCertificates(GetPropertyRulesBuilderRulesV20230105BehaviorOriginCustomCertificateArgs... customCertificates) {
            return customCertificates(List.of(customCertificates));
        }

        /**
         * @param customForwardHostHeader This specifies the name of the custom host header the edge server should pass to the origin.
         * 
         * @return builder
         * 
         */
        public Builder customForwardHostHeader(@Nullable Output<String> customForwardHostHeader) {
            $.customForwardHostHeader = customForwardHostHeader;
            return this;
        }

        /**
         * @param customForwardHostHeader This specifies the name of the custom host header the edge server should pass to the origin.
         * 
         * @return builder
         * 
         */
        public Builder customForwardHostHeader(String customForwardHostHeader) {
            return customForwardHostHeader(Output.of(customForwardHostHeader));
        }

        /**
         * @param customValidCnValues Specifies values to look for in the origin certificate&#39;s `Subject Alternate Name` or `Common Name` fields. Specify `{{Origin Hostname}}` and `{{Forward Host Header}}` within the text in the order you want them to be evaluated. (Note that these two template items are not the same as in-line `variables`, which use the same curly-brace syntax.)
         * 
         * @return builder
         * 
         */
        public Builder customValidCnValues(@Nullable Output<List<String>> customValidCnValues) {
            $.customValidCnValues = customValidCnValues;
            return this;
        }

        /**
         * @param customValidCnValues Specifies values to look for in the origin certificate&#39;s `Subject Alternate Name` or `Common Name` fields. Specify `{{Origin Hostname}}` and `{{Forward Host Header}}` within the text in the order you want them to be evaluated. (Note that these two template items are not the same as in-line `variables`, which use the same curly-brace syntax.)
         * 
         * @return builder
         * 
         */
        public Builder customValidCnValues(List<String> customValidCnValues) {
            return customValidCnValues(Output.of(customValidCnValues));
        }

        /**
         * @param customValidCnValues Specifies values to look for in the origin certificate&#39;s `Subject Alternate Name` or `Common Name` fields. Specify `{{Origin Hostname}}` and `{{Forward Host Header}}` within the text in the order you want them to be evaluated. (Note that these two template items are not the same as in-line `variables`, which use the same curly-brace syntax.)
         * 
         * @return builder
         * 
         */
        public Builder customValidCnValues(String... customValidCnValues) {
            return customValidCnValues(List.of(customValidCnValues));
        }

        /**
         * @param enableTrueClientIp When enabled on non-NetStorage origins, allows you to send a custom header (the `trueClientIpHeader`) identifying the IP address of the immediate client connecting to the edge server. This may provide more useful information than the standard `X-Forward-For` header, which proxies may modify.
         * 
         * @return builder
         * 
         */
        public Builder enableTrueClientIp(@Nullable Output<Boolean> enableTrueClientIp) {
            $.enableTrueClientIp = enableTrueClientIp;
            return this;
        }

        /**
         * @param enableTrueClientIp When enabled on non-NetStorage origins, allows you to send a custom header (the `trueClientIpHeader`) identifying the IP address of the immediate client connecting to the edge server. This may provide more useful information than the standard `X-Forward-For` header, which proxies may modify.
         * 
         * @return builder
         * 
         */
        public Builder enableTrueClientIp(Boolean enableTrueClientIp) {
            return enableTrueClientIp(Output.of(enableTrueClientIp));
        }

        /**
         * @param forwardHostHeader When the `originType` is set to either `CUSTOMER` or `SAAS_DYNAMIC_ORIGIN`, this specifies which `Host` header to pass to the origin.
         * 
         * @return builder
         * 
         */
        public Builder forwardHostHeader(@Nullable Output<String> forwardHostHeader) {
            $.forwardHostHeader = forwardHostHeader;
            return this;
        }

        /**
         * @param forwardHostHeader When the `originType` is set to either `CUSTOMER` or `SAAS_DYNAMIC_ORIGIN`, this specifies which `Host` header to pass to the origin.
         * 
         * @return builder
         * 
         */
        public Builder forwardHostHeader(String forwardHostHeader) {
            return forwardHostHeader(Output.of(forwardHostHeader));
        }

        /**
         * @param hostname Specifies the hostname or IPv4 address of your origin server, from which edge servers can retrieve your content.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Specifies the hostname or IPv4 address of your origin server, from which edge servers can retrieve your content.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param httpPort Specifies the port on your origin server to which edge servers should connect for HTTP requests, customarily `80`.
         * 
         * @return builder
         * 
         */
        public Builder httpPort(@Nullable Output<Integer> httpPort) {
            $.httpPort = httpPort;
            return this;
        }

        /**
         * @param httpPort Specifies the port on your origin server to which edge servers should connect for HTTP requests, customarily `80`.
         * 
         * @return builder
         * 
         */
        public Builder httpPort(Integer httpPort) {
            return httpPort(Output.of(httpPort));
        }

        /**
         * @param httpsPort Specifies the port on your origin server to which edge servers should connect for secure HTTPS requests, customarily `443`. This option only applies if the property is marked as secure. See `Secure property requirements` for guidance.
         * 
         * @return builder
         * 
         */
        public Builder httpsPort(@Nullable Output<Integer> httpsPort) {
            $.httpsPort = httpsPort;
            return this;
        }

        /**
         * @param httpsPort Specifies the port on your origin server to which edge servers should connect for secure HTTPS requests, customarily `443`. This option only applies if the property is marked as secure. See `Secure property requirements` for guidance.
         * 
         * @return builder
         * 
         */
        public Builder httpsPort(Integer httpsPort) {
            return httpsPort(Output.of(httpsPort));
        }

        /**
         * @param ipVersion Specifies which IP version to use when getting content from the origin.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(@Nullable Output<String> ipVersion) {
            $.ipVersion = ipVersion;
            return this;
        }

        /**
         * @param ipVersion Specifies which IP version to use when getting content from the origin.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(String ipVersion) {
            return ipVersion(Output.of(ipVersion));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param mslorigin This specifies the media&#39;s origin server.
         * 
         * @return builder
         * 
         */
        public Builder mslorigin(@Nullable Output<String> mslorigin) {
            $.mslorigin = mslorigin;
            return this;
        }

        /**
         * @param mslorigin This specifies the media&#39;s origin server.
         * 
         * @return builder
         * 
         */
        public Builder mslorigin(String mslorigin) {
            return mslorigin(Output.of(mslorigin));
        }

        /**
         * @param netStorage Specifies the details of the NetStorage server.
         * 
         * @return builder
         * 
         */
        public Builder netStorage(@Nullable Output<GetPropertyRulesBuilderRulesV20230105BehaviorOriginNetStorageArgs> netStorage) {
            $.netStorage = netStorage;
            return this;
        }

        /**
         * @param netStorage Specifies the details of the NetStorage server.
         * 
         * @return builder
         * 
         */
        public Builder netStorage(GetPropertyRulesBuilderRulesV20230105BehaviorOriginNetStorageArgs netStorage) {
            return netStorage(Output.of(netStorage));
        }

        /**
         * @param originCertificate This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder originCertificate(@Nullable Output<String> originCertificate) {
            $.originCertificate = originCertificate;
            return this;
        }

        /**
         * @param originCertificate This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder originCertificate(String originCertificate) {
            return originCertificate(Output.of(originCertificate));
        }

        /**
         * @param originCertsToHonor Specifies which certificate to trust.
         * 
         * @return builder
         * 
         */
        public Builder originCertsToHonor(@Nullable Output<String> originCertsToHonor) {
            $.originCertsToHonor = originCertsToHonor;
            return this;
        }

        /**
         * @param originCertsToHonor Specifies which certificate to trust.
         * 
         * @return builder
         * 
         */
        public Builder originCertsToHonor(String originCertsToHonor) {
            return originCertsToHonor(Output.of(originCertsToHonor));
        }

        /**
         * @param originId Identifies the Edge Load Balancing origin. This needs to correspond to an `edgeLoadBalancingOrigin` behavior&#39;s `id` attribute within the same property.
         * 
         * @return builder
         * 
         */
        public Builder originId(@Nullable Output<String> originId) {
            $.originId = originId;
            return this;
        }

        /**
         * @param originId Identifies the Edge Load Balancing origin. This needs to correspond to an `edgeLoadBalancingOrigin` behavior&#39;s `id` attribute within the same property.
         * 
         * @return builder
         * 
         */
        public Builder originId(String originId) {
            return originId(Output.of(originId));
        }

        /**
         * @param originSni For non-NetStorage origins, enabling this adds a Server Name Indication (SNI) header in the SSL request sent to the origin, with the origin hostname as the value. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for more information. If you want to use TLS version 1.3 in your existing properties, enable this option. New properties have this enabled by default.
         * 
         * @return builder
         * 
         */
        public Builder originSni(@Nullable Output<Boolean> originSni) {
            $.originSni = originSni;
            return this;
        }

        /**
         * @param originSni For non-NetStorage origins, enabling this adds a Server Name Indication (SNI) header in the SSL request sent to the origin, with the origin hostname as the value. See the `verification settings in the Origin Server behavior` or contact your Akamai representative for more information. If you want to use TLS version 1.3 in your existing properties, enable this option. New properties have this enabled by default.
         * 
         * @return builder
         * 
         */
        public Builder originSni(Boolean originSni) {
            return originSni(Output.of(originSni));
        }

        /**
         * @param originType Choose where your content is retrieved from.
         * 
         * @return builder
         * 
         */
        public Builder originType(@Nullable Output<String> originType) {
            $.originType = originType;
            return this;
        }

        /**
         * @param originType Choose where your content is retrieved from.
         * 
         * @return builder
         * 
         */
        public Builder originType(String originType) {
            return originType(Output.of(originType));
        }

        /**
         * @param ports This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder ports(@Nullable Output<String> ports) {
            $.ports = ports;
            return this;
        }

        /**
         * @param ports This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder ports(String ports) {
            return ports(Output.of(ports));
        }

        /**
         * @param saasCnameEnabled Enabling this allows you to use a `CNAME chain` to determine the hostname for this SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasCnameEnabled(@Nullable Output<Boolean> saasCnameEnabled) {
            $.saasCnameEnabled = saasCnameEnabled;
            return this;
        }

        /**
         * @param saasCnameEnabled Enabling this allows you to use a `CNAME chain` to determine the hostname for this SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasCnameEnabled(Boolean saasCnameEnabled) {
            return saasCnameEnabled(Output.of(saasCnameEnabled));
        }

        /**
         * @param saasCnameLevel Specifies the desired number of hostnames to use in the `CNAME chain`, starting backwards from the edge server.
         * 
         * @return builder
         * 
         */
        public Builder saasCnameLevel(@Nullable Output<Integer> saasCnameLevel) {
            $.saasCnameLevel = saasCnameLevel;
            return this;
        }

        /**
         * @param saasCnameLevel Specifies the desired number of hostnames to use in the `CNAME chain`, starting backwards from the edge server.
         * 
         * @return builder
         * 
         */
        public Builder saasCnameLevel(Integer saasCnameLevel) {
            return saasCnameLevel(Output.of(saasCnameLevel));
        }

        /**
         * @param saasCookie Specifies the name of the cookie that identifies this SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasCookie(@Nullable Output<String> saasCookie) {
            $.saasCookie = saasCookie;
            return this;
        }

        /**
         * @param saasCookie Specifies the name of the cookie that identifies this SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasCookie(String saasCookie) {
            return saasCookie(Output.of(saasCookie));
        }

        /**
         * @param saasQueryString Specifies the name of the query parameter that identifies this SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasQueryString(@Nullable Output<String> saasQueryString) {
            $.saasQueryString = saasQueryString;
            return this;
        }

        /**
         * @param saasQueryString Specifies the name of the query parameter that identifies this SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasQueryString(String saasQueryString) {
            return saasQueryString(Output.of(saasQueryString));
        }

        /**
         * @param saasRegex Specifies the Perl-compatible regular expression match that identifies this SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasRegex(@Nullable Output<String> saasRegex) {
            $.saasRegex = saasRegex;
            return this;
        }

        /**
         * @param saasRegex Specifies the Perl-compatible regular expression match that identifies this SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasRegex(String saasRegex) {
            return saasRegex(Output.of(saasRegex));
        }

        /**
         * @param saasReplace Specifies replacement text for what `saasRegex` matches.
         * 
         * @return builder
         * 
         */
        public Builder saasReplace(@Nullable Output<String> saasReplace) {
            $.saasReplace = saasReplace;
            return this;
        }

        /**
         * @param saasReplace Specifies replacement text for what `saasRegex` matches.
         * 
         * @return builder
         * 
         */
        public Builder saasReplace(String saasReplace) {
            return saasReplace(Output.of(saasReplace));
        }

        /**
         * @param saasSuffix Specifies the static part of the SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasSuffix(@Nullable Output<String> saasSuffix) {
            $.saasSuffix = saasSuffix;
            return this;
        }

        /**
         * @param saasSuffix Specifies the static part of the SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasSuffix(String saasSuffix) {
            return saasSuffix(Output.of(saasSuffix));
        }

        /**
         * @param saasType Specifies the part of the request that identifies this SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasType(@Nullable Output<String> saasType) {
            $.saasType = saasType;
            return this;
        }

        /**
         * @param saasType Specifies the part of the request that identifies this SaaS dynamic origin.
         * 
         * @return builder
         * 
         */
        public Builder saasType(String saasType) {
            return saasType(Output.of(saasType));
        }

        /**
         * @param secondHostname Specifies the origin server&#39;s hostname, IPv4 address, or IPv6 address. Edge servers retrieve your content from this origin server.
         * 
         * @return builder
         * 
         */
        public Builder secondHostname(@Nullable Output<String> secondHostname) {
            $.secondHostname = secondHostname;
            return this;
        }

        /**
         * @param secondHostname Specifies the origin server&#39;s hostname, IPv4 address, or IPv6 address. Edge servers retrieve your content from this origin server.
         * 
         * @return builder
         * 
         */
        public Builder secondHostname(String secondHostname) {
            return secondHostname(Output.of(secondHostname));
        }

        /**
         * @param secondHostnameEnabled Available only for certain products. This specifies whether you want to use an additional origin server address.
         * 
         * @return builder
         * 
         */
        public Builder secondHostnameEnabled(@Nullable Output<Boolean> secondHostnameEnabled) {
            $.secondHostnameEnabled = secondHostnameEnabled;
            return this;
        }

        /**
         * @param secondHostnameEnabled Available only for certain products. This specifies whether you want to use an additional origin server address.
         * 
         * @return builder
         * 
         */
        public Builder secondHostnameEnabled(Boolean secondHostnameEnabled) {
            return secondHostnameEnabled(Output.of(secondHostnameEnabled));
        }

        public Builder standardCertificateAuthorities(@Nullable Output<List<String>> standardCertificateAuthorities) {
            $.standardCertificateAuthorities = standardCertificateAuthorities;
            return this;
        }

        public Builder standardCertificateAuthorities(List<String> standardCertificateAuthorities) {
            return standardCertificateAuthorities(Output.of(standardCertificateAuthorities));
        }

        public Builder standardCertificateAuthorities(String... standardCertificateAuthorities) {
            return standardCertificateAuthorities(List.of(standardCertificateAuthorities));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param trueClientIpClientSetting If a client sets the `True-Client-IP` header, the edge server allows it and passes the value to the origin. Otherwise the edge server removes it and sets the value itself.
         * 
         * @return builder
         * 
         */
        public Builder trueClientIpClientSetting(@Nullable Output<Boolean> trueClientIpClientSetting) {
            $.trueClientIpClientSetting = trueClientIpClientSetting;
            return this;
        }

        /**
         * @param trueClientIpClientSetting If a client sets the `True-Client-IP` header, the edge server allows it and passes the value to the origin. Otherwise the edge server removes it and sets the value itself.
         * 
         * @return builder
         * 
         */
        public Builder trueClientIpClientSetting(Boolean trueClientIpClientSetting) {
            return trueClientIpClientSetting(Output.of(trueClientIpClientSetting));
        }

        /**
         * @param trueClientIpHeader This specifies the name of the field that identifies the end client&#39;s IP address, for example `True-Client-IP`.
         * 
         * @return builder
         * 
         */
        public Builder trueClientIpHeader(@Nullable Output<String> trueClientIpHeader) {
            $.trueClientIpHeader = trueClientIpHeader;
            return this;
        }

        /**
         * @param trueClientIpHeader This specifies the name of the field that identifies the end client&#39;s IP address, for example `True-Client-IP`.
         * 
         * @return builder
         * 
         */
        public Builder trueClientIpHeader(String trueClientIpHeader) {
            return trueClientIpHeader(Output.of(trueClientIpHeader));
        }

        /**
         * @param useUniqueCacheKey With a shared `hostname` such as provided by Amazon AWS, sets a unique cache key for your content.
         * 
         * @return builder
         * 
         */
        public Builder useUniqueCacheKey(@Nullable Output<Boolean> useUniqueCacheKey) {
            $.useUniqueCacheKey = useUniqueCacheKey;
            return this;
        }

        /**
         * @param useUniqueCacheKey With a shared `hostname` such as provided by Amazon AWS, sets a unique cache key for your content.
         * 
         * @return builder
         * 
         */
        public Builder useUniqueCacheKey(Boolean useUniqueCacheKey) {
            return useUniqueCacheKey(Output.of(useUniqueCacheKey));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        /**
         * @param verificationMode For non-NetStorage origins, maximize security by controlling which certificates edge servers should trust.
         * 
         * @return builder
         * 
         */
        public Builder verificationMode(@Nullable Output<String> verificationMode) {
            $.verificationMode = verificationMode;
            return this;
        }

        /**
         * @param verificationMode For non-NetStorage origins, maximize security by controlling which certificates edge servers should trust.
         * 
         * @return builder
         * 
         */
        public Builder verificationMode(String verificationMode) {
            return verificationMode(Output.of(verificationMode));
        }

        public GetPropertyRulesBuilderRulesV20230105BehaviorOriginArgs build() {
            return $;
        }
    }

}
