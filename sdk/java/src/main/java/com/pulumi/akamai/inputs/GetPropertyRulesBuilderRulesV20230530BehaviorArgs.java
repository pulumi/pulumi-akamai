// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAdScalerCircuitBreakerArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAccelerationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveImageCompressionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAdvancedArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAggregatedReportingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAkamaizerArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAkamaizerTagArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAllHttpInCacheHierarchyArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAllowCloudletsOriginsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAllowDeleteArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsCacheKeySharingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsDowngradeArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAllowOptionsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAllowPatchArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAllowPostArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAllowPutArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAllowTransferEncodingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAltSvcHeaderArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorAutoDomainValidationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorBaseDirectoryArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorBossBeaconingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorBreadcrumbsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorBreakConnectionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorBrotliArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCacheErrorArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCacheIdArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyIgnoreCaseArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyQueryParamsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyRewriteArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCachePostArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCacheRedirectArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCacheTagArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCacheTagVisibleArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCachingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCentralAuthorizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorChaseRedirectsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorClientCharacteristicsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCloudInterconnectsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperAdvancedArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCommonMediaClientDataArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorConditionalOriginArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorConstructResponseArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsAmdArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsDdArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLargeFileArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLiveArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdVodArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorContentPrePositionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorContentTargetingProtectionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCorsSupportArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCpCodeArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorCustomBehaviorArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDatastreamArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDcpArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthHmacTransformationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthRegexTransformationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthSubstringTransformationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthVariableExtractorArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDcpDefaultAuthzGroupsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDcpDevRelationsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuthArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDeliveryReceiptArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDenyAccessArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDenyDirectFailoverAccessArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicCacheIdArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicHeaderArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDnsAsyncRefreshArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDnsPrefreshArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDowngradeProtocolArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDownloadCompleteMarkerArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDownloadNotificationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDownstreamCacheArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationOverrideArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorDynamicWebContentArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEcmsBulkUploadArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEcmsDatabaseArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEcmsDatasetArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEcmsObjectKeyArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEdgeConnectArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingAdvancedArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenterArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingOriginArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEdgeOriginAuthorizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirectorArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEdgeScapeArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEdgeSideIncludesArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEdgeWorkerArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEnhancedAkamaiProtocolArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEnhancedProxyDetectionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorEpdForwardHeaderEnrichmentArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorFailActionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorFailoverBotManagerFeatureCompatibilityArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorFastInvalidateArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlusArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorForwardRewriteArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorG2oheaderArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorGlobalRequestNumberArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorGraphqlCachingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorGzipResponseArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorHdDataAdvancedArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorHealthDetectionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorHsafEipBindingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorHttp2Args;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorHttp3Args;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurityArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorHttpToHttpsUpgradeArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorImOverrideArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorImageManagerArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorIncludeArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorInstantArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorInstantConfigArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationAdvancedArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorLogCustomArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorMPulseArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorManifestPersonalizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorManifestReroutingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorManualServerPushArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationQuicOptoutArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorMediaClientArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorMediaFileRetrievalOptimizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorMediaOriginFailoverArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorMetadataCachingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorMobileSdkPerformanceArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingRequestHeaderArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingResponseHeaderArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingRequestHeaderArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingResponseHeaderArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorModifyViaHeaderArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorOriginArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsWsdArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryMethodArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryPolicyArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorOriginIpAclArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorPersistentClientConnectionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorPersistentConnectionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorPersonallyIdentifiableInformationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorPhasedReleaseArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorPreconnectArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorPredictiveContentDeliveryArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorPredictivePrefetchingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorPrefetchArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorPrefetchableArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorPrefreshCacheArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorQualityArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorQuicBetaArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRandomSeekArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRapidArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorReadTimeoutArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRealTimeReportingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRealUserMonitoringArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRedirectArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRedirectplusArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRefererCheckingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRemoveQueryParameterArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRemoveVaryArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorReportArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRequestControlArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRequestTypeMarkerArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerExtendedCompatibilityArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorResponseCodeArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorResponseCookieArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRestrictObjectCachingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorReturnCacheStatusArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRewriteUrlArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorRumCustomArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSaasDefinitionsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudClientArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderHostHeaderArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSavePostDcaProcessingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorScheduleInvalidationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorScriptManagementArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtectionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaOptimizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaStreamingPrefetchArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSetVariableArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSimulateErrorCodeArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSiteShieldArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationOverrideArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorStrictHeaderParsingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSubCustomerArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorSureRouteArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorTcpOptimizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorTeaLeafArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionAdvancedArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionCustomizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorTimeoutArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorUidConfigurationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorValidateEntityTagArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenForDcpArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorVerifyTokenAuthorizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomWithEdgeWorkersArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoStandaloneArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorWatermarkingArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewallArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorWebSocketsArgs;
import com.pulumi.akamai.inputs.GetPropertyRulesBuilderRulesV20230530BehaviorWebdavArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20230530BehaviorArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20230530BehaviorArgs Empty = new GetPropertyRulesBuilderRulesV20230530BehaviorArgs();

    /**
     * This behavior works with `manifestRerouting` to provide the scale and reliability of Akamai network while simultaneously allowing third party partners to modify the requested media content with value-added features. The `adScalerCircuitBreaker` behavior specifies the fallback action in case the technology partner encounters errors and can&#39;t modify the requested media object. This behavior cannot be used in includes.
     * 
     */
    @Import(name="adScalerCircuitBreaker")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdScalerCircuitBreakerArgs> adScalerCircuitBreaker;

    /**
     * @return This behavior works with `manifestRerouting` to provide the scale and reliability of Akamai network while simultaneously allowing third party partners to modify the requested media content with value-added features. The `adScalerCircuitBreaker` behavior specifies the fallback action in case the technology partner encounters errors and can&#39;t modify the requested media object. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdScalerCircuitBreakerArgs>> adScalerCircuitBreaker() {
        return Optional.ofNullable(this.adScalerCircuitBreaker);
    }

    /**
     * Adaptive Acceleration uses HTTP/2 server push functionality with Ion properties to pre-position content and improve the performance of HTML page loading based on real user monitoring (RUM) timing data. It also helps browsers to preconnect to content that’s likely needed for upcoming requests. To use this behavior, make sure you enable the `http2` behavior. Use the `Adaptive Acceleration API` to report on the set of assets this feature optimizes. This behavior cannot be used in includes.
     * 
     */
    @Import(name="adaptiveAcceleration")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAccelerationArgs> adaptiveAcceleration;

    /**
     * @return Adaptive Acceleration uses HTTP/2 server push functionality with Ion properties to pre-position content and improve the performance of HTML page loading based on real user monitoring (RUM) timing data. It also helps browsers to preconnect to content that’s likely needed for upcoming requests. To use this behavior, make sure you enable the `http2` behavior. Use the `Adaptive Acceleration API` to report on the set of assets this feature optimizes. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAccelerationArgs>> adaptiveAcceleration() {
        return Optional.ofNullable(this.adaptiveAcceleration);
    }

    /**
     * The Adaptive Image Compression feature compresses JPEG images depending on the requesting network&#39;s performance, thus improving response time. The behavior specifies three performance tiers based on round-trip tests: 1 for excellent, 2 for good, and 3 for poor. It assigns separate performance criteria for mobile (cellular) and non-mobile networks, which the `compressMobile` and `compressStandard` options enable independently. This behavior can be used in includes.
     * 
     */
    @Import(name="adaptiveImageCompression")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveImageCompressionArgs> adaptiveImageCompression;

    /**
     * @return The Adaptive Image Compression feature compresses JPEG images depending on the requesting network&#39;s performance, thus improving response time. The behavior specifies three performance tiers based on round-trip tests: 1 for excellent, 2 for good, and 3 for poor. It assigns separate performance criteria for mobile (cellular) and non-mobile networks, which the `compressMobile` and `compressStandard` options enable independently. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveImageCompressionArgs>> adaptiveImageCompression() {
        return Optional.ofNullable(this.adaptiveImageCompression);
    }

    /**
     * This specifies Akamai XML metadata. It can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    @Import(name="advanced")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdvancedArgs> advanced;

    /**
     * @return This specifies Akamai XML metadata. It can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdvancedArgs>> advanced() {
        return Optional.ofNullable(this.advanced);
    }

    /**
     * Configure a custom report that collects traffic data. The data is based on one to four variables, such as `sum`, `average`, `min`, and `max`. These aggregation attributes help compile traffic data summaries. This behavior cannot be used in includes.
     * 
     */
    @Import(name="aggregatedReporting")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAggregatedReportingArgs> aggregatedReporting;

    /**
     * @return Configure a custom report that collects traffic data. The data is based on one to four variables, such as `sum`, `average`, `min`, and `max`. These aggregation attributes help compile traffic data summaries. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAggregatedReportingArgs>> aggregatedReporting() {
        return Optional.ofNullable(this.aggregatedReporting);
    }

    /**
     * This allows you to run regular expression substitutions over web pages. To apply this behavior, you need to match on a `contentType`. Contact Akamai Professional Services for help configuring the Akamaizer. See also the `akamaizerTag` behavior. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="akamaizer")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAkamaizerArgs> akamaizer;

    /**
     * @return This allows you to run regular expression substitutions over web pages. To apply this behavior, you need to match on a `contentType`. Contact Akamai Professional Services for help configuring the Akamaizer. See also the `akamaizerTag` behavior. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAkamaizerArgs>> akamaizer() {
        return Optional.ofNullable(this.akamaizer);
    }

    /**
     * This specifies HTML tags and replacement rules for hostnames used in conjunction with the `akamaizer` behavior. Contact Akamai Professional Services for help configuring the Akamaizer. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="akamaizerTag")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAkamaizerTagArgs> akamaizerTag;

    /**
     * @return This specifies HTML tags and replacement rules for hostnames used in conjunction with the `akamaizer` behavior. Contact Akamai Professional Services for help configuring the Akamaizer. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAkamaizerTagArgs>> akamaizerTag() {
        return Optional.ofNullable(this.akamaizerTag);
    }

    /**
     * Allow all HTTP request methods to be used for the edge&#39;s parent servers, useful to implement features such as `Site Shield`, `SureRoute`, and Tiered Distribution. (See the `siteShield`, `sureRoute`, and `tieredDistribution` behaviors.) This behavior can be used in includes.
     * 
     */
    @Import(name="allHttpInCacheHierarchy")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllHttpInCacheHierarchyArgs> allHttpInCacheHierarchy;

    /**
     * @return Allow all HTTP request methods to be used for the edge&#39;s parent servers, useful to implement features such as `Site Shield`, `SureRoute`, and Tiered Distribution. (See the `siteShield`, `sureRoute`, and `tieredDistribution` behaviors.) This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllHttpInCacheHierarchyArgs>> allHttpInCacheHierarchy() {
        return Optional.ofNullable(this.allHttpInCacheHierarchy);
    }

    /**
     * Allows Cloudlets Origins to determine the criteria, separately from the Property Manager, under which alternate `origin` definitions are assigned. This behavior cannot be used in includes.
     * 
     */
    @Import(name="allowCloudletsOrigins")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowCloudletsOriginsArgs> allowCloudletsOrigins;

    /**
     * @return Allows Cloudlets Origins to determine the criteria, separately from the Property Manager, under which alternate `origin` definitions are assigned. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowCloudletsOriginsArgs>> allowCloudletsOrigins() {
        return Optional.ofNullable(this.allowCloudletsOrigins);
    }

    /**
     * Allow HTTP requests using the DELETE method. By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any DELETE requests pass to the origin. See also the `allowOptions`, `allowPatch`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
     * 
     */
    @Import(name="allowDelete")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowDeleteArgs> allowDelete;

    /**
     * @return Allow HTTP requests using the DELETE method. By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any DELETE requests pass to the origin. See also the `allowOptions`, `allowPatch`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowDeleteArgs>> allowDelete() {
        return Optional.ofNullable(this.allowDelete);
    }

    /**
     * HTTPS cache key sharing allows HTTP requests to be served from an HTTPS cache. This behavior can be used in includes.
     * 
     */
    @Import(name="allowHttpsCacheKeySharing")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsCacheKeySharingArgs> allowHttpsCacheKeySharing;

    /**
     * @return HTTPS cache key sharing allows HTTP requests to be served from an HTTPS cache. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsCacheKeySharingArgs>> allowHttpsCacheKeySharing() {
        return Optional.ofNullable(this.allowHttpsCacheKeySharing);
    }

    /**
     * Passes HTTPS requests to origin as HTTP. This is useful when incorporating Standard TLS or Akamai&#39;s shared certificate delivery security with an origin that serves HTTP traffic. This behavior can be used in includes.
     * 
     */
    @Import(name="allowHttpsDowngrade")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsDowngradeArgs> allowHttpsDowngrade;

    /**
     * @return Passes HTTPS requests to origin as HTTP. This is useful when incorporating Standard TLS or Akamai&#39;s shared certificate delivery security with an origin that serves HTTP traffic. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsDowngradeArgs>> allowHttpsDowngrade() {
        return Optional.ofNullable(this.allowHttpsDowngrade);
    }

    /**
     * GET, HEAD, and OPTIONS requests are allowed by default. All other HTTP methods result in a 501 error. For full support of Cross-Origin Resource Sharing (CORS), you need to allow requests that use the OPTIONS method. If you&#39;re using the `corsSupport` behavior, do not disable OPTIONS requests. The response to an OPTIONS request is not cached, so the request always goes through the Akamai network to your origin, unless you use the `constructResponse` behavior to send responses directly from the Akamai network. See also the `allowDelete`, `allowPatch`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
     * 
     */
    @Import(name="allowOptions")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowOptionsArgs> allowOptions;

    /**
     * @return GET, HEAD, and OPTIONS requests are allowed by default. All other HTTP methods result in a 501 error. For full support of Cross-Origin Resource Sharing (CORS), you need to allow requests that use the OPTIONS method. If you&#39;re using the `corsSupport` behavior, do not disable OPTIONS requests. The response to an OPTIONS request is not cached, so the request always goes through the Akamai network to your origin, unless you use the `constructResponse` behavior to send responses directly from the Akamai network. See also the `allowDelete`, `allowPatch`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowOptionsArgs>> allowOptions() {
        return Optional.ofNullable(this.allowOptions);
    }

    /**
     * Allow HTTP requests using the PATCH method. By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any PATCH requests pass to the origin. See also the `allowDelete`, `allowOptions`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
     * 
     */
    @Import(name="allowPatch")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowPatchArgs> allowPatch;

    /**
     * @return Allow HTTP requests using the PATCH method. By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any PATCH requests pass to the origin. See also the `allowDelete`, `allowOptions`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowPatchArgs>> allowPatch() {
        return Optional.ofNullable(this.allowPatch);
    }

    /**
     * Allow HTTP requests using the POST method. By default, GET, HEAD, and OPTIONS requests are allowed, and POST requests are denied with 403 error. All other methods result in a 501 error. See also the `allowDelete`, `allowOptions`, `allowPatch`, and `allowPut` behaviors. This behavior can be used in includes.
     * 
     */
    @Import(name="allowPost")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowPostArgs> allowPost;

    /**
     * @return Allow HTTP requests using the POST method. By default, GET, HEAD, and OPTIONS requests are allowed, and POST requests are denied with 403 error. All other methods result in a 501 error. See also the `allowDelete`, `allowOptions`, `allowPatch`, and `allowPut` behaviors. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowPostArgs>> allowPost() {
        return Optional.ofNullable(this.allowPost);
    }

    /**
     * Allow HTTP requests using the PUT method.  By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any PUT requests pass to the origin. See also the `allowDelete`, `allowOptions`, `allowPatch`, and `allowPost` behaviors. This behavior can be used in includes.
     * 
     */
    @Import(name="allowPut")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowPutArgs> allowPut;

    /**
     * @return Allow HTTP requests using the PUT method.  By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any PUT requests pass to the origin. See also the `allowDelete`, `allowOptions`, `allowPatch`, and `allowPost` behaviors. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowPutArgs>> allowPut() {
        return Optional.ofNullable(this.allowPut);
    }

    /**
     * Controls whether to allow or deny Chunked Transfer Encoding (CTE) requests to pass to your origin. If your origin supports CTE, you should enable this behavior. This behavior also protects against a known issue when pairing `http2` and `webdav` behaviors within the same rule tree, in which case it&#39;s required. This behavior can be used in includes.
     * 
     */
    @Import(name="allowTransferEncoding")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowTransferEncodingArgs> allowTransferEncoding;

    /**
     * @return Controls whether to allow or deny Chunked Transfer Encoding (CTE) requests to pass to your origin. If your origin supports CTE, you should enable this behavior. This behavior also protects against a known issue when pairing `http2` and `webdav` behaviors within the same rule tree, in which case it&#39;s required. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowTransferEncodingArgs>> allowTransferEncoding() {
        return Optional.ofNullable(this.allowTransferEncoding);
    }

    /**
     * Sets the maximum age value for the Alternative Services (`Alt-Svc`) header. This behavior can be used in includes.
     * 
     */
    @Import(name="altSvcHeader")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAltSvcHeaderArgs> altSvcHeader;

    /**
     * @return Sets the maximum age value for the Alternative Services (`Alt-Svc`) header. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAltSvcHeaderArgs>> altSvcHeader() {
        return Optional.ofNullable(this.altSvcHeader);
    }

    /**
     * Enables the API Prioritization Cloudlet, which maintains continuity in user experience by serving an alternate static response when load is too high. You can configure rules using either the Cloudlets Policy Manager application or the `Cloudlets API`. Use this feature serve static API content, such as fallback JSON data.  To serve non-API HTML content, use the `visitorPrioritization` behavior. This behavior can be used in includes.
     * 
     */
    @Import(name="apiPrioritization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationArgs> apiPrioritization;

    /**
     * @return Enables the API Prioritization Cloudlet, which maintains continuity in user experience by serving an alternate static response when load is too high. You can configure rules using either the Cloudlets Policy Manager application or the `Cloudlets API`. Use this feature serve static API content, such as fallback JSON data.  To serve non-API HTML content, use the `visitorPrioritization` behavior. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationArgs>> apiPrioritization() {
        return Optional.ofNullable(this.apiPrioritization);
    }

    /**
     * Enables the Application Load Balancer Cloudlet, which automates load balancing based on configurable criteria. To configure this behavior, use either the Cloudlets Policy Manager or the `Cloudlets API` to set up a policy. This behavior cannot be used in includes.
     * 
     */
    @Import(name="applicationLoadBalancer")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerArgs> applicationLoadBalancer;

    /**
     * @return Enables the Application Load Balancer Cloudlet, which automates load balancing based on configurable criteria. To configure this behavior, use either the Cloudlets Policy Manager or the `Cloudlets API` to set up a policy. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerArgs>> applicationLoadBalancer() {
        return Optional.ofNullable(this.applicationLoadBalancer);
    }

    /**
     * Allows you to divide your users into different segments based on a persistent cookie. You can configure rules using either the Cloudlets Policy Manager application or the `Cloudlets API`. This behavior cannot be used in includes.
     * 
     */
    @Import(name="audienceSegmentation")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentationArgs> audienceSegmentation;

    /**
     * @return Allows you to divide your users into different segments based on a persistent cookie. You can configure rules using either the Cloudlets Policy Manager application or the `Cloudlets API`. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentationArgs>> audienceSegmentation() {
        return Optional.ofNullable(this.audienceSegmentation);
    }

    /**
     * This behavior allows standard TLS domain validated certificates to renew automatically. Apply it after using the `Certificate Provisioning System` to request a certificate for a hostname.  To provision certificates programmatically, see the `Certificate Provisioning System API`. This behavior can be used in includes.
     * 
     */
    @Import(name="autoDomainValidation")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAutoDomainValidationArgs> autoDomainValidation;

    /**
     * @return This behavior allows standard TLS domain validated certificates to renew automatically. Apply it after using the `Certificate Provisioning System` to request a certificate for a hostname.  To provision certificates programmatically, see the `Certificate Provisioning System API`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorAutoDomainValidationArgs>> autoDomainValidation() {
        return Optional.ofNullable(this.autoDomainValidation);
    }

    /**
     * Prefix URLs sent to the origin with a base path. This behavior can be used in includes.
     * 
     */
    @Import(name="baseDirectory")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorBaseDirectoryArgs> baseDirectory;

    /**
     * @return Prefix URLs sent to the origin with a base path. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorBaseDirectoryArgs>> baseDirectory() {
        return Optional.ofNullable(this.baseDirectory);
    }

    /**
     * Triggers diagnostic data beacons for use with BOSS, Akamai&#39;s monitoring and diagnostics system. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="bossBeaconing")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorBossBeaconingArgs> bossBeaconing;

    /**
     * @return Triggers diagnostic data beacons for use with BOSS, Akamai&#39;s monitoring and diagnostics system. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorBossBeaconingArgs>> bossBeaconing() {
        return Optional.ofNullable(this.bossBeaconing);
    }

    /**
     * Provides per-HTTP transaction visibility into a request for content, regardless of how deep the request goes into the Akamai platform. The `Akamai-Request-BC` response header includes various data, such as network health and the location in the Akamai network used to serve content, which simplifies log review for troubleshooting. This behavior can be used in includes.
     * 
     */
    @Import(name="breadcrumbs")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorBreadcrumbsArgs> breadcrumbs;

    /**
     * @return Provides per-HTTP transaction visibility into a request for content, regardless of how deep the request goes into the Akamai platform. The `Akamai-Request-BC` response header includes various data, such as network health and the location in the Akamai network used to serve content, which simplifies log review for troubleshooting. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorBreadcrumbsArgs>> breadcrumbs() {
        return Optional.ofNullable(this.breadcrumbs);
    }

    /**
     * This behavior simulates an origin connection problem, typically to test an accompanying `failAction` policy. This behavior can be used in includes.
     * 
     */
    @Import(name="breakConnection")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorBreakConnectionArgs> breakConnection;

    /**
     * @return This behavior simulates an origin connection problem, typically to test an accompanying `failAction` policy. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorBreakConnectionArgs>> breakConnection() {
        return Optional.ofNullable(this.breakConnection);
    }

    /**
     * Accesses Brotli-compressed assets from your origin and caches them on edge servers. This doesn&#39;t compress resources within the content delivery network in real time. You need to set up Brotli compression separately on your origin. If a requesting client doesn&#39;t support Brotli, edge servers deliver non-Brotli resources. This behavior can be used in includes.
     * 
     */
    @Import(name="brotli")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorBrotliArgs> brotli;

    /**
     * @return Accesses Brotli-compressed assets from your origin and caches them on edge servers. This doesn&#39;t compress resources within the content delivery network in real time. You need to set up Brotli compression separately on your origin. If a requesting client doesn&#39;t support Brotli, edge servers deliver non-Brotli resources. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorBrotliArgs>> brotli() {
        return Optional.ofNullable(this.brotli);
    }

    /**
     * Caches the origin&#39;s error responses to decrease server load. Applies for 10 seconds by default to the following HTTP codes: `204`, `305`, `404`, `405`, `501`, `502`, `503`, `504`, and `505`. This behavior can be used in includes.
     * 
     */
    @Import(name="cacheError")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheErrorArgs> cacheError;

    /**
     * @return Caches the origin&#39;s error responses to decrease server load. Applies for 10 seconds by default to the following HTTP codes: `204`, `305`, `404`, `405`, `501`, `502`, `503`, `504`, and `505`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheErrorArgs>> cacheError() {
        return Optional.ofNullable(this.cacheError);
    }

    /**
     * Controls which query parameters, headers, and cookies are included in or excluded from the cache key identifier. This behavior can be used in includes.
     * 
     */
    @Import(name="cacheId")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheIdArgs> cacheId;

    /**
     * @return Controls which query parameters, headers, and cookies are included in or excluded from the cache key identifier. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheIdArgs>> cacheId() {
        return Optional.ofNullable(this.cacheId);
    }

    /**
     * By default, cache keys are generated under the assumption that path and filename components are case-sensitive, so that `File.html` and `file.html` use separate cache keys. Enabling this behavior forces URL components whose case varies to resolve to the same cache key. Enable this behavior if your origin server is already case-insensitive, such as those based on Microsoft IIS. This behavior can be used in includes.
     * 
     */
    @Import(name="cacheKeyIgnoreCase")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyIgnoreCaseArgs> cacheKeyIgnoreCase;

    /**
     * @return By default, cache keys are generated under the assumption that path and filename components are case-sensitive, so that `File.html` and `file.html` use separate cache keys. Enabling this behavior forces URL components whose case varies to resolve to the same cache key. Enable this behavior if your origin server is already case-insensitive, such as those based on Microsoft IIS. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyIgnoreCaseArgs>> cacheKeyIgnoreCase() {
        return Optional.ofNullable(this.cacheKeyIgnoreCase);
    }

    /**
     * By default, cache keys are formed as URLs with full query strings. This behavior allows you to consolidate cached objects based on specified sets of query parameters. This behavior can be used in includes.
     * 
     */
    @Import(name="cacheKeyQueryParams")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyQueryParamsArgs> cacheKeyQueryParams;

    /**
     * @return By default, cache keys are formed as URLs with full query strings. This behavior allows you to consolidate cached objects based on specified sets of query parameters. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyQueryParamsArgs>> cacheKeyQueryParams() {
        return Optional.ofNullable(this.cacheKeyQueryParams);
    }

    /**
     * This behavior rewrites a default cache key&#39;s path. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="cacheKeyRewrite")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyRewriteArgs> cacheKeyRewrite;

    /**
     * @return This behavior rewrites a default cache key&#39;s path. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyRewriteArgs>> cacheKeyRewrite() {
        return Optional.ofNullable(this.cacheKeyRewrite);
    }

    /**
     * By default, POST requests are passed to the origin. This behavior overrides the default, and allows you to cache POST responses. This behavior can be used in includes.
     * 
     */
    @Import(name="cachePost")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCachePostArgs> cachePost;

    /**
     * @return By default, POST requests are passed to the origin. This behavior overrides the default, and allows you to cache POST responses. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCachePostArgs>> cachePost() {
        return Optional.ofNullable(this.cachePost);
    }

    /**
     * Controls the caching of HTTP 302 and 307 temporary redirects. By default, Akamai edge servers don&#39;t cache them. Enabling this behavior instructs edge servers to allow these redirects to be cached the same as HTTP 200 responses. This behavior can be used in includes.
     * 
     */
    @Import(name="cacheRedirect")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheRedirectArgs> cacheRedirect;

    /**
     * @return Controls the caching of HTTP 302 and 307 temporary redirects. By default, Akamai edge servers don&#39;t cache them. Enabling this behavior instructs edge servers to allow these redirects to be cached the same as HTTP 200 responses. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheRedirectArgs>> cacheRedirect() {
        return Optional.ofNullable(this.cacheRedirect);
    }

    /**
     * This adds a cache tag to the requested object. With cache tags, you can flexibly fast purge tagged segments of your cached content. You can either define these tags with an `Edge-Cache-Tag` header at the origin server level, or use this behavior to directly add a cache tag to the object as the edge server caches it. The `cacheTag` behavior can only take a single value, including a variable. If you want to specify more tags for an object, add a few instances of this behavior to your configuration. This behavior can be used in includes.
     * 
     */
    @Import(name="cacheTag")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheTagArgs> cacheTag;

    /**
     * @return This adds a cache tag to the requested object. With cache tags, you can flexibly fast purge tagged segments of your cached content. You can either define these tags with an `Edge-Cache-Tag` header at the origin server level, or use this behavior to directly add a cache tag to the object as the edge server caches it. The `cacheTag` behavior can only take a single value, including a variable. If you want to specify more tags for an object, add a few instances of this behavior to your configuration. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheTagArgs>> cacheTag() {
        return Optional.ofNullable(this.cacheTag);
    }

    /**
     * Cache tags are comma-separated string values you define within an `Edge-Cache-Tag` header. You can use them to flexibly fast purge tagged segments of your cached content. You can either define these headers at the origin server level, or use the `modifyOutgoingResponseHeader` behavior to configure them at the edge.  Apply this behavior to confirm you&#39;re deploying the intended set of cache tags to your content. This behavior can be used in includes.
     * 
     */
    @Import(name="cacheTagVisible")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheTagVisibleArgs> cacheTagVisible;

    /**
     * @return Cache tags are comma-separated string values you define within an `Edge-Cache-Tag` header. You can use them to flexibly fast purge tagged segments of your cached content. You can either define these headers at the origin server level, or use the `modifyOutgoingResponseHeader` behavior to configure them at the edge.  Apply this behavior to confirm you&#39;re deploying the intended set of cache tags to your content. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheTagVisibleArgs>> cacheTagVisible() {
        return Optional.ofNullable(this.cacheTagVisible);
    }

    /**
     * Control content caching on edge servers: whether or not to cache, whether to honor the origin&#39;s caching headers, and for how long to cache.  Note that any `NO_STORE` or `BYPASS_CACHE` HTTP headers set on the origin&#39;s content override this behavior. For more details on how caching works in Property Manager, see the `Learn about caching` section in the guide. This behavior can be used in includes.
     * 
     */
    @Import(name="caching")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCachingArgs> caching;

    /**
     * @return Control content caching on edge servers: whether or not to cache, whether to honor the origin&#39;s caching headers, and for how long to cache.  Note that any `NO_STORE` or `BYPASS_CACHE` HTTP headers set on the origin&#39;s content override this behavior. For more details on how caching works in Property Manager, see the `Learn about caching` section in the guide. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCachingArgs>> caching() {
        return Optional.ofNullable(this.caching);
    }

    /**
     * Forward client requests to the origin server for authorization, along with optional `Set-Cookie` headers, useful when you need to maintain tight access control. The edge server forwards an `If-Modified-Since` header, to which the origin needs to respond with a `304` (Not-Modified) HTTP status when authorization succeeds. If so, the edge server responds to the client with the cached object, since it does not need to be re-acquired from the origin. This behavior can be used in includes.
     * 
     */
    @Import(name="centralAuthorization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCentralAuthorizationArgs> centralAuthorization;

    /**
     * @return Forward client requests to the origin server for authorization, along with optional `Set-Cookie` headers, useful when you need to maintain tight access control. The edge server forwards an `If-Modified-Since` header, to which the origin needs to respond with a `304` (Not-Modified) HTTP status when authorization succeeds. If so, the edge server responds to the client with the cached object, since it does not need to be re-acquired from the origin. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCentralAuthorizationArgs>> centralAuthorization() {
        return Optional.ofNullable(this.centralAuthorization);
    }

    /**
     * Controls whether the edge server chases any redirects served from the origin. This behavior can be used in includes.
     * 
     */
    @Import(name="chaseRedirects")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorChaseRedirectsArgs> chaseRedirects;

    /**
     * @return Controls whether the edge server chases any redirects served from the origin. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorChaseRedirectsArgs>> chaseRedirects() {
        return Optional.ofNullable(this.chaseRedirects);
    }

    /**
     * Specifies characteristics of the client ecosystem. Akamai uses this information to optimize your metadata configuration, which may result in better end-user performance. This behavior can be used in includes.
     * 
     */
    @Import(name="clientCharacteristics")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorClientCharacteristicsArgs> clientCharacteristics;

    /**
     * @return Specifies characteristics of the client ecosystem. Akamai uses this information to optimize your metadata configuration, which may result in better end-user performance. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorClientCharacteristicsArgs>> clientCharacteristics() {
        return Optional.ofNullable(this.clientCharacteristics);
    }

    /**
     * Cloud Interconnects forwards traffic from edge servers to your cloud origin through Private Network Interconnects (PNIs), helping to reduce the egress costs at the origin. Supports origins hosted by Google Cloud Provider (GCP). This behavior cannot be used in includes.
     * 
     */
    @Import(name="cloudInterconnects")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCloudInterconnectsArgs> cloudInterconnects;

    /**
     * @return Cloud Interconnects forwards traffic from edge servers to your cloud origin through Private Network Interconnects (PNIs), helping to reduce the egress costs at the origin. Supports origins hosted by Google Cloud Provider (GCP). This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCloudInterconnectsArgs>> cloudInterconnects() {
        return Optional.ofNullable(this.cloudInterconnects);
    }

    /**
     * `Cloud Wrapper` maximizes origin offload for large libraries of video, game, and software downloads by optimizing data caches in regions nearest to your origin. You can&#39;t use this behavior in conjunction with `sureRoute` or `tieredDistribution`. This behavior cannot be used in includes.
     * 
     */
    @Import(name="cloudWrapper")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperArgs> cloudWrapper;

    /**
     * @return `Cloud Wrapper` maximizes origin offload for large libraries of video, game, and software downloads by optimizing data caches in regions nearest to your origin. You can&#39;t use this behavior in conjunction with `sureRoute` or `tieredDistribution`. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperArgs>> cloudWrapper() {
        return Optional.ofNullable(this.cloudWrapper);
    }

    /**
     * Your account representative uses this behavior to implement a customized failover configuration on your behalf. Use Cloud Wrapper Advanced with an enabled `cloudWrapper` behavior in the same rule. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    @Import(name="cloudWrapperAdvanced")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperAdvancedArgs> cloudWrapperAdvanced;

    /**
     * @return Your account representative uses this behavior to implement a customized failover configuration on your behalf. Use Cloud Wrapper Advanced with an enabled `cloudWrapper` behavior in the same rule. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperAdvancedArgs>> cloudWrapperAdvanced() {
        return Optional.ofNullable(this.cloudWrapperAdvanced);
    }

    /**
     * Use this behavior to send expanded playback information as CMCD metadata in requests from a media player. Edge servers may use this metadata for segment prefetching to optimize your content&#39;s delivery, or for logging. For more details and additional property requirements, see the `Adaptive Media Delivery` documentation. This behavior can be used in includes.
     * 
     */
    @Import(name="commonMediaClientData")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCommonMediaClientDataArgs> commonMediaClientData;

    /**
     * @return Use this behavior to send expanded playback information as CMCD metadata in requests from a media player. Edge servers may use this metadata for segment prefetching to optimize your content&#39;s delivery, or for logging. For more details and additional property requirements, see the `Adaptive Media Delivery` documentation. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCommonMediaClientDataArgs>> commonMediaClientData() {
        return Optional.ofNullable(this.commonMediaClientData);
    }

    /**
     * This behavior cannot be used in includes.
     * 
     */
    @Import(name="conditionalOrigin")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorConditionalOriginArgs> conditionalOrigin;

    /**
     * @return This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorConditionalOriginArgs>> conditionalOrigin() {
        return Optional.ofNullable(this.conditionalOrigin);
    }

    /**
     * This behavior constructs an HTTP response, complete with HTTP status code and body, to serve from the edge independently of your origin. For example, you might want to send a customized response if the URL doesn&#39;t point to an object on the origin server, or if the end user is not authorized to view the requested content. You can use it with all request methods you allow for your property, including POST. For more details, see the `allowOptions`, `allowPatch`, `allowPost`, `allowPut`, and `allowDelete` behaviors. This behavior can be used in includes.
     * 
     */
    @Import(name="constructResponse")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorConstructResponseArgs> constructResponse;

    /**
     * @return This behavior constructs an HTTP response, complete with HTTP status code and body, to serve from the edge independently of your origin. For example, you might want to send a customized response if the URL doesn&#39;t point to an object on the origin server, or if the end user is not authorized to view the requested content. You can use it with all request methods you allow for your property, including POST. For more details, see the `allowOptions`, `allowPatch`, `allowPost`, `allowPut`, and `allowDelete` behaviors. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorConstructResponseArgs>> constructResponse() {
        return Optional.ofNullable(this.constructResponse);
    }

    /**
     * Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    @Import(name="contentCharacteristics")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsArgs> contentCharacteristics;

    /**
     * @return Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsArgs>> contentCharacteristics() {
        return Optional.ofNullable(this.contentCharacteristics);
    }

    /**
     * Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    @Import(name="contentCharacteristicsAmd")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsAmdArgs> contentCharacteristicsAmd;

    /**
     * @return Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsAmdArgs>> contentCharacteristicsAmd() {
        return Optional.ofNullable(this.contentCharacteristicsAmd);
    }

    /**
     * Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    @Import(name="contentCharacteristicsDd")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsDdArgs> contentCharacteristicsDd;

    /**
     * @return Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsDdArgs>> contentCharacteristicsDd() {
        return Optional.ofNullable(this.contentCharacteristicsDd);
    }

    /**
     * Specifies characteristics of the delivered content, specifically targeted to delivering large files. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    @Import(name="contentCharacteristicsWsdLargeFile")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLargeFileArgs> contentCharacteristicsWsdLargeFile;

    /**
     * @return Specifies characteristics of the delivered content, specifically targeted to delivering large files. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLargeFileArgs>> contentCharacteristicsWsdLargeFile() {
        return Optional.ofNullable(this.contentCharacteristicsWsdLargeFile);
    }

    /**
     * Specifies characteristics of the delivered content, specifically targeted to delivering live video. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    @Import(name="contentCharacteristicsWsdLive")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLiveArgs> contentCharacteristicsWsdLive;

    /**
     * @return Specifies characteristics of the delivered content, specifically targeted to delivering live video. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLiveArgs>> contentCharacteristicsWsdLive() {
        return Optional.ofNullable(this.contentCharacteristicsWsdLive);
    }

    /**
     * Specifies characteristics of the delivered content, specifically targeted to delivering on-demand video. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    @Import(name="contentCharacteristicsWsdVod")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdVodArgs> contentCharacteristicsWsdVod;

    /**
     * @return Specifies characteristics of the delivered content, specifically targeted to delivering on-demand video. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdVodArgs>> contentCharacteristicsWsdVod() {
        return Optional.ofNullable(this.contentCharacteristicsWsdVod);
    }

    /**
     * Content Preposition. This behavior can be used in includes.
     * 
     */
    @Import(name="contentPrePosition")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentPrePositionArgs> contentPrePosition;

    /**
     * @return Content Preposition. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentPrePositionArgs>> contentPrePosition() {
        return Optional.ofNullable(this.contentPrePosition);
    }

    /**
     * Content Targeting is based on `EdgeScape`, Akamai&#39;s location-based access control system.  You can use it to allow or deny access to a set of geographic regions or IP addresses. This behavior can be used in includes.
     * 
     */
    @Import(name="contentTargetingProtection")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentTargetingProtectionArgs> contentTargetingProtection;

    /**
     * @return Content Targeting is based on `EdgeScape`, Akamai&#39;s location-based access control system.  You can use it to allow or deny access to a set of geographic regions or IP addresses. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentTargetingProtectionArgs>> contentTargetingProtection() {
        return Optional.ofNullable(this.contentTargetingProtection);
    }

    /**
     * Cross-origin resource sharing (CORS) allows web pages in one domain to access restricted resources from your domain. Specify external origin hostnames, methods, and headers that you want to accept via HTTP response headers. Full support of CORS requires allowing requests that use the OPTIONS method. See `allowOptions`. This behavior can be used in includes.
     * 
     */
    @Import(name="corsSupport")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCorsSupportArgs> corsSupport;

    /**
     * @return Cross-origin resource sharing (CORS) allows web pages in one domain to access restricted resources from your domain. Specify external origin hostnames, methods, and headers that you want to accept via HTTP response headers. Full support of CORS requires allowing requests that use the OPTIONS method. See `allowOptions`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCorsSupportArgs>> corsSupport() {
        return Optional.ofNullable(this.corsSupport);
    }

    /**
     * Content Provider Codes (CP codes) allow you to distinguish various reporting and billing traffic segments, and you need them to access properties. You receive an initial CP code when purchasing Akamai, and you can run the `Create a new CP code` operation to generate more. This behavior applies any valid CP code, either as required as a default at the top of the rule tree, or subsequently to override the default. For a CP code to be valid, it needs to be assigned the same contract and product as the property, and the group needs access to it.  For available values, run the `List CP codes` operation. This behavior can be used in includes.
     * 
     */
    @Import(name="cpCode")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCpCodeArgs> cpCode;

    /**
     * @return Content Provider Codes (CP codes) allow you to distinguish various reporting and billing traffic segments, and you need them to access properties. You receive an initial CP code when purchasing Akamai, and you can run the `Create a new CP code` operation to generate more. This behavior applies any valid CP code, either as required as a default at the top of the rule tree, or subsequently to override the default. For a CP code to be valid, it needs to be assigned the same contract and product as the property, and the group needs access to it.  For available values, run the `List CP codes` operation. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCpCodeArgs>> cpCode() {
        return Optional.ofNullable(this.cpCode);
    }

    /**
     * Allows you to insert a customized XML metadata behavior into any property&#39;s rule tree.  Talk to your Akamai representative to implement the customized behavior. Once it&#39;s ready, run PAPI&#39;s `List custom behaviors` operation, then apply the relevant `behaviorId` value from the response within the current `customBehavior`. See `Custom behaviors and overrides` for guidance on custom metadata behaviors. This behavior can be used in includes.
     * 
     */
    @Import(name="customBehavior")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCustomBehaviorArgs> customBehavior;

    /**
     * @return Allows you to insert a customized XML metadata behavior into any property&#39;s rule tree.  Talk to your Akamai representative to implement the customized behavior. Once it&#39;s ready, run PAPI&#39;s `List custom behaviors` operation, then apply the relevant `behaviorId` value from the response within the current `customBehavior`. See `Custom behaviors and overrides` for guidance on custom metadata behaviors. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorCustomBehaviorArgs>> customBehavior() {
        return Optional.ofNullable(this.customBehavior);
    }

    /**
     * The `DataStream` reporting service provides real-time logs on application activity, including aggregated metrics on complete request and response cycles and origin response times.  Apply this behavior to report on this set of traffic.  Use the `DataStream API` to aggregate the data. This behavior cannot be used in includes.
     * 
     */
    @Import(name="datastream")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDatastreamArgs> datastream;

    /**
     * @return The `DataStream` reporting service provides real-time logs on application activity, including aggregated metrics on complete request and response cycles and origin response times.  Apply this behavior to report on this set of traffic.  Use the `DataStream API` to aggregate the data. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDatastreamArgs>> datastream() {
        return Optional.ofNullable(this.datastream);
    }

    /**
     * The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. (The `IoT Edge Connect API` allows programmatic access.) This behavior allows you to select previously reserved namespaces and set the protocols for users to publish and receive messages within these namespaces.  Use the `verifyJsonWebTokenForDcp` behavior to control access. This behavior cannot be used in includes.
     * 
     */
    @Import(name="dcp")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpArgs> dcp;

    /**
     * @return The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. (The `IoT Edge Connect API` allows programmatic access.) This behavior allows you to select previously reserved namespaces and set the protocols for users to publish and receive messages within these namespaces.  Use the `verifyJsonWebTokenForDcp` behavior to control access. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpArgs>> dcp() {
        return Optional.ofNullable(this.dcp);
    }

    /**
     * The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then generates a hash value based on the selected algorithm, for use in authenticating the client request. This behavior cannot be used in includes.
     * 
     */
    @Import(name="dcpAuthHmacTransformation")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthHmacTransformationArgs> dcpAuthHmacTransformation;

    /**
     * @return The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then generates a hash value based on the selected algorithm, for use in authenticating the client request. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthHmacTransformationArgs>> dcpAuthHmacTransformation() {
        return Optional.ofNullable(this.dcpAuthHmacTransformation);
    }

    /**
     * The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then transforms the string based on a regular expression search pattern, for use in authenticating the client request. This behavior cannot be used in includes.
     * 
     */
    @Import(name="dcpAuthRegexTransformation")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthRegexTransformationArgs> dcpAuthRegexTransformation;

    /**
     * @return The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then transforms the string based on a regular expression search pattern, for use in authenticating the client request. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthRegexTransformationArgs>> dcpAuthRegexTransformation() {
        return Optional.ofNullable(this.dcpAuthRegexTransformation);
    }

    /**
     * The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then extracts a substring, for use in authenticating the client request. This behavior cannot be used in includes.
     * 
     */
    @Import(name="dcpAuthSubstringTransformation")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthSubstringTransformationArgs> dcpAuthSubstringTransformation;

    /**
     * @return The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then extracts a substring, for use in authenticating the client request. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthSubstringTransformationArgs>> dcpAuthSubstringTransformation() {
        return Optional.ofNullable(this.dcpAuthSubstringTransformation);
    }

    /**
     * The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. When enabled, this behavior allows end users to authenticate their requests with valid x509 client certificates. Either a client identifier or access authorization groups are required to make the request valid. This behavior cannot be used in includes.
     * 
     */
    @Import(name="dcpAuthVariableExtractor")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthVariableExtractorArgs> dcpAuthVariableExtractor;

    /**
     * @return The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. When enabled, this behavior allows end users to authenticate their requests with valid x509 client certificates. Either a client identifier or access authorization groups are required to make the request valid. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthVariableExtractorArgs>> dcpAuthVariableExtractor() {
        return Optional.ofNullable(this.dcpAuthVariableExtractor);
    }

    /**
     * The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior defines a set of default authorization groups to add to each request the property configuration controls.  These groups have access regardless of the authentication method you use, either JWT using the `verifyJsonWebTokenForDcp` behavior, or mutual authentication using the `dcpAuthVariableExtractor` behavior to control where authorization groups are extracted from within certificates. This behavior cannot be used in includes.
     * 
     */
    @Import(name="dcpDefaultAuthzGroups")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpDefaultAuthzGroupsArgs> dcpDefaultAuthzGroups;

    /**
     * @return The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior defines a set of default authorization groups to add to each request the property configuration controls.  These groups have access regardless of the authentication method you use, either JWT using the `verifyJsonWebTokenForDcp` behavior, or mutual authentication using the `dcpAuthVariableExtractor` behavior to control where authorization groups are extracted from within certificates. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpDefaultAuthzGroupsArgs>> dcpDefaultAuthzGroups() {
        return Optional.ofNullable(this.dcpDefaultAuthzGroups);
    }

    /**
     * The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior allows Akamai-external clients to use developer test accounts in a shared environment. In conjunction with `verifyJsonWebTokenForDcp`, this behavior allows you to use your own JWTs in your requests, or those generated by Akamai. It lets you either enable the default JWT server for your test configuration by setting the authentication endpoint to a default path, or specify custom settings for your JWT server and the authentication endpoint. This behavior cannot be used in includes.
     * 
     */
    @Import(name="dcpDevRelations")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpDevRelationsArgs> dcpDevRelations;

    /**
     * @return The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior allows Akamai-external clients to use developer test accounts in a shared environment. In conjunction with `verifyJsonWebTokenForDcp`, this behavior allows you to use your own JWTs in your requests, or those generated by Akamai. It lets you either enable the default JWT server for your test configuration by setting the authentication endpoint to a default path, or specify custom settings for your JWT server and the authentication endpoint. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpDevRelationsArgs>> dcpDevRelations() {
        return Optional.ofNullable(this.dcpDevRelations);
    }

    /**
     * INTERNAL ONLY: The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior lets you configure the real time authentication to edge servers. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    @Import(name="dcpRealTimeAuth")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuthArgs> dcpRealTimeAuth;

    /**
     * @return INTERNAL ONLY: The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior lets you configure the real time authentication to edge servers. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuthArgs>> dcpRealTimeAuth() {
        return Optional.ofNullable(this.dcpRealTimeAuth);
    }

    /**
     * A static behavior that&#39;s required when specifying the Cloud Monitor module&#39;s (`edgeConnect` behavior. You can only apply this behavior if the property is marked as secure. See `Secure property requirements` for guidance. This behavior can be used in includes.
     * 
     */
    @Import(name="deliveryReceipt")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDeliveryReceiptArgs> deliveryReceipt;

    /**
     * @return A static behavior that&#39;s required when specifying the Cloud Monitor module&#39;s (`edgeConnect` behavior. You can only apply this behavior if the property is marked as secure. See `Secure property requirements` for guidance. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDeliveryReceiptArgs>> deliveryReceipt() {
        return Optional.ofNullable(this.deliveryReceipt);
    }

    /**
     * Assuming a condition in the rule matches, this denies access to the requested content. For example, a `userLocation` match paired with this behavior would deny requests from a specified part of the world. This behavior can be used in includes.
     * 
     */
    @Import(name="denyAccess")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDenyAccessArgs> denyAccess;

    /**
     * @return Assuming a condition in the rule matches, this denies access to the requested content. For example, a `userLocation` match paired with this behavior would deny requests from a specified part of the world. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDenyAccessArgs>> denyAccess() {
        return Optional.ofNullable(this.denyAccess);
    }

    /**
     * A static behavior required for all properties that implement a failover under the Cloud Security Failover product. This behavior can be used in includes.
     * 
     */
    @Import(name="denyDirectFailoverAccess")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDenyDirectFailoverAccessArgs> denyDirectFailoverAccess;

    /**
     * @return A static behavior required for all properties that implement a failover under the Cloud Security Failover product. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDenyDirectFailoverAccessArgs>> denyDirectFailoverAccess() {
        return Optional.ofNullable(this.denyDirectFailoverAccess);
    }

    /**
     * By default, source URLs serve as cache IDs on edge servers. Electronic Data Capture allows you to specify an additional set of device characteristics to generate separate cache keys. Use this in conjunction with the `deviceCharacteristicHeader` behavior. This behavior can be used in includes.
     * 
     */
    @Import(name="deviceCharacteristicCacheId")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicCacheIdArgs> deviceCharacteristicCacheId;

    /**
     * @return By default, source URLs serve as cache IDs on edge servers. Electronic Data Capture allows you to specify an additional set of device characteristics to generate separate cache keys. Use this in conjunction with the `deviceCharacteristicHeader` behavior. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicCacheIdArgs>> deviceCharacteristicCacheId() {
        return Optional.ofNullable(this.deviceCharacteristicCacheId);
    }

    /**
     * Sends selected information about requesting devices to the origin server, in the form of an `X-Akamai-Device-Characteristics` HTTP header. Use in conjunction with the `deviceCharacteristicCacheId` behavior. This behavior can be used in includes.
     * 
     */
    @Import(name="deviceCharacteristicHeader")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicHeaderArgs> deviceCharacteristicHeader;

    /**
     * @return Sends selected information about requesting devices to the origin server, in the form of an `X-Akamai-Device-Characteristics` HTTP header. Use in conjunction with the `deviceCharacteristicCacheId` behavior. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicHeaderArgs>> deviceCharacteristicHeader() {
        return Optional.ofNullable(this.deviceCharacteristicHeader);
    }

    /**
     * Allow an edge server to use an expired DNS record when forwarding a request to your origin. The `type A` DNS record refreshes `after` content is served to the end user, so there is no wait for the DNS resolution. Avoid this behavior if you want to be able to disable a server immediately after its DNS record expires. This behavior can be used in includes.
     * 
     */
    @Import(name="dnsAsyncRefresh")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDnsAsyncRefreshArgs> dnsAsyncRefresh;

    /**
     * @return Allow an edge server to use an expired DNS record when forwarding a request to your origin. The `type A` DNS record refreshes `after` content is served to the end user, so there is no wait for the DNS resolution. Avoid this behavior if you want to be able to disable a server immediately after its DNS record expires. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDnsAsyncRefreshArgs>> dnsAsyncRefresh() {
        return Optional.ofNullable(this.dnsAsyncRefresh);
    }

    /**
     * Allows edge servers to refresh your origin&#39;s DNS record independently from end-user requests. The `type A` DNS record refreshes before the origin&#39;s DNS record expires. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="dnsPrefresh")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDnsPrefreshArgs> dnsPrefresh;

    /**
     * @return Allows edge servers to refresh your origin&#39;s DNS record independently from end-user requests. The `type A` DNS record refreshes before the origin&#39;s DNS record expires. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDnsPrefreshArgs>> dnsPrefresh() {
        return Optional.ofNullable(this.dnsPrefresh);
    }

    /**
     * Serve static objects to the end-user client over HTTPS, but fetch them from the origin via HTTP. This behavior cannot be used in includes.
     * 
     */
    @Import(name="downgradeProtocol")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDowngradeProtocolArgs> downgradeProtocol;

    /**
     * @return Serve static objects to the end-user client over HTTPS, but fetch them from the origin via HTTP. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDowngradeProtocolArgs>> downgradeProtocol() {
        return Optional.ofNullable(this.downgradeProtocol);
    }

    /**
     * The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks.  Based on match criteria that executes a rule, this behavior logs requests to the OTA servers as completed in aggregated and individual reports. This behavior can be used in includes.
     * 
     */
    @Import(name="downloadCompleteMarker")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDownloadCompleteMarkerArgs> downloadCompleteMarker;

    /**
     * @return The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks.  Based on match criteria that executes a rule, this behavior logs requests to the OTA servers as completed in aggregated and individual reports. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDownloadCompleteMarkerArgs>> downloadCompleteMarker() {
        return Optional.ofNullable(this.downloadCompleteMarker);
    }

    /**
     * The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks. Based on match criteria that executes a rule, this behavior allows requests to the `OTA Updates API` for a list of completed downloads to individual vehicles. This behavior cannot be used in includes.
     * 
     */
    @Import(name="downloadNotification")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDownloadNotificationArgs> downloadNotification;

    /**
     * @return The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks. Based on match criteria that executes a rule, this behavior allows requests to the `OTA Updates API` for a list of completed downloads to individual vehicles. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDownloadNotificationArgs>> downloadNotification() {
        return Optional.ofNullable(this.downloadNotification);
    }

    /**
     * Specify the caching instructions the edge server sends to the end user&#39;s client or client proxies. By default, the cache&#39;s duration is whichever is less: the remaining lifetime of the edge cache, or what the origin&#39;s header specifies. If the origin is set to `no-store` or `bypass-cache`, edge servers send `cache-busting` headers downstream to prevent downstream caching. This behavior can be used in includes.
     * 
     */
    @Import(name="downstreamCache")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDownstreamCacheArgs> downstreamCache;

    /**
     * @return Specify the caching instructions the edge server sends to the end user&#39;s client or client proxies. By default, the cache&#39;s duration is whichever is less: the remaining lifetime of the edge cache, or what the origin&#39;s header specifies. If the origin is set to `no-store` or `bypass-cache`, edge servers send `cache-busting` headers downstream to prevent downstream caching. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDownstreamCacheArgs>> downstreamCache() {
        return Optional.ofNullable(this.downstreamCache);
    }

    /**
     * Enables `quick retry`, which detects slow forward throughput while fetching an object, and attempts a different forward connection path to avoid congestion. By default, connections under 5 mbps trigger this behavior. When the transfer rate drops below this rate during a connection attempt, quick retry is enabled and a different forward connection path is used. Contact Akamai Professional Services to override this threshold. This behavior can be used in includes.
     * 
     */
    @Import(name="dynamicThroughtputOptimization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationArgs> dynamicThroughtputOptimization;

    /**
     * @return Enables `quick retry`, which detects slow forward throughput while fetching an object, and attempts a different forward connection path to avoid congestion. By default, connections under 5 mbps trigger this behavior. When the transfer rate drops below this rate during a connection attempt, quick retry is enabled and a different forward connection path is used. Contact Akamai Professional Services to override this threshold. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationArgs>> dynamicThroughtputOptimization() {
        return Optional.ofNullable(this.dynamicThroughtputOptimization);
    }

    /**
     * This overrides the default threshold of 5 Mbps that triggers the `dynamicThroughtputOptimization` behavior, which enables the quick retry feature. Quick retry detects slow forward throughput while fetching an object, and attempts a different forward connection path to avoid congestion. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="dynamicThroughtputOptimizationOverride")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationOverrideArgs> dynamicThroughtputOptimizationOverride;

    /**
     * @return This overrides the default threshold of 5 Mbps that triggers the `dynamicThroughtputOptimization` behavior, which enables the quick retry feature. Quick retry detects slow forward throughput while fetching an object, and attempts a different forward connection path to avoid congestion. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationOverrideArgs>> dynamicThroughtputOptimizationOverride() {
        return Optional.ofNullable(this.dynamicThroughtputOptimizationOverride);
    }

    /**
     * In conjunction with the `subCustomer` behavior, this optional behavior allows you to control how dynamic web content behaves for your subcustomers using `Akamai Cloud Embed`. This behavior can be used in includes.
     * 
     */
    @Import(name="dynamicWebContent")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDynamicWebContentArgs> dynamicWebContent;

    /**
     * @return In conjunction with the `subCustomer` behavior, this optional behavior allows you to control how dynamic web content behaves for your subcustomers using `Akamai Cloud Embed`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorDynamicWebContentArgs>> dynamicWebContent() {
        return Optional.ofNullable(this.dynamicWebContent);
    }

    /**
     * Uploads a ZIP archive with objects to an existing data set. The target data set stores objects as key-value pairs. The path to an object in the ZIP archive is a key, and the content of an object is a value. For an overview, see `ecmsDatabase`. This behavior cannot be used in includes.
     * 
     */
    @Import(name="ecmsBulkUpload")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsBulkUploadArgs> ecmsBulkUpload;

    /**
     * @return Uploads a ZIP archive with objects to an existing data set. The target data set stores objects as key-value pairs. The path to an object in the ZIP archive is a key, and the content of an object is a value. For an overview, see `ecmsDatabase`. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsBulkUploadArgs>> ecmsBulkUpload() {
        return Optional.ofNullable(this.ecmsBulkUpload);
    }

    /**
     * Edge Connect Message Store is available for `Internet of Things: Edge Connect` users. It lets you create databases and data sets within these databases. You can use this object store to save files smaller than 2 GB. `ecmsDatabase` specifies a default database for requests to this property, unless indicated otherwise in the URL. To access objects in the default database, you can skip its name in the URLs. To access objects in a different database, pass its name in the header, query parameter, or a regular expression matching a URL segment. You can also configure the `ecmsDataset` behavior to specify a default data set for requests. This behavior cannot be used in includes.
     * 
     */
    @Import(name="ecmsDatabase")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsDatabaseArgs> ecmsDatabase;

    /**
     * @return Edge Connect Message Store is available for `Internet of Things: Edge Connect` users. It lets you create databases and data sets within these databases. You can use this object store to save files smaller than 2 GB. `ecmsDatabase` specifies a default database for requests to this property, unless indicated otherwise in the URL. To access objects in the default database, you can skip its name in the URLs. To access objects in a different database, pass its name in the header, query parameter, or a regular expression matching a URL segment. You can also configure the `ecmsDataset` behavior to specify a default data set for requests. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsDatabaseArgs>> ecmsDatabase() {
        return Optional.ofNullable(this.ecmsDatabase);
    }

    /**
     * Specifies a default data set for requests to this property unless indicated otherwise in the URL. To access objects in this data set, you can skip the data set name in the URLs. To access objects in a different data set within a database, pass the data set name in the header, query parameter, or a regular expression pattern matching a URL segment. You can also configure the `ecmsDatabase` behavior to specify a default database for requests. This behavior cannot be used in includes.
     * 
     */
    @Import(name="ecmsDataset")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsDatasetArgs> ecmsDataset;

    /**
     * @return Specifies a default data set for requests to this property unless indicated otherwise in the URL. To access objects in this data set, you can skip the data set name in the URLs. To access objects in a different data set within a database, pass the data set name in the header, query parameter, or a regular expression pattern matching a URL segment. You can also configure the `ecmsDatabase` behavior to specify a default database for requests. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsDatasetArgs>> ecmsDataset() {
        return Optional.ofNullable(this.ecmsDataset);
    }

    /**
     * Defines a regular expression to match object keys in custom URLs and to access objects in a data set. You can point custom URLs to access proper values in the target data set. For an overview, see `ecmsDatabase`. This behavior cannot be used in includes.
     * 
     */
    @Import(name="ecmsObjectKey")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsObjectKeyArgs> ecmsObjectKey;

    /**
     * @return Defines a regular expression to match object keys in custom URLs and to access objects in a data set. You can point custom URLs to access proper values in the target data set. For an overview, see `ecmsDatabase`. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsObjectKeyArgs>> ecmsObjectKey() {
        return Optional.ofNullable(this.ecmsObjectKey);
    }

    /**
     * Configures traffic logs for the Cloud Monitor push API. This behavior can be used in includes.
     * 
     */
    @Import(name="edgeConnect")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeConnectArgs> edgeConnect;

    /**
     * @return Configures traffic logs for the Cloud Monitor push API. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeConnectArgs>> edgeConnect() {
        return Optional.ofNullable(this.edgeConnect);
    }

    /**
     * This behavior implements customized Edge Load Balancing features. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    @Import(name="edgeLoadBalancingAdvanced")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingAdvancedArgs> edgeLoadBalancingAdvanced;

    /**
     * @return This behavior implements customized Edge Load Balancing features. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingAdvancedArgs>> edgeLoadBalancingAdvanced() {
        return Optional.ofNullable(this.edgeLoadBalancingAdvanced);
    }

    /**
     * The Edge Load Balancing module allows you to specify groups of data centers that implement load balancing, session persistence, and real-time dynamic failover. Enabling ELB routes requests contextually based on location, device, or network, along with optional rules you specify. This behavior cannot be used in includes.
     * 
     */
    @Import(name="edgeLoadBalancingDataCenter")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenterArgs> edgeLoadBalancingDataCenter;

    /**
     * @return The Edge Load Balancing module allows you to specify groups of data centers that implement load balancing, session persistence, and real-time dynamic failover. Enabling ELB routes requests contextually based on location, device, or network, along with optional rules you specify. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenterArgs>> edgeLoadBalancingDataCenter() {
        return Optional.ofNullable(this.edgeLoadBalancingDataCenter);
    }

    /**
     * The Edge Load Balancing module allows you to implement groups of data centers featuring load balancing, session persistence, and real-time dynamic failover. Enabling ELB routes requests contextually based on location, device, or network, along with optional rules you specify. This behavior cannot be used in includes.
     * 
     */
    @Import(name="edgeLoadBalancingOrigin")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingOriginArgs> edgeLoadBalancingOrigin;

    /**
     * @return The Edge Load Balancing module allows you to implement groups of data centers featuring load balancing, session persistence, and real-time dynamic failover. Enabling ELB routes requests contextually based on location, device, or network, along with optional rules you specify. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingOriginArgs>> edgeLoadBalancingOrigin() {
        return Optional.ofNullable(this.edgeLoadBalancingOrigin);
    }

    /**
     * Allows the origin server to use a cookie to ensure requests from Akamai servers are genuine. This behavior can be used in includes.
     * 
     */
    @Import(name="edgeOriginAuthorization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeOriginAuthorizationArgs> edgeOriginAuthorization;

    /**
     * @return Allows the origin server to use a cookie to ensure requests from Akamai servers are genuine. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeOriginAuthorizationArgs>> edgeOriginAuthorization() {
        return Optional.ofNullable(this.edgeOriginAuthorization);
    }

    /**
     * This behavior enables the `Edge Redirector Cloudlet` application, which helps you manage large numbers of redirects. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control the Edge Redirector within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
     * 
     */
    @Import(name="edgeRedirector")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirectorArgs> edgeRedirector;

    /**
     * @return This behavior enables the `Edge Redirector Cloudlet` application, which helps you manage large numbers of redirects. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control the Edge Redirector within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirectorArgs>> edgeRedirector() {
        return Optional.ofNullable(this.edgeRedirector);
    }

    /**
     * `EdgeScape` allows you to customize content based on the end user&#39;s geographic location or connection speed. When enabled, the edge server sends a special `X-Akamai-Edgescape` header to the origin server encoding relevant details about the end-user client as key-value pairs. This behavior can be used in includes.
     * 
     */
    @Import(name="edgeScape")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeScapeArgs> edgeScape;

    /**
     * @return `EdgeScape` allows you to customize content based on the end user&#39;s geographic location or connection speed. When enabled, the edge server sends a special `X-Akamai-Edgescape` header to the origin server encoding relevant details about the end-user client as key-value pairs. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeScapeArgs>> edgeScape() {
        return Optional.ofNullable(this.edgeScape);
    }

    /**
     * Allows edge servers to process edge side include (ESI) code to generate dynamic content. To apply this behavior, you need to match on a `contentType`, `path`, or `filename`. Since this behavior requires more parsing time, you should not apply it to pages that lack ESI code, or to any non-HTML content. This behavior can be used in includes.
     * 
     */
    @Import(name="edgeSideIncludes")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeSideIncludesArgs> edgeSideIncludes;

    /**
     * @return Allows edge servers to process edge side include (ESI) code to generate dynamic content. To apply this behavior, you need to match on a `contentType`, `path`, or `filename`. Since this behavior requires more parsing time, you should not apply it to pages that lack ESI code, or to any non-HTML content. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeSideIncludesArgs>> edgeSideIncludes() {
        return Optional.ofNullable(this.edgeSideIncludes);
    }

    /**
     * `EdgeWorkers` are JavaScript applications that allow you to manipulate your web traffic on edge servers outside of Property Manager behaviors, and deployed independently from your configuration&#39;s logic.  This behavior applies an EdgeWorker to a set of edge requests. This behavior cannot be used in includes.
     * 
     */
    @Import(name="edgeWorker")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeWorkerArgs> edgeWorker;

    /**
     * @return `EdgeWorkers` are JavaScript applications that allow you to manipulate your web traffic on edge servers outside of Property Manager behaviors, and deployed independently from your configuration&#39;s logic.  This behavior applies an EdgeWorker to a set of edge requests. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeWorkerArgs>> edgeWorker() {
        return Optional.ofNullable(this.edgeWorker);
    }

    /**
     * Enables the Enhanced Akamai Protocol, a suite of advanced routing and transport optimizations that increase your website&#39;s performance and reliability. It is only available to specific applications, and requires a special routing from edge to origin. This behavior can be used in includes.
     * 
     */
    @Import(name="enhancedAkamaiProtocol")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEnhancedAkamaiProtocolArgs> enhancedAkamaiProtocol;

    /**
     * @return Enables the Enhanced Akamai Protocol, a suite of advanced routing and transport optimizations that increase your website&#39;s performance and reliability. It is only available to specific applications, and requires a special routing from edge to origin. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEnhancedAkamaiProtocolArgs>> enhancedAkamaiProtocol() {
        return Optional.ofNullable(this.enhancedAkamaiProtocol);
    }

    /**
     * Enhanced Proxy Detection (EPD) leverages the GeoGuard service provided by GeoComply to add proxy detection and location spoofing protection. It identifies requests for your content that have been redirected from an unwanted source through a proxy. You can then allow, deny, or redirect these requests. This behavior can be used in includes.
     * 
     */
    @Import(name="enhancedProxyDetection")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEnhancedProxyDetectionArgs> enhancedProxyDetection;

    /**
     * @return Enhanced Proxy Detection (EPD) leverages the GeoGuard service provided by GeoComply to add proxy detection and location spoofing protection. It identifies requests for your content that have been redirected from an unwanted source through a proxy. You can then allow, deny, or redirect these requests. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEnhancedProxyDetectionArgs>> enhancedProxyDetection() {
        return Optional.ofNullable(this.enhancedProxyDetection);
    }

    /**
     * This behavior identifies unwanted requests from an anonymous proxy. This and the `enhancedProxyDetection` behavior work together and need to be included either in the same rule, or in the default one. This behavior can be used in includes.
     * 
     */
    @Import(name="epdForwardHeaderEnrichment")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEpdForwardHeaderEnrichmentArgs> epdForwardHeaderEnrichment;

    /**
     * @return This behavior identifies unwanted requests from an anonymous proxy. This and the `enhancedProxyDetection` behavior work together and need to be included either in the same rule, or in the default one. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorEpdForwardHeaderEnrichmentArgs>> epdForwardHeaderEnrichment() {
        return Optional.ofNullable(this.epdForwardHeaderEnrichment);
    }

    /**
     * Specifies how to respond when the origin is not available: by serving stale content, by serving an error page, or by redirecting.  To apply this behavior, you should match on an `originTimeout` or `matchResponseCode`. This behavior can be used in includes.
     * 
     */
    @Import(name="failAction")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorFailActionArgs> failAction;

    /**
     * @return Specifies how to respond when the origin is not available: by serving stale content, by serving an error page, or by redirecting.  To apply this behavior, you should match on an `originTimeout` or `matchResponseCode`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorFailActionArgs>> failAction() {
        return Optional.ofNullable(this.failAction);
    }

    /**
     * Ensures that functionality such as challenge authentication and reset protocol work with a failover product property you use to create an alternate hostname. Apply it to any properties that implement a failover under the Cloud Security Failover product. This behavior can be used in includes.
     * 
     */
    @Import(name="failoverBotManagerFeatureCompatibility")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorFailoverBotManagerFeatureCompatibilityArgs> failoverBotManagerFeatureCompatibility;

    /**
     * @return Ensures that functionality such as challenge authentication and reset protocol work with a failover product property you use to create an alternate hostname. Apply it to any properties that implement a failover under the Cloud Security Failover product. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorFailoverBotManagerFeatureCompatibilityArgs>> failoverBotManagerFeatureCompatibility() {
        return Optional.ofNullable(this.failoverBotManagerFeatureCompatibility);
    }

    /**
     * This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
     * 
     */
    @Import(name="fastInvalidate")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorFastInvalidateArgs> fastInvalidate;

    /**
     * @return This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorFastInvalidateArgs>> fastInvalidate() {
        return Optional.ofNullable(this.fastInvalidate);
    }

    /**
     * Enables the Cloud Marketing Cloudlet, which helps MediaMath customers collect usage data and place corresponding tags for use in online advertising.  You can configure tags using either the Cloudlets Policy Manager application or the `Cloudlets API`. See also the `firstPartyMarketingPlus` behavior, which integrates better with both MediaMath and its partners. Both behaviors support the same set of options. This behavior cannot be used in includes.
     * 
     */
    @Import(name="firstPartyMarketing")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingArgs> firstPartyMarketing;

    /**
     * @return Enables the Cloud Marketing Cloudlet, which helps MediaMath customers collect usage data and place corresponding tags for use in online advertising.  You can configure tags using either the Cloudlets Policy Manager application or the `Cloudlets API`. See also the `firstPartyMarketingPlus` behavior, which integrates better with both MediaMath and its partners. Both behaviors support the same set of options. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingArgs>> firstPartyMarketing() {
        return Optional.ofNullable(this.firstPartyMarketing);
    }

    /**
     * Enables the Cloud Marketing Plus Cloudlet, which helps MediaMath customers collect usage data and place corresponding tags for use in online advertising.  You can configure tags using either the Cloudlets Policy Manager application or the `Cloudlets API`. See also the `firstPartyMarketing` behavior, which integrates with MediaMath but not its partners. Both behaviors support the same set of options. This behavior cannot be used in includes.
     * 
     */
    @Import(name="firstPartyMarketingPlus")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlusArgs> firstPartyMarketingPlus;

    /**
     * @return Enables the Cloud Marketing Plus Cloudlet, which helps MediaMath customers collect usage data and place corresponding tags for use in online advertising.  You can configure tags using either the Cloudlets Policy Manager application or the `Cloudlets API`. See also the `firstPartyMarketing` behavior, which integrates with MediaMath but not its partners. Both behaviors support the same set of options. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlusArgs>> firstPartyMarketingPlus() {
        return Optional.ofNullable(this.firstPartyMarketingPlus);
    }

    /**
     * The Forward Rewrite Cloudlet allows you to conditionally modify the forward path in edge content without affecting the URL that displays in the user&#39;s address bar. If Cloudlets are available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control how this feature works within `Control Center`, or use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
     * 
     */
    @Import(name="forwardRewrite")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorForwardRewriteArgs> forwardRewrite;

    /**
     * @return The Forward Rewrite Cloudlet allows you to conditionally modify the forward path in edge content without affecting the URL that displays in the user&#39;s address bar. If Cloudlets are available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control how this feature works within `Control Center`, or use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorForwardRewriteArgs>> forwardRewrite() {
        return Optional.ofNullable(this.forwardRewrite);
    }

    /**
     * The `signature header authentication` (g2o) security feature provides header-based verification of outgoing origin requests. Edge servers encrypt request data in a pre-defined header, which the origin uses to verify that the edge server processed the request. This behavior configures the request data, header names, encryption algorithm, and shared secret to use for verification. This behavior can be used in includes.
     * 
     */
    @Import(name="g2oheader")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorG2oheaderArgs> g2oheader;

    /**
     * @return The `signature header authentication` (g2o) security feature provides header-based verification of outgoing origin requests. Edge servers encrypt request data in a pre-defined header, which the origin uses to verify that the edge server processed the request. This behavior configures the request data, header names, encryption algorithm, and shared secret to use for verification. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorG2oheaderArgs>> g2oheader() {
        return Optional.ofNullable(this.g2oheader);
    }

    /**
     * Generates a unique identifier for each request on the Akamai edge network, for use in logging and debugging. GRN identifiers follow the same format as Akamai&#39;s error reference strings, for example: `0.05313217.1567801841.1457a3`. You can use the Edge Diagnostics API&#39;s `Translate error string` operation to get low-level details about any request. This behavior can be used in includes.
     * 
     */
    @Import(name="globalRequestNumber")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorGlobalRequestNumberArgs> globalRequestNumber;

    /**
     * @return Generates a unique identifier for each request on the Akamai edge network, for use in logging and debugging. GRN identifiers follow the same format as Akamai&#39;s error reference strings, for example: `0.05313217.1567801841.1457a3`. You can use the Edge Diagnostics API&#39;s `Translate error string` operation to get low-level details about any request. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorGlobalRequestNumberArgs>> globalRequestNumber() {
        return Optional.ofNullable(this.globalRequestNumber);
    }

    /**
     * This behavior configures how to cache GraphQL-based API traffic.  Enable `caching` for your GraphQL API traffic, along with `allowPost` to cache POST responses.  To configure REST API traffic, use the `rapid` behavior. This behavior can be used in includes.
     * 
     */
    @Import(name="graphqlCaching")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorGraphqlCachingArgs> graphqlCaching;

    /**
     * @return This behavior configures how to cache GraphQL-based API traffic.  Enable `caching` for your GraphQL API traffic, along with `allowPost` to cache POST responses.  To configure REST API traffic, use the `rapid` behavior. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorGraphqlCachingArgs>> graphqlCaching() {
        return Optional.ofNullable(this.graphqlCaching);
    }

    /**
     * Apply `gzip` compression to speed transfer time. This behavior applies best to text-based content such as HTML, CSS, and JavaScript, especially once files exceed about 10KB. Do not apply it to already compressed image formats, or to small files that would add more time to uncompress. To apply this behavior, you should match on `contentType` or the content&#39;s `cacheability`. This behavior can be used in includes.
     * 
     */
    @Import(name="gzipResponse")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorGzipResponseArgs> gzipResponse;

    /**
     * @return Apply `gzip` compression to speed transfer time. This behavior applies best to text-based content such as HTML, CSS, and JavaScript, especially once files exceed about 10KB. Do not apply it to already compressed image formats, or to small files that would add more time to uncompress. To apply this behavior, you should match on `contentType` or the content&#39;s `cacheability`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorGzipResponseArgs>> gzipResponse() {
        return Optional.ofNullable(this.gzipResponse);
    }

    /**
     * This behavior specifies Akamai XML metadata that can only be configured on your behalf by Akamai Professional Services.  Unlike the `advanced` behavior, this may apply a different set of overriding metadata that executes in a post-processing phase. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="hdDataAdvanced")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHdDataAdvancedArgs> hdDataAdvanced;

    /**
     * @return This behavior specifies Akamai XML metadata that can only be configured on your behalf by Akamai Professional Services.  Unlike the `advanced` behavior, this may apply a different set of overriding metadata that executes in a post-processing phase. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorHdDataAdvancedArgs>> hdDataAdvanced() {
        return Optional.ofNullable(this.hdDataAdvanced);
    }

    /**
     * Monitors the health of your origin server by tracking unsuccessful attempts to contact it. Use this behavior to keep end users from having to wait several seconds before a forwarded request times out, or to reduce requests on the origin server when it is unavailable. This behavior can be used in includes.
     * 
     */
    @Import(name="healthDetection")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHealthDetectionArgs> healthDetection;

    /**
     * @return Monitors the health of your origin server by tracking unsuccessful attempts to contact it. Use this behavior to keep end users from having to wait several seconds before a forwarded request times out, or to reduce requests on the origin server when it is unavailable. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorHealthDetectionArgs>> healthDetection() {
        return Optional.ofNullable(this.healthDetection);
    }

    /**
     * Edge IP Binding works with a limited set of static IP addresses to distribute your content, which can be limiting in large footprint environments. This behavior sets Hash Serial and Forward (HSAF) for Edge IP Binding to deal with larger footprints. It can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    @Import(name="hsafEipBinding")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHsafEipBindingArgs> hsafEipBinding;

    /**
     * @return Edge IP Binding works with a limited set of static IP addresses to distribute your content, which can be limiting in large footprint environments. This behavior sets Hash Serial and Forward (HSAF) for Edge IP Binding to deal with larger footprints. It can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorHsafEipBindingArgs>> hsafEipBinding() {
        return Optional.ofNullable(this.hsafEipBinding);
    }

    /**
     * Enables the HTTP/2 protocol, which reduces latency and improves efficiency. You can only apply this behavior if the property is marked as secure.  See `Secure property requirements` for guidance. This behavior cannot be used in includes.
     * 
     */
    @Import(name="http2")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttp2Args> http2;

    /**
     * @return Enables the HTTP/2 protocol, which reduces latency and improves efficiency. You can only apply this behavior if the property is marked as secure.  See `Secure property requirements` for guidance. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttp2Args>> http2() {
        return Optional.ofNullable(this.http2);
    }

    /**
     * This enables the HTTP/3 protocol that uses QUIC. The behavior allows for improved performance and faster connection setup. You can only apply this behavior if the property is marked as secure. See `Secure property requirements` and the `Property Manager documentation` for guidance. This behavior cannot be used in includes.
     * 
     */
    @Import(name="http3")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttp3Args> http3;

    /**
     * @return This enables the HTTP/3 protocol that uses QUIC. The behavior allows for improved performance and faster connection setup. You can only apply this behavior if the property is marked as secure. See `Secure property requirements` and the `Property Manager documentation` for guidance. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttp3Args>> http3() {
        return Optional.ofNullable(this.http3);
    }

    /**
     * Applies HTTP Strict Transport Security (HSTS), disallowing insecure HTTP traffic. Apply this to hostnames managed with Standard TLS or Enhanced TLS certificates. This behavior cannot be used in includes.
     * 
     */
    @Import(name="httpStrictTransportSecurity")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurityArgs> httpStrictTransportSecurity;

    /**
     * @return Applies HTTP Strict Transport Security (HSTS), disallowing insecure HTTP traffic. Apply this to hostnames managed with Standard TLS or Enhanced TLS certificates. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurityArgs>> httpStrictTransportSecurity() {
        return Optional.ofNullable(this.httpStrictTransportSecurity);
    }

    /**
     * Upgrades an HTTP edge request to HTTPS for the remainder of the request flow. Enable this behavior only if your origin supports HTTPS, and if your `origin` behavior is configured with `originCertsToHonor` to verify SSL certificates. This behavior can be used in includes.
     * 
     */
    @Import(name="httpToHttpsUpgrade")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttpToHttpsUpgradeArgs> httpToHttpsUpgrade;

    /**
     * @return Upgrades an HTTP edge request to HTTPS for the remainder of the request flow. Enable this behavior only if your origin supports HTTPS, and if your `origin` behavior is configured with `originCertsToHonor` to verify SSL certificates. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttpToHttpsUpgradeArgs>> httpToHttpsUpgrade() {
        return Optional.ofNullable(this.httpToHttpsUpgrade);
    }

    /**
     * This specifies common query parameters that affect how `imageManager` transforms images, potentially overriding policy, width, format, or density request parameters. This also allows you to assign the value of one of the property&#39;s `rule tree variables` to one of Image and Video Manager&#39;s own policy variables. This behavior can be used in includes.
     * 
     */
    @Import(name="imOverride")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorImOverrideArgs> imOverride;

    /**
     * @return This specifies common query parameters that affect how `imageManager` transforms images, potentially overriding policy, width, format, or density request parameters. This also allows you to assign the value of one of the property&#39;s `rule tree variables` to one of Image and Video Manager&#39;s own policy variables. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorImOverrideArgs>> imOverride() {
        return Optional.ofNullable(this.imOverride);
    }

    /**
     * This behavior can be used in includes.
     * 
     */
    @Import(name="imageAndVideoManager")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerArgs> imageAndVideoManager;

    /**
     * @return This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerArgs>> imageAndVideoManager() {
        return Optional.ofNullable(this.imageAndVideoManager);
    }

    /**
     * Optimizes images&#39; size or file type for the requesting device.  You can also use this behavior to generate API tokens to apply your own policies to matching images using the `Image and Video Manager API`. To apply this behavior, you need to match on a `fileExtension`. Once you apply Image and Video Manager to traffic, you can add the `advancedImMatch` to ensure the behavior applies to the requests from the Image and Video Manager backend. This behavior can be used in includes.
     * 
     */
    @Import(name="imageManager")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorImageManagerArgs> imageManager;

    /**
     * @return Optimizes images&#39; size or file type for the requesting device.  You can also use this behavior to generate API tokens to apply your own policies to matching images using the `Image and Video Manager API`. To apply this behavior, you need to match on a `fileExtension`. Once you apply Image and Video Manager to traffic, you can add the `advancedImMatch` to ensure the behavior applies to the requests from the Image and Video Manager backend. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorImageManagerArgs>> imageManager() {
        return Optional.ofNullable(this.imageManager);
    }

    /**
     * Optimizes videos managed by Image and Video Manager for the requesting device.  You can also use this behavior to generate API tokens to apply your own policies to matching videos using the `Image and Video Manager API`. To apply this behavior, you need to match on a `fileExtension`. This behavior can be used in includes.
     * 
     */
    @Import(name="imageManagerVideo")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoArgs> imageManagerVideo;

    /**
     * @return Optimizes videos managed by Image and Video Manager for the requesting device.  You can also use this behavior to generate API tokens to apply your own policies to matching videos using the `Image and Video Manager API`. To apply this behavior, you need to match on a `fileExtension`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoArgs>> imageManagerVideo() {
        return Optional.ofNullable(this.imageManagerVideo);
    }

    /**
     * Includes let you reuse chunks of a property configuration that you can manage separately from the rest of the property rule tree. This behavior cannot be used in includes.
     * 
     */
    @Import(name="include")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorIncludeArgs> include;

    /**
     * @return Includes let you reuse chunks of a property configuration that you can manage separately from the rest of the property rule tree. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorIncludeArgs>> include() {
        return Optional.ofNullable(this.include);
    }

    /**
     * The Instant feature allows you to prefetch content to the edge cache by adding link relation attributes to markup. For example: This behavior can be used in includes.
     * 
     */
    @Import(name="instant")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorInstantArgs> instant;

    /**
     * @return The Instant feature allows you to prefetch content to the edge cache by adding link relation attributes to markup. For example: This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorInstantArgs>> instant() {
        return Optional.ofNullable(this.instant);
    }

    /**
     * Multi-Domain Configuration, also known as `InstantConfig`, allows you to apply property settings to all incoming hostnames based on a DNS lookup, without explicitly listing them among the property&#39;s hostnames. This behavior cannot be used in includes.
     * 
     */
    @Import(name="instantConfig")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorInstantConfigArgs> instantConfig;

    /**
     * @return Multi-Domain Configuration, also known as `InstantConfig`, allows you to apply property settings to all incoming hostnames based on a DNS lookup, without explicitly listing them among the property&#39;s hostnames. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorInstantConfigArgs>> instantConfig() {
        return Optional.ofNullable(this.instantConfig);
    }

    /**
     * The `Large File Optimization` (LFO) feature improves performance and reliability when delivering large files. You need this behavior for objects larger than 1.8GB, and you should apply it to anything over 100MB. You should apply it only to the specific content to be optimized, such as a download directory&#39;s `.gz` files, and enable the `useVersioning` option while enforcing your own filename versioning policy. Make sure you meet all the `requirements and best practices` for the LFO delivery. This behavior can be used in includes.
     * 
     */
    @Import(name="largeFileOptimization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationArgs> largeFileOptimization;

    /**
     * @return The `Large File Optimization` (LFO) feature improves performance and reliability when delivering large files. You need this behavior for objects larger than 1.8GB, and you should apply it to anything over 100MB. You should apply it only to the specific content to be optimized, such as a download directory&#39;s `.gz` files, and enable the `useVersioning` option while enforcing your own filename versioning policy. Make sure you meet all the `requirements and best practices` for the LFO delivery. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationArgs>> largeFileOptimization() {
        return Optional.ofNullable(this.largeFileOptimization);
    }

    /**
     * The `Large File Optimization` feature improves performance and reliability when delivering large files. You need this behavior for objects larger than 1.8GB, and it&#39;s recommended for anything over 100MB. You should apply it only to the specific content to be optimized, such as a download directory&#39;s `.gz` files.  Note that it is best to use `NetStorage` for objects larger than 1.8GB. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="largeFileOptimizationAdvanced")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationAdvancedArgs> largeFileOptimizationAdvanced;

    /**
     * @return The `Large File Optimization` feature improves performance and reliability when delivering large files. You need this behavior for objects larger than 1.8GB, and it&#39;s recommended for anything over 100MB. You should apply it only to the specific content to be optimized, such as a download directory&#39;s `.gz` files.  Note that it is best to use `NetStorage` for objects larger than 1.8GB. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationAdvancedArgs>> largeFileOptimizationAdvanced() {
        return Optional.ofNullable(this.largeFileOptimizationAdvanced);
    }

    /**
     * Control the rate at which content serves out to end users, optionally varying the speed depending on the file size or elapsed download time. Each bit rate specified in the `bitrateTable` array corresponds to a `thresholdTable` entry that activates it.  You can use this behavior to prevent media downloads from progressing faster than they are viewed, for example, or to differentiate various tiers of end-user experience. To apply this behavior, you should match on a `contentType`, `path`, or `filename`. This behavior can be used in includes.
     * 
     */
    @Import(name="limitBitRate")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateArgs> limitBitRate;

    /**
     * @return Control the rate at which content serves out to end users, optionally varying the speed depending on the file size or elapsed download time. Each bit rate specified in the `bitrateTable` array corresponds to a `thresholdTable` entry that activates it.  You can use this behavior to prevent media downloads from progressing faster than they are viewed, for example, or to differentiate various tiers of end-user experience. To apply this behavior, you should match on a `contentType`, `path`, or `filename`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateArgs>> limitBitRate() {
        return Optional.ofNullable(this.limitBitRate);
    }

    /**
     * Logs custom details from the origin response in the `Log Delivery Service` report. This behavior can be used in includes.
     * 
     */
    @Import(name="logCustom")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorLogCustomArgs> logCustom;

    /**
     * @return Logs custom details from the origin response in the `Log Delivery Service` report. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorLogCustomArgs>> logCustom() {
        return Optional.ofNullable(this.logCustom);
    }

    /**
     * `mPulse` provides high-level performance analytics and predictive recommendations based on real end user data. See the `mPulse Quick Start` to set up mPulse on your website. This behavior cannot be used in includes.
     * 
     */
    @Import(name="mPulse")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMPulseArgs> mPulse;

    /**
     * @return `mPulse` provides high-level performance analytics and predictive recommendations based on real end user data. See the `mPulse Quick Start` to set up mPulse on your website. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorMPulseArgs>> mPulse() {
        return Optional.ofNullable(this.mPulse);
    }

    /**
     * Allows customers who use the Adaptive Media Delivery product to enhance content based on the capabilities of each end user&#39;s device.  This behavior configures a `manifest` for both HLS Live and on-demand streaming. For more information, see `Adaptive Media Delivery`. This behavior can be used in includes.
     * 
     */
    @Import(name="manifestPersonalization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorManifestPersonalizationArgs> manifestPersonalization;

    /**
     * @return Allows customers who use the Adaptive Media Delivery product to enhance content based on the capabilities of each end user&#39;s device.  This behavior configures a `manifest` for both HLS Live and on-demand streaming. For more information, see `Adaptive Media Delivery`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorManifestPersonalizationArgs>> manifestPersonalization() {
        return Optional.ofNullable(this.manifestPersonalization);
    }

    /**
     * This behavior works with `adScalerCircuitBreaker`. It delegates parts of the media delivery workflow, like ad insertion, to other technology partners. Akamai reroutes manifest file requests to partner platforms for processing prior to being delivered. Rerouting simplifies the workflow and improves the media streaming experience. This behavior cannot be used in includes.
     * 
     */
    @Import(name="manifestRerouting")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorManifestReroutingArgs> manifestRerouting;

    /**
     * @return This behavior works with `adScalerCircuitBreaker`. It delegates parts of the media delivery workflow, like ad insertion, to other technology partners. Akamai reroutes manifest file requests to partner platforms for processing prior to being delivered. Rerouting simplifies the workflow and improves the media streaming experience. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorManifestReroutingArgs>> manifestRerouting() {
        return Optional.ofNullable(this.manifestRerouting);
    }

    /**
     * With the `http2` behavior enabled, this loads a specified set of objects into the client browser&#39;s cache. To apply this behavior, you should match on a `path` or `filename`. This behavior cannot be used in includes.
     * 
     */
    @Import(name="manualServerPush")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorManualServerPushArgs> manualServerPush;

    /**
     * @return With the `http2` behavior enabled, this loads a specified set of objects into the client browser&#39;s cache. To apply this behavior, you should match on a `path` or `filename`. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorManualServerPushArgs>> manualServerPush() {
        return Optional.ofNullable(this.manualServerPush);
    }

    /**
     * Enables Accelerated Media Delivery for this set of requests. This behavior cannot be used in includes.
     * 
     */
    @Import(name="mediaAcceleration")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationArgs> mediaAcceleration;

    /**
     * @return Enables Accelerated Media Delivery for this set of requests. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationArgs>> mediaAcceleration() {
        return Optional.ofNullable(this.mediaAcceleration);
    }

    /**
     * When enabled, disables use of QUIC protocol for this set of accelerated media content. This behavior cannot be used in includes.
     * 
     */
    @Import(name="mediaAccelerationQuicOptout")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationQuicOptoutArgs> mediaAccelerationQuicOptout;

    /**
     * @return When enabled, disables use of QUIC protocol for this set of accelerated media content. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationQuicOptoutArgs>> mediaAccelerationQuicOptout() {
        return Optional.ofNullable(this.mediaAccelerationQuicOptout);
    }

    /**
     * This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
     * 
     */
    @Import(name="mediaClient")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaClientArgs> mediaClient;

    /**
     * @return This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaClientArgs>> mediaClient() {
        return Optional.ofNullable(this.mediaClient);
    }

    /**
     * Media File Retrieval Optimization (MFRO) speeds the delivery of large media files by relying on caches of partial objects. You should use it for files larger than 100 MB. It&#39;s required for files larger than 1.8 GB, and works best with `NetStorage`. To apply this behavior, you should match on a `fileExtension`. This behavior can be used in includes.
     * 
     */
    @Import(name="mediaFileRetrievalOptimization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaFileRetrievalOptimizationArgs> mediaFileRetrievalOptimization;

    /**
     * @return Media File Retrieval Optimization (MFRO) speeds the delivery of large media files by relying on caches of partial objects. You should use it for files larger than 100 MB. It&#39;s required for files larger than 1.8 GB, and works best with `NetStorage`. To apply this behavior, you should match on a `fileExtension`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaFileRetrievalOptimizationArgs>> mediaFileRetrievalOptimization() {
        return Optional.ofNullable(this.mediaFileRetrievalOptimization);
    }

    /**
     * Specifies how edge servers respond when the origin is unresponsive, or suffers from server or content errors. You can specify how many times to retry, switch to a backup origin hostname, or configure a redirect. This behavior can be used in includes.
     * 
     */
    @Import(name="mediaOriginFailover")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaOriginFailoverArgs> mediaOriginFailover;

    /**
     * @return Specifies how edge servers respond when the origin is unresponsive, or suffers from server or content errors. You can specify how many times to retry, switch to a backup origin hostname, or configure a redirect. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaOriginFailoverArgs>> mediaOriginFailover() {
        return Optional.ofNullable(this.mediaOriginFailover);
    }

    /**
     * This behavior reduces time spent waiting for the initial response, also known as time to first byte, during peak traffic events. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="metadataCaching")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMetadataCachingArgs> metadataCaching;

    /**
     * @return This behavior reduces time spent waiting for the initial response, also known as time to first byte, during peak traffic events. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorMetadataCachingArgs>> metadataCaching() {
        return Optional.ofNullable(this.metadataCaching);
    }

    /**
     * This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
     * 
     */
    @Import(name="mobileSdkPerformance")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMobileSdkPerformanceArgs> mobileSdkPerformance;

    /**
     * @return This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorMobileSdkPerformanceArgs>> mobileSdkPerformance() {
        return Optional.ofNullable(this.mobileSdkPerformance);
    }

    /**
     * Modify, add, remove, or pass along specific request headers coming upstream from the client. This behavior can be used in includes.
     * 
     */
    @Import(name="modifyIncomingRequestHeader")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingRequestHeaderArgs> modifyIncomingRequestHeader;

    /**
     * @return Modify, add, remove, or pass along specific request headers coming upstream from the client. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingRequestHeaderArgs>> modifyIncomingRequestHeader() {
        return Optional.ofNullable(this.modifyIncomingRequestHeader);
    }

    /**
     * Modify, add, remove, or pass along specific response headers coming downstream from the origin. This behavior can be used in includes.
     * 
     */
    @Import(name="modifyIncomingResponseHeader")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingResponseHeaderArgs> modifyIncomingResponseHeader;

    /**
     * @return Modify, add, remove, or pass along specific response headers coming downstream from the origin. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingResponseHeaderArgs>> modifyIncomingResponseHeader() {
        return Optional.ofNullable(this.modifyIncomingResponseHeader);
    }

    /**
     * Modify, add, remove, or pass along specific request headers going upstream towards the origin. This behavior can be used in includes.
     * 
     */
    @Import(name="modifyOutgoingRequestHeader")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingRequestHeaderArgs> modifyOutgoingRequestHeader;

    /**
     * @return Modify, add, remove, or pass along specific request headers going upstream towards the origin. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingRequestHeaderArgs>> modifyOutgoingRequestHeader() {
        return Optional.ofNullable(this.modifyOutgoingRequestHeader);
    }

    /**
     * Modify, add, remove, or pass along specific response headers going downstream towards the client. This behavior can be used in includes.
     * 
     */
    @Import(name="modifyOutgoingResponseHeader")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingResponseHeaderArgs> modifyOutgoingResponseHeader;

    /**
     * @return Modify, add, remove, or pass along specific response headers going downstream towards the client. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingResponseHeaderArgs>> modifyOutgoingResponseHeader() {
        return Optional.ofNullable(this.modifyOutgoingResponseHeader);
    }

    /**
     * Removes or renames the HTTP `Via` headers used to inform the server of proxies through which the request was sent to the origin. This behavior can be used in includes.
     * 
     */
    @Import(name="modifyViaHeader")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyViaHeaderArgs> modifyViaHeader;

    /**
     * @return Removes or renames the HTTP `Via` headers used to inform the server of proxies through which the request was sent to the origin. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyViaHeaderArgs>> modifyViaHeader() {
        return Optional.ofNullable(this.modifyViaHeader);
    }

    /**
     * Specify the hostname and settings used to contact the origin once service begins. You can use your own origin, `NetStorage`, an Edge Load Balancing origin, or a SaaS dynamic origin. This behavior can be used in includes.
     * 
     */
    @Import(name="origin")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginArgs> origin;

    /**
     * @return Specify the hostname and settings used to contact the origin once service begins. You can use your own origin, `NetStorage`, an Edge Load Balancing origin, or a SaaS dynamic origin. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginArgs>> origin() {
        return Optional.ofNullable(this.origin);
    }

    /**
     * Specifies characteristics of the origin. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior cannot be used in includes.
     * 
     */
    @Import(name="originCharacteristics")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsArgs> originCharacteristics;

    /**
     * @return Specifies characteristics of the origin. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsArgs>> originCharacteristics() {
        return Optional.ofNullable(this.originCharacteristics);
    }

    /**
     * Specifies characteristics of the origin, for use in Akamai&#39;s Wholesale Delivery product. This behavior can be used in includes.
     * 
     */
    @Import(name="originCharacteristicsWsd")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsWsdArgs> originCharacteristicsWsd;

    /**
     * @return Specifies characteristics of the origin, for use in Akamai&#39;s Wholesale Delivery product. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsWsdArgs>> originCharacteristicsWsd() {
        return Optional.ofNullable(this.originCharacteristicsWsd);
    }

    /**
     * Origin Failover requires that you set up a separate rule containing origin failure recovery methods. You also need to set up the Origin Failure Recovery Policy behavior in a separate rule with a desired match criteria, and select the desired failover method. You can do this using Property Manager. Learn more about this process in `Adaptive Media Delivery Implementation Guide`. You can use the `originFailureRecoveryPolicy` member to edit existing instances of the Origin Failure Recover Policy behavior. This behavior can be used in includes.
     * 
     */
    @Import(name="originFailureRecoveryMethod")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryMethodArgs> originFailureRecoveryMethod;

    /**
     * @return Origin Failover requires that you set up a separate rule containing origin failure recovery methods. You also need to set up the Origin Failure Recovery Policy behavior in a separate rule with a desired match criteria, and select the desired failover method. You can do this using Property Manager. Learn more about this process in `Adaptive Media Delivery Implementation Guide`. You can use the `originFailureRecoveryPolicy` member to edit existing instances of the Origin Failure Recover Policy behavior. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryMethodArgs>> originFailureRecoveryMethod() {
        return Optional.ofNullable(this.originFailureRecoveryMethod);
    }

    /**
     * Configures how to detect an origin failure, in which case the `originFailureRecoveryMethod` behavior applies. You can also define up to three sets of criteria to detect origin failure based on specific response codes. Use it to apply specific retry or recovery actions. You can do this using Property Manager. Learn more about this process in `Adaptive Media Delivery Implementation Guide`. You can use the `originFailureRecoveryMethod` member to edit existing instances of the Origin Failure Recover Method behavior. This behavior can be used in includes.
     * 
     */
    @Import(name="originFailureRecoveryPolicy")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryPolicyArgs> originFailureRecoveryPolicy;

    /**
     * @return Configures how to detect an origin failure, in which case the `originFailureRecoveryMethod` behavior applies. You can also define up to three sets of criteria to detect origin failure based on specific response codes. Use it to apply specific retry or recovery actions. You can do this using Property Manager. Learn more about this process in `Adaptive Media Delivery Implementation Guide`. You can use the `originFailureRecoveryMethod` member to edit existing instances of the Origin Failure Recover Method behavior. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryPolicyArgs>> originFailureRecoveryPolicy() {
        return Optional.ofNullable(this.originFailureRecoveryPolicy);
    }

    /**
     * Origin IP Access Control List limits the traffic to your origin. It only allows requests from specific edge servers that are configured as part of a supernet defined by CIDR blocks. This behavior can be used in includes.
     * 
     */
    @Import(name="originIpAcl")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginIpAclArgs> originIpAcl;

    /**
     * @return Origin IP Access Control List limits the traffic to your origin. It only allows requests from specific edge servers that are configured as part of a supernet defined by CIDR blocks. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginIpAclArgs>> originIpAcl() {
        return Optional.ofNullable(this.originIpAcl);
    }

    /**
     * This behavior activates `persistent connections` between edge servers and clients, which allow for better performance and more efficient use of resources. Compare with the `persistentConnection` behavior, which configures persistent connections for the entire journey from origin to edge to client.  Contact Akamai Professional Services for help configuring either. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="persistentClientConnection")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPersistentClientConnectionArgs> persistentClientConnection;

    /**
     * @return This behavior activates `persistent connections` between edge servers and clients, which allow for better performance and more efficient use of resources. Compare with the `persistentConnection` behavior, which configures persistent connections for the entire journey from origin to edge to client.  Contact Akamai Professional Services for help configuring either. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorPersistentClientConnectionArgs>> persistentClientConnection() {
        return Optional.ofNullable(this.persistentClientConnection);
    }

    /**
     * This behavior enables more efficient `persistent connections` from origin to edge server to client. Compare with the `persistentClientConnection` behavior, which customizes persistent connections from edge to client. Contact Akamai Professional Services for help configuring either. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="persistentConnection")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPersistentConnectionArgs> persistentConnection;

    /**
     * @return This behavior enables more efficient `persistent connections` from origin to edge server to client. Compare with the `persistentClientConnection` behavior, which customizes persistent connections from edge to client. Contact Akamai Professional Services for help configuring either. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorPersistentConnectionArgs>> persistentConnection() {
        return Optional.ofNullable(this.persistentConnection);
    }

    /**
     * Marks content covered by the current rule as sensitive `personally identifiable information` that needs to be treated as secure and private. That includes anything involving personal information: name, social security number, date and place of birth, mother&#39;s maiden name, biometric data, or any other data linked to an individual. If you attempt to save a property with such a rule that also caches or logs sensitive content, the added behavior results in a validation error. This behavior cannot be used in includes.
     * 
     */
    @Import(name="personallyIdentifiableInformation")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPersonallyIdentifiableInformationArgs> personallyIdentifiableInformation;

    /**
     * @return Marks content covered by the current rule as sensitive `personally identifiable information` that needs to be treated as secure and private. That includes anything involving personal information: name, social security number, date and place of birth, mother&#39;s maiden name, biometric data, or any other data linked to an individual. If you attempt to save a property with such a rule that also caches or logs sensitive content, the added behavior results in a validation error. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorPersonallyIdentifiableInformationArgs>> personallyIdentifiableInformation() {
        return Optional.ofNullable(this.personallyIdentifiableInformation);
    }

    /**
     * The Phased Release Cloudlet provides gradual and granular traffic management to an alternate origin in near real time.  Use the `Cloudlets API` or the Cloudlets Policy Manager application within `Control Center` to set up your Cloudlets policies. This behavior cannot be used in includes.
     * 
     */
    @Import(name="phasedRelease")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPhasedReleaseArgs> phasedRelease;

    /**
     * @return The Phased Release Cloudlet provides gradual and granular traffic management to an alternate origin in near real time.  Use the `Cloudlets API` or the Cloudlets Policy Manager application within `Control Center` to set up your Cloudlets policies. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorPhasedReleaseArgs>> phasedRelease() {
        return Optional.ofNullable(this.phasedRelease);
    }

    /**
     * With the `http2` behavior enabled, this requests a specified set of domains that relate to your property hostname, and keeps the connection open for faster loading of content from those domains. This behavior can be used in includes.
     * 
     */
    @Import(name="preconnect")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPreconnectArgs> preconnect;

    /**
     * @return With the `http2` behavior enabled, this requests a specified set of domains that relate to your property hostname, and keeps the connection open for faster loading of content from those domains. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorPreconnectArgs>> preconnect() {
        return Optional.ofNullable(this.preconnect);
    }

    /**
     * Improves user experience and reduces the cost of downloads by enabling mobile devices to predictively fetch and cache content from catalogs managed by Akamai servers. You can&#39;t use this feature if in the `segmentedMediaOptimization` behavior, the value for `behavior` is set to `LIVE`. This behavior can be used in includes.
     * 
     */
    @Import(name="predictiveContentDelivery")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPredictiveContentDeliveryArgs> predictiveContentDelivery;

    /**
     * @return Improves user experience and reduces the cost of downloads by enabling mobile devices to predictively fetch and cache content from catalogs managed by Akamai servers. You can&#39;t use this feature if in the `segmentedMediaOptimization` behavior, the value for `behavior` is set to `LIVE`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorPredictiveContentDeliveryArgs>> predictiveContentDelivery() {
        return Optional.ofNullable(this.predictiveContentDelivery);
    }

    /**
     * This behavior potentially reduces the client&#39;s page load time by pre-caching objects based on historical data for the page, not just its current set of referenced objects. It also detects second-level dependencies, such as objects retrieved by JavaScript. This behavior can be used in includes.
     * 
     */
    @Import(name="predictivePrefetching")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPredictivePrefetchingArgs> predictivePrefetching;

    /**
     * @return This behavior potentially reduces the client&#39;s page load time by pre-caching objects based on historical data for the page, not just its current set of referenced objects. It also detects second-level dependencies, such as objects retrieved by JavaScript. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorPredictivePrefetchingArgs>> predictivePrefetching() {
        return Optional.ofNullable(this.predictivePrefetching);
    }

    /**
     * Instructs edge servers to retrieve content linked from requested pages as they load, rather than waiting for separate requests for the linked content. This behavior applies depending on the rule&#39;s set of matching conditions. Use in conjunction with the `prefetchable` behavior, which specifies the set of objects to prefetch. This behavior can be used in includes.
     * 
     */
    @Import(name="prefetch")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPrefetchArgs> prefetch;

    /**
     * @return Instructs edge servers to retrieve content linked from requested pages as they load, rather than waiting for separate requests for the linked content. This behavior applies depending on the rule&#39;s set of matching conditions. Use in conjunction with the `prefetchable` behavior, which specifies the set of objects to prefetch. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorPrefetchArgs>> prefetch() {
        return Optional.ofNullable(this.prefetch);
    }

    /**
     * Allow matching objects to prefetch into the edge cache as the parent page that links to them loads, rather than waiting for a direct request. This behavior applies depending on the rule&#39;s set of matching conditions. Use `prefetch` to enable the overall behavior for parent pages that contain links to the object. To apply this behavior, you need to match on a `filename` or `fileExtension`. This behavior can be used in includes.
     * 
     */
    @Import(name="prefetchable")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPrefetchableArgs> prefetchable;

    /**
     * @return Allow matching objects to prefetch into the edge cache as the parent page that links to them loads, rather than waiting for a direct request. This behavior applies depending on the rule&#39;s set of matching conditions. Use `prefetch` to enable the overall behavior for parent pages that contain links to the object. To apply this behavior, you need to match on a `filename` or `fileExtension`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorPrefetchableArgs>> prefetchable() {
        return Optional.ofNullable(this.prefetchable);
    }

    /**
     * Refresh cached content before its time-to-live (TTL) expires, to keep end users from having to wait for the origin to provide fresh content. This behavior can be used in includes.
     * 
     */
    @Import(name="prefreshCache")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPrefreshCacheArgs> prefreshCache;

    /**
     * @return Refresh cached content before its time-to-live (TTL) expires, to keep end users from having to wait for the origin to provide fresh content. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorPrefreshCacheArgs>> prefreshCache() {
        return Optional.ofNullable(this.prefreshCache);
    }

    /**
     * This behavior can be used in includes.
     * 
     */
    @Import(name="quality")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorQualityArgs> quality;

    /**
     * @return This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorQualityArgs>> quality() {
        return Optional.ofNullable(this.quality);
    }

    /**
     * For a share of responses, includes an `Alt-Svc` header for compatible clients to initiate subsequent sessions using the QUIC protocol. This behavior cannot be used in includes.
     * 
     */
    @Import(name="quicBeta")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorQuicBetaArgs> quicBeta;

    /**
     * @return For a share of responses, includes an `Alt-Svc` header for compatible clients to initiate subsequent sessions using the QUIC protocol. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorQuicBetaArgs>> quicBeta() {
        return Optional.ofNullable(this.quicBeta);
    }

    /**
     * Optimizes `.flv` and `.mp4` files to allow random jump-point navigation. This behavior can be used in includes.
     * 
     */
    @Import(name="randomSeek")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRandomSeekArgs> randomSeek;

    /**
     * @return Optimizes `.flv` and `.mp4` files to allow random jump-point navigation. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRandomSeekArgs>> randomSeek() {
        return Optional.ofNullable(this.randomSeek);
    }

    /**
     * The `Akamai API Gateway` allows you to configure API traffic delivered over the Akamai network. Apply this behavior to a set of API assets, then use Akamai&#39;s `API Endpoints API` to configure how the traffic responds.  Use the `API Keys and Traffic Management API` to control access to your APIs. This behavior cannot be used in includes.
     * 
     */
    @Import(name="rapid")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRapidArgs> rapid;

    /**
     * @return The `Akamai API Gateway` allows you to configure API traffic delivered over the Akamai network. Apply this behavior to a set of API assets, then use Akamai&#39;s `API Endpoints API` to configure how the traffic responds.  Use the `API Keys and Traffic Management API` to control access to your APIs. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRapidArgs>> rapid() {
        return Optional.ofNullable(this.rapid);
    }

    /**
     * This behavior specifies how long the edge server should wait for a response from the requesting forward server after a connection has already been established. Any failure to read aborts the request and sends a `504` Gateway Timeout error to the client. Contact Akamai Professional Services for help configuring this behavior. This behavior can be used in includes.
     * 
     */
    @Import(name="readTimeout")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorReadTimeoutArgs> readTimeout;

    /**
     * @return This behavior specifies how long the edge server should wait for a response from the requesting forward server after a connection has already been established. Any failure to read aborts the request and sends a `504` Gateway Timeout error to the client. Contact Akamai Professional Services for help configuring this behavior. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorReadTimeoutArgs>> readTimeout() {
        return Optional.ofNullable(this.readTimeout);
    }

    /**
     * This enables `Real-Time Reporting` for Akamai Cloud Embed customers. The behavior can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="realTimeReporting")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRealTimeReportingArgs> realTimeReporting;

    /**
     * @return This enables `Real-Time Reporting` for Akamai Cloud Embed customers. The behavior can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRealTimeReportingArgs>> realTimeReporting() {
        return Optional.ofNullable(this.realTimeReporting);
    }

    /**
     * This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
     * 
     */
    @Import(name="realUserMonitoring")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRealUserMonitoringArgs> realUserMonitoring;

    /**
     * @return This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRealUserMonitoringArgs>> realUserMonitoring() {
        return Optional.ofNullable(this.realUserMonitoring);
    }

    /**
     * Respond to the client request with a redirect without contacting the origin. Specify the redirect as a path expression starting with a `/` character relative to the current root, or as a fully qualified URL. This behavior relies primarily on `destinationHostname` and `destinationPath` to manipulate the hostname and path independently. This behavior can be used in includes.
     * 
     */
    @Import(name="redirect")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRedirectArgs> redirect;

    /**
     * @return Respond to the client request with a redirect without contacting the origin. Specify the redirect as a path expression starting with a `/` character relative to the current root, or as a fully qualified URL. This behavior relies primarily on `destinationHostname` and `destinationPath` to manipulate the hostname and path independently. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRedirectArgs>> redirect() {
        return Optional.ofNullable(this.redirect);
    }

    /**
     * Respond to the client request with a redirect without contacting the origin. This behavior fills the same need as `redirect`, but allows you to use `variables` to express the redirect `destination`&#39;s component values more concisely. This behavior can be used in includes.
     * 
     */
    @Import(name="redirectplus")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRedirectplusArgs> redirectplus;

    /**
     * @return Respond to the client request with a redirect without contacting the origin. This behavior fills the same need as `redirect`, but allows you to use `variables` to express the redirect `destination`&#39;s component values more concisely. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRedirectplusArgs>> redirectplus() {
        return Optional.ofNullable(this.redirectplus);
    }

    /**
     * Limits allowed requests to a set of domains you specify. This behavior can be used in includes.
     * 
     */
    @Import(name="refererChecking")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRefererCheckingArgs> refererChecking;

    /**
     * @return Limits allowed requests to a set of domains you specify. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRefererCheckingArgs>> refererChecking() {
        return Optional.ofNullable(this.refererChecking);
    }

    /**
     * Remove named query parameters before forwarding the request to the origin. This behavior can be used in includes.
     * 
     */
    @Import(name="removeQueryParameter")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRemoveQueryParameterArgs> removeQueryParameter;

    /**
     * @return Remove named query parameters before forwarding the request to the origin. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRemoveQueryParameterArgs>> removeQueryParameter() {
        return Optional.ofNullable(this.removeQueryParameter);
    }

    /**
     * By default, responses that feature a `Vary` header value of anything other than `Accept-Encoding` and a corresponding `Content-Encoding: gzip` header aren&#39;t cached on edge servers. `Vary` headers indicate when a URL&#39;s content varies depending on some variable, such as which `User-Agent` requests it. This behavior simply removes the `Vary` header to make responses cacheable. This behavior can be used in includes.
     * 
     */
    @Import(name="removeVary")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRemoveVaryArgs> removeVary;

    /**
     * @return By default, responses that feature a `Vary` header value of anything other than `Accept-Encoding` and a corresponding `Content-Encoding: gzip` header aren&#39;t cached on edge servers. `Vary` headers indicate when a URL&#39;s content varies depending on some variable, such as which `User-Agent` requests it. This behavior simply removes the `Vary` header to make responses cacheable. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRemoveVaryArgs>> removeVary() {
        return Optional.ofNullable(this.removeVary);
    }

    /**
     * Specify the HTTP request headers or cookie names to log in your Log Delivery Service reports. This behavior can be used in includes.
     * 
     */
    @Import(name="report")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorReportArgs> report;

    /**
     * @return Specify the HTTP request headers or cookie names to log in your Log Delivery Service reports. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorReportArgs>> report() {
        return Optional.ofNullable(this.report);
    }

    /**
     * The Request Control Cloudlet allows you to control access to your web content based on the incoming request&#39;s IP or geographic location.  With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control how the feature works within `Control Center`, or use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
     * 
     */
    @Import(name="requestControl")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRequestControlArgs> requestControl;

    /**
     * @return The Request Control Cloudlet allows you to control access to your web content based on the incoming request&#39;s IP or geographic location.  With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control how the feature works within `Control Center`, or use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRequestControlArgs>> requestControl() {
        return Optional.ofNullable(this.requestControl);
    }

    /**
     * The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks. When using the `downloadCompleteMarker` behavior to log successful downloads, this related behavior identifies download or campaign server types in aggregated and individual reports. This behavior can be used in includes.
     * 
     */
    @Import(name="requestTypeMarker")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRequestTypeMarkerArgs> requestTypeMarker;

    /**
     * @return The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks. When using the `downloadCompleteMarker` behavior to log successful downloads, this related behavior identifies download or campaign server types in aggregated and individual reports. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRequestTypeMarkerArgs>> requestTypeMarker() {
        return Optional.ofNullable(this.requestTypeMarker);
    }

    /**
     * This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
     * 
     */
    @Import(name="resourceOptimizer")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerArgs> resourceOptimizer;

    /**
     * @return This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerArgs>> resourceOptimizer() {
        return Optional.ofNullable(this.resourceOptimizer);
    }

    /**
     * This enhances the standard version of the `resourceOptimizer` behavior to support the compression of additional file formats and address some compatibility issues. This behavior can be used in includes.
     * 
     */
    @Import(name="resourceOptimizerExtendedCompatibility")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerExtendedCompatibilityArgs> resourceOptimizerExtendedCompatibility;

    /**
     * @return This enhances the standard version of the `resourceOptimizer` behavior to support the compression of additional file formats and address some compatibility issues. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerExtendedCompatibilityArgs>> resourceOptimizerExtendedCompatibility() {
        return Optional.ofNullable(this.resourceOptimizerExtendedCompatibility);
    }

    /**
     * Change the existing response code. For example, if your origin sends a `301` permanent redirect, this behavior can change it on the edge to a temporary `302` redirect. This behavior can be used in includes.
     * 
     */
    @Import(name="responseCode")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorResponseCodeArgs> responseCode;

    /**
     * @return Change the existing response code. For example, if your origin sends a `301` permanent redirect, this behavior can change it on the edge to a temporary `302` redirect. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorResponseCodeArgs>> responseCode() {
        return Optional.ofNullable(this.responseCode);
    }

    /**
     * Set a cookie to send downstream to the client with either a fixed value or a unique stamp. This behavior can be used in includes.
     * 
     */
    @Import(name="responseCookie")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorResponseCookieArgs> responseCookie;

    /**
     * @return Set a cookie to send downstream to the client with either a fixed value or a unique stamp. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorResponseCookieArgs>> responseCookie() {
        return Optional.ofNullable(this.responseCookie);
    }

    /**
     * You need this behavior to deploy the Object Caching product. It disables serving HTML content and limits the maximum object size to 100MB. Contact Akamai Professional Services for help configuring it. This behavior can be used in includes.
     * 
     */
    @Import(name="restrictObjectCaching")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRestrictObjectCachingArgs> restrictObjectCaching;

    /**
     * @return You need this behavior to deploy the Object Caching product. It disables serving HTML content and limits the maximum object size to 100MB. Contact Akamai Professional Services for help configuring it. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRestrictObjectCachingArgs>> restrictObjectCaching() {
        return Optional.ofNullable(this.restrictObjectCaching);
    }

    /**
     * Generates a response header with information about cache status. Among other things, this can tell you whether the response came from the Akamai cache, or from the origin. Status values report with either of these forms of syntax, depending for example on whether you&#39;re deploying traffic using `sureRoute` or `tieredDistribution`: This behavior can be used in includes.
     * 
     */
    @Import(name="returnCacheStatus")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorReturnCacheStatusArgs> returnCacheStatus;

    /**
     * @return Generates a response header with information about cache status. Among other things, this can tell you whether the response came from the Akamai cache, or from the origin. Status values report with either of these forms of syntax, depending for example on whether you&#39;re deploying traffic using `sureRoute` or `tieredDistribution`: This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorReturnCacheStatusArgs>> returnCacheStatus() {
        return Optional.ofNullable(this.returnCacheStatus);
    }

    /**
     * Modifies the path of incoming requests to forward to the origin. This helps you offload URL-rewriting tasks to the edge to increase the origin server&#39;s performance, allows you to redirect links to different targets without changing markup, and hides your original directory structure. This behavior can be used in includes.
     * 
     */
    @Import(name="rewriteUrl")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRewriteUrlArgs> rewriteUrl;

    /**
     * @return Modifies the path of incoming requests to forward to the origin. This helps you offload URL-rewriting tasks to the edge to increase the origin server&#39;s performance, allows you to redirect links to different targets without changing markup, and hides your original directory structure. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRewriteUrlArgs>> rewriteUrl() {
        return Optional.ofNullable(this.rewriteUrl);
    }

    /**
     * This behavior is deprecated, but you should not disable or remove it if present. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    @Import(name="rumCustom")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRumCustomArgs> rumCustom;

    /**
     * @return This behavior is deprecated, but you should not disable or remove it if present. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorRumCustomArgs>> rumCustom() {
        return Optional.ofNullable(this.rumCustom);
    }

    /**
     * Configures how the Software as a Service feature identifies `customers`, `applications`, and `users`. A different set of options is available for each type of targeted request, each enabled with the `action`-suffixed option. In each case, you can use `PATH`, `COOKIE`, `QUERY_STRING`, or `HOSTNAME` components as identifiers, or `disable` the SaaS behavior for certain targets. If you rely on a `HOSTNAME`, you also have the option of specifying a `CNAME chain` rather than an individual hostname. The various options suffixed `regex` and `replace` subsequently remove the identifier from the request. This behavior requires a sibling `origin` behavior whose `originType` option is set to `SAAS_DYNAMIC_ORIGIN`. This behavior cannot be used in includes.
     * 
     */
    @Import(name="saasDefinitions")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSaasDefinitionsArgs> saasDefinitions;

    /**
     * @return Configures how the Software as a Service feature identifies `customers`, `applications`, and `users`. A different set of options is available for each type of targeted request, each enabled with the `action`-suffixed option. In each case, you can use `PATH`, `COOKIE`, `QUERY_STRING`, or `HOSTNAME` components as identifiers, or `disable` the SaaS behavior for certain targets. If you rely on a `HOSTNAME`, you also have the option of specifying a `CNAME chain` rather than an individual hostname. The various options suffixed `regex` and `replace` subsequently remove the identifier from the request. This behavior requires a sibling `origin` behavior whose `originType` option is set to `SAAS_DYNAMIC_ORIGIN`. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSaasDefinitionsArgs>> saasDefinitions() {
        return Optional.ofNullable(this.saasDefinitions);
    }

    /**
     * If you use the Salesforce Commerce Cloud platform for your origin content, this behavior allows your edge content managed by Akamai to contact directly to origin. This behavior cannot be used in includes.
     * 
     */
    @Import(name="salesForceCommerceCloudClient")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudClientArgs> salesForceCommerceCloudClient;

    /**
     * @return If you use the Salesforce Commerce Cloud platform for your origin content, this behavior allows your edge content managed by Akamai to contact directly to origin. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudClientArgs>> salesForceCommerceCloudClient() {
        return Optional.ofNullable(this.salesForceCommerceCloudClient);
    }

    /**
     * This manages traffic between mutual customers and the Salesforce Commerce Cloud platform. This behavior cannot be used in includes.
     * 
     */
    @Import(name="salesForceCommerceCloudProvider")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderArgs> salesForceCommerceCloudProvider;

    /**
     * @return This manages traffic between mutual customers and the Salesforce Commerce Cloud platform. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderArgs>> salesForceCommerceCloudProvider() {
        return Optional.ofNullable(this.salesForceCommerceCloudProvider);
    }

    /**
     * Manages host header values sent to the Salesforce Commerce Cloud platform. This behavior cannot be used in includes.
     * 
     */
    @Import(name="salesForceCommerceCloudProviderHostHeader")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderHostHeaderArgs> salesForceCommerceCloudProviderHostHeader;

    /**
     * @return Manages host header values sent to the Salesforce Commerce Cloud platform. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderHostHeaderArgs>> salesForceCommerceCloudProviderHostHeader() {
        return Optional.ofNullable(this.salesForceCommerceCloudProviderHostHeader);
    }

    /**
     * Used in conjunction with the `cachePost` behavior, this behavior allows the body of POST requests to be processed through Dynamic Content Assembly.  Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="savePostDcaProcessing")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSavePostDcaProcessingArgs> savePostDcaProcessing;

    /**
     * @return Used in conjunction with the `cachePost` behavior, this behavior allows the body of POST requests to be processed through Dynamic Content Assembly.  Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSavePostDcaProcessingArgs>> savePostDcaProcessing() {
        return Optional.ofNullable(this.savePostDcaProcessing);
    }

    /**
     * Specifies when cached content that satisfies a rule&#39;s criteria expires, optionally at repeating intervals. In addition to periodic cache flushes, you can use this behavior to minimize potential conflicts when related objects expire at different times. This behavior can be used in includes.
     * 
     */
    @Import(name="scheduleInvalidation")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorScheduleInvalidationArgs> scheduleInvalidation;

    /**
     * @return Specifies when cached content that satisfies a rule&#39;s criteria expires, optionally at repeating intervals. In addition to periodic cache flushes, you can use this behavior to minimize potential conflicts when related objects expire at different times. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorScheduleInvalidationArgs>> scheduleInvalidation() {
        return Optional.ofNullable(this.scheduleInvalidation);
    }

    /**
     * Ensures unresponsive linked JavaScript files do not prevent HTML pages from loading. This behavior cannot be used in includes.
     * 
     */
    @Import(name="scriptManagement")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorScriptManagementArgs> scriptManagement;

    /**
     * @return Ensures unresponsive linked JavaScript files do not prevent HTML pages from loading. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorScriptManagementArgs>> scriptManagement() {
        return Optional.ofNullable(this.scriptManagement);
    }

    /**
     * Validates authorization tokens at the edge server to prevent unauthorized link sharing. This behavior can be used in includes.
     * 
     */
    @Import(name="segmentedContentProtection")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtectionArgs> segmentedContentProtection;

    /**
     * @return Validates authorization tokens at the edge server to prevent unauthorized link sharing. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtectionArgs>> segmentedContentProtection() {
        return Optional.ofNullable(this.segmentedContentProtection);
    }

    /**
     * Optimizes segmented media for live or streaming delivery contexts. This behavior can be used in includes.
     * 
     */
    @Import(name="segmentedMediaOptimization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaOptimizationArgs> segmentedMediaOptimization;

    /**
     * @return Optimizes segmented media for live or streaming delivery contexts. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaOptimizationArgs>> segmentedMediaOptimization() {
        return Optional.ofNullable(this.segmentedMediaOptimization);
    }

    /**
     * Prefetches HLS and DASH media stream manifest and segment files, accelerating delivery to end users. For prefetching to work, your origin media&#39;s response needs to specify `CDN-Origin-Assist-Prefetch-Path` headers with each URL to prefetch, expressed as either a relative or absolute path. This behavior can be used in includes.
     * 
     */
    @Import(name="segmentedMediaStreamingPrefetch")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaStreamingPrefetchArgs> segmentedMediaStreamingPrefetch;

    /**
     * @return Prefetches HLS and DASH media stream manifest and segment files, accelerating delivery to end users. For prefetching to work, your origin media&#39;s response needs to specify `CDN-Origin-Assist-Prefetch-Path` headers with each URL to prefetch, expressed as either a relative or absolute path. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaStreamingPrefetchArgs>> segmentedMediaStreamingPrefetch() {
        return Optional.ofNullable(this.segmentedMediaStreamingPrefetch);
    }

    /**
     * Modify a variable to insert into subsequent fields within the rule tree.  Use this behavior to specify the predeclared `variableName` and determine from where to derive its new value. Based on this `valueSource`, you can either generate the value, extract it from some part of the incoming request, assign it from another variable (including a set of built-in system variables), or directly specify its text.  Optionally choose a `transform` function to modify the value once. See `Support for variables` for more information. This behavior can be used in includes.
     * 
     */
    @Import(name="setVariable")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSetVariableArgs> setVariable;

    /**
     * @return Modify a variable to insert into subsequent fields within the rule tree.  Use this behavior to specify the predeclared `variableName` and determine from where to derive its new value. Based on this `valueSource`, you can either generate the value, extract it from some part of the incoming request, assign it from another variable (including a set of built-in system variables), or directly specify its text.  Optionally choose a `transform` function to modify the value once. See `Support for variables` for more information. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSetVariableArgs>> setVariable() {
        return Optional.ofNullable(this.setVariable);
    }

    /**
     * This behavior simulates various error response codes. Contact Akamai Professional Services for help configuring it. This behavior can be used in includes.
     * 
     */
    @Import(name="simulateErrorCode")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSimulateErrorCodeArgs> simulateErrorCode;

    /**
     * @return This behavior simulates various error response codes. Contact Akamai Professional Services for help configuring it. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSimulateErrorCodeArgs>> simulateErrorCode() {
        return Optional.ofNullable(this.simulateErrorCode);
    }

    /**
     * This behavior implements the `Site Shield` feature, which helps prevent non-Akamai machines from contacting your origin. You get an email with a list of Akamai servers allowed to contact your origin, with which you establish an Access Control List on your firewall to prevent any other requests. This behavior cannot be used in includes.
     * 
     */
    @Import(name="siteShield")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSiteShieldArgs> siteShield;

    /**
     * @return This behavior implements the `Site Shield` feature, which helps prevent non-Akamai machines from contacting your origin. You get an email with a list of Akamai servers allowed to contact your origin, with which you establish an Access Control List on your firewall to prevent any other requests. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSiteShieldArgs>> siteShield() {
        return Optional.ofNullable(this.siteShield);
    }

    /**
     * This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
     * 
     */
    @Import(name="standardTlsMigration")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationArgs> standardTlsMigration;

    /**
     * @return This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationArgs>> standardTlsMigration() {
        return Optional.ofNullable(this.standardTlsMigration);
    }

    /**
     * This behavior is deprecated, but you should not disable or remove it if present. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    @Import(name="standardTlsMigrationOverride")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationOverrideArgs> standardTlsMigrationOverride;

    /**
     * @return This behavior is deprecated, but you should not disable or remove it if present. This behavior is for internal usage only. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationOverrideArgs>> standardTlsMigrationOverride() {
        return Optional.ofNullable(this.standardTlsMigrationOverride);
    }

    /**
     * This behavior specifies how the edge servers should handle requests containing improperly formatted or invalid headers that don’t comply with `RFC 9110`. This behavior can be used in includes.
     * 
     */
    @Import(name="strictHeaderParsing")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorStrictHeaderParsingArgs> strictHeaderParsing;

    /**
     * @return This behavior specifies how the edge servers should handle requests containing improperly formatted or invalid headers that don’t comply with `RFC 9110`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorStrictHeaderParsingArgs>> strictHeaderParsing() {
        return Optional.ofNullable(this.strictHeaderParsing);
    }

    /**
     * When positioned in a property&#39;s top-level default rule, enables various `Cloud Embed` features that allow you to leverage Akamai&#39;s CDN architecture for your own subcustomers.  This behavior&#39;s options allow you to use Cloud Embed to configure your subcustomers&#39; content.  Once enabled, you can use the `Akamai Cloud Embed API` (ACE) to assign subcustomers to this base configuration, and to customize policies for them.  See also the `dynamicWebContent` behavior to configure subcustomers&#39; dynamic web content. This behavior cannot be used in includes.
     * 
     */
    @Import(name="subCustomer")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSubCustomerArgs> subCustomer;

    /**
     * @return When positioned in a property&#39;s top-level default rule, enables various `Cloud Embed` features that allow you to leverage Akamai&#39;s CDN architecture for your own subcustomers.  This behavior&#39;s options allow you to use Cloud Embed to configure your subcustomers&#39; content.  Once enabled, you can use the `Akamai Cloud Embed API` (ACE) to assign subcustomers to this base configuration, and to customize policies for them.  See also the `dynamicWebContent` behavior to configure subcustomers&#39; dynamic web content. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSubCustomerArgs>> subCustomer() {
        return Optional.ofNullable(this.subCustomer);
    }

    /**
     * The `SureRoute` feature continually tests different routes between origin and edge servers to identify the optimal path. By default, it conducts `races` to identify alternative paths to use in case of a transmission failure. These races increase origin traffic slightly. This behavior cannot be used in includes.
     * 
     */
    @Import(name="sureRoute")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSureRouteArgs> sureRoute;

    /**
     * @return The `SureRoute` feature continually tests different routes between origin and edge servers to identify the optimal path. By default, it conducts `races` to identify alternative paths to use in case of a transmission failure. These races increase origin traffic slightly. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorSureRouteArgs>> sureRoute() {
        return Optional.ofNullable(this.sureRoute);
    }

    /**
     * This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
     * 
     */
    @Import(name="tcpOptimization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTcpOptimizationArgs> tcpOptimization;

    /**
     * @return This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorTcpOptimizationArgs>> tcpOptimization() {
        return Optional.ofNullable(this.tcpOptimization);
    }

    /**
     * Allows IBM Tealeaf Customer Experience on Cloud to record HTTPS requests and responses for Akamai-enabled properties. Recorded data becomes available in your IBM Tealeaf account. This behavior cannot be used in includes.
     * 
     */
    @Import(name="teaLeaf")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTeaLeafArgs> teaLeaf;

    /**
     * @return Allows IBM Tealeaf Customer Experience on Cloud to record HTTPS requests and responses for Akamai-enabled properties. Recorded data becomes available in your IBM Tealeaf account. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorTeaLeafArgs>> teaLeaf() {
        return Optional.ofNullable(this.teaLeaf);
    }

    /**
     * This behavior allows Akamai edge servers to retrieve cached content from other Akamai servers, rather than directly from the origin. These interim `parent` servers in the `cache hierarchy` (`CH`) are positioned close to the origin, and fall along the path from the origin to the edge server. Tiered Distribution typically reduces the origin server&#39;s load, and reduces the time it takes for edge servers to refresh content. This behavior cannot be used in includes.
     * 
     */
    @Import(name="tieredDistribution")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionArgs> tieredDistribution;

    /**
     * @return This behavior allows Akamai edge servers to retrieve cached content from other Akamai servers, rather than directly from the origin. These interim `parent` servers in the `cache hierarchy` (`CH`) are positioned close to the origin, and fall along the path from the origin to the edge server. Tiered Distribution typically reduces the origin server&#39;s load, and reduces the time it takes for edge servers to refresh content. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionArgs>> tieredDistribution() {
        return Optional.ofNullable(this.tieredDistribution);
    }

    /**
     * This behavior allows Akamai edge servers to retrieve cached content from other Akamai servers, rather than directly from the origin. These interim `parent` servers in the `cache hierarchy` (`CH`) are positioned close to the origin, and fall along the path from the origin to the edge server. Tiered Distribution typically reduces the origin server&#39;s load, and reduces the time it takes for edge servers to refresh content.  This advanced behavior provides a wider set of options than `tieredDistribution`. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="tieredDistributionAdvanced")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionAdvancedArgs> tieredDistributionAdvanced;

    /**
     * @return This behavior allows Akamai edge servers to retrieve cached content from other Akamai servers, rather than directly from the origin. These interim `parent` servers in the `cache hierarchy` (`CH`) are positioned close to the origin, and fall along the path from the origin to the edge server. Tiered Distribution typically reduces the origin server&#39;s load, and reduces the time it takes for edge servers to refresh content.  This advanced behavior provides a wider set of options than `tieredDistribution`. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionAdvancedArgs>> tieredDistributionAdvanced() {
        return Optional.ofNullable(this.tieredDistributionAdvanced);
    }

    /**
     * With Tiered Distribution, Akamai edge servers retrieve cached content from other Akamai servers, rather than directly from the origin. This behavior sets custom Tiered Distribution maps (TD0) and migrates TD1 maps configured with `advanced features` to Cloud Wrapper. You need to enable `cloudWrapper` within the same rule. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    @Import(name="tieredDistributionCustomization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionCustomizationArgs> tieredDistributionCustomization;

    /**
     * @return With Tiered Distribution, Akamai edge servers retrieve cached content from other Akamai servers, rather than directly from the origin. This behavior sets custom Tiered Distribution maps (TD0) and migrates TD1 maps configured with `advanced features` to Cloud Wrapper. You need to enable `cloudWrapper` within the same rule. This behavior is for internal usage only. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionCustomizationArgs>> tieredDistributionCustomization() {
        return Optional.ofNullable(this.tieredDistributionCustomization);
    }

    /**
     * Sets the HTTP connect timeout. This behavior can be used in includes.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTimeoutArgs> timeout;

    /**
     * @return Sets the HTTP connect timeout. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorTimeoutArgs>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    /**
     * This behavior allows you to extract unique identifier (UID) values from live traffic, for use in OTA applications. Note that you are responsible for maintaining the security of any data that may identify individual users. This behavior cannot be used in includes.
     * 
     */
    @Import(name="uidConfiguration")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorUidConfigurationArgs> uidConfiguration;

    /**
     * @return This behavior allows you to extract unique identifier (UID) values from live traffic, for use in OTA applications. Note that you are responsible for maintaining the security of any data that may identify individual users. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorUidConfigurationArgs>> uidConfiguration() {
        return Optional.ofNullable(this.uidConfiguration);
    }

    /**
     * Instructs edge servers to compare the request&#39;s `ETag` header with that of the cached object. If they differ, the edge server sends a new copy of the object. This validation occurs in addition to the default validation of `Last-Modified` and `If-Modified-Since` headers. This behavior can be used in includes.
     * 
     */
    @Import(name="validateEntityTag")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorValidateEntityTagArgs> validateEntityTag;

    /**
     * @return Instructs edge servers to compare the request&#39;s `ETag` header with that of the cached object. If they differ, the edge server sends a new copy of the object. This validation occurs in addition to the default validation of `Last-Modified` and `If-Modified-Since` headers. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorValidateEntityTagArgs>> validateEntityTag() {
        return Optional.ofNullable(this.validateEntityTag);
    }

    /**
     * This behavior allows you to use JSON Web Tokens (JWT) to verify requests. This behavior can be used in includes.
     * 
     */
    @Import(name="verifyJsonWebToken")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs> verifyJsonWebToken;

    /**
     * @return This behavior allows you to use JSON Web Tokens (JWT) to verify requests. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs>> verifyJsonWebToken() {
        return Optional.ofNullable(this.verifyJsonWebToken);
    }

    /**
     * This behavior allows you to use JSON web tokens (JWT) to verify requests for use in implementing `IoT Edge Connect`, which you use the `dcp` behavior to configure. You can specify the location in a request to pass a JSON web token (JWT), collections of public keys to verify the integrity of this token, and specific claims to extract from it. Use the `verifyJsonWebToken` behavior for other JWT validation. This behavior can be used in includes.
     * 
     */
    @Import(name="verifyJsonWebTokenForDcp")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenForDcpArgs> verifyJsonWebTokenForDcp;

    /**
     * @return This behavior allows you to use JSON web tokens (JWT) to verify requests for use in implementing `IoT Edge Connect`, which you use the `dcp` behavior to configure. You can specify the location in a request to pass a JSON web token (JWT), collections of public keys to verify the integrity of this token, and specific claims to extract from it. Use the `verifyJsonWebToken` behavior for other JWT validation. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenForDcpArgs>> verifyJsonWebTokenForDcp() {
        return Optional.ofNullable(this.verifyJsonWebTokenForDcp);
    }

    /**
     * Verifies Auth 2.0 tokens. This behavior can be used in includes.
     * 
     */
    @Import(name="verifyTokenAuthorization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVerifyTokenAuthorizationArgs> verifyTokenAuthorization;

    /**
     * @return Verifies Auth 2.0 tokens. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorVerifyTokenAuthorizationArgs>> verifyTokenAuthorization() {
        return Optional.ofNullable(this.verifyTokenAuthorization);
    }

    /**
     * This behavior helps you maintain business continuity for dynamic applications in high-demand situations such as flash sales. It decreases abandonment by providing a user-friendly waiting room experience. FIFO (First-in First-out) is a request processing mechanism that prioritizes the first requests that enter the waiting room to send them first to the origin. Users can see both their estimated arrival time and position in the line. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Virtual Waitig Room within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
     * 
     */
    @Import(name="virtualWaitingRoom")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomArgs> virtualWaitingRoom;

    /**
     * @return This behavior helps you maintain business continuity for dynamic applications in high-demand situations such as flash sales. It decreases abandonment by providing a user-friendly waiting room experience. FIFO (First-in First-out) is a request processing mechanism that prioritizes the first requests that enter the waiting room to send them first to the origin. Users can see both their estimated arrival time and position in the line. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Virtual Waitig Room within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomArgs>> virtualWaitingRoom() {
        return Optional.ofNullable(this.virtualWaitingRoom);
    }

    /**
     * This behavior allows you to configure the `virtualWaitingRoom` behavior with EdgeWorkers for extended scalability and customization. This behavior cannot be used in includes.
     * 
     */
    @Import(name="virtualWaitingRoomWithEdgeWorkers")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomWithEdgeWorkersArgs> virtualWaitingRoomWithEdgeWorkers;

    /**
     * @return This behavior allows you to configure the `virtualWaitingRoom` behavior with EdgeWorkers for extended scalability and customization. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomWithEdgeWorkersArgs>> virtualWaitingRoomWithEdgeWorkers() {
        return Optional.ofNullable(this.virtualWaitingRoomWithEdgeWorkers);
    }

    /**
     * The `Visitor Prioritization Cloudlet` decreases abandonment by providing a user-friendly waiting room experience.  With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Visitor Prioritization within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically.  To serve non-HTML API content such as JSON blocks, see the `apiPrioritization` behavior. This behavior cannot be used in includes.
     * 
     */
    @Import(name="visitorPrioritization")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationArgs> visitorPrioritization;

    /**
     * @return The `Visitor Prioritization Cloudlet` decreases abandonment by providing a user-friendly waiting room experience.  With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Visitor Prioritization within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically.  To serve non-HTML API content such as JSON blocks, see the `apiPrioritization` behavior. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationArgs>> visitorPrioritization() {
        return Optional.ofNullable(this.visitorPrioritization);
    }

    /**
     * (**BETA**) The `Visitor Prioritization Cloudlet (FIFO)` decreases abandonment by providing a user-friendly waiting room experience. FIFO (First-in First-out) is a fair request processing mechanism, which prioritizes the first requests that enter the waiting room to send them first to the origin. Users can see both their estimated arrival time and position in the line. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Visitor Prioritization (FIFO) within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. To serve non-HTML API content such as JSON blocks, see the `apiPrioritization` behavior. This behavior cannot be used in includes.
     * 
     */
    @Import(name="visitorPrioritizationFifo")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoArgs> visitorPrioritizationFifo;

    /**
     * @return (**BETA**) The `Visitor Prioritization Cloudlet (FIFO)` decreases abandonment by providing a user-friendly waiting room experience. FIFO (First-in First-out) is a fair request processing mechanism, which prioritizes the first requests that enter the waiting room to send them first to the origin. Users can see both their estimated arrival time and position in the line. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Visitor Prioritization (FIFO) within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. To serve non-HTML API content such as JSON blocks, see the `apiPrioritization` behavior. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoArgs>> visitorPrioritizationFifo() {
        return Optional.ofNullable(this.visitorPrioritizationFifo);
    }

    /**
     * This behavior cannot be used in includes.
     * 
     */
    @Import(name="visitorPrioritizationFifoStandalone")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoStandaloneArgs> visitorPrioritizationFifoStandalone;

    /**
     * @return This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoStandaloneArgs>> visitorPrioritizationFifoStandalone() {
        return Optional.ofNullable(this.visitorPrioritizationFifoStandalone);
    }

    /**
     * Adds watermarking for each valid user&#39;s content. Content segments are delivered from different sources using a pattern unique to each user, based on a watermarking token included in each request. If your content is pirated or redistributed, you can forensically analyze the segments to extract the pattern, and identify the user who leaked the content. This behavior can be used in includes.
     * 
     */
    @Import(name="watermarking")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorWatermarkingArgs> watermarking;

    /**
     * @return Adds watermarking for each valid user&#39;s content. Content segments are delivered from different sources using a pattern unique to each user, based on a watermarking token included in each request. If your content is pirated or redistributed, you can forensically analyze the segments to extract the pattern, and identify the user who leaked the content. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorWatermarkingArgs>> watermarking() {
        return Optional.ofNullable(this.watermarking);
    }

    /**
     * This behavior implements a suite of security features that blocks threatening HTTP and HTTPS requests. Use it as your primary firewall, or in addition to existing security measures.  Only one referenced configuration is allowed per property, so this behavior typically belongs as part of its default rule. This behavior cannot be used in includes.
     * 
     */
    @Import(name="webApplicationFirewall")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewallArgs> webApplicationFirewall;

    /**
     * @return This behavior implements a suite of security features that blocks threatening HTTP and HTTPS requests. Use it as your primary firewall, or in addition to existing security measures.  Only one referenced configuration is allowed per property, so this behavior typically belongs as part of its default rule. This behavior cannot be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewallArgs>> webApplicationFirewall() {
        return Optional.ofNullable(this.webApplicationFirewall);
    }

    /**
     * The WebSocket protocol allows web applications real-time bidirectional communication between clients and servers. This behavior can be used in includes.
     * 
     */
    @Import(name="webSockets")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorWebSocketsArgs> webSockets;

    /**
     * @return The WebSocket protocol allows web applications real-time bidirectional communication between clients and servers. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorWebSocketsArgs>> webSockets() {
        return Optional.ofNullable(this.webSockets);
    }

    /**
     * Web-based Distributed Authoring and Versioning (WebDAV) is a set of extensions to the HTTP protocol that allows users to collaboratively edit and manage files on remote web servers. This behavior enables WebDAV, and provides support for the following additional request methods: PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, and UNLOCK. To apply this behavior, you need to match on a `requestMethod`. This behavior can be used in includes.
     * 
     */
    @Import(name="webdav")
    private @Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorWebdavArgs> webdav;

    /**
     * @return Web-based Distributed Authoring and Versioning (WebDAV) is a set of extensions to the HTTP protocol that allows users to collaboratively edit and manage files on remote web servers. This behavior enables WebDAV, and provides support for the following additional request methods: PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, and UNLOCK. To apply this behavior, you need to match on a `requestMethod`. This behavior can be used in includes.
     * 
     */
    public Optional<Output<GetPropertyRulesBuilderRulesV20230530BehaviorWebdavArgs>> webdav() {
        return Optional.ofNullable(this.webdav);
    }

    private GetPropertyRulesBuilderRulesV20230530BehaviorArgs() {}

    private GetPropertyRulesBuilderRulesV20230530BehaviorArgs(GetPropertyRulesBuilderRulesV20230530BehaviorArgs $) {
        this.adScalerCircuitBreaker = $.adScalerCircuitBreaker;
        this.adaptiveAcceleration = $.adaptiveAcceleration;
        this.adaptiveImageCompression = $.adaptiveImageCompression;
        this.advanced = $.advanced;
        this.aggregatedReporting = $.aggregatedReporting;
        this.akamaizer = $.akamaizer;
        this.akamaizerTag = $.akamaizerTag;
        this.allHttpInCacheHierarchy = $.allHttpInCacheHierarchy;
        this.allowCloudletsOrigins = $.allowCloudletsOrigins;
        this.allowDelete = $.allowDelete;
        this.allowHttpsCacheKeySharing = $.allowHttpsCacheKeySharing;
        this.allowHttpsDowngrade = $.allowHttpsDowngrade;
        this.allowOptions = $.allowOptions;
        this.allowPatch = $.allowPatch;
        this.allowPost = $.allowPost;
        this.allowPut = $.allowPut;
        this.allowTransferEncoding = $.allowTransferEncoding;
        this.altSvcHeader = $.altSvcHeader;
        this.apiPrioritization = $.apiPrioritization;
        this.applicationLoadBalancer = $.applicationLoadBalancer;
        this.audienceSegmentation = $.audienceSegmentation;
        this.autoDomainValidation = $.autoDomainValidation;
        this.baseDirectory = $.baseDirectory;
        this.bossBeaconing = $.bossBeaconing;
        this.breadcrumbs = $.breadcrumbs;
        this.breakConnection = $.breakConnection;
        this.brotli = $.brotli;
        this.cacheError = $.cacheError;
        this.cacheId = $.cacheId;
        this.cacheKeyIgnoreCase = $.cacheKeyIgnoreCase;
        this.cacheKeyQueryParams = $.cacheKeyQueryParams;
        this.cacheKeyRewrite = $.cacheKeyRewrite;
        this.cachePost = $.cachePost;
        this.cacheRedirect = $.cacheRedirect;
        this.cacheTag = $.cacheTag;
        this.cacheTagVisible = $.cacheTagVisible;
        this.caching = $.caching;
        this.centralAuthorization = $.centralAuthorization;
        this.chaseRedirects = $.chaseRedirects;
        this.clientCharacteristics = $.clientCharacteristics;
        this.cloudInterconnects = $.cloudInterconnects;
        this.cloudWrapper = $.cloudWrapper;
        this.cloudWrapperAdvanced = $.cloudWrapperAdvanced;
        this.commonMediaClientData = $.commonMediaClientData;
        this.conditionalOrigin = $.conditionalOrigin;
        this.constructResponse = $.constructResponse;
        this.contentCharacteristics = $.contentCharacteristics;
        this.contentCharacteristicsAmd = $.contentCharacteristicsAmd;
        this.contentCharacteristicsDd = $.contentCharacteristicsDd;
        this.contentCharacteristicsWsdLargeFile = $.contentCharacteristicsWsdLargeFile;
        this.contentCharacteristicsWsdLive = $.contentCharacteristicsWsdLive;
        this.contentCharacteristicsWsdVod = $.contentCharacteristicsWsdVod;
        this.contentPrePosition = $.contentPrePosition;
        this.contentTargetingProtection = $.contentTargetingProtection;
        this.corsSupport = $.corsSupport;
        this.cpCode = $.cpCode;
        this.customBehavior = $.customBehavior;
        this.datastream = $.datastream;
        this.dcp = $.dcp;
        this.dcpAuthHmacTransformation = $.dcpAuthHmacTransformation;
        this.dcpAuthRegexTransformation = $.dcpAuthRegexTransformation;
        this.dcpAuthSubstringTransformation = $.dcpAuthSubstringTransformation;
        this.dcpAuthVariableExtractor = $.dcpAuthVariableExtractor;
        this.dcpDefaultAuthzGroups = $.dcpDefaultAuthzGroups;
        this.dcpDevRelations = $.dcpDevRelations;
        this.dcpRealTimeAuth = $.dcpRealTimeAuth;
        this.deliveryReceipt = $.deliveryReceipt;
        this.denyAccess = $.denyAccess;
        this.denyDirectFailoverAccess = $.denyDirectFailoverAccess;
        this.deviceCharacteristicCacheId = $.deviceCharacteristicCacheId;
        this.deviceCharacteristicHeader = $.deviceCharacteristicHeader;
        this.dnsAsyncRefresh = $.dnsAsyncRefresh;
        this.dnsPrefresh = $.dnsPrefresh;
        this.downgradeProtocol = $.downgradeProtocol;
        this.downloadCompleteMarker = $.downloadCompleteMarker;
        this.downloadNotification = $.downloadNotification;
        this.downstreamCache = $.downstreamCache;
        this.dynamicThroughtputOptimization = $.dynamicThroughtputOptimization;
        this.dynamicThroughtputOptimizationOverride = $.dynamicThroughtputOptimizationOverride;
        this.dynamicWebContent = $.dynamicWebContent;
        this.ecmsBulkUpload = $.ecmsBulkUpload;
        this.ecmsDatabase = $.ecmsDatabase;
        this.ecmsDataset = $.ecmsDataset;
        this.ecmsObjectKey = $.ecmsObjectKey;
        this.edgeConnect = $.edgeConnect;
        this.edgeLoadBalancingAdvanced = $.edgeLoadBalancingAdvanced;
        this.edgeLoadBalancingDataCenter = $.edgeLoadBalancingDataCenter;
        this.edgeLoadBalancingOrigin = $.edgeLoadBalancingOrigin;
        this.edgeOriginAuthorization = $.edgeOriginAuthorization;
        this.edgeRedirector = $.edgeRedirector;
        this.edgeScape = $.edgeScape;
        this.edgeSideIncludes = $.edgeSideIncludes;
        this.edgeWorker = $.edgeWorker;
        this.enhancedAkamaiProtocol = $.enhancedAkamaiProtocol;
        this.enhancedProxyDetection = $.enhancedProxyDetection;
        this.epdForwardHeaderEnrichment = $.epdForwardHeaderEnrichment;
        this.failAction = $.failAction;
        this.failoverBotManagerFeatureCompatibility = $.failoverBotManagerFeatureCompatibility;
        this.fastInvalidate = $.fastInvalidate;
        this.firstPartyMarketing = $.firstPartyMarketing;
        this.firstPartyMarketingPlus = $.firstPartyMarketingPlus;
        this.forwardRewrite = $.forwardRewrite;
        this.g2oheader = $.g2oheader;
        this.globalRequestNumber = $.globalRequestNumber;
        this.graphqlCaching = $.graphqlCaching;
        this.gzipResponse = $.gzipResponse;
        this.hdDataAdvanced = $.hdDataAdvanced;
        this.healthDetection = $.healthDetection;
        this.hsafEipBinding = $.hsafEipBinding;
        this.http2 = $.http2;
        this.http3 = $.http3;
        this.httpStrictTransportSecurity = $.httpStrictTransportSecurity;
        this.httpToHttpsUpgrade = $.httpToHttpsUpgrade;
        this.imOverride = $.imOverride;
        this.imageAndVideoManager = $.imageAndVideoManager;
        this.imageManager = $.imageManager;
        this.imageManagerVideo = $.imageManagerVideo;
        this.include = $.include;
        this.instant = $.instant;
        this.instantConfig = $.instantConfig;
        this.largeFileOptimization = $.largeFileOptimization;
        this.largeFileOptimizationAdvanced = $.largeFileOptimizationAdvanced;
        this.limitBitRate = $.limitBitRate;
        this.logCustom = $.logCustom;
        this.mPulse = $.mPulse;
        this.manifestPersonalization = $.manifestPersonalization;
        this.manifestRerouting = $.manifestRerouting;
        this.manualServerPush = $.manualServerPush;
        this.mediaAcceleration = $.mediaAcceleration;
        this.mediaAccelerationQuicOptout = $.mediaAccelerationQuicOptout;
        this.mediaClient = $.mediaClient;
        this.mediaFileRetrievalOptimization = $.mediaFileRetrievalOptimization;
        this.mediaOriginFailover = $.mediaOriginFailover;
        this.metadataCaching = $.metadataCaching;
        this.mobileSdkPerformance = $.mobileSdkPerformance;
        this.modifyIncomingRequestHeader = $.modifyIncomingRequestHeader;
        this.modifyIncomingResponseHeader = $.modifyIncomingResponseHeader;
        this.modifyOutgoingRequestHeader = $.modifyOutgoingRequestHeader;
        this.modifyOutgoingResponseHeader = $.modifyOutgoingResponseHeader;
        this.modifyViaHeader = $.modifyViaHeader;
        this.origin = $.origin;
        this.originCharacteristics = $.originCharacteristics;
        this.originCharacteristicsWsd = $.originCharacteristicsWsd;
        this.originFailureRecoveryMethod = $.originFailureRecoveryMethod;
        this.originFailureRecoveryPolicy = $.originFailureRecoveryPolicy;
        this.originIpAcl = $.originIpAcl;
        this.persistentClientConnection = $.persistentClientConnection;
        this.persistentConnection = $.persistentConnection;
        this.personallyIdentifiableInformation = $.personallyIdentifiableInformation;
        this.phasedRelease = $.phasedRelease;
        this.preconnect = $.preconnect;
        this.predictiveContentDelivery = $.predictiveContentDelivery;
        this.predictivePrefetching = $.predictivePrefetching;
        this.prefetch = $.prefetch;
        this.prefetchable = $.prefetchable;
        this.prefreshCache = $.prefreshCache;
        this.quality = $.quality;
        this.quicBeta = $.quicBeta;
        this.randomSeek = $.randomSeek;
        this.rapid = $.rapid;
        this.readTimeout = $.readTimeout;
        this.realTimeReporting = $.realTimeReporting;
        this.realUserMonitoring = $.realUserMonitoring;
        this.redirect = $.redirect;
        this.redirectplus = $.redirectplus;
        this.refererChecking = $.refererChecking;
        this.removeQueryParameter = $.removeQueryParameter;
        this.removeVary = $.removeVary;
        this.report = $.report;
        this.requestControl = $.requestControl;
        this.requestTypeMarker = $.requestTypeMarker;
        this.resourceOptimizer = $.resourceOptimizer;
        this.resourceOptimizerExtendedCompatibility = $.resourceOptimizerExtendedCompatibility;
        this.responseCode = $.responseCode;
        this.responseCookie = $.responseCookie;
        this.restrictObjectCaching = $.restrictObjectCaching;
        this.returnCacheStatus = $.returnCacheStatus;
        this.rewriteUrl = $.rewriteUrl;
        this.rumCustom = $.rumCustom;
        this.saasDefinitions = $.saasDefinitions;
        this.salesForceCommerceCloudClient = $.salesForceCommerceCloudClient;
        this.salesForceCommerceCloudProvider = $.salesForceCommerceCloudProvider;
        this.salesForceCommerceCloudProviderHostHeader = $.salesForceCommerceCloudProviderHostHeader;
        this.savePostDcaProcessing = $.savePostDcaProcessing;
        this.scheduleInvalidation = $.scheduleInvalidation;
        this.scriptManagement = $.scriptManagement;
        this.segmentedContentProtection = $.segmentedContentProtection;
        this.segmentedMediaOptimization = $.segmentedMediaOptimization;
        this.segmentedMediaStreamingPrefetch = $.segmentedMediaStreamingPrefetch;
        this.setVariable = $.setVariable;
        this.simulateErrorCode = $.simulateErrorCode;
        this.siteShield = $.siteShield;
        this.standardTlsMigration = $.standardTlsMigration;
        this.standardTlsMigrationOverride = $.standardTlsMigrationOverride;
        this.strictHeaderParsing = $.strictHeaderParsing;
        this.subCustomer = $.subCustomer;
        this.sureRoute = $.sureRoute;
        this.tcpOptimization = $.tcpOptimization;
        this.teaLeaf = $.teaLeaf;
        this.tieredDistribution = $.tieredDistribution;
        this.tieredDistributionAdvanced = $.tieredDistributionAdvanced;
        this.tieredDistributionCustomization = $.tieredDistributionCustomization;
        this.timeout = $.timeout;
        this.uidConfiguration = $.uidConfiguration;
        this.validateEntityTag = $.validateEntityTag;
        this.verifyJsonWebToken = $.verifyJsonWebToken;
        this.verifyJsonWebTokenForDcp = $.verifyJsonWebTokenForDcp;
        this.verifyTokenAuthorization = $.verifyTokenAuthorization;
        this.virtualWaitingRoom = $.virtualWaitingRoom;
        this.virtualWaitingRoomWithEdgeWorkers = $.virtualWaitingRoomWithEdgeWorkers;
        this.visitorPrioritization = $.visitorPrioritization;
        this.visitorPrioritizationFifo = $.visitorPrioritizationFifo;
        this.visitorPrioritizationFifoStandalone = $.visitorPrioritizationFifoStandalone;
        this.watermarking = $.watermarking;
        this.webApplicationFirewall = $.webApplicationFirewall;
        this.webSockets = $.webSockets;
        this.webdav = $.webdav;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20230530BehaviorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20230530BehaviorArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20230530BehaviorArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20230530BehaviorArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20230530BehaviorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adScalerCircuitBreaker This behavior works with `manifestRerouting` to provide the scale and reliability of Akamai network while simultaneously allowing third party partners to modify the requested media content with value-added features. The `adScalerCircuitBreaker` behavior specifies the fallback action in case the technology partner encounters errors and can&#39;t modify the requested media object. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder adScalerCircuitBreaker(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdScalerCircuitBreakerArgs> adScalerCircuitBreaker) {
            $.adScalerCircuitBreaker = adScalerCircuitBreaker;
            return this;
        }

        /**
         * @param adScalerCircuitBreaker This behavior works with `manifestRerouting` to provide the scale and reliability of Akamai network while simultaneously allowing third party partners to modify the requested media content with value-added features. The `adScalerCircuitBreaker` behavior specifies the fallback action in case the technology partner encounters errors and can&#39;t modify the requested media object. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder adScalerCircuitBreaker(GetPropertyRulesBuilderRulesV20230530BehaviorAdScalerCircuitBreakerArgs adScalerCircuitBreaker) {
            return adScalerCircuitBreaker(Output.of(adScalerCircuitBreaker));
        }

        /**
         * @param adaptiveAcceleration Adaptive Acceleration uses HTTP/2 server push functionality with Ion properties to pre-position content and improve the performance of HTML page loading based on real user monitoring (RUM) timing data. It also helps browsers to preconnect to content that’s likely needed for upcoming requests. To use this behavior, make sure you enable the `http2` behavior. Use the `Adaptive Acceleration API` to report on the set of assets this feature optimizes. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder adaptiveAcceleration(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAccelerationArgs> adaptiveAcceleration) {
            $.adaptiveAcceleration = adaptiveAcceleration;
            return this;
        }

        /**
         * @param adaptiveAcceleration Adaptive Acceleration uses HTTP/2 server push functionality with Ion properties to pre-position content and improve the performance of HTML page loading based on real user monitoring (RUM) timing data. It also helps browsers to preconnect to content that’s likely needed for upcoming requests. To use this behavior, make sure you enable the `http2` behavior. Use the `Adaptive Acceleration API` to report on the set of assets this feature optimizes. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder adaptiveAcceleration(GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveAccelerationArgs adaptiveAcceleration) {
            return adaptiveAcceleration(Output.of(adaptiveAcceleration));
        }

        /**
         * @param adaptiveImageCompression The Adaptive Image Compression feature compresses JPEG images depending on the requesting network&#39;s performance, thus improving response time. The behavior specifies three performance tiers based on round-trip tests: 1 for excellent, 2 for good, and 3 for poor. It assigns separate performance criteria for mobile (cellular) and non-mobile networks, which the `compressMobile` and `compressStandard` options enable independently. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder adaptiveImageCompression(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveImageCompressionArgs> adaptiveImageCompression) {
            $.adaptiveImageCompression = adaptiveImageCompression;
            return this;
        }

        /**
         * @param adaptiveImageCompression The Adaptive Image Compression feature compresses JPEG images depending on the requesting network&#39;s performance, thus improving response time. The behavior specifies three performance tiers based on round-trip tests: 1 for excellent, 2 for good, and 3 for poor. It assigns separate performance criteria for mobile (cellular) and non-mobile networks, which the `compressMobile` and `compressStandard` options enable independently. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder adaptiveImageCompression(GetPropertyRulesBuilderRulesV20230530BehaviorAdaptiveImageCompressionArgs adaptiveImageCompression) {
            return adaptiveImageCompression(Output.of(adaptiveImageCompression));
        }

        /**
         * @param advanced This specifies Akamai XML metadata. It can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder advanced(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAdvancedArgs> advanced) {
            $.advanced = advanced;
            return this;
        }

        /**
         * @param advanced This specifies Akamai XML metadata. It can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder advanced(GetPropertyRulesBuilderRulesV20230530BehaviorAdvancedArgs advanced) {
            return advanced(Output.of(advanced));
        }

        /**
         * @param aggregatedReporting Configure a custom report that collects traffic data. The data is based on one to four variables, such as `sum`, `average`, `min`, and `max`. These aggregation attributes help compile traffic data summaries. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder aggregatedReporting(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAggregatedReportingArgs> aggregatedReporting) {
            $.aggregatedReporting = aggregatedReporting;
            return this;
        }

        /**
         * @param aggregatedReporting Configure a custom report that collects traffic data. The data is based on one to four variables, such as `sum`, `average`, `min`, and `max`. These aggregation attributes help compile traffic data summaries. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder aggregatedReporting(GetPropertyRulesBuilderRulesV20230530BehaviorAggregatedReportingArgs aggregatedReporting) {
            return aggregatedReporting(Output.of(aggregatedReporting));
        }

        /**
         * @param akamaizer This allows you to run regular expression substitutions over web pages. To apply this behavior, you need to match on a `contentType`. Contact Akamai Professional Services for help configuring the Akamaizer. See also the `akamaizerTag` behavior. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder akamaizer(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAkamaizerArgs> akamaizer) {
            $.akamaizer = akamaizer;
            return this;
        }

        /**
         * @param akamaizer This allows you to run regular expression substitutions over web pages. To apply this behavior, you need to match on a `contentType`. Contact Akamai Professional Services for help configuring the Akamaizer. See also the `akamaizerTag` behavior. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder akamaizer(GetPropertyRulesBuilderRulesV20230530BehaviorAkamaizerArgs akamaizer) {
            return akamaizer(Output.of(akamaizer));
        }

        /**
         * @param akamaizerTag This specifies HTML tags and replacement rules for hostnames used in conjunction with the `akamaizer` behavior. Contact Akamai Professional Services for help configuring the Akamaizer. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder akamaizerTag(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAkamaizerTagArgs> akamaizerTag) {
            $.akamaizerTag = akamaizerTag;
            return this;
        }

        /**
         * @param akamaizerTag This specifies HTML tags and replacement rules for hostnames used in conjunction with the `akamaizer` behavior. Contact Akamai Professional Services for help configuring the Akamaizer. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder akamaizerTag(GetPropertyRulesBuilderRulesV20230530BehaviorAkamaizerTagArgs akamaizerTag) {
            return akamaizerTag(Output.of(akamaizerTag));
        }

        /**
         * @param allHttpInCacheHierarchy Allow all HTTP request methods to be used for the edge&#39;s parent servers, useful to implement features such as `Site Shield`, `SureRoute`, and Tiered Distribution. (See the `siteShield`, `sureRoute`, and `tieredDistribution` behaviors.) This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allHttpInCacheHierarchy(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllHttpInCacheHierarchyArgs> allHttpInCacheHierarchy) {
            $.allHttpInCacheHierarchy = allHttpInCacheHierarchy;
            return this;
        }

        /**
         * @param allHttpInCacheHierarchy Allow all HTTP request methods to be used for the edge&#39;s parent servers, useful to implement features such as `Site Shield`, `SureRoute`, and Tiered Distribution. (See the `siteShield`, `sureRoute`, and `tieredDistribution` behaviors.) This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allHttpInCacheHierarchy(GetPropertyRulesBuilderRulesV20230530BehaviorAllHttpInCacheHierarchyArgs allHttpInCacheHierarchy) {
            return allHttpInCacheHierarchy(Output.of(allHttpInCacheHierarchy));
        }

        /**
         * @param allowCloudletsOrigins Allows Cloudlets Origins to determine the criteria, separately from the Property Manager, under which alternate `origin` definitions are assigned. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowCloudletsOrigins(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowCloudletsOriginsArgs> allowCloudletsOrigins) {
            $.allowCloudletsOrigins = allowCloudletsOrigins;
            return this;
        }

        /**
         * @param allowCloudletsOrigins Allows Cloudlets Origins to determine the criteria, separately from the Property Manager, under which alternate `origin` definitions are assigned. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowCloudletsOrigins(GetPropertyRulesBuilderRulesV20230530BehaviorAllowCloudletsOriginsArgs allowCloudletsOrigins) {
            return allowCloudletsOrigins(Output.of(allowCloudletsOrigins));
        }

        /**
         * @param allowDelete Allow HTTP requests using the DELETE method. By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any DELETE requests pass to the origin. See also the `allowOptions`, `allowPatch`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowDelete(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowDeleteArgs> allowDelete) {
            $.allowDelete = allowDelete;
            return this;
        }

        /**
         * @param allowDelete Allow HTTP requests using the DELETE method. By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any DELETE requests pass to the origin. See also the `allowOptions`, `allowPatch`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowDelete(GetPropertyRulesBuilderRulesV20230530BehaviorAllowDeleteArgs allowDelete) {
            return allowDelete(Output.of(allowDelete));
        }

        /**
         * @param allowHttpsCacheKeySharing HTTPS cache key sharing allows HTTP requests to be served from an HTTPS cache. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowHttpsCacheKeySharing(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsCacheKeySharingArgs> allowHttpsCacheKeySharing) {
            $.allowHttpsCacheKeySharing = allowHttpsCacheKeySharing;
            return this;
        }

        /**
         * @param allowHttpsCacheKeySharing HTTPS cache key sharing allows HTTP requests to be served from an HTTPS cache. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowHttpsCacheKeySharing(GetPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsCacheKeySharingArgs allowHttpsCacheKeySharing) {
            return allowHttpsCacheKeySharing(Output.of(allowHttpsCacheKeySharing));
        }

        /**
         * @param allowHttpsDowngrade Passes HTTPS requests to origin as HTTP. This is useful when incorporating Standard TLS or Akamai&#39;s shared certificate delivery security with an origin that serves HTTP traffic. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowHttpsDowngrade(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsDowngradeArgs> allowHttpsDowngrade) {
            $.allowHttpsDowngrade = allowHttpsDowngrade;
            return this;
        }

        /**
         * @param allowHttpsDowngrade Passes HTTPS requests to origin as HTTP. This is useful when incorporating Standard TLS or Akamai&#39;s shared certificate delivery security with an origin that serves HTTP traffic. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowHttpsDowngrade(GetPropertyRulesBuilderRulesV20230530BehaviorAllowHttpsDowngradeArgs allowHttpsDowngrade) {
            return allowHttpsDowngrade(Output.of(allowHttpsDowngrade));
        }

        /**
         * @param allowOptions GET, HEAD, and OPTIONS requests are allowed by default. All other HTTP methods result in a 501 error. For full support of Cross-Origin Resource Sharing (CORS), you need to allow requests that use the OPTIONS method. If you&#39;re using the `corsSupport` behavior, do not disable OPTIONS requests. The response to an OPTIONS request is not cached, so the request always goes through the Akamai network to your origin, unless you use the `constructResponse` behavior to send responses directly from the Akamai network. See also the `allowDelete`, `allowPatch`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowOptions(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowOptionsArgs> allowOptions) {
            $.allowOptions = allowOptions;
            return this;
        }

        /**
         * @param allowOptions GET, HEAD, and OPTIONS requests are allowed by default. All other HTTP methods result in a 501 error. For full support of Cross-Origin Resource Sharing (CORS), you need to allow requests that use the OPTIONS method. If you&#39;re using the `corsSupport` behavior, do not disable OPTIONS requests. The response to an OPTIONS request is not cached, so the request always goes through the Akamai network to your origin, unless you use the `constructResponse` behavior to send responses directly from the Akamai network. See also the `allowDelete`, `allowPatch`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowOptions(GetPropertyRulesBuilderRulesV20230530BehaviorAllowOptionsArgs allowOptions) {
            return allowOptions(Output.of(allowOptions));
        }

        /**
         * @param allowPatch Allow HTTP requests using the PATCH method. By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any PATCH requests pass to the origin. See also the `allowDelete`, `allowOptions`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowPatch(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowPatchArgs> allowPatch) {
            $.allowPatch = allowPatch;
            return this;
        }

        /**
         * @param allowPatch Allow HTTP requests using the PATCH method. By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any PATCH requests pass to the origin. See also the `allowDelete`, `allowOptions`, `allowPost`, and `allowPut` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowPatch(GetPropertyRulesBuilderRulesV20230530BehaviorAllowPatchArgs allowPatch) {
            return allowPatch(Output.of(allowPatch));
        }

        /**
         * @param allowPost Allow HTTP requests using the POST method. By default, GET, HEAD, and OPTIONS requests are allowed, and POST requests are denied with 403 error. All other methods result in a 501 error. See also the `allowDelete`, `allowOptions`, `allowPatch`, and `allowPut` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowPost(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowPostArgs> allowPost) {
            $.allowPost = allowPost;
            return this;
        }

        /**
         * @param allowPost Allow HTTP requests using the POST method. By default, GET, HEAD, and OPTIONS requests are allowed, and POST requests are denied with 403 error. All other methods result in a 501 error. See also the `allowDelete`, `allowOptions`, `allowPatch`, and `allowPut` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowPost(GetPropertyRulesBuilderRulesV20230530BehaviorAllowPostArgs allowPost) {
            return allowPost(Output.of(allowPost));
        }

        /**
         * @param allowPut Allow HTTP requests using the PUT method.  By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any PUT requests pass to the origin. See also the `allowDelete`, `allowOptions`, `allowPatch`, and `allowPost` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowPut(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowPutArgs> allowPut) {
            $.allowPut = allowPut;
            return this;
        }

        /**
         * @param allowPut Allow HTTP requests using the PUT method.  By default, GET, HEAD, and OPTIONS requests are allowed, and all other methods result in a 501 error. Such content does not cache, and any PUT requests pass to the origin. See also the `allowDelete`, `allowOptions`, `allowPatch`, and `allowPost` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowPut(GetPropertyRulesBuilderRulesV20230530BehaviorAllowPutArgs allowPut) {
            return allowPut(Output.of(allowPut));
        }

        /**
         * @param allowTransferEncoding Controls whether to allow or deny Chunked Transfer Encoding (CTE) requests to pass to your origin. If your origin supports CTE, you should enable this behavior. This behavior also protects against a known issue when pairing `http2` and `webdav` behaviors within the same rule tree, in which case it&#39;s required. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowTransferEncoding(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAllowTransferEncodingArgs> allowTransferEncoding) {
            $.allowTransferEncoding = allowTransferEncoding;
            return this;
        }

        /**
         * @param allowTransferEncoding Controls whether to allow or deny Chunked Transfer Encoding (CTE) requests to pass to your origin. If your origin supports CTE, you should enable this behavior. This behavior also protects against a known issue when pairing `http2` and `webdav` behaviors within the same rule tree, in which case it&#39;s required. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder allowTransferEncoding(GetPropertyRulesBuilderRulesV20230530BehaviorAllowTransferEncodingArgs allowTransferEncoding) {
            return allowTransferEncoding(Output.of(allowTransferEncoding));
        }

        /**
         * @param altSvcHeader Sets the maximum age value for the Alternative Services (`Alt-Svc`) header. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder altSvcHeader(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAltSvcHeaderArgs> altSvcHeader) {
            $.altSvcHeader = altSvcHeader;
            return this;
        }

        /**
         * @param altSvcHeader Sets the maximum age value for the Alternative Services (`Alt-Svc`) header. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder altSvcHeader(GetPropertyRulesBuilderRulesV20230530BehaviorAltSvcHeaderArgs altSvcHeader) {
            return altSvcHeader(Output.of(altSvcHeader));
        }

        /**
         * @param apiPrioritization Enables the API Prioritization Cloudlet, which maintains continuity in user experience by serving an alternate static response when load is too high. You can configure rules using either the Cloudlets Policy Manager application or the `Cloudlets API`. Use this feature serve static API content, such as fallback JSON data.  To serve non-API HTML content, use the `visitorPrioritization` behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder apiPrioritization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationArgs> apiPrioritization) {
            $.apiPrioritization = apiPrioritization;
            return this;
        }

        /**
         * @param apiPrioritization Enables the API Prioritization Cloudlet, which maintains continuity in user experience by serving an alternate static response when load is too high. You can configure rules using either the Cloudlets Policy Manager application or the `Cloudlets API`. Use this feature serve static API content, such as fallback JSON data.  To serve non-API HTML content, use the `visitorPrioritization` behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder apiPrioritization(GetPropertyRulesBuilderRulesV20230530BehaviorApiPrioritizationArgs apiPrioritization) {
            return apiPrioritization(Output.of(apiPrioritization));
        }

        /**
         * @param applicationLoadBalancer Enables the Application Load Balancer Cloudlet, which automates load balancing based on configurable criteria. To configure this behavior, use either the Cloudlets Policy Manager or the `Cloudlets API` to set up a policy. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder applicationLoadBalancer(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerArgs> applicationLoadBalancer) {
            $.applicationLoadBalancer = applicationLoadBalancer;
            return this;
        }

        /**
         * @param applicationLoadBalancer Enables the Application Load Balancer Cloudlet, which automates load balancing based on configurable criteria. To configure this behavior, use either the Cloudlets Policy Manager or the `Cloudlets API` to set up a policy. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder applicationLoadBalancer(GetPropertyRulesBuilderRulesV20230530BehaviorApplicationLoadBalancerArgs applicationLoadBalancer) {
            return applicationLoadBalancer(Output.of(applicationLoadBalancer));
        }

        /**
         * @param audienceSegmentation Allows you to divide your users into different segments based on a persistent cookie. You can configure rules using either the Cloudlets Policy Manager application or the `Cloudlets API`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder audienceSegmentation(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentationArgs> audienceSegmentation) {
            $.audienceSegmentation = audienceSegmentation;
            return this;
        }

        /**
         * @param audienceSegmentation Allows you to divide your users into different segments based on a persistent cookie. You can configure rules using either the Cloudlets Policy Manager application or the `Cloudlets API`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder audienceSegmentation(GetPropertyRulesBuilderRulesV20230530BehaviorAudienceSegmentationArgs audienceSegmentation) {
            return audienceSegmentation(Output.of(audienceSegmentation));
        }

        /**
         * @param autoDomainValidation This behavior allows standard TLS domain validated certificates to renew automatically. Apply it after using the `Certificate Provisioning System` to request a certificate for a hostname.  To provision certificates programmatically, see the `Certificate Provisioning System API`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder autoDomainValidation(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorAutoDomainValidationArgs> autoDomainValidation) {
            $.autoDomainValidation = autoDomainValidation;
            return this;
        }

        /**
         * @param autoDomainValidation This behavior allows standard TLS domain validated certificates to renew automatically. Apply it after using the `Certificate Provisioning System` to request a certificate for a hostname.  To provision certificates programmatically, see the `Certificate Provisioning System API`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder autoDomainValidation(GetPropertyRulesBuilderRulesV20230530BehaviorAutoDomainValidationArgs autoDomainValidation) {
            return autoDomainValidation(Output.of(autoDomainValidation));
        }

        /**
         * @param baseDirectory Prefix URLs sent to the origin with a base path. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder baseDirectory(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorBaseDirectoryArgs> baseDirectory) {
            $.baseDirectory = baseDirectory;
            return this;
        }

        /**
         * @param baseDirectory Prefix URLs sent to the origin with a base path. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder baseDirectory(GetPropertyRulesBuilderRulesV20230530BehaviorBaseDirectoryArgs baseDirectory) {
            return baseDirectory(Output.of(baseDirectory));
        }

        /**
         * @param bossBeaconing Triggers diagnostic data beacons for use with BOSS, Akamai&#39;s monitoring and diagnostics system. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder bossBeaconing(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorBossBeaconingArgs> bossBeaconing) {
            $.bossBeaconing = bossBeaconing;
            return this;
        }

        /**
         * @param bossBeaconing Triggers diagnostic data beacons for use with BOSS, Akamai&#39;s monitoring and diagnostics system. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder bossBeaconing(GetPropertyRulesBuilderRulesV20230530BehaviorBossBeaconingArgs bossBeaconing) {
            return bossBeaconing(Output.of(bossBeaconing));
        }

        /**
         * @param breadcrumbs Provides per-HTTP transaction visibility into a request for content, regardless of how deep the request goes into the Akamai platform. The `Akamai-Request-BC` response header includes various data, such as network health and the location in the Akamai network used to serve content, which simplifies log review for troubleshooting. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder breadcrumbs(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorBreadcrumbsArgs> breadcrumbs) {
            $.breadcrumbs = breadcrumbs;
            return this;
        }

        /**
         * @param breadcrumbs Provides per-HTTP transaction visibility into a request for content, regardless of how deep the request goes into the Akamai platform. The `Akamai-Request-BC` response header includes various data, such as network health and the location in the Akamai network used to serve content, which simplifies log review for troubleshooting. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder breadcrumbs(GetPropertyRulesBuilderRulesV20230530BehaviorBreadcrumbsArgs breadcrumbs) {
            return breadcrumbs(Output.of(breadcrumbs));
        }

        /**
         * @param breakConnection This behavior simulates an origin connection problem, typically to test an accompanying `failAction` policy. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder breakConnection(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorBreakConnectionArgs> breakConnection) {
            $.breakConnection = breakConnection;
            return this;
        }

        /**
         * @param breakConnection This behavior simulates an origin connection problem, typically to test an accompanying `failAction` policy. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder breakConnection(GetPropertyRulesBuilderRulesV20230530BehaviorBreakConnectionArgs breakConnection) {
            return breakConnection(Output.of(breakConnection));
        }

        /**
         * @param brotli Accesses Brotli-compressed assets from your origin and caches them on edge servers. This doesn&#39;t compress resources within the content delivery network in real time. You need to set up Brotli compression separately on your origin. If a requesting client doesn&#39;t support Brotli, edge servers deliver non-Brotli resources. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder brotli(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorBrotliArgs> brotli) {
            $.brotli = brotli;
            return this;
        }

        /**
         * @param brotli Accesses Brotli-compressed assets from your origin and caches them on edge servers. This doesn&#39;t compress resources within the content delivery network in real time. You need to set up Brotli compression separately on your origin. If a requesting client doesn&#39;t support Brotli, edge servers deliver non-Brotli resources. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder brotli(GetPropertyRulesBuilderRulesV20230530BehaviorBrotliArgs brotli) {
            return brotli(Output.of(brotli));
        }

        /**
         * @param cacheError Caches the origin&#39;s error responses to decrease server load. Applies for 10 seconds by default to the following HTTP codes: `204`, `305`, `404`, `405`, `501`, `502`, `503`, `504`, and `505`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheError(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheErrorArgs> cacheError) {
            $.cacheError = cacheError;
            return this;
        }

        /**
         * @param cacheError Caches the origin&#39;s error responses to decrease server load. Applies for 10 seconds by default to the following HTTP codes: `204`, `305`, `404`, `405`, `501`, `502`, `503`, `504`, and `505`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheError(GetPropertyRulesBuilderRulesV20230530BehaviorCacheErrorArgs cacheError) {
            return cacheError(Output.of(cacheError));
        }

        /**
         * @param cacheId Controls which query parameters, headers, and cookies are included in or excluded from the cache key identifier. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheId(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheIdArgs> cacheId) {
            $.cacheId = cacheId;
            return this;
        }

        /**
         * @param cacheId Controls which query parameters, headers, and cookies are included in or excluded from the cache key identifier. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheId(GetPropertyRulesBuilderRulesV20230530BehaviorCacheIdArgs cacheId) {
            return cacheId(Output.of(cacheId));
        }

        /**
         * @param cacheKeyIgnoreCase By default, cache keys are generated under the assumption that path and filename components are case-sensitive, so that `File.html` and `file.html` use separate cache keys. Enabling this behavior forces URL components whose case varies to resolve to the same cache key. Enable this behavior if your origin server is already case-insensitive, such as those based on Microsoft IIS. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheKeyIgnoreCase(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyIgnoreCaseArgs> cacheKeyIgnoreCase) {
            $.cacheKeyIgnoreCase = cacheKeyIgnoreCase;
            return this;
        }

        /**
         * @param cacheKeyIgnoreCase By default, cache keys are generated under the assumption that path and filename components are case-sensitive, so that `File.html` and `file.html` use separate cache keys. Enabling this behavior forces URL components whose case varies to resolve to the same cache key. Enable this behavior if your origin server is already case-insensitive, such as those based on Microsoft IIS. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheKeyIgnoreCase(GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyIgnoreCaseArgs cacheKeyIgnoreCase) {
            return cacheKeyIgnoreCase(Output.of(cacheKeyIgnoreCase));
        }

        /**
         * @param cacheKeyQueryParams By default, cache keys are formed as URLs with full query strings. This behavior allows you to consolidate cached objects based on specified sets of query parameters. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheKeyQueryParams(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyQueryParamsArgs> cacheKeyQueryParams) {
            $.cacheKeyQueryParams = cacheKeyQueryParams;
            return this;
        }

        /**
         * @param cacheKeyQueryParams By default, cache keys are formed as URLs with full query strings. This behavior allows you to consolidate cached objects based on specified sets of query parameters. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheKeyQueryParams(GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyQueryParamsArgs cacheKeyQueryParams) {
            return cacheKeyQueryParams(Output.of(cacheKeyQueryParams));
        }

        /**
         * @param cacheKeyRewrite This behavior rewrites a default cache key&#39;s path. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheKeyRewrite(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyRewriteArgs> cacheKeyRewrite) {
            $.cacheKeyRewrite = cacheKeyRewrite;
            return this;
        }

        /**
         * @param cacheKeyRewrite This behavior rewrites a default cache key&#39;s path. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheKeyRewrite(GetPropertyRulesBuilderRulesV20230530BehaviorCacheKeyRewriteArgs cacheKeyRewrite) {
            return cacheKeyRewrite(Output.of(cacheKeyRewrite));
        }

        /**
         * @param cachePost By default, POST requests are passed to the origin. This behavior overrides the default, and allows you to cache POST responses. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cachePost(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCachePostArgs> cachePost) {
            $.cachePost = cachePost;
            return this;
        }

        /**
         * @param cachePost By default, POST requests are passed to the origin. This behavior overrides the default, and allows you to cache POST responses. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cachePost(GetPropertyRulesBuilderRulesV20230530BehaviorCachePostArgs cachePost) {
            return cachePost(Output.of(cachePost));
        }

        /**
         * @param cacheRedirect Controls the caching of HTTP 302 and 307 temporary redirects. By default, Akamai edge servers don&#39;t cache them. Enabling this behavior instructs edge servers to allow these redirects to be cached the same as HTTP 200 responses. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheRedirect(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheRedirectArgs> cacheRedirect) {
            $.cacheRedirect = cacheRedirect;
            return this;
        }

        /**
         * @param cacheRedirect Controls the caching of HTTP 302 and 307 temporary redirects. By default, Akamai edge servers don&#39;t cache them. Enabling this behavior instructs edge servers to allow these redirects to be cached the same as HTTP 200 responses. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheRedirect(GetPropertyRulesBuilderRulesV20230530BehaviorCacheRedirectArgs cacheRedirect) {
            return cacheRedirect(Output.of(cacheRedirect));
        }

        /**
         * @param cacheTag This adds a cache tag to the requested object. With cache tags, you can flexibly fast purge tagged segments of your cached content. You can either define these tags with an `Edge-Cache-Tag` header at the origin server level, or use this behavior to directly add a cache tag to the object as the edge server caches it. The `cacheTag` behavior can only take a single value, including a variable. If you want to specify more tags for an object, add a few instances of this behavior to your configuration. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheTag(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheTagArgs> cacheTag) {
            $.cacheTag = cacheTag;
            return this;
        }

        /**
         * @param cacheTag This adds a cache tag to the requested object. With cache tags, you can flexibly fast purge tagged segments of your cached content. You can either define these tags with an `Edge-Cache-Tag` header at the origin server level, or use this behavior to directly add a cache tag to the object as the edge server caches it. The `cacheTag` behavior can only take a single value, including a variable. If you want to specify more tags for an object, add a few instances of this behavior to your configuration. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheTag(GetPropertyRulesBuilderRulesV20230530BehaviorCacheTagArgs cacheTag) {
            return cacheTag(Output.of(cacheTag));
        }

        /**
         * @param cacheTagVisible Cache tags are comma-separated string values you define within an `Edge-Cache-Tag` header. You can use them to flexibly fast purge tagged segments of your cached content. You can either define these headers at the origin server level, or use the `modifyOutgoingResponseHeader` behavior to configure them at the edge.  Apply this behavior to confirm you&#39;re deploying the intended set of cache tags to your content. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheTagVisible(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCacheTagVisibleArgs> cacheTagVisible) {
            $.cacheTagVisible = cacheTagVisible;
            return this;
        }

        /**
         * @param cacheTagVisible Cache tags are comma-separated string values you define within an `Edge-Cache-Tag` header. You can use them to flexibly fast purge tagged segments of your cached content. You can either define these headers at the origin server level, or use the `modifyOutgoingResponseHeader` behavior to configure them at the edge.  Apply this behavior to confirm you&#39;re deploying the intended set of cache tags to your content. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cacheTagVisible(GetPropertyRulesBuilderRulesV20230530BehaviorCacheTagVisibleArgs cacheTagVisible) {
            return cacheTagVisible(Output.of(cacheTagVisible));
        }

        /**
         * @param caching Control content caching on edge servers: whether or not to cache, whether to honor the origin&#39;s caching headers, and for how long to cache.  Note that any `NO_STORE` or `BYPASS_CACHE` HTTP headers set on the origin&#39;s content override this behavior. For more details on how caching works in Property Manager, see the `Learn about caching` section in the guide. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder caching(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCachingArgs> caching) {
            $.caching = caching;
            return this;
        }

        /**
         * @param caching Control content caching on edge servers: whether or not to cache, whether to honor the origin&#39;s caching headers, and for how long to cache.  Note that any `NO_STORE` or `BYPASS_CACHE` HTTP headers set on the origin&#39;s content override this behavior. For more details on how caching works in Property Manager, see the `Learn about caching` section in the guide. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder caching(GetPropertyRulesBuilderRulesV20230530BehaviorCachingArgs caching) {
            return caching(Output.of(caching));
        }

        /**
         * @param centralAuthorization Forward client requests to the origin server for authorization, along with optional `Set-Cookie` headers, useful when you need to maintain tight access control. The edge server forwards an `If-Modified-Since` header, to which the origin needs to respond with a `304` (Not-Modified) HTTP status when authorization succeeds. If so, the edge server responds to the client with the cached object, since it does not need to be re-acquired from the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder centralAuthorization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCentralAuthorizationArgs> centralAuthorization) {
            $.centralAuthorization = centralAuthorization;
            return this;
        }

        /**
         * @param centralAuthorization Forward client requests to the origin server for authorization, along with optional `Set-Cookie` headers, useful when you need to maintain tight access control. The edge server forwards an `If-Modified-Since` header, to which the origin needs to respond with a `304` (Not-Modified) HTTP status when authorization succeeds. If so, the edge server responds to the client with the cached object, since it does not need to be re-acquired from the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder centralAuthorization(GetPropertyRulesBuilderRulesV20230530BehaviorCentralAuthorizationArgs centralAuthorization) {
            return centralAuthorization(Output.of(centralAuthorization));
        }

        /**
         * @param chaseRedirects Controls whether the edge server chases any redirects served from the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder chaseRedirects(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorChaseRedirectsArgs> chaseRedirects) {
            $.chaseRedirects = chaseRedirects;
            return this;
        }

        /**
         * @param chaseRedirects Controls whether the edge server chases any redirects served from the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder chaseRedirects(GetPropertyRulesBuilderRulesV20230530BehaviorChaseRedirectsArgs chaseRedirects) {
            return chaseRedirects(Output.of(chaseRedirects));
        }

        /**
         * @param clientCharacteristics Specifies characteristics of the client ecosystem. Akamai uses this information to optimize your metadata configuration, which may result in better end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder clientCharacteristics(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorClientCharacteristicsArgs> clientCharacteristics) {
            $.clientCharacteristics = clientCharacteristics;
            return this;
        }

        /**
         * @param clientCharacteristics Specifies characteristics of the client ecosystem. Akamai uses this information to optimize your metadata configuration, which may result in better end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder clientCharacteristics(GetPropertyRulesBuilderRulesV20230530BehaviorClientCharacteristicsArgs clientCharacteristics) {
            return clientCharacteristics(Output.of(clientCharacteristics));
        }

        /**
         * @param cloudInterconnects Cloud Interconnects forwards traffic from edge servers to your cloud origin through Private Network Interconnects (PNIs), helping to reduce the egress costs at the origin. Supports origins hosted by Google Cloud Provider (GCP). This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cloudInterconnects(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCloudInterconnectsArgs> cloudInterconnects) {
            $.cloudInterconnects = cloudInterconnects;
            return this;
        }

        /**
         * @param cloudInterconnects Cloud Interconnects forwards traffic from edge servers to your cloud origin through Private Network Interconnects (PNIs), helping to reduce the egress costs at the origin. Supports origins hosted by Google Cloud Provider (GCP). This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cloudInterconnects(GetPropertyRulesBuilderRulesV20230530BehaviorCloudInterconnectsArgs cloudInterconnects) {
            return cloudInterconnects(Output.of(cloudInterconnects));
        }

        /**
         * @param cloudWrapper `Cloud Wrapper` maximizes origin offload for large libraries of video, game, and software downloads by optimizing data caches in regions nearest to your origin. You can&#39;t use this behavior in conjunction with `sureRoute` or `tieredDistribution`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cloudWrapper(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperArgs> cloudWrapper) {
            $.cloudWrapper = cloudWrapper;
            return this;
        }

        /**
         * @param cloudWrapper `Cloud Wrapper` maximizes origin offload for large libraries of video, game, and software downloads by optimizing data caches in regions nearest to your origin. You can&#39;t use this behavior in conjunction with `sureRoute` or `tieredDistribution`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cloudWrapper(GetPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperArgs cloudWrapper) {
            return cloudWrapper(Output.of(cloudWrapper));
        }

        /**
         * @param cloudWrapperAdvanced Your account representative uses this behavior to implement a customized failover configuration on your behalf. Use Cloud Wrapper Advanced with an enabled `cloudWrapper` behavior in the same rule. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cloudWrapperAdvanced(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperAdvancedArgs> cloudWrapperAdvanced) {
            $.cloudWrapperAdvanced = cloudWrapperAdvanced;
            return this;
        }

        /**
         * @param cloudWrapperAdvanced Your account representative uses this behavior to implement a customized failover configuration on your behalf. Use Cloud Wrapper Advanced with an enabled `cloudWrapper` behavior in the same rule. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cloudWrapperAdvanced(GetPropertyRulesBuilderRulesV20230530BehaviorCloudWrapperAdvancedArgs cloudWrapperAdvanced) {
            return cloudWrapperAdvanced(Output.of(cloudWrapperAdvanced));
        }

        /**
         * @param commonMediaClientData Use this behavior to send expanded playback information as CMCD metadata in requests from a media player. Edge servers may use this metadata for segment prefetching to optimize your content&#39;s delivery, or for logging. For more details and additional property requirements, see the `Adaptive Media Delivery` documentation. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder commonMediaClientData(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCommonMediaClientDataArgs> commonMediaClientData) {
            $.commonMediaClientData = commonMediaClientData;
            return this;
        }

        /**
         * @param commonMediaClientData Use this behavior to send expanded playback information as CMCD metadata in requests from a media player. Edge servers may use this metadata for segment prefetching to optimize your content&#39;s delivery, or for logging. For more details and additional property requirements, see the `Adaptive Media Delivery` documentation. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder commonMediaClientData(GetPropertyRulesBuilderRulesV20230530BehaviorCommonMediaClientDataArgs commonMediaClientData) {
            return commonMediaClientData(Output.of(commonMediaClientData));
        }

        /**
         * @param conditionalOrigin This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder conditionalOrigin(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorConditionalOriginArgs> conditionalOrigin) {
            $.conditionalOrigin = conditionalOrigin;
            return this;
        }

        /**
         * @param conditionalOrigin This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder conditionalOrigin(GetPropertyRulesBuilderRulesV20230530BehaviorConditionalOriginArgs conditionalOrigin) {
            return conditionalOrigin(Output.of(conditionalOrigin));
        }

        /**
         * @param constructResponse This behavior constructs an HTTP response, complete with HTTP status code and body, to serve from the edge independently of your origin. For example, you might want to send a customized response if the URL doesn&#39;t point to an object on the origin server, or if the end user is not authorized to view the requested content. You can use it with all request methods you allow for your property, including POST. For more details, see the `allowOptions`, `allowPatch`, `allowPost`, `allowPut`, and `allowDelete` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder constructResponse(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorConstructResponseArgs> constructResponse) {
            $.constructResponse = constructResponse;
            return this;
        }

        /**
         * @param constructResponse This behavior constructs an HTTP response, complete with HTTP status code and body, to serve from the edge independently of your origin. For example, you might want to send a customized response if the URL doesn&#39;t point to an object on the origin server, or if the end user is not authorized to view the requested content. You can use it with all request methods you allow for your property, including POST. For more details, see the `allowOptions`, `allowPatch`, `allowPost`, `allowPut`, and `allowDelete` behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder constructResponse(GetPropertyRulesBuilderRulesV20230530BehaviorConstructResponseArgs constructResponse) {
            return constructResponse(Output.of(constructResponse));
        }

        /**
         * @param contentCharacteristics Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristics(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsArgs> contentCharacteristics) {
            $.contentCharacteristics = contentCharacteristics;
            return this;
        }

        /**
         * @param contentCharacteristics Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristics(GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsArgs contentCharacteristics) {
            return contentCharacteristics(Output.of(contentCharacteristics));
        }

        /**
         * @param contentCharacteristicsAmd Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristicsAmd(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsAmdArgs> contentCharacteristicsAmd) {
            $.contentCharacteristicsAmd = contentCharacteristicsAmd;
            return this;
        }

        /**
         * @param contentCharacteristicsAmd Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristicsAmd(GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsAmdArgs contentCharacteristicsAmd) {
            return contentCharacteristicsAmd(Output.of(contentCharacteristicsAmd));
        }

        /**
         * @param contentCharacteristicsDd Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristicsDd(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsDdArgs> contentCharacteristicsDd) {
            $.contentCharacteristicsDd = contentCharacteristicsDd;
            return this;
        }

        /**
         * @param contentCharacteristicsDd Specifies characteristics of the delivered content. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristicsDd(GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsDdArgs contentCharacteristicsDd) {
            return contentCharacteristicsDd(Output.of(contentCharacteristicsDd));
        }

        /**
         * @param contentCharacteristicsWsdLargeFile Specifies characteristics of the delivered content, specifically targeted to delivering large files. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristicsWsdLargeFile(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLargeFileArgs> contentCharacteristicsWsdLargeFile) {
            $.contentCharacteristicsWsdLargeFile = contentCharacteristicsWsdLargeFile;
            return this;
        }

        /**
         * @param contentCharacteristicsWsdLargeFile Specifies characteristics of the delivered content, specifically targeted to delivering large files. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristicsWsdLargeFile(GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLargeFileArgs contentCharacteristicsWsdLargeFile) {
            return contentCharacteristicsWsdLargeFile(Output.of(contentCharacteristicsWsdLargeFile));
        }

        /**
         * @param contentCharacteristicsWsdLive Specifies characteristics of the delivered content, specifically targeted to delivering live video. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristicsWsdLive(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLiveArgs> contentCharacteristicsWsdLive) {
            $.contentCharacteristicsWsdLive = contentCharacteristicsWsdLive;
            return this;
        }

        /**
         * @param contentCharacteristicsWsdLive Specifies characteristics of the delivered content, specifically targeted to delivering live video. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristicsWsdLive(GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdLiveArgs contentCharacteristicsWsdLive) {
            return contentCharacteristicsWsdLive(Output.of(contentCharacteristicsWsdLive));
        }

        /**
         * @param contentCharacteristicsWsdVod Specifies characteristics of the delivered content, specifically targeted to delivering on-demand video. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristicsWsdVod(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdVodArgs> contentCharacteristicsWsdVod) {
            $.contentCharacteristicsWsdVod = contentCharacteristicsWsdVod;
            return this;
        }

        /**
         * @param contentCharacteristicsWsdVod Specifies characteristics of the delivered content, specifically targeted to delivering on-demand video. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentCharacteristicsWsdVod(GetPropertyRulesBuilderRulesV20230530BehaviorContentCharacteristicsWsdVodArgs contentCharacteristicsWsdVod) {
            return contentCharacteristicsWsdVod(Output.of(contentCharacteristicsWsdVod));
        }

        /**
         * @param contentPrePosition Content Preposition. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentPrePosition(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentPrePositionArgs> contentPrePosition) {
            $.contentPrePosition = contentPrePosition;
            return this;
        }

        /**
         * @param contentPrePosition Content Preposition. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentPrePosition(GetPropertyRulesBuilderRulesV20230530BehaviorContentPrePositionArgs contentPrePosition) {
            return contentPrePosition(Output.of(contentPrePosition));
        }

        /**
         * @param contentTargetingProtection Content Targeting is based on `EdgeScape`, Akamai&#39;s location-based access control system.  You can use it to allow or deny access to a set of geographic regions or IP addresses. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentTargetingProtection(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorContentTargetingProtectionArgs> contentTargetingProtection) {
            $.contentTargetingProtection = contentTargetingProtection;
            return this;
        }

        /**
         * @param contentTargetingProtection Content Targeting is based on `EdgeScape`, Akamai&#39;s location-based access control system.  You can use it to allow or deny access to a set of geographic regions or IP addresses. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder contentTargetingProtection(GetPropertyRulesBuilderRulesV20230530BehaviorContentTargetingProtectionArgs contentTargetingProtection) {
            return contentTargetingProtection(Output.of(contentTargetingProtection));
        }

        /**
         * @param corsSupport Cross-origin resource sharing (CORS) allows web pages in one domain to access restricted resources from your domain. Specify external origin hostnames, methods, and headers that you want to accept via HTTP response headers. Full support of CORS requires allowing requests that use the OPTIONS method. See `allowOptions`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder corsSupport(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCorsSupportArgs> corsSupport) {
            $.corsSupport = corsSupport;
            return this;
        }

        /**
         * @param corsSupport Cross-origin resource sharing (CORS) allows web pages in one domain to access restricted resources from your domain. Specify external origin hostnames, methods, and headers that you want to accept via HTTP response headers. Full support of CORS requires allowing requests that use the OPTIONS method. See `allowOptions`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder corsSupport(GetPropertyRulesBuilderRulesV20230530BehaviorCorsSupportArgs corsSupport) {
            return corsSupport(Output.of(corsSupport));
        }

        /**
         * @param cpCode Content Provider Codes (CP codes) allow you to distinguish various reporting and billing traffic segments, and you need them to access properties. You receive an initial CP code when purchasing Akamai, and you can run the `Create a new CP code` operation to generate more. This behavior applies any valid CP code, either as required as a default at the top of the rule tree, or subsequently to override the default. For a CP code to be valid, it needs to be assigned the same contract and product as the property, and the group needs access to it.  For available values, run the `List CP codes` operation. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cpCode(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCpCodeArgs> cpCode) {
            $.cpCode = cpCode;
            return this;
        }

        /**
         * @param cpCode Content Provider Codes (CP codes) allow you to distinguish various reporting and billing traffic segments, and you need them to access properties. You receive an initial CP code when purchasing Akamai, and you can run the `Create a new CP code` operation to generate more. This behavior applies any valid CP code, either as required as a default at the top of the rule tree, or subsequently to override the default. For a CP code to be valid, it needs to be assigned the same contract and product as the property, and the group needs access to it.  For available values, run the `List CP codes` operation. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder cpCode(GetPropertyRulesBuilderRulesV20230530BehaviorCpCodeArgs cpCode) {
            return cpCode(Output.of(cpCode));
        }

        /**
         * @param customBehavior Allows you to insert a customized XML metadata behavior into any property&#39;s rule tree.  Talk to your Akamai representative to implement the customized behavior. Once it&#39;s ready, run PAPI&#39;s `List custom behaviors` operation, then apply the relevant `behaviorId` value from the response within the current `customBehavior`. See `Custom behaviors and overrides` for guidance on custom metadata behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder customBehavior(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorCustomBehaviorArgs> customBehavior) {
            $.customBehavior = customBehavior;
            return this;
        }

        /**
         * @param customBehavior Allows you to insert a customized XML metadata behavior into any property&#39;s rule tree.  Talk to your Akamai representative to implement the customized behavior. Once it&#39;s ready, run PAPI&#39;s `List custom behaviors` operation, then apply the relevant `behaviorId` value from the response within the current `customBehavior`. See `Custom behaviors and overrides` for guidance on custom metadata behaviors. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder customBehavior(GetPropertyRulesBuilderRulesV20230530BehaviorCustomBehaviorArgs customBehavior) {
            return customBehavior(Output.of(customBehavior));
        }

        /**
         * @param datastream The `DataStream` reporting service provides real-time logs on application activity, including aggregated metrics on complete request and response cycles and origin response times.  Apply this behavior to report on this set of traffic.  Use the `DataStream API` to aggregate the data. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder datastream(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDatastreamArgs> datastream) {
            $.datastream = datastream;
            return this;
        }

        /**
         * @param datastream The `DataStream` reporting service provides real-time logs on application activity, including aggregated metrics on complete request and response cycles and origin response times.  Apply this behavior to report on this set of traffic.  Use the `DataStream API` to aggregate the data. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder datastream(GetPropertyRulesBuilderRulesV20230530BehaviorDatastreamArgs datastream) {
            return datastream(Output.of(datastream));
        }

        /**
         * @param dcp The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. (The `IoT Edge Connect API` allows programmatic access.) This behavior allows you to select previously reserved namespaces and set the protocols for users to publish and receive messages within these namespaces.  Use the `verifyJsonWebTokenForDcp` behavior to control access. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcp(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpArgs> dcp) {
            $.dcp = dcp;
            return this;
        }

        /**
         * @param dcp The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. (The `IoT Edge Connect API` allows programmatic access.) This behavior allows you to select previously reserved namespaces and set the protocols for users to publish and receive messages within these namespaces.  Use the `verifyJsonWebTokenForDcp` behavior to control access. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcp(GetPropertyRulesBuilderRulesV20230530BehaviorDcpArgs dcp) {
            return dcp(Output.of(dcp));
        }

        /**
         * @param dcpAuthHmacTransformation The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then generates a hash value based on the selected algorithm, for use in authenticating the client request. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpAuthHmacTransformation(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthHmacTransformationArgs> dcpAuthHmacTransformation) {
            $.dcpAuthHmacTransformation = dcpAuthHmacTransformation;
            return this;
        }

        /**
         * @param dcpAuthHmacTransformation The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then generates a hash value based on the selected algorithm, for use in authenticating the client request. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpAuthHmacTransformation(GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthHmacTransformationArgs dcpAuthHmacTransformation) {
            return dcpAuthHmacTransformation(Output.of(dcpAuthHmacTransformation));
        }

        /**
         * @param dcpAuthRegexTransformation The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then transforms the string based on a regular expression search pattern, for use in authenticating the client request. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpAuthRegexTransformation(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthRegexTransformationArgs> dcpAuthRegexTransformation) {
            $.dcpAuthRegexTransformation = dcpAuthRegexTransformation;
            return this;
        }

        /**
         * @param dcpAuthRegexTransformation The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then transforms the string based on a regular expression search pattern, for use in authenticating the client request. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpAuthRegexTransformation(GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthRegexTransformationArgs dcpAuthRegexTransformation) {
            return dcpAuthRegexTransformation(Output.of(dcpAuthRegexTransformation));
        }

        /**
         * @param dcpAuthSubstringTransformation The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then extracts a substring, for use in authenticating the client request. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpAuthSubstringTransformation(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthSubstringTransformationArgs> dcpAuthSubstringTransformation) {
            $.dcpAuthSubstringTransformation = dcpAuthSubstringTransformation;
            return this;
        }

        /**
         * @param dcpAuthSubstringTransformation The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. In conjunction with `dcpAuthVariableExtractor`, this behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. It transforms a source string value extracted from the client certificate and stored as a variable, then extracts a substring, for use in authenticating the client request. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpAuthSubstringTransformation(GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthSubstringTransformationArgs dcpAuthSubstringTransformation) {
            return dcpAuthSubstringTransformation(Output.of(dcpAuthSubstringTransformation));
        }

        /**
         * @param dcpAuthVariableExtractor The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. When enabled, this behavior allows end users to authenticate their requests with valid x509 client certificates. Either a client identifier or access authorization groups are required to make the request valid. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpAuthVariableExtractor(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthVariableExtractorArgs> dcpAuthVariableExtractor) {
            $.dcpAuthVariableExtractor = dcpAuthVariableExtractor;
            return this;
        }

        /**
         * @param dcpAuthVariableExtractor The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior affects how clients can authenticate themselves to edge servers, and which groups within namespaces are authorized to access topics. When enabled, this behavior allows end users to authenticate their requests with valid x509 client certificates. Either a client identifier or access authorization groups are required to make the request valid. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpAuthVariableExtractor(GetPropertyRulesBuilderRulesV20230530BehaviorDcpAuthVariableExtractorArgs dcpAuthVariableExtractor) {
            return dcpAuthVariableExtractor(Output.of(dcpAuthVariableExtractor));
        }

        /**
         * @param dcpDefaultAuthzGroups The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior defines a set of default authorization groups to add to each request the property configuration controls.  These groups have access regardless of the authentication method you use, either JWT using the `verifyJsonWebTokenForDcp` behavior, or mutual authentication using the `dcpAuthVariableExtractor` behavior to control where authorization groups are extracted from within certificates. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpDefaultAuthzGroups(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpDefaultAuthzGroupsArgs> dcpDefaultAuthzGroups) {
            $.dcpDefaultAuthzGroups = dcpDefaultAuthzGroups;
            return this;
        }

        /**
         * @param dcpDefaultAuthzGroups The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior defines a set of default authorization groups to add to each request the property configuration controls.  These groups have access regardless of the authentication method you use, either JWT using the `verifyJsonWebTokenForDcp` behavior, or mutual authentication using the `dcpAuthVariableExtractor` behavior to control where authorization groups are extracted from within certificates. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpDefaultAuthzGroups(GetPropertyRulesBuilderRulesV20230530BehaviorDcpDefaultAuthzGroupsArgs dcpDefaultAuthzGroups) {
            return dcpDefaultAuthzGroups(Output.of(dcpDefaultAuthzGroups));
        }

        /**
         * @param dcpDevRelations The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior allows Akamai-external clients to use developer test accounts in a shared environment. In conjunction with `verifyJsonWebTokenForDcp`, this behavior allows you to use your own JWTs in your requests, or those generated by Akamai. It lets you either enable the default JWT server for your test configuration by setting the authentication endpoint to a default path, or specify custom settings for your JWT server and the authentication endpoint. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpDevRelations(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpDevRelationsArgs> dcpDevRelations) {
            $.dcpDevRelations = dcpDevRelations;
            return this;
        }

        /**
         * @param dcpDevRelations The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior allows Akamai-external clients to use developer test accounts in a shared environment. In conjunction with `verifyJsonWebTokenForDcp`, this behavior allows you to use your own JWTs in your requests, or those generated by Akamai. It lets you either enable the default JWT server for your test configuration by setting the authentication endpoint to a default path, or specify custom settings for your JWT server and the authentication endpoint. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpDevRelations(GetPropertyRulesBuilderRulesV20230530BehaviorDcpDevRelationsArgs dcpDevRelations) {
            return dcpDevRelations(Output.of(dcpDevRelations));
        }

        /**
         * @param dcpRealTimeAuth INTERNAL ONLY: The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior lets you configure the real time authentication to edge servers. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpRealTimeAuth(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuthArgs> dcpRealTimeAuth) {
            $.dcpRealTimeAuth = dcpRealTimeAuth;
            return this;
        }

        /**
         * @param dcpRealTimeAuth INTERNAL ONLY: The `Internet of Things: Edge Connect` product allows connected users and devices to communicate on a publish-subscribe basis within reserved namespaces. This behavior lets you configure the real time authentication to edge servers. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dcpRealTimeAuth(GetPropertyRulesBuilderRulesV20230530BehaviorDcpRealTimeAuthArgs dcpRealTimeAuth) {
            return dcpRealTimeAuth(Output.of(dcpRealTimeAuth));
        }

        /**
         * @param deliveryReceipt A static behavior that&#39;s required when specifying the Cloud Monitor module&#39;s (`edgeConnect` behavior. You can only apply this behavior if the property is marked as secure. See `Secure property requirements` for guidance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder deliveryReceipt(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDeliveryReceiptArgs> deliveryReceipt) {
            $.deliveryReceipt = deliveryReceipt;
            return this;
        }

        /**
         * @param deliveryReceipt A static behavior that&#39;s required when specifying the Cloud Monitor module&#39;s (`edgeConnect` behavior. You can only apply this behavior if the property is marked as secure. See `Secure property requirements` for guidance. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder deliveryReceipt(GetPropertyRulesBuilderRulesV20230530BehaviorDeliveryReceiptArgs deliveryReceipt) {
            return deliveryReceipt(Output.of(deliveryReceipt));
        }

        /**
         * @param denyAccess Assuming a condition in the rule matches, this denies access to the requested content. For example, a `userLocation` match paired with this behavior would deny requests from a specified part of the world. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder denyAccess(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDenyAccessArgs> denyAccess) {
            $.denyAccess = denyAccess;
            return this;
        }

        /**
         * @param denyAccess Assuming a condition in the rule matches, this denies access to the requested content. For example, a `userLocation` match paired with this behavior would deny requests from a specified part of the world. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder denyAccess(GetPropertyRulesBuilderRulesV20230530BehaviorDenyAccessArgs denyAccess) {
            return denyAccess(Output.of(denyAccess));
        }

        /**
         * @param denyDirectFailoverAccess A static behavior required for all properties that implement a failover under the Cloud Security Failover product. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder denyDirectFailoverAccess(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDenyDirectFailoverAccessArgs> denyDirectFailoverAccess) {
            $.denyDirectFailoverAccess = denyDirectFailoverAccess;
            return this;
        }

        /**
         * @param denyDirectFailoverAccess A static behavior required for all properties that implement a failover under the Cloud Security Failover product. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder denyDirectFailoverAccess(GetPropertyRulesBuilderRulesV20230530BehaviorDenyDirectFailoverAccessArgs denyDirectFailoverAccess) {
            return denyDirectFailoverAccess(Output.of(denyDirectFailoverAccess));
        }

        /**
         * @param deviceCharacteristicCacheId By default, source URLs serve as cache IDs on edge servers. Electronic Data Capture allows you to specify an additional set of device characteristics to generate separate cache keys. Use this in conjunction with the `deviceCharacteristicHeader` behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder deviceCharacteristicCacheId(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicCacheIdArgs> deviceCharacteristicCacheId) {
            $.deviceCharacteristicCacheId = deviceCharacteristicCacheId;
            return this;
        }

        /**
         * @param deviceCharacteristicCacheId By default, source URLs serve as cache IDs on edge servers. Electronic Data Capture allows you to specify an additional set of device characteristics to generate separate cache keys. Use this in conjunction with the `deviceCharacteristicHeader` behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder deviceCharacteristicCacheId(GetPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicCacheIdArgs deviceCharacteristicCacheId) {
            return deviceCharacteristicCacheId(Output.of(deviceCharacteristicCacheId));
        }

        /**
         * @param deviceCharacteristicHeader Sends selected information about requesting devices to the origin server, in the form of an `X-Akamai-Device-Characteristics` HTTP header. Use in conjunction with the `deviceCharacteristicCacheId` behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder deviceCharacteristicHeader(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicHeaderArgs> deviceCharacteristicHeader) {
            $.deviceCharacteristicHeader = deviceCharacteristicHeader;
            return this;
        }

        /**
         * @param deviceCharacteristicHeader Sends selected information about requesting devices to the origin server, in the form of an `X-Akamai-Device-Characteristics` HTTP header. Use in conjunction with the `deviceCharacteristicCacheId` behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder deviceCharacteristicHeader(GetPropertyRulesBuilderRulesV20230530BehaviorDeviceCharacteristicHeaderArgs deviceCharacteristicHeader) {
            return deviceCharacteristicHeader(Output.of(deviceCharacteristicHeader));
        }

        /**
         * @param dnsAsyncRefresh Allow an edge server to use an expired DNS record when forwarding a request to your origin. The `type A` DNS record refreshes `after` content is served to the end user, so there is no wait for the DNS resolution. Avoid this behavior if you want to be able to disable a server immediately after its DNS record expires. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dnsAsyncRefresh(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDnsAsyncRefreshArgs> dnsAsyncRefresh) {
            $.dnsAsyncRefresh = dnsAsyncRefresh;
            return this;
        }

        /**
         * @param dnsAsyncRefresh Allow an edge server to use an expired DNS record when forwarding a request to your origin. The `type A` DNS record refreshes `after` content is served to the end user, so there is no wait for the DNS resolution. Avoid this behavior if you want to be able to disable a server immediately after its DNS record expires. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dnsAsyncRefresh(GetPropertyRulesBuilderRulesV20230530BehaviorDnsAsyncRefreshArgs dnsAsyncRefresh) {
            return dnsAsyncRefresh(Output.of(dnsAsyncRefresh));
        }

        /**
         * @param dnsPrefresh Allows edge servers to refresh your origin&#39;s DNS record independently from end-user requests. The `type A` DNS record refreshes before the origin&#39;s DNS record expires. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dnsPrefresh(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDnsPrefreshArgs> dnsPrefresh) {
            $.dnsPrefresh = dnsPrefresh;
            return this;
        }

        /**
         * @param dnsPrefresh Allows edge servers to refresh your origin&#39;s DNS record independently from end-user requests. The `type A` DNS record refreshes before the origin&#39;s DNS record expires. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dnsPrefresh(GetPropertyRulesBuilderRulesV20230530BehaviorDnsPrefreshArgs dnsPrefresh) {
            return dnsPrefresh(Output.of(dnsPrefresh));
        }

        /**
         * @param downgradeProtocol Serve static objects to the end-user client over HTTPS, but fetch them from the origin via HTTP. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder downgradeProtocol(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDowngradeProtocolArgs> downgradeProtocol) {
            $.downgradeProtocol = downgradeProtocol;
            return this;
        }

        /**
         * @param downgradeProtocol Serve static objects to the end-user client over HTTPS, but fetch them from the origin via HTTP. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder downgradeProtocol(GetPropertyRulesBuilderRulesV20230530BehaviorDowngradeProtocolArgs downgradeProtocol) {
            return downgradeProtocol(Output.of(downgradeProtocol));
        }

        /**
         * @param downloadCompleteMarker The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks.  Based on match criteria that executes a rule, this behavior logs requests to the OTA servers as completed in aggregated and individual reports. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder downloadCompleteMarker(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDownloadCompleteMarkerArgs> downloadCompleteMarker) {
            $.downloadCompleteMarker = downloadCompleteMarker;
            return this;
        }

        /**
         * @param downloadCompleteMarker The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks.  Based on match criteria that executes a rule, this behavior logs requests to the OTA servers as completed in aggregated and individual reports. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder downloadCompleteMarker(GetPropertyRulesBuilderRulesV20230530BehaviorDownloadCompleteMarkerArgs downloadCompleteMarker) {
            return downloadCompleteMarker(Output.of(downloadCompleteMarker));
        }

        /**
         * @param downloadNotification The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks. Based on match criteria that executes a rule, this behavior allows requests to the `OTA Updates API` for a list of completed downloads to individual vehicles. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder downloadNotification(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDownloadNotificationArgs> downloadNotification) {
            $.downloadNotification = downloadNotification;
            return this;
        }

        /**
         * @param downloadNotification The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks. Based on match criteria that executes a rule, this behavior allows requests to the `OTA Updates API` for a list of completed downloads to individual vehicles. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder downloadNotification(GetPropertyRulesBuilderRulesV20230530BehaviorDownloadNotificationArgs downloadNotification) {
            return downloadNotification(Output.of(downloadNotification));
        }

        /**
         * @param downstreamCache Specify the caching instructions the edge server sends to the end user&#39;s client or client proxies. By default, the cache&#39;s duration is whichever is less: the remaining lifetime of the edge cache, or what the origin&#39;s header specifies. If the origin is set to `no-store` or `bypass-cache`, edge servers send `cache-busting` headers downstream to prevent downstream caching. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder downstreamCache(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDownstreamCacheArgs> downstreamCache) {
            $.downstreamCache = downstreamCache;
            return this;
        }

        /**
         * @param downstreamCache Specify the caching instructions the edge server sends to the end user&#39;s client or client proxies. By default, the cache&#39;s duration is whichever is less: the remaining lifetime of the edge cache, or what the origin&#39;s header specifies. If the origin is set to `no-store` or `bypass-cache`, edge servers send `cache-busting` headers downstream to prevent downstream caching. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder downstreamCache(GetPropertyRulesBuilderRulesV20230530BehaviorDownstreamCacheArgs downstreamCache) {
            return downstreamCache(Output.of(downstreamCache));
        }

        /**
         * @param dynamicThroughtputOptimization Enables `quick retry`, which detects slow forward throughput while fetching an object, and attempts a different forward connection path to avoid congestion. By default, connections under 5 mbps trigger this behavior. When the transfer rate drops below this rate during a connection attempt, quick retry is enabled and a different forward connection path is used. Contact Akamai Professional Services to override this threshold. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dynamicThroughtputOptimization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationArgs> dynamicThroughtputOptimization) {
            $.dynamicThroughtputOptimization = dynamicThroughtputOptimization;
            return this;
        }

        /**
         * @param dynamicThroughtputOptimization Enables `quick retry`, which detects slow forward throughput while fetching an object, and attempts a different forward connection path to avoid congestion. By default, connections under 5 mbps trigger this behavior. When the transfer rate drops below this rate during a connection attempt, quick retry is enabled and a different forward connection path is used. Contact Akamai Professional Services to override this threshold. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dynamicThroughtputOptimization(GetPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationArgs dynamicThroughtputOptimization) {
            return dynamicThroughtputOptimization(Output.of(dynamicThroughtputOptimization));
        }

        /**
         * @param dynamicThroughtputOptimizationOverride This overrides the default threshold of 5 Mbps that triggers the `dynamicThroughtputOptimization` behavior, which enables the quick retry feature. Quick retry detects slow forward throughput while fetching an object, and attempts a different forward connection path to avoid congestion. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dynamicThroughtputOptimizationOverride(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationOverrideArgs> dynamicThroughtputOptimizationOverride) {
            $.dynamicThroughtputOptimizationOverride = dynamicThroughtputOptimizationOverride;
            return this;
        }

        /**
         * @param dynamicThroughtputOptimizationOverride This overrides the default threshold of 5 Mbps that triggers the `dynamicThroughtputOptimization` behavior, which enables the quick retry feature. Quick retry detects slow forward throughput while fetching an object, and attempts a different forward connection path to avoid congestion. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dynamicThroughtputOptimizationOverride(GetPropertyRulesBuilderRulesV20230530BehaviorDynamicThroughtputOptimizationOverrideArgs dynamicThroughtputOptimizationOverride) {
            return dynamicThroughtputOptimizationOverride(Output.of(dynamicThroughtputOptimizationOverride));
        }

        /**
         * @param dynamicWebContent In conjunction with the `subCustomer` behavior, this optional behavior allows you to control how dynamic web content behaves for your subcustomers using `Akamai Cloud Embed`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dynamicWebContent(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorDynamicWebContentArgs> dynamicWebContent) {
            $.dynamicWebContent = dynamicWebContent;
            return this;
        }

        /**
         * @param dynamicWebContent In conjunction with the `subCustomer` behavior, this optional behavior allows you to control how dynamic web content behaves for your subcustomers using `Akamai Cloud Embed`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder dynamicWebContent(GetPropertyRulesBuilderRulesV20230530BehaviorDynamicWebContentArgs dynamicWebContent) {
            return dynamicWebContent(Output.of(dynamicWebContent));
        }

        /**
         * @param ecmsBulkUpload Uploads a ZIP archive with objects to an existing data set. The target data set stores objects as key-value pairs. The path to an object in the ZIP archive is a key, and the content of an object is a value. For an overview, see `ecmsDatabase`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder ecmsBulkUpload(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsBulkUploadArgs> ecmsBulkUpload) {
            $.ecmsBulkUpload = ecmsBulkUpload;
            return this;
        }

        /**
         * @param ecmsBulkUpload Uploads a ZIP archive with objects to an existing data set. The target data set stores objects as key-value pairs. The path to an object in the ZIP archive is a key, and the content of an object is a value. For an overview, see `ecmsDatabase`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder ecmsBulkUpload(GetPropertyRulesBuilderRulesV20230530BehaviorEcmsBulkUploadArgs ecmsBulkUpload) {
            return ecmsBulkUpload(Output.of(ecmsBulkUpload));
        }

        /**
         * @param ecmsDatabase Edge Connect Message Store is available for `Internet of Things: Edge Connect` users. It lets you create databases and data sets within these databases. You can use this object store to save files smaller than 2 GB. `ecmsDatabase` specifies a default database for requests to this property, unless indicated otherwise in the URL. To access objects in the default database, you can skip its name in the URLs. To access objects in a different database, pass its name in the header, query parameter, or a regular expression matching a URL segment. You can also configure the `ecmsDataset` behavior to specify a default data set for requests. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder ecmsDatabase(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsDatabaseArgs> ecmsDatabase) {
            $.ecmsDatabase = ecmsDatabase;
            return this;
        }

        /**
         * @param ecmsDatabase Edge Connect Message Store is available for `Internet of Things: Edge Connect` users. It lets you create databases and data sets within these databases. You can use this object store to save files smaller than 2 GB. `ecmsDatabase` specifies a default database for requests to this property, unless indicated otherwise in the URL. To access objects in the default database, you can skip its name in the URLs. To access objects in a different database, pass its name in the header, query parameter, or a regular expression matching a URL segment. You can also configure the `ecmsDataset` behavior to specify a default data set for requests. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder ecmsDatabase(GetPropertyRulesBuilderRulesV20230530BehaviorEcmsDatabaseArgs ecmsDatabase) {
            return ecmsDatabase(Output.of(ecmsDatabase));
        }

        /**
         * @param ecmsDataset Specifies a default data set for requests to this property unless indicated otherwise in the URL. To access objects in this data set, you can skip the data set name in the URLs. To access objects in a different data set within a database, pass the data set name in the header, query parameter, or a regular expression pattern matching a URL segment. You can also configure the `ecmsDatabase` behavior to specify a default database for requests. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder ecmsDataset(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsDatasetArgs> ecmsDataset) {
            $.ecmsDataset = ecmsDataset;
            return this;
        }

        /**
         * @param ecmsDataset Specifies a default data set for requests to this property unless indicated otherwise in the URL. To access objects in this data set, you can skip the data set name in the URLs. To access objects in a different data set within a database, pass the data set name in the header, query parameter, or a regular expression pattern matching a URL segment. You can also configure the `ecmsDatabase` behavior to specify a default database for requests. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder ecmsDataset(GetPropertyRulesBuilderRulesV20230530BehaviorEcmsDatasetArgs ecmsDataset) {
            return ecmsDataset(Output.of(ecmsDataset));
        }

        /**
         * @param ecmsObjectKey Defines a regular expression to match object keys in custom URLs and to access objects in a data set. You can point custom URLs to access proper values in the target data set. For an overview, see `ecmsDatabase`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder ecmsObjectKey(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEcmsObjectKeyArgs> ecmsObjectKey) {
            $.ecmsObjectKey = ecmsObjectKey;
            return this;
        }

        /**
         * @param ecmsObjectKey Defines a regular expression to match object keys in custom URLs and to access objects in a data set. You can point custom URLs to access proper values in the target data set. For an overview, see `ecmsDatabase`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder ecmsObjectKey(GetPropertyRulesBuilderRulesV20230530BehaviorEcmsObjectKeyArgs ecmsObjectKey) {
            return ecmsObjectKey(Output.of(ecmsObjectKey));
        }

        /**
         * @param edgeConnect Configures traffic logs for the Cloud Monitor push API. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeConnect(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeConnectArgs> edgeConnect) {
            $.edgeConnect = edgeConnect;
            return this;
        }

        /**
         * @param edgeConnect Configures traffic logs for the Cloud Monitor push API. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeConnect(GetPropertyRulesBuilderRulesV20230530BehaviorEdgeConnectArgs edgeConnect) {
            return edgeConnect(Output.of(edgeConnect));
        }

        /**
         * @param edgeLoadBalancingAdvanced This behavior implements customized Edge Load Balancing features. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeLoadBalancingAdvanced(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingAdvancedArgs> edgeLoadBalancingAdvanced) {
            $.edgeLoadBalancingAdvanced = edgeLoadBalancingAdvanced;
            return this;
        }

        /**
         * @param edgeLoadBalancingAdvanced This behavior implements customized Edge Load Balancing features. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeLoadBalancingAdvanced(GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingAdvancedArgs edgeLoadBalancingAdvanced) {
            return edgeLoadBalancingAdvanced(Output.of(edgeLoadBalancingAdvanced));
        }

        /**
         * @param edgeLoadBalancingDataCenter The Edge Load Balancing module allows you to specify groups of data centers that implement load balancing, session persistence, and real-time dynamic failover. Enabling ELB routes requests contextually based on location, device, or network, along with optional rules you specify. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeLoadBalancingDataCenter(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenterArgs> edgeLoadBalancingDataCenter) {
            $.edgeLoadBalancingDataCenter = edgeLoadBalancingDataCenter;
            return this;
        }

        /**
         * @param edgeLoadBalancingDataCenter The Edge Load Balancing module allows you to specify groups of data centers that implement load balancing, session persistence, and real-time dynamic failover. Enabling ELB routes requests contextually based on location, device, or network, along with optional rules you specify. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeLoadBalancingDataCenter(GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingDataCenterArgs edgeLoadBalancingDataCenter) {
            return edgeLoadBalancingDataCenter(Output.of(edgeLoadBalancingDataCenter));
        }

        /**
         * @param edgeLoadBalancingOrigin The Edge Load Balancing module allows you to implement groups of data centers featuring load balancing, session persistence, and real-time dynamic failover. Enabling ELB routes requests contextually based on location, device, or network, along with optional rules you specify. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeLoadBalancingOrigin(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingOriginArgs> edgeLoadBalancingOrigin) {
            $.edgeLoadBalancingOrigin = edgeLoadBalancingOrigin;
            return this;
        }

        /**
         * @param edgeLoadBalancingOrigin The Edge Load Balancing module allows you to implement groups of data centers featuring load balancing, session persistence, and real-time dynamic failover. Enabling ELB routes requests contextually based on location, device, or network, along with optional rules you specify. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeLoadBalancingOrigin(GetPropertyRulesBuilderRulesV20230530BehaviorEdgeLoadBalancingOriginArgs edgeLoadBalancingOrigin) {
            return edgeLoadBalancingOrigin(Output.of(edgeLoadBalancingOrigin));
        }

        /**
         * @param edgeOriginAuthorization Allows the origin server to use a cookie to ensure requests from Akamai servers are genuine. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeOriginAuthorization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeOriginAuthorizationArgs> edgeOriginAuthorization) {
            $.edgeOriginAuthorization = edgeOriginAuthorization;
            return this;
        }

        /**
         * @param edgeOriginAuthorization Allows the origin server to use a cookie to ensure requests from Akamai servers are genuine. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeOriginAuthorization(GetPropertyRulesBuilderRulesV20230530BehaviorEdgeOriginAuthorizationArgs edgeOriginAuthorization) {
            return edgeOriginAuthorization(Output.of(edgeOriginAuthorization));
        }

        /**
         * @param edgeRedirector This behavior enables the `Edge Redirector Cloudlet` application, which helps you manage large numbers of redirects. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control the Edge Redirector within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeRedirector(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirectorArgs> edgeRedirector) {
            $.edgeRedirector = edgeRedirector;
            return this;
        }

        /**
         * @param edgeRedirector This behavior enables the `Edge Redirector Cloudlet` application, which helps you manage large numbers of redirects. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control the Edge Redirector within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeRedirector(GetPropertyRulesBuilderRulesV20230530BehaviorEdgeRedirectorArgs edgeRedirector) {
            return edgeRedirector(Output.of(edgeRedirector));
        }

        /**
         * @param edgeScape `EdgeScape` allows you to customize content based on the end user&#39;s geographic location or connection speed. When enabled, the edge server sends a special `X-Akamai-Edgescape` header to the origin server encoding relevant details about the end-user client as key-value pairs. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeScape(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeScapeArgs> edgeScape) {
            $.edgeScape = edgeScape;
            return this;
        }

        /**
         * @param edgeScape `EdgeScape` allows you to customize content based on the end user&#39;s geographic location or connection speed. When enabled, the edge server sends a special `X-Akamai-Edgescape` header to the origin server encoding relevant details about the end-user client as key-value pairs. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeScape(GetPropertyRulesBuilderRulesV20230530BehaviorEdgeScapeArgs edgeScape) {
            return edgeScape(Output.of(edgeScape));
        }

        /**
         * @param edgeSideIncludes Allows edge servers to process edge side include (ESI) code to generate dynamic content. To apply this behavior, you need to match on a `contentType`, `path`, or `filename`. Since this behavior requires more parsing time, you should not apply it to pages that lack ESI code, or to any non-HTML content. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeSideIncludes(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeSideIncludesArgs> edgeSideIncludes) {
            $.edgeSideIncludes = edgeSideIncludes;
            return this;
        }

        /**
         * @param edgeSideIncludes Allows edge servers to process edge side include (ESI) code to generate dynamic content. To apply this behavior, you need to match on a `contentType`, `path`, or `filename`. Since this behavior requires more parsing time, you should not apply it to pages that lack ESI code, or to any non-HTML content. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeSideIncludes(GetPropertyRulesBuilderRulesV20230530BehaviorEdgeSideIncludesArgs edgeSideIncludes) {
            return edgeSideIncludes(Output.of(edgeSideIncludes));
        }

        /**
         * @param edgeWorker `EdgeWorkers` are JavaScript applications that allow you to manipulate your web traffic on edge servers outside of Property Manager behaviors, and deployed independently from your configuration&#39;s logic.  This behavior applies an EdgeWorker to a set of edge requests. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeWorker(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEdgeWorkerArgs> edgeWorker) {
            $.edgeWorker = edgeWorker;
            return this;
        }

        /**
         * @param edgeWorker `EdgeWorkers` are JavaScript applications that allow you to manipulate your web traffic on edge servers outside of Property Manager behaviors, and deployed independently from your configuration&#39;s logic.  This behavior applies an EdgeWorker to a set of edge requests. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder edgeWorker(GetPropertyRulesBuilderRulesV20230530BehaviorEdgeWorkerArgs edgeWorker) {
            return edgeWorker(Output.of(edgeWorker));
        }

        /**
         * @param enhancedAkamaiProtocol Enables the Enhanced Akamai Protocol, a suite of advanced routing and transport optimizations that increase your website&#39;s performance and reliability. It is only available to specific applications, and requires a special routing from edge to origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder enhancedAkamaiProtocol(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEnhancedAkamaiProtocolArgs> enhancedAkamaiProtocol) {
            $.enhancedAkamaiProtocol = enhancedAkamaiProtocol;
            return this;
        }

        /**
         * @param enhancedAkamaiProtocol Enables the Enhanced Akamai Protocol, a suite of advanced routing and transport optimizations that increase your website&#39;s performance and reliability. It is only available to specific applications, and requires a special routing from edge to origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder enhancedAkamaiProtocol(GetPropertyRulesBuilderRulesV20230530BehaviorEnhancedAkamaiProtocolArgs enhancedAkamaiProtocol) {
            return enhancedAkamaiProtocol(Output.of(enhancedAkamaiProtocol));
        }

        /**
         * @param enhancedProxyDetection Enhanced Proxy Detection (EPD) leverages the GeoGuard service provided by GeoComply to add proxy detection and location spoofing protection. It identifies requests for your content that have been redirected from an unwanted source through a proxy. You can then allow, deny, or redirect these requests. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder enhancedProxyDetection(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEnhancedProxyDetectionArgs> enhancedProxyDetection) {
            $.enhancedProxyDetection = enhancedProxyDetection;
            return this;
        }

        /**
         * @param enhancedProxyDetection Enhanced Proxy Detection (EPD) leverages the GeoGuard service provided by GeoComply to add proxy detection and location spoofing protection. It identifies requests for your content that have been redirected from an unwanted source through a proxy. You can then allow, deny, or redirect these requests. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder enhancedProxyDetection(GetPropertyRulesBuilderRulesV20230530BehaviorEnhancedProxyDetectionArgs enhancedProxyDetection) {
            return enhancedProxyDetection(Output.of(enhancedProxyDetection));
        }

        /**
         * @param epdForwardHeaderEnrichment This behavior identifies unwanted requests from an anonymous proxy. This and the `enhancedProxyDetection` behavior work together and need to be included either in the same rule, or in the default one. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder epdForwardHeaderEnrichment(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorEpdForwardHeaderEnrichmentArgs> epdForwardHeaderEnrichment) {
            $.epdForwardHeaderEnrichment = epdForwardHeaderEnrichment;
            return this;
        }

        /**
         * @param epdForwardHeaderEnrichment This behavior identifies unwanted requests from an anonymous proxy. This and the `enhancedProxyDetection` behavior work together and need to be included either in the same rule, or in the default one. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder epdForwardHeaderEnrichment(GetPropertyRulesBuilderRulesV20230530BehaviorEpdForwardHeaderEnrichmentArgs epdForwardHeaderEnrichment) {
            return epdForwardHeaderEnrichment(Output.of(epdForwardHeaderEnrichment));
        }

        /**
         * @param failAction Specifies how to respond when the origin is not available: by serving stale content, by serving an error page, or by redirecting.  To apply this behavior, you should match on an `originTimeout` or `matchResponseCode`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder failAction(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorFailActionArgs> failAction) {
            $.failAction = failAction;
            return this;
        }

        /**
         * @param failAction Specifies how to respond when the origin is not available: by serving stale content, by serving an error page, or by redirecting.  To apply this behavior, you should match on an `originTimeout` or `matchResponseCode`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder failAction(GetPropertyRulesBuilderRulesV20230530BehaviorFailActionArgs failAction) {
            return failAction(Output.of(failAction));
        }

        /**
         * @param failoverBotManagerFeatureCompatibility Ensures that functionality such as challenge authentication and reset protocol work with a failover product property you use to create an alternate hostname. Apply it to any properties that implement a failover under the Cloud Security Failover product. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder failoverBotManagerFeatureCompatibility(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorFailoverBotManagerFeatureCompatibilityArgs> failoverBotManagerFeatureCompatibility) {
            $.failoverBotManagerFeatureCompatibility = failoverBotManagerFeatureCompatibility;
            return this;
        }

        /**
         * @param failoverBotManagerFeatureCompatibility Ensures that functionality such as challenge authentication and reset protocol work with a failover product property you use to create an alternate hostname. Apply it to any properties that implement a failover under the Cloud Security Failover product. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder failoverBotManagerFeatureCompatibility(GetPropertyRulesBuilderRulesV20230530BehaviorFailoverBotManagerFeatureCompatibilityArgs failoverBotManagerFeatureCompatibility) {
            return failoverBotManagerFeatureCompatibility(Output.of(failoverBotManagerFeatureCompatibility));
        }

        /**
         * @param fastInvalidate This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder fastInvalidate(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorFastInvalidateArgs> fastInvalidate) {
            $.fastInvalidate = fastInvalidate;
            return this;
        }

        /**
         * @param fastInvalidate This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder fastInvalidate(GetPropertyRulesBuilderRulesV20230530BehaviorFastInvalidateArgs fastInvalidate) {
            return fastInvalidate(Output.of(fastInvalidate));
        }

        /**
         * @param firstPartyMarketing Enables the Cloud Marketing Cloudlet, which helps MediaMath customers collect usage data and place corresponding tags for use in online advertising.  You can configure tags using either the Cloudlets Policy Manager application or the `Cloudlets API`. See also the `firstPartyMarketingPlus` behavior, which integrates better with both MediaMath and its partners. Both behaviors support the same set of options. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder firstPartyMarketing(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingArgs> firstPartyMarketing) {
            $.firstPartyMarketing = firstPartyMarketing;
            return this;
        }

        /**
         * @param firstPartyMarketing Enables the Cloud Marketing Cloudlet, which helps MediaMath customers collect usage data and place corresponding tags for use in online advertising.  You can configure tags using either the Cloudlets Policy Manager application or the `Cloudlets API`. See also the `firstPartyMarketingPlus` behavior, which integrates better with both MediaMath and its partners. Both behaviors support the same set of options. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder firstPartyMarketing(GetPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingArgs firstPartyMarketing) {
            return firstPartyMarketing(Output.of(firstPartyMarketing));
        }

        /**
         * @param firstPartyMarketingPlus Enables the Cloud Marketing Plus Cloudlet, which helps MediaMath customers collect usage data and place corresponding tags for use in online advertising.  You can configure tags using either the Cloudlets Policy Manager application or the `Cloudlets API`. See also the `firstPartyMarketing` behavior, which integrates with MediaMath but not its partners. Both behaviors support the same set of options. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder firstPartyMarketingPlus(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlusArgs> firstPartyMarketingPlus) {
            $.firstPartyMarketingPlus = firstPartyMarketingPlus;
            return this;
        }

        /**
         * @param firstPartyMarketingPlus Enables the Cloud Marketing Plus Cloudlet, which helps MediaMath customers collect usage data and place corresponding tags for use in online advertising.  You can configure tags using either the Cloudlets Policy Manager application or the `Cloudlets API`. See also the `firstPartyMarketing` behavior, which integrates with MediaMath but not its partners. Both behaviors support the same set of options. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder firstPartyMarketingPlus(GetPropertyRulesBuilderRulesV20230530BehaviorFirstPartyMarketingPlusArgs firstPartyMarketingPlus) {
            return firstPartyMarketingPlus(Output.of(firstPartyMarketingPlus));
        }

        /**
         * @param forwardRewrite The Forward Rewrite Cloudlet allows you to conditionally modify the forward path in edge content without affecting the URL that displays in the user&#39;s address bar. If Cloudlets are available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control how this feature works within `Control Center`, or use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder forwardRewrite(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorForwardRewriteArgs> forwardRewrite) {
            $.forwardRewrite = forwardRewrite;
            return this;
        }

        /**
         * @param forwardRewrite The Forward Rewrite Cloudlet allows you to conditionally modify the forward path in edge content without affecting the URL that displays in the user&#39;s address bar. If Cloudlets are available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control how this feature works within `Control Center`, or use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder forwardRewrite(GetPropertyRulesBuilderRulesV20230530BehaviorForwardRewriteArgs forwardRewrite) {
            return forwardRewrite(Output.of(forwardRewrite));
        }

        /**
         * @param g2oheader The `signature header authentication` (g2o) security feature provides header-based verification of outgoing origin requests. Edge servers encrypt request data in a pre-defined header, which the origin uses to verify that the edge server processed the request. This behavior configures the request data, header names, encryption algorithm, and shared secret to use for verification. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder g2oheader(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorG2oheaderArgs> g2oheader) {
            $.g2oheader = g2oheader;
            return this;
        }

        /**
         * @param g2oheader The `signature header authentication` (g2o) security feature provides header-based verification of outgoing origin requests. Edge servers encrypt request data in a pre-defined header, which the origin uses to verify that the edge server processed the request. This behavior configures the request data, header names, encryption algorithm, and shared secret to use for verification. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder g2oheader(GetPropertyRulesBuilderRulesV20230530BehaviorG2oheaderArgs g2oheader) {
            return g2oheader(Output.of(g2oheader));
        }

        /**
         * @param globalRequestNumber Generates a unique identifier for each request on the Akamai edge network, for use in logging and debugging. GRN identifiers follow the same format as Akamai&#39;s error reference strings, for example: `0.05313217.1567801841.1457a3`. You can use the Edge Diagnostics API&#39;s `Translate error string` operation to get low-level details about any request. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder globalRequestNumber(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorGlobalRequestNumberArgs> globalRequestNumber) {
            $.globalRequestNumber = globalRequestNumber;
            return this;
        }

        /**
         * @param globalRequestNumber Generates a unique identifier for each request on the Akamai edge network, for use in logging and debugging. GRN identifiers follow the same format as Akamai&#39;s error reference strings, for example: `0.05313217.1567801841.1457a3`. You can use the Edge Diagnostics API&#39;s `Translate error string` operation to get low-level details about any request. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder globalRequestNumber(GetPropertyRulesBuilderRulesV20230530BehaviorGlobalRequestNumberArgs globalRequestNumber) {
            return globalRequestNumber(Output.of(globalRequestNumber));
        }

        /**
         * @param graphqlCaching This behavior configures how to cache GraphQL-based API traffic.  Enable `caching` for your GraphQL API traffic, along with `allowPost` to cache POST responses.  To configure REST API traffic, use the `rapid` behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder graphqlCaching(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorGraphqlCachingArgs> graphqlCaching) {
            $.graphqlCaching = graphqlCaching;
            return this;
        }

        /**
         * @param graphqlCaching This behavior configures how to cache GraphQL-based API traffic.  Enable `caching` for your GraphQL API traffic, along with `allowPost` to cache POST responses.  To configure REST API traffic, use the `rapid` behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder graphqlCaching(GetPropertyRulesBuilderRulesV20230530BehaviorGraphqlCachingArgs graphqlCaching) {
            return graphqlCaching(Output.of(graphqlCaching));
        }

        /**
         * @param gzipResponse Apply `gzip` compression to speed transfer time. This behavior applies best to text-based content such as HTML, CSS, and JavaScript, especially once files exceed about 10KB. Do not apply it to already compressed image formats, or to small files that would add more time to uncompress. To apply this behavior, you should match on `contentType` or the content&#39;s `cacheability`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder gzipResponse(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorGzipResponseArgs> gzipResponse) {
            $.gzipResponse = gzipResponse;
            return this;
        }

        /**
         * @param gzipResponse Apply `gzip` compression to speed transfer time. This behavior applies best to text-based content such as HTML, CSS, and JavaScript, especially once files exceed about 10KB. Do not apply it to already compressed image formats, or to small files that would add more time to uncompress. To apply this behavior, you should match on `contentType` or the content&#39;s `cacheability`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder gzipResponse(GetPropertyRulesBuilderRulesV20230530BehaviorGzipResponseArgs gzipResponse) {
            return gzipResponse(Output.of(gzipResponse));
        }

        /**
         * @param hdDataAdvanced This behavior specifies Akamai XML metadata that can only be configured on your behalf by Akamai Professional Services.  Unlike the `advanced` behavior, this may apply a different set of overriding metadata that executes in a post-processing phase. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder hdDataAdvanced(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHdDataAdvancedArgs> hdDataAdvanced) {
            $.hdDataAdvanced = hdDataAdvanced;
            return this;
        }

        /**
         * @param hdDataAdvanced This behavior specifies Akamai XML metadata that can only be configured on your behalf by Akamai Professional Services.  Unlike the `advanced` behavior, this may apply a different set of overriding metadata that executes in a post-processing phase. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder hdDataAdvanced(GetPropertyRulesBuilderRulesV20230530BehaviorHdDataAdvancedArgs hdDataAdvanced) {
            return hdDataAdvanced(Output.of(hdDataAdvanced));
        }

        /**
         * @param healthDetection Monitors the health of your origin server by tracking unsuccessful attempts to contact it. Use this behavior to keep end users from having to wait several seconds before a forwarded request times out, or to reduce requests on the origin server when it is unavailable. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder healthDetection(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHealthDetectionArgs> healthDetection) {
            $.healthDetection = healthDetection;
            return this;
        }

        /**
         * @param healthDetection Monitors the health of your origin server by tracking unsuccessful attempts to contact it. Use this behavior to keep end users from having to wait several seconds before a forwarded request times out, or to reduce requests on the origin server when it is unavailable. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder healthDetection(GetPropertyRulesBuilderRulesV20230530BehaviorHealthDetectionArgs healthDetection) {
            return healthDetection(Output.of(healthDetection));
        }

        /**
         * @param hsafEipBinding Edge IP Binding works with a limited set of static IP addresses to distribute your content, which can be limiting in large footprint environments. This behavior sets Hash Serial and Forward (HSAF) for Edge IP Binding to deal with larger footprints. It can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder hsafEipBinding(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHsafEipBindingArgs> hsafEipBinding) {
            $.hsafEipBinding = hsafEipBinding;
            return this;
        }

        /**
         * @param hsafEipBinding Edge IP Binding works with a limited set of static IP addresses to distribute your content, which can be limiting in large footprint environments. This behavior sets Hash Serial and Forward (HSAF) for Edge IP Binding to deal with larger footprints. It can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder hsafEipBinding(GetPropertyRulesBuilderRulesV20230530BehaviorHsafEipBindingArgs hsafEipBinding) {
            return hsafEipBinding(Output.of(hsafEipBinding));
        }

        /**
         * @param http2 Enables the HTTP/2 protocol, which reduces latency and improves efficiency. You can only apply this behavior if the property is marked as secure.  See `Secure property requirements` for guidance. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder http2(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttp2Args> http2) {
            $.http2 = http2;
            return this;
        }

        /**
         * @param http2 Enables the HTTP/2 protocol, which reduces latency and improves efficiency. You can only apply this behavior if the property is marked as secure.  See `Secure property requirements` for guidance. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder http2(GetPropertyRulesBuilderRulesV20230530BehaviorHttp2Args http2) {
            return http2(Output.of(http2));
        }

        /**
         * @param http3 This enables the HTTP/3 protocol that uses QUIC. The behavior allows for improved performance and faster connection setup. You can only apply this behavior if the property is marked as secure. See `Secure property requirements` and the `Property Manager documentation` for guidance. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder http3(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttp3Args> http3) {
            $.http3 = http3;
            return this;
        }

        /**
         * @param http3 This enables the HTTP/3 protocol that uses QUIC. The behavior allows for improved performance and faster connection setup. You can only apply this behavior if the property is marked as secure. See `Secure property requirements` and the `Property Manager documentation` for guidance. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder http3(GetPropertyRulesBuilderRulesV20230530BehaviorHttp3Args http3) {
            return http3(Output.of(http3));
        }

        /**
         * @param httpStrictTransportSecurity Applies HTTP Strict Transport Security (HSTS), disallowing insecure HTTP traffic. Apply this to hostnames managed with Standard TLS or Enhanced TLS certificates. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder httpStrictTransportSecurity(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurityArgs> httpStrictTransportSecurity) {
            $.httpStrictTransportSecurity = httpStrictTransportSecurity;
            return this;
        }

        /**
         * @param httpStrictTransportSecurity Applies HTTP Strict Transport Security (HSTS), disallowing insecure HTTP traffic. Apply this to hostnames managed with Standard TLS or Enhanced TLS certificates. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder httpStrictTransportSecurity(GetPropertyRulesBuilderRulesV20230530BehaviorHttpStrictTransportSecurityArgs httpStrictTransportSecurity) {
            return httpStrictTransportSecurity(Output.of(httpStrictTransportSecurity));
        }

        /**
         * @param httpToHttpsUpgrade Upgrades an HTTP edge request to HTTPS for the remainder of the request flow. Enable this behavior only if your origin supports HTTPS, and if your `origin` behavior is configured with `originCertsToHonor` to verify SSL certificates. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder httpToHttpsUpgrade(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorHttpToHttpsUpgradeArgs> httpToHttpsUpgrade) {
            $.httpToHttpsUpgrade = httpToHttpsUpgrade;
            return this;
        }

        /**
         * @param httpToHttpsUpgrade Upgrades an HTTP edge request to HTTPS for the remainder of the request flow. Enable this behavior only if your origin supports HTTPS, and if your `origin` behavior is configured with `originCertsToHonor` to verify SSL certificates. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder httpToHttpsUpgrade(GetPropertyRulesBuilderRulesV20230530BehaviorHttpToHttpsUpgradeArgs httpToHttpsUpgrade) {
            return httpToHttpsUpgrade(Output.of(httpToHttpsUpgrade));
        }

        /**
         * @param imOverride This specifies common query parameters that affect how `imageManager` transforms images, potentially overriding policy, width, format, or density request parameters. This also allows you to assign the value of one of the property&#39;s `rule tree variables` to one of Image and Video Manager&#39;s own policy variables. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder imOverride(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorImOverrideArgs> imOverride) {
            $.imOverride = imOverride;
            return this;
        }

        /**
         * @param imOverride This specifies common query parameters that affect how `imageManager` transforms images, potentially overriding policy, width, format, or density request parameters. This also allows you to assign the value of one of the property&#39;s `rule tree variables` to one of Image and Video Manager&#39;s own policy variables. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder imOverride(GetPropertyRulesBuilderRulesV20230530BehaviorImOverrideArgs imOverride) {
            return imOverride(Output.of(imOverride));
        }

        /**
         * @param imageAndVideoManager This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder imageAndVideoManager(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerArgs> imageAndVideoManager) {
            $.imageAndVideoManager = imageAndVideoManager;
            return this;
        }

        /**
         * @param imageAndVideoManager This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder imageAndVideoManager(GetPropertyRulesBuilderRulesV20230530BehaviorImageAndVideoManagerArgs imageAndVideoManager) {
            return imageAndVideoManager(Output.of(imageAndVideoManager));
        }

        /**
         * @param imageManager Optimizes images&#39; size or file type for the requesting device.  You can also use this behavior to generate API tokens to apply your own policies to matching images using the `Image and Video Manager API`. To apply this behavior, you need to match on a `fileExtension`. Once you apply Image and Video Manager to traffic, you can add the `advancedImMatch` to ensure the behavior applies to the requests from the Image and Video Manager backend. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder imageManager(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorImageManagerArgs> imageManager) {
            $.imageManager = imageManager;
            return this;
        }

        /**
         * @param imageManager Optimizes images&#39; size or file type for the requesting device.  You can also use this behavior to generate API tokens to apply your own policies to matching images using the `Image and Video Manager API`. To apply this behavior, you need to match on a `fileExtension`. Once you apply Image and Video Manager to traffic, you can add the `advancedImMatch` to ensure the behavior applies to the requests from the Image and Video Manager backend. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder imageManager(GetPropertyRulesBuilderRulesV20230530BehaviorImageManagerArgs imageManager) {
            return imageManager(Output.of(imageManager));
        }

        /**
         * @param imageManagerVideo Optimizes videos managed by Image and Video Manager for the requesting device.  You can also use this behavior to generate API tokens to apply your own policies to matching videos using the `Image and Video Manager API`. To apply this behavior, you need to match on a `fileExtension`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder imageManagerVideo(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoArgs> imageManagerVideo) {
            $.imageManagerVideo = imageManagerVideo;
            return this;
        }

        /**
         * @param imageManagerVideo Optimizes videos managed by Image and Video Manager for the requesting device.  You can also use this behavior to generate API tokens to apply your own policies to matching videos using the `Image and Video Manager API`. To apply this behavior, you need to match on a `fileExtension`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder imageManagerVideo(GetPropertyRulesBuilderRulesV20230530BehaviorImageManagerVideoArgs imageManagerVideo) {
            return imageManagerVideo(Output.of(imageManagerVideo));
        }

        /**
         * @param include Includes let you reuse chunks of a property configuration that you can manage separately from the rest of the property rule tree. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder include(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorIncludeArgs> include) {
            $.include = include;
            return this;
        }

        /**
         * @param include Includes let you reuse chunks of a property configuration that you can manage separately from the rest of the property rule tree. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder include(GetPropertyRulesBuilderRulesV20230530BehaviorIncludeArgs include) {
            return include(Output.of(include));
        }

        /**
         * @param instant The Instant feature allows you to prefetch content to the edge cache by adding link relation attributes to markup. For example: This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder instant(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorInstantArgs> instant) {
            $.instant = instant;
            return this;
        }

        /**
         * @param instant The Instant feature allows you to prefetch content to the edge cache by adding link relation attributes to markup. For example: This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder instant(GetPropertyRulesBuilderRulesV20230530BehaviorInstantArgs instant) {
            return instant(Output.of(instant));
        }

        /**
         * @param instantConfig Multi-Domain Configuration, also known as `InstantConfig`, allows you to apply property settings to all incoming hostnames based on a DNS lookup, without explicitly listing them among the property&#39;s hostnames. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder instantConfig(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorInstantConfigArgs> instantConfig) {
            $.instantConfig = instantConfig;
            return this;
        }

        /**
         * @param instantConfig Multi-Domain Configuration, also known as `InstantConfig`, allows you to apply property settings to all incoming hostnames based on a DNS lookup, without explicitly listing them among the property&#39;s hostnames. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder instantConfig(GetPropertyRulesBuilderRulesV20230530BehaviorInstantConfigArgs instantConfig) {
            return instantConfig(Output.of(instantConfig));
        }

        /**
         * @param largeFileOptimization The `Large File Optimization` (LFO) feature improves performance and reliability when delivering large files. You need this behavior for objects larger than 1.8GB, and you should apply it to anything over 100MB. You should apply it only to the specific content to be optimized, such as a download directory&#39;s `.gz` files, and enable the `useVersioning` option while enforcing your own filename versioning policy. Make sure you meet all the `requirements and best practices` for the LFO delivery. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder largeFileOptimization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationArgs> largeFileOptimization) {
            $.largeFileOptimization = largeFileOptimization;
            return this;
        }

        /**
         * @param largeFileOptimization The `Large File Optimization` (LFO) feature improves performance and reliability when delivering large files. You need this behavior for objects larger than 1.8GB, and you should apply it to anything over 100MB. You should apply it only to the specific content to be optimized, such as a download directory&#39;s `.gz` files, and enable the `useVersioning` option while enforcing your own filename versioning policy. Make sure you meet all the `requirements and best practices` for the LFO delivery. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder largeFileOptimization(GetPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationArgs largeFileOptimization) {
            return largeFileOptimization(Output.of(largeFileOptimization));
        }

        /**
         * @param largeFileOptimizationAdvanced The `Large File Optimization` feature improves performance and reliability when delivering large files. You need this behavior for objects larger than 1.8GB, and it&#39;s recommended for anything over 100MB. You should apply it only to the specific content to be optimized, such as a download directory&#39;s `.gz` files.  Note that it is best to use `NetStorage` for objects larger than 1.8GB. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder largeFileOptimizationAdvanced(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationAdvancedArgs> largeFileOptimizationAdvanced) {
            $.largeFileOptimizationAdvanced = largeFileOptimizationAdvanced;
            return this;
        }

        /**
         * @param largeFileOptimizationAdvanced The `Large File Optimization` feature improves performance and reliability when delivering large files. You need this behavior for objects larger than 1.8GB, and it&#39;s recommended for anything over 100MB. You should apply it only to the specific content to be optimized, such as a download directory&#39;s `.gz` files.  Note that it is best to use `NetStorage` for objects larger than 1.8GB. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder largeFileOptimizationAdvanced(GetPropertyRulesBuilderRulesV20230530BehaviorLargeFileOptimizationAdvancedArgs largeFileOptimizationAdvanced) {
            return largeFileOptimizationAdvanced(Output.of(largeFileOptimizationAdvanced));
        }

        /**
         * @param limitBitRate Control the rate at which content serves out to end users, optionally varying the speed depending on the file size or elapsed download time. Each bit rate specified in the `bitrateTable` array corresponds to a `thresholdTable` entry that activates it.  You can use this behavior to prevent media downloads from progressing faster than they are viewed, for example, or to differentiate various tiers of end-user experience. To apply this behavior, you should match on a `contentType`, `path`, or `filename`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder limitBitRate(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateArgs> limitBitRate) {
            $.limitBitRate = limitBitRate;
            return this;
        }

        /**
         * @param limitBitRate Control the rate at which content serves out to end users, optionally varying the speed depending on the file size or elapsed download time. Each bit rate specified in the `bitrateTable` array corresponds to a `thresholdTable` entry that activates it.  You can use this behavior to prevent media downloads from progressing faster than they are viewed, for example, or to differentiate various tiers of end-user experience. To apply this behavior, you should match on a `contentType`, `path`, or `filename`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder limitBitRate(GetPropertyRulesBuilderRulesV20230530BehaviorLimitBitRateArgs limitBitRate) {
            return limitBitRate(Output.of(limitBitRate));
        }

        /**
         * @param logCustom Logs custom details from the origin response in the `Log Delivery Service` report. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder logCustom(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorLogCustomArgs> logCustom) {
            $.logCustom = logCustom;
            return this;
        }

        /**
         * @param logCustom Logs custom details from the origin response in the `Log Delivery Service` report. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder logCustom(GetPropertyRulesBuilderRulesV20230530BehaviorLogCustomArgs logCustom) {
            return logCustom(Output.of(logCustom));
        }

        /**
         * @param mPulse `mPulse` provides high-level performance analytics and predictive recommendations based on real end user data. See the `mPulse Quick Start` to set up mPulse on your website. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mPulse(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMPulseArgs> mPulse) {
            $.mPulse = mPulse;
            return this;
        }

        /**
         * @param mPulse `mPulse` provides high-level performance analytics and predictive recommendations based on real end user data. See the `mPulse Quick Start` to set up mPulse on your website. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mPulse(GetPropertyRulesBuilderRulesV20230530BehaviorMPulseArgs mPulse) {
            return mPulse(Output.of(mPulse));
        }

        /**
         * @param manifestPersonalization Allows customers who use the Adaptive Media Delivery product to enhance content based on the capabilities of each end user&#39;s device.  This behavior configures a `manifest` for both HLS Live and on-demand streaming. For more information, see `Adaptive Media Delivery`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder manifestPersonalization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorManifestPersonalizationArgs> manifestPersonalization) {
            $.manifestPersonalization = manifestPersonalization;
            return this;
        }

        /**
         * @param manifestPersonalization Allows customers who use the Adaptive Media Delivery product to enhance content based on the capabilities of each end user&#39;s device.  This behavior configures a `manifest` for both HLS Live and on-demand streaming. For more information, see `Adaptive Media Delivery`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder manifestPersonalization(GetPropertyRulesBuilderRulesV20230530BehaviorManifestPersonalizationArgs manifestPersonalization) {
            return manifestPersonalization(Output.of(manifestPersonalization));
        }

        /**
         * @param manifestRerouting This behavior works with `adScalerCircuitBreaker`. It delegates parts of the media delivery workflow, like ad insertion, to other technology partners. Akamai reroutes manifest file requests to partner platforms for processing prior to being delivered. Rerouting simplifies the workflow and improves the media streaming experience. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder manifestRerouting(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorManifestReroutingArgs> manifestRerouting) {
            $.manifestRerouting = manifestRerouting;
            return this;
        }

        /**
         * @param manifestRerouting This behavior works with `adScalerCircuitBreaker`. It delegates parts of the media delivery workflow, like ad insertion, to other technology partners. Akamai reroutes manifest file requests to partner platforms for processing prior to being delivered. Rerouting simplifies the workflow and improves the media streaming experience. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder manifestRerouting(GetPropertyRulesBuilderRulesV20230530BehaviorManifestReroutingArgs manifestRerouting) {
            return manifestRerouting(Output.of(manifestRerouting));
        }

        /**
         * @param manualServerPush With the `http2` behavior enabled, this loads a specified set of objects into the client browser&#39;s cache. To apply this behavior, you should match on a `path` or `filename`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder manualServerPush(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorManualServerPushArgs> manualServerPush) {
            $.manualServerPush = manualServerPush;
            return this;
        }

        /**
         * @param manualServerPush With the `http2` behavior enabled, this loads a specified set of objects into the client browser&#39;s cache. To apply this behavior, you should match on a `path` or `filename`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder manualServerPush(GetPropertyRulesBuilderRulesV20230530BehaviorManualServerPushArgs manualServerPush) {
            return manualServerPush(Output.of(manualServerPush));
        }

        /**
         * @param mediaAcceleration Enables Accelerated Media Delivery for this set of requests. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mediaAcceleration(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationArgs> mediaAcceleration) {
            $.mediaAcceleration = mediaAcceleration;
            return this;
        }

        /**
         * @param mediaAcceleration Enables Accelerated Media Delivery for this set of requests. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mediaAcceleration(GetPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationArgs mediaAcceleration) {
            return mediaAcceleration(Output.of(mediaAcceleration));
        }

        /**
         * @param mediaAccelerationQuicOptout When enabled, disables use of QUIC protocol for this set of accelerated media content. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mediaAccelerationQuicOptout(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationQuicOptoutArgs> mediaAccelerationQuicOptout) {
            $.mediaAccelerationQuicOptout = mediaAccelerationQuicOptout;
            return this;
        }

        /**
         * @param mediaAccelerationQuicOptout When enabled, disables use of QUIC protocol for this set of accelerated media content. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mediaAccelerationQuicOptout(GetPropertyRulesBuilderRulesV20230530BehaviorMediaAccelerationQuicOptoutArgs mediaAccelerationQuicOptout) {
            return mediaAccelerationQuicOptout(Output.of(mediaAccelerationQuicOptout));
        }

        /**
         * @param mediaClient This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mediaClient(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaClientArgs> mediaClient) {
            $.mediaClient = mediaClient;
            return this;
        }

        /**
         * @param mediaClient This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mediaClient(GetPropertyRulesBuilderRulesV20230530BehaviorMediaClientArgs mediaClient) {
            return mediaClient(Output.of(mediaClient));
        }

        /**
         * @param mediaFileRetrievalOptimization Media File Retrieval Optimization (MFRO) speeds the delivery of large media files by relying on caches of partial objects. You should use it for files larger than 100 MB. It&#39;s required for files larger than 1.8 GB, and works best with `NetStorage`. To apply this behavior, you should match on a `fileExtension`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mediaFileRetrievalOptimization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaFileRetrievalOptimizationArgs> mediaFileRetrievalOptimization) {
            $.mediaFileRetrievalOptimization = mediaFileRetrievalOptimization;
            return this;
        }

        /**
         * @param mediaFileRetrievalOptimization Media File Retrieval Optimization (MFRO) speeds the delivery of large media files by relying on caches of partial objects. You should use it for files larger than 100 MB. It&#39;s required for files larger than 1.8 GB, and works best with `NetStorage`. To apply this behavior, you should match on a `fileExtension`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mediaFileRetrievalOptimization(GetPropertyRulesBuilderRulesV20230530BehaviorMediaFileRetrievalOptimizationArgs mediaFileRetrievalOptimization) {
            return mediaFileRetrievalOptimization(Output.of(mediaFileRetrievalOptimization));
        }

        /**
         * @param mediaOriginFailover Specifies how edge servers respond when the origin is unresponsive, or suffers from server or content errors. You can specify how many times to retry, switch to a backup origin hostname, or configure a redirect. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mediaOriginFailover(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMediaOriginFailoverArgs> mediaOriginFailover) {
            $.mediaOriginFailover = mediaOriginFailover;
            return this;
        }

        /**
         * @param mediaOriginFailover Specifies how edge servers respond when the origin is unresponsive, or suffers from server or content errors. You can specify how many times to retry, switch to a backup origin hostname, or configure a redirect. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mediaOriginFailover(GetPropertyRulesBuilderRulesV20230530BehaviorMediaOriginFailoverArgs mediaOriginFailover) {
            return mediaOriginFailover(Output.of(mediaOriginFailover));
        }

        /**
         * @param metadataCaching This behavior reduces time spent waiting for the initial response, also known as time to first byte, during peak traffic events. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder metadataCaching(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMetadataCachingArgs> metadataCaching) {
            $.metadataCaching = metadataCaching;
            return this;
        }

        /**
         * @param metadataCaching This behavior reduces time spent waiting for the initial response, also known as time to first byte, during peak traffic events. Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder metadataCaching(GetPropertyRulesBuilderRulesV20230530BehaviorMetadataCachingArgs metadataCaching) {
            return metadataCaching(Output.of(metadataCaching));
        }

        /**
         * @param mobileSdkPerformance This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mobileSdkPerformance(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorMobileSdkPerformanceArgs> mobileSdkPerformance) {
            $.mobileSdkPerformance = mobileSdkPerformance;
            return this;
        }

        /**
         * @param mobileSdkPerformance This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder mobileSdkPerformance(GetPropertyRulesBuilderRulesV20230530BehaviorMobileSdkPerformanceArgs mobileSdkPerformance) {
            return mobileSdkPerformance(Output.of(mobileSdkPerformance));
        }

        /**
         * @param modifyIncomingRequestHeader Modify, add, remove, or pass along specific request headers coming upstream from the client. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder modifyIncomingRequestHeader(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingRequestHeaderArgs> modifyIncomingRequestHeader) {
            $.modifyIncomingRequestHeader = modifyIncomingRequestHeader;
            return this;
        }

        /**
         * @param modifyIncomingRequestHeader Modify, add, remove, or pass along specific request headers coming upstream from the client. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder modifyIncomingRequestHeader(GetPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingRequestHeaderArgs modifyIncomingRequestHeader) {
            return modifyIncomingRequestHeader(Output.of(modifyIncomingRequestHeader));
        }

        /**
         * @param modifyIncomingResponseHeader Modify, add, remove, or pass along specific response headers coming downstream from the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder modifyIncomingResponseHeader(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingResponseHeaderArgs> modifyIncomingResponseHeader) {
            $.modifyIncomingResponseHeader = modifyIncomingResponseHeader;
            return this;
        }

        /**
         * @param modifyIncomingResponseHeader Modify, add, remove, or pass along specific response headers coming downstream from the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder modifyIncomingResponseHeader(GetPropertyRulesBuilderRulesV20230530BehaviorModifyIncomingResponseHeaderArgs modifyIncomingResponseHeader) {
            return modifyIncomingResponseHeader(Output.of(modifyIncomingResponseHeader));
        }

        /**
         * @param modifyOutgoingRequestHeader Modify, add, remove, or pass along specific request headers going upstream towards the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder modifyOutgoingRequestHeader(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingRequestHeaderArgs> modifyOutgoingRequestHeader) {
            $.modifyOutgoingRequestHeader = modifyOutgoingRequestHeader;
            return this;
        }

        /**
         * @param modifyOutgoingRequestHeader Modify, add, remove, or pass along specific request headers going upstream towards the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder modifyOutgoingRequestHeader(GetPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingRequestHeaderArgs modifyOutgoingRequestHeader) {
            return modifyOutgoingRequestHeader(Output.of(modifyOutgoingRequestHeader));
        }

        /**
         * @param modifyOutgoingResponseHeader Modify, add, remove, or pass along specific response headers going downstream towards the client. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder modifyOutgoingResponseHeader(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingResponseHeaderArgs> modifyOutgoingResponseHeader) {
            $.modifyOutgoingResponseHeader = modifyOutgoingResponseHeader;
            return this;
        }

        /**
         * @param modifyOutgoingResponseHeader Modify, add, remove, or pass along specific response headers going downstream towards the client. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder modifyOutgoingResponseHeader(GetPropertyRulesBuilderRulesV20230530BehaviorModifyOutgoingResponseHeaderArgs modifyOutgoingResponseHeader) {
            return modifyOutgoingResponseHeader(Output.of(modifyOutgoingResponseHeader));
        }

        /**
         * @param modifyViaHeader Removes or renames the HTTP `Via` headers used to inform the server of proxies through which the request was sent to the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder modifyViaHeader(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorModifyViaHeaderArgs> modifyViaHeader) {
            $.modifyViaHeader = modifyViaHeader;
            return this;
        }

        /**
         * @param modifyViaHeader Removes or renames the HTTP `Via` headers used to inform the server of proxies through which the request was sent to the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder modifyViaHeader(GetPropertyRulesBuilderRulesV20230530BehaviorModifyViaHeaderArgs modifyViaHeader) {
            return modifyViaHeader(Output.of(modifyViaHeader));
        }

        /**
         * @param origin Specify the hostname and settings used to contact the origin once service begins. You can use your own origin, `NetStorage`, an Edge Load Balancing origin, or a SaaS dynamic origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder origin(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginArgs> origin) {
            $.origin = origin;
            return this;
        }

        /**
         * @param origin Specify the hostname and settings used to contact the origin once service begins. You can use your own origin, `NetStorage`, an Edge Load Balancing origin, or a SaaS dynamic origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder origin(GetPropertyRulesBuilderRulesV20230530BehaviorOriginArgs origin) {
            return origin(Output.of(origin));
        }

        /**
         * @param originCharacteristics Specifies characteristics of the origin. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder originCharacteristics(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsArgs> originCharacteristics) {
            $.originCharacteristics = originCharacteristics;
            return this;
        }

        /**
         * @param originCharacteristics Specifies characteristics of the origin. Akamai uses this information to optimize your metadata configuration, which may result in better origin offload and end-user performance. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder originCharacteristics(GetPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsArgs originCharacteristics) {
            return originCharacteristics(Output.of(originCharacteristics));
        }

        /**
         * @param originCharacteristicsWsd Specifies characteristics of the origin, for use in Akamai&#39;s Wholesale Delivery product. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder originCharacteristicsWsd(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsWsdArgs> originCharacteristicsWsd) {
            $.originCharacteristicsWsd = originCharacteristicsWsd;
            return this;
        }

        /**
         * @param originCharacteristicsWsd Specifies characteristics of the origin, for use in Akamai&#39;s Wholesale Delivery product. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder originCharacteristicsWsd(GetPropertyRulesBuilderRulesV20230530BehaviorOriginCharacteristicsWsdArgs originCharacteristicsWsd) {
            return originCharacteristicsWsd(Output.of(originCharacteristicsWsd));
        }

        /**
         * @param originFailureRecoveryMethod Origin Failover requires that you set up a separate rule containing origin failure recovery methods. You also need to set up the Origin Failure Recovery Policy behavior in a separate rule with a desired match criteria, and select the desired failover method. You can do this using Property Manager. Learn more about this process in `Adaptive Media Delivery Implementation Guide`. You can use the `originFailureRecoveryPolicy` member to edit existing instances of the Origin Failure Recover Policy behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder originFailureRecoveryMethod(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryMethodArgs> originFailureRecoveryMethod) {
            $.originFailureRecoveryMethod = originFailureRecoveryMethod;
            return this;
        }

        /**
         * @param originFailureRecoveryMethod Origin Failover requires that you set up a separate rule containing origin failure recovery methods. You also need to set up the Origin Failure Recovery Policy behavior in a separate rule with a desired match criteria, and select the desired failover method. You can do this using Property Manager. Learn more about this process in `Adaptive Media Delivery Implementation Guide`. You can use the `originFailureRecoveryPolicy` member to edit existing instances of the Origin Failure Recover Policy behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder originFailureRecoveryMethod(GetPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryMethodArgs originFailureRecoveryMethod) {
            return originFailureRecoveryMethod(Output.of(originFailureRecoveryMethod));
        }

        /**
         * @param originFailureRecoveryPolicy Configures how to detect an origin failure, in which case the `originFailureRecoveryMethod` behavior applies. You can also define up to three sets of criteria to detect origin failure based on specific response codes. Use it to apply specific retry or recovery actions. You can do this using Property Manager. Learn more about this process in `Adaptive Media Delivery Implementation Guide`. You can use the `originFailureRecoveryMethod` member to edit existing instances of the Origin Failure Recover Method behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder originFailureRecoveryPolicy(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryPolicyArgs> originFailureRecoveryPolicy) {
            $.originFailureRecoveryPolicy = originFailureRecoveryPolicy;
            return this;
        }

        /**
         * @param originFailureRecoveryPolicy Configures how to detect an origin failure, in which case the `originFailureRecoveryMethod` behavior applies. You can also define up to three sets of criteria to detect origin failure based on specific response codes. Use it to apply specific retry or recovery actions. You can do this using Property Manager. Learn more about this process in `Adaptive Media Delivery Implementation Guide`. You can use the `originFailureRecoveryMethod` member to edit existing instances of the Origin Failure Recover Method behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder originFailureRecoveryPolicy(GetPropertyRulesBuilderRulesV20230530BehaviorOriginFailureRecoveryPolicyArgs originFailureRecoveryPolicy) {
            return originFailureRecoveryPolicy(Output.of(originFailureRecoveryPolicy));
        }

        /**
         * @param originIpAcl Origin IP Access Control List limits the traffic to your origin. It only allows requests from specific edge servers that are configured as part of a supernet defined by CIDR blocks. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder originIpAcl(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorOriginIpAclArgs> originIpAcl) {
            $.originIpAcl = originIpAcl;
            return this;
        }

        /**
         * @param originIpAcl Origin IP Access Control List limits the traffic to your origin. It only allows requests from specific edge servers that are configured as part of a supernet defined by CIDR blocks. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder originIpAcl(GetPropertyRulesBuilderRulesV20230530BehaviorOriginIpAclArgs originIpAcl) {
            return originIpAcl(Output.of(originIpAcl));
        }

        /**
         * @param persistentClientConnection This behavior activates `persistent connections` between edge servers and clients, which allow for better performance and more efficient use of resources. Compare with the `persistentConnection` behavior, which configures persistent connections for the entire journey from origin to edge to client.  Contact Akamai Professional Services for help configuring either. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder persistentClientConnection(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPersistentClientConnectionArgs> persistentClientConnection) {
            $.persistentClientConnection = persistentClientConnection;
            return this;
        }

        /**
         * @param persistentClientConnection This behavior activates `persistent connections` between edge servers and clients, which allow for better performance and more efficient use of resources. Compare with the `persistentConnection` behavior, which configures persistent connections for the entire journey from origin to edge to client.  Contact Akamai Professional Services for help configuring either. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder persistentClientConnection(GetPropertyRulesBuilderRulesV20230530BehaviorPersistentClientConnectionArgs persistentClientConnection) {
            return persistentClientConnection(Output.of(persistentClientConnection));
        }

        /**
         * @param persistentConnection This behavior enables more efficient `persistent connections` from origin to edge server to client. Compare with the `persistentClientConnection` behavior, which customizes persistent connections from edge to client. Contact Akamai Professional Services for help configuring either. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder persistentConnection(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPersistentConnectionArgs> persistentConnection) {
            $.persistentConnection = persistentConnection;
            return this;
        }

        /**
         * @param persistentConnection This behavior enables more efficient `persistent connections` from origin to edge server to client. Compare with the `persistentClientConnection` behavior, which customizes persistent connections from edge to client. Contact Akamai Professional Services for help configuring either. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder persistentConnection(GetPropertyRulesBuilderRulesV20230530BehaviorPersistentConnectionArgs persistentConnection) {
            return persistentConnection(Output.of(persistentConnection));
        }

        /**
         * @param personallyIdentifiableInformation Marks content covered by the current rule as sensitive `personally identifiable information` that needs to be treated as secure and private. That includes anything involving personal information: name, social security number, date and place of birth, mother&#39;s maiden name, biometric data, or any other data linked to an individual. If you attempt to save a property with such a rule that also caches or logs sensitive content, the added behavior results in a validation error. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder personallyIdentifiableInformation(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPersonallyIdentifiableInformationArgs> personallyIdentifiableInformation) {
            $.personallyIdentifiableInformation = personallyIdentifiableInformation;
            return this;
        }

        /**
         * @param personallyIdentifiableInformation Marks content covered by the current rule as sensitive `personally identifiable information` that needs to be treated as secure and private. That includes anything involving personal information: name, social security number, date and place of birth, mother&#39;s maiden name, biometric data, or any other data linked to an individual. If you attempt to save a property with such a rule that also caches or logs sensitive content, the added behavior results in a validation error. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder personallyIdentifiableInformation(GetPropertyRulesBuilderRulesV20230530BehaviorPersonallyIdentifiableInformationArgs personallyIdentifiableInformation) {
            return personallyIdentifiableInformation(Output.of(personallyIdentifiableInformation));
        }

        /**
         * @param phasedRelease The Phased Release Cloudlet provides gradual and granular traffic management to an alternate origin in near real time.  Use the `Cloudlets API` or the Cloudlets Policy Manager application within `Control Center` to set up your Cloudlets policies. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder phasedRelease(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPhasedReleaseArgs> phasedRelease) {
            $.phasedRelease = phasedRelease;
            return this;
        }

        /**
         * @param phasedRelease The Phased Release Cloudlet provides gradual and granular traffic management to an alternate origin in near real time.  Use the `Cloudlets API` or the Cloudlets Policy Manager application within `Control Center` to set up your Cloudlets policies. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder phasedRelease(GetPropertyRulesBuilderRulesV20230530BehaviorPhasedReleaseArgs phasedRelease) {
            return phasedRelease(Output.of(phasedRelease));
        }

        /**
         * @param preconnect With the `http2` behavior enabled, this requests a specified set of domains that relate to your property hostname, and keeps the connection open for faster loading of content from those domains. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder preconnect(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPreconnectArgs> preconnect) {
            $.preconnect = preconnect;
            return this;
        }

        /**
         * @param preconnect With the `http2` behavior enabled, this requests a specified set of domains that relate to your property hostname, and keeps the connection open for faster loading of content from those domains. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder preconnect(GetPropertyRulesBuilderRulesV20230530BehaviorPreconnectArgs preconnect) {
            return preconnect(Output.of(preconnect));
        }

        /**
         * @param predictiveContentDelivery Improves user experience and reduces the cost of downloads by enabling mobile devices to predictively fetch and cache content from catalogs managed by Akamai servers. You can&#39;t use this feature if in the `segmentedMediaOptimization` behavior, the value for `behavior` is set to `LIVE`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder predictiveContentDelivery(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPredictiveContentDeliveryArgs> predictiveContentDelivery) {
            $.predictiveContentDelivery = predictiveContentDelivery;
            return this;
        }

        /**
         * @param predictiveContentDelivery Improves user experience and reduces the cost of downloads by enabling mobile devices to predictively fetch and cache content from catalogs managed by Akamai servers. You can&#39;t use this feature if in the `segmentedMediaOptimization` behavior, the value for `behavior` is set to `LIVE`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder predictiveContentDelivery(GetPropertyRulesBuilderRulesV20230530BehaviorPredictiveContentDeliveryArgs predictiveContentDelivery) {
            return predictiveContentDelivery(Output.of(predictiveContentDelivery));
        }

        /**
         * @param predictivePrefetching This behavior potentially reduces the client&#39;s page load time by pre-caching objects based on historical data for the page, not just its current set of referenced objects. It also detects second-level dependencies, such as objects retrieved by JavaScript. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder predictivePrefetching(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPredictivePrefetchingArgs> predictivePrefetching) {
            $.predictivePrefetching = predictivePrefetching;
            return this;
        }

        /**
         * @param predictivePrefetching This behavior potentially reduces the client&#39;s page load time by pre-caching objects based on historical data for the page, not just its current set of referenced objects. It also detects second-level dependencies, such as objects retrieved by JavaScript. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder predictivePrefetching(GetPropertyRulesBuilderRulesV20230530BehaviorPredictivePrefetchingArgs predictivePrefetching) {
            return predictivePrefetching(Output.of(predictivePrefetching));
        }

        /**
         * @param prefetch Instructs edge servers to retrieve content linked from requested pages as they load, rather than waiting for separate requests for the linked content. This behavior applies depending on the rule&#39;s set of matching conditions. Use in conjunction with the `prefetchable` behavior, which specifies the set of objects to prefetch. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder prefetch(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPrefetchArgs> prefetch) {
            $.prefetch = prefetch;
            return this;
        }

        /**
         * @param prefetch Instructs edge servers to retrieve content linked from requested pages as they load, rather than waiting for separate requests for the linked content. This behavior applies depending on the rule&#39;s set of matching conditions. Use in conjunction with the `prefetchable` behavior, which specifies the set of objects to prefetch. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder prefetch(GetPropertyRulesBuilderRulesV20230530BehaviorPrefetchArgs prefetch) {
            return prefetch(Output.of(prefetch));
        }

        /**
         * @param prefetchable Allow matching objects to prefetch into the edge cache as the parent page that links to them loads, rather than waiting for a direct request. This behavior applies depending on the rule&#39;s set of matching conditions. Use `prefetch` to enable the overall behavior for parent pages that contain links to the object. To apply this behavior, you need to match on a `filename` or `fileExtension`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder prefetchable(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPrefetchableArgs> prefetchable) {
            $.prefetchable = prefetchable;
            return this;
        }

        /**
         * @param prefetchable Allow matching objects to prefetch into the edge cache as the parent page that links to them loads, rather than waiting for a direct request. This behavior applies depending on the rule&#39;s set of matching conditions. Use `prefetch` to enable the overall behavior for parent pages that contain links to the object. To apply this behavior, you need to match on a `filename` or `fileExtension`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder prefetchable(GetPropertyRulesBuilderRulesV20230530BehaviorPrefetchableArgs prefetchable) {
            return prefetchable(Output.of(prefetchable));
        }

        /**
         * @param prefreshCache Refresh cached content before its time-to-live (TTL) expires, to keep end users from having to wait for the origin to provide fresh content. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder prefreshCache(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorPrefreshCacheArgs> prefreshCache) {
            $.prefreshCache = prefreshCache;
            return this;
        }

        /**
         * @param prefreshCache Refresh cached content before its time-to-live (TTL) expires, to keep end users from having to wait for the origin to provide fresh content. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder prefreshCache(GetPropertyRulesBuilderRulesV20230530BehaviorPrefreshCacheArgs prefreshCache) {
            return prefreshCache(Output.of(prefreshCache));
        }

        /**
         * @param quality This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder quality(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorQualityArgs> quality) {
            $.quality = quality;
            return this;
        }

        /**
         * @param quality This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder quality(GetPropertyRulesBuilderRulesV20230530BehaviorQualityArgs quality) {
            return quality(Output.of(quality));
        }

        /**
         * @param quicBeta For a share of responses, includes an `Alt-Svc` header for compatible clients to initiate subsequent sessions using the QUIC protocol. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder quicBeta(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorQuicBetaArgs> quicBeta) {
            $.quicBeta = quicBeta;
            return this;
        }

        /**
         * @param quicBeta For a share of responses, includes an `Alt-Svc` header for compatible clients to initiate subsequent sessions using the QUIC protocol. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder quicBeta(GetPropertyRulesBuilderRulesV20230530BehaviorQuicBetaArgs quicBeta) {
            return quicBeta(Output.of(quicBeta));
        }

        /**
         * @param randomSeek Optimizes `.flv` and `.mp4` files to allow random jump-point navigation. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder randomSeek(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRandomSeekArgs> randomSeek) {
            $.randomSeek = randomSeek;
            return this;
        }

        /**
         * @param randomSeek Optimizes `.flv` and `.mp4` files to allow random jump-point navigation. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder randomSeek(GetPropertyRulesBuilderRulesV20230530BehaviorRandomSeekArgs randomSeek) {
            return randomSeek(Output.of(randomSeek));
        }

        /**
         * @param rapid The `Akamai API Gateway` allows you to configure API traffic delivered over the Akamai network. Apply this behavior to a set of API assets, then use Akamai&#39;s `API Endpoints API` to configure how the traffic responds.  Use the `API Keys and Traffic Management API` to control access to your APIs. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder rapid(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRapidArgs> rapid) {
            $.rapid = rapid;
            return this;
        }

        /**
         * @param rapid The `Akamai API Gateway` allows you to configure API traffic delivered over the Akamai network. Apply this behavior to a set of API assets, then use Akamai&#39;s `API Endpoints API` to configure how the traffic responds.  Use the `API Keys and Traffic Management API` to control access to your APIs. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder rapid(GetPropertyRulesBuilderRulesV20230530BehaviorRapidArgs rapid) {
            return rapid(Output.of(rapid));
        }

        /**
         * @param readTimeout This behavior specifies how long the edge server should wait for a response from the requesting forward server after a connection has already been established. Any failure to read aborts the request and sends a `504` Gateway Timeout error to the client. Contact Akamai Professional Services for help configuring this behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder readTimeout(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorReadTimeoutArgs> readTimeout) {
            $.readTimeout = readTimeout;
            return this;
        }

        /**
         * @param readTimeout This behavior specifies how long the edge server should wait for a response from the requesting forward server after a connection has already been established. Any failure to read aborts the request and sends a `504` Gateway Timeout error to the client. Contact Akamai Professional Services for help configuring this behavior. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder readTimeout(GetPropertyRulesBuilderRulesV20230530BehaviorReadTimeoutArgs readTimeout) {
            return readTimeout(Output.of(readTimeout));
        }

        /**
         * @param realTimeReporting This enables `Real-Time Reporting` for Akamai Cloud Embed customers. The behavior can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder realTimeReporting(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRealTimeReportingArgs> realTimeReporting) {
            $.realTimeReporting = realTimeReporting;
            return this;
        }

        /**
         * @param realTimeReporting This enables `Real-Time Reporting` for Akamai Cloud Embed customers. The behavior can only be configured on your behalf by Akamai Professional Services. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder realTimeReporting(GetPropertyRulesBuilderRulesV20230530BehaviorRealTimeReportingArgs realTimeReporting) {
            return realTimeReporting(Output.of(realTimeReporting));
        }

        /**
         * @param realUserMonitoring This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder realUserMonitoring(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRealUserMonitoringArgs> realUserMonitoring) {
            $.realUserMonitoring = realUserMonitoring;
            return this;
        }

        /**
         * @param realUserMonitoring This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder realUserMonitoring(GetPropertyRulesBuilderRulesV20230530BehaviorRealUserMonitoringArgs realUserMonitoring) {
            return realUserMonitoring(Output.of(realUserMonitoring));
        }

        /**
         * @param redirect Respond to the client request with a redirect without contacting the origin. Specify the redirect as a path expression starting with a `/` character relative to the current root, or as a fully qualified URL. This behavior relies primarily on `destinationHostname` and `destinationPath` to manipulate the hostname and path independently. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder redirect(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRedirectArgs> redirect) {
            $.redirect = redirect;
            return this;
        }

        /**
         * @param redirect Respond to the client request with a redirect without contacting the origin. Specify the redirect as a path expression starting with a `/` character relative to the current root, or as a fully qualified URL. This behavior relies primarily on `destinationHostname` and `destinationPath` to manipulate the hostname and path independently. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder redirect(GetPropertyRulesBuilderRulesV20230530BehaviorRedirectArgs redirect) {
            return redirect(Output.of(redirect));
        }

        /**
         * @param redirectplus Respond to the client request with a redirect without contacting the origin. This behavior fills the same need as `redirect`, but allows you to use `variables` to express the redirect `destination`&#39;s component values more concisely. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder redirectplus(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRedirectplusArgs> redirectplus) {
            $.redirectplus = redirectplus;
            return this;
        }

        /**
         * @param redirectplus Respond to the client request with a redirect without contacting the origin. This behavior fills the same need as `redirect`, but allows you to use `variables` to express the redirect `destination`&#39;s component values more concisely. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder redirectplus(GetPropertyRulesBuilderRulesV20230530BehaviorRedirectplusArgs redirectplus) {
            return redirectplus(Output.of(redirectplus));
        }

        /**
         * @param refererChecking Limits allowed requests to a set of domains you specify. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder refererChecking(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRefererCheckingArgs> refererChecking) {
            $.refererChecking = refererChecking;
            return this;
        }

        /**
         * @param refererChecking Limits allowed requests to a set of domains you specify. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder refererChecking(GetPropertyRulesBuilderRulesV20230530BehaviorRefererCheckingArgs refererChecking) {
            return refererChecking(Output.of(refererChecking));
        }

        /**
         * @param removeQueryParameter Remove named query parameters before forwarding the request to the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder removeQueryParameter(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRemoveQueryParameterArgs> removeQueryParameter) {
            $.removeQueryParameter = removeQueryParameter;
            return this;
        }

        /**
         * @param removeQueryParameter Remove named query parameters before forwarding the request to the origin. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder removeQueryParameter(GetPropertyRulesBuilderRulesV20230530BehaviorRemoveQueryParameterArgs removeQueryParameter) {
            return removeQueryParameter(Output.of(removeQueryParameter));
        }

        /**
         * @param removeVary By default, responses that feature a `Vary` header value of anything other than `Accept-Encoding` and a corresponding `Content-Encoding: gzip` header aren&#39;t cached on edge servers. `Vary` headers indicate when a URL&#39;s content varies depending on some variable, such as which `User-Agent` requests it. This behavior simply removes the `Vary` header to make responses cacheable. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder removeVary(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRemoveVaryArgs> removeVary) {
            $.removeVary = removeVary;
            return this;
        }

        /**
         * @param removeVary By default, responses that feature a `Vary` header value of anything other than `Accept-Encoding` and a corresponding `Content-Encoding: gzip` header aren&#39;t cached on edge servers. `Vary` headers indicate when a URL&#39;s content varies depending on some variable, such as which `User-Agent` requests it. This behavior simply removes the `Vary` header to make responses cacheable. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder removeVary(GetPropertyRulesBuilderRulesV20230530BehaviorRemoveVaryArgs removeVary) {
            return removeVary(Output.of(removeVary));
        }

        /**
         * @param report Specify the HTTP request headers or cookie names to log in your Log Delivery Service reports. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder report(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorReportArgs> report) {
            $.report = report;
            return this;
        }

        /**
         * @param report Specify the HTTP request headers or cookie names to log in your Log Delivery Service reports. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder report(GetPropertyRulesBuilderRulesV20230530BehaviorReportArgs report) {
            return report(Output.of(report));
        }

        /**
         * @param requestControl The Request Control Cloudlet allows you to control access to your web content based on the incoming request&#39;s IP or geographic location.  With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control how the feature works within `Control Center`, or use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder requestControl(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRequestControlArgs> requestControl) {
            $.requestControl = requestControl;
            return this;
        }

        /**
         * @param requestControl The Request Control Cloudlet allows you to control access to your web content based on the incoming request&#39;s IP or geographic location.  With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control how the feature works within `Control Center`, or use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder requestControl(GetPropertyRulesBuilderRulesV20230530BehaviorRequestControlArgs requestControl) {
            return requestControl(Output.of(requestControl));
        }

        /**
         * @param requestTypeMarker The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks. When using the `downloadCompleteMarker` behavior to log successful downloads, this related behavior identifies download or campaign server types in aggregated and individual reports. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder requestTypeMarker(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRequestTypeMarkerArgs> requestTypeMarker) {
            $.requestTypeMarker = requestTypeMarker;
            return this;
        }

        /**
         * @param requestTypeMarker The `Internet of Things: OTA Updates` product allows customers to securely distribute firmware to devices over cellular networks. When using the `downloadCompleteMarker` behavior to log successful downloads, this related behavior identifies download or campaign server types in aggregated and individual reports. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder requestTypeMarker(GetPropertyRulesBuilderRulesV20230530BehaviorRequestTypeMarkerArgs requestTypeMarker) {
            return requestTypeMarker(Output.of(requestTypeMarker));
        }

        /**
         * @param resourceOptimizer This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder resourceOptimizer(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerArgs> resourceOptimizer) {
            $.resourceOptimizer = resourceOptimizer;
            return this;
        }

        /**
         * @param resourceOptimizer This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder resourceOptimizer(GetPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerArgs resourceOptimizer) {
            return resourceOptimizer(Output.of(resourceOptimizer));
        }

        /**
         * @param resourceOptimizerExtendedCompatibility This enhances the standard version of the `resourceOptimizer` behavior to support the compression of additional file formats and address some compatibility issues. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder resourceOptimizerExtendedCompatibility(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerExtendedCompatibilityArgs> resourceOptimizerExtendedCompatibility) {
            $.resourceOptimizerExtendedCompatibility = resourceOptimizerExtendedCompatibility;
            return this;
        }

        /**
         * @param resourceOptimizerExtendedCompatibility This enhances the standard version of the `resourceOptimizer` behavior to support the compression of additional file formats and address some compatibility issues. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder resourceOptimizerExtendedCompatibility(GetPropertyRulesBuilderRulesV20230530BehaviorResourceOptimizerExtendedCompatibilityArgs resourceOptimizerExtendedCompatibility) {
            return resourceOptimizerExtendedCompatibility(Output.of(resourceOptimizerExtendedCompatibility));
        }

        /**
         * @param responseCode Change the existing response code. For example, if your origin sends a `301` permanent redirect, this behavior can change it on the edge to a temporary `302` redirect. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder responseCode(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorResponseCodeArgs> responseCode) {
            $.responseCode = responseCode;
            return this;
        }

        /**
         * @param responseCode Change the existing response code. For example, if your origin sends a `301` permanent redirect, this behavior can change it on the edge to a temporary `302` redirect. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder responseCode(GetPropertyRulesBuilderRulesV20230530BehaviorResponseCodeArgs responseCode) {
            return responseCode(Output.of(responseCode));
        }

        /**
         * @param responseCookie Set a cookie to send downstream to the client with either a fixed value or a unique stamp. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder responseCookie(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorResponseCookieArgs> responseCookie) {
            $.responseCookie = responseCookie;
            return this;
        }

        /**
         * @param responseCookie Set a cookie to send downstream to the client with either a fixed value or a unique stamp. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder responseCookie(GetPropertyRulesBuilderRulesV20230530BehaviorResponseCookieArgs responseCookie) {
            return responseCookie(Output.of(responseCookie));
        }

        /**
         * @param restrictObjectCaching You need this behavior to deploy the Object Caching product. It disables serving HTML content and limits the maximum object size to 100MB. Contact Akamai Professional Services for help configuring it. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder restrictObjectCaching(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRestrictObjectCachingArgs> restrictObjectCaching) {
            $.restrictObjectCaching = restrictObjectCaching;
            return this;
        }

        /**
         * @param restrictObjectCaching You need this behavior to deploy the Object Caching product. It disables serving HTML content and limits the maximum object size to 100MB. Contact Akamai Professional Services for help configuring it. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder restrictObjectCaching(GetPropertyRulesBuilderRulesV20230530BehaviorRestrictObjectCachingArgs restrictObjectCaching) {
            return restrictObjectCaching(Output.of(restrictObjectCaching));
        }

        /**
         * @param returnCacheStatus Generates a response header with information about cache status. Among other things, this can tell you whether the response came from the Akamai cache, or from the origin. Status values report with either of these forms of syntax, depending for example on whether you&#39;re deploying traffic using `sureRoute` or `tieredDistribution`: This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder returnCacheStatus(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorReturnCacheStatusArgs> returnCacheStatus) {
            $.returnCacheStatus = returnCacheStatus;
            return this;
        }

        /**
         * @param returnCacheStatus Generates a response header with information about cache status. Among other things, this can tell you whether the response came from the Akamai cache, or from the origin. Status values report with either of these forms of syntax, depending for example on whether you&#39;re deploying traffic using `sureRoute` or `tieredDistribution`: This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder returnCacheStatus(GetPropertyRulesBuilderRulesV20230530BehaviorReturnCacheStatusArgs returnCacheStatus) {
            return returnCacheStatus(Output.of(returnCacheStatus));
        }

        /**
         * @param rewriteUrl Modifies the path of incoming requests to forward to the origin. This helps you offload URL-rewriting tasks to the edge to increase the origin server&#39;s performance, allows you to redirect links to different targets without changing markup, and hides your original directory structure. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder rewriteUrl(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRewriteUrlArgs> rewriteUrl) {
            $.rewriteUrl = rewriteUrl;
            return this;
        }

        /**
         * @param rewriteUrl Modifies the path of incoming requests to forward to the origin. This helps you offload URL-rewriting tasks to the edge to increase the origin server&#39;s performance, allows you to redirect links to different targets without changing markup, and hides your original directory structure. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder rewriteUrl(GetPropertyRulesBuilderRulesV20230530BehaviorRewriteUrlArgs rewriteUrl) {
            return rewriteUrl(Output.of(rewriteUrl));
        }

        /**
         * @param rumCustom This behavior is deprecated, but you should not disable or remove it if present. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder rumCustom(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorRumCustomArgs> rumCustom) {
            $.rumCustom = rumCustom;
            return this;
        }

        /**
         * @param rumCustom This behavior is deprecated, but you should not disable or remove it if present. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder rumCustom(GetPropertyRulesBuilderRulesV20230530BehaviorRumCustomArgs rumCustom) {
            return rumCustom(Output.of(rumCustom));
        }

        /**
         * @param saasDefinitions Configures how the Software as a Service feature identifies `customers`, `applications`, and `users`. A different set of options is available for each type of targeted request, each enabled with the `action`-suffixed option. In each case, you can use `PATH`, `COOKIE`, `QUERY_STRING`, or `HOSTNAME` components as identifiers, or `disable` the SaaS behavior for certain targets. If you rely on a `HOSTNAME`, you also have the option of specifying a `CNAME chain` rather than an individual hostname. The various options suffixed `regex` and `replace` subsequently remove the identifier from the request. This behavior requires a sibling `origin` behavior whose `originType` option is set to `SAAS_DYNAMIC_ORIGIN`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder saasDefinitions(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSaasDefinitionsArgs> saasDefinitions) {
            $.saasDefinitions = saasDefinitions;
            return this;
        }

        /**
         * @param saasDefinitions Configures how the Software as a Service feature identifies `customers`, `applications`, and `users`. A different set of options is available for each type of targeted request, each enabled with the `action`-suffixed option. In each case, you can use `PATH`, `COOKIE`, `QUERY_STRING`, or `HOSTNAME` components as identifiers, or `disable` the SaaS behavior for certain targets. If you rely on a `HOSTNAME`, you also have the option of specifying a `CNAME chain` rather than an individual hostname. The various options suffixed `regex` and `replace` subsequently remove the identifier from the request. This behavior requires a sibling `origin` behavior whose `originType` option is set to `SAAS_DYNAMIC_ORIGIN`. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder saasDefinitions(GetPropertyRulesBuilderRulesV20230530BehaviorSaasDefinitionsArgs saasDefinitions) {
            return saasDefinitions(Output.of(saasDefinitions));
        }

        /**
         * @param salesForceCommerceCloudClient If you use the Salesforce Commerce Cloud platform for your origin content, this behavior allows your edge content managed by Akamai to contact directly to origin. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder salesForceCommerceCloudClient(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudClientArgs> salesForceCommerceCloudClient) {
            $.salesForceCommerceCloudClient = salesForceCommerceCloudClient;
            return this;
        }

        /**
         * @param salesForceCommerceCloudClient If you use the Salesforce Commerce Cloud platform for your origin content, this behavior allows your edge content managed by Akamai to contact directly to origin. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder salesForceCommerceCloudClient(GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudClientArgs salesForceCommerceCloudClient) {
            return salesForceCommerceCloudClient(Output.of(salesForceCommerceCloudClient));
        }

        /**
         * @param salesForceCommerceCloudProvider This manages traffic between mutual customers and the Salesforce Commerce Cloud platform. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder salesForceCommerceCloudProvider(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderArgs> salesForceCommerceCloudProvider) {
            $.salesForceCommerceCloudProvider = salesForceCommerceCloudProvider;
            return this;
        }

        /**
         * @param salesForceCommerceCloudProvider This manages traffic between mutual customers and the Salesforce Commerce Cloud platform. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder salesForceCommerceCloudProvider(GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderArgs salesForceCommerceCloudProvider) {
            return salesForceCommerceCloudProvider(Output.of(salesForceCommerceCloudProvider));
        }

        /**
         * @param salesForceCommerceCloudProviderHostHeader Manages host header values sent to the Salesforce Commerce Cloud platform. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder salesForceCommerceCloudProviderHostHeader(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderHostHeaderArgs> salesForceCommerceCloudProviderHostHeader) {
            $.salesForceCommerceCloudProviderHostHeader = salesForceCommerceCloudProviderHostHeader;
            return this;
        }

        /**
         * @param salesForceCommerceCloudProviderHostHeader Manages host header values sent to the Salesforce Commerce Cloud platform. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder salesForceCommerceCloudProviderHostHeader(GetPropertyRulesBuilderRulesV20230530BehaviorSalesForceCommerceCloudProviderHostHeaderArgs salesForceCommerceCloudProviderHostHeader) {
            return salesForceCommerceCloudProviderHostHeader(Output.of(salesForceCommerceCloudProviderHostHeader));
        }

        /**
         * @param savePostDcaProcessing Used in conjunction with the `cachePost` behavior, this behavior allows the body of POST requests to be processed through Dynamic Content Assembly.  Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder savePostDcaProcessing(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSavePostDcaProcessingArgs> savePostDcaProcessing) {
            $.savePostDcaProcessing = savePostDcaProcessing;
            return this;
        }

        /**
         * @param savePostDcaProcessing Used in conjunction with the `cachePost` behavior, this behavior allows the body of POST requests to be processed through Dynamic Content Assembly.  Contact Akamai Professional Services for help configuring it. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder savePostDcaProcessing(GetPropertyRulesBuilderRulesV20230530BehaviorSavePostDcaProcessingArgs savePostDcaProcessing) {
            return savePostDcaProcessing(Output.of(savePostDcaProcessing));
        }

        /**
         * @param scheduleInvalidation Specifies when cached content that satisfies a rule&#39;s criteria expires, optionally at repeating intervals. In addition to periodic cache flushes, you can use this behavior to minimize potential conflicts when related objects expire at different times. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder scheduleInvalidation(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorScheduleInvalidationArgs> scheduleInvalidation) {
            $.scheduleInvalidation = scheduleInvalidation;
            return this;
        }

        /**
         * @param scheduleInvalidation Specifies when cached content that satisfies a rule&#39;s criteria expires, optionally at repeating intervals. In addition to periodic cache flushes, you can use this behavior to minimize potential conflicts when related objects expire at different times. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder scheduleInvalidation(GetPropertyRulesBuilderRulesV20230530BehaviorScheduleInvalidationArgs scheduleInvalidation) {
            return scheduleInvalidation(Output.of(scheduleInvalidation));
        }

        /**
         * @param scriptManagement Ensures unresponsive linked JavaScript files do not prevent HTML pages from loading. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder scriptManagement(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorScriptManagementArgs> scriptManagement) {
            $.scriptManagement = scriptManagement;
            return this;
        }

        /**
         * @param scriptManagement Ensures unresponsive linked JavaScript files do not prevent HTML pages from loading. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder scriptManagement(GetPropertyRulesBuilderRulesV20230530BehaviorScriptManagementArgs scriptManagement) {
            return scriptManagement(Output.of(scriptManagement));
        }

        /**
         * @param segmentedContentProtection Validates authorization tokens at the edge server to prevent unauthorized link sharing. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder segmentedContentProtection(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtectionArgs> segmentedContentProtection) {
            $.segmentedContentProtection = segmentedContentProtection;
            return this;
        }

        /**
         * @param segmentedContentProtection Validates authorization tokens at the edge server to prevent unauthorized link sharing. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder segmentedContentProtection(GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedContentProtectionArgs segmentedContentProtection) {
            return segmentedContentProtection(Output.of(segmentedContentProtection));
        }

        /**
         * @param segmentedMediaOptimization Optimizes segmented media for live or streaming delivery contexts. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder segmentedMediaOptimization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaOptimizationArgs> segmentedMediaOptimization) {
            $.segmentedMediaOptimization = segmentedMediaOptimization;
            return this;
        }

        /**
         * @param segmentedMediaOptimization Optimizes segmented media for live or streaming delivery contexts. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder segmentedMediaOptimization(GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaOptimizationArgs segmentedMediaOptimization) {
            return segmentedMediaOptimization(Output.of(segmentedMediaOptimization));
        }

        /**
         * @param segmentedMediaStreamingPrefetch Prefetches HLS and DASH media stream manifest and segment files, accelerating delivery to end users. For prefetching to work, your origin media&#39;s response needs to specify `CDN-Origin-Assist-Prefetch-Path` headers with each URL to prefetch, expressed as either a relative or absolute path. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder segmentedMediaStreamingPrefetch(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaStreamingPrefetchArgs> segmentedMediaStreamingPrefetch) {
            $.segmentedMediaStreamingPrefetch = segmentedMediaStreamingPrefetch;
            return this;
        }

        /**
         * @param segmentedMediaStreamingPrefetch Prefetches HLS and DASH media stream manifest and segment files, accelerating delivery to end users. For prefetching to work, your origin media&#39;s response needs to specify `CDN-Origin-Assist-Prefetch-Path` headers with each URL to prefetch, expressed as either a relative or absolute path. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder segmentedMediaStreamingPrefetch(GetPropertyRulesBuilderRulesV20230530BehaviorSegmentedMediaStreamingPrefetchArgs segmentedMediaStreamingPrefetch) {
            return segmentedMediaStreamingPrefetch(Output.of(segmentedMediaStreamingPrefetch));
        }

        /**
         * @param setVariable Modify a variable to insert into subsequent fields within the rule tree.  Use this behavior to specify the predeclared `variableName` and determine from where to derive its new value. Based on this `valueSource`, you can either generate the value, extract it from some part of the incoming request, assign it from another variable (including a set of built-in system variables), or directly specify its text.  Optionally choose a `transform` function to modify the value once. See `Support for variables` for more information. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder setVariable(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSetVariableArgs> setVariable) {
            $.setVariable = setVariable;
            return this;
        }

        /**
         * @param setVariable Modify a variable to insert into subsequent fields within the rule tree.  Use this behavior to specify the predeclared `variableName` and determine from where to derive its new value. Based on this `valueSource`, you can either generate the value, extract it from some part of the incoming request, assign it from another variable (including a set of built-in system variables), or directly specify its text.  Optionally choose a `transform` function to modify the value once. See `Support for variables` for more information. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder setVariable(GetPropertyRulesBuilderRulesV20230530BehaviorSetVariableArgs setVariable) {
            return setVariable(Output.of(setVariable));
        }

        /**
         * @param simulateErrorCode This behavior simulates various error response codes. Contact Akamai Professional Services for help configuring it. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder simulateErrorCode(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSimulateErrorCodeArgs> simulateErrorCode) {
            $.simulateErrorCode = simulateErrorCode;
            return this;
        }

        /**
         * @param simulateErrorCode This behavior simulates various error response codes. Contact Akamai Professional Services for help configuring it. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder simulateErrorCode(GetPropertyRulesBuilderRulesV20230530BehaviorSimulateErrorCodeArgs simulateErrorCode) {
            return simulateErrorCode(Output.of(simulateErrorCode));
        }

        /**
         * @param siteShield This behavior implements the `Site Shield` feature, which helps prevent non-Akamai machines from contacting your origin. You get an email with a list of Akamai servers allowed to contact your origin, with which you establish an Access Control List on your firewall to prevent any other requests. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder siteShield(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSiteShieldArgs> siteShield) {
            $.siteShield = siteShield;
            return this;
        }

        /**
         * @param siteShield This behavior implements the `Site Shield` feature, which helps prevent non-Akamai machines from contacting your origin. You get an email with a list of Akamai servers allowed to contact your origin, with which you establish an Access Control List on your firewall to prevent any other requests. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder siteShield(GetPropertyRulesBuilderRulesV20230530BehaviorSiteShieldArgs siteShield) {
            return siteShield(Output.of(siteShield));
        }

        /**
         * @param standardTlsMigration This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder standardTlsMigration(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationArgs> standardTlsMigration) {
            $.standardTlsMigration = standardTlsMigration;
            return this;
        }

        /**
         * @param standardTlsMigration This behavior is deprecated, but you should not disable or remove it if present. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder standardTlsMigration(GetPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationArgs standardTlsMigration) {
            return standardTlsMigration(Output.of(standardTlsMigration));
        }

        /**
         * @param standardTlsMigrationOverride This behavior is deprecated, but you should not disable or remove it if present. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder standardTlsMigrationOverride(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationOverrideArgs> standardTlsMigrationOverride) {
            $.standardTlsMigrationOverride = standardTlsMigrationOverride;
            return this;
        }

        /**
         * @param standardTlsMigrationOverride This behavior is deprecated, but you should not disable or remove it if present. This behavior is for internal usage only. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder standardTlsMigrationOverride(GetPropertyRulesBuilderRulesV20230530BehaviorStandardTlsMigrationOverrideArgs standardTlsMigrationOverride) {
            return standardTlsMigrationOverride(Output.of(standardTlsMigrationOverride));
        }

        /**
         * @param strictHeaderParsing This behavior specifies how the edge servers should handle requests containing improperly formatted or invalid headers that don’t comply with `RFC 9110`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder strictHeaderParsing(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorStrictHeaderParsingArgs> strictHeaderParsing) {
            $.strictHeaderParsing = strictHeaderParsing;
            return this;
        }

        /**
         * @param strictHeaderParsing This behavior specifies how the edge servers should handle requests containing improperly formatted or invalid headers that don’t comply with `RFC 9110`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder strictHeaderParsing(GetPropertyRulesBuilderRulesV20230530BehaviorStrictHeaderParsingArgs strictHeaderParsing) {
            return strictHeaderParsing(Output.of(strictHeaderParsing));
        }

        /**
         * @param subCustomer When positioned in a property&#39;s top-level default rule, enables various `Cloud Embed` features that allow you to leverage Akamai&#39;s CDN architecture for your own subcustomers.  This behavior&#39;s options allow you to use Cloud Embed to configure your subcustomers&#39; content.  Once enabled, you can use the `Akamai Cloud Embed API` (ACE) to assign subcustomers to this base configuration, and to customize policies for them.  See also the `dynamicWebContent` behavior to configure subcustomers&#39; dynamic web content. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder subCustomer(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSubCustomerArgs> subCustomer) {
            $.subCustomer = subCustomer;
            return this;
        }

        /**
         * @param subCustomer When positioned in a property&#39;s top-level default rule, enables various `Cloud Embed` features that allow you to leverage Akamai&#39;s CDN architecture for your own subcustomers.  This behavior&#39;s options allow you to use Cloud Embed to configure your subcustomers&#39; content.  Once enabled, you can use the `Akamai Cloud Embed API` (ACE) to assign subcustomers to this base configuration, and to customize policies for them.  See also the `dynamicWebContent` behavior to configure subcustomers&#39; dynamic web content. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder subCustomer(GetPropertyRulesBuilderRulesV20230530BehaviorSubCustomerArgs subCustomer) {
            return subCustomer(Output.of(subCustomer));
        }

        /**
         * @param sureRoute The `SureRoute` feature continually tests different routes between origin and edge servers to identify the optimal path. By default, it conducts `races` to identify alternative paths to use in case of a transmission failure. These races increase origin traffic slightly. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder sureRoute(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorSureRouteArgs> sureRoute) {
            $.sureRoute = sureRoute;
            return this;
        }

        /**
         * @param sureRoute The `SureRoute` feature continually tests different routes between origin and edge servers to identify the optimal path. By default, it conducts `races` to identify alternative paths to use in case of a transmission failure. These races increase origin traffic slightly. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder sureRoute(GetPropertyRulesBuilderRulesV20230530BehaviorSureRouteArgs sureRoute) {
            return sureRoute(Output.of(sureRoute));
        }

        /**
         * @param tcpOptimization This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder tcpOptimization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTcpOptimizationArgs> tcpOptimization) {
            $.tcpOptimization = tcpOptimization;
            return this;
        }

        /**
         * @param tcpOptimization This behavior is deprecated, but you should not disable or remove it if present. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder tcpOptimization(GetPropertyRulesBuilderRulesV20230530BehaviorTcpOptimizationArgs tcpOptimization) {
            return tcpOptimization(Output.of(tcpOptimization));
        }

        /**
         * @param teaLeaf Allows IBM Tealeaf Customer Experience on Cloud to record HTTPS requests and responses for Akamai-enabled properties. Recorded data becomes available in your IBM Tealeaf account. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder teaLeaf(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTeaLeafArgs> teaLeaf) {
            $.teaLeaf = teaLeaf;
            return this;
        }

        /**
         * @param teaLeaf Allows IBM Tealeaf Customer Experience on Cloud to record HTTPS requests and responses for Akamai-enabled properties. Recorded data becomes available in your IBM Tealeaf account. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder teaLeaf(GetPropertyRulesBuilderRulesV20230530BehaviorTeaLeafArgs teaLeaf) {
            return teaLeaf(Output.of(teaLeaf));
        }

        /**
         * @param tieredDistribution This behavior allows Akamai edge servers to retrieve cached content from other Akamai servers, rather than directly from the origin. These interim `parent` servers in the `cache hierarchy` (`CH`) are positioned close to the origin, and fall along the path from the origin to the edge server. Tiered Distribution typically reduces the origin server&#39;s load, and reduces the time it takes for edge servers to refresh content. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder tieredDistribution(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionArgs> tieredDistribution) {
            $.tieredDistribution = tieredDistribution;
            return this;
        }

        /**
         * @param tieredDistribution This behavior allows Akamai edge servers to retrieve cached content from other Akamai servers, rather than directly from the origin. These interim `parent` servers in the `cache hierarchy` (`CH`) are positioned close to the origin, and fall along the path from the origin to the edge server. Tiered Distribution typically reduces the origin server&#39;s load, and reduces the time it takes for edge servers to refresh content. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder tieredDistribution(GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionArgs tieredDistribution) {
            return tieredDistribution(Output.of(tieredDistribution));
        }

        /**
         * @param tieredDistributionAdvanced This behavior allows Akamai edge servers to retrieve cached content from other Akamai servers, rather than directly from the origin. These interim `parent` servers in the `cache hierarchy` (`CH`) are positioned close to the origin, and fall along the path from the origin to the edge server. Tiered Distribution typically reduces the origin server&#39;s load, and reduces the time it takes for edge servers to refresh content.  This advanced behavior provides a wider set of options than `tieredDistribution`. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder tieredDistributionAdvanced(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionAdvancedArgs> tieredDistributionAdvanced) {
            $.tieredDistributionAdvanced = tieredDistributionAdvanced;
            return this;
        }

        /**
         * @param tieredDistributionAdvanced This behavior allows Akamai edge servers to retrieve cached content from other Akamai servers, rather than directly from the origin. These interim `parent` servers in the `cache hierarchy` (`CH`) are positioned close to the origin, and fall along the path from the origin to the edge server. Tiered Distribution typically reduces the origin server&#39;s load, and reduces the time it takes for edge servers to refresh content.  This advanced behavior provides a wider set of options than `tieredDistribution`. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder tieredDistributionAdvanced(GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionAdvancedArgs tieredDistributionAdvanced) {
            return tieredDistributionAdvanced(Output.of(tieredDistributionAdvanced));
        }

        /**
         * @param tieredDistributionCustomization With Tiered Distribution, Akamai edge servers retrieve cached content from other Akamai servers, rather than directly from the origin. This behavior sets custom Tiered Distribution maps (TD0) and migrates TD1 maps configured with `advanced features` to Cloud Wrapper. You need to enable `cloudWrapper` within the same rule. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder tieredDistributionCustomization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionCustomizationArgs> tieredDistributionCustomization) {
            $.tieredDistributionCustomization = tieredDistributionCustomization;
            return this;
        }

        /**
         * @param tieredDistributionCustomization With Tiered Distribution, Akamai edge servers retrieve cached content from other Akamai servers, rather than directly from the origin. This behavior sets custom Tiered Distribution maps (TD0) and migrates TD1 maps configured with `advanced features` to Cloud Wrapper. You need to enable `cloudWrapper` within the same rule. This behavior is for internal usage only. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder tieredDistributionCustomization(GetPropertyRulesBuilderRulesV20230530BehaviorTieredDistributionCustomizationArgs tieredDistributionCustomization) {
            return tieredDistributionCustomization(Output.of(tieredDistributionCustomization));
        }

        /**
         * @param timeout Sets the HTTP connect timeout. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorTimeoutArgs> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Sets the HTTP connect timeout. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder timeout(GetPropertyRulesBuilderRulesV20230530BehaviorTimeoutArgs timeout) {
            return timeout(Output.of(timeout));
        }

        /**
         * @param uidConfiguration This behavior allows you to extract unique identifier (UID) values from live traffic, for use in OTA applications. Note that you are responsible for maintaining the security of any data that may identify individual users. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder uidConfiguration(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorUidConfigurationArgs> uidConfiguration) {
            $.uidConfiguration = uidConfiguration;
            return this;
        }

        /**
         * @param uidConfiguration This behavior allows you to extract unique identifier (UID) values from live traffic, for use in OTA applications. Note that you are responsible for maintaining the security of any data that may identify individual users. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder uidConfiguration(GetPropertyRulesBuilderRulesV20230530BehaviorUidConfigurationArgs uidConfiguration) {
            return uidConfiguration(Output.of(uidConfiguration));
        }

        /**
         * @param validateEntityTag Instructs edge servers to compare the request&#39;s `ETag` header with that of the cached object. If they differ, the edge server sends a new copy of the object. This validation occurs in addition to the default validation of `Last-Modified` and `If-Modified-Since` headers. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder validateEntityTag(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorValidateEntityTagArgs> validateEntityTag) {
            $.validateEntityTag = validateEntityTag;
            return this;
        }

        /**
         * @param validateEntityTag Instructs edge servers to compare the request&#39;s `ETag` header with that of the cached object. If they differ, the edge server sends a new copy of the object. This validation occurs in addition to the default validation of `Last-Modified` and `If-Modified-Since` headers. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder validateEntityTag(GetPropertyRulesBuilderRulesV20230530BehaviorValidateEntityTagArgs validateEntityTag) {
            return validateEntityTag(Output.of(validateEntityTag));
        }

        /**
         * @param verifyJsonWebToken This behavior allows you to use JSON Web Tokens (JWT) to verify requests. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder verifyJsonWebToken(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs> verifyJsonWebToken) {
            $.verifyJsonWebToken = verifyJsonWebToken;
            return this;
        }

        /**
         * @param verifyJsonWebToken This behavior allows you to use JSON Web Tokens (JWT) to verify requests. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder verifyJsonWebToken(GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenArgs verifyJsonWebToken) {
            return verifyJsonWebToken(Output.of(verifyJsonWebToken));
        }

        /**
         * @param verifyJsonWebTokenForDcp This behavior allows you to use JSON web tokens (JWT) to verify requests for use in implementing `IoT Edge Connect`, which you use the `dcp` behavior to configure. You can specify the location in a request to pass a JSON web token (JWT), collections of public keys to verify the integrity of this token, and specific claims to extract from it. Use the `verifyJsonWebToken` behavior for other JWT validation. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder verifyJsonWebTokenForDcp(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenForDcpArgs> verifyJsonWebTokenForDcp) {
            $.verifyJsonWebTokenForDcp = verifyJsonWebTokenForDcp;
            return this;
        }

        /**
         * @param verifyJsonWebTokenForDcp This behavior allows you to use JSON web tokens (JWT) to verify requests for use in implementing `IoT Edge Connect`, which you use the `dcp` behavior to configure. You can specify the location in a request to pass a JSON web token (JWT), collections of public keys to verify the integrity of this token, and specific claims to extract from it. Use the `verifyJsonWebToken` behavior for other JWT validation. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder verifyJsonWebTokenForDcp(GetPropertyRulesBuilderRulesV20230530BehaviorVerifyJsonWebTokenForDcpArgs verifyJsonWebTokenForDcp) {
            return verifyJsonWebTokenForDcp(Output.of(verifyJsonWebTokenForDcp));
        }

        /**
         * @param verifyTokenAuthorization Verifies Auth 2.0 tokens. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder verifyTokenAuthorization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVerifyTokenAuthorizationArgs> verifyTokenAuthorization) {
            $.verifyTokenAuthorization = verifyTokenAuthorization;
            return this;
        }

        /**
         * @param verifyTokenAuthorization Verifies Auth 2.0 tokens. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder verifyTokenAuthorization(GetPropertyRulesBuilderRulesV20230530BehaviorVerifyTokenAuthorizationArgs verifyTokenAuthorization) {
            return verifyTokenAuthorization(Output.of(verifyTokenAuthorization));
        }

        /**
         * @param virtualWaitingRoom This behavior helps you maintain business continuity for dynamic applications in high-demand situations such as flash sales. It decreases abandonment by providing a user-friendly waiting room experience. FIFO (First-in First-out) is a request processing mechanism that prioritizes the first requests that enter the waiting room to send them first to the origin. Users can see both their estimated arrival time and position in the line. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Virtual Waitig Room within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder virtualWaitingRoom(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomArgs> virtualWaitingRoom) {
            $.virtualWaitingRoom = virtualWaitingRoom;
            return this;
        }

        /**
         * @param virtualWaitingRoom This behavior helps you maintain business continuity for dynamic applications in high-demand situations such as flash sales. It decreases abandonment by providing a user-friendly waiting room experience. FIFO (First-in First-out) is a request processing mechanism that prioritizes the first requests that enter the waiting room to send them first to the origin. Users can see both their estimated arrival time and position in the line. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Virtual Waitig Room within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder virtualWaitingRoom(GetPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomArgs virtualWaitingRoom) {
            return virtualWaitingRoom(Output.of(virtualWaitingRoom));
        }

        /**
         * @param virtualWaitingRoomWithEdgeWorkers This behavior allows you to configure the `virtualWaitingRoom` behavior with EdgeWorkers for extended scalability and customization. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder virtualWaitingRoomWithEdgeWorkers(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomWithEdgeWorkersArgs> virtualWaitingRoomWithEdgeWorkers) {
            $.virtualWaitingRoomWithEdgeWorkers = virtualWaitingRoomWithEdgeWorkers;
            return this;
        }

        /**
         * @param virtualWaitingRoomWithEdgeWorkers This behavior allows you to configure the `virtualWaitingRoom` behavior with EdgeWorkers for extended scalability and customization. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder virtualWaitingRoomWithEdgeWorkers(GetPropertyRulesBuilderRulesV20230530BehaviorVirtualWaitingRoomWithEdgeWorkersArgs virtualWaitingRoomWithEdgeWorkers) {
            return virtualWaitingRoomWithEdgeWorkers(Output.of(virtualWaitingRoomWithEdgeWorkers));
        }

        /**
         * @param visitorPrioritization The `Visitor Prioritization Cloudlet` decreases abandonment by providing a user-friendly waiting room experience.  With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Visitor Prioritization within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically.  To serve non-HTML API content such as JSON blocks, see the `apiPrioritization` behavior. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder visitorPrioritization(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationArgs> visitorPrioritization) {
            $.visitorPrioritization = visitorPrioritization;
            return this;
        }

        /**
         * @param visitorPrioritization The `Visitor Prioritization Cloudlet` decreases abandonment by providing a user-friendly waiting room experience.  With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Visitor Prioritization within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically.  To serve non-HTML API content such as JSON blocks, see the `apiPrioritization` behavior. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder visitorPrioritization(GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationArgs visitorPrioritization) {
            return visitorPrioritization(Output.of(visitorPrioritization));
        }

        /**
         * @param visitorPrioritizationFifo (**BETA**) The `Visitor Prioritization Cloudlet (FIFO)` decreases abandonment by providing a user-friendly waiting room experience. FIFO (First-in First-out) is a fair request processing mechanism, which prioritizes the first requests that enter the waiting room to send them first to the origin. Users can see both their estimated arrival time and position in the line. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Visitor Prioritization (FIFO) within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. To serve non-HTML API content such as JSON blocks, see the `apiPrioritization` behavior. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder visitorPrioritizationFifo(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoArgs> visitorPrioritizationFifo) {
            $.visitorPrioritizationFifo = visitorPrioritizationFifo;
            return this;
        }

        /**
         * @param visitorPrioritizationFifo (**BETA**) The `Visitor Prioritization Cloudlet (FIFO)` decreases abandonment by providing a user-friendly waiting room experience. FIFO (First-in First-out) is a fair request processing mechanism, which prioritizes the first requests that enter the waiting room to send them first to the origin. Users can see both their estimated arrival time and position in the line. With Cloudlets available on your contract, choose `Your services` &gt; `Edge logic Cloudlets` to control Visitor Prioritization (FIFO) within `Control Center`. Otherwise use the `Cloudlets API` to configure it programmatically. To serve non-HTML API content such as JSON blocks, see the `apiPrioritization` behavior. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder visitorPrioritizationFifo(GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoArgs visitorPrioritizationFifo) {
            return visitorPrioritizationFifo(Output.of(visitorPrioritizationFifo));
        }

        /**
         * @param visitorPrioritizationFifoStandalone This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder visitorPrioritizationFifoStandalone(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoStandaloneArgs> visitorPrioritizationFifoStandalone) {
            $.visitorPrioritizationFifoStandalone = visitorPrioritizationFifoStandalone;
            return this;
        }

        /**
         * @param visitorPrioritizationFifoStandalone This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder visitorPrioritizationFifoStandalone(GetPropertyRulesBuilderRulesV20230530BehaviorVisitorPrioritizationFifoStandaloneArgs visitorPrioritizationFifoStandalone) {
            return visitorPrioritizationFifoStandalone(Output.of(visitorPrioritizationFifoStandalone));
        }

        /**
         * @param watermarking Adds watermarking for each valid user&#39;s content. Content segments are delivered from different sources using a pattern unique to each user, based on a watermarking token included in each request. If your content is pirated or redistributed, you can forensically analyze the segments to extract the pattern, and identify the user who leaked the content. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder watermarking(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorWatermarkingArgs> watermarking) {
            $.watermarking = watermarking;
            return this;
        }

        /**
         * @param watermarking Adds watermarking for each valid user&#39;s content. Content segments are delivered from different sources using a pattern unique to each user, based on a watermarking token included in each request. If your content is pirated or redistributed, you can forensically analyze the segments to extract the pattern, and identify the user who leaked the content. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder watermarking(GetPropertyRulesBuilderRulesV20230530BehaviorWatermarkingArgs watermarking) {
            return watermarking(Output.of(watermarking));
        }

        /**
         * @param webApplicationFirewall This behavior implements a suite of security features that blocks threatening HTTP and HTTPS requests. Use it as your primary firewall, or in addition to existing security measures.  Only one referenced configuration is allowed per property, so this behavior typically belongs as part of its default rule. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder webApplicationFirewall(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewallArgs> webApplicationFirewall) {
            $.webApplicationFirewall = webApplicationFirewall;
            return this;
        }

        /**
         * @param webApplicationFirewall This behavior implements a suite of security features that blocks threatening HTTP and HTTPS requests. Use it as your primary firewall, or in addition to existing security measures.  Only one referenced configuration is allowed per property, so this behavior typically belongs as part of its default rule. This behavior cannot be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder webApplicationFirewall(GetPropertyRulesBuilderRulesV20230530BehaviorWebApplicationFirewallArgs webApplicationFirewall) {
            return webApplicationFirewall(Output.of(webApplicationFirewall));
        }

        /**
         * @param webSockets The WebSocket protocol allows web applications real-time bidirectional communication between clients and servers. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder webSockets(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorWebSocketsArgs> webSockets) {
            $.webSockets = webSockets;
            return this;
        }

        /**
         * @param webSockets The WebSocket protocol allows web applications real-time bidirectional communication between clients and servers. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder webSockets(GetPropertyRulesBuilderRulesV20230530BehaviorWebSocketsArgs webSockets) {
            return webSockets(Output.of(webSockets));
        }

        /**
         * @param webdav Web-based Distributed Authoring and Versioning (WebDAV) is a set of extensions to the HTTP protocol that allows users to collaboratively edit and manage files on remote web servers. This behavior enables WebDAV, and provides support for the following additional request methods: PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, and UNLOCK. To apply this behavior, you need to match on a `requestMethod`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder webdav(@Nullable Output<GetPropertyRulesBuilderRulesV20230530BehaviorWebdavArgs> webdav) {
            $.webdav = webdav;
            return this;
        }

        /**
         * @param webdav Web-based Distributed Authoring and Versioning (WebDAV) is a set of extensions to the HTTP protocol that allows users to collaboratively edit and manage files on remote web servers. This behavior enables WebDAV, and provides support for the following additional request methods: PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, and UNLOCK. To apply this behavior, you need to match on a `requestMethod`. This behavior can be used in includes.
         * 
         * @return builder
         * 
         */
        public Builder webdav(GetPropertyRulesBuilderRulesV20230530BehaviorWebdavArgs webdav) {
            return webdav(Output.of(webdav));
        }

        public GetPropertyRulesBuilderRulesV20230530BehaviorArgs build() {
            return $;
        }
    }

}
