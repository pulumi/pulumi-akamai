// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationDefault;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationLandscape;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationPortrait;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationSquare;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation();

    @Import(name="default")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationDefault default_;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationDefault> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="landscape")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationLandscape landscape;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationLandscape> landscape() {
        return Optional.ofNullable(this.landscape);
    }

    @Import(name="portrait")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationPortrait portrait;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationPortrait> portrait() {
        return Optional.ofNullable(this.portrait);
    }

    @Import(name="square")
    private @Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationSquare square;

    public Optional<GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationSquare> square() {
        return Optional.ofNullable(this.square);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation(GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation $) {
        this.default_ = $.default_;
        this.landscape = $.landscape;
        this.portrait = $.portrait;
        this.square = $.square;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationDefault default_) {
            $.default_ = default_;
            return this;
        }

        public Builder landscape(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationLandscape landscape) {
            $.landscape = landscape;
            return this;
        }

        public Builder portrait(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationPortrait portrait) {
            $.portrait = portrait;
            return this;
        }

        public Builder square(@Nullable GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientationSquare square) {
            $.square = square;
            return this;
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationCompoundTransformationIfDimensionGreaterThanIfOrientation build() {
            return $;
        }
    }

}
