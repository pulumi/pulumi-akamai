// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionDefaultArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionEqualArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionGreaterThanArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionLessThanArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs Empty = new GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs();

    @Import(name="default")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionDefaultArgs> default_;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionDefaultArgs>> default_() {
        return Optional.ofNullable(this.default_);
    }

    @Import(name="dimension")
    private @Nullable Output<String> dimension;

    public Optional<Output<String>> dimension() {
        return Optional.ofNullable(this.dimension);
    }

    @Import(name="dimensionVar")
    private @Nullable Output<String> dimensionVar;

    public Optional<Output<String>> dimensionVar() {
        return Optional.ofNullable(this.dimensionVar);
    }

    @Import(name="equal")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionEqualArgs> equal;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionEqualArgs>> equal() {
        return Optional.ofNullable(this.equal);
    }

    @Import(name="greaterThan")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionGreaterThanArgs> greaterThan;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionGreaterThanArgs>> greaterThan() {
        return Optional.ofNullable(this.greaterThan);
    }

    @Import(name="lessThan")
    private @Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionLessThanArgs> lessThan;

    public Optional<Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionLessThanArgs>> lessThan() {
        return Optional.ofNullable(this.lessThan);
    }

    @Import(name="value")
    private @Nullable Output<String> value;

    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    @Import(name="valueVar")
    private @Nullable Output<String> valueVar;

    public Optional<Output<String>> valueVar() {
        return Optional.ofNullable(this.valueVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs() {}

    private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs $) {
        this.default_ = $.default_;
        this.dimension = $.dimension;
        this.dimensionVar = $.dimensionVar;
        this.equal = $.equal;
        this.greaterThan = $.greaterThan;
        this.lessThan = $.lessThan;
        this.value = $.value;
        this.valueVar = $.valueVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs(Objects.requireNonNull(defaults));
        }

        public Builder default_(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionDefaultArgs> default_) {
            $.default_ = default_;
            return this;
        }

        public Builder default_(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionDefaultArgs default_) {
            return default_(Output.of(default_));
        }

        public Builder dimension(@Nullable Output<String> dimension) {
            $.dimension = dimension;
            return this;
        }

        public Builder dimension(String dimension) {
            return dimension(Output.of(dimension));
        }

        public Builder dimensionVar(@Nullable Output<String> dimensionVar) {
            $.dimensionVar = dimensionVar;
            return this;
        }

        public Builder dimensionVar(String dimensionVar) {
            return dimensionVar(Output.of(dimensionVar));
        }

        public Builder equal(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionEqualArgs> equal) {
            $.equal = equal;
            return this;
        }

        public Builder equal(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionEqualArgs equal) {
            return equal(Output.of(equal));
        }

        public Builder greaterThan(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionGreaterThanArgs> greaterThan) {
            $.greaterThan = greaterThan;
            return this;
        }

        public Builder greaterThan(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionGreaterThanArgs greaterThan) {
            return greaterThan(Output.of(greaterThan));
        }

        public Builder lessThan(@Nullable Output<GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionLessThanArgs> lessThan) {
            $.lessThan = lessThan;
            return this;
        }

        public Builder lessThan(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionLessThanArgs lessThan) {
            return lessThan(Output.of(lessThan));
        }

        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        public Builder value(String value) {
            return value(Output.of(value));
        }

        public Builder valueVar(@Nullable Output<String> valueVar) {
            $.valueVar = valueVar;
            return this;
        }

        public Builder valueVar(String valueVar) {
            return valueVar(Output.of(valueVar));
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionLessThanIfDimensionGreaterThanIfDimensionArgs build() {
            return $;
        }
    }

}
