// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetCloudwrapperLocationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudwrapperLocationPlainArgs Empty = new GetCloudwrapperLocationPlainArgs();

    @Import(name="locationName", required=true)
    private String locationName;

    public String locationName() {
        return this.locationName;
    }

    @Import(name="trafficType", required=true)
    private String trafficType;

    public String trafficType() {
        return this.trafficType;
    }

    private GetCloudwrapperLocationPlainArgs() {}

    private GetCloudwrapperLocationPlainArgs(GetCloudwrapperLocationPlainArgs $) {
        this.locationName = $.locationName;
        this.trafficType = $.trafficType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudwrapperLocationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudwrapperLocationPlainArgs $;

        public Builder() {
            $ = new GetCloudwrapperLocationPlainArgs();
        }

        public Builder(GetCloudwrapperLocationPlainArgs defaults) {
            $ = new GetCloudwrapperLocationPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder locationName(String locationName) {
            $.locationName = locationName;
            return this;
        }

        public Builder trafficType(String trafficType) {
            $.trafficType = trafficType;
            return this;
        }

        public GetCloudwrapperLocationPlainArgs build() {
            $.locationName = Objects.requireNonNull($.locationName, "expected parameter 'locationName' to be non-null");
            $.trafficType = Objects.requireNonNull($.trafficType, "expected parameter 'trafficType' to be non-null");
            return $;
        }
    }

}
