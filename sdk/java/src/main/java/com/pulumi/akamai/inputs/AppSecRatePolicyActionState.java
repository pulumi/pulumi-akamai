// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSecRatePolicyActionState extends com.pulumi.resources.ResourceArgs {

    public static final AppSecRatePolicyActionState Empty = new AppSecRatePolicyActionState();

    /**
     * Unique identifier of the security configuration
     * 
     */
    @Import(name="configId")
    private @Nullable Output<Integer> configId;

    /**
     * @return Unique identifier of the security configuration
     * 
     */
    public Optional<Output<Integer>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * Action to be taken for requests coming from an IPv4 address
     * 
     */
    @Import(name="ipv4Action")
    private @Nullable Output<String> ipv4Action;

    /**
     * @return Action to be taken for requests coming from an IPv4 address
     * 
     */
    public Optional<Output<String>> ipv4Action() {
        return Optional.ofNullable(this.ipv4Action);
    }

    /**
     * Action to be taken for requests coming from an IPv6 address
     * 
     */
    @Import(name="ipv6Action")
    private @Nullable Output<String> ipv6Action;

    /**
     * @return Action to be taken for requests coming from an IPv6 address
     * 
     */
    public Optional<Output<String>> ipv6Action() {
        return Optional.ofNullable(this.ipv6Action);
    }

    /**
     * Unique identifier of the rate policy
     * 
     */
    @Import(name="ratePolicyId")
    private @Nullable Output<Integer> ratePolicyId;

    /**
     * @return Unique identifier of the rate policy
     * 
     */
    public Optional<Output<Integer>> ratePolicyId() {
        return Optional.ofNullable(this.ratePolicyId);
    }

    /**
     * Unique identifier of the security policy
     * 
     */
    @Import(name="securityPolicyId")
    private @Nullable Output<String> securityPolicyId;

    /**
     * @return Unique identifier of the security policy
     * 
     */
    public Optional<Output<String>> securityPolicyId() {
        return Optional.ofNullable(this.securityPolicyId);
    }

    private AppSecRatePolicyActionState() {}

    private AppSecRatePolicyActionState(AppSecRatePolicyActionState $) {
        this.configId = $.configId;
        this.ipv4Action = $.ipv4Action;
        this.ipv6Action = $.ipv6Action;
        this.ratePolicyId = $.ratePolicyId;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSecRatePolicyActionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSecRatePolicyActionState $;

        public Builder() {
            $ = new AppSecRatePolicyActionState();
        }

        public Builder(AppSecRatePolicyActionState defaults) {
            $ = new AppSecRatePolicyActionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<Integer> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId Unique identifier of the security configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param ipv4Action Action to be taken for requests coming from an IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Action(@Nullable Output<String> ipv4Action) {
            $.ipv4Action = ipv4Action;
            return this;
        }

        /**
         * @param ipv4Action Action to be taken for requests coming from an IPv4 address
         * 
         * @return builder
         * 
         */
        public Builder ipv4Action(String ipv4Action) {
            return ipv4Action(Output.of(ipv4Action));
        }

        /**
         * @param ipv6Action Action to be taken for requests coming from an IPv6 address
         * 
         * @return builder
         * 
         */
        public Builder ipv6Action(@Nullable Output<String> ipv6Action) {
            $.ipv6Action = ipv6Action;
            return this;
        }

        /**
         * @param ipv6Action Action to be taken for requests coming from an IPv6 address
         * 
         * @return builder
         * 
         */
        public Builder ipv6Action(String ipv6Action) {
            return ipv6Action(Output.of(ipv6Action));
        }

        /**
         * @param ratePolicyId Unique identifier of the rate policy
         * 
         * @return builder
         * 
         */
        public Builder ratePolicyId(@Nullable Output<Integer> ratePolicyId) {
            $.ratePolicyId = ratePolicyId;
            return this;
        }

        /**
         * @param ratePolicyId Unique identifier of the rate policy
         * 
         * @return builder
         * 
         */
        public Builder ratePolicyId(Integer ratePolicyId) {
            return ratePolicyId(Output.of(ratePolicyId));
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(@Nullable Output<String> securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        /**
         * @param securityPolicyId Unique identifier of the security policy
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            return securityPolicyId(Output.of(securityPolicyId));
        }

        public AppSecRatePolicyActionState build() {
            return $;
        }
    }

}
