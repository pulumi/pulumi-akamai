// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.CloudwrapperConfigurationLocationArgs;
import com.pulumi.akamai.inputs.CloudwrapperConfigurationTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudwrapperConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final CloudwrapperConfigurationState Empty = new CloudwrapperConfigurationState();

    /**
     * Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
     * 
     */
    @Import(name="capacityAlertsThreshold")
    private @Nullable Output<Integer> capacityAlertsThreshold;

    /**
     * @return Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
     * 
     */
    public Optional<Output<Integer>> capacityAlertsThreshold() {
        return Optional.ofNullable(this.capacityAlertsThreshold);
    }

    /**
     * Additional information you provide to differentiate or track changes of the configuration.
     * 
     */
    @Import(name="comments")
    private @Nullable Output<String> comments;

    /**
     * @return Additional information you provide to differentiate or track changes of the configuration.
     * 
     */
    public Optional<Output<String>> comments() {
        return Optional.ofNullable(this.comments);
    }

    /**
     * Name of the configuration.
     * 
     */
    @Import(name="configName")
    private @Nullable Output<String> configName;

    /**
     * @return Name of the configuration.
     * 
     */
    public Optional<Output<String>> configName() {
        return Optional.ofNullable(this.configName);
    }

    /**
     * Contract ID having Cloud Wrapper entitlement.
     * 
     */
    @Import(name="contractId")
    private @Nullable Output<String> contractId;

    /**
     * @return Contract ID having Cloud Wrapper entitlement.
     * 
     */
    public Optional<Output<String>> contractId() {
        return Optional.ofNullable(this.contractId);
    }

    /**
     * List of locations to use with the configuration.
     * 
     */
    @Import(name="locations")
    private @Nullable Output<List<CloudwrapperConfigurationLocationArgs>> locations;

    /**
     * @return List of locations to use with the configuration.
     * 
     */
    public Optional<Output<List<CloudwrapperConfigurationLocationArgs>>> locations() {
        return Optional.ofNullable(this.locations);
    }

    /**
     * Email addresses to use for notifications.
     * 
     */
    @Import(name="notificationEmails")
    private @Nullable Output<List<String>> notificationEmails;

    /**
     * @return Email addresses to use for notifications.
     * 
     */
    public Optional<Output<List<String>>> notificationEmails() {
        return Optional.ofNullable(this.notificationEmails);
    }

    /**
     * List of properties belonging to eligible products.
     * 
     */
    @Import(name="propertyIds")
    private @Nullable Output<List<String>> propertyIds;

    /**
     * @return List of properties belonging to eligible products.
     * 
     */
    public Optional<Output<List<String>>> propertyIds() {
        return Optional.ofNullable(this.propertyIds);
    }

    /**
     * Retain idle objects beyond their max idle lifetime.
     * 
     */
    @Import(name="retainIdleObjects")
    private @Nullable Output<Boolean> retainIdleObjects;

    /**
     * @return Retain idle objects beyond their max idle lifetime.
     * 
     */
    public Optional<Output<Boolean>> retainIdleObjects() {
        return Optional.ofNullable(this.retainIdleObjects);
    }

    /**
     * Unique hash value of the configuration.
     * 
     */
    @Import(name="revision")
    private @Nullable Output<String> revision;

    /**
     * @return Unique hash value of the configuration.
     * 
     */
    public Optional<Output<String>> revision() {
        return Optional.ofNullable(this.revision);
    }

    @Import(name="timeouts")
    private @Nullable Output<CloudwrapperConfigurationTimeoutsArgs> timeouts;

    public Optional<Output<CloudwrapperConfigurationTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private CloudwrapperConfigurationState() {}

    private CloudwrapperConfigurationState(CloudwrapperConfigurationState $) {
        this.capacityAlertsThreshold = $.capacityAlertsThreshold;
        this.comments = $.comments;
        this.configName = $.configName;
        this.contractId = $.contractId;
        this.locations = $.locations;
        this.notificationEmails = $.notificationEmails;
        this.propertyIds = $.propertyIds;
        this.retainIdleObjects = $.retainIdleObjects;
        this.revision = $.revision;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudwrapperConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudwrapperConfigurationState $;

        public Builder() {
            $ = new CloudwrapperConfigurationState();
        }

        public Builder(CloudwrapperConfigurationState defaults) {
            $ = new CloudwrapperConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityAlertsThreshold Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
         * 
         * @return builder
         * 
         */
        public Builder capacityAlertsThreshold(@Nullable Output<Integer> capacityAlertsThreshold) {
            $.capacityAlertsThreshold = capacityAlertsThreshold;
            return this;
        }

        /**
         * @param capacityAlertsThreshold Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
         * 
         * @return builder
         * 
         */
        public Builder capacityAlertsThreshold(Integer capacityAlertsThreshold) {
            return capacityAlertsThreshold(Output.of(capacityAlertsThreshold));
        }

        /**
         * @param comments Additional information you provide to differentiate or track changes of the configuration.
         * 
         * @return builder
         * 
         */
        public Builder comments(@Nullable Output<String> comments) {
            $.comments = comments;
            return this;
        }

        /**
         * @param comments Additional information you provide to differentiate or track changes of the configuration.
         * 
         * @return builder
         * 
         */
        public Builder comments(String comments) {
            return comments(Output.of(comments));
        }

        /**
         * @param configName Name of the configuration.
         * 
         * @return builder
         * 
         */
        public Builder configName(@Nullable Output<String> configName) {
            $.configName = configName;
            return this;
        }

        /**
         * @param configName Name of the configuration.
         * 
         * @return builder
         * 
         */
        public Builder configName(String configName) {
            return configName(Output.of(configName));
        }

        /**
         * @param contractId Contract ID having Cloud Wrapper entitlement.
         * 
         * @return builder
         * 
         */
        public Builder contractId(@Nullable Output<String> contractId) {
            $.contractId = contractId;
            return this;
        }

        /**
         * @param contractId Contract ID having Cloud Wrapper entitlement.
         * 
         * @return builder
         * 
         */
        public Builder contractId(String contractId) {
            return contractId(Output.of(contractId));
        }

        /**
         * @param locations List of locations to use with the configuration.
         * 
         * @return builder
         * 
         */
        public Builder locations(@Nullable Output<List<CloudwrapperConfigurationLocationArgs>> locations) {
            $.locations = locations;
            return this;
        }

        /**
         * @param locations List of locations to use with the configuration.
         * 
         * @return builder
         * 
         */
        public Builder locations(List<CloudwrapperConfigurationLocationArgs> locations) {
            return locations(Output.of(locations));
        }

        /**
         * @param locations List of locations to use with the configuration.
         * 
         * @return builder
         * 
         */
        public Builder locations(CloudwrapperConfigurationLocationArgs... locations) {
            return locations(List.of(locations));
        }

        /**
         * @param notificationEmails Email addresses to use for notifications.
         * 
         * @return builder
         * 
         */
        public Builder notificationEmails(@Nullable Output<List<String>> notificationEmails) {
            $.notificationEmails = notificationEmails;
            return this;
        }

        /**
         * @param notificationEmails Email addresses to use for notifications.
         * 
         * @return builder
         * 
         */
        public Builder notificationEmails(List<String> notificationEmails) {
            return notificationEmails(Output.of(notificationEmails));
        }

        /**
         * @param notificationEmails Email addresses to use for notifications.
         * 
         * @return builder
         * 
         */
        public Builder notificationEmails(String... notificationEmails) {
            return notificationEmails(List.of(notificationEmails));
        }

        /**
         * @param propertyIds List of properties belonging to eligible products.
         * 
         * @return builder
         * 
         */
        public Builder propertyIds(@Nullable Output<List<String>> propertyIds) {
            $.propertyIds = propertyIds;
            return this;
        }

        /**
         * @param propertyIds List of properties belonging to eligible products.
         * 
         * @return builder
         * 
         */
        public Builder propertyIds(List<String> propertyIds) {
            return propertyIds(Output.of(propertyIds));
        }

        /**
         * @param propertyIds List of properties belonging to eligible products.
         * 
         * @return builder
         * 
         */
        public Builder propertyIds(String... propertyIds) {
            return propertyIds(List.of(propertyIds));
        }

        /**
         * @param retainIdleObjects Retain idle objects beyond their max idle lifetime.
         * 
         * @return builder
         * 
         */
        public Builder retainIdleObjects(@Nullable Output<Boolean> retainIdleObjects) {
            $.retainIdleObjects = retainIdleObjects;
            return this;
        }

        /**
         * @param retainIdleObjects Retain idle objects beyond their max idle lifetime.
         * 
         * @return builder
         * 
         */
        public Builder retainIdleObjects(Boolean retainIdleObjects) {
            return retainIdleObjects(Output.of(retainIdleObjects));
        }

        /**
         * @param revision Unique hash value of the configuration.
         * 
         * @return builder
         * 
         */
        public Builder revision(@Nullable Output<String> revision) {
            $.revision = revision;
            return this;
        }

        /**
         * @param revision Unique hash value of the configuration.
         * 
         * @return builder
         * 
         */
        public Builder revision(String revision) {
            return revision(Output.of(revision));
        }

        public Builder timeouts(@Nullable Output<CloudwrapperConfigurationTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(CloudwrapperConfigurationTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public CloudwrapperConfigurationState build() {
            return $;
        }
    }

}
