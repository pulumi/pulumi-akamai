// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.inputs.PropertyActivationComplianceRecordArgs;
import com.pulumi.akamai.inputs.PropertyActivationRuleErrorArgs;
import com.pulumi.akamai.inputs.PropertyActivationRuleWarningArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PropertyActivationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PropertyActivationArgs Empty = new PropertyActivationArgs();

    @Import(name="activationId")
    private @Nullable Output<String> activationId;

    public Optional<Output<String>> activationId() {
        return Optional.ofNullable(this.activationId);
    }

    /**
     * automatically acknowledge all rule warnings for activation to continue. default is true
     * 
     */
    @Import(name="autoAcknowledgeRuleWarnings")
    private @Nullable Output<Boolean> autoAcknowledgeRuleWarnings;

    /**
     * @return automatically acknowledge all rule warnings for activation to continue. default is true
     * 
     */
    public Optional<Output<Boolean>> autoAcknowledgeRuleWarnings() {
        return Optional.ofNullable(this.autoAcknowledgeRuleWarnings);
    }

    /**
     * Provides an audit record when activating on a production network
     * 
     */
    @Import(name="complianceRecord")
    private @Nullable Output<PropertyActivationComplianceRecordArgs> complianceRecord;

    /**
     * @return Provides an audit record when activating on a production network
     * 
     */
    public Optional<Output<PropertyActivationComplianceRecordArgs>> complianceRecord() {
        return Optional.ofNullable(this.complianceRecord);
    }

    @Import(name="contacts", required=true)
    private Output<List<String>> contacts;

    public Output<List<String>> contacts() {
        return this.contacts;
    }

    @Import(name="network")
    private @Nullable Output<String> network;

    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * assigns a log message to the activation request
     * 
     */
    @Import(name="note")
    private @Nullable Output<String> note;

    /**
     * @return assigns a log message to the activation request
     * 
     */
    public Optional<Output<String>> note() {
        return Optional.ofNullable(this.note);
    }

    /**
     * @deprecated
     * The setting &#34;property&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""property"" has been deprecated. */
    @Import(name="property")
    private @Nullable Output<String> property;

    /**
     * @deprecated
     * The setting &#34;property&#34; has been deprecated.
     * 
     */
    @Deprecated /* The setting ""property"" has been deprecated. */
    public Optional<Output<String>> property() {
        return Optional.ofNullable(this.property);
    }

    @Import(name="propertyId")
    private @Nullable Output<String> propertyId;

    public Optional<Output<String>> propertyId() {
        return Optional.ofNullable(this.propertyId);
    }

    @Import(name="ruleErrors")
    private @Nullable Output<List<PropertyActivationRuleErrorArgs>> ruleErrors;

    public Optional<Output<List<PropertyActivationRuleErrorArgs>>> ruleErrors() {
        return Optional.ofNullable(this.ruleErrors);
    }

    /**
     * @deprecated
     * Rule warnings will not be set in state anymore
     * 
     */
    @Deprecated /* Rule warnings will not be set in state anymore */
    @Import(name="ruleWarnings")
    private @Nullable Output<List<PropertyActivationRuleWarningArgs>> ruleWarnings;

    /**
     * @deprecated
     * Rule warnings will not be set in state anymore
     * 
     */
    @Deprecated /* Rule warnings will not be set in state anymore */
    public Optional<Output<List<PropertyActivationRuleWarningArgs>>> ruleWarnings() {
        return Optional.ofNullable(this.ruleWarnings);
    }

    @Import(name="version", required=true)
    private Output<Integer> version;

    public Output<Integer> version() {
        return this.version;
    }

    private PropertyActivationArgs() {}

    private PropertyActivationArgs(PropertyActivationArgs $) {
        this.activationId = $.activationId;
        this.autoAcknowledgeRuleWarnings = $.autoAcknowledgeRuleWarnings;
        this.complianceRecord = $.complianceRecord;
        this.contacts = $.contacts;
        this.network = $.network;
        this.note = $.note;
        this.property = $.property;
        this.propertyId = $.propertyId;
        this.ruleErrors = $.ruleErrors;
        this.ruleWarnings = $.ruleWarnings;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PropertyActivationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PropertyActivationArgs $;

        public Builder() {
            $ = new PropertyActivationArgs();
        }

        public Builder(PropertyActivationArgs defaults) {
            $ = new PropertyActivationArgs(Objects.requireNonNull(defaults));
        }

        public Builder activationId(@Nullable Output<String> activationId) {
            $.activationId = activationId;
            return this;
        }

        public Builder activationId(String activationId) {
            return activationId(Output.of(activationId));
        }

        /**
         * @param autoAcknowledgeRuleWarnings automatically acknowledge all rule warnings for activation to continue. default is true
         * 
         * @return builder
         * 
         */
        public Builder autoAcknowledgeRuleWarnings(@Nullable Output<Boolean> autoAcknowledgeRuleWarnings) {
            $.autoAcknowledgeRuleWarnings = autoAcknowledgeRuleWarnings;
            return this;
        }

        /**
         * @param autoAcknowledgeRuleWarnings automatically acknowledge all rule warnings for activation to continue. default is true
         * 
         * @return builder
         * 
         */
        public Builder autoAcknowledgeRuleWarnings(Boolean autoAcknowledgeRuleWarnings) {
            return autoAcknowledgeRuleWarnings(Output.of(autoAcknowledgeRuleWarnings));
        }

        /**
         * @param complianceRecord Provides an audit record when activating on a production network
         * 
         * @return builder
         * 
         */
        public Builder complianceRecord(@Nullable Output<PropertyActivationComplianceRecordArgs> complianceRecord) {
            $.complianceRecord = complianceRecord;
            return this;
        }

        /**
         * @param complianceRecord Provides an audit record when activating on a production network
         * 
         * @return builder
         * 
         */
        public Builder complianceRecord(PropertyActivationComplianceRecordArgs complianceRecord) {
            return complianceRecord(Output.of(complianceRecord));
        }

        public Builder contacts(Output<List<String>> contacts) {
            $.contacts = contacts;
            return this;
        }

        public Builder contacts(List<String> contacts) {
            return contacts(Output.of(contacts));
        }

        public Builder contacts(String... contacts) {
            return contacts(List.of(contacts));
        }

        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param note assigns a log message to the activation request
         * 
         * @return builder
         * 
         */
        public Builder note(@Nullable Output<String> note) {
            $.note = note;
            return this;
        }

        /**
         * @param note assigns a log message to the activation request
         * 
         * @return builder
         * 
         */
        public Builder note(String note) {
            return note(Output.of(note));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;property&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""property"" has been deprecated. */
        public Builder property(@Nullable Output<String> property) {
            $.property = property;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The setting &#34;property&#34; has been deprecated.
         * 
         */
        @Deprecated /* The setting ""property"" has been deprecated. */
        public Builder property(String property) {
            return property(Output.of(property));
        }

        public Builder propertyId(@Nullable Output<String> propertyId) {
            $.propertyId = propertyId;
            return this;
        }

        public Builder propertyId(String propertyId) {
            return propertyId(Output.of(propertyId));
        }

        public Builder ruleErrors(@Nullable Output<List<PropertyActivationRuleErrorArgs>> ruleErrors) {
            $.ruleErrors = ruleErrors;
            return this;
        }

        public Builder ruleErrors(List<PropertyActivationRuleErrorArgs> ruleErrors) {
            return ruleErrors(Output.of(ruleErrors));
        }

        public Builder ruleErrors(PropertyActivationRuleErrorArgs... ruleErrors) {
            return ruleErrors(List.of(ruleErrors));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Rule warnings will not be set in state anymore
         * 
         */
        @Deprecated /* Rule warnings will not be set in state anymore */
        public Builder ruleWarnings(@Nullable Output<List<PropertyActivationRuleWarningArgs>> ruleWarnings) {
            $.ruleWarnings = ruleWarnings;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Rule warnings will not be set in state anymore
         * 
         */
        @Deprecated /* Rule warnings will not be set in state anymore */
        public Builder ruleWarnings(List<PropertyActivationRuleWarningArgs> ruleWarnings) {
            return ruleWarnings(Output.of(ruleWarnings));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Rule warnings will not be set in state anymore
         * 
         */
        @Deprecated /* Rule warnings will not be set in state anymore */
        public Builder ruleWarnings(PropertyActivationRuleWarningArgs... ruleWarnings) {
            return ruleWarnings(List.of(ruleWarnings));
        }

        public Builder version(Output<Integer> version) {
            $.version = version;
            return this;
        }

        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public PropertyActivationArgs build() {
            $.contacts = Objects.requireNonNull($.contacts, "expected parameter 'contacts' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
