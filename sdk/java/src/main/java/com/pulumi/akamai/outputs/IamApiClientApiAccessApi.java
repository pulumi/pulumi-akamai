// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IamApiClientApiAccessApi {
    /**
     * @return The API client&#39;s access level on an API basis, either &#39;READ-ONLY&#39;, &#39;READ-WRITE&#39;, &#39;CREDENTIAL-READ-ONLY&#39;, or &#39;CREDENTIAL-READ-WRITE&#39;.
     * 
     */
    private String accessLevel;
    /**
     * @return A unique identifier of the API.
     * 
     */
    private Integer apiId;
    /**
     * @return A human-readable name for the API.
     * 
     */
    private @Nullable String apiName;
    /**
     * @return A human-readable description for the API.
     * 
     */
    private @Nullable String description;
    /**
     * @return A link to more information about the API.
     * 
     */
    private @Nullable String documentationUrl;
    /**
     * @return Specifies where the API can access resources.
     * 
     */
    private @Nullable String endpoint;

    private IamApiClientApiAccessApi() {}
    /**
     * @return The API client&#39;s access level on an API basis, either &#39;READ-ONLY&#39;, &#39;READ-WRITE&#39;, &#39;CREDENTIAL-READ-ONLY&#39;, or &#39;CREDENTIAL-READ-WRITE&#39;.
     * 
     */
    public String accessLevel() {
        return this.accessLevel;
    }
    /**
     * @return A unique identifier of the API.
     * 
     */
    public Integer apiId() {
        return this.apiId;
    }
    /**
     * @return A human-readable name for the API.
     * 
     */
    public Optional<String> apiName() {
        return Optional.ofNullable(this.apiName);
    }
    /**
     * @return A human-readable description for the API.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A link to more information about the API.
     * 
     */
    public Optional<String> documentationUrl() {
        return Optional.ofNullable(this.documentationUrl);
    }
    /**
     * @return Specifies where the API can access resources.
     * 
     */
    public Optional<String> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IamApiClientApiAccessApi defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessLevel;
        private Integer apiId;
        private @Nullable String apiName;
        private @Nullable String description;
        private @Nullable String documentationUrl;
        private @Nullable String endpoint;
        public Builder() {}
        public Builder(IamApiClientApiAccessApi defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.apiId = defaults.apiId;
    	      this.apiName = defaults.apiName;
    	      this.description = defaults.description;
    	      this.documentationUrl = defaults.documentationUrl;
    	      this.endpoint = defaults.endpoint;
        }

        @CustomType.Setter
        public Builder accessLevel(String accessLevel) {
            if (accessLevel == null) {
              throw new MissingRequiredPropertyException("IamApiClientApiAccessApi", "accessLevel");
            }
            this.accessLevel = accessLevel;
            return this;
        }
        @CustomType.Setter
        public Builder apiId(Integer apiId) {
            if (apiId == null) {
              throw new MissingRequiredPropertyException("IamApiClientApiAccessApi", "apiId");
            }
            this.apiId = apiId;
            return this;
        }
        @CustomType.Setter
        public Builder apiName(@Nullable String apiName) {

            this.apiName = apiName;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder documentationUrl(@Nullable String documentationUrl) {

            this.documentationUrl = documentationUrl;
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(@Nullable String endpoint) {

            this.endpoint = endpoint;
            return this;
        }
        public IamApiClientApiAccessApi build() {
            final var _resultValue = new IamApiClientApiAccessApi();
            _resultValue.accessLevel = accessLevel;
            _resultValue.apiId = apiId;
            _resultValue.apiName = apiName;
            _resultValue.description = description;
            _resultValue.documentationUrl = documentationUrl;
            _resultValue.endpoint = endpoint;
            return _resultValue;
        }
    }
}
