// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamApiClientCredentialActionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final IamApiClientCredentialActionsArgs Empty = new IamApiClientCredentialActionsArgs();

    /**
     * Whether you can activate the credential.
     * 
     */
    @Import(name="activate")
    private @Nullable Output<Boolean> activate;

    /**
     * @return Whether you can activate the credential.
     * 
     */
    public Optional<Output<Boolean>> activate() {
        return Optional.ofNullable(this.activate);
    }

    /**
     * Whether you can deactivate the credential.
     * 
     */
    @Import(name="deactivate")
    private @Nullable Output<Boolean> deactivate;

    /**
     * @return Whether you can deactivate the credential.
     * 
     */
    public Optional<Output<Boolean>> deactivate() {
        return Optional.ofNullable(this.deactivate);
    }

    /**
     * Whether you can remove the credential.
     * 
     */
    @Import(name="delete")
    private @Nullable Output<Boolean> delete;

    /**
     * @return Whether you can remove the credential.
     * 
     */
    public Optional<Output<Boolean>> delete() {
        return Optional.ofNullable(this.delete);
    }

    /**
     * Whether you can modify the credential&#39;s description.
     * 
     */
    @Import(name="editDescription")
    private @Nullable Output<Boolean> editDescription;

    /**
     * @return Whether you can modify the credential&#39;s description.
     * 
     */
    public Optional<Output<Boolean>> editDescription() {
        return Optional.ofNullable(this.editDescription);
    }

    /**
     * Whether you can modify the credential&#39;s expiration date.
     * 
     */
    @Import(name="editExpiration")
    private @Nullable Output<Boolean> editExpiration;

    /**
     * @return Whether you can modify the credential&#39;s expiration date.
     * 
     */
    public Optional<Output<Boolean>> editExpiration() {
        return Optional.ofNullable(this.editExpiration);
    }

    private IamApiClientCredentialActionsArgs() {}

    private IamApiClientCredentialActionsArgs(IamApiClientCredentialActionsArgs $) {
        this.activate = $.activate;
        this.deactivate = $.deactivate;
        this.delete = $.delete;
        this.editDescription = $.editDescription;
        this.editExpiration = $.editExpiration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamApiClientCredentialActionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamApiClientCredentialActionsArgs $;

        public Builder() {
            $ = new IamApiClientCredentialActionsArgs();
        }

        public Builder(IamApiClientCredentialActionsArgs defaults) {
            $ = new IamApiClientCredentialActionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activate Whether you can activate the credential.
         * 
         * @return builder
         * 
         */
        public Builder activate(@Nullable Output<Boolean> activate) {
            $.activate = activate;
            return this;
        }

        /**
         * @param activate Whether you can activate the credential.
         * 
         * @return builder
         * 
         */
        public Builder activate(Boolean activate) {
            return activate(Output.of(activate));
        }

        /**
         * @param deactivate Whether you can deactivate the credential.
         * 
         * @return builder
         * 
         */
        public Builder deactivate(@Nullable Output<Boolean> deactivate) {
            $.deactivate = deactivate;
            return this;
        }

        /**
         * @param deactivate Whether you can deactivate the credential.
         * 
         * @return builder
         * 
         */
        public Builder deactivate(Boolean deactivate) {
            return deactivate(Output.of(deactivate));
        }

        /**
         * @param delete Whether you can remove the credential.
         * 
         * @return builder
         * 
         */
        public Builder delete(@Nullable Output<Boolean> delete) {
            $.delete = delete;
            return this;
        }

        /**
         * @param delete Whether you can remove the credential.
         * 
         * @return builder
         * 
         */
        public Builder delete(Boolean delete) {
            return delete(Output.of(delete));
        }

        /**
         * @param editDescription Whether you can modify the credential&#39;s description.
         * 
         * @return builder
         * 
         */
        public Builder editDescription(@Nullable Output<Boolean> editDescription) {
            $.editDescription = editDescription;
            return this;
        }

        /**
         * @param editDescription Whether you can modify the credential&#39;s description.
         * 
         * @return builder
         * 
         */
        public Builder editDescription(Boolean editDescription) {
            return editDescription(Output.of(editDescription));
        }

        /**
         * @param editExpiration Whether you can modify the credential&#39;s expiration date.
         * 
         * @return builder
         * 
         */
        public Builder editExpiration(@Nullable Output<Boolean> editExpiration) {
            $.editExpiration = editExpiration;
            return this;
        }

        /**
         * @param editExpiration Whether you can modify the credential&#39;s expiration date.
         * 
         * @return builder
         * 
         */
        public Builder editExpiration(Boolean editExpiration) {
            return editExpiration(Output.of(editExpiration));
        }

        public IamApiClientCredentialActionsArgs build() {
            return $;
        }
    }

}
