// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIamPropertyUsersUser {
    /**
     * @return The user&#39;s first name.
     * 
     */
    private String firstName;
    /**
     * @return Whether a user&#39;s access to a property is blocked.
     * 
     */
    private Boolean isBlocked;
    /**
     * @return The user&#39;s surname.
     * 
     */
    private String lastName;
    /**
     * @return Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a contactId in other APIs.
     * 
     */
    private String uiIdentityId;
    /**
     * @return The user&#39;s username in Control Center.
     * 
     */
    private String uiUserName;

    private GetIamPropertyUsersUser() {}
    /**
     * @return The user&#39;s first name.
     * 
     */
    public String firstName() {
        return this.firstName;
    }
    /**
     * @return Whether a user&#39;s access to a property is blocked.
     * 
     */
    public Boolean isBlocked() {
        return this.isBlocked;
    }
    /**
     * @return The user&#39;s surname.
     * 
     */
    public String lastName() {
        return this.lastName;
    }
    /**
     * @return Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a contactId in other APIs.
     * 
     */
    public String uiIdentityId() {
        return this.uiIdentityId;
    }
    /**
     * @return The user&#39;s username in Control Center.
     * 
     */
    public String uiUserName() {
        return this.uiUserName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamPropertyUsersUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String firstName;
        private Boolean isBlocked;
        private String lastName;
        private String uiIdentityId;
        private String uiUserName;
        public Builder() {}
        public Builder(GetIamPropertyUsersUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.firstName = defaults.firstName;
    	      this.isBlocked = defaults.isBlocked;
    	      this.lastName = defaults.lastName;
    	      this.uiIdentityId = defaults.uiIdentityId;
    	      this.uiUserName = defaults.uiUserName;
        }

        @CustomType.Setter
        public Builder firstName(String firstName) {
            if (firstName == null) {
              throw new MissingRequiredPropertyException("GetIamPropertyUsersUser", "firstName");
            }
            this.firstName = firstName;
            return this;
        }
        @CustomType.Setter
        public Builder isBlocked(Boolean isBlocked) {
            if (isBlocked == null) {
              throw new MissingRequiredPropertyException("GetIamPropertyUsersUser", "isBlocked");
            }
            this.isBlocked = isBlocked;
            return this;
        }
        @CustomType.Setter
        public Builder lastName(String lastName) {
            if (lastName == null) {
              throw new MissingRequiredPropertyException("GetIamPropertyUsersUser", "lastName");
            }
            this.lastName = lastName;
            return this;
        }
        @CustomType.Setter
        public Builder uiIdentityId(String uiIdentityId) {
            if (uiIdentityId == null) {
              throw new MissingRequiredPropertyException("GetIamPropertyUsersUser", "uiIdentityId");
            }
            this.uiIdentityId = uiIdentityId;
            return this;
        }
        @CustomType.Setter
        public Builder uiUserName(String uiUserName) {
            if (uiUserName == null) {
              throw new MissingRequiredPropertyException("GetIamPropertyUsersUser", "uiUserName");
            }
            this.uiUserName = uiUserName;
            return this;
        }
        public GetIamPropertyUsersUser build() {
            final var _resultValue = new GetIamPropertyUsersUser();
            _resultValue.firstName = firstName;
            _resultValue.isBlocked = isBlocked;
            _resultValue.lastName = lastName;
            _resultValue.uiIdentityId = uiIdentityId;
            _resultValue.uiUserName = uiUserName;
            return _resultValue;
        }
    }
}
