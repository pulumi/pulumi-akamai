// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.edgedns;

import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.edgedns.DnsZoneArgs;
import com.pulumi.akamai.edgedns.inputs.DnsZoneState;
import com.pulumi.akamai.edgedns.outputs.DnsZoneTsigKey;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * @deprecated
 * akamai.edgedns/dnszone.DnsZone has been deprecated in favor of akamai.index/dnszone.DnsZone
 * 
 */
@Deprecated /* akamai.edgedns/dnszone.DnsZone has been deprecated in favor of akamai.index/dnszone.DnsZone */
@ResourceType(type="akamai:edgedns/dnsZone:DnsZone")
public class DnsZone extends com.pulumi.resources.CustomResource {
    @Export(name="activationState", type=String.class, parameters={})
    private Output<String> activationState;

    public Output<String> activationState() {
        return this.activationState;
    }
    @Export(name="aliasCount", type=Integer.class, parameters={})
    private Output<Integer> aliasCount;

    public Output<Integer> aliasCount() {
        return this.aliasCount;
    }
    @Export(name="comment", type=String.class, parameters={})
    private Output</* @Nullable */ String> comment;

    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    @Export(name="contract", type=String.class, parameters={})
    private Output<String> contract;

    public Output<String> contract() {
        return this.contract;
    }
    @Export(name="endCustomerId", type=String.class, parameters={})
    private Output</* @Nullable */ String> endCustomerId;

    public Output<Optional<String>> endCustomerId() {
        return Codegen.optional(this.endCustomerId);
    }
    @Export(name="group", type=String.class, parameters={})
    private Output</* @Nullable */ String> group;

    public Output<Optional<String>> group() {
        return Codegen.optional(this.group);
    }
    @Export(name="masters", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> masters;

    public Output<Optional<List<String>>> masters() {
        return Codegen.optional(this.masters);
    }
    @Export(name="signAndServe", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> signAndServe;

    public Output<Optional<Boolean>> signAndServe() {
        return Codegen.optional(this.signAndServe);
    }
    @Export(name="signAndServeAlgorithm", type=String.class, parameters={})
    private Output</* @Nullable */ String> signAndServeAlgorithm;

    public Output<Optional<String>> signAndServeAlgorithm() {
        return Codegen.optional(this.signAndServeAlgorithm);
    }
    @Export(name="target", type=String.class, parameters={})
    private Output</* @Nullable */ String> target;

    public Output<Optional<String>> target() {
        return Codegen.optional(this.target);
    }
    @Export(name="tsigKey", type=DnsZoneTsigKey.class, parameters={})
    private Output</* @Nullable */ DnsZoneTsigKey> tsigKey;

    public Output<Optional<DnsZoneTsigKey>> tsigKey() {
        return Codegen.optional(this.tsigKey);
    }
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }
    @Export(name="versionId", type=String.class, parameters={})
    private Output<String> versionId;

    public Output<String> versionId() {
        return this.versionId;
    }
    @Export(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DnsZone(String name) {
        this(name, DnsZoneArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DnsZone(String name, DnsZoneArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DnsZone(String name, DnsZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:edgedns/dnsZone:DnsZone", name, args == null ? DnsZoneArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DnsZone(String name, Output<String> id, @Nullable DnsZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:edgedns/dnsZone:DnsZone", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DnsZone get(String name, Output<String> id, @Nullable DnsZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DnsZone(name, id, state, options);
    }
}
