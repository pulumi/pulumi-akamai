// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPropertyIncludeActivationResult {
    private String contractId;
    private String groupId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String includeId;
    private String name;
    private String network;
    private String note;
    private List<String> notifyEmails;
    private String version;

    private GetPropertyIncludeActivationResult() {}
    public String contractId() {
        return this.contractId;
    }
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String includeId() {
        return this.includeId;
    }
    public String name() {
        return this.name;
    }
    public String network() {
        return this.network;
    }
    public String note() {
        return this.note;
    }
    public List<String> notifyEmails() {
        return this.notifyEmails;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyIncludeActivationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String contractId;
        private String groupId;
        private String id;
        private String includeId;
        private String name;
        private String network;
        private String note;
        private List<String> notifyEmails;
        private String version;
        public Builder() {}
        public Builder(GetPropertyIncludeActivationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contractId = defaults.contractId;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.includeId = defaults.includeId;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.note = defaults.note;
    	      this.notifyEmails = defaults.notifyEmails;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder contractId(String contractId) {
            if (contractId == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludeActivationResult", "contractId");
            }
            this.contractId = contractId;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludeActivationResult", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludeActivationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includeId(String includeId) {
            if (includeId == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludeActivationResult", "includeId");
            }
            this.includeId = includeId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludeActivationResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludeActivationResult", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder note(String note) {
            if (note == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludeActivationResult", "note");
            }
            this.note = note;
            return this;
        }
        @CustomType.Setter
        public Builder notifyEmails(List<String> notifyEmails) {
            if (notifyEmails == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludeActivationResult", "notifyEmails");
            }
            this.notifyEmails = notifyEmails;
            return this;
        }
        public Builder notifyEmails(String... notifyEmails) {
            return notifyEmails(List.of(notifyEmails));
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetPropertyIncludeActivationResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetPropertyIncludeActivationResult build() {
            final var _resultValue = new GetPropertyIncludeActivationResult();
            _resultValue.contractId = contractId;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.includeId = includeId;
            _resultValue.name = name;
            _resultValue.network = network;
            _resultValue.note = note;
            _resultValue.notifyEmails = notifyEmails;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
