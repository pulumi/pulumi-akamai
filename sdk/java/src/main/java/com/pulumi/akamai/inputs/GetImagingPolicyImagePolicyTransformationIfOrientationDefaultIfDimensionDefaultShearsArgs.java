// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs();

    @Import(name="xShear")
    private @Nullable Output<String> xShear;

    public Optional<Output<String>> xShear() {
        return Optional.ofNullable(this.xShear);
    }

    @Import(name="xShearVar")
    private @Nullable Output<String> xShearVar;

    public Optional<Output<String>> xShearVar() {
        return Optional.ofNullable(this.xShearVar);
    }

    @Import(name="yShear")
    private @Nullable Output<String> yShear;

    public Optional<Output<String>> yShear() {
        return Optional.ofNullable(this.yShear);
    }

    @Import(name="yShearVar")
    private @Nullable Output<String> yShearVar;

    public Optional<Output<String>> yShearVar() {
        return Optional.ofNullable(this.yShearVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs $) {
        this.xShear = $.xShear;
        this.xShearVar = $.xShearVar;
        this.yShear = $.yShear;
        this.yShearVar = $.yShearVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs(Objects.requireNonNull(defaults));
        }

        public Builder xShear(@Nullable Output<String> xShear) {
            $.xShear = xShear;
            return this;
        }

        public Builder xShear(String xShear) {
            return xShear(Output.of(xShear));
        }

        public Builder xShearVar(@Nullable Output<String> xShearVar) {
            $.xShearVar = xShearVar;
            return this;
        }

        public Builder xShearVar(String xShearVar) {
            return xShearVar(Output.of(xShearVar));
        }

        public Builder yShear(@Nullable Output<String> yShear) {
            $.yShear = yShear;
            return this;
        }

        public Builder yShear(String yShear) {
            return yShear(Output.of(yShear));
        }

        public Builder yShearVar(@Nullable Output<String> yShearVar) {
            $.yShearVar = yShearVar;
            return this;
        }

        public Builder yShearVar(String yShearVar) {
            return yShearVar(Output.of(yShearVar));
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationDefaultIfDimensionDefaultShearsArgs build() {
            return $;
        }
    }

}
