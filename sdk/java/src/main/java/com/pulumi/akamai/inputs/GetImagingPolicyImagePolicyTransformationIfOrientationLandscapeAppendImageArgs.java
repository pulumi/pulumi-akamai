// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageBoxImageArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageCircleImageArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageTextImageArgs;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageUrlImageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs();

    @Import(name="boxImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageBoxImageArgs>> boxImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageBoxImageArgs>>> boxImages() {
        return Optional.ofNullable(this.boxImages);
    }

    @Import(name="circleImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageCircleImageArgs>> circleImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageCircleImageArgs>>> circleImages() {
        return Optional.ofNullable(this.circleImages);
    }

    @Import(name="textImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageTextImageArgs>> textImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageTextImageArgs>>> textImages() {
        return Optional.ofNullable(this.textImages);
    }

    @Import(name="urlImages")
    private @Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageUrlImageArgs>> urlImages;

    public Optional<Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageUrlImageArgs>>> urlImages() {
        return Optional.ofNullable(this.urlImages);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs $) {
        this.boxImages = $.boxImages;
        this.circleImages = $.circleImages;
        this.textImages = $.textImages;
        this.urlImages = $.urlImages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs(Objects.requireNonNull(defaults));
        }

        public Builder boxImages(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageBoxImageArgs>> boxImages) {
            $.boxImages = boxImages;
            return this;
        }

        public Builder boxImages(List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageBoxImageArgs> boxImages) {
            return boxImages(Output.of(boxImages));
        }

        public Builder boxImages(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageBoxImageArgs... boxImages) {
            return boxImages(List.of(boxImages));
        }

        public Builder circleImages(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageCircleImageArgs>> circleImages) {
            $.circleImages = circleImages;
            return this;
        }

        public Builder circleImages(List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageCircleImageArgs> circleImages) {
            return circleImages(Output.of(circleImages));
        }

        public Builder circleImages(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageCircleImageArgs... circleImages) {
            return circleImages(List.of(circleImages));
        }

        public Builder textImages(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageTextImageArgs>> textImages) {
            $.textImages = textImages;
            return this;
        }

        public Builder textImages(List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageTextImageArgs> textImages) {
            return textImages(Output.of(textImages));
        }

        public Builder textImages(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageTextImageArgs... textImages) {
            return textImages(List.of(textImages));
        }

        public Builder urlImages(@Nullable Output<List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageUrlImageArgs>> urlImages) {
            $.urlImages = urlImages;
            return this;
        }

        public Builder urlImages(List<GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageUrlImageArgs> urlImages) {
            return urlImages(Output.of(urlImages));
        }

        public Builder urlImages(GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageUrlImageArgs... urlImages) {
            return urlImages(List.of(urlImages));
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationLandscapeAppendImageArgs build() {
            return $;
        }
    }

}
