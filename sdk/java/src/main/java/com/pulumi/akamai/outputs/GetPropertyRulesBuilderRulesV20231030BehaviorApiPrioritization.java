// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationCloudletPolicy;
import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationNetStorage;
import com.pulumi.akamai.outputs.GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationThrottledCpCode;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritization {
    /**
     * @return Specifies the alternate response&#39;s time to live in the cache, `5` minutes by default.
     * 
     */
    private @Nullable Integer alternateResponseCacheTtl;
    /**
     * @return Identifies the Cloudlet policy.
     * 
     */
    private @Nullable GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationCloudletPolicy cloudletPolicy;
    /**
     * @return Identifies the Cloudlet shared policy to use with this behavior. Use the `Cloudlets API` to list available shared policies.
     * 
     */
    private @Nullable Integer cloudletSharedPolicy;
    /**
     * @return Activates the API Prioritization feature.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Whether you want to apply the Cloudlet shared policy to an unlimited number of properties within your account. Learn more about shared policies and how to create them in `Cloudlets Policy Manager`.
     * 
     */
    private @Nullable Boolean isSharedPolicy;
    /**
     * @return A label to distinguish this API Prioritization policy from any others in the same property.
     * 
     */
    private @Nullable String label;
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    private @Nullable Boolean locked;
    /**
     * @return Specify the NetStorage domain that contains the alternate response.
     * 
     */
    private @Nullable GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationNetStorage netStorage;
    /**
     * @return Specify the full NetStorage path for the alternate response, including trailing file name.
     * 
     */
    private @Nullable String netStoragePath;
    /**
     * @return This option is for internal usage only.
     * 
     */
    private @Nullable String templateUuid;
    /**
     * @return Specifies the CP code as an object. You only need to provide the initial `id`, stripping any `cpc_` prefix to pass the integer to the rule tree. Additional CP code details may reflect back in subsequent read-only data.
     * 
     */
    private @Nullable GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationThrottledCpCode throttledCpCode;
    /**
     * @return Specifies the HTTP response code for requests that receive the alternate response.
     * 
     */
    private @Nullable Integer throttledStatusCode;
    /**
     * @return Specifies whether to apply an alternative CP code for requests served the alternate response.
     * 
     */
    private @Nullable Boolean useThrottledCpCode;
    /**
     * @return Allows you to assign a specific HTTP response code to a throttled request.
     * 
     */
    private @Nullable Boolean useThrottledStatusCode;
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    private @Nullable String uuid;

    private GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritization() {}
    /**
     * @return Specifies the alternate response&#39;s time to live in the cache, `5` minutes by default.
     * 
     */
    public Optional<Integer> alternateResponseCacheTtl() {
        return Optional.ofNullable(this.alternateResponseCacheTtl);
    }
    /**
     * @return Identifies the Cloudlet policy.
     * 
     */
    public Optional<GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationCloudletPolicy> cloudletPolicy() {
        return Optional.ofNullable(this.cloudletPolicy);
    }
    /**
     * @return Identifies the Cloudlet shared policy to use with this behavior. Use the `Cloudlets API` to list available shared policies.
     * 
     */
    public Optional<Integer> cloudletSharedPolicy() {
        return Optional.ofNullable(this.cloudletSharedPolicy);
    }
    /**
     * @return Activates the API Prioritization feature.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Whether you want to apply the Cloudlet shared policy to an unlimited number of properties within your account. Learn more about shared policies and how to create them in `Cloudlets Policy Manager`.
     * 
     */
    public Optional<Boolean> isSharedPolicy() {
        return Optional.ofNullable(this.isSharedPolicy);
    }
    /**
     * @return A label to distinguish this API Prioritization policy from any others in the same property.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Boolean> locked() {
        return Optional.ofNullable(this.locked);
    }
    /**
     * @return Specify the NetStorage domain that contains the alternate response.
     * 
     */
    public Optional<GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationNetStorage> netStorage() {
        return Optional.ofNullable(this.netStorage);
    }
    /**
     * @return Specify the full NetStorage path for the alternate response, including trailing file name.
     * 
     */
    public Optional<String> netStoragePath() {
        return Optional.ofNullable(this.netStoragePath);
    }
    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<String> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }
    /**
     * @return Specifies the CP code as an object. You only need to provide the initial `id`, stripping any `cpc_` prefix to pass the integer to the rule tree. Additional CP code details may reflect back in subsequent read-only data.
     * 
     */
    public Optional<GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationThrottledCpCode> throttledCpCode() {
        return Optional.ofNullable(this.throttledCpCode);
    }
    /**
     * @return Specifies the HTTP response code for requests that receive the alternate response.
     * 
     */
    public Optional<Integer> throttledStatusCode() {
        return Optional.ofNullable(this.throttledStatusCode);
    }
    /**
     * @return Specifies whether to apply an alternative CP code for requests served the alternate response.
     * 
     */
    public Optional<Boolean> useThrottledCpCode() {
        return Optional.ofNullable(this.useThrottledCpCode);
    }
    /**
     * @return Allows you to assign a specific HTTP response code to a throttled request.
     * 
     */
    public Optional<Boolean> useThrottledStatusCode() {
        return Optional.ofNullable(this.useThrottledStatusCode);
    }
    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritization defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer alternateResponseCacheTtl;
        private @Nullable GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationCloudletPolicy cloudletPolicy;
        private @Nullable Integer cloudletSharedPolicy;
        private @Nullable Boolean enabled;
        private @Nullable Boolean isSharedPolicy;
        private @Nullable String label;
        private @Nullable Boolean locked;
        private @Nullable GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationNetStorage netStorage;
        private @Nullable String netStoragePath;
        private @Nullable String templateUuid;
        private @Nullable GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationThrottledCpCode throttledCpCode;
        private @Nullable Integer throttledStatusCode;
        private @Nullable Boolean useThrottledCpCode;
        private @Nullable Boolean useThrottledStatusCode;
        private @Nullable String uuid;
        public Builder() {}
        public Builder(GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternateResponseCacheTtl = defaults.alternateResponseCacheTtl;
    	      this.cloudletPolicy = defaults.cloudletPolicy;
    	      this.cloudletSharedPolicy = defaults.cloudletSharedPolicy;
    	      this.enabled = defaults.enabled;
    	      this.isSharedPolicy = defaults.isSharedPolicy;
    	      this.label = defaults.label;
    	      this.locked = defaults.locked;
    	      this.netStorage = defaults.netStorage;
    	      this.netStoragePath = defaults.netStoragePath;
    	      this.templateUuid = defaults.templateUuid;
    	      this.throttledCpCode = defaults.throttledCpCode;
    	      this.throttledStatusCode = defaults.throttledStatusCode;
    	      this.useThrottledCpCode = defaults.useThrottledCpCode;
    	      this.useThrottledStatusCode = defaults.useThrottledStatusCode;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder alternateResponseCacheTtl(@Nullable Integer alternateResponseCacheTtl) {

            this.alternateResponseCacheTtl = alternateResponseCacheTtl;
            return this;
        }
        @CustomType.Setter
        public Builder cloudletPolicy(@Nullable GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationCloudletPolicy cloudletPolicy) {

            this.cloudletPolicy = cloudletPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder cloudletSharedPolicy(@Nullable Integer cloudletSharedPolicy) {

            this.cloudletSharedPolicy = cloudletSharedPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder isSharedPolicy(@Nullable Boolean isSharedPolicy) {

            this.isSharedPolicy = isSharedPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder label(@Nullable String label) {

            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder locked(@Nullable Boolean locked) {

            this.locked = locked;
            return this;
        }
        @CustomType.Setter
        public Builder netStorage(@Nullable GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationNetStorage netStorage) {

            this.netStorage = netStorage;
            return this;
        }
        @CustomType.Setter
        public Builder netStoragePath(@Nullable String netStoragePath) {

            this.netStoragePath = netStoragePath;
            return this;
        }
        @CustomType.Setter
        public Builder templateUuid(@Nullable String templateUuid) {

            this.templateUuid = templateUuid;
            return this;
        }
        @CustomType.Setter
        public Builder throttledCpCode(@Nullable GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritizationThrottledCpCode throttledCpCode) {

            this.throttledCpCode = throttledCpCode;
            return this;
        }
        @CustomType.Setter
        public Builder throttledStatusCode(@Nullable Integer throttledStatusCode) {

            this.throttledStatusCode = throttledStatusCode;
            return this;
        }
        @CustomType.Setter
        public Builder useThrottledCpCode(@Nullable Boolean useThrottledCpCode) {

            this.useThrottledCpCode = useThrottledCpCode;
            return this;
        }
        @CustomType.Setter
        public Builder useThrottledStatusCode(@Nullable Boolean useThrottledStatusCode) {

            this.useThrottledStatusCode = useThrottledStatusCode;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {

            this.uuid = uuid;
            return this;
        }
        public GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritization build() {
            final var _resultValue = new GetPropertyRulesBuilderRulesV20231030BehaviorApiPrioritization();
            _resultValue.alternateResponseCacheTtl = alternateResponseCacheTtl;
            _resultValue.cloudletPolicy = cloudletPolicy;
            _resultValue.cloudletSharedPolicy = cloudletSharedPolicy;
            _resultValue.enabled = enabled;
            _resultValue.isSharedPolicy = isSharedPolicy;
            _resultValue.label = label;
            _resultValue.locked = locked;
            _resultValue.netStorage = netStorage;
            _resultValue.netStoragePath = netStoragePath;
            _resultValue.templateUuid = templateUuid;
            _resultValue.throttledCpCode = throttledCpCode;
            _resultValue.throttledStatusCode = throttledStatusCode;
            _resultValue.useThrottledCpCode = useThrottledCpCode;
            _resultValue.useThrottledStatusCode = useThrottledStatusCode;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
