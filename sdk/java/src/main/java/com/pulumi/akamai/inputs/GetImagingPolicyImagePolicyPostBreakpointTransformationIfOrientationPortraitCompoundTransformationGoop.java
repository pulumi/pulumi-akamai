// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop Empty = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop();

    @Import(name="chaos")
    private @Nullable String chaos;

    public Optional<String> chaos() {
        return Optional.ofNullable(this.chaos);
    }

    @Import(name="chaosVar")
    private @Nullable String chaosVar;

    public Optional<String> chaosVar() {
        return Optional.ofNullable(this.chaosVar);
    }

    @Import(name="density")
    private @Nullable String density;

    public Optional<String> density() {
        return Optional.ofNullable(this.density);
    }

    @Import(name="densityVar")
    private @Nullable String densityVar;

    public Optional<String> densityVar() {
        return Optional.ofNullable(this.densityVar);
    }

    @Import(name="power")
    private @Nullable String power;

    public Optional<String> power() {
        return Optional.ofNullable(this.power);
    }

    @Import(name="powerVar")
    private @Nullable String powerVar;

    public Optional<String> powerVar() {
        return Optional.ofNullable(this.powerVar);
    }

    @Import(name="seed")
    private @Nullable String seed;

    public Optional<String> seed() {
        return Optional.ofNullable(this.seed);
    }

    @Import(name="seedVar")
    private @Nullable String seedVar;

    public Optional<String> seedVar() {
        return Optional.ofNullable(this.seedVar);
    }

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop() {}

    private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop $) {
        this.chaos = $.chaos;
        this.chaosVar = $.chaosVar;
        this.density = $.density;
        this.densityVar = $.densityVar;
        this.power = $.power;
        this.powerVar = $.powerVar;
        this.seed = $.seed;
        this.seedVar = $.seedVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop();
        }

        public Builder(GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop defaults) {
            $ = new GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop(Objects.requireNonNull(defaults));
        }

        public Builder chaos(@Nullable String chaos) {
            $.chaos = chaos;
            return this;
        }

        public Builder chaosVar(@Nullable String chaosVar) {
            $.chaosVar = chaosVar;
            return this;
        }

        public Builder density(@Nullable String density) {
            $.density = density;
            return this;
        }

        public Builder densityVar(@Nullable String densityVar) {
            $.densityVar = densityVar;
            return this;
        }

        public Builder power(@Nullable String power) {
            $.power = power;
            return this;
        }

        public Builder powerVar(@Nullable String powerVar) {
            $.powerVar = powerVar;
            return this;
        }

        public Builder seed(@Nullable String seed) {
            $.seed = seed;
            return this;
        }

        public Builder seedVar(@Nullable String seedVar) {
            $.seedVar = seedVar;
            return this;
        }

        public GetImagingPolicyImagePolicyPostBreakpointTransformationIfOrientationPortraitCompoundTransformationGoop build() {
            return $;
        }
    }

}
