// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs Empty = new GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs();

    /**
     * Synchronizes content between the primary and backup origins, byte for byte.
     * 
     */
    @Import(name="binaryEquivalentContent")
    private @Nullable Output<Boolean> binaryEquivalentContent;

    /**
     * @return Synchronizes content between the primary and backup origins, byte for byte.
     * 
     */
    public Optional<Output<Boolean>> binaryEquivalentContent() {
        return Optional.ofNullable(this.binaryEquivalentContent);
    }

    /**
     * Temporarily blocks an origin IP address that experienced a certain number of failures. When an IP address is blocked, the `configName` established for `originResponsivenessRecoveryConfigName` is applied.
     * 
     */
    @Import(name="enableIpAvoidance")
    private @Nullable Output<Boolean> enableIpAvoidance;

    /**
     * @return Temporarily blocks an origin IP address that experienced a certain number of failures. When an IP address is blocked, the `configName` established for `originResponsivenessRecoveryConfigName` is applied.
     * 
     */
    public Optional<Output<Boolean>> enableIpAvoidance() {
        return Optional.ofNullable(this.enableIpAvoidance);
    }

    /**
     * Activates and configures a recovery policy.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Activates and configures a recovery policy.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Defines the number of failures that need to occur to an origin address before it&#39;s blocked.
     * 
     */
    @Import(name="ipAvoidanceErrorThreshold")
    private @Nullable Output<Integer> ipAvoidanceErrorThreshold;

    /**
     * @return Defines the number of failures that need to occur to an origin address before it&#39;s blocked.
     * 
     */
    public Optional<Output<Integer>> ipAvoidanceErrorThreshold() {
        return Optional.ofNullable(this.ipAvoidanceErrorThreshold);
    }

    /**
     * Defines the number of seconds after which the IP address is removed from the blocklist.
     * 
     */
    @Import(name="ipAvoidanceRetryInterval")
    private @Nullable Output<Integer> ipAvoidanceRetryInterval;

    /**
     * @return Defines the number of seconds after which the IP address is removed from the blocklist.
     * 
     */
    public Optional<Output<Integer>> ipAvoidanceRetryInterval() {
        return Optional.ofNullable(this.ipAvoidanceRetryInterval);
    }

    /**
     * Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Enables continuous monitoring of connectivity to the origin. If necessary, applies retry or recovery actions.
     * 
     */
    @Import(name="monitorOriginResponsiveness")
    private @Nullable Output<Boolean> monitorOriginResponsiveness;

    /**
     * @return Enables continuous monitoring of connectivity to the origin. If necessary, applies retry or recovery actions.
     * 
     */
    public Optional<Output<Boolean>> monitorOriginResponsiveness() {
        return Optional.ofNullable(this.monitorOriginResponsiveness);
    }

    /**
     * Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here.
     * 
     */
    @Import(name="monitorResponseCodes1s")
    private @Nullable Output<List<String>> monitorResponseCodes1s;

    /**
     * @return Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here.
     * 
     */
    public Optional<Output<List<String>>> monitorResponseCodes1s() {
        return Optional.ofNullable(this.monitorResponseCodes1s);
    }

    /**
     * Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here.
     * 
     */
    @Import(name="monitorResponseCodes2s")
    private @Nullable Output<List<String>> monitorResponseCodes2s;

    /**
     * @return Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here.
     * 
     */
    public Optional<Output<List<String>>> monitorResponseCodes2s() {
        return Optional.ofNullable(this.monitorResponseCodes2s);
    }

    /**
     * Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here..
     * 
     */
    @Import(name="monitorResponseCodes3s")
    private @Nullable Output<List<String>> monitorResponseCodes3s;

    /**
     * @return Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here..
     * 
     */
    public Optional<Output<List<String>>> monitorResponseCodes3s() {
        return Optional.ofNullable(this.monitorResponseCodes3s);
    }

    /**
     * Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
     * 
     */
    @Import(name="monitorStatusCodes1")
    private @Nullable Output<Boolean> monitorStatusCodes1;

    /**
     * @return Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
     * 
     */
    public Optional<Output<Boolean>> monitorStatusCodes1() {
        return Optional.ofNullable(this.monitorStatusCodes1);
    }

    /**
     * Enables the recovery action for the response codes you define.
     * 
     */
    @Import(name="monitorStatusCodes1EnableRecovery")
    private @Nullable Output<Boolean> monitorStatusCodes1EnableRecovery;

    /**
     * @return Enables the recovery action for the response codes you define.
     * 
     */
    public Optional<Output<Boolean>> monitorStatusCodes1EnableRecovery() {
        return Optional.ofNullable(this.monitorStatusCodes1EnableRecovery);
    }

    /**
     * When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
     * 
     */
    @Import(name="monitorStatusCodes1EnableRetry")
    private @Nullable Output<Boolean> monitorStatusCodes1EnableRetry;

    /**
     * @return When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
     * 
     */
    public Optional<Output<Boolean>> monitorStatusCodes1EnableRetry() {
        return Optional.ofNullable(this.monitorStatusCodes1EnableRetry);
    }

    /**
     * Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
     * 
     */
    @Import(name="monitorStatusCodes1RecoveryConfigName")
    private @Nullable Output<String> monitorStatusCodes1RecoveryConfigName;

    /**
     * @return Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
     * 
     */
    public Optional<Output<String>> monitorStatusCodes1RecoveryConfigName() {
        return Optional.ofNullable(this.monitorStatusCodes1RecoveryConfigName);
    }

    /**
     * Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
     * 
     */
    @Import(name="monitorStatusCodes2")
    private @Nullable Output<Boolean> monitorStatusCodes2;

    /**
     * @return Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
     * 
     */
    public Optional<Output<Boolean>> monitorStatusCodes2() {
        return Optional.ofNullable(this.monitorStatusCodes2);
    }

    /**
     * Enables the recovery action for the response codes you define.
     * 
     */
    @Import(name="monitorStatusCodes2EnableRecovery")
    private @Nullable Output<Boolean> monitorStatusCodes2EnableRecovery;

    /**
     * @return Enables the recovery action for the response codes you define.
     * 
     */
    public Optional<Output<Boolean>> monitorStatusCodes2EnableRecovery() {
        return Optional.ofNullable(this.monitorStatusCodes2EnableRecovery);
    }

    /**
     * When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
     * 
     */
    @Import(name="monitorStatusCodes2EnableRetry")
    private @Nullable Output<Boolean> monitorStatusCodes2EnableRetry;

    /**
     * @return When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
     * 
     */
    public Optional<Output<Boolean>> monitorStatusCodes2EnableRetry() {
        return Optional.ofNullable(this.monitorStatusCodes2EnableRetry);
    }

    /**
     * Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
     * 
     */
    @Import(name="monitorStatusCodes2RecoveryConfigName")
    private @Nullable Output<String> monitorStatusCodes2RecoveryConfigName;

    /**
     * @return Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
     * 
     */
    public Optional<Output<String>> monitorStatusCodes2RecoveryConfigName() {
        return Optional.ofNullable(this.monitorStatusCodes2RecoveryConfigName);
    }

    /**
     * Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
     * 
     */
    @Import(name="monitorStatusCodes3")
    private @Nullable Output<Boolean> monitorStatusCodes3;

    /**
     * @return Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
     * 
     */
    public Optional<Output<Boolean>> monitorStatusCodes3() {
        return Optional.ofNullable(this.monitorStatusCodes3);
    }

    /**
     * Enables the recovery action for the response codes you define.
     * 
     */
    @Import(name="monitorStatusCodes3EnableRecovery")
    private @Nullable Output<Boolean> monitorStatusCodes3EnableRecovery;

    /**
     * @return Enables the recovery action for the response codes you define.
     * 
     */
    public Optional<Output<Boolean>> monitorStatusCodes3EnableRecovery() {
        return Optional.ofNullable(this.monitorStatusCodes3EnableRecovery);
    }

    /**
     * When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
     * 
     */
    @Import(name="monitorStatusCodes3EnableRetry")
    private @Nullable Output<Boolean> monitorStatusCodes3EnableRetry;

    /**
     * @return When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
     * 
     */
    public Optional<Output<Boolean>> monitorStatusCodes3EnableRetry() {
        return Optional.ofNullable(this.monitorStatusCodes3EnableRetry);
    }

    /**
     * Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
     * 
     */
    @Import(name="monitorStatusCodes3RecoveryConfigName")
    private @Nullable Output<String> monitorStatusCodes3RecoveryConfigName;

    /**
     * @return Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
     * 
     */
    public Optional<Output<String>> monitorStatusCodes3RecoveryConfigName() {
        return Optional.ofNullable(this.monitorStatusCodes3RecoveryConfigName);
    }

    /**
     * Specify a custom timeout, from 1 to 10 seconds.
     * 
     */
    @Import(name="originResponsivenessCustomTimeout")
    private @Nullable Output<Integer> originResponsivenessCustomTimeout;

    /**
     * @return Specify a custom timeout, from 1 to 10 seconds.
     * 
     */
    public Optional<Output<Integer>> originResponsivenessCustomTimeout() {
        return Optional.ofNullable(this.originResponsivenessCustomTimeout);
    }

    /**
     * Enables a recovery action for a specific failure condition.
     * 
     */
    @Import(name="originResponsivenessEnableRecovery")
    private @Nullable Output<Boolean> originResponsivenessEnableRecovery;

    /**
     * @return Enables a recovery action for a specific failure condition.
     * 
     */
    public Optional<Output<Boolean>> originResponsivenessEnableRecovery() {
        return Optional.ofNullable(this.originResponsivenessEnableRecovery);
    }

    /**
     * If a specific failure condition applies, attempts a retry on the same origin before executing the recovery method.
     * 
     */
    @Import(name="originResponsivenessEnableRetry")
    private @Nullable Output<Boolean> originResponsivenessEnableRetry;

    /**
     * @return If a specific failure condition applies, attempts a retry on the same origin before executing the recovery method.
     * 
     */
    public Optional<Output<Boolean>> originResponsivenessEnableRetry() {
        return Optional.ofNullable(this.originResponsivenessEnableRetry);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="originResponsivenessMonitoring")
    private @Nullable Output<String> originResponsivenessMonitoring;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> originResponsivenessMonitoring() {
        return Optional.ofNullable(this.originResponsivenessMonitoring);
    }

    /**
     * Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
     * 
     */
    @Import(name="originResponsivenessRecoveryConfigName")
    private @Nullable Output<String> originResponsivenessRecoveryConfigName;

    /**
     * @return Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
     * 
     */
    public Optional<Output<String>> originResponsivenessRecoveryConfigName() {
        return Optional.ofNullable(this.originResponsivenessRecoveryConfigName);
    }

    /**
     * The timeout threshold that triggers a retry or recovery action.
     * 
     */
    @Import(name="originResponsivenessTimeout")
    private @Nullable Output<String> originResponsivenessTimeout;

    /**
     * @return The timeout threshold that triggers a retry or recovery action.
     * 
     */
    public Optional<Output<String>> originResponsivenessTimeout() {
        return Optional.ofNullable(this.originResponsivenessTimeout);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="statusCodeMonitoring1")
    private @Nullable Output<String> statusCodeMonitoring1;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> statusCodeMonitoring1() {
        return Optional.ofNullable(this.statusCodeMonitoring1);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="statusCodeMonitoring2")
    private @Nullable Output<String> statusCodeMonitoring2;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> statusCodeMonitoring2() {
        return Optional.ofNullable(this.statusCodeMonitoring2);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="statusCodeMonitoring3")
    private @Nullable Output<String> statusCodeMonitoring3;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> statusCodeMonitoring3() {
        return Optional.ofNullable(this.statusCodeMonitoring3);
    }

    /**
     * This option is for internal usage only.
     * 
     */
    @Import(name="templateUuid")
    private @Nullable Output<String> templateUuid;

    /**
     * @return This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> templateUuid() {
        return Optional.ofNullable(this.templateUuid);
    }

    /**
     * This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    @Import(name="tuningParameters")
    private @Nullable Output<String> tuningParameters;

    /**
     * @return This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
     * 
     */
    public Optional<Output<String>> tuningParameters() {
        return Optional.ofNullable(this.tuningParameters);
    }

    /**
     * A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs() {}

    private GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs(GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs $) {
        this.binaryEquivalentContent = $.binaryEquivalentContent;
        this.enableIpAvoidance = $.enableIpAvoidance;
        this.enabled = $.enabled;
        this.ipAvoidanceErrorThreshold = $.ipAvoidanceErrorThreshold;
        this.ipAvoidanceRetryInterval = $.ipAvoidanceRetryInterval;
        this.locked = $.locked;
        this.monitorOriginResponsiveness = $.monitorOriginResponsiveness;
        this.monitorResponseCodes1s = $.monitorResponseCodes1s;
        this.monitorResponseCodes2s = $.monitorResponseCodes2s;
        this.monitorResponseCodes3s = $.monitorResponseCodes3s;
        this.monitorStatusCodes1 = $.monitorStatusCodes1;
        this.monitorStatusCodes1EnableRecovery = $.monitorStatusCodes1EnableRecovery;
        this.monitorStatusCodes1EnableRetry = $.monitorStatusCodes1EnableRetry;
        this.monitorStatusCodes1RecoveryConfigName = $.monitorStatusCodes1RecoveryConfigName;
        this.monitorStatusCodes2 = $.monitorStatusCodes2;
        this.monitorStatusCodes2EnableRecovery = $.monitorStatusCodes2EnableRecovery;
        this.monitorStatusCodes2EnableRetry = $.monitorStatusCodes2EnableRetry;
        this.monitorStatusCodes2RecoveryConfigName = $.monitorStatusCodes2RecoveryConfigName;
        this.monitorStatusCodes3 = $.monitorStatusCodes3;
        this.monitorStatusCodes3EnableRecovery = $.monitorStatusCodes3EnableRecovery;
        this.monitorStatusCodes3EnableRetry = $.monitorStatusCodes3EnableRetry;
        this.monitorStatusCodes3RecoveryConfigName = $.monitorStatusCodes3RecoveryConfigName;
        this.originResponsivenessCustomTimeout = $.originResponsivenessCustomTimeout;
        this.originResponsivenessEnableRecovery = $.originResponsivenessEnableRecovery;
        this.originResponsivenessEnableRetry = $.originResponsivenessEnableRetry;
        this.originResponsivenessMonitoring = $.originResponsivenessMonitoring;
        this.originResponsivenessRecoveryConfigName = $.originResponsivenessRecoveryConfigName;
        this.originResponsivenessTimeout = $.originResponsivenessTimeout;
        this.statusCodeMonitoring1 = $.statusCodeMonitoring1;
        this.statusCodeMonitoring2 = $.statusCodeMonitoring2;
        this.statusCodeMonitoring3 = $.statusCodeMonitoring3;
        this.templateUuid = $.templateUuid;
        this.tuningParameters = $.tuningParameters;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs $;

        public Builder() {
            $ = new GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs();
        }

        public Builder(GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs defaults) {
            $ = new GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param binaryEquivalentContent Synchronizes content between the primary and backup origins, byte for byte.
         * 
         * @return builder
         * 
         */
        public Builder binaryEquivalentContent(@Nullable Output<Boolean> binaryEquivalentContent) {
            $.binaryEquivalentContent = binaryEquivalentContent;
            return this;
        }

        /**
         * @param binaryEquivalentContent Synchronizes content between the primary and backup origins, byte for byte.
         * 
         * @return builder
         * 
         */
        public Builder binaryEquivalentContent(Boolean binaryEquivalentContent) {
            return binaryEquivalentContent(Output.of(binaryEquivalentContent));
        }

        /**
         * @param enableIpAvoidance Temporarily blocks an origin IP address that experienced a certain number of failures. When an IP address is blocked, the `configName` established for `originResponsivenessRecoveryConfigName` is applied.
         * 
         * @return builder
         * 
         */
        public Builder enableIpAvoidance(@Nullable Output<Boolean> enableIpAvoidance) {
            $.enableIpAvoidance = enableIpAvoidance;
            return this;
        }

        /**
         * @param enableIpAvoidance Temporarily blocks an origin IP address that experienced a certain number of failures. When an IP address is blocked, the `configName` established for `originResponsivenessRecoveryConfigName` is applied.
         * 
         * @return builder
         * 
         */
        public Builder enableIpAvoidance(Boolean enableIpAvoidance) {
            return enableIpAvoidance(Output.of(enableIpAvoidance));
        }

        /**
         * @param enabled Activates and configures a recovery policy.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Activates and configures a recovery policy.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param ipAvoidanceErrorThreshold Defines the number of failures that need to occur to an origin address before it&#39;s blocked.
         * 
         * @return builder
         * 
         */
        public Builder ipAvoidanceErrorThreshold(@Nullable Output<Integer> ipAvoidanceErrorThreshold) {
            $.ipAvoidanceErrorThreshold = ipAvoidanceErrorThreshold;
            return this;
        }

        /**
         * @param ipAvoidanceErrorThreshold Defines the number of failures that need to occur to an origin address before it&#39;s blocked.
         * 
         * @return builder
         * 
         */
        public Builder ipAvoidanceErrorThreshold(Integer ipAvoidanceErrorThreshold) {
            return ipAvoidanceErrorThreshold(Output.of(ipAvoidanceErrorThreshold));
        }

        /**
         * @param ipAvoidanceRetryInterval Defines the number of seconds after which the IP address is removed from the blocklist.
         * 
         * @return builder
         * 
         */
        public Builder ipAvoidanceRetryInterval(@Nullable Output<Integer> ipAvoidanceRetryInterval) {
            $.ipAvoidanceRetryInterval = ipAvoidanceRetryInterval;
            return this;
        }

        /**
         * @param ipAvoidanceRetryInterval Defines the number of seconds after which the IP address is removed from the blocklist.
         * 
         * @return builder
         * 
         */
        public Builder ipAvoidanceRetryInterval(Integer ipAvoidanceRetryInterval) {
            return ipAvoidanceRetryInterval(Output.of(ipAvoidanceRetryInterval));
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Indicates that your Akamai representative has locked this behavior or criteria so that you can&#39;t modify it. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param monitorOriginResponsiveness Enables continuous monitoring of connectivity to the origin. If necessary, applies retry or recovery actions.
         * 
         * @return builder
         * 
         */
        public Builder monitorOriginResponsiveness(@Nullable Output<Boolean> monitorOriginResponsiveness) {
            $.monitorOriginResponsiveness = monitorOriginResponsiveness;
            return this;
        }

        /**
         * @param monitorOriginResponsiveness Enables continuous monitoring of connectivity to the origin. If necessary, applies retry or recovery actions.
         * 
         * @return builder
         * 
         */
        public Builder monitorOriginResponsiveness(Boolean monitorOriginResponsiveness) {
            return monitorOriginResponsiveness(Output.of(monitorOriginResponsiveness));
        }

        /**
         * @param monitorResponseCodes1s Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here.
         * 
         * @return builder
         * 
         */
        public Builder monitorResponseCodes1s(@Nullable Output<List<String>> monitorResponseCodes1s) {
            $.monitorResponseCodes1s = monitorResponseCodes1s;
            return this;
        }

        /**
         * @param monitorResponseCodes1s Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here.
         * 
         * @return builder
         * 
         */
        public Builder monitorResponseCodes1s(List<String> monitorResponseCodes1s) {
            return monitorResponseCodes1s(Output.of(monitorResponseCodes1s));
        }

        /**
         * @param monitorResponseCodes1s Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here.
         * 
         * @return builder
         * 
         */
        public Builder monitorResponseCodes1s(String... monitorResponseCodes1s) {
            return monitorResponseCodes1s(List.of(monitorResponseCodes1s));
        }

        /**
         * @param monitorResponseCodes2s Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here.
         * 
         * @return builder
         * 
         */
        public Builder monitorResponseCodes2s(@Nullable Output<List<String>> monitorResponseCodes2s) {
            $.monitorResponseCodes2s = monitorResponseCodes2s;
            return this;
        }

        /**
         * @param monitorResponseCodes2s Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here.
         * 
         * @return builder
         * 
         */
        public Builder monitorResponseCodes2s(List<String> monitorResponseCodes2s) {
            return monitorResponseCodes2s(Output.of(monitorResponseCodes2s));
        }

        /**
         * @param monitorResponseCodes2s Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here.
         * 
         * @return builder
         * 
         */
        public Builder monitorResponseCodes2s(String... monitorResponseCodes2s) {
            return monitorResponseCodes2s(List.of(monitorResponseCodes2s));
        }

        /**
         * @param monitorResponseCodes3s Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here..
         * 
         * @return builder
         * 
         */
        public Builder monitorResponseCodes3s(@Nullable Output<List<String>> monitorResponseCodes3s) {
            $.monitorResponseCodes3s = monitorResponseCodes3s;
            return this;
        }

        /**
         * @param monitorResponseCodes3s Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here..
         * 
         * @return builder
         * 
         */
        public Builder monitorResponseCodes3s(List<String> monitorResponseCodes3s) {
            return monitorResponseCodes3s(Output.of(monitorResponseCodes3s));
        }

        /**
         * @param monitorResponseCodes3s Defines the origin response codes that trigger a subsequent retry or recovery action. Specify a single code entry (`501`) or a range (`501:504`). If you configure other `monitorStatusCodes*` and `monitorResponseCodes*` options, you can&#39;t use the same codes here..
         * 
         * @return builder
         * 
         */
        public Builder monitorResponseCodes3s(String... monitorResponseCodes3s) {
            return monitorResponseCodes3s(List.of(monitorResponseCodes3s));
        }

        /**
         * @param monitorStatusCodes1 Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes1(@Nullable Output<Boolean> monitorStatusCodes1) {
            $.monitorStatusCodes1 = monitorStatusCodes1;
            return this;
        }

        /**
         * @param monitorStatusCodes1 Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes1(Boolean monitorStatusCodes1) {
            return monitorStatusCodes1(Output.of(monitorStatusCodes1));
        }

        /**
         * @param monitorStatusCodes1EnableRecovery Enables the recovery action for the response codes you define.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes1EnableRecovery(@Nullable Output<Boolean> monitorStatusCodes1EnableRecovery) {
            $.monitorStatusCodes1EnableRecovery = monitorStatusCodes1EnableRecovery;
            return this;
        }

        /**
         * @param monitorStatusCodes1EnableRecovery Enables the recovery action for the response codes you define.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes1EnableRecovery(Boolean monitorStatusCodes1EnableRecovery) {
            return monitorStatusCodes1EnableRecovery(Output.of(monitorStatusCodes1EnableRecovery));
        }

        /**
         * @param monitorStatusCodes1EnableRetry When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes1EnableRetry(@Nullable Output<Boolean> monitorStatusCodes1EnableRetry) {
            $.monitorStatusCodes1EnableRetry = monitorStatusCodes1EnableRetry;
            return this;
        }

        /**
         * @param monitorStatusCodes1EnableRetry When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes1EnableRetry(Boolean monitorStatusCodes1EnableRetry) {
            return monitorStatusCodes1EnableRetry(Output.of(monitorStatusCodes1EnableRetry));
        }

        /**
         * @param monitorStatusCodes1RecoveryConfigName Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes1RecoveryConfigName(@Nullable Output<String> monitorStatusCodes1RecoveryConfigName) {
            $.monitorStatusCodes1RecoveryConfigName = monitorStatusCodes1RecoveryConfigName;
            return this;
        }

        /**
         * @param monitorStatusCodes1RecoveryConfigName Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes1RecoveryConfigName(String monitorStatusCodes1RecoveryConfigName) {
            return monitorStatusCodes1RecoveryConfigName(Output.of(monitorStatusCodes1RecoveryConfigName));
        }

        /**
         * @param monitorStatusCodes2 Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes2(@Nullable Output<Boolean> monitorStatusCodes2) {
            $.monitorStatusCodes2 = monitorStatusCodes2;
            return this;
        }

        /**
         * @param monitorStatusCodes2 Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes2(Boolean monitorStatusCodes2) {
            return monitorStatusCodes2(Output.of(monitorStatusCodes2));
        }

        /**
         * @param monitorStatusCodes2EnableRecovery Enables the recovery action for the response codes you define.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes2EnableRecovery(@Nullable Output<Boolean> monitorStatusCodes2EnableRecovery) {
            $.monitorStatusCodes2EnableRecovery = monitorStatusCodes2EnableRecovery;
            return this;
        }

        /**
         * @param monitorStatusCodes2EnableRecovery Enables the recovery action for the response codes you define.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes2EnableRecovery(Boolean monitorStatusCodes2EnableRecovery) {
            return monitorStatusCodes2EnableRecovery(Output.of(monitorStatusCodes2EnableRecovery));
        }

        /**
         * @param monitorStatusCodes2EnableRetry When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes2EnableRetry(@Nullable Output<Boolean> monitorStatusCodes2EnableRetry) {
            $.monitorStatusCodes2EnableRetry = monitorStatusCodes2EnableRetry;
            return this;
        }

        /**
         * @param monitorStatusCodes2EnableRetry When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes2EnableRetry(Boolean monitorStatusCodes2EnableRetry) {
            return monitorStatusCodes2EnableRetry(Output.of(monitorStatusCodes2EnableRetry));
        }

        /**
         * @param monitorStatusCodes2RecoveryConfigName Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes2RecoveryConfigName(@Nullable Output<String> monitorStatusCodes2RecoveryConfigName) {
            $.monitorStatusCodes2RecoveryConfigName = monitorStatusCodes2RecoveryConfigName;
            return this;
        }

        /**
         * @param monitorStatusCodes2RecoveryConfigName Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes2RecoveryConfigName(String monitorStatusCodes2RecoveryConfigName) {
            return monitorStatusCodes2RecoveryConfigName(Output.of(monitorStatusCodes2RecoveryConfigName));
        }

        /**
         * @param monitorStatusCodes3 Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes3(@Nullable Output<Boolean> monitorStatusCodes3) {
            $.monitorStatusCodes3 = monitorStatusCodes3;
            return this;
        }

        /**
         * @param monitorStatusCodes3 Enables continuous monitoring for the specific origin status codes that trigger retry or recovery actions.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes3(Boolean monitorStatusCodes3) {
            return monitorStatusCodes3(Output.of(monitorStatusCodes3));
        }

        /**
         * @param monitorStatusCodes3EnableRecovery Enables the recovery action for the response codes you define.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes3EnableRecovery(@Nullable Output<Boolean> monitorStatusCodes3EnableRecovery) {
            $.monitorStatusCodes3EnableRecovery = monitorStatusCodes3EnableRecovery;
            return this;
        }

        /**
         * @param monitorStatusCodes3EnableRecovery Enables the recovery action for the response codes you define.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes3EnableRecovery(Boolean monitorStatusCodes3EnableRecovery) {
            return monitorStatusCodes3EnableRecovery(Output.of(monitorStatusCodes3EnableRecovery));
        }

        /**
         * @param monitorStatusCodes3EnableRetry When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes3EnableRetry(@Nullable Output<Boolean> monitorStatusCodes3EnableRetry) {
            $.monitorStatusCodes3EnableRetry = monitorStatusCodes3EnableRetry;
            return this;
        }

        /**
         * @param monitorStatusCodes3EnableRetry When the defined response codes apply, attempts a retry on the same origin before executing the recovery method.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes3EnableRetry(Boolean monitorStatusCodes3EnableRetry) {
            return monitorStatusCodes3EnableRetry(Output.of(monitorStatusCodes3EnableRetry));
        }

        /**
         * @param monitorStatusCodes3RecoveryConfigName Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes3RecoveryConfigName(@Nullable Output<String> monitorStatusCodes3RecoveryConfigName) {
            $.monitorStatusCodes3RecoveryConfigName = monitorStatusCodes3RecoveryConfigName;
            return this;
        }

        /**
         * @param monitorStatusCodes3RecoveryConfigName Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
         * 
         * @return builder
         * 
         */
        public Builder monitorStatusCodes3RecoveryConfigName(String monitorStatusCodes3RecoveryConfigName) {
            return monitorStatusCodes3RecoveryConfigName(Output.of(monitorStatusCodes3RecoveryConfigName));
        }

        /**
         * @param originResponsivenessCustomTimeout Specify a custom timeout, from 1 to 10 seconds.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessCustomTimeout(@Nullable Output<Integer> originResponsivenessCustomTimeout) {
            $.originResponsivenessCustomTimeout = originResponsivenessCustomTimeout;
            return this;
        }

        /**
         * @param originResponsivenessCustomTimeout Specify a custom timeout, from 1 to 10 seconds.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessCustomTimeout(Integer originResponsivenessCustomTimeout) {
            return originResponsivenessCustomTimeout(Output.of(originResponsivenessCustomTimeout));
        }

        /**
         * @param originResponsivenessEnableRecovery Enables a recovery action for a specific failure condition.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessEnableRecovery(@Nullable Output<Boolean> originResponsivenessEnableRecovery) {
            $.originResponsivenessEnableRecovery = originResponsivenessEnableRecovery;
            return this;
        }

        /**
         * @param originResponsivenessEnableRecovery Enables a recovery action for a specific failure condition.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessEnableRecovery(Boolean originResponsivenessEnableRecovery) {
            return originResponsivenessEnableRecovery(Output.of(originResponsivenessEnableRecovery));
        }

        /**
         * @param originResponsivenessEnableRetry If a specific failure condition applies, attempts a retry on the same origin before executing the recovery method.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessEnableRetry(@Nullable Output<Boolean> originResponsivenessEnableRetry) {
            $.originResponsivenessEnableRetry = originResponsivenessEnableRetry;
            return this;
        }

        /**
         * @param originResponsivenessEnableRetry If a specific failure condition applies, attempts a retry on the same origin before executing the recovery method.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessEnableRetry(Boolean originResponsivenessEnableRetry) {
            return originResponsivenessEnableRetry(Output.of(originResponsivenessEnableRetry));
        }

        /**
         * @param originResponsivenessMonitoring This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessMonitoring(@Nullable Output<String> originResponsivenessMonitoring) {
            $.originResponsivenessMonitoring = originResponsivenessMonitoring;
            return this;
        }

        /**
         * @param originResponsivenessMonitoring This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessMonitoring(String originResponsivenessMonitoring) {
            return originResponsivenessMonitoring(Output.of(originResponsivenessMonitoring));
        }

        /**
         * @param originResponsivenessRecoveryConfigName Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessRecoveryConfigName(@Nullable Output<String> originResponsivenessRecoveryConfigName) {
            $.originResponsivenessRecoveryConfigName = originResponsivenessRecoveryConfigName;
            return this;
        }

        /**
         * @param originResponsivenessRecoveryConfigName Specifies a recovery configuration using the `configName` you defined in the `recoveryConfig` match criteria. Specify 3 to 20 alphanumeric characters or dashes. Ensure that you use the `recoveryConfig` match criteria to apply this option.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessRecoveryConfigName(String originResponsivenessRecoveryConfigName) {
            return originResponsivenessRecoveryConfigName(Output.of(originResponsivenessRecoveryConfigName));
        }

        /**
         * @param originResponsivenessTimeout The timeout threshold that triggers a retry or recovery action.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessTimeout(@Nullable Output<String> originResponsivenessTimeout) {
            $.originResponsivenessTimeout = originResponsivenessTimeout;
            return this;
        }

        /**
         * @param originResponsivenessTimeout The timeout threshold that triggers a retry or recovery action.
         * 
         * @return builder
         * 
         */
        public Builder originResponsivenessTimeout(String originResponsivenessTimeout) {
            return originResponsivenessTimeout(Output.of(originResponsivenessTimeout));
        }

        /**
         * @param statusCodeMonitoring1 This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder statusCodeMonitoring1(@Nullable Output<String> statusCodeMonitoring1) {
            $.statusCodeMonitoring1 = statusCodeMonitoring1;
            return this;
        }

        /**
         * @param statusCodeMonitoring1 This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder statusCodeMonitoring1(String statusCodeMonitoring1) {
            return statusCodeMonitoring1(Output.of(statusCodeMonitoring1));
        }

        /**
         * @param statusCodeMonitoring2 This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder statusCodeMonitoring2(@Nullable Output<String> statusCodeMonitoring2) {
            $.statusCodeMonitoring2 = statusCodeMonitoring2;
            return this;
        }

        /**
         * @param statusCodeMonitoring2 This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder statusCodeMonitoring2(String statusCodeMonitoring2) {
            return statusCodeMonitoring2(Output.of(statusCodeMonitoring2));
        }

        /**
         * @param statusCodeMonitoring3 This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder statusCodeMonitoring3(@Nullable Output<String> statusCodeMonitoring3) {
            $.statusCodeMonitoring3 = statusCodeMonitoring3;
            return this;
        }

        /**
         * @param statusCodeMonitoring3 This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder statusCodeMonitoring3(String statusCodeMonitoring3) {
            return statusCodeMonitoring3(Output.of(statusCodeMonitoring3));
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(@Nullable Output<String> templateUuid) {
            $.templateUuid = templateUuid;
            return this;
        }

        /**
         * @param templateUuid This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder templateUuid(String templateUuid) {
            return templateUuid(Output.of(templateUuid));
        }

        /**
         * @param tuningParameters This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder tuningParameters(@Nullable Output<String> tuningParameters) {
            $.tuningParameters = tuningParameters;
            return this;
        }

        /**
         * @param tuningParameters This field is only intended for export compatibility purposes, and modifying it will not impact your use of the behavior.
         * 
         * @return builder
         * 
         */
        public Builder tuningParameters(String tuningParameters) {
            return tuningParameters(Output.of(tuningParameters));
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid A uuid member indicates that at least one of its component behaviors or criteria is advanced and read-only. You need to preserve this uuid as well when modifying the rule tree. This option is for internal usage only.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetPropertyRulesBuilderRulesV20250218BehaviorOriginFailureRecoveryPolicyArgs build() {
            return $;
        }
    }

}
