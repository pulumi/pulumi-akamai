// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PropertyRuleWarningArgs extends com.pulumi.resources.ResourceArgs {

    public static final PropertyRuleWarningArgs Empty = new PropertyRuleWarningArgs();

    @Import(name="behaviorName")
    private @Nullable Output<String> behaviorName;

    public Optional<Output<String>> behaviorName() {
        return Optional.ofNullable(this.behaviorName);
    }

    @Import(name="detail")
    private @Nullable Output<String> detail;

    public Optional<Output<String>> detail() {
        return Optional.ofNullable(this.detail);
    }

    @Import(name="errorLocation")
    private @Nullable Output<String> errorLocation;

    public Optional<Output<String>> errorLocation() {
        return Optional.ofNullable(this.errorLocation);
    }

    @Import(name="instance")
    private @Nullable Output<String> instance;

    public Optional<Output<String>> instance() {
        return Optional.ofNullable(this.instance);
    }

    @Import(name="statusCode")
    private @Nullable Output<Integer> statusCode;

    public Optional<Output<Integer>> statusCode() {
        return Optional.ofNullable(this.statusCode);
    }

    @Import(name="title")
    private @Nullable Output<String> title;

    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private PropertyRuleWarningArgs() {}

    private PropertyRuleWarningArgs(PropertyRuleWarningArgs $) {
        this.behaviorName = $.behaviorName;
        this.detail = $.detail;
        this.errorLocation = $.errorLocation;
        this.instance = $.instance;
        this.statusCode = $.statusCode;
        this.title = $.title;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PropertyRuleWarningArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PropertyRuleWarningArgs $;

        public Builder() {
            $ = new PropertyRuleWarningArgs();
        }

        public Builder(PropertyRuleWarningArgs defaults) {
            $ = new PropertyRuleWarningArgs(Objects.requireNonNull(defaults));
        }

        public Builder behaviorName(@Nullable Output<String> behaviorName) {
            $.behaviorName = behaviorName;
            return this;
        }

        public Builder behaviorName(String behaviorName) {
            return behaviorName(Output.of(behaviorName));
        }

        public Builder detail(@Nullable Output<String> detail) {
            $.detail = detail;
            return this;
        }

        public Builder detail(String detail) {
            return detail(Output.of(detail));
        }

        public Builder errorLocation(@Nullable Output<String> errorLocation) {
            $.errorLocation = errorLocation;
            return this;
        }

        public Builder errorLocation(String errorLocation) {
            return errorLocation(Output.of(errorLocation));
        }

        public Builder instance(@Nullable Output<String> instance) {
            $.instance = instance;
            return this;
        }

        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        public Builder statusCode(@Nullable Output<Integer> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public Builder statusCode(Integer statusCode) {
            return statusCode(Output.of(statusCode));
        }

        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        public Builder title(String title) {
            return title(Output.of(title));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PropertyRuleWarningArgs build() {
            return $;
        }
    }

}
