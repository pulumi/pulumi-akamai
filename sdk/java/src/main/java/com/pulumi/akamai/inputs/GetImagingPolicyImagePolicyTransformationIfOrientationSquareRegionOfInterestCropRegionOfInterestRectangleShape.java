// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShapeAnchor;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape();

    @Import(name="anchor", required=true)
    private GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShapeAnchor anchor;

    public GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShapeAnchor anchor() {
        return this.anchor;
    }

    @Import(name="height")
    private @Nullable String height;

    public Optional<String> height() {
        return Optional.ofNullable(this.height);
    }

    @Import(name="heightVar")
    private @Nullable String heightVar;

    public Optional<String> heightVar() {
        return Optional.ofNullable(this.heightVar);
    }

    @Import(name="width")
    private @Nullable String width;

    public Optional<String> width() {
        return Optional.ofNullable(this.width);
    }

    @Import(name="widthVar")
    private @Nullable String widthVar;

    public Optional<String> widthVar() {
        return Optional.ofNullable(this.widthVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape(GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape $) {
        this.anchor = $.anchor;
        this.height = $.height;
        this.heightVar = $.heightVar;
        this.width = $.width;
        this.widthVar = $.widthVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape(Objects.requireNonNull(defaults));
        }

        public Builder anchor(GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShapeAnchor anchor) {
            $.anchor = anchor;
            return this;
        }

        public Builder height(@Nullable String height) {
            $.height = height;
            return this;
        }

        public Builder heightVar(@Nullable String heightVar) {
            $.heightVar = heightVar;
            return this;
        }

        public Builder width(@Nullable String width) {
            $.width = width;
            return this;
        }

        public Builder widthVar(@Nullable String widthVar) {
            $.widthVar = widthVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationSquareRegionOfInterestCropRegionOfInterestRectangleShape build() {
            $.anchor = Objects.requireNonNull($.anchor, "expected parameter 'anchor' to be non-null");
            return $;
        }
    }

}
