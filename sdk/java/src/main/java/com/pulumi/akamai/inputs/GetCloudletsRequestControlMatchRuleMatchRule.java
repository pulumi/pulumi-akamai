// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetCloudletsRequestControlMatchRuleMatchRuleMatch;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudletsRequestControlMatchRuleMatchRule extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudletsRequestControlMatchRuleMatchRule Empty = new GetCloudletsRequestControlMatchRuleMatchRule();

    /**
     * (Required) If set to `allow`, the request is sent to origin when all conditions are true. If set to `deny`, the request is denied when all conditions are true. If set to `denybranded`, the request is denied and rerouted according to the Request Control behavior settings.
     * 
     */
    @Import(name="allowDeny", required=true)
    private String allowDeny;

    /**
     * @return (Required) If set to `allow`, the request is sent to origin when all conditions are true. If set to `deny`, the request is denied when all conditions are true. If set to `denybranded`, the request is denied and rerouted according to the Request Control behavior settings.
     * 
     */
    public String allowDeny() {
        return this.allowDeny;
    }

    /**
     * (Optional) Whether to disable a rule. When a rule is disabled it&#39;s not evaluated against incoming requests.
     * 
     */
    @Import(name="disabled")
    private @Nullable Boolean disabled;

    /**
     * @return (Optional) Whether to disable a rule. When a rule is disabled it&#39;s not evaluated against incoming requests.
     * 
     */
    public Optional<Boolean> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * (Optional) The end time for this match. Specify the value in UTC in seconds since the epoch.
     * 
     */
    @Import(name="end")
    private @Nullable Integer end;

    /**
     * @return (Optional) The end time for this match. Specify the value in UTC in seconds since the epoch.
     * 
     */
    public Optional<Integer> end() {
        return Optional.ofNullable(this.end);
    }

    /**
     * (Optional) A list of conditions to apply to a Cloudlet, including:
     * 
     */
    @Import(name="matches")
    private @Nullable List<GetCloudletsRequestControlMatchRuleMatchRuleMatch> matches;

    /**
     * @return (Optional) A list of conditions to apply to a Cloudlet, including:
     * 
     */
    public Optional<List<GetCloudletsRequestControlMatchRuleMatchRuleMatch>> matches() {
        return Optional.ofNullable(this.matches);
    }

    /**
     * (Optional) Match on all incoming requests.
     * 
     */
    @Import(name="matchesAlways")
    private @Nullable Boolean matchesAlways;

    /**
     * @return (Optional) Match on all incoming requests.
     * 
     */
    public Optional<Boolean> matchesAlways() {
        return Optional.ofNullable(this.matchesAlways);
    }

    /**
     * (Optional) If you&#39;re using a `match_type` that supports name attributes, specify the part the incoming request to match on, either `cookie`, `header`, `parameter`, or `query`.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return (Optional) If you&#39;re using a `match_type` that supports name attributes, specify the part the incoming request to match on, either `cookie`, `header`, `parameter`, or `query`.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Optional) The start time for this match. Specify the value in UTC in seconds since the epoch.
     * 
     */
    @Import(name="start")
    private @Nullable Integer start;

    /**
     * @return (Optional) The start time for this match. Specify the value in UTC in seconds since the epoch.
     * 
     */
    public Optional<Integer> start() {
        return Optional.ofNullable(this.start);
    }

    /**
     * (Required) The type of the array, either `object` or `simple`. Use the `simple` option when adding only an array of string-based values.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return (Required) The type of the array, either `object` or `simple`. Use the `simple` option when adding only an array of string-based values.
     * 
     */
    public String type() {
        return this.type;
    }

    private GetCloudletsRequestControlMatchRuleMatchRule() {}

    private GetCloudletsRequestControlMatchRuleMatchRule(GetCloudletsRequestControlMatchRuleMatchRule $) {
        this.allowDeny = $.allowDeny;
        this.disabled = $.disabled;
        this.end = $.end;
        this.matches = $.matches;
        this.matchesAlways = $.matchesAlways;
        this.name = $.name;
        this.start = $.start;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudletsRequestControlMatchRuleMatchRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudletsRequestControlMatchRuleMatchRule $;

        public Builder() {
            $ = new GetCloudletsRequestControlMatchRuleMatchRule();
        }

        public Builder(GetCloudletsRequestControlMatchRuleMatchRule defaults) {
            $ = new GetCloudletsRequestControlMatchRuleMatchRule(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowDeny (Required) If set to `allow`, the request is sent to origin when all conditions are true. If set to `deny`, the request is denied when all conditions are true. If set to `denybranded`, the request is denied and rerouted according to the Request Control behavior settings.
         * 
         * @return builder
         * 
         */
        public Builder allowDeny(String allowDeny) {
            $.allowDeny = allowDeny;
            return this;
        }

        /**
         * @param disabled (Optional) Whether to disable a rule. When a rule is disabled it&#39;s not evaluated against incoming requests.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Boolean disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param end (Optional) The end time for this match. Specify the value in UTC in seconds since the epoch.
         * 
         * @return builder
         * 
         */
        public Builder end(@Nullable Integer end) {
            $.end = end;
            return this;
        }

        /**
         * @param matches (Optional) A list of conditions to apply to a Cloudlet, including:
         * 
         * @return builder
         * 
         */
        public Builder matches(@Nullable List<GetCloudletsRequestControlMatchRuleMatchRuleMatch> matches) {
            $.matches = matches;
            return this;
        }

        /**
         * @param matches (Optional) A list of conditions to apply to a Cloudlet, including:
         * 
         * @return builder
         * 
         */
        public Builder matches(GetCloudletsRequestControlMatchRuleMatchRuleMatch... matches) {
            return matches(List.of(matches));
        }

        /**
         * @param matchesAlways (Optional) Match on all incoming requests.
         * 
         * @return builder
         * 
         */
        public Builder matchesAlways(@Nullable Boolean matchesAlways) {
            $.matchesAlways = matchesAlways;
            return this;
        }

        /**
         * @param name (Optional) If you&#39;re using a `match_type` that supports name attributes, specify the part the incoming request to match on, either `cookie`, `header`, `parameter`, or `query`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param start (Optional) The start time for this match. Specify the value in UTC in seconds since the epoch.
         * 
         * @return builder
         * 
         */
        public Builder start(@Nullable Integer start) {
            $.start = start;
            return this;
        }

        /**
         * @param type (Required) The type of the array, either `object` or `simple`. Use the `simple` option when adding only an array of string-based values.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetCloudletsRequestControlMatchRuleMatchRule build() {
            $.allowDeny = Objects.requireNonNull($.allowDeny, "expected parameter 'allowDeny' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
