// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast();

    @Import(name="brightness")
    private @Nullable String brightness;

    public Optional<String> brightness() {
        return Optional.ofNullable(this.brightness);
    }

    @Import(name="brightnessVar")
    private @Nullable String brightnessVar;

    public Optional<String> brightnessVar() {
        return Optional.ofNullable(this.brightnessVar);
    }

    @Import(name="contrast")
    private @Nullable String contrast;

    public Optional<String> contrast() {
        return Optional.ofNullable(this.contrast);
    }

    @Import(name="contrastVar")
    private @Nullable String contrastVar;

    public Optional<String> contrastVar() {
        return Optional.ofNullable(this.contrastVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast $) {
        this.brightness = $.brightness;
        this.brightnessVar = $.brightnessVar;
        this.contrast = $.contrast;
        this.contrastVar = $.contrastVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast(Objects.requireNonNull(defaults));
        }

        public Builder brightness(@Nullable String brightness) {
            $.brightness = brightness;
            return this;
        }

        public Builder brightnessVar(@Nullable String brightnessVar) {
            $.brightnessVar = brightnessVar;
            return this;
        }

        public Builder contrast(@Nullable String contrast) {
            $.contrast = contrast;
            return this;
        }

        public Builder contrastVar(@Nullable String contrastVar) {
            $.contrastVar = contrastVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast build() {
            return $;
        }
    }

}
