// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationAppend;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationAspectCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationBackgroundColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationBlur;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationChromaKey;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationComposite;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationCompound;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFaceCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFeatureCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFitAndFill;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationGoop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationGrayscale;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationHsl;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationHsv;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationIfDimension;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationIfOrientation;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationImQuery;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMaxColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMirror;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMonoHue;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationOpacity;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRegionOfInterestCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRelativeCrop;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRemoveColor;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationResize;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRotate;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationScale;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationShears;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationTrim;
import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationUnsharpMask;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation();

    @Import(name="appends")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationAppend> appends;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationAppend>> appends() {
        return Optional.ofNullable(this.appends);
    }

    @Import(name="aspectCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationAspectCrop> aspectCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationAspectCrop>> aspectCrops() {
        return Optional.ofNullable(this.aspectCrops);
    }

    @Import(name="backgroundColors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationBackgroundColor> backgroundColors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationBackgroundColor>> backgroundColors() {
        return Optional.ofNullable(this.backgroundColors);
    }

    @Import(name="blurs")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationBlur> blurs;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationBlur>> blurs() {
        return Optional.ofNullable(this.blurs);
    }

    @Import(name="chromaKeys")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationChromaKey> chromaKeys;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationChromaKey>> chromaKeys() {
        return Optional.ofNullable(this.chromaKeys);
    }

    @Import(name="composites")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationComposite> composites;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationComposite>> composites() {
        return Optional.ofNullable(this.composites);
    }

    @Import(name="compounds")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationCompound> compounds;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationCompound>> compounds() {
        return Optional.ofNullable(this.compounds);
    }

    @Import(name="contrasts")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast> contrasts;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast>> contrasts() {
        return Optional.ofNullable(this.contrasts);
    }

    @Import(name="crops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationCrop> crops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationCrop>> crops() {
        return Optional.ofNullable(this.crops);
    }

    @Import(name="faceCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFaceCrop> faceCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFaceCrop>> faceCrops() {
        return Optional.ofNullable(this.faceCrops);
    }

    @Import(name="featureCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFeatureCrop> featureCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFeatureCrop>> featureCrops() {
        return Optional.ofNullable(this.featureCrops);
    }

    @Import(name="fitAndFills")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFitAndFill> fitAndFills;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFitAndFill>> fitAndFills() {
        return Optional.ofNullable(this.fitAndFills);
    }

    @Import(name="goops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationGoop> goops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationGoop>> goops() {
        return Optional.ofNullable(this.goops);
    }

    @Import(name="grayscales")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationGrayscale> grayscales;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationGrayscale>> grayscales() {
        return Optional.ofNullable(this.grayscales);
    }

    @Import(name="hsls")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationHsl> hsls;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationHsl>> hsls() {
        return Optional.ofNullable(this.hsls);
    }

    @Import(name="hsvs")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationHsv> hsvs;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationHsv>> hsvs() {
        return Optional.ofNullable(this.hsvs);
    }

    @Import(name="ifDimensions")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationIfDimension> ifDimensions;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationIfDimension>> ifDimensions() {
        return Optional.ofNullable(this.ifDimensions);
    }

    @Import(name="ifOrientations")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationIfOrientation> ifOrientations;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationIfOrientation>> ifOrientations() {
        return Optional.ofNullable(this.ifOrientations);
    }

    @Import(name="imQueries")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationImQuery> imQueries;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationImQuery>> imQueries() {
        return Optional.ofNullable(this.imQueries);
    }

    @Import(name="maxColors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMaxColor> maxColors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMaxColor>> maxColors() {
        return Optional.ofNullable(this.maxColors);
    }

    @Import(name="mirrors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMirror> mirrors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMirror>> mirrors() {
        return Optional.ofNullable(this.mirrors);
    }

    @Import(name="monoHues")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMonoHue> monoHues;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMonoHue>> monoHues() {
        return Optional.ofNullable(this.monoHues);
    }

    @Import(name="opacities")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationOpacity> opacities;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationOpacity>> opacities() {
        return Optional.ofNullable(this.opacities);
    }

    @Import(name="regionOfInterestCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRegionOfInterestCrop> regionOfInterestCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRegionOfInterestCrop>> regionOfInterestCrops() {
        return Optional.ofNullable(this.regionOfInterestCrops);
    }

    @Import(name="relativeCrops")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRelativeCrop> relativeCrops;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRelativeCrop>> relativeCrops() {
        return Optional.ofNullable(this.relativeCrops);
    }

    @Import(name="removeColors")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRemoveColor> removeColors;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRemoveColor>> removeColors() {
        return Optional.ofNullable(this.removeColors);
    }

    @Import(name="resizes")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationResize> resizes;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationResize>> resizes() {
        return Optional.ofNullable(this.resizes);
    }

    @Import(name="rotates")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRotate> rotates;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRotate>> rotates() {
        return Optional.ofNullable(this.rotates);
    }

    @Import(name="scales")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationScale> scales;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationScale>> scales() {
        return Optional.ofNullable(this.scales);
    }

    @Import(name="shears")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationShears> shears;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationShears>> shears() {
        return Optional.ofNullable(this.shears);
    }

    @Import(name="trims")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationTrim> trims;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationTrim>> trims() {
        return Optional.ofNullable(this.trims);
    }

    @Import(name="unsharpMasks")
    private @Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationUnsharpMask> unsharpMasks;

    public Optional<List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationUnsharpMask>> unsharpMasks() {
        return Optional.ofNullable(this.unsharpMasks);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation $) {
        this.appends = $.appends;
        this.aspectCrops = $.aspectCrops;
        this.backgroundColors = $.backgroundColors;
        this.blurs = $.blurs;
        this.chromaKeys = $.chromaKeys;
        this.composites = $.composites;
        this.compounds = $.compounds;
        this.contrasts = $.contrasts;
        this.crops = $.crops;
        this.faceCrops = $.faceCrops;
        this.featureCrops = $.featureCrops;
        this.fitAndFills = $.fitAndFills;
        this.goops = $.goops;
        this.grayscales = $.grayscales;
        this.hsls = $.hsls;
        this.hsvs = $.hsvs;
        this.ifDimensions = $.ifDimensions;
        this.ifOrientations = $.ifOrientations;
        this.imQueries = $.imQueries;
        this.maxColors = $.maxColors;
        this.mirrors = $.mirrors;
        this.monoHues = $.monoHues;
        this.opacities = $.opacities;
        this.regionOfInterestCrops = $.regionOfInterestCrops;
        this.relativeCrops = $.relativeCrops;
        this.removeColors = $.removeColors;
        this.resizes = $.resizes;
        this.rotates = $.rotates;
        this.scales = $.scales;
        this.shears = $.shears;
        this.trims = $.trims;
        this.unsharpMasks = $.unsharpMasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation(Objects.requireNonNull(defaults));
        }

        public Builder appends(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationAppend> appends) {
            $.appends = appends;
            return this;
        }

        public Builder appends(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationAppend... appends) {
            return appends(List.of(appends));
        }

        public Builder aspectCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationAspectCrop> aspectCrops) {
            $.aspectCrops = aspectCrops;
            return this;
        }

        public Builder aspectCrops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationAspectCrop... aspectCrops) {
            return aspectCrops(List.of(aspectCrops));
        }

        public Builder backgroundColors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationBackgroundColor> backgroundColors) {
            $.backgroundColors = backgroundColors;
            return this;
        }

        public Builder backgroundColors(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationBackgroundColor... backgroundColors) {
            return backgroundColors(List.of(backgroundColors));
        }

        public Builder blurs(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationBlur> blurs) {
            $.blurs = blurs;
            return this;
        }

        public Builder blurs(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationBlur... blurs) {
            return blurs(List.of(blurs));
        }

        public Builder chromaKeys(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationChromaKey> chromaKeys) {
            $.chromaKeys = chromaKeys;
            return this;
        }

        public Builder chromaKeys(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationChromaKey... chromaKeys) {
            return chromaKeys(List.of(chromaKeys));
        }

        public Builder composites(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationComposite> composites) {
            $.composites = composites;
            return this;
        }

        public Builder composites(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationComposite... composites) {
            return composites(List.of(composites));
        }

        public Builder compounds(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationCompound> compounds) {
            $.compounds = compounds;
            return this;
        }

        public Builder compounds(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationCompound... compounds) {
            return compounds(List.of(compounds));
        }

        public Builder contrasts(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast> contrasts) {
            $.contrasts = contrasts;
            return this;
        }

        public Builder contrasts(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationContrast... contrasts) {
            return contrasts(List.of(contrasts));
        }

        public Builder crops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationCrop> crops) {
            $.crops = crops;
            return this;
        }

        public Builder crops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationCrop... crops) {
            return crops(List.of(crops));
        }

        public Builder faceCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFaceCrop> faceCrops) {
            $.faceCrops = faceCrops;
            return this;
        }

        public Builder faceCrops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFaceCrop... faceCrops) {
            return faceCrops(List.of(faceCrops));
        }

        public Builder featureCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFeatureCrop> featureCrops) {
            $.featureCrops = featureCrops;
            return this;
        }

        public Builder featureCrops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFeatureCrop... featureCrops) {
            return featureCrops(List.of(featureCrops));
        }

        public Builder fitAndFills(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFitAndFill> fitAndFills) {
            $.fitAndFills = fitAndFills;
            return this;
        }

        public Builder fitAndFills(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationFitAndFill... fitAndFills) {
            return fitAndFills(List.of(fitAndFills));
        }

        public Builder goops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationGoop> goops) {
            $.goops = goops;
            return this;
        }

        public Builder goops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationGoop... goops) {
            return goops(List.of(goops));
        }

        public Builder grayscales(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationGrayscale> grayscales) {
            $.grayscales = grayscales;
            return this;
        }

        public Builder grayscales(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationGrayscale... grayscales) {
            return grayscales(List.of(grayscales));
        }

        public Builder hsls(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationHsl> hsls) {
            $.hsls = hsls;
            return this;
        }

        public Builder hsls(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationHsl... hsls) {
            return hsls(List.of(hsls));
        }

        public Builder hsvs(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationHsv> hsvs) {
            $.hsvs = hsvs;
            return this;
        }

        public Builder hsvs(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationHsv... hsvs) {
            return hsvs(List.of(hsvs));
        }

        public Builder ifDimensions(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationIfDimension> ifDimensions) {
            $.ifDimensions = ifDimensions;
            return this;
        }

        public Builder ifDimensions(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationIfDimension... ifDimensions) {
            return ifDimensions(List.of(ifDimensions));
        }

        public Builder ifOrientations(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationIfOrientation> ifOrientations) {
            $.ifOrientations = ifOrientations;
            return this;
        }

        public Builder ifOrientations(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationIfOrientation... ifOrientations) {
            return ifOrientations(List.of(ifOrientations));
        }

        public Builder imQueries(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationImQuery> imQueries) {
            $.imQueries = imQueries;
            return this;
        }

        public Builder imQueries(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationImQuery... imQueries) {
            return imQueries(List.of(imQueries));
        }

        public Builder maxColors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMaxColor> maxColors) {
            $.maxColors = maxColors;
            return this;
        }

        public Builder maxColors(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMaxColor... maxColors) {
            return maxColors(List.of(maxColors));
        }

        public Builder mirrors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMirror> mirrors) {
            $.mirrors = mirrors;
            return this;
        }

        public Builder mirrors(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMirror... mirrors) {
            return mirrors(List.of(mirrors));
        }

        public Builder monoHues(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMonoHue> monoHues) {
            $.monoHues = monoHues;
            return this;
        }

        public Builder monoHues(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationMonoHue... monoHues) {
            return monoHues(List.of(monoHues));
        }

        public Builder opacities(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationOpacity> opacities) {
            $.opacities = opacities;
            return this;
        }

        public Builder opacities(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationOpacity... opacities) {
            return opacities(List.of(opacities));
        }

        public Builder regionOfInterestCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRegionOfInterestCrop> regionOfInterestCrops) {
            $.regionOfInterestCrops = regionOfInterestCrops;
            return this;
        }

        public Builder regionOfInterestCrops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRegionOfInterestCrop... regionOfInterestCrops) {
            return regionOfInterestCrops(List.of(regionOfInterestCrops));
        }

        public Builder relativeCrops(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRelativeCrop> relativeCrops) {
            $.relativeCrops = relativeCrops;
            return this;
        }

        public Builder relativeCrops(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRelativeCrop... relativeCrops) {
            return relativeCrops(List.of(relativeCrops));
        }

        public Builder removeColors(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRemoveColor> removeColors) {
            $.removeColors = removeColors;
            return this;
        }

        public Builder removeColors(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRemoveColor... removeColors) {
            return removeColors(List.of(removeColors));
        }

        public Builder resizes(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationResize> resizes) {
            $.resizes = resizes;
            return this;
        }

        public Builder resizes(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationResize... resizes) {
            return resizes(List.of(resizes));
        }

        public Builder rotates(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRotate> rotates) {
            $.rotates = rotates;
            return this;
        }

        public Builder rotates(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationRotate... rotates) {
            return rotates(List.of(rotates));
        }

        public Builder scales(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationScale> scales) {
            $.scales = scales;
            return this;
        }

        public Builder scales(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationScale... scales) {
            return scales(List.of(scales));
        }

        public Builder shears(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationShears> shears) {
            $.shears = shears;
            return this;
        }

        public Builder shears(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationShears... shears) {
            return shears(List.of(shears));
        }

        public Builder trims(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationTrim> trims) {
            $.trims = trims;
            return this;
        }

        public Builder trims(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationTrim... trims) {
            return trims(List.of(trims));
        }

        public Builder unsharpMasks(@Nullable List<GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationUnsharpMask> unsharpMasks) {
            $.unsharpMasks = unsharpMasks;
            return this;
        }

        public Builder unsharpMasks(GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformationUnsharpMask... unsharpMasks) {
            return unsharpMasks(List.of(unsharpMasks));
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationDefaultFitAndFillFillTransformation build() {
            return $;
        }
    }

}
