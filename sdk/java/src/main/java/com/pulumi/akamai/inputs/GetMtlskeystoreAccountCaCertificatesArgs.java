// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMtlskeystoreAccountCaCertificatesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMtlskeystoreAccountCaCertificatesArgs Empty = new GetMtlskeystoreAccountCaCertificatesArgs();

    @Import(name="statuses")
    private @Nullable Output<List<String>> statuses;

    public Optional<Output<List<String>>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    private GetMtlskeystoreAccountCaCertificatesArgs() {}

    private GetMtlskeystoreAccountCaCertificatesArgs(GetMtlskeystoreAccountCaCertificatesArgs $) {
        this.statuses = $.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMtlskeystoreAccountCaCertificatesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMtlskeystoreAccountCaCertificatesArgs $;

        public Builder() {
            $ = new GetMtlskeystoreAccountCaCertificatesArgs();
        }

        public Builder(GetMtlskeystoreAccountCaCertificatesArgs defaults) {
            $ = new GetMtlskeystoreAccountCaCertificatesArgs(Objects.requireNonNull(defaults));
        }

        public Builder statuses(@Nullable Output<List<String>> statuses) {
            $.statuses = statuses;
            return this;
        }

        public Builder statuses(List<String> statuses) {
            return statuses(Output.of(statuses));
        }

        public Builder statuses(String... statuses) {
            return statuses(List.of(statuses));
        }

        public GetMtlskeystoreAccountCaCertificatesArgs build() {
            return $;
        }
    }

}
