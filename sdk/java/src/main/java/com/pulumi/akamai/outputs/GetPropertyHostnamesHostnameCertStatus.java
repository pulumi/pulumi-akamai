// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPropertyHostnamesHostnameCertStatus {
    private String hostname;
    private String productionStatus;
    private String stagingStatus;
    private String target;

    private GetPropertyHostnamesHostnameCertStatus() {}
    public String hostname() {
        return this.hostname;
    }
    public String productionStatus() {
        return this.productionStatus;
    }
    public String stagingStatus() {
        return this.stagingStatus;
    }
    public String target() {
        return this.target;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyHostnamesHostnameCertStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String hostname;
        private String productionStatus;
        private String stagingStatus;
        private String target;
        public Builder() {}
        public Builder(GetPropertyHostnamesHostnameCertStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.productionStatus = defaults.productionStatus;
    	      this.stagingStatus = defaults.stagingStatus;
    	      this.target = defaults.target;
        }

        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameCertStatus", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder productionStatus(String productionStatus) {
            if (productionStatus == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameCertStatus", "productionStatus");
            }
            this.productionStatus = productionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder stagingStatus(String stagingStatus) {
            if (stagingStatus == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameCertStatus", "stagingStatus");
            }
            this.stagingStatus = stagingStatus;
            return this;
        }
        @CustomType.Setter
        public Builder target(String target) {
            if (target == null) {
              throw new MissingRequiredPropertyException("GetPropertyHostnamesHostnameCertStatus", "target");
            }
            this.target = target;
            return this;
        }
        public GetPropertyHostnamesHostnameCertStatus build() {
            final var _resultValue = new GetPropertyHostnamesHostnameCertStatus();
            _resultValue.hostname = hostname;
            _resultValue.productionStatus = productionStatus;
            _resultValue.stagingStatus = stagingStatus;
            _resultValue.target = target;
            return _resultValue;
        }
    }
}
