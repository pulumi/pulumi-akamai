// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CloudAccessKeyCredentialsB {
    /**
     * @return Access key id from cloud provider which is used to sign API requests
     * 
     */
    private String cloudAccessKeyId;
    /**
     * @return Cloud Access secret from cloud provider which is used to sign API requests
     * 
     */
    private String cloudSecretAccessKey;
    /**
     * @return Boolean value which helps to define if credentials should be assigned to property
     * 
     */
    private Boolean primaryKey;
    /**
     * @return Numeric access key version associated with specific pair of cloud access credentials used to sign API requests
     * 
     */
    private @Nullable Integer version;
    /**
     * @return The unique identifier assigned to specific access key version
     * 
     */
    private @Nullable String versionGuid;

    private CloudAccessKeyCredentialsB() {}
    /**
     * @return Access key id from cloud provider which is used to sign API requests
     * 
     */
    public String cloudAccessKeyId() {
        return this.cloudAccessKeyId;
    }
    /**
     * @return Cloud Access secret from cloud provider which is used to sign API requests
     * 
     */
    public String cloudSecretAccessKey() {
        return this.cloudSecretAccessKey;
    }
    /**
     * @return Boolean value which helps to define if credentials should be assigned to property
     * 
     */
    public Boolean primaryKey() {
        return this.primaryKey;
    }
    /**
     * @return Numeric access key version associated with specific pair of cloud access credentials used to sign API requests
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }
    /**
     * @return The unique identifier assigned to specific access key version
     * 
     */
    public Optional<String> versionGuid() {
        return Optional.ofNullable(this.versionGuid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudAccessKeyCredentialsB defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudAccessKeyId;
        private String cloudSecretAccessKey;
        private Boolean primaryKey;
        private @Nullable Integer version;
        private @Nullable String versionGuid;
        public Builder() {}
        public Builder(CloudAccessKeyCredentialsB defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudAccessKeyId = defaults.cloudAccessKeyId;
    	      this.cloudSecretAccessKey = defaults.cloudSecretAccessKey;
    	      this.primaryKey = defaults.primaryKey;
    	      this.version = defaults.version;
    	      this.versionGuid = defaults.versionGuid;
        }

        @CustomType.Setter
        public Builder cloudAccessKeyId(String cloudAccessKeyId) {
            if (cloudAccessKeyId == null) {
              throw new MissingRequiredPropertyException("CloudAccessKeyCredentialsB", "cloudAccessKeyId");
            }
            this.cloudAccessKeyId = cloudAccessKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudSecretAccessKey(String cloudSecretAccessKey) {
            if (cloudSecretAccessKey == null) {
              throw new MissingRequiredPropertyException("CloudAccessKeyCredentialsB", "cloudSecretAccessKey");
            }
            this.cloudSecretAccessKey = cloudSecretAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder primaryKey(Boolean primaryKey) {
            if (primaryKey == null) {
              throw new MissingRequiredPropertyException("CloudAccessKeyCredentialsB", "primaryKey");
            }
            this.primaryKey = primaryKey;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Integer version) {

            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder versionGuid(@Nullable String versionGuid) {

            this.versionGuid = versionGuid;
            return this;
        }
        public CloudAccessKeyCredentialsB build() {
            final var _resultValue = new CloudAccessKeyCredentialsB();
            _resultValue.cloudAccessKeyId = cloudAccessKeyId;
            _resultValue.cloudSecretAccessKey = cloudSecretAccessKey;
            _resultValue.primaryKey = primaryKey;
            _resultValue.version = version;
            _resultValue.versionGuid = versionGuid;
            return _resultValue;
        }
    }
}
