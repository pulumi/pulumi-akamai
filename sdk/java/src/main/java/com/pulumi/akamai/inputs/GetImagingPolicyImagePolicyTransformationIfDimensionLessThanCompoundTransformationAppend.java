// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppendImage;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend Empty = new GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend();

    @Import(name="gravity")
    private @Nullable String gravity;

    public Optional<String> gravity() {
        return Optional.ofNullable(this.gravity);
    }

    @Import(name="gravityPriority")
    private @Nullable String gravityPriority;

    public Optional<String> gravityPriority() {
        return Optional.ofNullable(this.gravityPriority);
    }

    @Import(name="gravityPriorityVar")
    private @Nullable String gravityPriorityVar;

    public Optional<String> gravityPriorityVar() {
        return Optional.ofNullable(this.gravityPriorityVar);
    }

    @Import(name="gravityVar")
    private @Nullable String gravityVar;

    public Optional<String> gravityVar() {
        return Optional.ofNullable(this.gravityVar);
    }

    @Import(name="image", required=true)
    private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppendImage image;

    public GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppendImage image() {
        return this.image;
    }

    @Import(name="preserveMinorDimension")
    private @Nullable String preserveMinorDimension;

    public Optional<String> preserveMinorDimension() {
        return Optional.ofNullable(this.preserveMinorDimension);
    }

    @Import(name="preserveMinorDimensionVar")
    private @Nullable String preserveMinorDimensionVar;

    public Optional<String> preserveMinorDimensionVar() {
        return Optional.ofNullable(this.preserveMinorDimensionVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend() {}

    private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend $) {
        this.gravity = $.gravity;
        this.gravityPriority = $.gravityPriority;
        this.gravityPriorityVar = $.gravityPriorityVar;
        this.gravityVar = $.gravityVar;
        this.image = $.image;
        this.preserveMinorDimension = $.preserveMinorDimension;
        this.preserveMinorDimensionVar = $.preserveMinorDimensionVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend(Objects.requireNonNull(defaults));
        }

        public Builder gravity(@Nullable String gravity) {
            $.gravity = gravity;
            return this;
        }

        public Builder gravityPriority(@Nullable String gravityPriority) {
            $.gravityPriority = gravityPriority;
            return this;
        }

        public Builder gravityPriorityVar(@Nullable String gravityPriorityVar) {
            $.gravityPriorityVar = gravityPriorityVar;
            return this;
        }

        public Builder gravityVar(@Nullable String gravityVar) {
            $.gravityVar = gravityVar;
            return this;
        }

        public Builder image(GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppendImage image) {
            $.image = image;
            return this;
        }

        public Builder preserveMinorDimension(@Nullable String preserveMinorDimension) {
            $.preserveMinorDimension = preserveMinorDimension;
            return this;
        }

        public Builder preserveMinorDimensionVar(@Nullable String preserveMinorDimensionVar) {
            $.preserveMinorDimensionVar = preserveMinorDimensionVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationIfDimensionLessThanCompoundTransformationAppend build() {
            $.image = Objects.requireNonNull($.image, "expected parameter 'image' to be non-null");
            return $;
        }
    }

}
