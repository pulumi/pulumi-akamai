// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.akamai.inputs.GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFillFillTransformation;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill extends com.pulumi.resources.InvokeArgs {

    public static final GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill Empty = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill();

    @Import(name="fillTransformation")
    private @Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFillFillTransformation fillTransformation;

    public Optional<GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFillFillTransformation> fillTransformation() {
        return Optional.ofNullable(this.fillTransformation);
    }

    @Import(name="height")
    private @Nullable String height;

    public Optional<String> height() {
        return Optional.ofNullable(this.height);
    }

    @Import(name="heightVar")
    private @Nullable String heightVar;

    public Optional<String> heightVar() {
        return Optional.ofNullable(this.heightVar);
    }

    @Import(name="width")
    private @Nullable String width;

    public Optional<String> width() {
        return Optional.ofNullable(this.width);
    }

    @Import(name="widthVar")
    private @Nullable String widthVar;

    public Optional<String> widthVar() {
        return Optional.ofNullable(this.widthVar);
    }

    private GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill() {}

    private GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill(GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill $) {
        this.fillTransformation = $.fillTransformation;
        this.height = $.height;
        this.heightVar = $.heightVar;
        this.width = $.width;
        this.widthVar = $.widthVar;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill $;

        public Builder() {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill();
        }

        public Builder(GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill defaults) {
            $ = new GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill(Objects.requireNonNull(defaults));
        }

        public Builder fillTransformation(@Nullable GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFillFillTransformation fillTransformation) {
            $.fillTransformation = fillTransformation;
            return this;
        }

        public Builder height(@Nullable String height) {
            $.height = height;
            return this;
        }

        public Builder heightVar(@Nullable String heightVar) {
            $.heightVar = heightVar;
            return this;
        }

        public Builder width(@Nullable String width) {
            $.width = width;
            return this;
        }

        public Builder widthVar(@Nullable String widthVar) {
            $.widthVar = widthVar;
            return this;
        }

        public GetImagingPolicyImagePolicyTransformationIfOrientationSquareFitAndFill build() {
            return $;
        }
    }

}
