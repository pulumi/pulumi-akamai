# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables

__all__ = ['EdgeHostName']


class EdgeHostName(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 certificate: Optional[pulumi.Input[int]] = None,
                 contract: Optional[pulumi.Input[str]] = None,
                 edge_hostname: Optional[pulumi.Input[str]] = None,
                 group: Optional[pulumi.Input[str]] = None,
                 ipv4: Optional[pulumi.Input[bool]] = None,
                 ipv6: Optional[pulumi.Input[bool]] = None,
                 product: Optional[pulumi.Input[str]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        The `properties.EdgeHostName` provides the resource for configuring a secure edge hostname that determines how requests for your site, app, or content are mapped to Akamai edge servers.

        An edge hostname is the CNAME target you use when directing your end user traffic to Akamai. In a typical DNS CNAME, your www.customer.com hostname corresponds to an edge hostname of www.customer.com.edgesuite.net.

        ## Example Usage
        ### Basic usage:

        ```python
        import pulumi
        import pulumi_akamai as akamai

        terraform_demo = akamai.properties.EdgeHostName("terraform-demo",
            contract="ctr_####",
            edge_hostname="www.example.org.edgesuite.net",
            group="grp_####",
            product="prd_####")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] certificate: — (Optional) The certificate enrollment ID.
        :param pulumi.Input[str] contract: — (Required) The contract ID.
        :param pulumi.Input[str] edge_hostname: — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
        :param pulumi.Input[str] group: — (Required) The group ID.
        :param pulumi.Input[bool] ipv4: — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
        :param pulumi.Input[bool] ipv6: —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
        :param pulumi.Input[str] product: — (Required) The product ID.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['certificate'] = certificate
            if contract is None:
                raise TypeError("Missing required property 'contract'")
            __props__['contract'] = contract
            if edge_hostname is None:
                raise TypeError("Missing required property 'edge_hostname'")
            __props__['edge_hostname'] = edge_hostname
            if group is None:
                raise TypeError("Missing required property 'group'")
            __props__['group'] = group
            __props__['ipv4'] = ipv4
            __props__['ipv6'] = ipv6
            if product is None:
                raise TypeError("Missing required property 'product'")
            __props__['product'] = product
            __props__['ip_behavior'] = None
        super(EdgeHostName, __self__).__init__(
            'akamai:properties/edgeHostName:EdgeHostName',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            certificate: Optional[pulumi.Input[int]] = None,
            contract: Optional[pulumi.Input[str]] = None,
            edge_hostname: Optional[pulumi.Input[str]] = None,
            group: Optional[pulumi.Input[str]] = None,
            ip_behavior: Optional[pulumi.Input[str]] = None,
            ipv4: Optional[pulumi.Input[bool]] = None,
            ipv6: Optional[pulumi.Input[bool]] = None,
            product: Optional[pulumi.Input[str]] = None) -> 'EdgeHostName':
        """
        Get an existing EdgeHostName resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] certificate: — (Optional) The certificate enrollment ID.
        :param pulumi.Input[str] contract: — (Required) The contract ID.
        :param pulumi.Input[str] edge_hostname: — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
        :param pulumi.Input[str] group: — (Required) The group ID.
        :param pulumi.Input[bool] ipv4: — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
        :param pulumi.Input[bool] ipv6: —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
        :param pulumi.Input[str] product: — (Required) The product ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["certificate"] = certificate
        __props__["contract"] = contract
        __props__["edge_hostname"] = edge_hostname
        __props__["group"] = group
        __props__["ip_behavior"] = ip_behavior
        __props__["ipv4"] = ipv4
        __props__["ipv6"] = ipv6
        __props__["product"] = product
        return EdgeHostName(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def certificate(self) -> pulumi.Output[Optional[int]]:
        """
        — (Optional) The certificate enrollment ID.
        """
        return pulumi.get(self, "certificate")

    @property
    @pulumi.getter
    def contract(self) -> pulumi.Output[str]:
        """
        — (Required) The contract ID.
        """
        return pulumi.get(self, "contract")

    @property
    @pulumi.getter(name="edgeHostname")
    def edge_hostname(self) -> pulumi.Output[str]:
        """
        — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
        """
        return pulumi.get(self, "edge_hostname")

    @property
    @pulumi.getter
    def group(self) -> pulumi.Output[str]:
        """
        — (Required) The group ID.
        """
        return pulumi.get(self, "group")

    @property
    @pulumi.getter(name="ipBehavior")
    def ip_behavior(self) -> pulumi.Output[str]:
        return pulumi.get(self, "ip_behavior")

    @property
    @pulumi.getter
    def ipv4(self) -> pulumi.Output[Optional[bool]]:
        """
        — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
        """
        return pulumi.get(self, "ipv4")

    @property
    @pulumi.getter
    def ipv6(self) -> pulumi.Output[Optional[bool]]:
        """
        —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
        """
        return pulumi.get(self, "ipv6")

    @property
    @pulumi.getter
    def product(self) -> pulumi.Output[str]:
        """
        — (Required) The product ID.
        """
        return pulumi.get(self, "product")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

