# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = [
    'GetPropertyRulesResult',
    'AwaitableGetPropertyRulesResult',
    'get_property_rules',
]

@pulumi.output_type
class GetPropertyRulesResult:
    """
    A collection of values returned by getPropertyRules.
    """
    def __init__(__self__, id=None, json=None, rules=None, variables=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if json and not isinstance(json, str):
            raise TypeError("Expected argument 'json' to be a str")
        pulumi.set(__self__, "json", json)
        if rules and not isinstance(rules, list):
            raise TypeError("Expected argument 'rules' to be a list")
        pulumi.set(__self__, "rules", rules)
        if variables and not isinstance(variables, str):
            raise TypeError("Expected argument 'variables' to be a str")
        pulumi.set(__self__, "variables", variables)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def json(self) -> str:
        return pulumi.get(self, "json")

    @property
    @pulumi.getter
    def rules(self) -> Optional[Sequence['outputs.GetPropertyRulesRuleResult']]:
        return pulumi.get(self, "rules")

    @property
    @pulumi.getter
    def variables(self) -> Optional[str]:
        return pulumi.get(self, "variables")


class AwaitableGetPropertyRulesResult(GetPropertyRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPropertyRulesResult(
            id=self.id,
            json=self.json,
            rules=self.rules,
            variables=self.variables)


def get_property_rules(rules: Optional[Sequence[pulumi.InputType['GetPropertyRulesRuleArgs']]] = None,
                       variables: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPropertyRulesResult:
    """
    The `properties.PropertyRules` data source allows you to configure a nested block of property rules, criteria, and behaviors. A propertyâ€™s main functionality is encapsulated in its set of rules and rules are composed of the matches and the behavior that applies under those matches.

    ## Example Usage
    ### Basic usage:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    example_property_rules = akamai.properties.get_property_rules(rules=[akamai.properties.GetPropertyRulesRuleArgs(
        behaviors=[akamai.properties.GetPropertyRulesRuleBehaviorArgs(
            name="downstreamCache",
            option=[{
                "key": "behavior",
                "value": "TUNNEL_ORIGIN",
            }],
        )],
        rules=[akamai.properties.GetPropertyRulesRuleRuleArgs(
            name="Performance",
            rule=[{
                "behavior": [{
                    "name": "adaptiveImageCompression",
                    "option": [
                        {
                            "key": "tier1MobileCompressionMethod",
                            "value": "COMPRESS",
                        },
                        {
                            "key": "tier1MobileCompressionValue",
                            "value": "80",
                        },
                        {
                            "key": "tier2MobileCompressionMethod",
                            "value": "COMPRESS",
                        },
                    ],
                }],
                "name": "JPEG Images",
            }],
        )],
    )])
    example_property = akamai.properties.Property("exampleProperty", rules=example_property_rules.json)
    ```
    """
    __args__ = dict()
    __args__['rules'] = rules
    __args__['variables'] = variables
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('akamai:properties/getPropertyRules:getPropertyRules', __args__, opts=opts, typ=GetPropertyRulesResult).value

    return AwaitableGetPropertyRulesResult(
        id=__ret__.id,
        json=__ret__.json,
        rules=__ret__.rules,
        variables=__ret__.variables)
