# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetCloudwrapperConfigurationsResult',
    'AwaitableGetCloudwrapperConfigurationsResult',
    'get_cloudwrapper_configurations',
    'get_cloudwrapper_configurations_output',
]

@pulumi.output_type
class GetCloudwrapperConfigurationsResult:
    """
    A collection of values returned by getCloudwrapperConfigurations.
    """
    def __init__(__self__, configurations=None, id=None):
        if configurations and not isinstance(configurations, list):
            raise TypeError("Expected argument 'configurations' to be a list")
        pulumi.set(__self__, "configurations", configurations)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def configurations(self) -> Optional[Sequence['outputs.GetCloudwrapperConfigurationsConfigurationResult']]:
        return pulumi.get(self, "configurations")

    @property
    @pulumi.getter
    def id(self) -> str:
        warnings.warn("""Required by the terraform plugin testing framework, always set to `akamai_cloudwrapper_configurations`.""", DeprecationWarning)
        pulumi.log.warn("""id is deprecated: Required by the terraform plugin testing framework, always set to `akamai_cloudwrapper_configurations`.""")

        return pulumi.get(self, "id")


class AwaitableGetCloudwrapperConfigurationsResult(GetCloudwrapperConfigurationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloudwrapperConfigurationsResult(
            configurations=self.configurations,
            id=self.id)


def get_cloudwrapper_configurations(configurations: Optional[Sequence[pulumi.InputType['GetCloudwrapperConfigurationsConfigurationArgs']]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloudwrapperConfigurationsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['configurations'] = configurations
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getCloudwrapperConfigurations:getCloudwrapperConfigurations', __args__, opts=opts, typ=GetCloudwrapperConfigurationsResult).value

    return AwaitableGetCloudwrapperConfigurationsResult(
        configurations=pulumi.get(__ret__, 'configurations'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_cloudwrapper_configurations)
def get_cloudwrapper_configurations_output(configurations: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetCloudwrapperConfigurationsConfigurationArgs']]]]] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCloudwrapperConfigurationsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
