# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetAppSecContractsGroupsResult',
    'AwaitableGetAppSecContractsGroupsResult',
    'get_app_sec_contracts_groups',
    'get_app_sec_contracts_groups_output',
]

@pulumi.output_type
class GetAppSecContractsGroupsResult:
    """
    A collection of values returned by getAppSecContractsGroups.
    """
    def __init__(__self__, contractid=None, default_contractid=None, default_groupid=None, groupid=None, id=None, json=None, output_text=None):
        if contractid and not isinstance(contractid, str):
            raise TypeError("Expected argument 'contractid' to be a str")
        pulumi.set(__self__, "contractid", contractid)
        if default_contractid and not isinstance(default_contractid, str):
            raise TypeError("Expected argument 'default_contractid' to be a str")
        pulumi.set(__self__, "default_contractid", default_contractid)
        if default_groupid and not isinstance(default_groupid, int):
            raise TypeError("Expected argument 'default_groupid' to be a int")
        pulumi.set(__self__, "default_groupid", default_groupid)
        if groupid and not isinstance(groupid, int):
            raise TypeError("Expected argument 'groupid' to be a int")
        pulumi.set(__self__, "groupid", groupid)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if json and not isinstance(json, str):
            raise TypeError("Expected argument 'json' to be a str")
        pulumi.set(__self__, "json", json)
        if output_text and not isinstance(output_text, str):
            raise TypeError("Expected argument 'output_text' to be a str")
        pulumi.set(__self__, "output_text", output_text)

    @property
    @pulumi.getter
    def contractid(self) -> Optional[str]:
        return pulumi.get(self, "contractid")

    @property
    @pulumi.getter(name="defaultContractid")
    def default_contractid(self) -> str:
        return pulumi.get(self, "default_contractid")

    @property
    @pulumi.getter(name="defaultGroupid")
    def default_groupid(self) -> int:
        return pulumi.get(self, "default_groupid")

    @property
    @pulumi.getter
    def groupid(self) -> Optional[int]:
        return pulumi.get(self, "groupid")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def json(self) -> str:
        return pulumi.get(self, "json")

    @property
    @pulumi.getter(name="outputText")
    def output_text(self) -> str:
        return pulumi.get(self, "output_text")


class AwaitableGetAppSecContractsGroupsResult(GetAppSecContractsGroupsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAppSecContractsGroupsResult(
            contractid=self.contractid,
            default_contractid=self.default_contractid,
            default_groupid=self.default_groupid,
            groupid=self.groupid,
            id=self.id,
            json=self.json,
            output_text=self.output_text)


def get_app_sec_contracts_groups(contractid: Optional[str] = None,
                                 groupid: Optional[int] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAppSecContractsGroupsResult:
    """
    **Scopes**: Contract; group

    Returns information about the contracts and groups associated with your account. Among other things, this information is required to create a new security configuration and to return a list of the hostnames available for use in a security policy. The returned information for this data source is described in the [List contracts and groups](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcontractsandgroupswithksdorwaf) of the Application Security API.

    **Related API Endpoint**: [/appsec/v1/contracts-groups](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcontractsandgroupswithksdorwaf)

    ## Example Usage

    Basic usage:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    contracts_groups = akamai.get_app_sec_contracts_groups(contractid="5-2WA382",
        groupid=12198)
    pulumi.export("contractsGroupsList", contracts_groups.output_text)
    pulumi.export("contractsGroupsJson", contracts_groups.json)
    pulumi.export("contractGroupsDefaultContractid", contracts_groups.default_contractid)
    pulumi.export("contractGroupsDefaultGroupid", contracts_groups.default_groupid)
    ```
    ## Output Options

    The following options can be used to determine the information returned, and how that returned information is formatted:

    - `json`. JSON-formatted list of contract and group information.
    - `output_text`. Tabular report of contract and group information.
    - `default_contractid`. Default contract ID for the specified contract and group.
    - `default_groupid`. Default group ID for the specified contract and group.


    :param str contractid: . Unique identifier of an Akamai contract. If not included, information is returned for all the Akamai contracts associated with your account.
    :param int groupid: . Unique identifier of a contract group. If not included, information is returned for all the groups associated with your account.
    """
    __args__ = dict()
    __args__['contractid'] = contractid
    __args__['groupid'] = groupid
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('akamai:index/getAppSecContractsGroups:getAppSecContractsGroups', __args__, opts=opts, typ=GetAppSecContractsGroupsResult).value

    return AwaitableGetAppSecContractsGroupsResult(
        contractid=__ret__.contractid,
        default_contractid=__ret__.default_contractid,
        default_groupid=__ret__.default_groupid,
        groupid=__ret__.groupid,
        id=__ret__.id,
        json=__ret__.json,
        output_text=__ret__.output_text)


@_utilities.lift_output_func(get_app_sec_contracts_groups)
def get_app_sec_contracts_groups_output(contractid: Optional[pulumi.Input[Optional[str]]] = None,
                                        groupid: Optional[pulumi.Input[Optional[int]]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAppSecContractsGroupsResult]:
    """
    **Scopes**: Contract; group

    Returns information about the contracts and groups associated with your account. Among other things, this information is required to create a new security configuration and to return a list of the hostnames available for use in a security policy. The returned information for this data source is described in the [List contracts and groups](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcontractsandgroupswithksdorwaf) of the Application Security API.

    **Related API Endpoint**: [/appsec/v1/contracts-groups](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcontractsandgroupswithksdorwaf)

    ## Example Usage

    Basic usage:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    contracts_groups = akamai.get_app_sec_contracts_groups(contractid="5-2WA382",
        groupid=12198)
    pulumi.export("contractsGroupsList", contracts_groups.output_text)
    pulumi.export("contractsGroupsJson", contracts_groups.json)
    pulumi.export("contractGroupsDefaultContractid", contracts_groups.default_contractid)
    pulumi.export("contractGroupsDefaultGroupid", contracts_groups.default_groupid)
    ```
    ## Output Options

    The following options can be used to determine the information returned, and how that returned information is formatted:

    - `json`. JSON-formatted list of contract and group information.
    - `output_text`. Tabular report of contract and group information.
    - `default_contractid`. Default contract ID for the specified contract and group.
    - `default_groupid`. Default group ID for the specified contract and group.


    :param str contractid: . Unique identifier of an Akamai contract. If not included, information is returned for all the Akamai contracts associated with your account.
    :param int groupid: . Unique identifier of a contract group. If not included, information is returned for all the groups associated with your account.
    """
    ...
