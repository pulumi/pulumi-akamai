# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetGtmResourcesResult',
    'AwaitableGetGtmResourcesResult',
    'get_gtm_resources',
    'get_gtm_resources_output',
]

@pulumi.output_type
class GetGtmResourcesResult:
    """
    A collection of values returned by getGtmResources.
    """
    def __init__(__self__, domain=None, id=None, resources=None):
        if domain and not isinstance(domain, str):
            raise TypeError("Expected argument 'domain' to be a str")
        pulumi.set(__self__, "domain", domain)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if resources and not isinstance(resources, list):
            raise TypeError("Expected argument 'resources' to be a list")
        pulumi.set(__self__, "resources", resources)

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter
    def id(self) -> str:
        warnings.warn("""Required by the terraform plugin testing framework, always set to `akamai_gtm_resources`.""", DeprecationWarning)
        pulumi.log.warn("""id is deprecated: Required by the terraform plugin testing framework, always set to `akamai_gtm_resources`.""")

        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def resources(self) -> Optional[Sequence['outputs.GetGtmResourcesResourceResult']]:
        return pulumi.get(self, "resources")


class AwaitableGetGtmResourcesResult(GetGtmResourcesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGtmResourcesResult(
            domain=self.domain,
            id=self.id,
            resources=self.resources)


def get_gtm_resources(domain: Optional[str] = None,
                      resources: Optional[Sequence[pulumi.InputType['GetGtmResourcesResourceArgs']]] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGtmResourcesResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['domain'] = domain
    __args__['resources'] = resources
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getGtmResources:getGtmResources', __args__, opts=opts, typ=GetGtmResourcesResult).value

    return AwaitableGetGtmResourcesResult(
        domain=pulumi.get(__ret__, 'domain'),
        id=pulumi.get(__ret__, 'id'),
        resources=pulumi.get(__ret__, 'resources'))


@_utilities.lift_output_func(get_gtm_resources)
def get_gtm_resources_output(domain: Optional[pulumi.Input[str]] = None,
                             resources: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetGtmResourcesResourceArgs']]]]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGtmResourcesResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
