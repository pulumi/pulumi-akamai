# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetEdgekvGroupItemsResult',
    'AwaitableGetEdgekvGroupItemsResult',
    'get_edgekv_group_items',
    'get_edgekv_group_items_output',
]

@pulumi.output_type
class GetEdgekvGroupItemsResult:
    """
    A collection of values returned by getEdgekvGroupItems.
    """
    def __init__(__self__, group_name=None, id=None, items=None, namespace_name=None, network=None):
        if group_name and not isinstance(group_name, str):
            raise TypeError("Expected argument 'group_name' to be a str")
        pulumi.set(__self__, "group_name", group_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if items and not isinstance(items, dict):
            raise TypeError("Expected argument 'items' to be a dict")
        pulumi.set(__self__, "items", items)
        if namespace_name and not isinstance(namespace_name, str):
            raise TypeError("Expected argument 'namespace_name' to be a str")
        pulumi.set(__self__, "namespace_name", namespace_name)
        if network and not isinstance(network, str):
            raise TypeError("Expected argument 'network' to be a str")
        pulumi.set(__self__, "network", network)

    @property
    @pulumi.getter(name="groupName")
    def group_name(self) -> str:
        return pulumi.get(self, "group_name")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def items(self) -> Mapping[str, str]:
        return pulumi.get(self, "items")

    @property
    @pulumi.getter(name="namespaceName")
    def namespace_name(self) -> str:
        return pulumi.get(self, "namespace_name")

    @property
    @pulumi.getter
    def network(self) -> str:
        return pulumi.get(self, "network")


class AwaitableGetEdgekvGroupItemsResult(GetEdgekvGroupItemsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEdgekvGroupItemsResult(
            group_name=self.group_name,
            id=self.id,
            items=self.items,
            namespace_name=self.namespace_name,
            network=self.network)


def get_edgekv_group_items(group_name: Optional[str] = None,
                           namespace_name: Optional[str] = None,
                           network: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEdgekvGroupItemsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['groupName'] = group_name
    __args__['namespaceName'] = namespace_name
    __args__['network'] = network
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getEdgekvGroupItems:getEdgekvGroupItems', __args__, opts=opts, typ=GetEdgekvGroupItemsResult).value

    return AwaitableGetEdgekvGroupItemsResult(
        group_name=pulumi.get(__ret__, 'group_name'),
        id=pulumi.get(__ret__, 'id'),
        items=pulumi.get(__ret__, 'items'),
        namespace_name=pulumi.get(__ret__, 'namespace_name'),
        network=pulumi.get(__ret__, 'network'))


@_utilities.lift_output_func(get_edgekv_group_items)
def get_edgekv_group_items_output(group_name: Optional[pulumi.Input[str]] = None,
                                  namespace_name: Optional[pulumi.Input[str]] = None,
                                  network: Optional[pulumi.Input[str]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetEdgekvGroupItemsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
