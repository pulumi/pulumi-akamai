# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetBotmanAkamaiDefinedBotResult',
    'AwaitableGetBotmanAkamaiDefinedBotResult',
    'get_botman_akamai_defined_bot',
    'get_botman_akamai_defined_bot_output',
]

@pulumi.output_type
class GetBotmanAkamaiDefinedBotResult:
    """
    A collection of values returned by getBotmanAkamaiDefinedBot.
    """
    def __init__(__self__, bot_name=None, id=None, json=None):
        if bot_name and not isinstance(bot_name, str):
            raise TypeError("Expected argument 'bot_name' to be a str")
        pulumi.set(__self__, "bot_name", bot_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if json and not isinstance(json, str):
            raise TypeError("Expected argument 'json' to be a str")
        pulumi.set(__self__, "json", json)

    @property
    @pulumi.getter(name="botName")
    def bot_name(self) -> Optional[str]:
        return pulumi.get(self, "bot_name")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def json(self) -> str:
        return pulumi.get(self, "json")


class AwaitableGetBotmanAkamaiDefinedBotResult(GetBotmanAkamaiDefinedBotResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBotmanAkamaiDefinedBotResult(
            bot_name=self.bot_name,
            id=self.id,
            json=self.json)


def get_botman_akamai_defined_bot(bot_name: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBotmanAkamaiDefinedBotResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['botName'] = bot_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getBotmanAkamaiDefinedBot:getBotmanAkamaiDefinedBot', __args__, opts=opts, typ=GetBotmanAkamaiDefinedBotResult).value

    return AwaitableGetBotmanAkamaiDefinedBotResult(
        bot_name=pulumi.get(__ret__, 'bot_name'),
        id=pulumi.get(__ret__, 'id'),
        json=pulumi.get(__ret__, 'json'))


@_utilities.lift_output_func(get_botman_akamai_defined_bot)
def get_botman_akamai_defined_bot_output(bot_name: Optional[pulumi.Input[Optional[str]]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBotmanAkamaiDefinedBotResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
