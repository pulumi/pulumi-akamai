# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetEdgekvGroupsResult',
    'AwaitableGetEdgekvGroupsResult',
    'get_edgekv_groups',
    'get_edgekv_groups_output',
]

@pulumi.output_type
class GetEdgekvGroupsResult:
    """
    A collection of values returned by getEdgekvGroups.
    """
    def __init__(__self__, groups=None, id=None, namespace_name=None, network=None):
        if groups and not isinstance(groups, list):
            raise TypeError("Expected argument 'groups' to be a list")
        pulumi.set(__self__, "groups", groups)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if namespace_name and not isinstance(namespace_name, str):
            raise TypeError("Expected argument 'namespace_name' to be a str")
        pulumi.set(__self__, "namespace_name", namespace_name)
        if network and not isinstance(network, str):
            raise TypeError("Expected argument 'network' to be a str")
        pulumi.set(__self__, "network", network)

    @property
    @pulumi.getter
    def groups(self) -> Sequence[str]:
        return pulumi.get(self, "groups")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="namespaceName")
    def namespace_name(self) -> str:
        return pulumi.get(self, "namespace_name")

    @property
    @pulumi.getter
    def network(self) -> str:
        return pulumi.get(self, "network")


class AwaitableGetEdgekvGroupsResult(GetEdgekvGroupsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEdgekvGroupsResult(
            groups=self.groups,
            id=self.id,
            namespace_name=self.namespace_name,
            network=self.network)


def get_edgekv_groups(namespace_name: Optional[str] = None,
                      network: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEdgekvGroupsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['namespaceName'] = namespace_name
    __args__['network'] = network
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getEdgekvGroups:getEdgekvGroups', __args__, opts=opts, typ=GetEdgekvGroupsResult).value

    return AwaitableGetEdgekvGroupsResult(
        groups=pulumi.get(__ret__, 'groups'),
        id=pulumi.get(__ret__, 'id'),
        namespace_name=pulumi.get(__ret__, 'namespace_name'),
        network=pulumi.get(__ret__, 'network'))


@_utilities.lift_output_func(get_edgekv_groups)
def get_edgekv_groups_output(namespace_name: Optional[pulumi.Input[str]] = None,
                             network: Optional[pulumi.Input[str]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetEdgekvGroupsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
