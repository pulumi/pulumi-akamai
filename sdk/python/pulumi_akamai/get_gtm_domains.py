# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetGtmDomainsResult',
    'AwaitableGetGtmDomainsResult',
    'get_gtm_domains',
    'get_gtm_domains_output',
]

@pulumi.output_type
class GetGtmDomainsResult:
    """
    A collection of values returned by getGtmDomains.
    """
    def __init__(__self__, domains=None, id=None):
        if domains and not isinstance(domains, list):
            raise TypeError("Expected argument 'domains' to be a list")
        pulumi.set(__self__, "domains", domains)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def domains(self) -> Optional[Sequence['outputs.GetGtmDomainsDomainResult']]:
        return pulumi.get(self, "domains")

    @property
    @pulumi.getter
    def id(self) -> str:
        warnings.warn("""Required by the terraform plugin testing framework, always set to `akamai_gtm_domains`.""", DeprecationWarning)
        pulumi.log.warn("""id is deprecated: Required by the terraform plugin testing framework, always set to `akamai_gtm_domains`.""")

        return pulumi.get(self, "id")


class AwaitableGetGtmDomainsResult(GetGtmDomainsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGtmDomainsResult(
            domains=self.domains,
            id=self.id)


def get_gtm_domains(domains: Optional[Sequence[pulumi.InputType['GetGtmDomainsDomainArgs']]] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGtmDomainsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['domains'] = domains
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getGtmDomains:getGtmDomains', __args__, opts=opts, typ=GetGtmDomainsResult).value

    return AwaitableGetGtmDomainsResult(
        domains=pulumi.get(__ret__, 'domains'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_gtm_domains)
def get_gtm_domains_output(domains: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetGtmDomainsDomainArgs']]]]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGtmDomainsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
