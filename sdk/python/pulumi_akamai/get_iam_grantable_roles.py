# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetIamGrantableRolesResult',
    'AwaitableGetIamGrantableRolesResult',
    'get_iam_grantable_roles',
]

@pulumi.output_type
class GetIamGrantableRolesResult:
    """
    A collection of values returned by getIamGrantableRoles.
    """
    def __init__(__self__, grantable_roles=None, id=None):
        if grantable_roles and not isinstance(grantable_roles, list):
            raise TypeError("Expected argument 'grantable_roles' to be a list")
        pulumi.set(__self__, "grantable_roles", grantable_roles)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="grantableRoles")
    def grantable_roles(self) -> Sequence['outputs.GetIamGrantableRolesGrantableRoleResult']:
        return pulumi.get(self, "grantable_roles")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetIamGrantableRolesResult(GetIamGrantableRolesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIamGrantableRolesResult(
            grantable_roles=self.grantable_roles,
            id=self.id)


def get_iam_grantable_roles(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIamGrantableRolesResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getIamGrantableRoles:getIamGrantableRoles', __args__, opts=opts, typ=GetIamGrantableRolesResult).value

    return AwaitableGetIamGrantableRolesResult(
        grantable_roles=pulumi.get(__ret__, 'grantable_roles'),
        id=pulumi.get(__ret__, 'id'))
