# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetPropertyRulesBuilderResult',
    'AwaitableGetPropertyRulesBuilderResult',
    'get_property_rules_builder',
    'get_property_rules_builder_output',
]

@pulumi.output_type
class GetPropertyRulesBuilderResult:
    """
    A collection of values returned by getPropertyRulesBuilder.
    """
    def __init__(__self__, id=None, json=None, rule_format=None, rules_v20230105=None, rules_v20230530=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if json and not isinstance(json, str):
            raise TypeError("Expected argument 'json' to be a str")
        pulumi.set(__self__, "json", json)
        if rule_format and not isinstance(rule_format, str):
            raise TypeError("Expected argument 'rule_format' to be a str")
        pulumi.set(__self__, "rule_format", rule_format)
        if rules_v20230105 and not isinstance(rules_v20230105, dict):
            raise TypeError("Expected argument 'rules_v20230105' to be a dict")
        pulumi.set(__self__, "rules_v20230105", rules_v20230105)
        if rules_v20230530 and not isinstance(rules_v20230530, dict):
            raise TypeError("Expected argument 'rules_v20230530' to be a dict")
        pulumi.set(__self__, "rules_v20230530", rules_v20230530)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def json(self) -> str:
        return pulumi.get(self, "json")

    @property
    @pulumi.getter(name="ruleFormat")
    def rule_format(self) -> str:
        return pulumi.get(self, "rule_format")

    @property
    @pulumi.getter(name="rulesV20230105")
    def rules_v20230105(self) -> Optional['outputs.GetPropertyRulesBuilderRulesV20230105Result']:
        return pulumi.get(self, "rules_v20230105")

    @property
    @pulumi.getter(name="rulesV20230530")
    def rules_v20230530(self) -> Optional['outputs.GetPropertyRulesBuilderRulesV20230530Result']:
        return pulumi.get(self, "rules_v20230530")


class AwaitableGetPropertyRulesBuilderResult(GetPropertyRulesBuilderResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPropertyRulesBuilderResult(
            id=self.id,
            json=self.json,
            rule_format=self.rule_format,
            rules_v20230105=self.rules_v20230105,
            rules_v20230530=self.rules_v20230530)


def get_property_rules_builder(rules_v20230105: Optional[pulumi.InputType['GetPropertyRulesBuilderRulesV20230105Args']] = None,
                               rules_v20230530: Optional[pulumi.InputType['GetPropertyRulesBuilderRulesV20230530Args']] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPropertyRulesBuilderResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['rulesV20230105'] = rules_v20230105
    __args__['rulesV20230530'] = rules_v20230530
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getPropertyRulesBuilder:getPropertyRulesBuilder', __args__, opts=opts, typ=GetPropertyRulesBuilderResult).value

    return AwaitableGetPropertyRulesBuilderResult(
        id=pulumi.get(__ret__, 'id'),
        json=pulumi.get(__ret__, 'json'),
        rule_format=pulumi.get(__ret__, 'rule_format'),
        rules_v20230105=pulumi.get(__ret__, 'rules_v20230105'),
        rules_v20230530=pulumi.get(__ret__, 'rules_v20230530'))


@_utilities.lift_output_func(get_property_rules_builder)
def get_property_rules_builder_output(rules_v20230105: Optional[pulumi.Input[Optional[pulumi.InputType['GetPropertyRulesBuilderRulesV20230105Args']]]] = None,
                                      rules_v20230530: Optional[pulumi.Input[Optional[pulumi.InputType['GetPropertyRulesBuilderRulesV20230530Args']]]] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPropertyRulesBuilderResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
