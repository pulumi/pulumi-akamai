# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetAppSecThreatIntelResult',
    'AwaitableGetAppSecThreatIntelResult',
    'get_app_sec_threat_intel',
    'get_app_sec_threat_intel_output',
]

@pulumi.output_type
class GetAppSecThreatIntelResult:
    """
    A collection of values returned by getAppSecThreatIntel.
    """
    def __init__(__self__, config_id=None, id=None, json=None, output_text=None, security_policy_id=None, threat_intel=None):
        if config_id and not isinstance(config_id, int):
            raise TypeError("Expected argument 'config_id' to be a int")
        pulumi.set(__self__, "config_id", config_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if json and not isinstance(json, str):
            raise TypeError("Expected argument 'json' to be a str")
        pulumi.set(__self__, "json", json)
        if output_text and not isinstance(output_text, str):
            raise TypeError("Expected argument 'output_text' to be a str")
        pulumi.set(__self__, "output_text", output_text)
        if security_policy_id and not isinstance(security_policy_id, str):
            raise TypeError("Expected argument 'security_policy_id' to be a str")
        pulumi.set(__self__, "security_policy_id", security_policy_id)
        if threat_intel and not isinstance(threat_intel, str):
            raise TypeError("Expected argument 'threat_intel' to be a str")
        pulumi.set(__self__, "threat_intel", threat_intel)

    @property
    @pulumi.getter(name="configId")
    def config_id(self) -> int:
        return pulumi.get(self, "config_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def json(self) -> str:
        return pulumi.get(self, "json")

    @property
    @pulumi.getter(name="outputText")
    def output_text(self) -> str:
        return pulumi.get(self, "output_text")

    @property
    @pulumi.getter(name="securityPolicyId")
    def security_policy_id(self) -> str:
        return pulumi.get(self, "security_policy_id")

    @property
    @pulumi.getter(name="threatIntel")
    def threat_intel(self) -> str:
        return pulumi.get(self, "threat_intel")


class AwaitableGetAppSecThreatIntelResult(GetAppSecThreatIntelResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAppSecThreatIntelResult(
            config_id=self.config_id,
            id=self.id,
            json=self.json,
            output_text=self.output_text,
            security_policy_id=self.security_policy_id,
            threat_intel=self.threat_intel)


def get_app_sec_threat_intel(config_id: Optional[int] = None,
                             security_policy_id: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAppSecThreatIntelResult:
    """
    **Scopes**: Security policy

    Returns threat intelligence settings for a security policy Note that this data source is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information on ASE, please contact your Akamai representative.

    **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rules/threat-intel](https://techdocs.akamai.com/application-security/reference/get-rules-threat-intel)

    ## Example Usage

    Basic usage:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    configuration = akamai.get_app_sec_configuration(name="Documentation")
    threat_intel_app_sec_threat_intel = akamai.get_app_sec_threat_intel(config_id=configuration.config_id,
        security_policy_id="gms1_134637")
    pulumi.export("threatIntel", threat_intel_app_sec_threat_intel.threat_intel)
    pulumi.export("json", threat_intel_app_sec_threat_intel.json)
    pulumi.export("outputText", threat_intel_app_sec_threat_intel.output_text)
    ```
    ## Output Options

    The following options can be used to determine the information returned, and how that returned information is formatted:

    - `threat_intel`. Reports the threat Intelligence setting, either **on** or **off**.
    - `json`. JSON-formatted threat intelligence report.
    - `output_text`. Tabular report of the threat intelligence information.


    :param int config_id: . Unique identifier of the security configuration associated with the threat intelligence settings.
    :param str security_policy_id: . Unique identifier of the security policy associated with the threat intelligence settings.
    """
    __args__ = dict()
    __args__['configId'] = config_id
    __args__['securityPolicyId'] = security_policy_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getAppSecThreatIntel:getAppSecThreatIntel', __args__, opts=opts, typ=GetAppSecThreatIntelResult).value

    return AwaitableGetAppSecThreatIntelResult(
        config_id=__ret__.config_id,
        id=__ret__.id,
        json=__ret__.json,
        output_text=__ret__.output_text,
        security_policy_id=__ret__.security_policy_id,
        threat_intel=__ret__.threat_intel)


@_utilities.lift_output_func(get_app_sec_threat_intel)
def get_app_sec_threat_intel_output(config_id: Optional[pulumi.Input[int]] = None,
                                    security_policy_id: Optional[pulumi.Input[str]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAppSecThreatIntelResult]:
    """
    **Scopes**: Security policy

    Returns threat intelligence settings for a security policy Note that this data source is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information on ASE, please contact your Akamai representative.

    **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rules/threat-intel](https://techdocs.akamai.com/application-security/reference/get-rules-threat-intel)

    ## Example Usage

    Basic usage:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    configuration = akamai.get_app_sec_configuration(name="Documentation")
    threat_intel_app_sec_threat_intel = akamai.get_app_sec_threat_intel(config_id=configuration.config_id,
        security_policy_id="gms1_134637")
    pulumi.export("threatIntel", threat_intel_app_sec_threat_intel.threat_intel)
    pulumi.export("json", threat_intel_app_sec_threat_intel.json)
    pulumi.export("outputText", threat_intel_app_sec_threat_intel.output_text)
    ```
    ## Output Options

    The following options can be used to determine the information returned, and how that returned information is formatted:

    - `threat_intel`. Reports the threat Intelligence setting, either **on** or **off**.
    - `json`. JSON-formatted threat intelligence report.
    - `output_text`. Tabular report of the threat intelligence information.


    :param int config_id: . Unique identifier of the security configuration associated with the threat intelligence settings.
    :param str security_policy_id: . Unique identifier of the security policy associated with the threat intelligence settings.
    """
    ...
