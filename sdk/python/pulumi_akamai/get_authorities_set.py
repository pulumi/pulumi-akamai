# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetAuthoritiesSetResult',
    'AwaitableGetAuthoritiesSetResult',
    'get_authorities_set',
    'get_authorities_set_output',
]

@pulumi.output_type
class GetAuthoritiesSetResult:
    """
    A collection of values returned by getAuthoritiesSet.
    """
    def __init__(__self__, authorities=None, contract=None, id=None):
        if authorities and not isinstance(authorities, list):
            raise TypeError("Expected argument 'authorities' to be a list")
        pulumi.set(__self__, "authorities", authorities)
        if contract and not isinstance(contract, str):
            raise TypeError("Expected argument 'contract' to be a str")
        pulumi.set(__self__, "contract", contract)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def authorities(self) -> Sequence[str]:
        return pulumi.get(self, "authorities")

    @property
    @pulumi.getter
    def contract(self) -> str:
        return pulumi.get(self, "contract")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetAuthoritiesSetResult(GetAuthoritiesSetResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAuthoritiesSetResult(
            authorities=self.authorities,
            contract=self.contract,
            id=self.id)


def get_authorities_set(contract: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAuthoritiesSetResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['contract'] = contract
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getAuthoritiesSet:getAuthoritiesSet', __args__, opts=opts, typ=GetAuthoritiesSetResult).value

    return AwaitableGetAuthoritiesSetResult(
        authorities=pulumi.get(__ret__, 'authorities'),
        contract=pulumi.get(__ret__, 'contract'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_authorities_set)
def get_authorities_set_output(contract: Optional[pulumi.Input[str]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAuthoritiesSetResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
