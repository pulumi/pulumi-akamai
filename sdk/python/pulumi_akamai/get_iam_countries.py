# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetIamCountriesResult',
    'AwaitableGetIamCountriesResult',
    'get_iam_countries',
]

@pulumi.output_type
class GetIamCountriesResult:
    """
    A collection of values returned by getIamCountries.
    """
    def __init__(__self__, countries=None, id=None):
        if countries and not isinstance(countries, list):
            raise TypeError("Expected argument 'countries' to be a list")
        pulumi.set(__self__, "countries", countries)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def countries(self) -> Sequence[str]:
        return pulumi.get(self, "countries")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetIamCountriesResult(GetIamCountriesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIamCountriesResult(
            countries=self.countries,
            id=self.id)


def get_iam_countries(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIamCountriesResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getIamCountries:getIamCountries', __args__, opts=opts, typ=GetIamCountriesResult).value

    return AwaitableGetIamCountriesResult(
        countries=pulumi.get(__ret__, 'countries'),
        id=pulumi.get(__ret__, 'id'))
