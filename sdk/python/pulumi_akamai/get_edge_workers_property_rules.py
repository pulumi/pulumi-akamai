# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetEdgeWorkersPropertyRulesResult',
    'AwaitableGetEdgeWorkersPropertyRulesResult',
    'get_edge_workers_property_rules',
    'get_edge_workers_property_rules_output',
]

@pulumi.output_type
class GetEdgeWorkersPropertyRulesResult:
    """
    A collection of values returned by getEdgeWorkersPropertyRules.
    """
    def __init__(__self__, edgeworker_id=None, id=None, json=None):
        if edgeworker_id and not isinstance(edgeworker_id, int):
            raise TypeError("Expected argument 'edgeworker_id' to be a int")
        pulumi.set(__self__, "edgeworker_id", edgeworker_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if json and not isinstance(json, str):
            raise TypeError("Expected argument 'json' to be a str")
        pulumi.set(__self__, "json", json)

    @property
    @pulumi.getter(name="edgeworkerId")
    def edgeworker_id(self) -> int:
        return pulumi.get(self, "edgeworker_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def json(self) -> str:
        return pulumi.get(self, "json")


class AwaitableGetEdgeWorkersPropertyRulesResult(GetEdgeWorkersPropertyRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEdgeWorkersPropertyRulesResult(
            edgeworker_id=self.edgeworker_id,
            id=self.id,
            json=self.json)


def get_edge_workers_property_rules(edgeworker_id: Optional[int] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEdgeWorkersPropertyRulesResult:
    """
    Use this data source to access information about an existing resource.

    :param int edgeworker_id: Unique identifier of an EdgeWorker ID.
    """
    __args__ = dict()
    __args__['edgeworkerId'] = edgeworker_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getEdgeWorkersPropertyRules:getEdgeWorkersPropertyRules', __args__, opts=opts, typ=GetEdgeWorkersPropertyRulesResult).value

    return AwaitableGetEdgeWorkersPropertyRulesResult(
        edgeworker_id=__ret__.edgeworker_id,
        id=__ret__.id,
        json=__ret__.json)


@_utilities.lift_output_func(get_edge_workers_property_rules)
def get_edge_workers_property_rules_output(edgeworker_id: Optional[pulumi.Input[int]] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetEdgeWorkersPropertyRulesResult]:
    """
    Use this data source to access information about an existing resource.

    :param int edgeworker_id: Unique identifier of an EdgeWorker ID.
    """
    ...
