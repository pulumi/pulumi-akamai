# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetDatastreamDatasetFieldsResult',
    'AwaitableGetDatastreamDatasetFieldsResult',
    'get_datastream_dataset_fields',
    'get_datastream_dataset_fields_output',
]

@pulumi.output_type
class GetDatastreamDatasetFieldsResult:
    """
    A collection of values returned by getDatastreamDatasetFields.
    """
    def __init__(__self__, dataset_fields=None, id=None, product_id=None):
        if dataset_fields and not isinstance(dataset_fields, list):
            raise TypeError("Expected argument 'dataset_fields' to be a list")
        pulumi.set(__self__, "dataset_fields", dataset_fields)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if product_id and not isinstance(product_id, str):
            raise TypeError("Expected argument 'product_id' to be a str")
        pulumi.set(__self__, "product_id", product_id)

    @property
    @pulumi.getter(name="datasetFields")
    def dataset_fields(self) -> Sequence['outputs.GetDatastreamDatasetFieldsDatasetFieldResult']:
        return pulumi.get(self, "dataset_fields")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="productId")
    def product_id(self) -> Optional[str]:
        return pulumi.get(self, "product_id")


class AwaitableGetDatastreamDatasetFieldsResult(GetDatastreamDatasetFieldsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDatastreamDatasetFieldsResult(
            dataset_fields=self.dataset_fields,
            id=self.id,
            product_id=self.product_id)


def get_datastream_dataset_fields(product_id: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDatastreamDatasetFieldsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['productId'] = product_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getDatastreamDatasetFields:getDatastreamDatasetFields', __args__, opts=opts, typ=GetDatastreamDatasetFieldsResult).value

    return AwaitableGetDatastreamDatasetFieldsResult(
        dataset_fields=pulumi.get(__ret__, 'dataset_fields'),
        id=pulumi.get(__ret__, 'id'),
        product_id=pulumi.get(__ret__, 'product_id'))


@_utilities.lift_output_func(get_datastream_dataset_fields)
def get_datastream_dataset_fields_output(product_id: Optional[pulumi.Input[Optional[str]]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDatastreamDatasetFieldsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
