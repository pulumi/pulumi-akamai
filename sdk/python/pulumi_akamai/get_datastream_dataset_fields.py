# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetDatastreamDatasetFieldsResult',
    'AwaitableGetDatastreamDatasetFieldsResult',
    'get_datastream_dataset_fields',
    'get_datastream_dataset_fields_output',
]

@pulumi.output_type
class GetDatastreamDatasetFieldsResult:
    """
    A collection of values returned by getDatastreamDatasetFields.
    """
    def __init__(__self__, fields=None, id=None, template_name=None):
        if fields and not isinstance(fields, list):
            raise TypeError("Expected argument 'fields' to be a list")
        pulumi.set(__self__, "fields", fields)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if template_name and not isinstance(template_name, str):
            raise TypeError("Expected argument 'template_name' to be a str")
        pulumi.set(__self__, "template_name", template_name)

    @property
    @pulumi.getter
    def fields(self) -> Sequence['outputs.GetDatastreamDatasetFieldsFieldResult']:
        return pulumi.get(self, "fields")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="templateName")
    def template_name(self) -> Optional[str]:
        return pulumi.get(self, "template_name")


class AwaitableGetDatastreamDatasetFieldsResult(GetDatastreamDatasetFieldsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDatastreamDatasetFieldsResult(
            fields=self.fields,
            id=self.id,
            template_name=self.template_name)


def get_datastream_dataset_fields(template_name: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDatastreamDatasetFieldsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['templateName'] = template_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getDatastreamDatasetFields:getDatastreamDatasetFields', __args__, opts=opts, typ=GetDatastreamDatasetFieldsResult).value

    return AwaitableGetDatastreamDatasetFieldsResult(
        fields=pulumi.get(__ret__, 'fields'),
        id=pulumi.get(__ret__, 'id'),
        template_name=pulumi.get(__ret__, 'template_name'))


@_utilities.lift_output_func(get_datastream_dataset_fields)
def get_datastream_dataset_fields_output(template_name: Optional[pulumi.Input[Optional[str]]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDatastreamDatasetFieldsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
