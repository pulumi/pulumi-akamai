# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetDatastreamDatasetFieldsResult',
    'AwaitableGetDatastreamDatasetFieldsResult',
    'get_datastream_dataset_fields',
    'get_datastream_dataset_fields_output',
]

@pulumi.output_type
class GetDatastreamDatasetFieldsResult:
    """
    A collection of values returned by getDatastreamDatasetFields.
    """
    def __init__(__self__, fields=None, id=None, template_name=None):
        if fields and not isinstance(fields, list):
            raise TypeError("Expected argument 'fields' to be a list")
        pulumi.set(__self__, "fields", fields)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if template_name and not isinstance(template_name, str):
            raise TypeError("Expected argument 'template_name' to be a str")
        pulumi.set(__self__, "template_name", template_name)

    @property
    @pulumi.getter
    def fields(self) -> Sequence['outputs.GetDatastreamDatasetFieldsFieldResult']:
        return pulumi.get(self, "fields")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="templateName")
    def template_name(self) -> Optional[str]:
        return pulumi.get(self, "template_name")


class AwaitableGetDatastreamDatasetFieldsResult(GetDatastreamDatasetFieldsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDatastreamDatasetFieldsResult(
            fields=self.fields,
            id=self.id,
            template_name=self.template_name)


def get_datastream_dataset_fields(template_name: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDatastreamDatasetFieldsResult:
    """
    Use the `get_datastream_dataset_fields` data source to list groups of data set fields available in the template.

    ## Example Usage

    This example returns data set fields for a default template:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    fields = akamai.get_datastream_dataset_fields()
    ```
    ## Attributes reference

    This data source returns these attributes:

    * `fields` - A group of data set fields available in a template, including:
      * `dataset_group_name` - The name of the data set group.
      * `dataset_group_description` - Additional information about the data set group.
      * `dataset_fields` - A list of data set fields available within the data set group, including:
          * `dataset_field_description` - Additional information about the data set field.
          * `dataset_field_id` - Unique identifier for the field.
          * `dataset_field_json_key` - The JSON key for the field in a log line.
          * `dataset_field_name` - The name of the data set field.


    :param str template_name: - (Optional) The name of the data set template you use in your stream configuration. Currently, `EDGE_LOGS` is the only available data set template and the default value for this argument.
    """
    __args__ = dict()
    __args__['templateName'] = template_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getDatastreamDatasetFields:getDatastreamDatasetFields', __args__, opts=opts, typ=GetDatastreamDatasetFieldsResult).value

    return AwaitableGetDatastreamDatasetFieldsResult(
        fields=__ret__.fields,
        id=__ret__.id,
        template_name=__ret__.template_name)


@_utilities.lift_output_func(get_datastream_dataset_fields)
def get_datastream_dataset_fields_output(template_name: Optional[pulumi.Input[Optional[str]]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDatastreamDatasetFieldsResult]:
    """
    Use the `get_datastream_dataset_fields` data source to list groups of data set fields available in the template.

    ## Example Usage

    This example returns data set fields for a default template:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    fields = akamai.get_datastream_dataset_fields()
    ```
    ## Attributes reference

    This data source returns these attributes:

    * `fields` - A group of data set fields available in a template, including:
      * `dataset_group_name` - The name of the data set group.
      * `dataset_group_description` - Additional information about the data set group.
      * `dataset_fields` - A list of data set fields available within the data set group, including:
          * `dataset_field_description` - Additional information about the data set field.
          * `dataset_field_id` - Unique identifier for the field.
          * `dataset_field_json_key` - The JSON key for the field in a log line.
          * `dataset_field_name` - The name of the data set field.


    :param str template_name: - (Optional) The name of the data set template you use in your stream configuration. Currently, `EDGE_LOGS` is the only available data set template and the default value for this argument.
    """
    ...
