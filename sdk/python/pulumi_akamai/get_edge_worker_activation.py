# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetEdgeWorkerActivationResult',
    'AwaitableGetEdgeWorkerActivationResult',
    'get_edge_worker_activation',
    'get_edge_worker_activation_output',
]

@pulumi.output_type
class GetEdgeWorkerActivationResult:
    """
    A collection of values returned by getEdgeWorkerActivation.
    """
    def __init__(__self__, activation_id=None, edgeworker_id=None, id=None, network=None, version=None):
        if activation_id and not isinstance(activation_id, int):
            raise TypeError("Expected argument 'activation_id' to be a int")
        pulumi.set(__self__, "activation_id", activation_id)
        if edgeworker_id and not isinstance(edgeworker_id, int):
            raise TypeError("Expected argument 'edgeworker_id' to be a int")
        pulumi.set(__self__, "edgeworker_id", edgeworker_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if network and not isinstance(network, str):
            raise TypeError("Expected argument 'network' to be a str")
        pulumi.set(__self__, "network", network)
        if version and not isinstance(version, str):
            raise TypeError("Expected argument 'version' to be a str")
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="activationId")
    def activation_id(self) -> int:
        return pulumi.get(self, "activation_id")

    @property
    @pulumi.getter(name="edgeworkerId")
    def edgeworker_id(self) -> int:
        return pulumi.get(self, "edgeworker_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def network(self) -> str:
        return pulumi.get(self, "network")

    @property
    @pulumi.getter
    def version(self) -> str:
        return pulumi.get(self, "version")


class AwaitableGetEdgeWorkerActivationResult(GetEdgeWorkerActivationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEdgeWorkerActivationResult(
            activation_id=self.activation_id,
            edgeworker_id=self.edgeworker_id,
            id=self.id,
            network=self.network,
            version=self.version)


def get_edge_worker_activation(edgeworker_id: Optional[int] = None,
                               network: Optional[str] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEdgeWorkerActivationResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['edgeworkerId'] = edgeworker_id
    __args__['network'] = network
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getEdgeWorkerActivation:getEdgeWorkerActivation', __args__, opts=opts, typ=GetEdgeWorkerActivationResult).value

    return AwaitableGetEdgeWorkerActivationResult(
        activation_id=pulumi.get(__ret__, 'activation_id'),
        edgeworker_id=pulumi.get(__ret__, 'edgeworker_id'),
        id=pulumi.get(__ret__, 'id'),
        network=pulumi.get(__ret__, 'network'),
        version=pulumi.get(__ret__, 'version'))


@_utilities.lift_output_func(get_edge_worker_activation)
def get_edge_worker_activation_output(edgeworker_id: Optional[pulumi.Input[int]] = None,
                                      network: Optional[pulumi.Input[str]] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetEdgeWorkerActivationResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
