// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v9/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCloudwrapperCapacities(ctx *pulumi.Context, args *GetCloudwrapperCapacitiesArgs, opts ...pulumi.InvokeOption) (*GetCloudwrapperCapacitiesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCloudwrapperCapacitiesResult
	err := ctx.Invoke("akamai:index/getCloudwrapperCapacities:getCloudwrapperCapacities", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudwrapperCapacities.
type GetCloudwrapperCapacitiesArgs struct {
	Capacities  []GetCloudwrapperCapacitiesCapacity `pulumi:"capacities"`
	ContractIds []string                            `pulumi:"contractIds"`
}

// A collection of values returned by getCloudwrapperCapacities.
type GetCloudwrapperCapacitiesResult struct {
	Capacities  []GetCloudwrapperCapacitiesCapacity `pulumi:"capacities"`
	ContractIds []string                            `pulumi:"contractIds"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetCloudwrapperCapacitiesOutput(ctx *pulumi.Context, args GetCloudwrapperCapacitiesOutputArgs, opts ...pulumi.InvokeOption) GetCloudwrapperCapacitiesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCloudwrapperCapacitiesResultOutput, error) {
			args := v.(GetCloudwrapperCapacitiesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("akamai:index/getCloudwrapperCapacities:getCloudwrapperCapacities", args, GetCloudwrapperCapacitiesResultOutput{}, options).(GetCloudwrapperCapacitiesResultOutput), nil
		}).(GetCloudwrapperCapacitiesResultOutput)
}

// A collection of arguments for invoking getCloudwrapperCapacities.
type GetCloudwrapperCapacitiesOutputArgs struct {
	Capacities  GetCloudwrapperCapacitiesCapacityArrayInput `pulumi:"capacities"`
	ContractIds pulumi.StringArrayInput                     `pulumi:"contractIds"`
}

func (GetCloudwrapperCapacitiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudwrapperCapacitiesArgs)(nil)).Elem()
}

// A collection of values returned by getCloudwrapperCapacities.
type GetCloudwrapperCapacitiesResultOutput struct{ *pulumi.OutputState }

func (GetCloudwrapperCapacitiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudwrapperCapacitiesResult)(nil)).Elem()
}

func (o GetCloudwrapperCapacitiesResultOutput) ToGetCloudwrapperCapacitiesResultOutput() GetCloudwrapperCapacitiesResultOutput {
	return o
}

func (o GetCloudwrapperCapacitiesResultOutput) ToGetCloudwrapperCapacitiesResultOutputWithContext(ctx context.Context) GetCloudwrapperCapacitiesResultOutput {
	return o
}

func (o GetCloudwrapperCapacitiesResultOutput) Capacities() GetCloudwrapperCapacitiesCapacityArrayOutput {
	return o.ApplyT(func(v GetCloudwrapperCapacitiesResult) []GetCloudwrapperCapacitiesCapacity { return v.Capacities }).(GetCloudwrapperCapacitiesCapacityArrayOutput)
}

func (o GetCloudwrapperCapacitiesResultOutput) ContractIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudwrapperCapacitiesResult) []string { return v.ContractIds }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudwrapperCapacitiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudwrapperCapacitiesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudwrapperCapacitiesResultOutput{})
}
