// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `EdgeWorker` data source to get an EdgeWorker for a given EdgeWorker ID.
//
// ## Example Usage
//
// This example returns the resource tier fields for the selected EdgeWorker ID:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := akamai.LookupEdgeWorker(ctx, &akamai.LookupEdgeWorkerArgs{
//				EdgeworkerId: 3,
//				LocalBundle:  pulumi.StringRef("test_tmp/TestDataEdgeWorkersEdgeWorker/bundles/edgeworker_one_warning.tgz"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Attributes reference
//
// This data source returns these attributes:
//
// * `name` - The EdgeWorker name.
// * `groupId` - Defines the group association for the EdgeWorker.
// * `resourceTierId` - The unique identifier of a resource tier.
// * `localBundleHash` - The local bundle hash for the EdgeWorker. It's used to identify content changes for the bundle.
// * `version` - The bundle version.
// * `warnings` - The list of warnings returned by EdgeWorker validation.
func LookupEdgeWorker(ctx *pulumi.Context, args *LookupEdgeWorkerArgs, opts ...pulumi.InvokeOption) (*LookupEdgeWorkerResult, error) {
	var rv LookupEdgeWorkerResult
	err := ctx.Invoke("akamai:index/getEdgeWorker:getEdgeWorker", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEdgeWorker.
type LookupEdgeWorkerArgs struct {
	// The unique identifier of the EdgeWorker.
	EdgeworkerId int `pulumi:"edgeworkerId"`
	// The path where the EdgeWorkers `.tgz` code bundle will be stored.
	LocalBundle *string `pulumi:"localBundle"`
}

// A collection of values returned by getEdgeWorker.
type LookupEdgeWorkerResult struct {
	EdgeworkerId int    `pulumi:"edgeworkerId"`
	GroupId      string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	LocalBundle     *string  `pulumi:"localBundle"`
	LocalBundleHash string   `pulumi:"localBundleHash"`
	Name            string   `pulumi:"name"`
	ResourceTierId  int      `pulumi:"resourceTierId"`
	Version         string   `pulumi:"version"`
	Warnings        []string `pulumi:"warnings"`
}

func LookupEdgeWorkerOutput(ctx *pulumi.Context, args LookupEdgeWorkerOutputArgs, opts ...pulumi.InvokeOption) LookupEdgeWorkerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEdgeWorkerResult, error) {
			args := v.(LookupEdgeWorkerArgs)
			r, err := LookupEdgeWorker(ctx, &args, opts...)
			var s LookupEdgeWorkerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEdgeWorkerResultOutput)
}

// A collection of arguments for invoking getEdgeWorker.
type LookupEdgeWorkerOutputArgs struct {
	// The unique identifier of the EdgeWorker.
	EdgeworkerId pulumi.IntInput `pulumi:"edgeworkerId"`
	// The path where the EdgeWorkers `.tgz` code bundle will be stored.
	LocalBundle pulumi.StringPtrInput `pulumi:"localBundle"`
}

func (LookupEdgeWorkerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgeWorkerArgs)(nil)).Elem()
}

// A collection of values returned by getEdgeWorker.
type LookupEdgeWorkerResultOutput struct{ *pulumi.OutputState }

func (LookupEdgeWorkerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgeWorkerResult)(nil)).Elem()
}

func (o LookupEdgeWorkerResultOutput) ToLookupEdgeWorkerResultOutput() LookupEdgeWorkerResultOutput {
	return o
}

func (o LookupEdgeWorkerResultOutput) ToLookupEdgeWorkerResultOutputWithContext(ctx context.Context) LookupEdgeWorkerResultOutput {
	return o
}

func (o LookupEdgeWorkerResultOutput) EdgeworkerId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupEdgeWorkerResult) int { return v.EdgeworkerId }).(pulumi.IntOutput)
}

func (o LookupEdgeWorkerResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeWorkerResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupEdgeWorkerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeWorkerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupEdgeWorkerResultOutput) LocalBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEdgeWorkerResult) *string { return v.LocalBundle }).(pulumi.StringPtrOutput)
}

func (o LookupEdgeWorkerResultOutput) LocalBundleHash() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeWorkerResult) string { return v.LocalBundleHash }).(pulumi.StringOutput)
}

func (o LookupEdgeWorkerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeWorkerResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupEdgeWorkerResultOutput) ResourceTierId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupEdgeWorkerResult) int { return v.ResourceTierId }).(pulumi.IntOutput)
}

func (o LookupEdgeWorkerResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeWorkerResult) string { return v.Version }).(pulumi.StringOutput)
}

func (o LookupEdgeWorkerResultOutput) Warnings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupEdgeWorkerResult) []string { return v.Warnings }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEdgeWorkerResultOutput{})
}
