// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanCustomBotCategoryAction struct {
	pulumi.CustomResourceState

	CategoryId              pulumi.StringOutput `pulumi:"categoryId"`
	ConfigId                pulumi.IntOutput    `pulumi:"configId"`
	CustomBotCategoryAction pulumi.StringOutput `pulumi:"customBotCategoryAction"`
	SecurityPolicyId        pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewBotmanCustomBotCategoryAction registers a new resource with the given unique name, arguments, and options.
func NewBotmanCustomBotCategoryAction(ctx *pulumi.Context,
	name string, args *BotmanCustomBotCategoryActionArgs, opts ...pulumi.ResourceOption) (*BotmanCustomBotCategoryAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CategoryId == nil {
		return nil, errors.New("invalid value for required argument 'CategoryId'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.CustomBotCategoryAction == nil {
		return nil, errors.New("invalid value for required argument 'CustomBotCategoryAction'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BotmanCustomBotCategoryAction
	err := ctx.RegisterResource("akamai:index/botmanCustomBotCategoryAction:BotmanCustomBotCategoryAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanCustomBotCategoryAction gets an existing BotmanCustomBotCategoryAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanCustomBotCategoryAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanCustomBotCategoryActionState, opts ...pulumi.ResourceOption) (*BotmanCustomBotCategoryAction, error) {
	var resource BotmanCustomBotCategoryAction
	err := ctx.ReadResource("akamai:index/botmanCustomBotCategoryAction:BotmanCustomBotCategoryAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanCustomBotCategoryAction resources.
type botmanCustomBotCategoryActionState struct {
	CategoryId              *string `pulumi:"categoryId"`
	ConfigId                *int    `pulumi:"configId"`
	CustomBotCategoryAction *string `pulumi:"customBotCategoryAction"`
	SecurityPolicyId        *string `pulumi:"securityPolicyId"`
}

type BotmanCustomBotCategoryActionState struct {
	CategoryId              pulumi.StringPtrInput
	ConfigId                pulumi.IntPtrInput
	CustomBotCategoryAction pulumi.StringPtrInput
	SecurityPolicyId        pulumi.StringPtrInput
}

func (BotmanCustomBotCategoryActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomBotCategoryActionState)(nil)).Elem()
}

type botmanCustomBotCategoryActionArgs struct {
	CategoryId              string `pulumi:"categoryId"`
	ConfigId                int    `pulumi:"configId"`
	CustomBotCategoryAction string `pulumi:"customBotCategoryAction"`
	SecurityPolicyId        string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a BotmanCustomBotCategoryAction resource.
type BotmanCustomBotCategoryActionArgs struct {
	CategoryId              pulumi.StringInput
	ConfigId                pulumi.IntInput
	CustomBotCategoryAction pulumi.StringInput
	SecurityPolicyId        pulumi.StringInput
}

func (BotmanCustomBotCategoryActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomBotCategoryActionArgs)(nil)).Elem()
}

type BotmanCustomBotCategoryActionInput interface {
	pulumi.Input

	ToBotmanCustomBotCategoryActionOutput() BotmanCustomBotCategoryActionOutput
	ToBotmanCustomBotCategoryActionOutputWithContext(ctx context.Context) BotmanCustomBotCategoryActionOutput
}

func (*BotmanCustomBotCategoryAction) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomBotCategoryAction)(nil)).Elem()
}

func (i *BotmanCustomBotCategoryAction) ToBotmanCustomBotCategoryActionOutput() BotmanCustomBotCategoryActionOutput {
	return i.ToBotmanCustomBotCategoryActionOutputWithContext(context.Background())
}

func (i *BotmanCustomBotCategoryAction) ToBotmanCustomBotCategoryActionOutputWithContext(ctx context.Context) BotmanCustomBotCategoryActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategoryActionOutput)
}

// BotmanCustomBotCategoryActionArrayInput is an input type that accepts BotmanCustomBotCategoryActionArray and BotmanCustomBotCategoryActionArrayOutput values.
// You can construct a concrete instance of `BotmanCustomBotCategoryActionArrayInput` via:
//
//	BotmanCustomBotCategoryActionArray{ BotmanCustomBotCategoryActionArgs{...} }
type BotmanCustomBotCategoryActionArrayInput interface {
	pulumi.Input

	ToBotmanCustomBotCategoryActionArrayOutput() BotmanCustomBotCategoryActionArrayOutput
	ToBotmanCustomBotCategoryActionArrayOutputWithContext(context.Context) BotmanCustomBotCategoryActionArrayOutput
}

type BotmanCustomBotCategoryActionArray []BotmanCustomBotCategoryActionInput

func (BotmanCustomBotCategoryActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomBotCategoryAction)(nil)).Elem()
}

func (i BotmanCustomBotCategoryActionArray) ToBotmanCustomBotCategoryActionArrayOutput() BotmanCustomBotCategoryActionArrayOutput {
	return i.ToBotmanCustomBotCategoryActionArrayOutputWithContext(context.Background())
}

func (i BotmanCustomBotCategoryActionArray) ToBotmanCustomBotCategoryActionArrayOutputWithContext(ctx context.Context) BotmanCustomBotCategoryActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategoryActionArrayOutput)
}

// BotmanCustomBotCategoryActionMapInput is an input type that accepts BotmanCustomBotCategoryActionMap and BotmanCustomBotCategoryActionMapOutput values.
// You can construct a concrete instance of `BotmanCustomBotCategoryActionMapInput` via:
//
//	BotmanCustomBotCategoryActionMap{ "key": BotmanCustomBotCategoryActionArgs{...} }
type BotmanCustomBotCategoryActionMapInput interface {
	pulumi.Input

	ToBotmanCustomBotCategoryActionMapOutput() BotmanCustomBotCategoryActionMapOutput
	ToBotmanCustomBotCategoryActionMapOutputWithContext(context.Context) BotmanCustomBotCategoryActionMapOutput
}

type BotmanCustomBotCategoryActionMap map[string]BotmanCustomBotCategoryActionInput

func (BotmanCustomBotCategoryActionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomBotCategoryAction)(nil)).Elem()
}

func (i BotmanCustomBotCategoryActionMap) ToBotmanCustomBotCategoryActionMapOutput() BotmanCustomBotCategoryActionMapOutput {
	return i.ToBotmanCustomBotCategoryActionMapOutputWithContext(context.Background())
}

func (i BotmanCustomBotCategoryActionMap) ToBotmanCustomBotCategoryActionMapOutputWithContext(ctx context.Context) BotmanCustomBotCategoryActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategoryActionMapOutput)
}

type BotmanCustomBotCategoryActionOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategoryActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomBotCategoryAction)(nil)).Elem()
}

func (o BotmanCustomBotCategoryActionOutput) ToBotmanCustomBotCategoryActionOutput() BotmanCustomBotCategoryActionOutput {
	return o
}

func (o BotmanCustomBotCategoryActionOutput) ToBotmanCustomBotCategoryActionOutputWithContext(ctx context.Context) BotmanCustomBotCategoryActionOutput {
	return o
}

func (o BotmanCustomBotCategoryActionOutput) CategoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategoryAction) pulumi.StringOutput { return v.CategoryId }).(pulumi.StringOutput)
}

func (o BotmanCustomBotCategoryActionOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategoryAction) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

func (o BotmanCustomBotCategoryActionOutput) CustomBotCategoryAction() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategoryAction) pulumi.StringOutput { return v.CustomBotCategoryAction }).(pulumi.StringOutput)
}

func (o BotmanCustomBotCategoryActionOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategoryAction) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type BotmanCustomBotCategoryActionArrayOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategoryActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomBotCategoryAction)(nil)).Elem()
}

func (o BotmanCustomBotCategoryActionArrayOutput) ToBotmanCustomBotCategoryActionArrayOutput() BotmanCustomBotCategoryActionArrayOutput {
	return o
}

func (o BotmanCustomBotCategoryActionArrayOutput) ToBotmanCustomBotCategoryActionArrayOutputWithContext(ctx context.Context) BotmanCustomBotCategoryActionArrayOutput {
	return o
}

func (o BotmanCustomBotCategoryActionArrayOutput) Index(i pulumi.IntInput) BotmanCustomBotCategoryActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanCustomBotCategoryAction {
		return vs[0].([]*BotmanCustomBotCategoryAction)[vs[1].(int)]
	}).(BotmanCustomBotCategoryActionOutput)
}

type BotmanCustomBotCategoryActionMapOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategoryActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomBotCategoryAction)(nil)).Elem()
}

func (o BotmanCustomBotCategoryActionMapOutput) ToBotmanCustomBotCategoryActionMapOutput() BotmanCustomBotCategoryActionMapOutput {
	return o
}

func (o BotmanCustomBotCategoryActionMapOutput) ToBotmanCustomBotCategoryActionMapOutputWithContext(ctx context.Context) BotmanCustomBotCategoryActionMapOutput {
	return o
}

func (o BotmanCustomBotCategoryActionMapOutput) MapIndex(k pulumi.StringInput) BotmanCustomBotCategoryActionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanCustomBotCategoryAction {
		return vs[0].(map[string]*BotmanCustomBotCategoryAction)[vs[1].(string)]
	}).(BotmanCustomBotCategoryActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategoryActionInput)(nil)).Elem(), &BotmanCustomBotCategoryAction{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategoryActionArrayInput)(nil)).Elem(), BotmanCustomBotCategoryActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategoryActionMapInput)(nil)).Elem(), BotmanCustomBotCategoryActionMap{})
	pulumi.RegisterOutputType(BotmanCustomBotCategoryActionOutput{})
	pulumi.RegisterOutputType(BotmanCustomBotCategoryActionArrayOutput{})
	pulumi.RegisterOutputType(BotmanCustomBotCategoryActionMapOutput{})
}
