// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v9/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupIamRole(ctx *pulumi.Context, args *LookupIamRoleArgs, opts ...pulumi.InvokeOption) (*LookupIamRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIamRoleResult
	err := ctx.Invoke("akamai:index/getIamRole:getIamRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIamRole.
type LookupIamRoleArgs struct {
	RoleId int `pulumi:"roleId"`
}

// A collection of values returned by getIamRole.
type LookupIamRoleResult struct {
	Actions      GetIamRoleActions       `pulumi:"actions"`
	CreatedBy    string                  `pulumi:"createdBy"`
	CreatedDate  string                  `pulumi:"createdDate"`
	GrantedRoles []GetIamRoleGrantedRole `pulumi:"grantedRoles"`
	// The provider-assigned unique ID for this managed resource.
	Id              string           `pulumi:"id"`
	ModifiedBy      string           `pulumi:"modifiedBy"`
	ModifiedDate    string           `pulumi:"modifiedDate"`
	RoleDescription string           `pulumi:"roleDescription"`
	RoleId          int              `pulumi:"roleId"`
	RoleName        string           `pulumi:"roleName"`
	Type            string           `pulumi:"type"`
	Users           []GetIamRoleUser `pulumi:"users"`
}

func LookupIamRoleOutput(ctx *pulumi.Context, args LookupIamRoleOutputArgs, opts ...pulumi.InvokeOption) LookupIamRoleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIamRoleResultOutput, error) {
			args := v.(LookupIamRoleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("akamai:index/getIamRole:getIamRole", args, LookupIamRoleResultOutput{}, options).(LookupIamRoleResultOutput), nil
		}).(LookupIamRoleResultOutput)
}

// A collection of arguments for invoking getIamRole.
type LookupIamRoleOutputArgs struct {
	RoleId pulumi.IntInput `pulumi:"roleId"`
}

func (LookupIamRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIamRoleArgs)(nil)).Elem()
}

// A collection of values returned by getIamRole.
type LookupIamRoleResultOutput struct{ *pulumi.OutputState }

func (LookupIamRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIamRoleResult)(nil)).Elem()
}

func (o LookupIamRoleResultOutput) ToLookupIamRoleResultOutput() LookupIamRoleResultOutput {
	return o
}

func (o LookupIamRoleResultOutput) ToLookupIamRoleResultOutputWithContext(ctx context.Context) LookupIamRoleResultOutput {
	return o
}

func (o LookupIamRoleResultOutput) Actions() GetIamRoleActionsOutput {
	return o.ApplyT(func(v LookupIamRoleResult) GetIamRoleActions { return v.Actions }).(GetIamRoleActionsOutput)
}

func (o LookupIamRoleResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamRoleResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

func (o LookupIamRoleResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamRoleResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

func (o LookupIamRoleResultOutput) GrantedRoles() GetIamRoleGrantedRoleArrayOutput {
	return o.ApplyT(func(v LookupIamRoleResult) []GetIamRoleGrantedRole { return v.GrantedRoles }).(GetIamRoleGrantedRoleArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIamRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupIamRoleResultOutput) ModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamRoleResult) string { return v.ModifiedBy }).(pulumi.StringOutput)
}

func (o LookupIamRoleResultOutput) ModifiedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamRoleResult) string { return v.ModifiedDate }).(pulumi.StringOutput)
}

func (o LookupIamRoleResultOutput) RoleDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamRoleResult) string { return v.RoleDescription }).(pulumi.StringOutput)
}

func (o LookupIamRoleResultOutput) RoleId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIamRoleResult) int { return v.RoleId }).(pulumi.IntOutput)
}

func (o LookupIamRoleResultOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamRoleResult) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o LookupIamRoleResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamRoleResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupIamRoleResultOutput) Users() GetIamRoleUserArrayOutput {
	return o.ApplyT(func(v LookupIamRoleResult) []GetIamRoleUser { return v.Users }).(GetIamRoleUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIamRoleResultOutput{})
}
