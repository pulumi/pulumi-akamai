// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanBotManagementSettings struct {
	pulumi.CustomResourceState

	BotManagementSettings pulumi.StringOutput `pulumi:"botManagementSettings"`
	ConfigId              pulumi.IntOutput    `pulumi:"configId"`
	SecurityPolicyId      pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewBotmanBotManagementSettings registers a new resource with the given unique name, arguments, and options.
func NewBotmanBotManagementSettings(ctx *pulumi.Context,
	name string, args *BotmanBotManagementSettingsArgs, opts ...pulumi.ResourceOption) (*BotmanBotManagementSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BotManagementSettings == nil {
		return nil, errors.New("invalid value for required argument 'BotManagementSettings'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	var resource BotmanBotManagementSettings
	err := ctx.RegisterResource("akamai:index/botmanBotManagementSettings:BotmanBotManagementSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanBotManagementSettings gets an existing BotmanBotManagementSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanBotManagementSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanBotManagementSettingsState, opts ...pulumi.ResourceOption) (*BotmanBotManagementSettings, error) {
	var resource BotmanBotManagementSettings
	err := ctx.ReadResource("akamai:index/botmanBotManagementSettings:BotmanBotManagementSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanBotManagementSettings resources.
type botmanBotManagementSettingsState struct {
	BotManagementSettings *string `pulumi:"botManagementSettings"`
	ConfigId              *int    `pulumi:"configId"`
	SecurityPolicyId      *string `pulumi:"securityPolicyId"`
}

type BotmanBotManagementSettingsState struct {
	BotManagementSettings pulumi.StringPtrInput
	ConfigId              pulumi.IntPtrInput
	SecurityPolicyId      pulumi.StringPtrInput
}

func (BotmanBotManagementSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanBotManagementSettingsState)(nil)).Elem()
}

type botmanBotManagementSettingsArgs struct {
	BotManagementSettings string `pulumi:"botManagementSettings"`
	ConfigId              int    `pulumi:"configId"`
	SecurityPolicyId      string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a BotmanBotManagementSettings resource.
type BotmanBotManagementSettingsArgs struct {
	BotManagementSettings pulumi.StringInput
	ConfigId              pulumi.IntInput
	SecurityPolicyId      pulumi.StringInput
}

func (BotmanBotManagementSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanBotManagementSettingsArgs)(nil)).Elem()
}

type BotmanBotManagementSettingsInput interface {
	pulumi.Input

	ToBotmanBotManagementSettingsOutput() BotmanBotManagementSettingsOutput
	ToBotmanBotManagementSettingsOutputWithContext(ctx context.Context) BotmanBotManagementSettingsOutput
}

func (*BotmanBotManagementSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanBotManagementSettings)(nil)).Elem()
}

func (i *BotmanBotManagementSettings) ToBotmanBotManagementSettingsOutput() BotmanBotManagementSettingsOutput {
	return i.ToBotmanBotManagementSettingsOutputWithContext(context.Background())
}

func (i *BotmanBotManagementSettings) ToBotmanBotManagementSettingsOutputWithContext(ctx context.Context) BotmanBotManagementSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanBotManagementSettingsOutput)
}

// BotmanBotManagementSettingsArrayInput is an input type that accepts BotmanBotManagementSettingsArray and BotmanBotManagementSettingsArrayOutput values.
// You can construct a concrete instance of `BotmanBotManagementSettingsArrayInput` via:
//
//	BotmanBotManagementSettingsArray{ BotmanBotManagementSettingsArgs{...} }
type BotmanBotManagementSettingsArrayInput interface {
	pulumi.Input

	ToBotmanBotManagementSettingsArrayOutput() BotmanBotManagementSettingsArrayOutput
	ToBotmanBotManagementSettingsArrayOutputWithContext(context.Context) BotmanBotManagementSettingsArrayOutput
}

type BotmanBotManagementSettingsArray []BotmanBotManagementSettingsInput

func (BotmanBotManagementSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanBotManagementSettings)(nil)).Elem()
}

func (i BotmanBotManagementSettingsArray) ToBotmanBotManagementSettingsArrayOutput() BotmanBotManagementSettingsArrayOutput {
	return i.ToBotmanBotManagementSettingsArrayOutputWithContext(context.Background())
}

func (i BotmanBotManagementSettingsArray) ToBotmanBotManagementSettingsArrayOutputWithContext(ctx context.Context) BotmanBotManagementSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanBotManagementSettingsArrayOutput)
}

// BotmanBotManagementSettingsMapInput is an input type that accepts BotmanBotManagementSettingsMap and BotmanBotManagementSettingsMapOutput values.
// You can construct a concrete instance of `BotmanBotManagementSettingsMapInput` via:
//
//	BotmanBotManagementSettingsMap{ "key": BotmanBotManagementSettingsArgs{...} }
type BotmanBotManagementSettingsMapInput interface {
	pulumi.Input

	ToBotmanBotManagementSettingsMapOutput() BotmanBotManagementSettingsMapOutput
	ToBotmanBotManagementSettingsMapOutputWithContext(context.Context) BotmanBotManagementSettingsMapOutput
}

type BotmanBotManagementSettingsMap map[string]BotmanBotManagementSettingsInput

func (BotmanBotManagementSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanBotManagementSettings)(nil)).Elem()
}

func (i BotmanBotManagementSettingsMap) ToBotmanBotManagementSettingsMapOutput() BotmanBotManagementSettingsMapOutput {
	return i.ToBotmanBotManagementSettingsMapOutputWithContext(context.Background())
}

func (i BotmanBotManagementSettingsMap) ToBotmanBotManagementSettingsMapOutputWithContext(ctx context.Context) BotmanBotManagementSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanBotManagementSettingsMapOutput)
}

type BotmanBotManagementSettingsOutput struct{ *pulumi.OutputState }

func (BotmanBotManagementSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanBotManagementSettings)(nil)).Elem()
}

func (o BotmanBotManagementSettingsOutput) ToBotmanBotManagementSettingsOutput() BotmanBotManagementSettingsOutput {
	return o
}

func (o BotmanBotManagementSettingsOutput) ToBotmanBotManagementSettingsOutputWithContext(ctx context.Context) BotmanBotManagementSettingsOutput {
	return o
}

func (o BotmanBotManagementSettingsOutput) BotManagementSettings() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanBotManagementSettings) pulumi.StringOutput { return v.BotManagementSettings }).(pulumi.StringOutput)
}

func (o BotmanBotManagementSettingsOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanBotManagementSettings) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

func (o BotmanBotManagementSettingsOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanBotManagementSettings) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type BotmanBotManagementSettingsArrayOutput struct{ *pulumi.OutputState }

func (BotmanBotManagementSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanBotManagementSettings)(nil)).Elem()
}

func (o BotmanBotManagementSettingsArrayOutput) ToBotmanBotManagementSettingsArrayOutput() BotmanBotManagementSettingsArrayOutput {
	return o
}

func (o BotmanBotManagementSettingsArrayOutput) ToBotmanBotManagementSettingsArrayOutputWithContext(ctx context.Context) BotmanBotManagementSettingsArrayOutput {
	return o
}

func (o BotmanBotManagementSettingsArrayOutput) Index(i pulumi.IntInput) BotmanBotManagementSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanBotManagementSettings {
		return vs[0].([]*BotmanBotManagementSettings)[vs[1].(int)]
	}).(BotmanBotManagementSettingsOutput)
}

type BotmanBotManagementSettingsMapOutput struct{ *pulumi.OutputState }

func (BotmanBotManagementSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanBotManagementSettings)(nil)).Elem()
}

func (o BotmanBotManagementSettingsMapOutput) ToBotmanBotManagementSettingsMapOutput() BotmanBotManagementSettingsMapOutput {
	return o
}

func (o BotmanBotManagementSettingsMapOutput) ToBotmanBotManagementSettingsMapOutputWithContext(ctx context.Context) BotmanBotManagementSettingsMapOutput {
	return o
}

func (o BotmanBotManagementSettingsMapOutput) MapIndex(k pulumi.StringInput) BotmanBotManagementSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanBotManagementSettings {
		return vs[0].(map[string]*BotmanBotManagementSettings)[vs[1].(string)]
	}).(BotmanBotManagementSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanBotManagementSettingsInput)(nil)).Elem(), &BotmanBotManagementSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanBotManagementSettingsArrayInput)(nil)).Elem(), BotmanBotManagementSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanBotManagementSettingsMapInput)(nil)).Elem(), BotmanBotManagementSettingsMap{})
	pulumi.RegisterOutputType(BotmanBotManagementSettingsOutput{})
	pulumi.RegisterOutputType(BotmanBotManagementSettingsArrayOutput{})
	pulumi.RegisterOutputType(BotmanBotManagementSettingsMapOutput{})
}
