// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupBotmanChallengeInterceptionRules(ctx *pulumi.Context, args *LookupBotmanChallengeInterceptionRulesArgs, opts ...pulumi.InvokeOption) (*LookupBotmanChallengeInterceptionRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBotmanChallengeInterceptionRulesResult
	err := ctx.Invoke("akamai:index/getBotmanChallengeInterceptionRules:getBotmanChallengeInterceptionRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBotmanChallengeInterceptionRules.
type LookupBotmanChallengeInterceptionRulesArgs struct {
	ConfigId int `pulumi:"configId"`
}

// A collection of values returned by getBotmanChallengeInterceptionRules.
type LookupBotmanChallengeInterceptionRulesResult struct {
	ConfigId int `pulumi:"configId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Json string `pulumi:"json"`
}

func LookupBotmanChallengeInterceptionRulesOutput(ctx *pulumi.Context, args LookupBotmanChallengeInterceptionRulesOutputArgs, opts ...pulumi.InvokeOption) LookupBotmanChallengeInterceptionRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBotmanChallengeInterceptionRulesResult, error) {
			args := v.(LookupBotmanChallengeInterceptionRulesArgs)
			r, err := LookupBotmanChallengeInterceptionRules(ctx, &args, opts...)
			var s LookupBotmanChallengeInterceptionRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBotmanChallengeInterceptionRulesResultOutput)
}

// A collection of arguments for invoking getBotmanChallengeInterceptionRules.
type LookupBotmanChallengeInterceptionRulesOutputArgs struct {
	ConfigId pulumi.IntInput `pulumi:"configId"`
}

func (LookupBotmanChallengeInterceptionRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotmanChallengeInterceptionRulesArgs)(nil)).Elem()
}

// A collection of values returned by getBotmanChallengeInterceptionRules.
type LookupBotmanChallengeInterceptionRulesResultOutput struct{ *pulumi.OutputState }

func (LookupBotmanChallengeInterceptionRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotmanChallengeInterceptionRulesResult)(nil)).Elem()
}

func (o LookupBotmanChallengeInterceptionRulesResultOutput) ToLookupBotmanChallengeInterceptionRulesResultOutput() LookupBotmanChallengeInterceptionRulesResultOutput {
	return o
}

func (o LookupBotmanChallengeInterceptionRulesResultOutput) ToLookupBotmanChallengeInterceptionRulesResultOutputWithContext(ctx context.Context) LookupBotmanChallengeInterceptionRulesResultOutput {
	return o
}

func (o LookupBotmanChallengeInterceptionRulesResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBotmanChallengeInterceptionRulesResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBotmanChallengeInterceptionRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotmanChallengeInterceptionRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBotmanChallengeInterceptionRulesResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotmanChallengeInterceptionRulesResult) string { return v.Json }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBotmanChallengeInterceptionRulesResultOutput{})
}
