// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DnsRecord struct {
	pulumi.CustomResourceState

	// Deprecated: Field 'active' has been deprecated. Setting it has no effect
	Active              pulumi.BoolPtrOutput     `pulumi:"active"`
	Algorithm           pulumi.IntPtrOutput      `pulumi:"algorithm"`
	AnswerType          pulumi.StringOutput      `pulumi:"answerType"`
	Certificate         pulumi.StringPtrOutput   `pulumi:"certificate"`
	Digest              pulumi.StringPtrOutput   `pulumi:"digest"`
	DigestType          pulumi.IntPtrOutput      `pulumi:"digestType"`
	DnsName             pulumi.StringOutput      `pulumi:"dnsName"`
	EmailAddress        pulumi.StringPtrOutput   `pulumi:"emailAddress"`
	Expiration          pulumi.StringPtrOutput   `pulumi:"expiration"`
	Expiry              pulumi.IntPtrOutput      `pulumi:"expiry"`
	Fingerprint         pulumi.StringPtrOutput   `pulumi:"fingerprint"`
	FingerprintType     pulumi.IntPtrOutput      `pulumi:"fingerprintType"`
	Flags               pulumi.IntPtrOutput      `pulumi:"flags"`
	Flagsnaptr          pulumi.StringPtrOutput   `pulumi:"flagsnaptr"`
	Hardware            pulumi.StringPtrOutput   `pulumi:"hardware"`
	Inception           pulumi.StringPtrOutput   `pulumi:"inception"`
	Iterations          pulumi.IntPtrOutput      `pulumi:"iterations"`
	Key                 pulumi.StringPtrOutput   `pulumi:"key"`
	Keytag              pulumi.IntPtrOutput      `pulumi:"keytag"`
	Labels              pulumi.IntPtrOutput      `pulumi:"labels"`
	Mailbox             pulumi.StringPtrOutput   `pulumi:"mailbox"`
	MatchType           pulumi.IntPtrOutput      `pulumi:"matchType"`
	Name                pulumi.StringOutput      `pulumi:"name"`
	NameServer          pulumi.StringPtrOutput   `pulumi:"nameServer"`
	NextHashedOwnerName pulumi.StringPtrOutput   `pulumi:"nextHashedOwnerName"`
	NxdomainTtl         pulumi.IntPtrOutput      `pulumi:"nxdomainTtl"`
	Order               pulumi.IntPtrOutput      `pulumi:"order"`
	OriginalTtl         pulumi.IntPtrOutput      `pulumi:"originalTtl"`
	Port                pulumi.IntPtrOutput      `pulumi:"port"`
	Preference          pulumi.IntPtrOutput      `pulumi:"preference"`
	Priority            pulumi.IntPtrOutput      `pulumi:"priority"`
	PriorityIncrement   pulumi.IntPtrOutput      `pulumi:"priorityIncrement"`
	Protocol            pulumi.IntPtrOutput      `pulumi:"protocol"`
	RecordSha           pulumi.StringOutput      `pulumi:"recordSha"`
	Recordtype          pulumi.StringOutput      `pulumi:"recordtype"`
	Refresh             pulumi.IntPtrOutput      `pulumi:"refresh"`
	Regexp              pulumi.StringPtrOutput   `pulumi:"regexp"`
	Replacement         pulumi.StringPtrOutput   `pulumi:"replacement"`
	Retry               pulumi.IntPtrOutput      `pulumi:"retry"`
	Salt                pulumi.StringPtrOutput   `pulumi:"salt"`
	Selector            pulumi.IntPtrOutput      `pulumi:"selector"`
	Serial              pulumi.IntOutput         `pulumi:"serial"`
	Service             pulumi.StringPtrOutput   `pulumi:"service"`
	Signature           pulumi.StringPtrOutput   `pulumi:"signature"`
	Signer              pulumi.StringPtrOutput   `pulumi:"signer"`
	Software            pulumi.StringPtrOutput   `pulumi:"software"`
	Subtype             pulumi.IntPtrOutput      `pulumi:"subtype"`
	SvcParams           pulumi.StringPtrOutput   `pulumi:"svcParams"`
	SvcPriority         pulumi.IntPtrOutput      `pulumi:"svcPriority"`
	TargetName          pulumi.StringPtrOutput   `pulumi:"targetName"`
	Targets             pulumi.StringArrayOutput `pulumi:"targets"`
	Ttl                 pulumi.IntOutput         `pulumi:"ttl"`
	Txt                 pulumi.StringPtrOutput   `pulumi:"txt"`
	TypeBitmaps         pulumi.StringPtrOutput   `pulumi:"typeBitmaps"`
	TypeCovered         pulumi.StringPtrOutput   `pulumi:"typeCovered"`
	TypeMnemonic        pulumi.StringPtrOutput   `pulumi:"typeMnemonic"`
	TypeValue           pulumi.IntPtrOutput      `pulumi:"typeValue"`
	Usage               pulumi.IntPtrOutput      `pulumi:"usage"`
	Weight              pulumi.IntPtrOutput      `pulumi:"weight"`
	Zone                pulumi.StringOutput      `pulumi:"zone"`
}

// NewDnsRecord registers a new resource with the given unique name, arguments, and options.
func NewDnsRecord(ctx *pulumi.Context,
	name string, args *DnsRecordArgs, opts ...pulumi.ResourceOption) (*DnsRecord, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Recordtype == nil {
		return nil, errors.New("invalid value for required argument 'Recordtype'")
	}
	if args.Ttl == nil {
		return nil, errors.New("invalid value for required argument 'Ttl'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("akamai:edgedns/dnsRecord:DnsRecord"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DnsRecord
	err := ctx.RegisterResource("akamai:index/dnsRecord:DnsRecord", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsRecord gets an existing DnsRecord resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsRecord(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsRecordState, opts ...pulumi.ResourceOption) (*DnsRecord, error) {
	var resource DnsRecord
	err := ctx.ReadResource("akamai:index/dnsRecord:DnsRecord", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsRecord resources.
type dnsRecordState struct {
	// Deprecated: Field 'active' has been deprecated. Setting it has no effect
	Active              *bool    `pulumi:"active"`
	Algorithm           *int     `pulumi:"algorithm"`
	AnswerType          *string  `pulumi:"answerType"`
	Certificate         *string  `pulumi:"certificate"`
	Digest              *string  `pulumi:"digest"`
	DigestType          *int     `pulumi:"digestType"`
	DnsName             *string  `pulumi:"dnsName"`
	EmailAddress        *string  `pulumi:"emailAddress"`
	Expiration          *string  `pulumi:"expiration"`
	Expiry              *int     `pulumi:"expiry"`
	Fingerprint         *string  `pulumi:"fingerprint"`
	FingerprintType     *int     `pulumi:"fingerprintType"`
	Flags               *int     `pulumi:"flags"`
	Flagsnaptr          *string  `pulumi:"flagsnaptr"`
	Hardware            *string  `pulumi:"hardware"`
	Inception           *string  `pulumi:"inception"`
	Iterations          *int     `pulumi:"iterations"`
	Key                 *string  `pulumi:"key"`
	Keytag              *int     `pulumi:"keytag"`
	Labels              *int     `pulumi:"labels"`
	Mailbox             *string  `pulumi:"mailbox"`
	MatchType           *int     `pulumi:"matchType"`
	Name                *string  `pulumi:"name"`
	NameServer          *string  `pulumi:"nameServer"`
	NextHashedOwnerName *string  `pulumi:"nextHashedOwnerName"`
	NxdomainTtl         *int     `pulumi:"nxdomainTtl"`
	Order               *int     `pulumi:"order"`
	OriginalTtl         *int     `pulumi:"originalTtl"`
	Port                *int     `pulumi:"port"`
	Preference          *int     `pulumi:"preference"`
	Priority            *int     `pulumi:"priority"`
	PriorityIncrement   *int     `pulumi:"priorityIncrement"`
	Protocol            *int     `pulumi:"protocol"`
	RecordSha           *string  `pulumi:"recordSha"`
	Recordtype          *string  `pulumi:"recordtype"`
	Refresh             *int     `pulumi:"refresh"`
	Regexp              *string  `pulumi:"regexp"`
	Replacement         *string  `pulumi:"replacement"`
	Retry               *int     `pulumi:"retry"`
	Salt                *string  `pulumi:"salt"`
	Selector            *int     `pulumi:"selector"`
	Serial              *int     `pulumi:"serial"`
	Service             *string  `pulumi:"service"`
	Signature           *string  `pulumi:"signature"`
	Signer              *string  `pulumi:"signer"`
	Software            *string  `pulumi:"software"`
	Subtype             *int     `pulumi:"subtype"`
	SvcParams           *string  `pulumi:"svcParams"`
	SvcPriority         *int     `pulumi:"svcPriority"`
	TargetName          *string  `pulumi:"targetName"`
	Targets             []string `pulumi:"targets"`
	Ttl                 *int     `pulumi:"ttl"`
	Txt                 *string  `pulumi:"txt"`
	TypeBitmaps         *string  `pulumi:"typeBitmaps"`
	TypeCovered         *string  `pulumi:"typeCovered"`
	TypeMnemonic        *string  `pulumi:"typeMnemonic"`
	TypeValue           *int     `pulumi:"typeValue"`
	Usage               *int     `pulumi:"usage"`
	Weight              *int     `pulumi:"weight"`
	Zone                *string  `pulumi:"zone"`
}

type DnsRecordState struct {
	// Deprecated: Field 'active' has been deprecated. Setting it has no effect
	Active              pulumi.BoolPtrInput
	Algorithm           pulumi.IntPtrInput
	AnswerType          pulumi.StringPtrInput
	Certificate         pulumi.StringPtrInput
	Digest              pulumi.StringPtrInput
	DigestType          pulumi.IntPtrInput
	DnsName             pulumi.StringPtrInput
	EmailAddress        pulumi.StringPtrInput
	Expiration          pulumi.StringPtrInput
	Expiry              pulumi.IntPtrInput
	Fingerprint         pulumi.StringPtrInput
	FingerprintType     pulumi.IntPtrInput
	Flags               pulumi.IntPtrInput
	Flagsnaptr          pulumi.StringPtrInput
	Hardware            pulumi.StringPtrInput
	Inception           pulumi.StringPtrInput
	Iterations          pulumi.IntPtrInput
	Key                 pulumi.StringPtrInput
	Keytag              pulumi.IntPtrInput
	Labels              pulumi.IntPtrInput
	Mailbox             pulumi.StringPtrInput
	MatchType           pulumi.IntPtrInput
	Name                pulumi.StringPtrInput
	NameServer          pulumi.StringPtrInput
	NextHashedOwnerName pulumi.StringPtrInput
	NxdomainTtl         pulumi.IntPtrInput
	Order               pulumi.IntPtrInput
	OriginalTtl         pulumi.IntPtrInput
	Port                pulumi.IntPtrInput
	Preference          pulumi.IntPtrInput
	Priority            pulumi.IntPtrInput
	PriorityIncrement   pulumi.IntPtrInput
	Protocol            pulumi.IntPtrInput
	RecordSha           pulumi.StringPtrInput
	Recordtype          pulumi.StringPtrInput
	Refresh             pulumi.IntPtrInput
	Regexp              pulumi.StringPtrInput
	Replacement         pulumi.StringPtrInput
	Retry               pulumi.IntPtrInput
	Salt                pulumi.StringPtrInput
	Selector            pulumi.IntPtrInput
	Serial              pulumi.IntPtrInput
	Service             pulumi.StringPtrInput
	Signature           pulumi.StringPtrInput
	Signer              pulumi.StringPtrInput
	Software            pulumi.StringPtrInput
	Subtype             pulumi.IntPtrInput
	SvcParams           pulumi.StringPtrInput
	SvcPriority         pulumi.IntPtrInput
	TargetName          pulumi.StringPtrInput
	Targets             pulumi.StringArrayInput
	Ttl                 pulumi.IntPtrInput
	Txt                 pulumi.StringPtrInput
	TypeBitmaps         pulumi.StringPtrInput
	TypeCovered         pulumi.StringPtrInput
	TypeMnemonic        pulumi.StringPtrInput
	TypeValue           pulumi.IntPtrInput
	Usage               pulumi.IntPtrInput
	Weight              pulumi.IntPtrInput
	Zone                pulumi.StringPtrInput
}

func (DnsRecordState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsRecordState)(nil)).Elem()
}

type dnsRecordArgs struct {
	// Deprecated: Field 'active' has been deprecated. Setting it has no effect
	Active              *bool    `pulumi:"active"`
	Algorithm           *int     `pulumi:"algorithm"`
	Certificate         *string  `pulumi:"certificate"`
	Digest              *string  `pulumi:"digest"`
	DigestType          *int     `pulumi:"digestType"`
	EmailAddress        *string  `pulumi:"emailAddress"`
	Expiration          *string  `pulumi:"expiration"`
	Expiry              *int     `pulumi:"expiry"`
	Fingerprint         *string  `pulumi:"fingerprint"`
	FingerprintType     *int     `pulumi:"fingerprintType"`
	Flags               *int     `pulumi:"flags"`
	Flagsnaptr          *string  `pulumi:"flagsnaptr"`
	Hardware            *string  `pulumi:"hardware"`
	Inception           *string  `pulumi:"inception"`
	Iterations          *int     `pulumi:"iterations"`
	Key                 *string  `pulumi:"key"`
	Keytag              *int     `pulumi:"keytag"`
	Labels              *int     `pulumi:"labels"`
	Mailbox             *string  `pulumi:"mailbox"`
	MatchType           *int     `pulumi:"matchType"`
	Name                *string  `pulumi:"name"`
	NameServer          *string  `pulumi:"nameServer"`
	NextHashedOwnerName *string  `pulumi:"nextHashedOwnerName"`
	NxdomainTtl         *int     `pulumi:"nxdomainTtl"`
	Order               *int     `pulumi:"order"`
	OriginalTtl         *int     `pulumi:"originalTtl"`
	Port                *int     `pulumi:"port"`
	Preference          *int     `pulumi:"preference"`
	Priority            *int     `pulumi:"priority"`
	PriorityIncrement   *int     `pulumi:"priorityIncrement"`
	Protocol            *int     `pulumi:"protocol"`
	Recordtype          string   `pulumi:"recordtype"`
	Refresh             *int     `pulumi:"refresh"`
	Regexp              *string  `pulumi:"regexp"`
	Replacement         *string  `pulumi:"replacement"`
	Retry               *int     `pulumi:"retry"`
	Salt                *string  `pulumi:"salt"`
	Selector            *int     `pulumi:"selector"`
	Service             *string  `pulumi:"service"`
	Signature           *string  `pulumi:"signature"`
	Signer              *string  `pulumi:"signer"`
	Software            *string  `pulumi:"software"`
	Subtype             *int     `pulumi:"subtype"`
	SvcParams           *string  `pulumi:"svcParams"`
	SvcPriority         *int     `pulumi:"svcPriority"`
	TargetName          *string  `pulumi:"targetName"`
	Targets             []string `pulumi:"targets"`
	Ttl                 int      `pulumi:"ttl"`
	Txt                 *string  `pulumi:"txt"`
	TypeBitmaps         *string  `pulumi:"typeBitmaps"`
	TypeCovered         *string  `pulumi:"typeCovered"`
	TypeMnemonic        *string  `pulumi:"typeMnemonic"`
	TypeValue           *int     `pulumi:"typeValue"`
	Usage               *int     `pulumi:"usage"`
	Weight              *int     `pulumi:"weight"`
	Zone                string   `pulumi:"zone"`
}

// The set of arguments for constructing a DnsRecord resource.
type DnsRecordArgs struct {
	// Deprecated: Field 'active' has been deprecated. Setting it has no effect
	Active              pulumi.BoolPtrInput
	Algorithm           pulumi.IntPtrInput
	Certificate         pulumi.StringPtrInput
	Digest              pulumi.StringPtrInput
	DigestType          pulumi.IntPtrInput
	EmailAddress        pulumi.StringPtrInput
	Expiration          pulumi.StringPtrInput
	Expiry              pulumi.IntPtrInput
	Fingerprint         pulumi.StringPtrInput
	FingerprintType     pulumi.IntPtrInput
	Flags               pulumi.IntPtrInput
	Flagsnaptr          pulumi.StringPtrInput
	Hardware            pulumi.StringPtrInput
	Inception           pulumi.StringPtrInput
	Iterations          pulumi.IntPtrInput
	Key                 pulumi.StringPtrInput
	Keytag              pulumi.IntPtrInput
	Labels              pulumi.IntPtrInput
	Mailbox             pulumi.StringPtrInput
	MatchType           pulumi.IntPtrInput
	Name                pulumi.StringPtrInput
	NameServer          pulumi.StringPtrInput
	NextHashedOwnerName pulumi.StringPtrInput
	NxdomainTtl         pulumi.IntPtrInput
	Order               pulumi.IntPtrInput
	OriginalTtl         pulumi.IntPtrInput
	Port                pulumi.IntPtrInput
	Preference          pulumi.IntPtrInput
	Priority            pulumi.IntPtrInput
	PriorityIncrement   pulumi.IntPtrInput
	Protocol            pulumi.IntPtrInput
	Recordtype          pulumi.StringInput
	Refresh             pulumi.IntPtrInput
	Regexp              pulumi.StringPtrInput
	Replacement         pulumi.StringPtrInput
	Retry               pulumi.IntPtrInput
	Salt                pulumi.StringPtrInput
	Selector            pulumi.IntPtrInput
	Service             pulumi.StringPtrInput
	Signature           pulumi.StringPtrInput
	Signer              pulumi.StringPtrInput
	Software            pulumi.StringPtrInput
	Subtype             pulumi.IntPtrInput
	SvcParams           pulumi.StringPtrInput
	SvcPriority         pulumi.IntPtrInput
	TargetName          pulumi.StringPtrInput
	Targets             pulumi.StringArrayInput
	Ttl                 pulumi.IntInput
	Txt                 pulumi.StringPtrInput
	TypeBitmaps         pulumi.StringPtrInput
	TypeCovered         pulumi.StringPtrInput
	TypeMnemonic        pulumi.StringPtrInput
	TypeValue           pulumi.IntPtrInput
	Usage               pulumi.IntPtrInput
	Weight              pulumi.IntPtrInput
	Zone                pulumi.StringInput
}

func (DnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsRecordArgs)(nil)).Elem()
}

type DnsRecordInput interface {
	pulumi.Input

	ToDnsRecordOutput() DnsRecordOutput
	ToDnsRecordOutputWithContext(ctx context.Context) DnsRecordOutput
}

func (*DnsRecord) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecord)(nil)).Elem()
}

func (i *DnsRecord) ToDnsRecordOutput() DnsRecordOutput {
	return i.ToDnsRecordOutputWithContext(context.Background())
}

func (i *DnsRecord) ToDnsRecordOutputWithContext(ctx context.Context) DnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordOutput)
}

// DnsRecordArrayInput is an input type that accepts DnsRecordArray and DnsRecordArrayOutput values.
// You can construct a concrete instance of `DnsRecordArrayInput` via:
//
//	DnsRecordArray{ DnsRecordArgs{...} }
type DnsRecordArrayInput interface {
	pulumi.Input

	ToDnsRecordArrayOutput() DnsRecordArrayOutput
	ToDnsRecordArrayOutputWithContext(context.Context) DnsRecordArrayOutput
}

type DnsRecordArray []DnsRecordInput

func (DnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DnsRecord)(nil)).Elem()
}

func (i DnsRecordArray) ToDnsRecordArrayOutput() DnsRecordArrayOutput {
	return i.ToDnsRecordArrayOutputWithContext(context.Background())
}

func (i DnsRecordArray) ToDnsRecordArrayOutputWithContext(ctx context.Context) DnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordArrayOutput)
}

// DnsRecordMapInput is an input type that accepts DnsRecordMap and DnsRecordMapOutput values.
// You can construct a concrete instance of `DnsRecordMapInput` via:
//
//	DnsRecordMap{ "key": DnsRecordArgs{...} }
type DnsRecordMapInput interface {
	pulumi.Input

	ToDnsRecordMapOutput() DnsRecordMapOutput
	ToDnsRecordMapOutputWithContext(context.Context) DnsRecordMapOutput
}

type DnsRecordMap map[string]DnsRecordInput

func (DnsRecordMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DnsRecord)(nil)).Elem()
}

func (i DnsRecordMap) ToDnsRecordMapOutput() DnsRecordMapOutput {
	return i.ToDnsRecordMapOutputWithContext(context.Background())
}

func (i DnsRecordMap) ToDnsRecordMapOutputWithContext(ctx context.Context) DnsRecordMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordMapOutput)
}

type DnsRecordOutput struct{ *pulumi.OutputState }

func (DnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecord)(nil)).Elem()
}

func (o DnsRecordOutput) ToDnsRecordOutput() DnsRecordOutput {
	return o
}

func (o DnsRecordOutput) ToDnsRecordOutputWithContext(ctx context.Context) DnsRecordOutput {
	return o
}

// Deprecated: Field 'active' has been deprecated. Setting it has no effect
func (o DnsRecordOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.BoolPtrOutput { return v.Active }).(pulumi.BoolPtrOutput)
}

func (o DnsRecordOutput) Algorithm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Algorithm }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) AnswerType() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringOutput { return v.AnswerType }).(pulumi.StringOutput)
}

func (o DnsRecordOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Digest }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) DigestType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.DigestType }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

func (o DnsRecordOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.EmailAddress }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Expiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Expiration }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Expiry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Expiry }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Fingerprint }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) FingerprintType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.FingerprintType }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Flags }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Flagsnaptr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Flagsnaptr }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Hardware() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Hardware }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Inception() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Inception }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Iterations() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Iterations }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Key }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Keytag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Keytag }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Labels() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Labels }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Mailbox() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Mailbox }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) MatchType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.MatchType }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DnsRecordOutput) NameServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.NameServer }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) NextHashedOwnerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.NextHashedOwnerName }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) NxdomainTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.NxdomainTtl }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Order }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) OriginalTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.OriginalTtl }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Preference }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) PriorityIncrement() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.PriorityIncrement }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Protocol }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) RecordSha() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringOutput { return v.RecordSha }).(pulumi.StringOutput)
}

func (o DnsRecordOutput) Recordtype() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringOutput { return v.Recordtype }).(pulumi.StringOutput)
}

func (o DnsRecordOutput) Refresh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Refresh }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Regexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Regexp }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Replacement }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Retry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Retry }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Salt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Salt }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Selector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Selector }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Serial() pulumi.IntOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntOutput { return v.Serial }).(pulumi.IntOutput)
}

func (o DnsRecordOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Service }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Signature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Signature }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Signer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Signer }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Software() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Software }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Subtype() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Subtype }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) SvcParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.SvcParams }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) SvcPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.SvcPriority }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) TargetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.TargetName }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringArrayOutput { return v.Targets }).(pulumi.StringArrayOutput)
}

func (o DnsRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntOutput { return v.Ttl }).(pulumi.IntOutput)
}

func (o DnsRecordOutput) Txt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.Txt }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) TypeBitmaps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.TypeBitmaps }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) TypeCovered() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.TypeCovered }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) TypeMnemonic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringPtrOutput { return v.TypeMnemonic }).(pulumi.StringPtrOutput)
}

func (o DnsRecordOutput) TypeValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.TypeValue }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Usage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Usage }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.IntPtrOutput { return v.Weight }).(pulumi.IntPtrOutput)
}

func (o DnsRecordOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsRecord) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type DnsRecordArrayOutput struct{ *pulumi.OutputState }

func (DnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DnsRecord)(nil)).Elem()
}

func (o DnsRecordArrayOutput) ToDnsRecordArrayOutput() DnsRecordArrayOutput {
	return o
}

func (o DnsRecordArrayOutput) ToDnsRecordArrayOutputWithContext(ctx context.Context) DnsRecordArrayOutput {
	return o
}

func (o DnsRecordArrayOutput) Index(i pulumi.IntInput) DnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DnsRecord {
		return vs[0].([]*DnsRecord)[vs[1].(int)]
	}).(DnsRecordOutput)
}

type DnsRecordMapOutput struct{ *pulumi.OutputState }

func (DnsRecordMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DnsRecord)(nil)).Elem()
}

func (o DnsRecordMapOutput) ToDnsRecordMapOutput() DnsRecordMapOutput {
	return o
}

func (o DnsRecordMapOutput) ToDnsRecordMapOutputWithContext(ctx context.Context) DnsRecordMapOutput {
	return o
}

func (o DnsRecordMapOutput) MapIndex(k pulumi.StringInput) DnsRecordOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DnsRecord {
		return vs[0].(map[string]*DnsRecord)[vs[1].(string)]
	}).(DnsRecordOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordInput)(nil)).Elem(), &DnsRecord{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordArrayInput)(nil)).Elem(), DnsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordMapInput)(nil)).Elem(), DnsRecordMap{})
	pulumi.RegisterOutputType(DnsRecordOutput{})
	pulumi.RegisterOutputType(DnsRecordArrayOutput{})
	pulumi.RegisterOutputType(DnsRecordMapOutput{})
}
