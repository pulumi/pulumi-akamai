// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppSecAdvancedSettingsPrefetch struct {
	pulumi.CustomResourceState

	// Whether to enable prefetch requests for all file extensions
	AllExtensions pulumi.BoolOutput `pulumi:"allExtensions"`
	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Whether to enable or disable prefetch requests
	EnableAppLayer pulumi.BoolOutput `pulumi:"enableAppLayer"`
	// Whether to enable prefetch requests for rate controls
	EnableRateControls pulumi.BoolOutput `pulumi:"enableRateControls"`
	// List of file extensions
	Extensions pulumi.StringArrayOutput `pulumi:"extensions"`
}

// NewAppSecAdvancedSettingsPrefetch registers a new resource with the given unique name, arguments, and options.
func NewAppSecAdvancedSettingsPrefetch(ctx *pulumi.Context,
	name string, args *AppSecAdvancedSettingsPrefetchArgs, opts ...pulumi.ResourceOption) (*AppSecAdvancedSettingsPrefetch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllExtensions == nil {
		return nil, errors.New("invalid value for required argument 'AllExtensions'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.EnableAppLayer == nil {
		return nil, errors.New("invalid value for required argument 'EnableAppLayer'")
	}
	if args.EnableRateControls == nil {
		return nil, errors.New("invalid value for required argument 'EnableRateControls'")
	}
	if args.Extensions == nil {
		return nil, errors.New("invalid value for required argument 'Extensions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppSecAdvancedSettingsPrefetch
	err := ctx.RegisterResource("akamai:index/appSecAdvancedSettingsPrefetch:AppSecAdvancedSettingsPrefetch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecAdvancedSettingsPrefetch gets an existing AppSecAdvancedSettingsPrefetch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecAdvancedSettingsPrefetch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecAdvancedSettingsPrefetchState, opts ...pulumi.ResourceOption) (*AppSecAdvancedSettingsPrefetch, error) {
	var resource AppSecAdvancedSettingsPrefetch
	err := ctx.ReadResource("akamai:index/appSecAdvancedSettingsPrefetch:AppSecAdvancedSettingsPrefetch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecAdvancedSettingsPrefetch resources.
type appSecAdvancedSettingsPrefetchState struct {
	// Whether to enable prefetch requests for all file extensions
	AllExtensions *bool `pulumi:"allExtensions"`
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// Whether to enable or disable prefetch requests
	EnableAppLayer *bool `pulumi:"enableAppLayer"`
	// Whether to enable prefetch requests for rate controls
	EnableRateControls *bool `pulumi:"enableRateControls"`
	// List of file extensions
	Extensions []string `pulumi:"extensions"`
}

type AppSecAdvancedSettingsPrefetchState struct {
	// Whether to enable prefetch requests for all file extensions
	AllExtensions pulumi.BoolPtrInput
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// Whether to enable or disable prefetch requests
	EnableAppLayer pulumi.BoolPtrInput
	// Whether to enable prefetch requests for rate controls
	EnableRateControls pulumi.BoolPtrInput
	// List of file extensions
	Extensions pulumi.StringArrayInput
}

func (AppSecAdvancedSettingsPrefetchState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecAdvancedSettingsPrefetchState)(nil)).Elem()
}

type appSecAdvancedSettingsPrefetchArgs struct {
	// Whether to enable prefetch requests for all file extensions
	AllExtensions bool `pulumi:"allExtensions"`
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// Whether to enable or disable prefetch requests
	EnableAppLayer bool `pulumi:"enableAppLayer"`
	// Whether to enable prefetch requests for rate controls
	EnableRateControls bool `pulumi:"enableRateControls"`
	// List of file extensions
	Extensions []string `pulumi:"extensions"`
}

// The set of arguments for constructing a AppSecAdvancedSettingsPrefetch resource.
type AppSecAdvancedSettingsPrefetchArgs struct {
	// Whether to enable prefetch requests for all file extensions
	AllExtensions pulumi.BoolInput
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// Whether to enable or disable prefetch requests
	EnableAppLayer pulumi.BoolInput
	// Whether to enable prefetch requests for rate controls
	EnableRateControls pulumi.BoolInput
	// List of file extensions
	Extensions pulumi.StringArrayInput
}

func (AppSecAdvancedSettingsPrefetchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecAdvancedSettingsPrefetchArgs)(nil)).Elem()
}

type AppSecAdvancedSettingsPrefetchInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsPrefetchOutput() AppSecAdvancedSettingsPrefetchOutput
	ToAppSecAdvancedSettingsPrefetchOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchOutput
}

func (*AppSecAdvancedSettingsPrefetch) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecAdvancedSettingsPrefetch)(nil)).Elem()
}

func (i *AppSecAdvancedSettingsPrefetch) ToAppSecAdvancedSettingsPrefetchOutput() AppSecAdvancedSettingsPrefetchOutput {
	return i.ToAppSecAdvancedSettingsPrefetchOutputWithContext(context.Background())
}

func (i *AppSecAdvancedSettingsPrefetch) ToAppSecAdvancedSettingsPrefetchOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsPrefetchOutput)
}

// AppSecAdvancedSettingsPrefetchArrayInput is an input type that accepts AppSecAdvancedSettingsPrefetchArray and AppSecAdvancedSettingsPrefetchArrayOutput values.
// You can construct a concrete instance of `AppSecAdvancedSettingsPrefetchArrayInput` via:
//
//	AppSecAdvancedSettingsPrefetchArray{ AppSecAdvancedSettingsPrefetchArgs{...} }
type AppSecAdvancedSettingsPrefetchArrayInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsPrefetchArrayOutput() AppSecAdvancedSettingsPrefetchArrayOutput
	ToAppSecAdvancedSettingsPrefetchArrayOutputWithContext(context.Context) AppSecAdvancedSettingsPrefetchArrayOutput
}

type AppSecAdvancedSettingsPrefetchArray []AppSecAdvancedSettingsPrefetchInput

func (AppSecAdvancedSettingsPrefetchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecAdvancedSettingsPrefetch)(nil)).Elem()
}

func (i AppSecAdvancedSettingsPrefetchArray) ToAppSecAdvancedSettingsPrefetchArrayOutput() AppSecAdvancedSettingsPrefetchArrayOutput {
	return i.ToAppSecAdvancedSettingsPrefetchArrayOutputWithContext(context.Background())
}

func (i AppSecAdvancedSettingsPrefetchArray) ToAppSecAdvancedSettingsPrefetchArrayOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsPrefetchArrayOutput)
}

// AppSecAdvancedSettingsPrefetchMapInput is an input type that accepts AppSecAdvancedSettingsPrefetchMap and AppSecAdvancedSettingsPrefetchMapOutput values.
// You can construct a concrete instance of `AppSecAdvancedSettingsPrefetchMapInput` via:
//
//	AppSecAdvancedSettingsPrefetchMap{ "key": AppSecAdvancedSettingsPrefetchArgs{...} }
type AppSecAdvancedSettingsPrefetchMapInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsPrefetchMapOutput() AppSecAdvancedSettingsPrefetchMapOutput
	ToAppSecAdvancedSettingsPrefetchMapOutputWithContext(context.Context) AppSecAdvancedSettingsPrefetchMapOutput
}

type AppSecAdvancedSettingsPrefetchMap map[string]AppSecAdvancedSettingsPrefetchInput

func (AppSecAdvancedSettingsPrefetchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecAdvancedSettingsPrefetch)(nil)).Elem()
}

func (i AppSecAdvancedSettingsPrefetchMap) ToAppSecAdvancedSettingsPrefetchMapOutput() AppSecAdvancedSettingsPrefetchMapOutput {
	return i.ToAppSecAdvancedSettingsPrefetchMapOutputWithContext(context.Background())
}

func (i AppSecAdvancedSettingsPrefetchMap) ToAppSecAdvancedSettingsPrefetchMapOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsPrefetchMapOutput)
}

type AppSecAdvancedSettingsPrefetchOutput struct{ *pulumi.OutputState }

func (AppSecAdvancedSettingsPrefetchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecAdvancedSettingsPrefetch)(nil)).Elem()
}

func (o AppSecAdvancedSettingsPrefetchOutput) ToAppSecAdvancedSettingsPrefetchOutput() AppSecAdvancedSettingsPrefetchOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchOutput) ToAppSecAdvancedSettingsPrefetchOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchOutput {
	return o
}

// Whether to enable prefetch requests for all file extensions
func (o AppSecAdvancedSettingsPrefetchOutput) AllExtensions() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppSecAdvancedSettingsPrefetch) pulumi.BoolOutput { return v.AllExtensions }).(pulumi.BoolOutput)
}

// Unique identifier of the security configuration
func (o AppSecAdvancedSettingsPrefetchOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecAdvancedSettingsPrefetch) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Whether to enable or disable prefetch requests
func (o AppSecAdvancedSettingsPrefetchOutput) EnableAppLayer() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppSecAdvancedSettingsPrefetch) pulumi.BoolOutput { return v.EnableAppLayer }).(pulumi.BoolOutput)
}

// Whether to enable prefetch requests for rate controls
func (o AppSecAdvancedSettingsPrefetchOutput) EnableRateControls() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppSecAdvancedSettingsPrefetch) pulumi.BoolOutput { return v.EnableRateControls }).(pulumi.BoolOutput)
}

// List of file extensions
func (o AppSecAdvancedSettingsPrefetchOutput) Extensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppSecAdvancedSettingsPrefetch) pulumi.StringArrayOutput { return v.Extensions }).(pulumi.StringArrayOutput)
}

type AppSecAdvancedSettingsPrefetchArrayOutput struct{ *pulumi.OutputState }

func (AppSecAdvancedSettingsPrefetchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecAdvancedSettingsPrefetch)(nil)).Elem()
}

func (o AppSecAdvancedSettingsPrefetchArrayOutput) ToAppSecAdvancedSettingsPrefetchArrayOutput() AppSecAdvancedSettingsPrefetchArrayOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchArrayOutput) ToAppSecAdvancedSettingsPrefetchArrayOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchArrayOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchArrayOutput) Index(i pulumi.IntInput) AppSecAdvancedSettingsPrefetchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecAdvancedSettingsPrefetch {
		return vs[0].([]*AppSecAdvancedSettingsPrefetch)[vs[1].(int)]
	}).(AppSecAdvancedSettingsPrefetchOutput)
}

type AppSecAdvancedSettingsPrefetchMapOutput struct{ *pulumi.OutputState }

func (AppSecAdvancedSettingsPrefetchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecAdvancedSettingsPrefetch)(nil)).Elem()
}

func (o AppSecAdvancedSettingsPrefetchMapOutput) ToAppSecAdvancedSettingsPrefetchMapOutput() AppSecAdvancedSettingsPrefetchMapOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchMapOutput) ToAppSecAdvancedSettingsPrefetchMapOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchMapOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchMapOutput) MapIndex(k pulumi.StringInput) AppSecAdvancedSettingsPrefetchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecAdvancedSettingsPrefetch {
		return vs[0].(map[string]*AppSecAdvancedSettingsPrefetch)[vs[1].(string)]
	}).(AppSecAdvancedSettingsPrefetchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecAdvancedSettingsPrefetchInput)(nil)).Elem(), &AppSecAdvancedSettingsPrefetch{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecAdvancedSettingsPrefetchArrayInput)(nil)).Elem(), AppSecAdvancedSettingsPrefetchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecAdvancedSettingsPrefetchMapInput)(nil)).Elem(), AppSecAdvancedSettingsPrefetchMap{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsPrefetchOutput{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsPrefetchArrayOutput{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsPrefetchMapOutput{})
}
