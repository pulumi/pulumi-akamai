// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security configuration
//
// Modifies the list of hostnames protected under by a security configuration.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/selected-hostnames](https://techdocs.akamai.com/application-security/reference/put-selected-hostnames-per-config)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
//				Name: pulumi.StringRef("Documentation"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = akamai.NewAppSecSelectedHostnames(ctx, "appsecselectedhostnames", &akamai.AppSecSelectedHostnamesArgs{
//				ConfigId: *pulumi.Int(configuration.ConfigId),
//				Hostnames: pulumi.StringArray{
//					pulumi.String("example.com"),
//				},
//				Mode: pulumi.String("APPEND"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AppSecSelectedHostnames struct {
	pulumi.CustomResourceState

	// . Unique identifier of the security configuration associated with the hostnames.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// . JSON array of hostnames to be added or removed from the protected hosts list.
	Hostnames pulumi.StringArrayOutput `pulumi:"hostnames"`
	// . Indicates how the `hostnames` array is to be applied. Allowed values are:
	// - **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.
	// - **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.
	// - **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.
	Mode pulumi.StringOutput `pulumi:"mode"`
}

// NewAppSecSelectedHostnames registers a new resource with the given unique name, arguments, and options.
func NewAppSecSelectedHostnames(ctx *pulumi.Context,
	name string, args *AppSecSelectedHostnamesArgs, opts ...pulumi.ResourceOption) (*AppSecSelectedHostnames, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.Hostnames == nil {
		return nil, errors.New("invalid value for required argument 'Hostnames'")
	}
	if args.Mode == nil {
		return nil, errors.New("invalid value for required argument 'Mode'")
	}
	var resource AppSecSelectedHostnames
	err := ctx.RegisterResource("akamai:index/appSecSelectedHostnames:AppSecSelectedHostnames", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecSelectedHostnames gets an existing AppSecSelectedHostnames resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecSelectedHostnames(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecSelectedHostnamesState, opts ...pulumi.ResourceOption) (*AppSecSelectedHostnames, error) {
	var resource AppSecSelectedHostnames
	err := ctx.ReadResource("akamai:index/appSecSelectedHostnames:AppSecSelectedHostnames", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecSelectedHostnames resources.
type appSecSelectedHostnamesState struct {
	// . Unique identifier of the security configuration associated with the hostnames.
	ConfigId *int `pulumi:"configId"`
	// . JSON array of hostnames to be added or removed from the protected hosts list.
	Hostnames []string `pulumi:"hostnames"`
	// . Indicates how the `hostnames` array is to be applied. Allowed values are:
	// - **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.
	// - **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.
	// - **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.
	Mode *string `pulumi:"mode"`
}

type AppSecSelectedHostnamesState struct {
	// . Unique identifier of the security configuration associated with the hostnames.
	ConfigId pulumi.IntPtrInput
	// . JSON array of hostnames to be added or removed from the protected hosts list.
	Hostnames pulumi.StringArrayInput
	// . Indicates how the `hostnames` array is to be applied. Allowed values are:
	// - **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.
	// - **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.
	// - **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.
	Mode pulumi.StringPtrInput
}

func (AppSecSelectedHostnamesState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecSelectedHostnamesState)(nil)).Elem()
}

type appSecSelectedHostnamesArgs struct {
	// . Unique identifier of the security configuration associated with the hostnames.
	ConfigId int `pulumi:"configId"`
	// . JSON array of hostnames to be added or removed from the protected hosts list.
	Hostnames []string `pulumi:"hostnames"`
	// . Indicates how the `hostnames` array is to be applied. Allowed values are:
	// - **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.
	// - **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.
	// - **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.
	Mode string `pulumi:"mode"`
}

// The set of arguments for constructing a AppSecSelectedHostnames resource.
type AppSecSelectedHostnamesArgs struct {
	// . Unique identifier of the security configuration associated with the hostnames.
	ConfigId pulumi.IntInput
	// . JSON array of hostnames to be added or removed from the protected hosts list.
	Hostnames pulumi.StringArrayInput
	// . Indicates how the `hostnames` array is to be applied. Allowed values are:
	// - **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.
	// - **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.
	// - **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.
	Mode pulumi.StringInput
}

func (AppSecSelectedHostnamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecSelectedHostnamesArgs)(nil)).Elem()
}

type AppSecSelectedHostnamesInput interface {
	pulumi.Input

	ToAppSecSelectedHostnamesOutput() AppSecSelectedHostnamesOutput
	ToAppSecSelectedHostnamesOutputWithContext(ctx context.Context) AppSecSelectedHostnamesOutput
}

func (*AppSecSelectedHostnames) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecSelectedHostnames)(nil)).Elem()
}

func (i *AppSecSelectedHostnames) ToAppSecSelectedHostnamesOutput() AppSecSelectedHostnamesOutput {
	return i.ToAppSecSelectedHostnamesOutputWithContext(context.Background())
}

func (i *AppSecSelectedHostnames) ToAppSecSelectedHostnamesOutputWithContext(ctx context.Context) AppSecSelectedHostnamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSelectedHostnamesOutput)
}

// AppSecSelectedHostnamesArrayInput is an input type that accepts AppSecSelectedHostnamesArray and AppSecSelectedHostnamesArrayOutput values.
// You can construct a concrete instance of `AppSecSelectedHostnamesArrayInput` via:
//
//	AppSecSelectedHostnamesArray{ AppSecSelectedHostnamesArgs{...} }
type AppSecSelectedHostnamesArrayInput interface {
	pulumi.Input

	ToAppSecSelectedHostnamesArrayOutput() AppSecSelectedHostnamesArrayOutput
	ToAppSecSelectedHostnamesArrayOutputWithContext(context.Context) AppSecSelectedHostnamesArrayOutput
}

type AppSecSelectedHostnamesArray []AppSecSelectedHostnamesInput

func (AppSecSelectedHostnamesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecSelectedHostnames)(nil)).Elem()
}

func (i AppSecSelectedHostnamesArray) ToAppSecSelectedHostnamesArrayOutput() AppSecSelectedHostnamesArrayOutput {
	return i.ToAppSecSelectedHostnamesArrayOutputWithContext(context.Background())
}

func (i AppSecSelectedHostnamesArray) ToAppSecSelectedHostnamesArrayOutputWithContext(ctx context.Context) AppSecSelectedHostnamesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSelectedHostnamesArrayOutput)
}

// AppSecSelectedHostnamesMapInput is an input type that accepts AppSecSelectedHostnamesMap and AppSecSelectedHostnamesMapOutput values.
// You can construct a concrete instance of `AppSecSelectedHostnamesMapInput` via:
//
//	AppSecSelectedHostnamesMap{ "key": AppSecSelectedHostnamesArgs{...} }
type AppSecSelectedHostnamesMapInput interface {
	pulumi.Input

	ToAppSecSelectedHostnamesMapOutput() AppSecSelectedHostnamesMapOutput
	ToAppSecSelectedHostnamesMapOutputWithContext(context.Context) AppSecSelectedHostnamesMapOutput
}

type AppSecSelectedHostnamesMap map[string]AppSecSelectedHostnamesInput

func (AppSecSelectedHostnamesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecSelectedHostnames)(nil)).Elem()
}

func (i AppSecSelectedHostnamesMap) ToAppSecSelectedHostnamesMapOutput() AppSecSelectedHostnamesMapOutput {
	return i.ToAppSecSelectedHostnamesMapOutputWithContext(context.Background())
}

func (i AppSecSelectedHostnamesMap) ToAppSecSelectedHostnamesMapOutputWithContext(ctx context.Context) AppSecSelectedHostnamesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSelectedHostnamesMapOutput)
}

type AppSecSelectedHostnamesOutput struct{ *pulumi.OutputState }

func (AppSecSelectedHostnamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecSelectedHostnames)(nil)).Elem()
}

func (o AppSecSelectedHostnamesOutput) ToAppSecSelectedHostnamesOutput() AppSecSelectedHostnamesOutput {
	return o
}

func (o AppSecSelectedHostnamesOutput) ToAppSecSelectedHostnamesOutputWithContext(ctx context.Context) AppSecSelectedHostnamesOutput {
	return o
}

// . Unique identifier of the security configuration associated with the hostnames.
func (o AppSecSelectedHostnamesOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecSelectedHostnames) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// . JSON array of hostnames to be added or removed from the protected hosts list.
func (o AppSecSelectedHostnamesOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppSecSelectedHostnames) pulumi.StringArrayOutput { return v.Hostnames }).(pulumi.StringArrayOutput)
}

// . Indicates how the `hostnames` array is to be applied. Allowed values are:
// - **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.
// - **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.
// - **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.
func (o AppSecSelectedHostnamesOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecSelectedHostnames) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

type AppSecSelectedHostnamesArrayOutput struct{ *pulumi.OutputState }

func (AppSecSelectedHostnamesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecSelectedHostnames)(nil)).Elem()
}

func (o AppSecSelectedHostnamesArrayOutput) ToAppSecSelectedHostnamesArrayOutput() AppSecSelectedHostnamesArrayOutput {
	return o
}

func (o AppSecSelectedHostnamesArrayOutput) ToAppSecSelectedHostnamesArrayOutputWithContext(ctx context.Context) AppSecSelectedHostnamesArrayOutput {
	return o
}

func (o AppSecSelectedHostnamesArrayOutput) Index(i pulumi.IntInput) AppSecSelectedHostnamesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecSelectedHostnames {
		return vs[0].([]*AppSecSelectedHostnames)[vs[1].(int)]
	}).(AppSecSelectedHostnamesOutput)
}

type AppSecSelectedHostnamesMapOutput struct{ *pulumi.OutputState }

func (AppSecSelectedHostnamesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecSelectedHostnames)(nil)).Elem()
}

func (o AppSecSelectedHostnamesMapOutput) ToAppSecSelectedHostnamesMapOutput() AppSecSelectedHostnamesMapOutput {
	return o
}

func (o AppSecSelectedHostnamesMapOutput) ToAppSecSelectedHostnamesMapOutputWithContext(ctx context.Context) AppSecSelectedHostnamesMapOutput {
	return o
}

func (o AppSecSelectedHostnamesMapOutput) MapIndex(k pulumi.StringInput) AppSecSelectedHostnamesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecSelectedHostnames {
		return vs[0].(map[string]*AppSecSelectedHostnames)[vs[1].(string)]
	}).(AppSecSelectedHostnamesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecSelectedHostnamesInput)(nil)).Elem(), &AppSecSelectedHostnames{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecSelectedHostnamesArrayInput)(nil)).Elem(), AppSecSelectedHostnamesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecSelectedHostnamesMapInput)(nil)).Elem(), AppSecSelectedHostnamesMap{})
	pulumi.RegisterOutputType(AppSecSelectedHostnamesOutput{})
	pulumi.RegisterOutputType(AppSecSelectedHostnamesArrayOutput{})
	pulumi.RegisterOutputType(AppSecSelectedHostnamesMapOutput{})
}
