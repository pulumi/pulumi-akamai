// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v8/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppsecRapidRules struct {
	pulumi.CustomResourceState

	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Default action that applies to violations of all rapid rules
	DefaultAction pulumi.StringOutput `pulumi:"defaultAction"`
	// Hidden attribute containing information about rapid rules status enabled/disabled
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// JSON-formatted list of rule definition (ID, action, action lock and exception)
	RuleDefinitions pulumi.StringOutput `pulumi:"ruleDefinitions"`
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewAppsecRapidRules registers a new resource with the given unique name, arguments, and options.
func NewAppsecRapidRules(ctx *pulumi.Context,
	name string, args *AppsecRapidRulesArgs, opts ...pulumi.ResourceOption) (*AppsecRapidRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppsecRapidRules
	err := ctx.RegisterResource("akamai:index/appsecRapidRules:AppsecRapidRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppsecRapidRules gets an existing AppsecRapidRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppsecRapidRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppsecRapidRulesState, opts ...pulumi.ResourceOption) (*AppsecRapidRules, error) {
	var resource AppsecRapidRules
	err := ctx.ReadResource("akamai:index/appsecRapidRules:AppsecRapidRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppsecRapidRules resources.
type appsecRapidRulesState struct {
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// Default action that applies to violations of all rapid rules
	DefaultAction *string `pulumi:"defaultAction"`
	// Hidden attribute containing information about rapid rules status enabled/disabled
	Enabled *bool `pulumi:"enabled"`
	// JSON-formatted list of rule definition (ID, action, action lock and exception)
	RuleDefinitions *string `pulumi:"ruleDefinitions"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppsecRapidRulesState struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// Default action that applies to violations of all rapid rules
	DefaultAction pulumi.StringPtrInput
	// Hidden attribute containing information about rapid rules status enabled/disabled
	Enabled pulumi.BoolPtrInput
	// JSON-formatted list of rule definition (ID, action, action lock and exception)
	RuleDefinitions pulumi.StringPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppsecRapidRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecRapidRulesState)(nil)).Elem()
}

type appsecRapidRulesArgs struct {
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// Default action that applies to violations of all rapid rules
	DefaultAction *string `pulumi:"defaultAction"`
	// JSON-formatted list of rule definition (ID, action, action lock and exception)
	RuleDefinitions *string `pulumi:"ruleDefinitions"`
	// Unique identifier of the security policy
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppsecRapidRules resource.
type AppsecRapidRulesArgs struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// Default action that applies to violations of all rapid rules
	DefaultAction pulumi.StringPtrInput
	// JSON-formatted list of rule definition (ID, action, action lock and exception)
	RuleDefinitions pulumi.StringPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringInput
}

func (AppsecRapidRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecRapidRulesArgs)(nil)).Elem()
}

type AppsecRapidRulesInput interface {
	pulumi.Input

	ToAppsecRapidRulesOutput() AppsecRapidRulesOutput
	ToAppsecRapidRulesOutputWithContext(ctx context.Context) AppsecRapidRulesOutput
}

func (*AppsecRapidRules) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecRapidRules)(nil)).Elem()
}

func (i *AppsecRapidRules) ToAppsecRapidRulesOutput() AppsecRapidRulesOutput {
	return i.ToAppsecRapidRulesOutputWithContext(context.Background())
}

func (i *AppsecRapidRules) ToAppsecRapidRulesOutputWithContext(ctx context.Context) AppsecRapidRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecRapidRulesOutput)
}

// AppsecRapidRulesArrayInput is an input type that accepts AppsecRapidRulesArray and AppsecRapidRulesArrayOutput values.
// You can construct a concrete instance of `AppsecRapidRulesArrayInput` via:
//
//	AppsecRapidRulesArray{ AppsecRapidRulesArgs{...} }
type AppsecRapidRulesArrayInput interface {
	pulumi.Input

	ToAppsecRapidRulesArrayOutput() AppsecRapidRulesArrayOutput
	ToAppsecRapidRulesArrayOutputWithContext(context.Context) AppsecRapidRulesArrayOutput
}

type AppsecRapidRulesArray []AppsecRapidRulesInput

func (AppsecRapidRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecRapidRules)(nil)).Elem()
}

func (i AppsecRapidRulesArray) ToAppsecRapidRulesArrayOutput() AppsecRapidRulesArrayOutput {
	return i.ToAppsecRapidRulesArrayOutputWithContext(context.Background())
}

func (i AppsecRapidRulesArray) ToAppsecRapidRulesArrayOutputWithContext(ctx context.Context) AppsecRapidRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecRapidRulesArrayOutput)
}

// AppsecRapidRulesMapInput is an input type that accepts AppsecRapidRulesMap and AppsecRapidRulesMapOutput values.
// You can construct a concrete instance of `AppsecRapidRulesMapInput` via:
//
//	AppsecRapidRulesMap{ "key": AppsecRapidRulesArgs{...} }
type AppsecRapidRulesMapInput interface {
	pulumi.Input

	ToAppsecRapidRulesMapOutput() AppsecRapidRulesMapOutput
	ToAppsecRapidRulesMapOutputWithContext(context.Context) AppsecRapidRulesMapOutput
}

type AppsecRapidRulesMap map[string]AppsecRapidRulesInput

func (AppsecRapidRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecRapidRules)(nil)).Elem()
}

func (i AppsecRapidRulesMap) ToAppsecRapidRulesMapOutput() AppsecRapidRulesMapOutput {
	return i.ToAppsecRapidRulesMapOutputWithContext(context.Background())
}

func (i AppsecRapidRulesMap) ToAppsecRapidRulesMapOutputWithContext(ctx context.Context) AppsecRapidRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecRapidRulesMapOutput)
}

type AppsecRapidRulesOutput struct{ *pulumi.OutputState }

func (AppsecRapidRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecRapidRules)(nil)).Elem()
}

func (o AppsecRapidRulesOutput) ToAppsecRapidRulesOutput() AppsecRapidRulesOutput {
	return o
}

func (o AppsecRapidRulesOutput) ToAppsecRapidRulesOutputWithContext(ctx context.Context) AppsecRapidRulesOutput {
	return o
}

// Unique identifier of the security configuration
func (o AppsecRapidRulesOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppsecRapidRules) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Default action that applies to violations of all rapid rules
func (o AppsecRapidRulesOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecRapidRules) pulumi.StringOutput { return v.DefaultAction }).(pulumi.StringOutput)
}

// Hidden attribute containing information about rapid rules status enabled/disabled
func (o AppsecRapidRulesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppsecRapidRules) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// JSON-formatted list of rule definition (ID, action, action lock and exception)
func (o AppsecRapidRulesOutput) RuleDefinitions() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecRapidRules) pulumi.StringOutput { return v.RuleDefinitions }).(pulumi.StringOutput)
}

// Unique identifier of the security policy
func (o AppsecRapidRulesOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecRapidRules) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type AppsecRapidRulesArrayOutput struct{ *pulumi.OutputState }

func (AppsecRapidRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecRapidRules)(nil)).Elem()
}

func (o AppsecRapidRulesArrayOutput) ToAppsecRapidRulesArrayOutput() AppsecRapidRulesArrayOutput {
	return o
}

func (o AppsecRapidRulesArrayOutput) ToAppsecRapidRulesArrayOutputWithContext(ctx context.Context) AppsecRapidRulesArrayOutput {
	return o
}

func (o AppsecRapidRulesArrayOutput) Index(i pulumi.IntInput) AppsecRapidRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppsecRapidRules {
		return vs[0].([]*AppsecRapidRules)[vs[1].(int)]
	}).(AppsecRapidRulesOutput)
}

type AppsecRapidRulesMapOutput struct{ *pulumi.OutputState }

func (AppsecRapidRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecRapidRules)(nil)).Elem()
}

func (o AppsecRapidRulesMapOutput) ToAppsecRapidRulesMapOutput() AppsecRapidRulesMapOutput {
	return o
}

func (o AppsecRapidRulesMapOutput) ToAppsecRapidRulesMapOutputWithContext(ctx context.Context) AppsecRapidRulesMapOutput {
	return o
}

func (o AppsecRapidRulesMapOutput) MapIndex(k pulumi.StringInput) AppsecRapidRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppsecRapidRules {
		return vs[0].(map[string]*AppsecRapidRules)[vs[1].(string)]
	}).(AppsecRapidRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecRapidRulesInput)(nil)).Elem(), &AppsecRapidRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecRapidRulesArrayInput)(nil)).Elem(), AppsecRapidRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecRapidRulesMapInput)(nil)).Elem(), AppsecRapidRulesMap{})
	pulumi.RegisterOutputType(AppsecRapidRulesOutput{})
	pulumi.RegisterOutputType(AppsecRapidRulesArrayOutput{})
	pulumi.RegisterOutputType(AppsecRapidRulesMapOutput{})
}
