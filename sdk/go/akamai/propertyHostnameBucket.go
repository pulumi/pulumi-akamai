// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v8/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PropertyHostnameBucket struct {
	pulumi.CustomResourceState

	// The ID of the latest hostname bucket activation.
	ActivationId pulumi.StringOutput `pulumi:"activationId"`
	// The unique identifier for the contract. Provide it if resolving the property without 'contract_id' and 'group_id' is not
	// possible
	ContractId pulumi.StringOutput `pulumi:"contractId"`
	// The unique identifier for the group. Provide it if resolving the property without 'contract_id' and 'group_id' is not
	// possible
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The computed number of hostnames after applying desired modifications. Used only to informduring the plan phase about
	// the number of hostnames that will be active after making the changes.
	HostnameCount pulumi.IntOutput `pulumi:"hostnameCount"`
	// The hostnames mapping. The key represents 'cname_from' and the value contains hostnames details, consisting of
	// certificate provisioning type and edge hostname.
	Hostnames PropertyHostnameBucketHostnamesMapOutput `pulumi:"hostnames"`
	// The network to activate on, either `STAGING` or `PRODUCTION`.
	Network pulumi.StringOutput `pulumi:"network"`
	// Assigns a log message to the request.
	Note pulumi.StringOutput `pulumi:"note"`
	// Email addresses to notify when the activation status changes.
	NotifyEmails pulumi.StringArrayOutput `pulumi:"notifyEmails"`
	// The number of hostnames with a `DEFAULT` certificate type that are still in the `PENDING` state.
	PendingDefaultCerts pulumi.IntOutput `pulumi:"pendingDefaultCerts"`
	// The unique identifier for the property.
	PropertyId pulumi.StringOutput `pulumi:"propertyId"`
	// The timeout value in minutes after which a single hostname activation will be canceled. Defaults to 50 minutes.
	TimeoutForActivation pulumi.IntOutput `pulumi:"timeoutForActivation"`
}

// NewPropertyHostnameBucket registers a new resource with the given unique name, arguments, and options.
func NewPropertyHostnameBucket(ctx *pulumi.Context,
	name string, args *PropertyHostnameBucketArgs, opts ...pulumi.ResourceOption) (*PropertyHostnameBucket, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Hostnames == nil {
		return nil, errors.New("invalid value for required argument 'Hostnames'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.PropertyId == nil {
		return nil, errors.New("invalid value for required argument 'PropertyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PropertyHostnameBucket
	err := ctx.RegisterResource("akamai:index/propertyHostnameBucket:PropertyHostnameBucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPropertyHostnameBucket gets an existing PropertyHostnameBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPropertyHostnameBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyHostnameBucketState, opts ...pulumi.ResourceOption) (*PropertyHostnameBucket, error) {
	var resource PropertyHostnameBucket
	err := ctx.ReadResource("akamai:index/propertyHostnameBucket:PropertyHostnameBucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PropertyHostnameBucket resources.
type propertyHostnameBucketState struct {
	// The ID of the latest hostname bucket activation.
	ActivationId *string `pulumi:"activationId"`
	// The unique identifier for the contract. Provide it if resolving the property without 'contract_id' and 'group_id' is not
	// possible
	ContractId *string `pulumi:"contractId"`
	// The unique identifier for the group. Provide it if resolving the property without 'contract_id' and 'group_id' is not
	// possible
	GroupId *string `pulumi:"groupId"`
	// The computed number of hostnames after applying desired modifications. Used only to informduring the plan phase about
	// the number of hostnames that will be active after making the changes.
	HostnameCount *int `pulumi:"hostnameCount"`
	// The hostnames mapping. The key represents 'cname_from' and the value contains hostnames details, consisting of
	// certificate provisioning type and edge hostname.
	Hostnames map[string]PropertyHostnameBucketHostnames `pulumi:"hostnames"`
	// The network to activate on, either `STAGING` or `PRODUCTION`.
	Network *string `pulumi:"network"`
	// Assigns a log message to the request.
	Note *string `pulumi:"note"`
	// Email addresses to notify when the activation status changes.
	NotifyEmails []string `pulumi:"notifyEmails"`
	// The number of hostnames with a `DEFAULT` certificate type that are still in the `PENDING` state.
	PendingDefaultCerts *int `pulumi:"pendingDefaultCerts"`
	// The unique identifier for the property.
	PropertyId *string `pulumi:"propertyId"`
	// The timeout value in minutes after which a single hostname activation will be canceled. Defaults to 50 minutes.
	TimeoutForActivation *int `pulumi:"timeoutForActivation"`
}

type PropertyHostnameBucketState struct {
	// The ID of the latest hostname bucket activation.
	ActivationId pulumi.StringPtrInput
	// The unique identifier for the contract. Provide it if resolving the property without 'contract_id' and 'group_id' is not
	// possible
	ContractId pulumi.StringPtrInput
	// The unique identifier for the group. Provide it if resolving the property without 'contract_id' and 'group_id' is not
	// possible
	GroupId pulumi.StringPtrInput
	// The computed number of hostnames after applying desired modifications. Used only to informduring the plan phase about
	// the number of hostnames that will be active after making the changes.
	HostnameCount pulumi.IntPtrInput
	// The hostnames mapping. The key represents 'cname_from' and the value contains hostnames details, consisting of
	// certificate provisioning type and edge hostname.
	Hostnames PropertyHostnameBucketHostnamesMapInput
	// The network to activate on, either `STAGING` or `PRODUCTION`.
	Network pulumi.StringPtrInput
	// Assigns a log message to the request.
	Note pulumi.StringPtrInput
	// Email addresses to notify when the activation status changes.
	NotifyEmails pulumi.StringArrayInput
	// The number of hostnames with a `DEFAULT` certificate type that are still in the `PENDING` state.
	PendingDefaultCerts pulumi.IntPtrInput
	// The unique identifier for the property.
	PropertyId pulumi.StringPtrInput
	// The timeout value in minutes after which a single hostname activation will be canceled. Defaults to 50 minutes.
	TimeoutForActivation pulumi.IntPtrInput
}

func (PropertyHostnameBucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyHostnameBucketState)(nil)).Elem()
}

type propertyHostnameBucketArgs struct {
	// The unique identifier for the contract. Provide it if resolving the property without 'contract_id' and 'group_id' is not
	// possible
	ContractId *string `pulumi:"contractId"`
	// The unique identifier for the group. Provide it if resolving the property without 'contract_id' and 'group_id' is not
	// possible
	GroupId *string `pulumi:"groupId"`
	// The computed number of hostnames after applying desired modifications. Used only to informduring the plan phase about
	// the number of hostnames that will be active after making the changes.
	HostnameCount *int `pulumi:"hostnameCount"`
	// The hostnames mapping. The key represents 'cname_from' and the value contains hostnames details, consisting of
	// certificate provisioning type and edge hostname.
	Hostnames map[string]PropertyHostnameBucketHostnames `pulumi:"hostnames"`
	// The network to activate on, either `STAGING` or `PRODUCTION`.
	Network string `pulumi:"network"`
	// Assigns a log message to the request.
	Note *string `pulumi:"note"`
	// Email addresses to notify when the activation status changes.
	NotifyEmails []string `pulumi:"notifyEmails"`
	// The unique identifier for the property.
	PropertyId string `pulumi:"propertyId"`
	// The timeout value in minutes after which a single hostname activation will be canceled. Defaults to 50 minutes.
	TimeoutForActivation *int `pulumi:"timeoutForActivation"`
}

// The set of arguments for constructing a PropertyHostnameBucket resource.
type PropertyHostnameBucketArgs struct {
	// The unique identifier for the contract. Provide it if resolving the property without 'contract_id' and 'group_id' is not
	// possible
	ContractId pulumi.StringPtrInput
	// The unique identifier for the group. Provide it if resolving the property without 'contract_id' and 'group_id' is not
	// possible
	GroupId pulumi.StringPtrInput
	// The computed number of hostnames after applying desired modifications. Used only to informduring the plan phase about
	// the number of hostnames that will be active after making the changes.
	HostnameCount pulumi.IntPtrInput
	// The hostnames mapping. The key represents 'cname_from' and the value contains hostnames details, consisting of
	// certificate provisioning type and edge hostname.
	Hostnames PropertyHostnameBucketHostnamesMapInput
	// The network to activate on, either `STAGING` or `PRODUCTION`.
	Network pulumi.StringInput
	// Assigns a log message to the request.
	Note pulumi.StringPtrInput
	// Email addresses to notify when the activation status changes.
	NotifyEmails pulumi.StringArrayInput
	// The unique identifier for the property.
	PropertyId pulumi.StringInput
	// The timeout value in minutes after which a single hostname activation will be canceled. Defaults to 50 minutes.
	TimeoutForActivation pulumi.IntPtrInput
}

func (PropertyHostnameBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyHostnameBucketArgs)(nil)).Elem()
}

type PropertyHostnameBucketInput interface {
	pulumi.Input

	ToPropertyHostnameBucketOutput() PropertyHostnameBucketOutput
	ToPropertyHostnameBucketOutputWithContext(ctx context.Context) PropertyHostnameBucketOutput
}

func (*PropertyHostnameBucket) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyHostnameBucket)(nil)).Elem()
}

func (i *PropertyHostnameBucket) ToPropertyHostnameBucketOutput() PropertyHostnameBucketOutput {
	return i.ToPropertyHostnameBucketOutputWithContext(context.Background())
}

func (i *PropertyHostnameBucket) ToPropertyHostnameBucketOutputWithContext(ctx context.Context) PropertyHostnameBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyHostnameBucketOutput)
}

// PropertyHostnameBucketArrayInput is an input type that accepts PropertyHostnameBucketArray and PropertyHostnameBucketArrayOutput values.
// You can construct a concrete instance of `PropertyHostnameBucketArrayInput` via:
//
//	PropertyHostnameBucketArray{ PropertyHostnameBucketArgs{...} }
type PropertyHostnameBucketArrayInput interface {
	pulumi.Input

	ToPropertyHostnameBucketArrayOutput() PropertyHostnameBucketArrayOutput
	ToPropertyHostnameBucketArrayOutputWithContext(context.Context) PropertyHostnameBucketArrayOutput
}

type PropertyHostnameBucketArray []PropertyHostnameBucketInput

func (PropertyHostnameBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PropertyHostnameBucket)(nil)).Elem()
}

func (i PropertyHostnameBucketArray) ToPropertyHostnameBucketArrayOutput() PropertyHostnameBucketArrayOutput {
	return i.ToPropertyHostnameBucketArrayOutputWithContext(context.Background())
}

func (i PropertyHostnameBucketArray) ToPropertyHostnameBucketArrayOutputWithContext(ctx context.Context) PropertyHostnameBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyHostnameBucketArrayOutput)
}

// PropertyHostnameBucketMapInput is an input type that accepts PropertyHostnameBucketMap and PropertyHostnameBucketMapOutput values.
// You can construct a concrete instance of `PropertyHostnameBucketMapInput` via:
//
//	PropertyHostnameBucketMap{ "key": PropertyHostnameBucketArgs{...} }
type PropertyHostnameBucketMapInput interface {
	pulumi.Input

	ToPropertyHostnameBucketMapOutput() PropertyHostnameBucketMapOutput
	ToPropertyHostnameBucketMapOutputWithContext(context.Context) PropertyHostnameBucketMapOutput
}

type PropertyHostnameBucketMap map[string]PropertyHostnameBucketInput

func (PropertyHostnameBucketMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PropertyHostnameBucket)(nil)).Elem()
}

func (i PropertyHostnameBucketMap) ToPropertyHostnameBucketMapOutput() PropertyHostnameBucketMapOutput {
	return i.ToPropertyHostnameBucketMapOutputWithContext(context.Background())
}

func (i PropertyHostnameBucketMap) ToPropertyHostnameBucketMapOutputWithContext(ctx context.Context) PropertyHostnameBucketMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyHostnameBucketMapOutput)
}

type PropertyHostnameBucketOutput struct{ *pulumi.OutputState }

func (PropertyHostnameBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyHostnameBucket)(nil)).Elem()
}

func (o PropertyHostnameBucketOutput) ToPropertyHostnameBucketOutput() PropertyHostnameBucketOutput {
	return o
}

func (o PropertyHostnameBucketOutput) ToPropertyHostnameBucketOutputWithContext(ctx context.Context) PropertyHostnameBucketOutput {
	return o
}

// The ID of the latest hostname bucket activation.
func (o PropertyHostnameBucketOutput) ActivationId() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) pulumi.StringOutput { return v.ActivationId }).(pulumi.StringOutput)
}

// The unique identifier for the contract. Provide it if resolving the property without 'contract_id' and 'group_id' is not
// possible
func (o PropertyHostnameBucketOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) pulumi.StringOutput { return v.ContractId }).(pulumi.StringOutput)
}

// The unique identifier for the group. Provide it if resolving the property without 'contract_id' and 'group_id' is not
// possible
func (o PropertyHostnameBucketOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// The computed number of hostnames after applying desired modifications. Used only to informduring the plan phase about
// the number of hostnames that will be active after making the changes.
func (o PropertyHostnameBucketOutput) HostnameCount() pulumi.IntOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) pulumi.IntOutput { return v.HostnameCount }).(pulumi.IntOutput)
}

// The hostnames mapping. The key represents 'cname_from' and the value contains hostnames details, consisting of
// certificate provisioning type and edge hostname.
func (o PropertyHostnameBucketOutput) Hostnames() PropertyHostnameBucketHostnamesMapOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) PropertyHostnameBucketHostnamesMapOutput { return v.Hostnames }).(PropertyHostnameBucketHostnamesMapOutput)
}

// The network to activate on, either `STAGING` or `PRODUCTION`.
func (o PropertyHostnameBucketOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// Assigns a log message to the request.
func (o PropertyHostnameBucketOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) pulumi.StringOutput { return v.Note }).(pulumi.StringOutput)
}

// Email addresses to notify when the activation status changes.
func (o PropertyHostnameBucketOutput) NotifyEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) pulumi.StringArrayOutput { return v.NotifyEmails }).(pulumi.StringArrayOutput)
}

// The number of hostnames with a `DEFAULT` certificate type that are still in the `PENDING` state.
func (o PropertyHostnameBucketOutput) PendingDefaultCerts() pulumi.IntOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) pulumi.IntOutput { return v.PendingDefaultCerts }).(pulumi.IntOutput)
}

// The unique identifier for the property.
func (o PropertyHostnameBucketOutput) PropertyId() pulumi.StringOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) pulumi.StringOutput { return v.PropertyId }).(pulumi.StringOutput)
}

// The timeout value in minutes after which a single hostname activation will be canceled. Defaults to 50 minutes.
func (o PropertyHostnameBucketOutput) TimeoutForActivation() pulumi.IntOutput {
	return o.ApplyT(func(v *PropertyHostnameBucket) pulumi.IntOutput { return v.TimeoutForActivation }).(pulumi.IntOutput)
}

type PropertyHostnameBucketArrayOutput struct{ *pulumi.OutputState }

func (PropertyHostnameBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PropertyHostnameBucket)(nil)).Elem()
}

func (o PropertyHostnameBucketArrayOutput) ToPropertyHostnameBucketArrayOutput() PropertyHostnameBucketArrayOutput {
	return o
}

func (o PropertyHostnameBucketArrayOutput) ToPropertyHostnameBucketArrayOutputWithContext(ctx context.Context) PropertyHostnameBucketArrayOutput {
	return o
}

func (o PropertyHostnameBucketArrayOutput) Index(i pulumi.IntInput) PropertyHostnameBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PropertyHostnameBucket {
		return vs[0].([]*PropertyHostnameBucket)[vs[1].(int)]
	}).(PropertyHostnameBucketOutput)
}

type PropertyHostnameBucketMapOutput struct{ *pulumi.OutputState }

func (PropertyHostnameBucketMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PropertyHostnameBucket)(nil)).Elem()
}

func (o PropertyHostnameBucketMapOutput) ToPropertyHostnameBucketMapOutput() PropertyHostnameBucketMapOutput {
	return o
}

func (o PropertyHostnameBucketMapOutput) ToPropertyHostnameBucketMapOutputWithContext(ctx context.Context) PropertyHostnameBucketMapOutput {
	return o
}

func (o PropertyHostnameBucketMapOutput) MapIndex(k pulumi.StringInput) PropertyHostnameBucketOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PropertyHostnameBucket {
		return vs[0].(map[string]*PropertyHostnameBucket)[vs[1].(string)]
	}).(PropertyHostnameBucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyHostnameBucketInput)(nil)).Elem(), &PropertyHostnameBucket{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyHostnameBucketArrayInput)(nil)).Elem(), PropertyHostnameBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyHostnameBucketMapInput)(nil)).Elem(), PropertyHostnameBucketMap{})
	pulumi.RegisterOutputType(PropertyHostnameBucketOutput{})
	pulumi.RegisterOutputType(PropertyHostnameBucketArrayOutput{})
	pulumi.RegisterOutputType(PropertyHostnameBucketMapOutput{})
}
