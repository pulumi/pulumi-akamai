// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CpsThirdPartyEnrollment struct {
	pulumi.CustomResourceState

	// Whether acknowledge warnings before certificate verification
	AcknowledgePreVerificationWarnings pulumi.BoolPtrOutput `pulumi:"acknowledgePreVerificationWarnings"`
	// Contact information for the certificate administrator to use at organization
	AdminContact CpsThirdPartyEnrollmentAdminContactOutput `pulumi:"adminContact"`
	// Allow to duplicate common name
	AllowDuplicateCommonName pulumi.BoolPtrOutput `pulumi:"allowDuplicateCommonName"`
	// List of warnings to be automatically approved
	AutoApproveWarnings pulumi.StringArrayOutput `pulumi:"autoApproveWarnings"`
	// Certificate trust chain type
	CertificateChainType pulumi.StringPtrOutput `pulumi:"certificateChainType"`
	// When set to false, the certificate will be deployed to both staging and production networks
	ChangeManagement pulumi.BoolPtrOutput `pulumi:"changeManagement"`
	// Common name used for enrollment
	CommonName pulumi.StringOutput `pulumi:"commonName"`
	// Contract ID for which enrollment is retrieved
	ContractId pulumi.StringOutput `pulumi:"contractId"`
	// Data used for generation of Certificate Signing Request
	Csr CpsThirdPartyEnrollmentCsrOutput `pulumi:"csr"`
	// When true, SANs are excluded from the CSR
	ExcludeSans pulumi.BoolPtrOutput `pulumi:"excludeSans"`
	// Settings containing network information and TLS metadata used by CPS
	NetworkConfiguration CpsThirdPartyEnrollmentNetworkConfigurationOutput `pulumi:"networkConfiguration"`
	// Organization information
	Organization CpsThirdPartyEnrollmentOrganizationOutput `pulumi:"organization"`
	// List of SANs
	Sans pulumi.StringArrayOutput `pulumi:"sans"`
	// Type of TLS deployment network
	SecureNetwork pulumi.StringOutput `pulumi:"secureNetwork"`
	// The SHA function. Changing this value may require running terraform destroy, terraform apply
	SignatureAlgorithm pulumi.StringPtrOutput `pulumi:"signatureAlgorithm"`
	// Whether Server Name Indication is used for enrollment
	SniOnly pulumi.BoolOutput `pulumi:"sniOnly"`
	// Contact information for an administrator at Akamai
	TechContact CpsThirdPartyEnrollmentTechContactOutput `pulumi:"techContact"`
}

// NewCpsThirdPartyEnrollment registers a new resource with the given unique name, arguments, and options.
func NewCpsThirdPartyEnrollment(ctx *pulumi.Context,
	name string, args *CpsThirdPartyEnrollmentArgs, opts ...pulumi.ResourceOption) (*CpsThirdPartyEnrollment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminContact == nil {
		return nil, errors.New("invalid value for required argument 'AdminContact'")
	}
	if args.CommonName == nil {
		return nil, errors.New("invalid value for required argument 'CommonName'")
	}
	if args.ContractId == nil {
		return nil, errors.New("invalid value for required argument 'ContractId'")
	}
	if args.Csr == nil {
		return nil, errors.New("invalid value for required argument 'Csr'")
	}
	if args.NetworkConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'NetworkConfiguration'")
	}
	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	if args.SecureNetwork == nil {
		return nil, errors.New("invalid value for required argument 'SecureNetwork'")
	}
	if args.SniOnly == nil {
		return nil, errors.New("invalid value for required argument 'SniOnly'")
	}
	if args.TechContact == nil {
		return nil, errors.New("invalid value for required argument 'TechContact'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CpsThirdPartyEnrollment
	err := ctx.RegisterResource("akamai:index/cpsThirdPartyEnrollment:CpsThirdPartyEnrollment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCpsThirdPartyEnrollment gets an existing CpsThirdPartyEnrollment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCpsThirdPartyEnrollment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CpsThirdPartyEnrollmentState, opts ...pulumi.ResourceOption) (*CpsThirdPartyEnrollment, error) {
	var resource CpsThirdPartyEnrollment
	err := ctx.ReadResource("akamai:index/cpsThirdPartyEnrollment:CpsThirdPartyEnrollment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CpsThirdPartyEnrollment resources.
type cpsThirdPartyEnrollmentState struct {
	// Whether acknowledge warnings before certificate verification
	AcknowledgePreVerificationWarnings *bool `pulumi:"acknowledgePreVerificationWarnings"`
	// Contact information for the certificate administrator to use at organization
	AdminContact *CpsThirdPartyEnrollmentAdminContact `pulumi:"adminContact"`
	// Allow to duplicate common name
	AllowDuplicateCommonName *bool `pulumi:"allowDuplicateCommonName"`
	// List of warnings to be automatically approved
	AutoApproveWarnings []string `pulumi:"autoApproveWarnings"`
	// Certificate trust chain type
	CertificateChainType *string `pulumi:"certificateChainType"`
	// When set to false, the certificate will be deployed to both staging and production networks
	ChangeManagement *bool `pulumi:"changeManagement"`
	// Common name used for enrollment
	CommonName *string `pulumi:"commonName"`
	// Contract ID for which enrollment is retrieved
	ContractId *string `pulumi:"contractId"`
	// Data used for generation of Certificate Signing Request
	Csr *CpsThirdPartyEnrollmentCsr `pulumi:"csr"`
	// When true, SANs are excluded from the CSR
	ExcludeSans *bool `pulumi:"excludeSans"`
	// Settings containing network information and TLS metadata used by CPS
	NetworkConfiguration *CpsThirdPartyEnrollmentNetworkConfiguration `pulumi:"networkConfiguration"`
	// Organization information
	Organization *CpsThirdPartyEnrollmentOrganization `pulumi:"organization"`
	// List of SANs
	Sans []string `pulumi:"sans"`
	// Type of TLS deployment network
	SecureNetwork *string `pulumi:"secureNetwork"`
	// The SHA function. Changing this value may require running terraform destroy, terraform apply
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// Whether Server Name Indication is used for enrollment
	SniOnly *bool `pulumi:"sniOnly"`
	// Contact information for an administrator at Akamai
	TechContact *CpsThirdPartyEnrollmentTechContact `pulumi:"techContact"`
}

type CpsThirdPartyEnrollmentState struct {
	// Whether acknowledge warnings before certificate verification
	AcknowledgePreVerificationWarnings pulumi.BoolPtrInput
	// Contact information for the certificate administrator to use at organization
	AdminContact CpsThirdPartyEnrollmentAdminContactPtrInput
	// Allow to duplicate common name
	AllowDuplicateCommonName pulumi.BoolPtrInput
	// List of warnings to be automatically approved
	AutoApproveWarnings pulumi.StringArrayInput
	// Certificate trust chain type
	CertificateChainType pulumi.StringPtrInput
	// When set to false, the certificate will be deployed to both staging and production networks
	ChangeManagement pulumi.BoolPtrInput
	// Common name used for enrollment
	CommonName pulumi.StringPtrInput
	// Contract ID for which enrollment is retrieved
	ContractId pulumi.StringPtrInput
	// Data used for generation of Certificate Signing Request
	Csr CpsThirdPartyEnrollmentCsrPtrInput
	// When true, SANs are excluded from the CSR
	ExcludeSans pulumi.BoolPtrInput
	// Settings containing network information and TLS metadata used by CPS
	NetworkConfiguration CpsThirdPartyEnrollmentNetworkConfigurationPtrInput
	// Organization information
	Organization CpsThirdPartyEnrollmentOrganizationPtrInput
	// List of SANs
	Sans pulumi.StringArrayInput
	// Type of TLS deployment network
	SecureNetwork pulumi.StringPtrInput
	// The SHA function. Changing this value may require running terraform destroy, terraform apply
	SignatureAlgorithm pulumi.StringPtrInput
	// Whether Server Name Indication is used for enrollment
	SniOnly pulumi.BoolPtrInput
	// Contact information for an administrator at Akamai
	TechContact CpsThirdPartyEnrollmentTechContactPtrInput
}

func (CpsThirdPartyEnrollmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*cpsThirdPartyEnrollmentState)(nil)).Elem()
}

type cpsThirdPartyEnrollmentArgs struct {
	// Whether acknowledge warnings before certificate verification
	AcknowledgePreVerificationWarnings *bool `pulumi:"acknowledgePreVerificationWarnings"`
	// Contact information for the certificate administrator to use at organization
	AdminContact CpsThirdPartyEnrollmentAdminContact `pulumi:"adminContact"`
	// Allow to duplicate common name
	AllowDuplicateCommonName *bool `pulumi:"allowDuplicateCommonName"`
	// List of warnings to be automatically approved
	AutoApproveWarnings []string `pulumi:"autoApproveWarnings"`
	// Certificate trust chain type
	CertificateChainType *string `pulumi:"certificateChainType"`
	// When set to false, the certificate will be deployed to both staging and production networks
	ChangeManagement *bool `pulumi:"changeManagement"`
	// Common name used for enrollment
	CommonName string `pulumi:"commonName"`
	// Contract ID for which enrollment is retrieved
	ContractId string `pulumi:"contractId"`
	// Data used for generation of Certificate Signing Request
	Csr CpsThirdPartyEnrollmentCsr `pulumi:"csr"`
	// When true, SANs are excluded from the CSR
	ExcludeSans *bool `pulumi:"excludeSans"`
	// Settings containing network information and TLS metadata used by CPS
	NetworkConfiguration CpsThirdPartyEnrollmentNetworkConfiguration `pulumi:"networkConfiguration"`
	// Organization information
	Organization CpsThirdPartyEnrollmentOrganization `pulumi:"organization"`
	// List of SANs
	Sans []string `pulumi:"sans"`
	// Type of TLS deployment network
	SecureNetwork string `pulumi:"secureNetwork"`
	// The SHA function. Changing this value may require running terraform destroy, terraform apply
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// Whether Server Name Indication is used for enrollment
	SniOnly bool `pulumi:"sniOnly"`
	// Contact information for an administrator at Akamai
	TechContact CpsThirdPartyEnrollmentTechContact `pulumi:"techContact"`
}

// The set of arguments for constructing a CpsThirdPartyEnrollment resource.
type CpsThirdPartyEnrollmentArgs struct {
	// Whether acknowledge warnings before certificate verification
	AcknowledgePreVerificationWarnings pulumi.BoolPtrInput
	// Contact information for the certificate administrator to use at organization
	AdminContact CpsThirdPartyEnrollmentAdminContactInput
	// Allow to duplicate common name
	AllowDuplicateCommonName pulumi.BoolPtrInput
	// List of warnings to be automatically approved
	AutoApproveWarnings pulumi.StringArrayInput
	// Certificate trust chain type
	CertificateChainType pulumi.StringPtrInput
	// When set to false, the certificate will be deployed to both staging and production networks
	ChangeManagement pulumi.BoolPtrInput
	// Common name used for enrollment
	CommonName pulumi.StringInput
	// Contract ID for which enrollment is retrieved
	ContractId pulumi.StringInput
	// Data used for generation of Certificate Signing Request
	Csr CpsThirdPartyEnrollmentCsrInput
	// When true, SANs are excluded from the CSR
	ExcludeSans pulumi.BoolPtrInput
	// Settings containing network information and TLS metadata used by CPS
	NetworkConfiguration CpsThirdPartyEnrollmentNetworkConfigurationInput
	// Organization information
	Organization CpsThirdPartyEnrollmentOrganizationInput
	// List of SANs
	Sans pulumi.StringArrayInput
	// Type of TLS deployment network
	SecureNetwork pulumi.StringInput
	// The SHA function. Changing this value may require running terraform destroy, terraform apply
	SignatureAlgorithm pulumi.StringPtrInput
	// Whether Server Name Indication is used for enrollment
	SniOnly pulumi.BoolInput
	// Contact information for an administrator at Akamai
	TechContact CpsThirdPartyEnrollmentTechContactInput
}

func (CpsThirdPartyEnrollmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cpsThirdPartyEnrollmentArgs)(nil)).Elem()
}

type CpsThirdPartyEnrollmentInput interface {
	pulumi.Input

	ToCpsThirdPartyEnrollmentOutput() CpsThirdPartyEnrollmentOutput
	ToCpsThirdPartyEnrollmentOutputWithContext(ctx context.Context) CpsThirdPartyEnrollmentOutput
}

func (*CpsThirdPartyEnrollment) ElementType() reflect.Type {
	return reflect.TypeOf((**CpsThirdPartyEnrollment)(nil)).Elem()
}

func (i *CpsThirdPartyEnrollment) ToCpsThirdPartyEnrollmentOutput() CpsThirdPartyEnrollmentOutput {
	return i.ToCpsThirdPartyEnrollmentOutputWithContext(context.Background())
}

func (i *CpsThirdPartyEnrollment) ToCpsThirdPartyEnrollmentOutputWithContext(ctx context.Context) CpsThirdPartyEnrollmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CpsThirdPartyEnrollmentOutput)
}

// CpsThirdPartyEnrollmentArrayInput is an input type that accepts CpsThirdPartyEnrollmentArray and CpsThirdPartyEnrollmentArrayOutput values.
// You can construct a concrete instance of `CpsThirdPartyEnrollmentArrayInput` via:
//
//	CpsThirdPartyEnrollmentArray{ CpsThirdPartyEnrollmentArgs{...} }
type CpsThirdPartyEnrollmentArrayInput interface {
	pulumi.Input

	ToCpsThirdPartyEnrollmentArrayOutput() CpsThirdPartyEnrollmentArrayOutput
	ToCpsThirdPartyEnrollmentArrayOutputWithContext(context.Context) CpsThirdPartyEnrollmentArrayOutput
}

type CpsThirdPartyEnrollmentArray []CpsThirdPartyEnrollmentInput

func (CpsThirdPartyEnrollmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CpsThirdPartyEnrollment)(nil)).Elem()
}

func (i CpsThirdPartyEnrollmentArray) ToCpsThirdPartyEnrollmentArrayOutput() CpsThirdPartyEnrollmentArrayOutput {
	return i.ToCpsThirdPartyEnrollmentArrayOutputWithContext(context.Background())
}

func (i CpsThirdPartyEnrollmentArray) ToCpsThirdPartyEnrollmentArrayOutputWithContext(ctx context.Context) CpsThirdPartyEnrollmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CpsThirdPartyEnrollmentArrayOutput)
}

// CpsThirdPartyEnrollmentMapInput is an input type that accepts CpsThirdPartyEnrollmentMap and CpsThirdPartyEnrollmentMapOutput values.
// You can construct a concrete instance of `CpsThirdPartyEnrollmentMapInput` via:
//
//	CpsThirdPartyEnrollmentMap{ "key": CpsThirdPartyEnrollmentArgs{...} }
type CpsThirdPartyEnrollmentMapInput interface {
	pulumi.Input

	ToCpsThirdPartyEnrollmentMapOutput() CpsThirdPartyEnrollmentMapOutput
	ToCpsThirdPartyEnrollmentMapOutputWithContext(context.Context) CpsThirdPartyEnrollmentMapOutput
}

type CpsThirdPartyEnrollmentMap map[string]CpsThirdPartyEnrollmentInput

func (CpsThirdPartyEnrollmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CpsThirdPartyEnrollment)(nil)).Elem()
}

func (i CpsThirdPartyEnrollmentMap) ToCpsThirdPartyEnrollmentMapOutput() CpsThirdPartyEnrollmentMapOutput {
	return i.ToCpsThirdPartyEnrollmentMapOutputWithContext(context.Background())
}

func (i CpsThirdPartyEnrollmentMap) ToCpsThirdPartyEnrollmentMapOutputWithContext(ctx context.Context) CpsThirdPartyEnrollmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CpsThirdPartyEnrollmentMapOutput)
}

type CpsThirdPartyEnrollmentOutput struct{ *pulumi.OutputState }

func (CpsThirdPartyEnrollmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CpsThirdPartyEnrollment)(nil)).Elem()
}

func (o CpsThirdPartyEnrollmentOutput) ToCpsThirdPartyEnrollmentOutput() CpsThirdPartyEnrollmentOutput {
	return o
}

func (o CpsThirdPartyEnrollmentOutput) ToCpsThirdPartyEnrollmentOutputWithContext(ctx context.Context) CpsThirdPartyEnrollmentOutput {
	return o
}

// Whether acknowledge warnings before certificate verification
func (o CpsThirdPartyEnrollmentOutput) AcknowledgePreVerificationWarnings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.BoolPtrOutput { return v.AcknowledgePreVerificationWarnings }).(pulumi.BoolPtrOutput)
}

// Contact information for the certificate administrator to use at organization
func (o CpsThirdPartyEnrollmentOutput) AdminContact() CpsThirdPartyEnrollmentAdminContactOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) CpsThirdPartyEnrollmentAdminContactOutput { return v.AdminContact }).(CpsThirdPartyEnrollmentAdminContactOutput)
}

// Allow to duplicate common name
func (o CpsThirdPartyEnrollmentOutput) AllowDuplicateCommonName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.BoolPtrOutput { return v.AllowDuplicateCommonName }).(pulumi.BoolPtrOutput)
}

// List of warnings to be automatically approved
func (o CpsThirdPartyEnrollmentOutput) AutoApproveWarnings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.StringArrayOutput { return v.AutoApproveWarnings }).(pulumi.StringArrayOutput)
}

// Certificate trust chain type
func (o CpsThirdPartyEnrollmentOutput) CertificateChainType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.StringPtrOutput { return v.CertificateChainType }).(pulumi.StringPtrOutput)
}

// When set to false, the certificate will be deployed to both staging and production networks
func (o CpsThirdPartyEnrollmentOutput) ChangeManagement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.BoolPtrOutput { return v.ChangeManagement }).(pulumi.BoolPtrOutput)
}

// Common name used for enrollment
func (o CpsThirdPartyEnrollmentOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.StringOutput { return v.CommonName }).(pulumi.StringOutput)
}

// Contract ID for which enrollment is retrieved
func (o CpsThirdPartyEnrollmentOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.StringOutput { return v.ContractId }).(pulumi.StringOutput)
}

// Data used for generation of Certificate Signing Request
func (o CpsThirdPartyEnrollmentOutput) Csr() CpsThirdPartyEnrollmentCsrOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) CpsThirdPartyEnrollmentCsrOutput { return v.Csr }).(CpsThirdPartyEnrollmentCsrOutput)
}

// When true, SANs are excluded from the CSR
func (o CpsThirdPartyEnrollmentOutput) ExcludeSans() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.BoolPtrOutput { return v.ExcludeSans }).(pulumi.BoolPtrOutput)
}

// Settings containing network information and TLS metadata used by CPS
func (o CpsThirdPartyEnrollmentOutput) NetworkConfiguration() CpsThirdPartyEnrollmentNetworkConfigurationOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) CpsThirdPartyEnrollmentNetworkConfigurationOutput {
		return v.NetworkConfiguration
	}).(CpsThirdPartyEnrollmentNetworkConfigurationOutput)
}

// Organization information
func (o CpsThirdPartyEnrollmentOutput) Organization() CpsThirdPartyEnrollmentOrganizationOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) CpsThirdPartyEnrollmentOrganizationOutput { return v.Organization }).(CpsThirdPartyEnrollmentOrganizationOutput)
}

// List of SANs
func (o CpsThirdPartyEnrollmentOutput) Sans() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.StringArrayOutput { return v.Sans }).(pulumi.StringArrayOutput)
}

// Type of TLS deployment network
func (o CpsThirdPartyEnrollmentOutput) SecureNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.StringOutput { return v.SecureNetwork }).(pulumi.StringOutput)
}

// The SHA function. Changing this value may require running terraform destroy, terraform apply
func (o CpsThirdPartyEnrollmentOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.StringPtrOutput { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// Whether Server Name Indication is used for enrollment
func (o CpsThirdPartyEnrollmentOutput) SniOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) pulumi.BoolOutput { return v.SniOnly }).(pulumi.BoolOutput)
}

// Contact information for an administrator at Akamai
func (o CpsThirdPartyEnrollmentOutput) TechContact() CpsThirdPartyEnrollmentTechContactOutput {
	return o.ApplyT(func(v *CpsThirdPartyEnrollment) CpsThirdPartyEnrollmentTechContactOutput { return v.TechContact }).(CpsThirdPartyEnrollmentTechContactOutput)
}

type CpsThirdPartyEnrollmentArrayOutput struct{ *pulumi.OutputState }

func (CpsThirdPartyEnrollmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CpsThirdPartyEnrollment)(nil)).Elem()
}

func (o CpsThirdPartyEnrollmentArrayOutput) ToCpsThirdPartyEnrollmentArrayOutput() CpsThirdPartyEnrollmentArrayOutput {
	return o
}

func (o CpsThirdPartyEnrollmentArrayOutput) ToCpsThirdPartyEnrollmentArrayOutputWithContext(ctx context.Context) CpsThirdPartyEnrollmentArrayOutput {
	return o
}

func (o CpsThirdPartyEnrollmentArrayOutput) Index(i pulumi.IntInput) CpsThirdPartyEnrollmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CpsThirdPartyEnrollment {
		return vs[0].([]*CpsThirdPartyEnrollment)[vs[1].(int)]
	}).(CpsThirdPartyEnrollmentOutput)
}

type CpsThirdPartyEnrollmentMapOutput struct{ *pulumi.OutputState }

func (CpsThirdPartyEnrollmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CpsThirdPartyEnrollment)(nil)).Elem()
}

func (o CpsThirdPartyEnrollmentMapOutput) ToCpsThirdPartyEnrollmentMapOutput() CpsThirdPartyEnrollmentMapOutput {
	return o
}

func (o CpsThirdPartyEnrollmentMapOutput) ToCpsThirdPartyEnrollmentMapOutputWithContext(ctx context.Context) CpsThirdPartyEnrollmentMapOutput {
	return o
}

func (o CpsThirdPartyEnrollmentMapOutput) MapIndex(k pulumi.StringInput) CpsThirdPartyEnrollmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CpsThirdPartyEnrollment {
		return vs[0].(map[string]*CpsThirdPartyEnrollment)[vs[1].(string)]
	}).(CpsThirdPartyEnrollmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CpsThirdPartyEnrollmentInput)(nil)).Elem(), &CpsThirdPartyEnrollment{})
	pulumi.RegisterInputType(reflect.TypeOf((*CpsThirdPartyEnrollmentArrayInput)(nil)).Elem(), CpsThirdPartyEnrollmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CpsThirdPartyEnrollmentMapInput)(nil)).Elem(), CpsThirdPartyEnrollmentMap{})
	pulumi.RegisterOutputType(CpsThirdPartyEnrollmentOutput{})
	pulumi.RegisterOutputType(CpsThirdPartyEnrollmentArrayOutput{})
	pulumi.RegisterOutputType(CpsThirdPartyEnrollmentMapOutput{})
}
