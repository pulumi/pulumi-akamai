// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `PropertyInclude` data source to get details about a specific include.
//
// ## Basic usage
//
// This example returns details for an include based on contract, group, and include IDs.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myExamplePropertyInclude, err := akamai.LookupPropertyInclude(ctx, &akamai.LookupPropertyIncludeArgs{
//				ContractId: "ctr_1234",
//				GroupId:    "grp_5678",
//				IncludeId:  "inc_9012",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("myExample", myExamplePropertyInclude)
//			return nil
//		})
//	}
//
// ```
//
// ## Attributes reference
//
// This data source returns these attributes:
//
// * `name` - The descriptive name for the include.
// * `type` - Specifies the type of the include, either `MICROSERVICES` or `COMMON_SETTINGS`. Use this field for filtering. `MICROSERVICES` allow different teams to work independently on different parts of a single site. `COMMON_SETTINGS` includes are useful for configurations that share a large number of settings, often managed by a central team.
// * `latestVersion` - Returns the most recent version of the include.
// * `stagingVersion` - The include version currently activated on the staging network.
// * `productionVersion` - The include version currently activated on the production network.
func LookupPropertyInclude(ctx *pulumi.Context, args *LookupPropertyIncludeArgs, opts ...pulumi.InvokeOption) (*LookupPropertyIncludeResult, error) {
	var rv LookupPropertyIncludeResult
	err := ctx.Invoke("akamai:index/getPropertyInclude:getPropertyInclude", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPropertyInclude.
type LookupPropertyIncludeArgs struct {
	// (Required) A contract's unique ID, including the optional `ctr_` prefix.
	ContractId string `pulumi:"contractId"`
	// (Required) A group's unique ID, including the optional `grp_` prefix.
	GroupId string `pulumi:"groupId"`
	// (Required) An include's unique ID with the optional `inc_` prefix.
	IncludeId string `pulumi:"includeId"`
}

// A collection of values returned by getPropertyInclude.
type LookupPropertyIncludeResult struct {
	ContractId string `pulumi:"contractId"`
	GroupId    string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	IncludeId         string `pulumi:"includeId"`
	LatestVersion     int    `pulumi:"latestVersion"`
	Name              string `pulumi:"name"`
	ProductionVersion int    `pulumi:"productionVersion"`
	StagingVersion    int    `pulumi:"stagingVersion"`
	Type              string `pulumi:"type"`
}

func LookupPropertyIncludeOutput(ctx *pulumi.Context, args LookupPropertyIncludeOutputArgs, opts ...pulumi.InvokeOption) LookupPropertyIncludeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPropertyIncludeResult, error) {
			args := v.(LookupPropertyIncludeArgs)
			r, err := LookupPropertyInclude(ctx, &args, opts...)
			var s LookupPropertyIncludeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPropertyIncludeResultOutput)
}

// A collection of arguments for invoking getPropertyInclude.
type LookupPropertyIncludeOutputArgs struct {
	// (Required) A contract's unique ID, including the optional `ctr_` prefix.
	ContractId pulumi.StringInput `pulumi:"contractId"`
	// (Required) A group's unique ID, including the optional `grp_` prefix.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// (Required) An include's unique ID with the optional `inc_` prefix.
	IncludeId pulumi.StringInput `pulumi:"includeId"`
}

func (LookupPropertyIncludeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPropertyIncludeArgs)(nil)).Elem()
}

// A collection of values returned by getPropertyInclude.
type LookupPropertyIncludeResultOutput struct{ *pulumi.OutputState }

func (LookupPropertyIncludeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPropertyIncludeResult)(nil)).Elem()
}

func (o LookupPropertyIncludeResultOutput) ToLookupPropertyIncludeResultOutput() LookupPropertyIncludeResultOutput {
	return o
}

func (o LookupPropertyIncludeResultOutput) ToLookupPropertyIncludeResultOutputWithContext(ctx context.Context) LookupPropertyIncludeResultOutput {
	return o
}

func (o LookupPropertyIncludeResultOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyIncludeResult) string { return v.ContractId }).(pulumi.StringOutput)
}

func (o LookupPropertyIncludeResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyIncludeResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPropertyIncludeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyIncludeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPropertyIncludeResultOutput) IncludeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyIncludeResult) string { return v.IncludeId }).(pulumi.StringOutput)
}

func (o LookupPropertyIncludeResultOutput) LatestVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPropertyIncludeResult) int { return v.LatestVersion }).(pulumi.IntOutput)
}

func (o LookupPropertyIncludeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyIncludeResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupPropertyIncludeResultOutput) ProductionVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPropertyIncludeResult) int { return v.ProductionVersion }).(pulumi.IntOutput)
}

func (o LookupPropertyIncludeResultOutput) StagingVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPropertyIncludeResult) int { return v.StagingVersion }).(pulumi.IntOutput)
}

func (o LookupPropertyIncludeResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyIncludeResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPropertyIncludeResultOutput{})
}
