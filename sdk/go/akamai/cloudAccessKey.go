// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v9/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudAccessKey struct {
	pulumi.CustomResourceState

	// Name of the access key.
	AccessKeyName pulumi.StringOutput `pulumi:"accessKeyName"`
	// The unique identifier Akamai assigns to an access key.
	AccessKeyUid pulumi.IntOutput `pulumi:"accessKeyUid"`
	// The type of cloud provider signing process used to authenticate API requests. Two options are available:
	// "AWS4_HMAC_SHA256" or "GOOG4_HMAC_SHA256".
	AuthenticationMethod pulumi.StringOutput `pulumi:"authenticationMethod"`
	// The unique identifier for the contract assigned to the access key
	ContractId pulumi.StringOutput `pulumi:"contractId"`
	// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
	// identified as access key version. Access key can contain only two access key versions at specific time (defined as
	// credentialsA and credentialsB).
	CredentialsA CloudAccessKeyCredentialsAPtrOutput `pulumi:"credentialsA"`
	// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
	// identified as access key version. Access key can contain only two access key versions at specific time (defined as
	// credentialsA and credentialsB).
	CredentialsB CloudAccessKeyCredentialsBPtrOutput `pulumi:"credentialsB"`
	// The unique identifier assigned to the access control group assigned to the access key
	GroupId pulumi.IntOutput `pulumi:"groupId"`
	// The secure networks that you assigned the access key to during creation
	NetworkConfiguration CloudAccessKeyNetworkConfigurationOutput `pulumi:"networkConfiguration"`
	// Value of `versionGuid` field for credentials marked as primary
	PrimaryGuid pulumi.StringOutput             `pulumi:"primaryGuid"`
	Timeouts    CloudAccessKeyTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCloudAccessKey registers a new resource with the given unique name, arguments, and options.
func NewCloudAccessKey(ctx *pulumi.Context,
	name string, args *CloudAccessKeyArgs, opts ...pulumi.ResourceOption) (*CloudAccessKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessKeyName == nil {
		return nil, errors.New("invalid value for required argument 'AccessKeyName'")
	}
	if args.AuthenticationMethod == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationMethod'")
	}
	if args.ContractId == nil {
		return nil, errors.New("invalid value for required argument 'ContractId'")
	}
	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.NetworkConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'NetworkConfiguration'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudAccessKey
	err := ctx.RegisterResource("akamai:index/cloudAccessKey:CloudAccessKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudAccessKey gets an existing CloudAccessKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudAccessKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudAccessKeyState, opts ...pulumi.ResourceOption) (*CloudAccessKey, error) {
	var resource CloudAccessKey
	err := ctx.ReadResource("akamai:index/cloudAccessKey:CloudAccessKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudAccessKey resources.
type cloudAccessKeyState struct {
	// Name of the access key.
	AccessKeyName *string `pulumi:"accessKeyName"`
	// The unique identifier Akamai assigns to an access key.
	AccessKeyUid *int `pulumi:"accessKeyUid"`
	// The type of cloud provider signing process used to authenticate API requests. Two options are available:
	// "AWS4_HMAC_SHA256" or "GOOG4_HMAC_SHA256".
	AuthenticationMethod *string `pulumi:"authenticationMethod"`
	// The unique identifier for the contract assigned to the access key
	ContractId *string `pulumi:"contractId"`
	// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
	// identified as access key version. Access key can contain only two access key versions at specific time (defined as
	// credentialsA and credentialsB).
	CredentialsA *CloudAccessKeyCredentialsA `pulumi:"credentialsA"`
	// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
	// identified as access key version. Access key can contain only two access key versions at specific time (defined as
	// credentialsA and credentialsB).
	CredentialsB *CloudAccessKeyCredentialsB `pulumi:"credentialsB"`
	// The unique identifier assigned to the access control group assigned to the access key
	GroupId *int `pulumi:"groupId"`
	// The secure networks that you assigned the access key to during creation
	NetworkConfiguration *CloudAccessKeyNetworkConfiguration `pulumi:"networkConfiguration"`
	// Value of `versionGuid` field for credentials marked as primary
	PrimaryGuid *string                 `pulumi:"primaryGuid"`
	Timeouts    *CloudAccessKeyTimeouts `pulumi:"timeouts"`
}

type CloudAccessKeyState struct {
	// Name of the access key.
	AccessKeyName pulumi.StringPtrInput
	// The unique identifier Akamai assigns to an access key.
	AccessKeyUid pulumi.IntPtrInput
	// The type of cloud provider signing process used to authenticate API requests. Two options are available:
	// "AWS4_HMAC_SHA256" or "GOOG4_HMAC_SHA256".
	AuthenticationMethod pulumi.StringPtrInput
	// The unique identifier for the contract assigned to the access key
	ContractId pulumi.StringPtrInput
	// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
	// identified as access key version. Access key can contain only two access key versions at specific time (defined as
	// credentialsA and credentialsB).
	CredentialsA CloudAccessKeyCredentialsAPtrInput
	// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
	// identified as access key version. Access key can contain only two access key versions at specific time (defined as
	// credentialsA and credentialsB).
	CredentialsB CloudAccessKeyCredentialsBPtrInput
	// The unique identifier assigned to the access control group assigned to the access key
	GroupId pulumi.IntPtrInput
	// The secure networks that you assigned the access key to during creation
	NetworkConfiguration CloudAccessKeyNetworkConfigurationPtrInput
	// Value of `versionGuid` field for credentials marked as primary
	PrimaryGuid pulumi.StringPtrInput
	Timeouts    CloudAccessKeyTimeoutsPtrInput
}

func (CloudAccessKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccessKeyState)(nil)).Elem()
}

type cloudAccessKeyArgs struct {
	// Name of the access key.
	AccessKeyName string `pulumi:"accessKeyName"`
	// The type of cloud provider signing process used to authenticate API requests. Two options are available:
	// "AWS4_HMAC_SHA256" or "GOOG4_HMAC_SHA256".
	AuthenticationMethod string `pulumi:"authenticationMethod"`
	// The unique identifier for the contract assigned to the access key
	ContractId string `pulumi:"contractId"`
	// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
	// identified as access key version. Access key can contain only two access key versions at specific time (defined as
	// credentialsA and credentialsB).
	CredentialsA *CloudAccessKeyCredentialsA `pulumi:"credentialsA"`
	// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
	// identified as access key version. Access key can contain only two access key versions at specific time (defined as
	// credentialsA and credentialsB).
	CredentialsB *CloudAccessKeyCredentialsB `pulumi:"credentialsB"`
	// The unique identifier assigned to the access control group assigned to the access key
	GroupId int `pulumi:"groupId"`
	// The secure networks that you assigned the access key to during creation
	NetworkConfiguration CloudAccessKeyNetworkConfiguration `pulumi:"networkConfiguration"`
	Timeouts             *CloudAccessKeyTimeouts            `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudAccessKey resource.
type CloudAccessKeyArgs struct {
	// Name of the access key.
	AccessKeyName pulumi.StringInput
	// The type of cloud provider signing process used to authenticate API requests. Two options are available:
	// "AWS4_HMAC_SHA256" or "GOOG4_HMAC_SHA256".
	AuthenticationMethod pulumi.StringInput
	// The unique identifier for the contract assigned to the access key
	ContractId pulumi.StringInput
	// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
	// identified as access key version. Access key can contain only two access key versions at specific time (defined as
	// credentialsA and credentialsB).
	CredentialsA CloudAccessKeyCredentialsAPtrInput
	// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
	// identified as access key version. Access key can contain only two access key versions at specific time (defined as
	// credentialsA and credentialsB).
	CredentialsB CloudAccessKeyCredentialsBPtrInput
	// The unique identifier assigned to the access control group assigned to the access key
	GroupId pulumi.IntInput
	// The secure networks that you assigned the access key to during creation
	NetworkConfiguration CloudAccessKeyNetworkConfigurationInput
	Timeouts             CloudAccessKeyTimeoutsPtrInput
}

func (CloudAccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccessKeyArgs)(nil)).Elem()
}

type CloudAccessKeyInput interface {
	pulumi.Input

	ToCloudAccessKeyOutput() CloudAccessKeyOutput
	ToCloudAccessKeyOutputWithContext(ctx context.Context) CloudAccessKeyOutput
}

func (*CloudAccessKey) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccessKey)(nil)).Elem()
}

func (i *CloudAccessKey) ToCloudAccessKeyOutput() CloudAccessKeyOutput {
	return i.ToCloudAccessKeyOutputWithContext(context.Background())
}

func (i *CloudAccessKey) ToCloudAccessKeyOutputWithContext(ctx context.Context) CloudAccessKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccessKeyOutput)
}

// CloudAccessKeyArrayInput is an input type that accepts CloudAccessKeyArray and CloudAccessKeyArrayOutput values.
// You can construct a concrete instance of `CloudAccessKeyArrayInput` via:
//
//	CloudAccessKeyArray{ CloudAccessKeyArgs{...} }
type CloudAccessKeyArrayInput interface {
	pulumi.Input

	ToCloudAccessKeyArrayOutput() CloudAccessKeyArrayOutput
	ToCloudAccessKeyArrayOutputWithContext(context.Context) CloudAccessKeyArrayOutput
}

type CloudAccessKeyArray []CloudAccessKeyInput

func (CloudAccessKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccessKey)(nil)).Elem()
}

func (i CloudAccessKeyArray) ToCloudAccessKeyArrayOutput() CloudAccessKeyArrayOutput {
	return i.ToCloudAccessKeyArrayOutputWithContext(context.Background())
}

func (i CloudAccessKeyArray) ToCloudAccessKeyArrayOutputWithContext(ctx context.Context) CloudAccessKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccessKeyArrayOutput)
}

// CloudAccessKeyMapInput is an input type that accepts CloudAccessKeyMap and CloudAccessKeyMapOutput values.
// You can construct a concrete instance of `CloudAccessKeyMapInput` via:
//
//	CloudAccessKeyMap{ "key": CloudAccessKeyArgs{...} }
type CloudAccessKeyMapInput interface {
	pulumi.Input

	ToCloudAccessKeyMapOutput() CloudAccessKeyMapOutput
	ToCloudAccessKeyMapOutputWithContext(context.Context) CloudAccessKeyMapOutput
}

type CloudAccessKeyMap map[string]CloudAccessKeyInput

func (CloudAccessKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccessKey)(nil)).Elem()
}

func (i CloudAccessKeyMap) ToCloudAccessKeyMapOutput() CloudAccessKeyMapOutput {
	return i.ToCloudAccessKeyMapOutputWithContext(context.Background())
}

func (i CloudAccessKeyMap) ToCloudAccessKeyMapOutputWithContext(ctx context.Context) CloudAccessKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccessKeyMapOutput)
}

type CloudAccessKeyOutput struct{ *pulumi.OutputState }

func (CloudAccessKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccessKey)(nil)).Elem()
}

func (o CloudAccessKeyOutput) ToCloudAccessKeyOutput() CloudAccessKeyOutput {
	return o
}

func (o CloudAccessKeyOutput) ToCloudAccessKeyOutputWithContext(ctx context.Context) CloudAccessKeyOutput {
	return o
}

// Name of the access key.
func (o CloudAccessKeyOutput) AccessKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccessKey) pulumi.StringOutput { return v.AccessKeyName }).(pulumi.StringOutput)
}

// The unique identifier Akamai assigns to an access key.
func (o CloudAccessKeyOutput) AccessKeyUid() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAccessKey) pulumi.IntOutput { return v.AccessKeyUid }).(pulumi.IntOutput)
}

// The type of cloud provider signing process used to authenticate API requests. Two options are available:
// "AWS4_HMAC_SHA256" or "GOOG4_HMAC_SHA256".
func (o CloudAccessKeyOutput) AuthenticationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccessKey) pulumi.StringOutput { return v.AuthenticationMethod }).(pulumi.StringOutput)
}

// The unique identifier for the contract assigned to the access key
func (o CloudAccessKeyOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccessKey) pulumi.StringOutput { return v.ContractId }).(pulumi.StringOutput)
}

// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
// identified as access key version. Access key can contain only two access key versions at specific time (defined as
// credentialsA and credentialsB).
func (o CloudAccessKeyOutput) CredentialsA() CloudAccessKeyCredentialsAPtrOutput {
	return o.ApplyT(func(v *CloudAccessKey) CloudAccessKeyCredentialsAPtrOutput { return v.CredentialsA }).(CloudAccessKeyCredentialsAPtrOutput)
}

// The combination of a `cloudAccessKeyId` and a `cloudSecretAccessKey` used to sign API requests. This pair can be
// identified as access key version. Access key can contain only two access key versions at specific time (defined as
// credentialsA and credentialsB).
func (o CloudAccessKeyOutput) CredentialsB() CloudAccessKeyCredentialsBPtrOutput {
	return o.ApplyT(func(v *CloudAccessKey) CloudAccessKeyCredentialsBPtrOutput { return v.CredentialsB }).(CloudAccessKeyCredentialsBPtrOutput)
}

// The unique identifier assigned to the access control group assigned to the access key
func (o CloudAccessKeyOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAccessKey) pulumi.IntOutput { return v.GroupId }).(pulumi.IntOutput)
}

// The secure networks that you assigned the access key to during creation
func (o CloudAccessKeyOutput) NetworkConfiguration() CloudAccessKeyNetworkConfigurationOutput {
	return o.ApplyT(func(v *CloudAccessKey) CloudAccessKeyNetworkConfigurationOutput { return v.NetworkConfiguration }).(CloudAccessKeyNetworkConfigurationOutput)
}

// Value of `versionGuid` field for credentials marked as primary
func (o CloudAccessKeyOutput) PrimaryGuid() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccessKey) pulumi.StringOutput { return v.PrimaryGuid }).(pulumi.StringOutput)
}

func (o CloudAccessKeyOutput) Timeouts() CloudAccessKeyTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudAccessKey) CloudAccessKeyTimeoutsPtrOutput { return v.Timeouts }).(CloudAccessKeyTimeoutsPtrOutput)
}

type CloudAccessKeyArrayOutput struct{ *pulumi.OutputState }

func (CloudAccessKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccessKey)(nil)).Elem()
}

func (o CloudAccessKeyArrayOutput) ToCloudAccessKeyArrayOutput() CloudAccessKeyArrayOutput {
	return o
}

func (o CloudAccessKeyArrayOutput) ToCloudAccessKeyArrayOutputWithContext(ctx context.Context) CloudAccessKeyArrayOutput {
	return o
}

func (o CloudAccessKeyArrayOutput) Index(i pulumi.IntInput) CloudAccessKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudAccessKey {
		return vs[0].([]*CloudAccessKey)[vs[1].(int)]
	}).(CloudAccessKeyOutput)
}

type CloudAccessKeyMapOutput struct{ *pulumi.OutputState }

func (CloudAccessKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccessKey)(nil)).Elem()
}

func (o CloudAccessKeyMapOutput) ToCloudAccessKeyMapOutput() CloudAccessKeyMapOutput {
	return o
}

func (o CloudAccessKeyMapOutput) ToCloudAccessKeyMapOutputWithContext(ctx context.Context) CloudAccessKeyMapOutput {
	return o
}

func (o CloudAccessKeyMapOutput) MapIndex(k pulumi.StringInput) CloudAccessKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudAccessKey {
		return vs[0].(map[string]*CloudAccessKey)[vs[1].(string)]
	}).(CloudAccessKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccessKeyInput)(nil)).Elem(), &CloudAccessKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccessKeyArrayInput)(nil)).Elem(), CloudAccessKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccessKeyMapInput)(nil)).Elem(), CloudAccessKeyMap{})
	pulumi.RegisterOutputType(CloudAccessKeyOutput{})
	pulumi.RegisterOutputType(CloudAccessKeyArrayOutput{})
	pulumi.RegisterOutputType(CloudAccessKeyMapOutput{})
}
