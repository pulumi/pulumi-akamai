// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudletsApplicationLoadBalancerActivation struct {
	pulumi.CustomResourceState

	// The network you want to activate the application load balancer version on (options are Staging and Production)
	Network pulumi.StringOutput `pulumi:"network"`
	// The conditional origin’s unique identifier
	OriginId pulumi.StringOutput `pulumi:"originId"`
	// Activation status for this application load balancer
	Status pulumi.StringOutput `pulumi:"status"`
	// Cloudlets application load balancer version you want to activate
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewCloudletsApplicationLoadBalancerActivation registers a new resource with the given unique name, arguments, and options.
func NewCloudletsApplicationLoadBalancerActivation(ctx *pulumi.Context,
	name string, args *CloudletsApplicationLoadBalancerActivationArgs, opts ...pulumi.ResourceOption) (*CloudletsApplicationLoadBalancerActivation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.OriginId == nil {
		return nil, errors.New("invalid value for required argument 'OriginId'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudletsApplicationLoadBalancerActivation
	err := ctx.RegisterResource("akamai:index/cloudletsApplicationLoadBalancerActivation:CloudletsApplicationLoadBalancerActivation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudletsApplicationLoadBalancerActivation gets an existing CloudletsApplicationLoadBalancerActivation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudletsApplicationLoadBalancerActivation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudletsApplicationLoadBalancerActivationState, opts ...pulumi.ResourceOption) (*CloudletsApplicationLoadBalancerActivation, error) {
	var resource CloudletsApplicationLoadBalancerActivation
	err := ctx.ReadResource("akamai:index/cloudletsApplicationLoadBalancerActivation:CloudletsApplicationLoadBalancerActivation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudletsApplicationLoadBalancerActivation resources.
type cloudletsApplicationLoadBalancerActivationState struct {
	// The network you want to activate the application load balancer version on (options are Staging and Production)
	Network *string `pulumi:"network"`
	// The conditional origin’s unique identifier
	OriginId *string `pulumi:"originId"`
	// Activation status for this application load balancer
	Status *string `pulumi:"status"`
	// Cloudlets application load balancer version you want to activate
	Version *int `pulumi:"version"`
}

type CloudletsApplicationLoadBalancerActivationState struct {
	// The network you want to activate the application load balancer version on (options are Staging and Production)
	Network pulumi.StringPtrInput
	// The conditional origin’s unique identifier
	OriginId pulumi.StringPtrInput
	// Activation status for this application load balancer
	Status pulumi.StringPtrInput
	// Cloudlets application load balancer version you want to activate
	Version pulumi.IntPtrInput
}

func (CloudletsApplicationLoadBalancerActivationState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudletsApplicationLoadBalancerActivationState)(nil)).Elem()
}

type cloudletsApplicationLoadBalancerActivationArgs struct {
	// The network you want to activate the application load balancer version on (options are Staging and Production)
	Network string `pulumi:"network"`
	// The conditional origin’s unique identifier
	OriginId string `pulumi:"originId"`
	// Cloudlets application load balancer version you want to activate
	Version int `pulumi:"version"`
}

// The set of arguments for constructing a CloudletsApplicationLoadBalancerActivation resource.
type CloudletsApplicationLoadBalancerActivationArgs struct {
	// The network you want to activate the application load balancer version on (options are Staging and Production)
	Network pulumi.StringInput
	// The conditional origin’s unique identifier
	OriginId pulumi.StringInput
	// Cloudlets application load balancer version you want to activate
	Version pulumi.IntInput
}

func (CloudletsApplicationLoadBalancerActivationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudletsApplicationLoadBalancerActivationArgs)(nil)).Elem()
}

type CloudletsApplicationLoadBalancerActivationInput interface {
	pulumi.Input

	ToCloudletsApplicationLoadBalancerActivationOutput() CloudletsApplicationLoadBalancerActivationOutput
	ToCloudletsApplicationLoadBalancerActivationOutputWithContext(ctx context.Context) CloudletsApplicationLoadBalancerActivationOutput
}

func (*CloudletsApplicationLoadBalancerActivation) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudletsApplicationLoadBalancerActivation)(nil)).Elem()
}

func (i *CloudletsApplicationLoadBalancerActivation) ToCloudletsApplicationLoadBalancerActivationOutput() CloudletsApplicationLoadBalancerActivationOutput {
	return i.ToCloudletsApplicationLoadBalancerActivationOutputWithContext(context.Background())
}

func (i *CloudletsApplicationLoadBalancerActivation) ToCloudletsApplicationLoadBalancerActivationOutputWithContext(ctx context.Context) CloudletsApplicationLoadBalancerActivationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudletsApplicationLoadBalancerActivationOutput)
}

// CloudletsApplicationLoadBalancerActivationArrayInput is an input type that accepts CloudletsApplicationLoadBalancerActivationArray and CloudletsApplicationLoadBalancerActivationArrayOutput values.
// You can construct a concrete instance of `CloudletsApplicationLoadBalancerActivationArrayInput` via:
//
//	CloudletsApplicationLoadBalancerActivationArray{ CloudletsApplicationLoadBalancerActivationArgs{...} }
type CloudletsApplicationLoadBalancerActivationArrayInput interface {
	pulumi.Input

	ToCloudletsApplicationLoadBalancerActivationArrayOutput() CloudletsApplicationLoadBalancerActivationArrayOutput
	ToCloudletsApplicationLoadBalancerActivationArrayOutputWithContext(context.Context) CloudletsApplicationLoadBalancerActivationArrayOutput
}

type CloudletsApplicationLoadBalancerActivationArray []CloudletsApplicationLoadBalancerActivationInput

func (CloudletsApplicationLoadBalancerActivationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudletsApplicationLoadBalancerActivation)(nil)).Elem()
}

func (i CloudletsApplicationLoadBalancerActivationArray) ToCloudletsApplicationLoadBalancerActivationArrayOutput() CloudletsApplicationLoadBalancerActivationArrayOutput {
	return i.ToCloudletsApplicationLoadBalancerActivationArrayOutputWithContext(context.Background())
}

func (i CloudletsApplicationLoadBalancerActivationArray) ToCloudletsApplicationLoadBalancerActivationArrayOutputWithContext(ctx context.Context) CloudletsApplicationLoadBalancerActivationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudletsApplicationLoadBalancerActivationArrayOutput)
}

// CloudletsApplicationLoadBalancerActivationMapInput is an input type that accepts CloudletsApplicationLoadBalancerActivationMap and CloudletsApplicationLoadBalancerActivationMapOutput values.
// You can construct a concrete instance of `CloudletsApplicationLoadBalancerActivationMapInput` via:
//
//	CloudletsApplicationLoadBalancerActivationMap{ "key": CloudletsApplicationLoadBalancerActivationArgs{...} }
type CloudletsApplicationLoadBalancerActivationMapInput interface {
	pulumi.Input

	ToCloudletsApplicationLoadBalancerActivationMapOutput() CloudletsApplicationLoadBalancerActivationMapOutput
	ToCloudletsApplicationLoadBalancerActivationMapOutputWithContext(context.Context) CloudletsApplicationLoadBalancerActivationMapOutput
}

type CloudletsApplicationLoadBalancerActivationMap map[string]CloudletsApplicationLoadBalancerActivationInput

func (CloudletsApplicationLoadBalancerActivationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudletsApplicationLoadBalancerActivation)(nil)).Elem()
}

func (i CloudletsApplicationLoadBalancerActivationMap) ToCloudletsApplicationLoadBalancerActivationMapOutput() CloudletsApplicationLoadBalancerActivationMapOutput {
	return i.ToCloudletsApplicationLoadBalancerActivationMapOutputWithContext(context.Background())
}

func (i CloudletsApplicationLoadBalancerActivationMap) ToCloudletsApplicationLoadBalancerActivationMapOutputWithContext(ctx context.Context) CloudletsApplicationLoadBalancerActivationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudletsApplicationLoadBalancerActivationMapOutput)
}

type CloudletsApplicationLoadBalancerActivationOutput struct{ *pulumi.OutputState }

func (CloudletsApplicationLoadBalancerActivationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudletsApplicationLoadBalancerActivation)(nil)).Elem()
}

func (o CloudletsApplicationLoadBalancerActivationOutput) ToCloudletsApplicationLoadBalancerActivationOutput() CloudletsApplicationLoadBalancerActivationOutput {
	return o
}

func (o CloudletsApplicationLoadBalancerActivationOutput) ToCloudletsApplicationLoadBalancerActivationOutputWithContext(ctx context.Context) CloudletsApplicationLoadBalancerActivationOutput {
	return o
}

// The network you want to activate the application load balancer version on (options are Staging and Production)
func (o CloudletsApplicationLoadBalancerActivationOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudletsApplicationLoadBalancerActivation) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The conditional origin’s unique identifier
func (o CloudletsApplicationLoadBalancerActivationOutput) OriginId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudletsApplicationLoadBalancerActivation) pulumi.StringOutput { return v.OriginId }).(pulumi.StringOutput)
}

// Activation status for this application load balancer
func (o CloudletsApplicationLoadBalancerActivationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudletsApplicationLoadBalancerActivation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Cloudlets application load balancer version you want to activate
func (o CloudletsApplicationLoadBalancerActivationOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudletsApplicationLoadBalancerActivation) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type CloudletsApplicationLoadBalancerActivationArrayOutput struct{ *pulumi.OutputState }

func (CloudletsApplicationLoadBalancerActivationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudletsApplicationLoadBalancerActivation)(nil)).Elem()
}

func (o CloudletsApplicationLoadBalancerActivationArrayOutput) ToCloudletsApplicationLoadBalancerActivationArrayOutput() CloudletsApplicationLoadBalancerActivationArrayOutput {
	return o
}

func (o CloudletsApplicationLoadBalancerActivationArrayOutput) ToCloudletsApplicationLoadBalancerActivationArrayOutputWithContext(ctx context.Context) CloudletsApplicationLoadBalancerActivationArrayOutput {
	return o
}

func (o CloudletsApplicationLoadBalancerActivationArrayOutput) Index(i pulumi.IntInput) CloudletsApplicationLoadBalancerActivationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudletsApplicationLoadBalancerActivation {
		return vs[0].([]*CloudletsApplicationLoadBalancerActivation)[vs[1].(int)]
	}).(CloudletsApplicationLoadBalancerActivationOutput)
}

type CloudletsApplicationLoadBalancerActivationMapOutput struct{ *pulumi.OutputState }

func (CloudletsApplicationLoadBalancerActivationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudletsApplicationLoadBalancerActivation)(nil)).Elem()
}

func (o CloudletsApplicationLoadBalancerActivationMapOutput) ToCloudletsApplicationLoadBalancerActivationMapOutput() CloudletsApplicationLoadBalancerActivationMapOutput {
	return o
}

func (o CloudletsApplicationLoadBalancerActivationMapOutput) ToCloudletsApplicationLoadBalancerActivationMapOutputWithContext(ctx context.Context) CloudletsApplicationLoadBalancerActivationMapOutput {
	return o
}

func (o CloudletsApplicationLoadBalancerActivationMapOutput) MapIndex(k pulumi.StringInput) CloudletsApplicationLoadBalancerActivationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudletsApplicationLoadBalancerActivation {
		return vs[0].(map[string]*CloudletsApplicationLoadBalancerActivation)[vs[1].(string)]
	}).(CloudletsApplicationLoadBalancerActivationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudletsApplicationLoadBalancerActivationInput)(nil)).Elem(), &CloudletsApplicationLoadBalancerActivation{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudletsApplicationLoadBalancerActivationArrayInput)(nil)).Elem(), CloudletsApplicationLoadBalancerActivationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudletsApplicationLoadBalancerActivationMapInput)(nil)).Elem(), CloudletsApplicationLoadBalancerActivationMap{})
	pulumi.RegisterOutputType(CloudletsApplicationLoadBalancerActivationOutput{})
	pulumi.RegisterOutputType(CloudletsApplicationLoadBalancerActivationArrayOutput{})
	pulumi.RegisterOutputType(CloudletsApplicationLoadBalancerActivationMapOutput{})
}
