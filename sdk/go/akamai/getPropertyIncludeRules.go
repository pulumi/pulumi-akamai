// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `getPropertyIncludeRules` data source to query and get an include's rules. This data source lets you search across the contracts and groups you have access to.
//
// ## Basic usage
//
// This example returns the include's rule tree based on the specified contract, group, and include IDs:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myExamplePropertyIncludeRules, err := akamai.GetPropertyIncludeRules(ctx, &akamai.GetPropertyIncludeRulesArgs{
//				ContractId: "ctr_1-AB123",
//				GroupId:    "grp_12345",
//				IncludeId:  "inc_123456",
//				Version:    3,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("myExample", myExamplePropertyIncludeRules)
//			return nil
//		})
//	}
//
// ```
//
// ## Attributes reference
//
// This data source returns these attributes:
//
// * `rules` - Include's rules as JSON.
// * `name` - The descriptive name for the include.
// * `ruleErrors` - Rule's validation errors. You need to resolve returned errors, as they block an activation.
// * `ruleWarnings` - Rule's validation warnings. You can activate a version that yields non-blocking warnings.
// * `ruleFormat` - Indicates the versioned set of features and criteria that are currently applied to a rule tree. See [Rule format schemas](https://techdocs.akamai.com/property-mgr/reference/rule-format-schemas) to learn more.
// * `type` - Specifies the type of the include, either `MICROSERVICES` or `COMMON_SETTINGS`. Use this field for filtering. `MICROSERVICES` allow different teams to work independently on different parts of a single site. `COMMON_SETTINGS` includes are useful for configurations that share a large number of settings, often managed by a central team.
func GetPropertyIncludeRules(ctx *pulumi.Context, args *GetPropertyIncludeRulesArgs, opts ...pulumi.InvokeOption) (*GetPropertyIncludeRulesResult, error) {
	var rv GetPropertyIncludeRulesResult
	err := ctx.Invoke("akamai:index/getPropertyIncludeRules:getPropertyIncludeRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPropertyIncludeRules.
type GetPropertyIncludeRulesArgs struct {
	// (Required) A contract's unique ID, including the optional `ctr_` prefix.
	ContractId string `pulumi:"contractId"`
	// (Required) A group's unique ID, including the optional `grp_` prefix.
	GroupId string `pulumi:"groupId"`
	// (Required) An include's unique ID with the optional `inc_` prefix.
	IncludeId string `pulumi:"includeId"`
	// (Required) The include version you want to view the rules for.
	Version int `pulumi:"version"`
}

// A collection of values returned by getPropertyIncludeRules.
type GetPropertyIncludeRulesResult struct {
	ContractId string `pulumi:"contractId"`
	GroupId    string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	IncludeId    string `pulumi:"includeId"`
	Name         string `pulumi:"name"`
	RuleErrors   string `pulumi:"ruleErrors"`
	RuleFormat   string `pulumi:"ruleFormat"`
	RuleWarnings string `pulumi:"ruleWarnings"`
	Rules        string `pulumi:"rules"`
	Type         string `pulumi:"type"`
	Version      int    `pulumi:"version"`
}

func GetPropertyIncludeRulesOutput(ctx *pulumi.Context, args GetPropertyIncludeRulesOutputArgs, opts ...pulumi.InvokeOption) GetPropertyIncludeRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPropertyIncludeRulesResult, error) {
			args := v.(GetPropertyIncludeRulesArgs)
			r, err := GetPropertyIncludeRules(ctx, &args, opts...)
			var s GetPropertyIncludeRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPropertyIncludeRulesResultOutput)
}

// A collection of arguments for invoking getPropertyIncludeRules.
type GetPropertyIncludeRulesOutputArgs struct {
	// (Required) A contract's unique ID, including the optional `ctr_` prefix.
	ContractId pulumi.StringInput `pulumi:"contractId"`
	// (Required) A group's unique ID, including the optional `grp_` prefix.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// (Required) An include's unique ID with the optional `inc_` prefix.
	IncludeId pulumi.StringInput `pulumi:"includeId"`
	// (Required) The include version you want to view the rules for.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetPropertyIncludeRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyIncludeRulesArgs)(nil)).Elem()
}

// A collection of values returned by getPropertyIncludeRules.
type GetPropertyIncludeRulesResultOutput struct{ *pulumi.OutputState }

func (GetPropertyIncludeRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyIncludeRulesResult)(nil)).Elem()
}

func (o GetPropertyIncludeRulesResultOutput) ToGetPropertyIncludeRulesResultOutput() GetPropertyIncludeRulesResultOutput {
	return o
}

func (o GetPropertyIncludeRulesResultOutput) ToGetPropertyIncludeRulesResultOutputWithContext(ctx context.Context) GetPropertyIncludeRulesResultOutput {
	return o
}

func (o GetPropertyIncludeRulesResultOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) string { return v.ContractId }).(pulumi.StringOutput)
}

func (o GetPropertyIncludeRulesResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPropertyIncludeRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPropertyIncludeRulesResultOutput) IncludeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) string { return v.IncludeId }).(pulumi.StringOutput)
}

func (o GetPropertyIncludeRulesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPropertyIncludeRulesResultOutput) RuleErrors() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) string { return v.RuleErrors }).(pulumi.StringOutput)
}

func (o GetPropertyIncludeRulesResultOutput) RuleFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) string { return v.RuleFormat }).(pulumi.StringOutput)
}

func (o GetPropertyIncludeRulesResultOutput) RuleWarnings() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) string { return v.RuleWarnings }).(pulumi.StringOutput)
}

func (o GetPropertyIncludeRulesResultOutput) Rules() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) string { return v.Rules }).(pulumi.StringOutput)
}

func (o GetPropertyIncludeRulesResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetPropertyIncludeRulesResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetPropertyIncludeRulesResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPropertyIncludeRulesResultOutput{})
}
