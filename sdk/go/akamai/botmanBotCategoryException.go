// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanBotCategoryException struct {
	pulumi.CustomResourceState

	BotCategoryException pulumi.StringOutput `pulumi:"botCategoryException"`
	ConfigId             pulumi.IntOutput    `pulumi:"configId"`
	SecurityPolicyId     pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewBotmanBotCategoryException registers a new resource with the given unique name, arguments, and options.
func NewBotmanBotCategoryException(ctx *pulumi.Context,
	name string, args *BotmanBotCategoryExceptionArgs, opts ...pulumi.ResourceOption) (*BotmanBotCategoryException, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BotCategoryException == nil {
		return nil, errors.New("invalid value for required argument 'BotCategoryException'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	var resource BotmanBotCategoryException
	err := ctx.RegisterResource("akamai:index/botmanBotCategoryException:BotmanBotCategoryException", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanBotCategoryException gets an existing BotmanBotCategoryException resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanBotCategoryException(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanBotCategoryExceptionState, opts ...pulumi.ResourceOption) (*BotmanBotCategoryException, error) {
	var resource BotmanBotCategoryException
	err := ctx.ReadResource("akamai:index/botmanBotCategoryException:BotmanBotCategoryException", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanBotCategoryException resources.
type botmanBotCategoryExceptionState struct {
	BotCategoryException *string `pulumi:"botCategoryException"`
	ConfigId             *int    `pulumi:"configId"`
	SecurityPolicyId     *string `pulumi:"securityPolicyId"`
}

type BotmanBotCategoryExceptionState struct {
	BotCategoryException pulumi.StringPtrInput
	ConfigId             pulumi.IntPtrInput
	SecurityPolicyId     pulumi.StringPtrInput
}

func (BotmanBotCategoryExceptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanBotCategoryExceptionState)(nil)).Elem()
}

type botmanBotCategoryExceptionArgs struct {
	BotCategoryException string `pulumi:"botCategoryException"`
	ConfigId             int    `pulumi:"configId"`
	SecurityPolicyId     string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a BotmanBotCategoryException resource.
type BotmanBotCategoryExceptionArgs struct {
	BotCategoryException pulumi.StringInput
	ConfigId             pulumi.IntInput
	SecurityPolicyId     pulumi.StringInput
}

func (BotmanBotCategoryExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanBotCategoryExceptionArgs)(nil)).Elem()
}

type BotmanBotCategoryExceptionInput interface {
	pulumi.Input

	ToBotmanBotCategoryExceptionOutput() BotmanBotCategoryExceptionOutput
	ToBotmanBotCategoryExceptionOutputWithContext(ctx context.Context) BotmanBotCategoryExceptionOutput
}

func (*BotmanBotCategoryException) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanBotCategoryException)(nil)).Elem()
}

func (i *BotmanBotCategoryException) ToBotmanBotCategoryExceptionOutput() BotmanBotCategoryExceptionOutput {
	return i.ToBotmanBotCategoryExceptionOutputWithContext(context.Background())
}

func (i *BotmanBotCategoryException) ToBotmanBotCategoryExceptionOutputWithContext(ctx context.Context) BotmanBotCategoryExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanBotCategoryExceptionOutput)
}

// BotmanBotCategoryExceptionArrayInput is an input type that accepts BotmanBotCategoryExceptionArray and BotmanBotCategoryExceptionArrayOutput values.
// You can construct a concrete instance of `BotmanBotCategoryExceptionArrayInput` via:
//
//	BotmanBotCategoryExceptionArray{ BotmanBotCategoryExceptionArgs{...} }
type BotmanBotCategoryExceptionArrayInput interface {
	pulumi.Input

	ToBotmanBotCategoryExceptionArrayOutput() BotmanBotCategoryExceptionArrayOutput
	ToBotmanBotCategoryExceptionArrayOutputWithContext(context.Context) BotmanBotCategoryExceptionArrayOutput
}

type BotmanBotCategoryExceptionArray []BotmanBotCategoryExceptionInput

func (BotmanBotCategoryExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanBotCategoryException)(nil)).Elem()
}

func (i BotmanBotCategoryExceptionArray) ToBotmanBotCategoryExceptionArrayOutput() BotmanBotCategoryExceptionArrayOutput {
	return i.ToBotmanBotCategoryExceptionArrayOutputWithContext(context.Background())
}

func (i BotmanBotCategoryExceptionArray) ToBotmanBotCategoryExceptionArrayOutputWithContext(ctx context.Context) BotmanBotCategoryExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanBotCategoryExceptionArrayOutput)
}

// BotmanBotCategoryExceptionMapInput is an input type that accepts BotmanBotCategoryExceptionMap and BotmanBotCategoryExceptionMapOutput values.
// You can construct a concrete instance of `BotmanBotCategoryExceptionMapInput` via:
//
//	BotmanBotCategoryExceptionMap{ "key": BotmanBotCategoryExceptionArgs{...} }
type BotmanBotCategoryExceptionMapInput interface {
	pulumi.Input

	ToBotmanBotCategoryExceptionMapOutput() BotmanBotCategoryExceptionMapOutput
	ToBotmanBotCategoryExceptionMapOutputWithContext(context.Context) BotmanBotCategoryExceptionMapOutput
}

type BotmanBotCategoryExceptionMap map[string]BotmanBotCategoryExceptionInput

func (BotmanBotCategoryExceptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanBotCategoryException)(nil)).Elem()
}

func (i BotmanBotCategoryExceptionMap) ToBotmanBotCategoryExceptionMapOutput() BotmanBotCategoryExceptionMapOutput {
	return i.ToBotmanBotCategoryExceptionMapOutputWithContext(context.Background())
}

func (i BotmanBotCategoryExceptionMap) ToBotmanBotCategoryExceptionMapOutputWithContext(ctx context.Context) BotmanBotCategoryExceptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanBotCategoryExceptionMapOutput)
}

type BotmanBotCategoryExceptionOutput struct{ *pulumi.OutputState }

func (BotmanBotCategoryExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanBotCategoryException)(nil)).Elem()
}

func (o BotmanBotCategoryExceptionOutput) ToBotmanBotCategoryExceptionOutput() BotmanBotCategoryExceptionOutput {
	return o
}

func (o BotmanBotCategoryExceptionOutput) ToBotmanBotCategoryExceptionOutputWithContext(ctx context.Context) BotmanBotCategoryExceptionOutput {
	return o
}

func (o BotmanBotCategoryExceptionOutput) BotCategoryException() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanBotCategoryException) pulumi.StringOutput { return v.BotCategoryException }).(pulumi.StringOutput)
}

func (o BotmanBotCategoryExceptionOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanBotCategoryException) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

func (o BotmanBotCategoryExceptionOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanBotCategoryException) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type BotmanBotCategoryExceptionArrayOutput struct{ *pulumi.OutputState }

func (BotmanBotCategoryExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanBotCategoryException)(nil)).Elem()
}

func (o BotmanBotCategoryExceptionArrayOutput) ToBotmanBotCategoryExceptionArrayOutput() BotmanBotCategoryExceptionArrayOutput {
	return o
}

func (o BotmanBotCategoryExceptionArrayOutput) ToBotmanBotCategoryExceptionArrayOutputWithContext(ctx context.Context) BotmanBotCategoryExceptionArrayOutput {
	return o
}

func (o BotmanBotCategoryExceptionArrayOutput) Index(i pulumi.IntInput) BotmanBotCategoryExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanBotCategoryException {
		return vs[0].([]*BotmanBotCategoryException)[vs[1].(int)]
	}).(BotmanBotCategoryExceptionOutput)
}

type BotmanBotCategoryExceptionMapOutput struct{ *pulumi.OutputState }

func (BotmanBotCategoryExceptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanBotCategoryException)(nil)).Elem()
}

func (o BotmanBotCategoryExceptionMapOutput) ToBotmanBotCategoryExceptionMapOutput() BotmanBotCategoryExceptionMapOutput {
	return o
}

func (o BotmanBotCategoryExceptionMapOutput) ToBotmanBotCategoryExceptionMapOutputWithContext(ctx context.Context) BotmanBotCategoryExceptionMapOutput {
	return o
}

func (o BotmanBotCategoryExceptionMapOutput) MapIndex(k pulumi.StringInput) BotmanBotCategoryExceptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanBotCategoryException {
		return vs[0].(map[string]*BotmanBotCategoryException)[vs[1].(string)]
	}).(BotmanBotCategoryExceptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanBotCategoryExceptionInput)(nil)).Elem(), &BotmanBotCategoryException{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanBotCategoryExceptionArrayInput)(nil)).Elem(), BotmanBotCategoryExceptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanBotCategoryExceptionMapInput)(nil)).Elem(), BotmanBotCategoryExceptionMap{})
	pulumi.RegisterOutputType(BotmanBotCategoryExceptionOutput{})
	pulumi.RegisterOutputType(BotmanBotCategoryExceptionArrayOutput{})
	pulumi.RegisterOutputType(BotmanBotCategoryExceptionMapOutput{})
}
