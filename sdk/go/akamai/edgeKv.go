// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EdgeKv struct {
	pulumi.CustomResourceState

	// Storage location for data
	GeoLocation pulumi.StringPtrOutput `pulumi:"geoLocation"`
	// Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.
	GroupId pulumi.IntOutput `pulumi:"groupId"`
	// List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.
	//
	// Deprecated: The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead.
	InitialDatas EdgeKvInitialDataArrayOutput `pulumi:"initialDatas"`
	// Name for the EKV namespace
	NamespaceName pulumi.StringOutput `pulumi:"namespaceName"`
	// The network on which the namespace will be activated
	Network pulumi.StringOutput `pulumi:"network"`
	// Retention period for data in this namespace. An update of this value will just affect new EKV items.
	RetentionInSeconds pulumi.IntOutput `pulumi:"retentionInSeconds"`
}

// NewEdgeKv registers a new resource with the given unique name, arguments, and options.
func NewEdgeKv(ctx *pulumi.Context,
	name string, args *EdgeKvArgs, opts ...pulumi.ResourceOption) (*EdgeKv, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.NamespaceName == nil {
		return nil, errors.New("invalid value for required argument 'NamespaceName'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.RetentionInSeconds == nil {
		return nil, errors.New("invalid value for required argument 'RetentionInSeconds'")
	}
	var resource EdgeKv
	err := ctx.RegisterResource("akamai:index/edgeKv:EdgeKv", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeKv gets an existing EdgeKv resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeKv(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeKvState, opts ...pulumi.ResourceOption) (*EdgeKv, error) {
	var resource EdgeKv
	err := ctx.ReadResource("akamai:index/edgeKv:EdgeKv", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeKv resources.
type edgeKvState struct {
	// Storage location for data
	GeoLocation *string `pulumi:"geoLocation"`
	// Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.
	GroupId *int `pulumi:"groupId"`
	// List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.
	//
	// Deprecated: The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead.
	InitialDatas []EdgeKvInitialData `pulumi:"initialDatas"`
	// Name for the EKV namespace
	NamespaceName *string `pulumi:"namespaceName"`
	// The network on which the namespace will be activated
	Network *string `pulumi:"network"`
	// Retention period for data in this namespace. An update of this value will just affect new EKV items.
	RetentionInSeconds *int `pulumi:"retentionInSeconds"`
}

type EdgeKvState struct {
	// Storage location for data
	GeoLocation pulumi.StringPtrInput
	// Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.
	GroupId pulumi.IntPtrInput
	// List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.
	//
	// Deprecated: The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead.
	InitialDatas EdgeKvInitialDataArrayInput
	// Name for the EKV namespace
	NamespaceName pulumi.StringPtrInput
	// The network on which the namespace will be activated
	Network pulumi.StringPtrInput
	// Retention period for data in this namespace. An update of this value will just affect new EKV items.
	RetentionInSeconds pulumi.IntPtrInput
}

func (EdgeKvState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeKvState)(nil)).Elem()
}

type edgeKvArgs struct {
	// Storage location for data
	GeoLocation *string `pulumi:"geoLocation"`
	// Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.
	GroupId int `pulumi:"groupId"`
	// List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.
	//
	// Deprecated: The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead.
	InitialDatas []EdgeKvInitialData `pulumi:"initialDatas"`
	// Name for the EKV namespace
	NamespaceName string `pulumi:"namespaceName"`
	// The network on which the namespace will be activated
	Network string `pulumi:"network"`
	// Retention period for data in this namespace. An update of this value will just affect new EKV items.
	RetentionInSeconds int `pulumi:"retentionInSeconds"`
}

// The set of arguments for constructing a EdgeKv resource.
type EdgeKvArgs struct {
	// Storage location for data
	GeoLocation pulumi.StringPtrInput
	// Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.
	GroupId pulumi.IntInput
	// List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.
	//
	// Deprecated: The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead.
	InitialDatas EdgeKvInitialDataArrayInput
	// Name for the EKV namespace
	NamespaceName pulumi.StringInput
	// The network on which the namespace will be activated
	Network pulumi.StringInput
	// Retention period for data in this namespace. An update of this value will just affect new EKV items.
	RetentionInSeconds pulumi.IntInput
}

func (EdgeKvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeKvArgs)(nil)).Elem()
}

type EdgeKvInput interface {
	pulumi.Input

	ToEdgeKvOutput() EdgeKvOutput
	ToEdgeKvOutputWithContext(ctx context.Context) EdgeKvOutput
}

func (*EdgeKv) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeKv)(nil)).Elem()
}

func (i *EdgeKv) ToEdgeKvOutput() EdgeKvOutput {
	return i.ToEdgeKvOutputWithContext(context.Background())
}

func (i *EdgeKv) ToEdgeKvOutputWithContext(ctx context.Context) EdgeKvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeKvOutput)
}

// EdgeKvArrayInput is an input type that accepts EdgeKvArray and EdgeKvArrayOutput values.
// You can construct a concrete instance of `EdgeKvArrayInput` via:
//
//	EdgeKvArray{ EdgeKvArgs{...} }
type EdgeKvArrayInput interface {
	pulumi.Input

	ToEdgeKvArrayOutput() EdgeKvArrayOutput
	ToEdgeKvArrayOutputWithContext(context.Context) EdgeKvArrayOutput
}

type EdgeKvArray []EdgeKvInput

func (EdgeKvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeKv)(nil)).Elem()
}

func (i EdgeKvArray) ToEdgeKvArrayOutput() EdgeKvArrayOutput {
	return i.ToEdgeKvArrayOutputWithContext(context.Background())
}

func (i EdgeKvArray) ToEdgeKvArrayOutputWithContext(ctx context.Context) EdgeKvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeKvArrayOutput)
}

// EdgeKvMapInput is an input type that accepts EdgeKvMap and EdgeKvMapOutput values.
// You can construct a concrete instance of `EdgeKvMapInput` via:
//
//	EdgeKvMap{ "key": EdgeKvArgs{...} }
type EdgeKvMapInput interface {
	pulumi.Input

	ToEdgeKvMapOutput() EdgeKvMapOutput
	ToEdgeKvMapOutputWithContext(context.Context) EdgeKvMapOutput
}

type EdgeKvMap map[string]EdgeKvInput

func (EdgeKvMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeKv)(nil)).Elem()
}

func (i EdgeKvMap) ToEdgeKvMapOutput() EdgeKvMapOutput {
	return i.ToEdgeKvMapOutputWithContext(context.Background())
}

func (i EdgeKvMap) ToEdgeKvMapOutputWithContext(ctx context.Context) EdgeKvMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeKvMapOutput)
}

type EdgeKvOutput struct{ *pulumi.OutputState }

func (EdgeKvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeKv)(nil)).Elem()
}

func (o EdgeKvOutput) ToEdgeKvOutput() EdgeKvOutput {
	return o
}

func (o EdgeKvOutput) ToEdgeKvOutputWithContext(ctx context.Context) EdgeKvOutput {
	return o
}

// Storage location for data
func (o EdgeKvOutput) GeoLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeKv) pulumi.StringPtrOutput { return v.GeoLocation }).(pulumi.StringPtrOutput)
}

// Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.
func (o EdgeKvOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *EdgeKv) pulumi.IntOutput { return v.GroupId }).(pulumi.IntOutput)
}

// List of pairs to initialize the namespace. Just meaningful for creation, updates will be ignored.
//
// Deprecated: The attribute 'initial_data' has been deprecated. To manage edgeKV items use 'akamai_edgekv_group_items' resource instead.
func (o EdgeKvOutput) InitialDatas() EdgeKvInitialDataArrayOutput {
	return o.ApplyT(func(v *EdgeKv) EdgeKvInitialDataArrayOutput { return v.InitialDatas }).(EdgeKvInitialDataArrayOutput)
}

// Name for the EKV namespace
func (o EdgeKvOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeKv) pulumi.StringOutput { return v.NamespaceName }).(pulumi.StringOutput)
}

// The network on which the namespace will be activated
func (o EdgeKvOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeKv) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// Retention period for data in this namespace. An update of this value will just affect new EKV items.
func (o EdgeKvOutput) RetentionInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *EdgeKv) pulumi.IntOutput { return v.RetentionInSeconds }).(pulumi.IntOutput)
}

type EdgeKvArrayOutput struct{ *pulumi.OutputState }

func (EdgeKvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeKv)(nil)).Elem()
}

func (o EdgeKvArrayOutput) ToEdgeKvArrayOutput() EdgeKvArrayOutput {
	return o
}

func (o EdgeKvArrayOutput) ToEdgeKvArrayOutputWithContext(ctx context.Context) EdgeKvArrayOutput {
	return o
}

func (o EdgeKvArrayOutput) Index(i pulumi.IntInput) EdgeKvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeKv {
		return vs[0].([]*EdgeKv)[vs[1].(int)]
	}).(EdgeKvOutput)
}

type EdgeKvMapOutput struct{ *pulumi.OutputState }

func (EdgeKvMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeKv)(nil)).Elem()
}

func (o EdgeKvMapOutput) ToEdgeKvMapOutput() EdgeKvMapOutput {
	return o
}

func (o EdgeKvMapOutput) ToEdgeKvMapOutputWithContext(ctx context.Context) EdgeKvMapOutput {
	return o
}

func (o EdgeKvMapOutput) MapIndex(k pulumi.StringInput) EdgeKvOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeKv {
		return vs[0].(map[string]*EdgeKv)[vs[1].(string)]
	}).(EdgeKvOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeKvInput)(nil)).Elem(), &EdgeKv{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeKvArrayInput)(nil)).Elem(), EdgeKvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeKvMapInput)(nil)).Elem(), EdgeKvMap{})
	pulumi.RegisterOutputType(EdgeKvOutput{})
	pulumi.RegisterOutputType(EdgeKvArrayOutput{})
	pulumi.RegisterOutputType(EdgeKvMapOutput{})
}
