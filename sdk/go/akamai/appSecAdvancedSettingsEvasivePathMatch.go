// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppSecAdvancedSettingsEvasivePathMatch struct {
	pulumi.CustomResourceState

	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Whether to enable the evasive path match setting
	EnablePathMatch pulumi.BoolOutput `pulumi:"enablePathMatch"`
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrOutput `pulumi:"securityPolicyId"`
}

// NewAppSecAdvancedSettingsEvasivePathMatch registers a new resource with the given unique name, arguments, and options.
func NewAppSecAdvancedSettingsEvasivePathMatch(ctx *pulumi.Context,
	name string, args *AppSecAdvancedSettingsEvasivePathMatchArgs, opts ...pulumi.ResourceOption) (*AppSecAdvancedSettingsEvasivePathMatch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.EnablePathMatch == nil {
		return nil, errors.New("invalid value for required argument 'EnablePathMatch'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppSecAdvancedSettingsEvasivePathMatch
	err := ctx.RegisterResource("akamai:index/appSecAdvancedSettingsEvasivePathMatch:AppSecAdvancedSettingsEvasivePathMatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecAdvancedSettingsEvasivePathMatch gets an existing AppSecAdvancedSettingsEvasivePathMatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecAdvancedSettingsEvasivePathMatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecAdvancedSettingsEvasivePathMatchState, opts ...pulumi.ResourceOption) (*AppSecAdvancedSettingsEvasivePathMatch, error) {
	var resource AppSecAdvancedSettingsEvasivePathMatch
	err := ctx.ReadResource("akamai:index/appSecAdvancedSettingsEvasivePathMatch:AppSecAdvancedSettingsEvasivePathMatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecAdvancedSettingsEvasivePathMatch resources.
type appSecAdvancedSettingsEvasivePathMatchState struct {
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// Whether to enable the evasive path match setting
	EnablePathMatch *bool `pulumi:"enablePathMatch"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppSecAdvancedSettingsEvasivePathMatchState struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// Whether to enable the evasive path match setting
	EnablePathMatch pulumi.BoolPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecAdvancedSettingsEvasivePathMatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecAdvancedSettingsEvasivePathMatchState)(nil)).Elem()
}

type appSecAdvancedSettingsEvasivePathMatchArgs struct {
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// Whether to enable the evasive path match setting
	EnablePathMatch bool `pulumi:"enablePathMatch"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppSecAdvancedSettingsEvasivePathMatch resource.
type AppSecAdvancedSettingsEvasivePathMatchArgs struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// Whether to enable the evasive path match setting
	EnablePathMatch pulumi.BoolInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecAdvancedSettingsEvasivePathMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecAdvancedSettingsEvasivePathMatchArgs)(nil)).Elem()
}

type AppSecAdvancedSettingsEvasivePathMatchInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsEvasivePathMatchOutput() AppSecAdvancedSettingsEvasivePathMatchOutput
	ToAppSecAdvancedSettingsEvasivePathMatchOutputWithContext(ctx context.Context) AppSecAdvancedSettingsEvasivePathMatchOutput
}

func (*AppSecAdvancedSettingsEvasivePathMatch) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecAdvancedSettingsEvasivePathMatch)(nil)).Elem()
}

func (i *AppSecAdvancedSettingsEvasivePathMatch) ToAppSecAdvancedSettingsEvasivePathMatchOutput() AppSecAdvancedSettingsEvasivePathMatchOutput {
	return i.ToAppSecAdvancedSettingsEvasivePathMatchOutputWithContext(context.Background())
}

func (i *AppSecAdvancedSettingsEvasivePathMatch) ToAppSecAdvancedSettingsEvasivePathMatchOutputWithContext(ctx context.Context) AppSecAdvancedSettingsEvasivePathMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsEvasivePathMatchOutput)
}

// AppSecAdvancedSettingsEvasivePathMatchArrayInput is an input type that accepts AppSecAdvancedSettingsEvasivePathMatchArray and AppSecAdvancedSettingsEvasivePathMatchArrayOutput values.
// You can construct a concrete instance of `AppSecAdvancedSettingsEvasivePathMatchArrayInput` via:
//
//	AppSecAdvancedSettingsEvasivePathMatchArray{ AppSecAdvancedSettingsEvasivePathMatchArgs{...} }
type AppSecAdvancedSettingsEvasivePathMatchArrayInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsEvasivePathMatchArrayOutput() AppSecAdvancedSettingsEvasivePathMatchArrayOutput
	ToAppSecAdvancedSettingsEvasivePathMatchArrayOutputWithContext(context.Context) AppSecAdvancedSettingsEvasivePathMatchArrayOutput
}

type AppSecAdvancedSettingsEvasivePathMatchArray []AppSecAdvancedSettingsEvasivePathMatchInput

func (AppSecAdvancedSettingsEvasivePathMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecAdvancedSettingsEvasivePathMatch)(nil)).Elem()
}

func (i AppSecAdvancedSettingsEvasivePathMatchArray) ToAppSecAdvancedSettingsEvasivePathMatchArrayOutput() AppSecAdvancedSettingsEvasivePathMatchArrayOutput {
	return i.ToAppSecAdvancedSettingsEvasivePathMatchArrayOutputWithContext(context.Background())
}

func (i AppSecAdvancedSettingsEvasivePathMatchArray) ToAppSecAdvancedSettingsEvasivePathMatchArrayOutputWithContext(ctx context.Context) AppSecAdvancedSettingsEvasivePathMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsEvasivePathMatchArrayOutput)
}

// AppSecAdvancedSettingsEvasivePathMatchMapInput is an input type that accepts AppSecAdvancedSettingsEvasivePathMatchMap and AppSecAdvancedSettingsEvasivePathMatchMapOutput values.
// You can construct a concrete instance of `AppSecAdvancedSettingsEvasivePathMatchMapInput` via:
//
//	AppSecAdvancedSettingsEvasivePathMatchMap{ "key": AppSecAdvancedSettingsEvasivePathMatchArgs{...} }
type AppSecAdvancedSettingsEvasivePathMatchMapInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsEvasivePathMatchMapOutput() AppSecAdvancedSettingsEvasivePathMatchMapOutput
	ToAppSecAdvancedSettingsEvasivePathMatchMapOutputWithContext(context.Context) AppSecAdvancedSettingsEvasivePathMatchMapOutput
}

type AppSecAdvancedSettingsEvasivePathMatchMap map[string]AppSecAdvancedSettingsEvasivePathMatchInput

func (AppSecAdvancedSettingsEvasivePathMatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecAdvancedSettingsEvasivePathMatch)(nil)).Elem()
}

func (i AppSecAdvancedSettingsEvasivePathMatchMap) ToAppSecAdvancedSettingsEvasivePathMatchMapOutput() AppSecAdvancedSettingsEvasivePathMatchMapOutput {
	return i.ToAppSecAdvancedSettingsEvasivePathMatchMapOutputWithContext(context.Background())
}

func (i AppSecAdvancedSettingsEvasivePathMatchMap) ToAppSecAdvancedSettingsEvasivePathMatchMapOutputWithContext(ctx context.Context) AppSecAdvancedSettingsEvasivePathMatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsEvasivePathMatchMapOutput)
}

type AppSecAdvancedSettingsEvasivePathMatchOutput struct{ *pulumi.OutputState }

func (AppSecAdvancedSettingsEvasivePathMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecAdvancedSettingsEvasivePathMatch)(nil)).Elem()
}

func (o AppSecAdvancedSettingsEvasivePathMatchOutput) ToAppSecAdvancedSettingsEvasivePathMatchOutput() AppSecAdvancedSettingsEvasivePathMatchOutput {
	return o
}

func (o AppSecAdvancedSettingsEvasivePathMatchOutput) ToAppSecAdvancedSettingsEvasivePathMatchOutputWithContext(ctx context.Context) AppSecAdvancedSettingsEvasivePathMatchOutput {
	return o
}

// Unique identifier of the security configuration
func (o AppSecAdvancedSettingsEvasivePathMatchOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecAdvancedSettingsEvasivePathMatch) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Whether to enable the evasive path match setting
func (o AppSecAdvancedSettingsEvasivePathMatchOutput) EnablePathMatch() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppSecAdvancedSettingsEvasivePathMatch) pulumi.BoolOutput { return v.EnablePathMatch }).(pulumi.BoolOutput)
}

// Unique identifier of the security policy
func (o AppSecAdvancedSettingsEvasivePathMatchOutput) SecurityPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSecAdvancedSettingsEvasivePathMatch) pulumi.StringPtrOutput { return v.SecurityPolicyId }).(pulumi.StringPtrOutput)
}

type AppSecAdvancedSettingsEvasivePathMatchArrayOutput struct{ *pulumi.OutputState }

func (AppSecAdvancedSettingsEvasivePathMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecAdvancedSettingsEvasivePathMatch)(nil)).Elem()
}

func (o AppSecAdvancedSettingsEvasivePathMatchArrayOutput) ToAppSecAdvancedSettingsEvasivePathMatchArrayOutput() AppSecAdvancedSettingsEvasivePathMatchArrayOutput {
	return o
}

func (o AppSecAdvancedSettingsEvasivePathMatchArrayOutput) ToAppSecAdvancedSettingsEvasivePathMatchArrayOutputWithContext(ctx context.Context) AppSecAdvancedSettingsEvasivePathMatchArrayOutput {
	return o
}

func (o AppSecAdvancedSettingsEvasivePathMatchArrayOutput) Index(i pulumi.IntInput) AppSecAdvancedSettingsEvasivePathMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecAdvancedSettingsEvasivePathMatch {
		return vs[0].([]*AppSecAdvancedSettingsEvasivePathMatch)[vs[1].(int)]
	}).(AppSecAdvancedSettingsEvasivePathMatchOutput)
}

type AppSecAdvancedSettingsEvasivePathMatchMapOutput struct{ *pulumi.OutputState }

func (AppSecAdvancedSettingsEvasivePathMatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecAdvancedSettingsEvasivePathMatch)(nil)).Elem()
}

func (o AppSecAdvancedSettingsEvasivePathMatchMapOutput) ToAppSecAdvancedSettingsEvasivePathMatchMapOutput() AppSecAdvancedSettingsEvasivePathMatchMapOutput {
	return o
}

func (o AppSecAdvancedSettingsEvasivePathMatchMapOutput) ToAppSecAdvancedSettingsEvasivePathMatchMapOutputWithContext(ctx context.Context) AppSecAdvancedSettingsEvasivePathMatchMapOutput {
	return o
}

func (o AppSecAdvancedSettingsEvasivePathMatchMapOutput) MapIndex(k pulumi.StringInput) AppSecAdvancedSettingsEvasivePathMatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecAdvancedSettingsEvasivePathMatch {
		return vs[0].(map[string]*AppSecAdvancedSettingsEvasivePathMatch)[vs[1].(string)]
	}).(AppSecAdvancedSettingsEvasivePathMatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecAdvancedSettingsEvasivePathMatchInput)(nil)).Elem(), &AppSecAdvancedSettingsEvasivePathMatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecAdvancedSettingsEvasivePathMatchArrayInput)(nil)).Elem(), AppSecAdvancedSettingsEvasivePathMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecAdvancedSettingsEvasivePathMatchMapInput)(nil)).Elem(), AppSecAdvancedSettingsEvasivePathMatchMap{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsEvasivePathMatchOutput{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsEvasivePathMatchArrayOutput{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsEvasivePathMatchMapOutput{})
}
