// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Custom deny
//
// Modifies a custom deny action. Custom denies enable you to craft your own error message or redirect pages for use when HTTP requests are denied.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/custom-deny](https://techdocs.akamai.com/application-security/reference/get-custom-deny-actions)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"fmt"
//	"io/ioutil"
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func readFileOrPanic(path string) pulumi.StringPtrInput {
//		data, err := ioutil.ReadFile(path)
//		if err != nil {
//			panic(err.Error())
//		}
//		return pulumi.String(string(data))
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
//				Name: pulumi.StringRef("Documentation"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			customDeny, err := akamai.NewAppSecCustomDeny(ctx, "customDeny", &akamai.AppSecCustomDenyArgs{
//				ConfigId:   *pulumi.Int(configuration.ConfigId),
//				CustomDeny: readFileOrPanic(fmt.Sprintf("%v/custom_deny.json", path.Module)),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("customDenyId", customDeny.CustomDenyId)
//			return nil
//		})
//	}
//
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `customDenyId`. ID of the new custom deny action.
type AppSecCustomDeny struct {
	pulumi.CustomResourceState

	// . Unique identifier of the security configuration associated with the custom deny.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// . Path to a JSON file containing properties and property values for the custom deny.
	CustomDeny pulumi.StringOutput `pulumi:"customDeny"`
	// custom_deny_id
	CustomDenyId pulumi.StringOutput `pulumi:"customDenyId"`
}

// NewAppSecCustomDeny registers a new resource with the given unique name, arguments, and options.
func NewAppSecCustomDeny(ctx *pulumi.Context,
	name string, args *AppSecCustomDenyArgs, opts ...pulumi.ResourceOption) (*AppSecCustomDeny, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.CustomDeny == nil {
		return nil, errors.New("invalid value for required argument 'CustomDeny'")
	}
	var resource AppSecCustomDeny
	err := ctx.RegisterResource("akamai:index/appSecCustomDeny:AppSecCustomDeny", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecCustomDeny gets an existing AppSecCustomDeny resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecCustomDeny(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecCustomDenyState, opts ...pulumi.ResourceOption) (*AppSecCustomDeny, error) {
	var resource AppSecCustomDeny
	err := ctx.ReadResource("akamai:index/appSecCustomDeny:AppSecCustomDeny", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecCustomDeny resources.
type appSecCustomDenyState struct {
	// . Unique identifier of the security configuration associated with the custom deny.
	ConfigId *int `pulumi:"configId"`
	// . Path to a JSON file containing properties and property values for the custom deny.
	CustomDeny *string `pulumi:"customDeny"`
	// custom_deny_id
	CustomDenyId *string `pulumi:"customDenyId"`
}

type AppSecCustomDenyState struct {
	// . Unique identifier of the security configuration associated with the custom deny.
	ConfigId pulumi.IntPtrInput
	// . Path to a JSON file containing properties and property values for the custom deny.
	CustomDeny pulumi.StringPtrInput
	// custom_deny_id
	CustomDenyId pulumi.StringPtrInput
}

func (AppSecCustomDenyState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecCustomDenyState)(nil)).Elem()
}

type appSecCustomDenyArgs struct {
	// . Unique identifier of the security configuration associated with the custom deny.
	ConfigId int `pulumi:"configId"`
	// . Path to a JSON file containing properties and property values for the custom deny.
	CustomDeny string `pulumi:"customDeny"`
}

// The set of arguments for constructing a AppSecCustomDeny resource.
type AppSecCustomDenyArgs struct {
	// . Unique identifier of the security configuration associated with the custom deny.
	ConfigId pulumi.IntInput
	// . Path to a JSON file containing properties and property values for the custom deny.
	CustomDeny pulumi.StringInput
}

func (AppSecCustomDenyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecCustomDenyArgs)(nil)).Elem()
}

type AppSecCustomDenyInput interface {
	pulumi.Input

	ToAppSecCustomDenyOutput() AppSecCustomDenyOutput
	ToAppSecCustomDenyOutputWithContext(ctx context.Context) AppSecCustomDenyOutput
}

func (*AppSecCustomDeny) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecCustomDeny)(nil)).Elem()
}

func (i *AppSecCustomDeny) ToAppSecCustomDenyOutput() AppSecCustomDenyOutput {
	return i.ToAppSecCustomDenyOutputWithContext(context.Background())
}

func (i *AppSecCustomDeny) ToAppSecCustomDenyOutputWithContext(ctx context.Context) AppSecCustomDenyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecCustomDenyOutput)
}

// AppSecCustomDenyArrayInput is an input type that accepts AppSecCustomDenyArray and AppSecCustomDenyArrayOutput values.
// You can construct a concrete instance of `AppSecCustomDenyArrayInput` via:
//
//	AppSecCustomDenyArray{ AppSecCustomDenyArgs{...} }
type AppSecCustomDenyArrayInput interface {
	pulumi.Input

	ToAppSecCustomDenyArrayOutput() AppSecCustomDenyArrayOutput
	ToAppSecCustomDenyArrayOutputWithContext(context.Context) AppSecCustomDenyArrayOutput
}

type AppSecCustomDenyArray []AppSecCustomDenyInput

func (AppSecCustomDenyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecCustomDeny)(nil)).Elem()
}

func (i AppSecCustomDenyArray) ToAppSecCustomDenyArrayOutput() AppSecCustomDenyArrayOutput {
	return i.ToAppSecCustomDenyArrayOutputWithContext(context.Background())
}

func (i AppSecCustomDenyArray) ToAppSecCustomDenyArrayOutputWithContext(ctx context.Context) AppSecCustomDenyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecCustomDenyArrayOutput)
}

// AppSecCustomDenyMapInput is an input type that accepts AppSecCustomDenyMap and AppSecCustomDenyMapOutput values.
// You can construct a concrete instance of `AppSecCustomDenyMapInput` via:
//
//	AppSecCustomDenyMap{ "key": AppSecCustomDenyArgs{...} }
type AppSecCustomDenyMapInput interface {
	pulumi.Input

	ToAppSecCustomDenyMapOutput() AppSecCustomDenyMapOutput
	ToAppSecCustomDenyMapOutputWithContext(context.Context) AppSecCustomDenyMapOutput
}

type AppSecCustomDenyMap map[string]AppSecCustomDenyInput

func (AppSecCustomDenyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecCustomDeny)(nil)).Elem()
}

func (i AppSecCustomDenyMap) ToAppSecCustomDenyMapOutput() AppSecCustomDenyMapOutput {
	return i.ToAppSecCustomDenyMapOutputWithContext(context.Background())
}

func (i AppSecCustomDenyMap) ToAppSecCustomDenyMapOutputWithContext(ctx context.Context) AppSecCustomDenyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecCustomDenyMapOutput)
}

type AppSecCustomDenyOutput struct{ *pulumi.OutputState }

func (AppSecCustomDenyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecCustomDeny)(nil)).Elem()
}

func (o AppSecCustomDenyOutput) ToAppSecCustomDenyOutput() AppSecCustomDenyOutput {
	return o
}

func (o AppSecCustomDenyOutput) ToAppSecCustomDenyOutputWithContext(ctx context.Context) AppSecCustomDenyOutput {
	return o
}

// . Unique identifier of the security configuration associated with the custom deny.
func (o AppSecCustomDenyOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecCustomDeny) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// . Path to a JSON file containing properties and property values for the custom deny.
func (o AppSecCustomDenyOutput) CustomDeny() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecCustomDeny) pulumi.StringOutput { return v.CustomDeny }).(pulumi.StringOutput)
}

// custom_deny_id
func (o AppSecCustomDenyOutput) CustomDenyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecCustomDeny) pulumi.StringOutput { return v.CustomDenyId }).(pulumi.StringOutput)
}

type AppSecCustomDenyArrayOutput struct{ *pulumi.OutputState }

func (AppSecCustomDenyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecCustomDeny)(nil)).Elem()
}

func (o AppSecCustomDenyArrayOutput) ToAppSecCustomDenyArrayOutput() AppSecCustomDenyArrayOutput {
	return o
}

func (o AppSecCustomDenyArrayOutput) ToAppSecCustomDenyArrayOutputWithContext(ctx context.Context) AppSecCustomDenyArrayOutput {
	return o
}

func (o AppSecCustomDenyArrayOutput) Index(i pulumi.IntInput) AppSecCustomDenyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecCustomDeny {
		return vs[0].([]*AppSecCustomDeny)[vs[1].(int)]
	}).(AppSecCustomDenyOutput)
}

type AppSecCustomDenyMapOutput struct{ *pulumi.OutputState }

func (AppSecCustomDenyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecCustomDeny)(nil)).Elem()
}

func (o AppSecCustomDenyMapOutput) ToAppSecCustomDenyMapOutput() AppSecCustomDenyMapOutput {
	return o
}

func (o AppSecCustomDenyMapOutput) ToAppSecCustomDenyMapOutputWithContext(ctx context.Context) AppSecCustomDenyMapOutput {
	return o
}

func (o AppSecCustomDenyMapOutput) MapIndex(k pulumi.StringInput) AppSecCustomDenyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecCustomDeny {
		return vs[0].(map[string]*AppSecCustomDeny)[vs[1].(string)]
	}).(AppSecCustomDenyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecCustomDenyInput)(nil)).Elem(), &AppSecCustomDeny{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecCustomDenyArrayInput)(nil)).Elem(), AppSecCustomDenyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecCustomDenyMapInput)(nil)).Elem(), AppSecCustomDenyMap{})
	pulumi.RegisterOutputType(AppSecCustomDenyOutput{})
	pulumi.RegisterOutputType(AppSecCustomDenyArrayOutput{})
	pulumi.RegisterOutputType(AppSecCustomDenyMapOutput{})
}
