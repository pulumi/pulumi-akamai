// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v10/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetIamPasswordPolicy(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetIamPasswordPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIamPasswordPolicyResult
	err := ctx.Invoke("akamai:index/getIamPasswordPolicy:getIamPasswordPolicy", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getIamPasswordPolicy.
type GetIamPasswordPolicyResult struct {
	CaseDif int `pulumi:"caseDif"`
	// The provider-assigned unique ID for this managed resource.
	Id              string `pulumi:"id"`
	MaxRepeating    int    `pulumi:"maxRepeating"`
	MinDigits       int    `pulumi:"minDigits"`
	MinLength       int    `pulumi:"minLength"`
	MinLetters      int    `pulumi:"minLetters"`
	MinNonAlpha     int    `pulumi:"minNonAlpha"`
	MinReuse        int    `pulumi:"minReuse"`
	PwClass         string `pulumi:"pwClass"`
	RotateFrequency int    `pulumi:"rotateFrequency"`
}

func GetIamPasswordPolicyOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetIamPasswordPolicyResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetIamPasswordPolicyResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("akamai:index/getIamPasswordPolicy:getIamPasswordPolicy", nil, GetIamPasswordPolicyResultOutput{}, options).(GetIamPasswordPolicyResultOutput), nil
	}).(GetIamPasswordPolicyResultOutput)
}

// A collection of values returned by getIamPasswordPolicy.
type GetIamPasswordPolicyResultOutput struct{ *pulumi.OutputState }

func (GetIamPasswordPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPasswordPolicyResult)(nil)).Elem()
}

func (o GetIamPasswordPolicyResultOutput) ToGetIamPasswordPolicyResultOutput() GetIamPasswordPolicyResultOutput {
	return o
}

func (o GetIamPasswordPolicyResultOutput) ToGetIamPasswordPolicyResultOutputWithContext(ctx context.Context) GetIamPasswordPolicyResultOutput {
	return o
}

func (o GetIamPasswordPolicyResultOutput) CaseDif() pulumi.IntOutput {
	return o.ApplyT(func(v GetIamPasswordPolicyResult) int { return v.CaseDif }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIamPasswordPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPasswordPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIamPasswordPolicyResultOutput) MaxRepeating() pulumi.IntOutput {
	return o.ApplyT(func(v GetIamPasswordPolicyResult) int { return v.MaxRepeating }).(pulumi.IntOutput)
}

func (o GetIamPasswordPolicyResultOutput) MinDigits() pulumi.IntOutput {
	return o.ApplyT(func(v GetIamPasswordPolicyResult) int { return v.MinDigits }).(pulumi.IntOutput)
}

func (o GetIamPasswordPolicyResultOutput) MinLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetIamPasswordPolicyResult) int { return v.MinLength }).(pulumi.IntOutput)
}

func (o GetIamPasswordPolicyResultOutput) MinLetters() pulumi.IntOutput {
	return o.ApplyT(func(v GetIamPasswordPolicyResult) int { return v.MinLetters }).(pulumi.IntOutput)
}

func (o GetIamPasswordPolicyResultOutput) MinNonAlpha() pulumi.IntOutput {
	return o.ApplyT(func(v GetIamPasswordPolicyResult) int { return v.MinNonAlpha }).(pulumi.IntOutput)
}

func (o GetIamPasswordPolicyResultOutput) MinReuse() pulumi.IntOutput {
	return o.ApplyT(func(v GetIamPasswordPolicyResult) int { return v.MinReuse }).(pulumi.IntOutput)
}

func (o GetIamPasswordPolicyResultOutput) PwClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPasswordPolicyResult) string { return v.PwClass }).(pulumi.StringOutput)
}

func (o GetIamPasswordPolicyResultOutput) RotateFrequency() pulumi.IntOutput {
	return o.ApplyT(func(v GetIamPasswordPolicyResult) int { return v.RotateFrequency }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIamPasswordPolicyResultOutput{})
}
