// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupEdgekvGroupItems(ctx *pulumi.Context, args *LookupEdgekvGroupItemsArgs, opts ...pulumi.InvokeOption) (*LookupEdgekvGroupItemsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEdgekvGroupItemsResult
	err := ctx.Invoke("akamai:index/getEdgekvGroupItems:getEdgekvGroupItems", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEdgekvGroupItems.
type LookupEdgekvGroupItemsArgs struct {
	GroupName     string `pulumi:"groupName"`
	NamespaceName string `pulumi:"namespaceName"`
	Network       string `pulumi:"network"`
}

// A collection of values returned by getEdgekvGroupItems.
type LookupEdgekvGroupItemsResult struct {
	GroupName string `pulumi:"groupName"`
	// The provider-assigned unique ID for this managed resource.
	Id            string            `pulumi:"id"`
	Items         map[string]string `pulumi:"items"`
	NamespaceName string            `pulumi:"namespaceName"`
	Network       string            `pulumi:"network"`
}

func LookupEdgekvGroupItemsOutput(ctx *pulumi.Context, args LookupEdgekvGroupItemsOutputArgs, opts ...pulumi.InvokeOption) LookupEdgekvGroupItemsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEdgekvGroupItemsResult, error) {
			args := v.(LookupEdgekvGroupItemsArgs)
			r, err := LookupEdgekvGroupItems(ctx, &args, opts...)
			var s LookupEdgekvGroupItemsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEdgekvGroupItemsResultOutput)
}

// A collection of arguments for invoking getEdgekvGroupItems.
type LookupEdgekvGroupItemsOutputArgs struct {
	GroupName     pulumi.StringInput `pulumi:"groupName"`
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
	Network       pulumi.StringInput `pulumi:"network"`
}

func (LookupEdgekvGroupItemsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgekvGroupItemsArgs)(nil)).Elem()
}

// A collection of values returned by getEdgekvGroupItems.
type LookupEdgekvGroupItemsResultOutput struct{ *pulumi.OutputState }

func (LookupEdgekvGroupItemsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgekvGroupItemsResult)(nil)).Elem()
}

func (o LookupEdgekvGroupItemsResultOutput) ToLookupEdgekvGroupItemsResultOutput() LookupEdgekvGroupItemsResultOutput {
	return o
}

func (o LookupEdgekvGroupItemsResultOutput) ToLookupEdgekvGroupItemsResultOutputWithContext(ctx context.Context) LookupEdgekvGroupItemsResultOutput {
	return o
}

func (o LookupEdgekvGroupItemsResultOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgekvGroupItemsResult) string { return v.GroupName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupEdgekvGroupItemsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgekvGroupItemsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupEdgekvGroupItemsResultOutput) Items() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupEdgekvGroupItemsResult) map[string]string { return v.Items }).(pulumi.StringMapOutput)
}

func (o LookupEdgekvGroupItemsResultOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgekvGroupItemsResult) string { return v.NamespaceName }).(pulumi.StringOutput)
}

func (o LookupEdgekvGroupItemsResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgekvGroupItemsResult) string { return v.Network }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEdgekvGroupItemsResultOutput{})
}
