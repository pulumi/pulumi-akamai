// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CpsDvValidation struct {
	pulumi.CustomResourceState

	// The unique identifier of enrollment
	EnrollmentId pulumi.IntOutput `pulumi:"enrollmentId"`
	// List of SANs
	Sans pulumi.StringArrayOutput `pulumi:"sans"`
	// Status of validation
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewCpsDvValidation registers a new resource with the given unique name, arguments, and options.
func NewCpsDvValidation(ctx *pulumi.Context,
	name string, args *CpsDvValidationArgs, opts ...pulumi.ResourceOption) (*CpsDvValidation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnrollmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnrollmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CpsDvValidation
	err := ctx.RegisterResource("akamai:index/cpsDvValidation:CpsDvValidation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCpsDvValidation gets an existing CpsDvValidation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCpsDvValidation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CpsDvValidationState, opts ...pulumi.ResourceOption) (*CpsDvValidation, error) {
	var resource CpsDvValidation
	err := ctx.ReadResource("akamai:index/cpsDvValidation:CpsDvValidation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CpsDvValidation resources.
type cpsDvValidationState struct {
	// The unique identifier of enrollment
	EnrollmentId *int `pulumi:"enrollmentId"`
	// List of SANs
	Sans []string `pulumi:"sans"`
	// Status of validation
	Status *string `pulumi:"status"`
}

type CpsDvValidationState struct {
	// The unique identifier of enrollment
	EnrollmentId pulumi.IntPtrInput
	// List of SANs
	Sans pulumi.StringArrayInput
	// Status of validation
	Status pulumi.StringPtrInput
}

func (CpsDvValidationState) ElementType() reflect.Type {
	return reflect.TypeOf((*cpsDvValidationState)(nil)).Elem()
}

type cpsDvValidationArgs struct {
	// The unique identifier of enrollment
	EnrollmentId int `pulumi:"enrollmentId"`
	// List of SANs
	Sans []string `pulumi:"sans"`
}

// The set of arguments for constructing a CpsDvValidation resource.
type CpsDvValidationArgs struct {
	// The unique identifier of enrollment
	EnrollmentId pulumi.IntInput
	// List of SANs
	Sans pulumi.StringArrayInput
}

func (CpsDvValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cpsDvValidationArgs)(nil)).Elem()
}

type CpsDvValidationInput interface {
	pulumi.Input

	ToCpsDvValidationOutput() CpsDvValidationOutput
	ToCpsDvValidationOutputWithContext(ctx context.Context) CpsDvValidationOutput
}

func (*CpsDvValidation) ElementType() reflect.Type {
	return reflect.TypeOf((**CpsDvValidation)(nil)).Elem()
}

func (i *CpsDvValidation) ToCpsDvValidationOutput() CpsDvValidationOutput {
	return i.ToCpsDvValidationOutputWithContext(context.Background())
}

func (i *CpsDvValidation) ToCpsDvValidationOutputWithContext(ctx context.Context) CpsDvValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CpsDvValidationOutput)
}

// CpsDvValidationArrayInput is an input type that accepts CpsDvValidationArray and CpsDvValidationArrayOutput values.
// You can construct a concrete instance of `CpsDvValidationArrayInput` via:
//
//	CpsDvValidationArray{ CpsDvValidationArgs{...} }
type CpsDvValidationArrayInput interface {
	pulumi.Input

	ToCpsDvValidationArrayOutput() CpsDvValidationArrayOutput
	ToCpsDvValidationArrayOutputWithContext(context.Context) CpsDvValidationArrayOutput
}

type CpsDvValidationArray []CpsDvValidationInput

func (CpsDvValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CpsDvValidation)(nil)).Elem()
}

func (i CpsDvValidationArray) ToCpsDvValidationArrayOutput() CpsDvValidationArrayOutput {
	return i.ToCpsDvValidationArrayOutputWithContext(context.Background())
}

func (i CpsDvValidationArray) ToCpsDvValidationArrayOutputWithContext(ctx context.Context) CpsDvValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CpsDvValidationArrayOutput)
}

// CpsDvValidationMapInput is an input type that accepts CpsDvValidationMap and CpsDvValidationMapOutput values.
// You can construct a concrete instance of `CpsDvValidationMapInput` via:
//
//	CpsDvValidationMap{ "key": CpsDvValidationArgs{...} }
type CpsDvValidationMapInput interface {
	pulumi.Input

	ToCpsDvValidationMapOutput() CpsDvValidationMapOutput
	ToCpsDvValidationMapOutputWithContext(context.Context) CpsDvValidationMapOutput
}

type CpsDvValidationMap map[string]CpsDvValidationInput

func (CpsDvValidationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CpsDvValidation)(nil)).Elem()
}

func (i CpsDvValidationMap) ToCpsDvValidationMapOutput() CpsDvValidationMapOutput {
	return i.ToCpsDvValidationMapOutputWithContext(context.Background())
}

func (i CpsDvValidationMap) ToCpsDvValidationMapOutputWithContext(ctx context.Context) CpsDvValidationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CpsDvValidationMapOutput)
}

type CpsDvValidationOutput struct{ *pulumi.OutputState }

func (CpsDvValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CpsDvValidation)(nil)).Elem()
}

func (o CpsDvValidationOutput) ToCpsDvValidationOutput() CpsDvValidationOutput {
	return o
}

func (o CpsDvValidationOutput) ToCpsDvValidationOutputWithContext(ctx context.Context) CpsDvValidationOutput {
	return o
}

// The unique identifier of enrollment
func (o CpsDvValidationOutput) EnrollmentId() pulumi.IntOutput {
	return o.ApplyT(func(v *CpsDvValidation) pulumi.IntOutput { return v.EnrollmentId }).(pulumi.IntOutput)
}

// List of SANs
func (o CpsDvValidationOutput) Sans() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CpsDvValidation) pulumi.StringArrayOutput { return v.Sans }).(pulumi.StringArrayOutput)
}

// Status of validation
func (o CpsDvValidationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CpsDvValidation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type CpsDvValidationArrayOutput struct{ *pulumi.OutputState }

func (CpsDvValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CpsDvValidation)(nil)).Elem()
}

func (o CpsDvValidationArrayOutput) ToCpsDvValidationArrayOutput() CpsDvValidationArrayOutput {
	return o
}

func (o CpsDvValidationArrayOutput) ToCpsDvValidationArrayOutputWithContext(ctx context.Context) CpsDvValidationArrayOutput {
	return o
}

func (o CpsDvValidationArrayOutput) Index(i pulumi.IntInput) CpsDvValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CpsDvValidation {
		return vs[0].([]*CpsDvValidation)[vs[1].(int)]
	}).(CpsDvValidationOutput)
}

type CpsDvValidationMapOutput struct{ *pulumi.OutputState }

func (CpsDvValidationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CpsDvValidation)(nil)).Elem()
}

func (o CpsDvValidationMapOutput) ToCpsDvValidationMapOutput() CpsDvValidationMapOutput {
	return o
}

func (o CpsDvValidationMapOutput) ToCpsDvValidationMapOutputWithContext(ctx context.Context) CpsDvValidationMapOutput {
	return o
}

func (o CpsDvValidationMapOutput) MapIndex(k pulumi.StringInput) CpsDvValidationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CpsDvValidation {
		return vs[0].(map[string]*CpsDvValidation)[vs[1].(string)]
	}).(CpsDvValidationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CpsDvValidationInput)(nil)).Elem(), &CpsDvValidation{})
	pulumi.RegisterInputType(reflect.TypeOf((*CpsDvValidationArrayInput)(nil)).Elem(), CpsDvValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CpsDvValidationMapInput)(nil)).Elem(), CpsDvValidationMap{})
	pulumi.RegisterOutputType(CpsDvValidationOutput{})
	pulumi.RegisterOutputType(CpsDvValidationArrayOutput{})
	pulumi.RegisterOutputType(CpsDvValidationMapOutput{})
}
