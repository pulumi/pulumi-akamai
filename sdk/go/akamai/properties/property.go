// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package properties

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Deprecated: akamai.properties/property.Property has been deprecated in favor of akamai.index/property.Property
type Property struct {
	pulumi.CustomResourceState

	// Deprecated: The setting "contact" has been deprecated.
	Contacts pulumi.StringArrayOutput `pulumi:"contacts"`
	// Deprecated: The setting "contract" has been deprecated.
	Contract pulumi.StringOutput `pulumi:"contract"`
	// Contract ID to be assigned to the Property
	ContractId pulumi.StringOutput `pulumi:"contractId"`
	// Deprecated: The setting "cp_code" has been deprecated.
	CpCode pulumi.StringPtrOutput `pulumi:"cpCode"`
	// Deprecated: The setting "group" has been deprecated.
	Group pulumi.StringOutput `pulumi:"group"`
	// Group ID to be assigned to the Property
	GroupId   pulumi.StringOutput         `pulumi:"groupId"`
	Hostnames PropertyHostnameArrayOutput `pulumi:"hostnames"`
	// Deprecated: The setting "is_secure" has been deprecated.
	IsSecure pulumi.BoolPtrOutput `pulumi:"isSecure"`
	// Property's current latest version number
	LatestVersion pulumi.IntOutput `pulumi:"latestVersion"`
	// Name to give to the Property (must be unique)
	Name pulumi.StringOutput `pulumi:"name"`
	// Deprecated: The setting "origin" has been deprecated.
	Origins PropertyOriginArrayOutput `pulumi:"origins"`
	// Deprecated: The setting "product" has been deprecated.
	Product pulumi.StringOutput `pulumi:"product"`
	// Product ID to be assigned to the Property
	ProductId pulumi.StringOutput `pulumi:"productId"`
	// Property's version currently activated in production (zero when not active in production)
	ProductionVersion pulumi.IntOutput `pulumi:"productionVersion"`
	// Required property's version to be read
	ReadVersion pulumi.IntOutput             `pulumi:"readVersion"`
	RuleErrors  PropertyRuleErrorArrayOutput `pulumi:"ruleErrors"`
	// Specify the rule format version (defaults to latest version available when created)
	RuleFormat pulumi.StringOutput `pulumi:"ruleFormat"`
	// Deprecated: Rule warnings will not be set in state anymore
	RuleWarnings PropertyRuleWarningArrayOutput `pulumi:"ruleWarnings"`
	// Property Rules as JSON
	Rules pulumi.StringOutput `pulumi:"rules"`
	// Property's version currently activated in staging (zero when not active in staging)
	StagingVersion pulumi.IntOutput `pulumi:"stagingVersion"`
	// Deprecated: The setting "variables" has been deprecated.
	Variables pulumi.StringPtrOutput `pulumi:"variables"`
}

// NewProperty registers a new resource with the given unique name, arguments, and options.
func NewProperty(ctx *pulumi.Context,
	name string, args *PropertyArgs, opts ...pulumi.ResourceOption) (*Property, error) {
	if args == nil {
		args = &PropertyArgs{}
	}

	var resource Property
	err := ctx.RegisterResource("akamai:properties/property:Property", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProperty gets an existing Property resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProperty(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyState, opts ...pulumi.ResourceOption) (*Property, error) {
	var resource Property
	err := ctx.ReadResource("akamai:properties/property:Property", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Property resources.
type propertyState struct {
	// Deprecated: The setting "contact" has been deprecated.
	Contacts []string `pulumi:"contacts"`
	// Deprecated: The setting "contract" has been deprecated.
	Contract *string `pulumi:"contract"`
	// Contract ID to be assigned to the Property
	ContractId *string `pulumi:"contractId"`
	// Deprecated: The setting "cp_code" has been deprecated.
	CpCode *string `pulumi:"cpCode"`
	// Deprecated: The setting "group" has been deprecated.
	Group *string `pulumi:"group"`
	// Group ID to be assigned to the Property
	GroupId   *string            `pulumi:"groupId"`
	Hostnames []PropertyHostname `pulumi:"hostnames"`
	// Deprecated: The setting "is_secure" has been deprecated.
	IsSecure *bool `pulumi:"isSecure"`
	// Property's current latest version number
	LatestVersion *int `pulumi:"latestVersion"`
	// Name to give to the Property (must be unique)
	Name *string `pulumi:"name"`
	// Deprecated: The setting "origin" has been deprecated.
	Origins []PropertyOrigin `pulumi:"origins"`
	// Deprecated: The setting "product" has been deprecated.
	Product *string `pulumi:"product"`
	// Product ID to be assigned to the Property
	ProductId *string `pulumi:"productId"`
	// Property's version currently activated in production (zero when not active in production)
	ProductionVersion *int `pulumi:"productionVersion"`
	// Required property's version to be read
	ReadVersion *int                `pulumi:"readVersion"`
	RuleErrors  []PropertyRuleError `pulumi:"ruleErrors"`
	// Specify the rule format version (defaults to latest version available when created)
	RuleFormat *string `pulumi:"ruleFormat"`
	// Deprecated: Rule warnings will not be set in state anymore
	RuleWarnings []PropertyRuleWarning `pulumi:"ruleWarnings"`
	// Property Rules as JSON
	Rules *string `pulumi:"rules"`
	// Property's version currently activated in staging (zero when not active in staging)
	StagingVersion *int `pulumi:"stagingVersion"`
	// Deprecated: The setting "variables" has been deprecated.
	Variables *string `pulumi:"variables"`
}

type PropertyState struct {
	// Deprecated: The setting "contact" has been deprecated.
	Contacts pulumi.StringArrayInput
	// Deprecated: The setting "contract" has been deprecated.
	Contract pulumi.StringPtrInput
	// Contract ID to be assigned to the Property
	ContractId pulumi.StringPtrInput
	// Deprecated: The setting "cp_code" has been deprecated.
	CpCode pulumi.StringPtrInput
	// Deprecated: The setting "group" has been deprecated.
	Group pulumi.StringPtrInput
	// Group ID to be assigned to the Property
	GroupId   pulumi.StringPtrInput
	Hostnames PropertyHostnameArrayInput
	// Deprecated: The setting "is_secure" has been deprecated.
	IsSecure pulumi.BoolPtrInput
	// Property's current latest version number
	LatestVersion pulumi.IntPtrInput
	// Name to give to the Property (must be unique)
	Name pulumi.StringPtrInput
	// Deprecated: The setting "origin" has been deprecated.
	Origins PropertyOriginArrayInput
	// Deprecated: The setting "product" has been deprecated.
	Product pulumi.StringPtrInput
	// Product ID to be assigned to the Property
	ProductId pulumi.StringPtrInput
	// Property's version currently activated in production (zero when not active in production)
	ProductionVersion pulumi.IntPtrInput
	// Required property's version to be read
	ReadVersion pulumi.IntPtrInput
	RuleErrors  PropertyRuleErrorArrayInput
	// Specify the rule format version (defaults to latest version available when created)
	RuleFormat pulumi.StringPtrInput
	// Deprecated: Rule warnings will not be set in state anymore
	RuleWarnings PropertyRuleWarningArrayInput
	// Property Rules as JSON
	Rules pulumi.StringPtrInput
	// Property's version currently activated in staging (zero when not active in staging)
	StagingVersion pulumi.IntPtrInput
	// Deprecated: The setting "variables" has been deprecated.
	Variables pulumi.StringPtrInput
}

func (PropertyState) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyState)(nil)).Elem()
}

type propertyArgs struct {
	// Deprecated: The setting "contact" has been deprecated.
	Contacts []string `pulumi:"contacts"`
	// Deprecated: The setting "contract" has been deprecated.
	Contract *string `pulumi:"contract"`
	// Contract ID to be assigned to the Property
	ContractId *string `pulumi:"contractId"`
	// Deprecated: The setting "cp_code" has been deprecated.
	CpCode *string `pulumi:"cpCode"`
	// Deprecated: The setting "group" has been deprecated.
	Group *string `pulumi:"group"`
	// Group ID to be assigned to the Property
	GroupId   *string            `pulumi:"groupId"`
	Hostnames []PropertyHostname `pulumi:"hostnames"`
	// Deprecated: The setting "is_secure" has been deprecated.
	IsSecure *bool `pulumi:"isSecure"`
	// Name to give to the Property (must be unique)
	Name *string `pulumi:"name"`
	// Deprecated: The setting "origin" has been deprecated.
	Origins []PropertyOrigin `pulumi:"origins"`
	// Deprecated: The setting "product" has been deprecated.
	Product *string `pulumi:"product"`
	// Product ID to be assigned to the Property
	ProductId *string `pulumi:"productId"`
	// Specify the rule format version (defaults to latest version available when created)
	RuleFormat *string `pulumi:"ruleFormat"`
	// Deprecated: Rule warnings will not be set in state anymore
	RuleWarnings []PropertyRuleWarning `pulumi:"ruleWarnings"`
	// Property Rules as JSON
	Rules *string `pulumi:"rules"`
	// Deprecated: The setting "variables" has been deprecated.
	Variables *string `pulumi:"variables"`
}

// The set of arguments for constructing a Property resource.
type PropertyArgs struct {
	// Deprecated: The setting "contact" has been deprecated.
	Contacts pulumi.StringArrayInput
	// Deprecated: The setting "contract" has been deprecated.
	Contract pulumi.StringPtrInput
	// Contract ID to be assigned to the Property
	ContractId pulumi.StringPtrInput
	// Deprecated: The setting "cp_code" has been deprecated.
	CpCode pulumi.StringPtrInput
	// Deprecated: The setting "group" has been deprecated.
	Group pulumi.StringPtrInput
	// Group ID to be assigned to the Property
	GroupId   pulumi.StringPtrInput
	Hostnames PropertyHostnameArrayInput
	// Deprecated: The setting "is_secure" has been deprecated.
	IsSecure pulumi.BoolPtrInput
	// Name to give to the Property (must be unique)
	Name pulumi.StringPtrInput
	// Deprecated: The setting "origin" has been deprecated.
	Origins PropertyOriginArrayInput
	// Deprecated: The setting "product" has been deprecated.
	Product pulumi.StringPtrInput
	// Product ID to be assigned to the Property
	ProductId pulumi.StringPtrInput
	// Specify the rule format version (defaults to latest version available when created)
	RuleFormat pulumi.StringPtrInput
	// Deprecated: Rule warnings will not be set in state anymore
	RuleWarnings PropertyRuleWarningArrayInput
	// Property Rules as JSON
	Rules pulumi.StringPtrInput
	// Deprecated: The setting "variables" has been deprecated.
	Variables pulumi.StringPtrInput
}

func (PropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyArgs)(nil)).Elem()
}

type PropertyInput interface {
	pulumi.Input

	ToPropertyOutput() PropertyOutput
	ToPropertyOutputWithContext(ctx context.Context) PropertyOutput
}

func (*Property) ElementType() reflect.Type {
	return reflect.TypeOf((**Property)(nil)).Elem()
}

func (i *Property) ToPropertyOutput() PropertyOutput {
	return i.ToPropertyOutputWithContext(context.Background())
}

func (i *Property) ToPropertyOutputWithContext(ctx context.Context) PropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyOutput)
}

// PropertyArrayInput is an input type that accepts PropertyArray and PropertyArrayOutput values.
// You can construct a concrete instance of `PropertyArrayInput` via:
//
//	PropertyArray{ PropertyArgs{...} }
type PropertyArrayInput interface {
	pulumi.Input

	ToPropertyArrayOutput() PropertyArrayOutput
	ToPropertyArrayOutputWithContext(context.Context) PropertyArrayOutput
}

type PropertyArray []PropertyInput

func (PropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Property)(nil)).Elem()
}

func (i PropertyArray) ToPropertyArrayOutput() PropertyArrayOutput {
	return i.ToPropertyArrayOutputWithContext(context.Background())
}

func (i PropertyArray) ToPropertyArrayOutputWithContext(ctx context.Context) PropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyArrayOutput)
}

// PropertyMapInput is an input type that accepts PropertyMap and PropertyMapOutput values.
// You can construct a concrete instance of `PropertyMapInput` via:
//
//	PropertyMap{ "key": PropertyArgs{...} }
type PropertyMapInput interface {
	pulumi.Input

	ToPropertyMapOutput() PropertyMapOutput
	ToPropertyMapOutputWithContext(context.Context) PropertyMapOutput
}

type PropertyMap map[string]PropertyInput

func (PropertyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Property)(nil)).Elem()
}

func (i PropertyMap) ToPropertyMapOutput() PropertyMapOutput {
	return i.ToPropertyMapOutputWithContext(context.Background())
}

func (i PropertyMap) ToPropertyMapOutputWithContext(ctx context.Context) PropertyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyMapOutput)
}

type PropertyOutput struct{ *pulumi.OutputState }

func (PropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Property)(nil)).Elem()
}

func (o PropertyOutput) ToPropertyOutput() PropertyOutput {
	return o
}

func (o PropertyOutput) ToPropertyOutputWithContext(ctx context.Context) PropertyOutput {
	return o
}

// Deprecated: The setting "contact" has been deprecated.
func (o PropertyOutput) Contacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Property) pulumi.StringArrayOutput { return v.Contacts }).(pulumi.StringArrayOutput)
}

// Deprecated: The setting "contract" has been deprecated.
func (o PropertyOutput) Contract() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.Contract }).(pulumi.StringOutput)
}

// Contract ID to be assigned to the Property
func (o PropertyOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.ContractId }).(pulumi.StringOutput)
}

// Deprecated: The setting "cp_code" has been deprecated.
func (o PropertyOutput) CpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Property) pulumi.StringPtrOutput { return v.CpCode }).(pulumi.StringPtrOutput)
}

// Deprecated: The setting "group" has been deprecated.
func (o PropertyOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.Group }).(pulumi.StringOutput)
}

// Group ID to be assigned to the Property
func (o PropertyOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

func (o PropertyOutput) Hostnames() PropertyHostnameArrayOutput {
	return o.ApplyT(func(v *Property) PropertyHostnameArrayOutput { return v.Hostnames }).(PropertyHostnameArrayOutput)
}

// Deprecated: The setting "is_secure" has been deprecated.
func (o PropertyOutput) IsSecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Property) pulumi.BoolPtrOutput { return v.IsSecure }).(pulumi.BoolPtrOutput)
}

// Property's current latest version number
func (o PropertyOutput) LatestVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *Property) pulumi.IntOutput { return v.LatestVersion }).(pulumi.IntOutput)
}

// Name to give to the Property (must be unique)
func (o PropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: The setting "origin" has been deprecated.
func (o PropertyOutput) Origins() PropertyOriginArrayOutput {
	return o.ApplyT(func(v *Property) PropertyOriginArrayOutput { return v.Origins }).(PropertyOriginArrayOutput)
}

// Deprecated: The setting "product" has been deprecated.
func (o PropertyOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.Product }).(pulumi.StringOutput)
}

// Product ID to be assigned to the Property
func (o PropertyOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

// Property's version currently activated in production (zero when not active in production)
func (o PropertyOutput) ProductionVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *Property) pulumi.IntOutput { return v.ProductionVersion }).(pulumi.IntOutput)
}

// Required property's version to be read
func (o PropertyOutput) ReadVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *Property) pulumi.IntOutput { return v.ReadVersion }).(pulumi.IntOutput)
}

func (o PropertyOutput) RuleErrors() PropertyRuleErrorArrayOutput {
	return o.ApplyT(func(v *Property) PropertyRuleErrorArrayOutput { return v.RuleErrors }).(PropertyRuleErrorArrayOutput)
}

// Specify the rule format version (defaults to latest version available when created)
func (o PropertyOutput) RuleFormat() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.RuleFormat }).(pulumi.StringOutput)
}

// Deprecated: Rule warnings will not be set in state anymore
func (o PropertyOutput) RuleWarnings() PropertyRuleWarningArrayOutput {
	return o.ApplyT(func(v *Property) PropertyRuleWarningArrayOutput { return v.RuleWarnings }).(PropertyRuleWarningArrayOutput)
}

// Property Rules as JSON
func (o PropertyOutput) Rules() pulumi.StringOutput {
	return o.ApplyT(func(v *Property) pulumi.StringOutput { return v.Rules }).(pulumi.StringOutput)
}

// Property's version currently activated in staging (zero when not active in staging)
func (o PropertyOutput) StagingVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *Property) pulumi.IntOutput { return v.StagingVersion }).(pulumi.IntOutput)
}

// Deprecated: The setting "variables" has been deprecated.
func (o PropertyOutput) Variables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Property) pulumi.StringPtrOutput { return v.Variables }).(pulumi.StringPtrOutput)
}

type PropertyArrayOutput struct{ *pulumi.OutputState }

func (PropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Property)(nil)).Elem()
}

func (o PropertyArrayOutput) ToPropertyArrayOutput() PropertyArrayOutput {
	return o
}

func (o PropertyArrayOutput) ToPropertyArrayOutputWithContext(ctx context.Context) PropertyArrayOutput {
	return o
}

func (o PropertyArrayOutput) Index(i pulumi.IntInput) PropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Property {
		return vs[0].([]*Property)[vs[1].(int)]
	}).(PropertyOutput)
}

type PropertyMapOutput struct{ *pulumi.OutputState }

func (PropertyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Property)(nil)).Elem()
}

func (o PropertyMapOutput) ToPropertyMapOutput() PropertyMapOutput {
	return o
}

func (o PropertyMapOutput) ToPropertyMapOutputWithContext(ctx context.Context) PropertyMapOutput {
	return o
}

func (o PropertyMapOutput) MapIndex(k pulumi.StringInput) PropertyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Property {
		return vs[0].(map[string]*Property)[vs[1].(string)]
	}).(PropertyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyInput)(nil)).Elem(), &Property{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyArrayInput)(nil)).Elem(), PropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyMapInput)(nil)).Elem(), PropertyMap{})
	pulumi.RegisterOutputType(PropertyOutput{})
	pulumi.RegisterOutputType(PropertyArrayOutput{})
	pulumi.RegisterOutputType(PropertyMapOutput{})
}
