// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package properties

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Deprecated: akamai.properties.PropertyActivation has been deprecated in favor of akamai.PropertyActivation
type PropertyActivation struct {
	pulumi.CustomResourceState

	ActivationId pulumi.StringOutput `pulumi:"activationId"`
	// automatically acknowledge all rule warnings for activation to continue. default is true
	AutoAcknowledgeRuleWarnings pulumi.BoolPtrOutput     `pulumi:"autoAcknowledgeRuleWarnings"`
	Contacts                    pulumi.StringArrayOutput `pulumi:"contacts"`
	Errors                      pulumi.StringOutput      `pulumi:"errors"`
	Network                     pulumi.StringPtrOutput   `pulumi:"network"`
	// assigns a log message to the activation request
	Note pulumi.StringPtrOutput `pulumi:"note"`
	// Deprecated: The setting "property" has been deprecated.
	Property   pulumi.StringOutput                    `pulumi:"property"`
	PropertyId pulumi.StringOutput                    `pulumi:"propertyId"`
	RuleErrors PropertyActivationRuleErrorArrayOutput `pulumi:"ruleErrors"`
	// Deprecated: Rule warnings will not be set in state anymore
	RuleWarnings PropertyActivationRuleWarningArrayOutput `pulumi:"ruleWarnings"`
	Status       pulumi.StringOutput                      `pulumi:"status"`
	Version      pulumi.IntOutput                         `pulumi:"version"`
	Warnings     pulumi.StringOutput                      `pulumi:"warnings"`
}

// NewPropertyActivation registers a new resource with the given unique name, arguments, and options.
func NewPropertyActivation(ctx *pulumi.Context,
	name string, args *PropertyActivationArgs, opts ...pulumi.ResourceOption) (*PropertyActivation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Contacts == nil {
		return nil, errors.New("invalid value for required argument 'Contacts'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource PropertyActivation
	err := ctx.RegisterResource("akamai:properties/propertyActivation:PropertyActivation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPropertyActivation gets an existing PropertyActivation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPropertyActivation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyActivationState, opts ...pulumi.ResourceOption) (*PropertyActivation, error) {
	var resource PropertyActivation
	err := ctx.ReadResource("akamai:properties/propertyActivation:PropertyActivation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PropertyActivation resources.
type propertyActivationState struct {
	ActivationId *string `pulumi:"activationId"`
	// automatically acknowledge all rule warnings for activation to continue. default is true
	AutoAcknowledgeRuleWarnings *bool    `pulumi:"autoAcknowledgeRuleWarnings"`
	Contacts                    []string `pulumi:"contacts"`
	Errors                      *string  `pulumi:"errors"`
	Network                     *string  `pulumi:"network"`
	// assigns a log message to the activation request
	Note *string `pulumi:"note"`
	// Deprecated: The setting "property" has been deprecated.
	Property   *string                       `pulumi:"property"`
	PropertyId *string                       `pulumi:"propertyId"`
	RuleErrors []PropertyActivationRuleError `pulumi:"ruleErrors"`
	// Deprecated: Rule warnings will not be set in state anymore
	RuleWarnings []PropertyActivationRuleWarning `pulumi:"ruleWarnings"`
	Status       *string                         `pulumi:"status"`
	Version      *int                            `pulumi:"version"`
	Warnings     *string                         `pulumi:"warnings"`
}

type PropertyActivationState struct {
	ActivationId pulumi.StringPtrInput
	// automatically acknowledge all rule warnings for activation to continue. default is true
	AutoAcknowledgeRuleWarnings pulumi.BoolPtrInput
	Contacts                    pulumi.StringArrayInput
	Errors                      pulumi.StringPtrInput
	Network                     pulumi.StringPtrInput
	// assigns a log message to the activation request
	Note pulumi.StringPtrInput
	// Deprecated: The setting "property" has been deprecated.
	Property   pulumi.StringPtrInput
	PropertyId pulumi.StringPtrInput
	RuleErrors PropertyActivationRuleErrorArrayInput
	// Deprecated: Rule warnings will not be set in state anymore
	RuleWarnings PropertyActivationRuleWarningArrayInput
	Status       pulumi.StringPtrInput
	Version      pulumi.IntPtrInput
	Warnings     pulumi.StringPtrInput
}

func (PropertyActivationState) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyActivationState)(nil)).Elem()
}

type propertyActivationArgs struct {
	ActivationId *string `pulumi:"activationId"`
	// automatically acknowledge all rule warnings for activation to continue. default is true
	AutoAcknowledgeRuleWarnings *bool    `pulumi:"autoAcknowledgeRuleWarnings"`
	Contacts                    []string `pulumi:"contacts"`
	Network                     *string  `pulumi:"network"`
	// assigns a log message to the activation request
	Note *string `pulumi:"note"`
	// Deprecated: The setting "property" has been deprecated.
	Property   *string                       `pulumi:"property"`
	PropertyId *string                       `pulumi:"propertyId"`
	RuleErrors []PropertyActivationRuleError `pulumi:"ruleErrors"`
	// Deprecated: Rule warnings will not be set in state anymore
	RuleWarnings []PropertyActivationRuleWarning `pulumi:"ruleWarnings"`
	Version      int                             `pulumi:"version"`
}

// The set of arguments for constructing a PropertyActivation resource.
type PropertyActivationArgs struct {
	ActivationId pulumi.StringPtrInput
	// automatically acknowledge all rule warnings for activation to continue. default is true
	AutoAcknowledgeRuleWarnings pulumi.BoolPtrInput
	Contacts                    pulumi.StringArrayInput
	Network                     pulumi.StringPtrInput
	// assigns a log message to the activation request
	Note pulumi.StringPtrInput
	// Deprecated: The setting "property" has been deprecated.
	Property   pulumi.StringPtrInput
	PropertyId pulumi.StringPtrInput
	RuleErrors PropertyActivationRuleErrorArrayInput
	// Deprecated: Rule warnings will not be set in state anymore
	RuleWarnings PropertyActivationRuleWarningArrayInput
	Version      pulumi.IntInput
}

func (PropertyActivationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyActivationArgs)(nil)).Elem()
}

type PropertyActivationInput interface {
	pulumi.Input

	ToPropertyActivationOutput() PropertyActivationOutput
	ToPropertyActivationOutputWithContext(ctx context.Context) PropertyActivationOutput
}

func (*PropertyActivation) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivation)(nil)).Elem()
}

func (i *PropertyActivation) ToPropertyActivationOutput() PropertyActivationOutput {
	return i.ToPropertyActivationOutputWithContext(context.Background())
}

func (i *PropertyActivation) ToPropertyActivationOutputWithContext(ctx context.Context) PropertyActivationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationOutput)
}

// PropertyActivationArrayInput is an input type that accepts PropertyActivationArray and PropertyActivationArrayOutput values.
// You can construct a concrete instance of `PropertyActivationArrayInput` via:
//
//          PropertyActivationArray{ PropertyActivationArgs{...} }
type PropertyActivationArrayInput interface {
	pulumi.Input

	ToPropertyActivationArrayOutput() PropertyActivationArrayOutput
	ToPropertyActivationArrayOutputWithContext(context.Context) PropertyActivationArrayOutput
}

type PropertyActivationArray []PropertyActivationInput

func (PropertyActivationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PropertyActivation)(nil)).Elem()
}

func (i PropertyActivationArray) ToPropertyActivationArrayOutput() PropertyActivationArrayOutput {
	return i.ToPropertyActivationArrayOutputWithContext(context.Background())
}

func (i PropertyActivationArray) ToPropertyActivationArrayOutputWithContext(ctx context.Context) PropertyActivationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationArrayOutput)
}

// PropertyActivationMapInput is an input type that accepts PropertyActivationMap and PropertyActivationMapOutput values.
// You can construct a concrete instance of `PropertyActivationMapInput` via:
//
//          PropertyActivationMap{ "key": PropertyActivationArgs{...} }
type PropertyActivationMapInput interface {
	pulumi.Input

	ToPropertyActivationMapOutput() PropertyActivationMapOutput
	ToPropertyActivationMapOutputWithContext(context.Context) PropertyActivationMapOutput
}

type PropertyActivationMap map[string]PropertyActivationInput

func (PropertyActivationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PropertyActivation)(nil)).Elem()
}

func (i PropertyActivationMap) ToPropertyActivationMapOutput() PropertyActivationMapOutput {
	return i.ToPropertyActivationMapOutputWithContext(context.Background())
}

func (i PropertyActivationMap) ToPropertyActivationMapOutputWithContext(ctx context.Context) PropertyActivationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationMapOutput)
}

type PropertyActivationOutput struct{ *pulumi.OutputState }

func (PropertyActivationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivation)(nil)).Elem()
}

func (o PropertyActivationOutput) ToPropertyActivationOutput() PropertyActivationOutput {
	return o
}

func (o PropertyActivationOutput) ToPropertyActivationOutputWithContext(ctx context.Context) PropertyActivationOutput {
	return o
}

type PropertyActivationArrayOutput struct{ *pulumi.OutputState }

func (PropertyActivationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PropertyActivation)(nil)).Elem()
}

func (o PropertyActivationArrayOutput) ToPropertyActivationArrayOutput() PropertyActivationArrayOutput {
	return o
}

func (o PropertyActivationArrayOutput) ToPropertyActivationArrayOutputWithContext(ctx context.Context) PropertyActivationArrayOutput {
	return o
}

func (o PropertyActivationArrayOutput) Index(i pulumi.IntInput) PropertyActivationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PropertyActivation {
		return vs[0].([]*PropertyActivation)[vs[1].(int)]
	}).(PropertyActivationOutput)
}

type PropertyActivationMapOutput struct{ *pulumi.OutputState }

func (PropertyActivationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PropertyActivation)(nil)).Elem()
}

func (o PropertyActivationMapOutput) ToPropertyActivationMapOutput() PropertyActivationMapOutput {
	return o
}

func (o PropertyActivationMapOutput) ToPropertyActivationMapOutputWithContext(ctx context.Context) PropertyActivationMapOutput {
	return o
}

func (o PropertyActivationMapOutput) MapIndex(k pulumi.StringInput) PropertyActivationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PropertyActivation {
		return vs[0].(map[string]*PropertyActivation)[vs[1].(string)]
	}).(PropertyActivationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationInput)(nil)).Elem(), &PropertyActivation{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationArrayInput)(nil)).Elem(), PropertyActivationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationMapInput)(nil)).Elem(), PropertyActivationMap{})
	pulumi.RegisterOutputType(PropertyActivationOutput{})
	pulumi.RegisterOutputType(PropertyActivationArrayOutput{})
	pulumi.RegisterOutputType(PropertyActivationMapOutput{})
}
