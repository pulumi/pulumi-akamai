// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package properties

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `EdgeHostName` resource lets you configure a secure edge hostname. Your
// edge hostname determines how requests for your site, app, or content are mapped to
// Akamai edge servers.
//
// An edge hostname is the CNAME target you use when directing your end user traffic to
// Akamai. Each hostname assigned to a property has a corresponding edge hostname.
//
// Akamai supports three types of edge hostnames, depending on the level of security
// you need for your traffic: Standard TLS, Enhanced TLS, and Shared Certificate. When
// entering the `edgeHostname` attribute, you need to include a specific domain suffix
// for your edge hostname type:
//
// | Edge hostname type | Domain suffix |
// |------|-------|
// | Enhanced TLS | edgekey.net |
// | Standard TLS | edgesuite.net |
// | Shared Cert | akamaized.net |
//
// For example, if you use Standard TLS and have `www.example.com` as a hostname, your edge hostname would be `www.example.com.edgesuite.net`. If you wanted to use Enhanced TLS with the same hostname, your edge hostname would be `www.example.com.edgekey.net`. See the [Property Manager API (PAPI)](https://developer.akamai.com/api/core_features/property_manager/v1.html#createedgehostnames) for more information.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v3/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := akamai.NewEdgeHostName(ctx, "provider-demo", &akamai.EdgeHostNameArgs{
// 			ContractId:   pulumi.String("ctr_1-AB123"),
// 			EdgeHostname: pulumi.String("www.example.org.edgesuite.net"),
// 			GroupId:      pulumi.String("grp_123"),
// 			IpBehavior:   pulumi.String("IPV4"),
// 			ProductId:    pulumi.String("prd_Object_Delivery"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Attributes reference
//
// This resource returns this attribute:
//
// * `ipBehavior` - Returns the IP protocol the hostname will use, either `IPV4` for version 4, IPV6_PERFORMANCE`for version 6, or`IPV6_COMPLIANCE` for both.
//
// ## Import
//
// Basic Usagehcl resource "akamai_edge_hostname" "example" {
//
// # (resource arguments) } You can import Akamai edge hostnames using a comma-delimited string of edge hostname, contract ID, and group ID. You have to enter the values in this order:
//
// `edge_hostname, contract_id, group_id` For example
//
// ```sh
//  $ pulumi import akamai:properties/edgeHostName:EdgeHostName example ehn_123,ctr_1-AB123,grp_123
// ```
//
// Deprecated: akamai.properties.EdgeHostName has been deprecated in favor of akamai.EdgeHostName
type EdgeHostName struct {
	pulumi.CustomResourceState

	// Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .
	Certificate pulumi.IntPtrOutput `pulumi:"certificate"`
	// Replaced by `contractId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "contract" has been deprecated.
	Contract pulumi.StringOutput `pulumi:"contract"`
	// A contract's unique ID, including the `ctr_` prefix.
	ContractId pulumi.StringOutput `pulumi:"contractId"`
	// One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.
	EdgeHostname pulumi.StringOutput `pulumi:"edgeHostname"`
	// Replaced by `groupId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "group" has been deprecated.
	Group pulumi.StringOutput `pulumi:"group"`
	// A group's unique ID, including the `grp_` prefix.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6.
	IpBehavior pulumi.StringOutput `pulumi:"ipBehavior"`
	// Replaced by `productId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "product" has been deprecated.
	Product   pulumi.StringOutput `pulumi:"product"`
	ProductId pulumi.StringOutput `pulumi:"productId"`
	// Email address that should receive updates on the IP behavior update request. Required for update operation.
	StatusUpdateEmails pulumi.StringArrayOutput `pulumi:"statusUpdateEmails"`
	// A JSON encoded list of use cases.
	UseCases pulumi.StringPtrOutput `pulumi:"useCases"`
}

// NewEdgeHostName registers a new resource with the given unique name, arguments, and options.
func NewEdgeHostName(ctx *pulumi.Context,
	name string, args *EdgeHostNameArgs, opts ...pulumi.ResourceOption) (*EdgeHostName, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EdgeHostname == nil {
		return nil, errors.New("invalid value for required argument 'EdgeHostname'")
	}
	if args.IpBehavior == nil {
		return nil, errors.New("invalid value for required argument 'IpBehavior'")
	}
	var resource EdgeHostName
	err := ctx.RegisterResource("akamai:properties/edgeHostName:EdgeHostName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeHostName gets an existing EdgeHostName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeHostName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeHostNameState, opts ...pulumi.ResourceOption) (*EdgeHostName, error) {
	var resource EdgeHostName
	err := ctx.ReadResource("akamai:properties/edgeHostName:EdgeHostName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeHostName resources.
type edgeHostNameState struct {
	// Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .
	Certificate *int `pulumi:"certificate"`
	// Replaced by `contractId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "contract" has been deprecated.
	Contract *string `pulumi:"contract"`
	// A contract's unique ID, including the `ctr_` prefix.
	ContractId *string `pulumi:"contractId"`
	// One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.
	EdgeHostname *string `pulumi:"edgeHostname"`
	// Replaced by `groupId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "group" has been deprecated.
	Group *string `pulumi:"group"`
	// A group's unique ID, including the `grp_` prefix.
	GroupId *string `pulumi:"groupId"`
	// Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6.
	IpBehavior *string `pulumi:"ipBehavior"`
	// Replaced by `productId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "product" has been deprecated.
	Product   *string `pulumi:"product"`
	ProductId *string `pulumi:"productId"`
	// Email address that should receive updates on the IP behavior update request. Required for update operation.
	StatusUpdateEmails []string `pulumi:"statusUpdateEmails"`
	// A JSON encoded list of use cases.
	UseCases *string `pulumi:"useCases"`
}

type EdgeHostNameState struct {
	// Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .
	Certificate pulumi.IntPtrInput
	// Replaced by `contractId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "contract" has been deprecated.
	Contract pulumi.StringPtrInput
	// A contract's unique ID, including the `ctr_` prefix.
	ContractId pulumi.StringPtrInput
	// One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.
	EdgeHostname pulumi.StringPtrInput
	// Replaced by `groupId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "group" has been deprecated.
	Group pulumi.StringPtrInput
	// A group's unique ID, including the `grp_` prefix.
	GroupId pulumi.StringPtrInput
	// Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6.
	IpBehavior pulumi.StringPtrInput
	// Replaced by `productId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "product" has been deprecated.
	Product   pulumi.StringPtrInput
	ProductId pulumi.StringPtrInput
	// Email address that should receive updates on the IP behavior update request. Required for update operation.
	StatusUpdateEmails pulumi.StringArrayInput
	// A JSON encoded list of use cases.
	UseCases pulumi.StringPtrInput
}

func (EdgeHostNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeHostNameState)(nil)).Elem()
}

type edgeHostNameArgs struct {
	// Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .
	Certificate *int `pulumi:"certificate"`
	// Replaced by `contractId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "contract" has been deprecated.
	Contract *string `pulumi:"contract"`
	// A contract's unique ID, including the `ctr_` prefix.
	ContractId *string `pulumi:"contractId"`
	// One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.
	EdgeHostname string `pulumi:"edgeHostname"`
	// Replaced by `groupId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "group" has been deprecated.
	Group *string `pulumi:"group"`
	// A group's unique ID, including the `grp_` prefix.
	GroupId *string `pulumi:"groupId"`
	// Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6.
	IpBehavior string `pulumi:"ipBehavior"`
	// Replaced by `productId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "product" has been deprecated.
	Product   *string `pulumi:"product"`
	ProductId *string `pulumi:"productId"`
	// Email address that should receive updates on the IP behavior update request. Required for update operation.
	StatusUpdateEmails []string `pulumi:"statusUpdateEmails"`
	// A JSON encoded list of use cases.
	UseCases *string `pulumi:"useCases"`
}

// The set of arguments for constructing a EdgeHostName resource.
type EdgeHostNameArgs struct {
	// Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .
	Certificate pulumi.IntPtrInput
	// Replaced by `contractId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "contract" has been deprecated.
	Contract pulumi.StringPtrInput
	// A contract's unique ID, including the `ctr_` prefix.
	ContractId pulumi.StringPtrInput
	// One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.
	EdgeHostname pulumi.StringInput
	// Replaced by `groupId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "group" has been deprecated.
	Group pulumi.StringPtrInput
	// A group's unique ID, including the `grp_` prefix.
	GroupId pulumi.StringPtrInput
	// Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6.
	IpBehavior pulumi.StringInput
	// Replaced by `productId`. Maintained for legacy purposes.
	//
	// Deprecated: The setting "product" has been deprecated.
	Product   pulumi.StringPtrInput
	ProductId pulumi.StringPtrInput
	// Email address that should receive updates on the IP behavior update request. Required for update operation.
	StatusUpdateEmails pulumi.StringArrayInput
	// A JSON encoded list of use cases.
	UseCases pulumi.StringPtrInput
}

func (EdgeHostNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeHostNameArgs)(nil)).Elem()
}

type EdgeHostNameInput interface {
	pulumi.Input

	ToEdgeHostNameOutput() EdgeHostNameOutput
	ToEdgeHostNameOutputWithContext(ctx context.Context) EdgeHostNameOutput
}

func (*EdgeHostName) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeHostName)(nil)).Elem()
}

func (i *EdgeHostName) ToEdgeHostNameOutput() EdgeHostNameOutput {
	return i.ToEdgeHostNameOutputWithContext(context.Background())
}

func (i *EdgeHostName) ToEdgeHostNameOutputWithContext(ctx context.Context) EdgeHostNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeHostNameOutput)
}

// EdgeHostNameArrayInput is an input type that accepts EdgeHostNameArray and EdgeHostNameArrayOutput values.
// You can construct a concrete instance of `EdgeHostNameArrayInput` via:
//
//          EdgeHostNameArray{ EdgeHostNameArgs{...} }
type EdgeHostNameArrayInput interface {
	pulumi.Input

	ToEdgeHostNameArrayOutput() EdgeHostNameArrayOutput
	ToEdgeHostNameArrayOutputWithContext(context.Context) EdgeHostNameArrayOutput
}

type EdgeHostNameArray []EdgeHostNameInput

func (EdgeHostNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeHostName)(nil)).Elem()
}

func (i EdgeHostNameArray) ToEdgeHostNameArrayOutput() EdgeHostNameArrayOutput {
	return i.ToEdgeHostNameArrayOutputWithContext(context.Background())
}

func (i EdgeHostNameArray) ToEdgeHostNameArrayOutputWithContext(ctx context.Context) EdgeHostNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeHostNameArrayOutput)
}

// EdgeHostNameMapInput is an input type that accepts EdgeHostNameMap and EdgeHostNameMapOutput values.
// You can construct a concrete instance of `EdgeHostNameMapInput` via:
//
//          EdgeHostNameMap{ "key": EdgeHostNameArgs{...} }
type EdgeHostNameMapInput interface {
	pulumi.Input

	ToEdgeHostNameMapOutput() EdgeHostNameMapOutput
	ToEdgeHostNameMapOutputWithContext(context.Context) EdgeHostNameMapOutput
}

type EdgeHostNameMap map[string]EdgeHostNameInput

func (EdgeHostNameMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeHostName)(nil)).Elem()
}

func (i EdgeHostNameMap) ToEdgeHostNameMapOutput() EdgeHostNameMapOutput {
	return i.ToEdgeHostNameMapOutputWithContext(context.Background())
}

func (i EdgeHostNameMap) ToEdgeHostNameMapOutputWithContext(ctx context.Context) EdgeHostNameMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeHostNameMapOutput)
}

type EdgeHostNameOutput struct{ *pulumi.OutputState }

func (EdgeHostNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeHostName)(nil)).Elem()
}

func (o EdgeHostNameOutput) ToEdgeHostNameOutput() EdgeHostNameOutput {
	return o
}

func (o EdgeHostNameOutput) ToEdgeHostNameOutputWithContext(ctx context.Context) EdgeHostNameOutput {
	return o
}

// Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .
func (o EdgeHostNameOutput) Certificate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.IntPtrOutput { return v.Certificate }).(pulumi.IntPtrOutput)
}

// Replaced by `contractId`. Maintained for legacy purposes.
//
// Deprecated: The setting "contract" has been deprecated.
func (o EdgeHostNameOutput) Contract() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.Contract }).(pulumi.StringOutput)
}

// A contract's unique ID, including the `ctr_` prefix.
func (o EdgeHostNameOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.ContractId }).(pulumi.StringOutput)
}

// One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.
func (o EdgeHostNameOutput) EdgeHostname() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.EdgeHostname }).(pulumi.StringOutput)
}

// Replaced by `groupId`. Maintained for legacy purposes.
//
// Deprecated: The setting "group" has been deprecated.
func (o EdgeHostNameOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.Group }).(pulumi.StringOutput)
}

// A group's unique ID, including the `grp_` prefix.
func (o EdgeHostNameOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6.
func (o EdgeHostNameOutput) IpBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.IpBehavior }).(pulumi.StringOutput)
}

// Replaced by `productId`. Maintained for legacy purposes.
//
// Deprecated: The setting "product" has been deprecated.
func (o EdgeHostNameOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.Product }).(pulumi.StringOutput)
}

func (o EdgeHostNameOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

// Email address that should receive updates on the IP behavior update request. Required for update operation.
func (o EdgeHostNameOutput) StatusUpdateEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringArrayOutput { return v.StatusUpdateEmails }).(pulumi.StringArrayOutput)
}

// A JSON encoded list of use cases.
func (o EdgeHostNameOutput) UseCases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringPtrOutput { return v.UseCases }).(pulumi.StringPtrOutput)
}

type EdgeHostNameArrayOutput struct{ *pulumi.OutputState }

func (EdgeHostNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeHostName)(nil)).Elem()
}

func (o EdgeHostNameArrayOutput) ToEdgeHostNameArrayOutput() EdgeHostNameArrayOutput {
	return o
}

func (o EdgeHostNameArrayOutput) ToEdgeHostNameArrayOutputWithContext(ctx context.Context) EdgeHostNameArrayOutput {
	return o
}

func (o EdgeHostNameArrayOutput) Index(i pulumi.IntInput) EdgeHostNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeHostName {
		return vs[0].([]*EdgeHostName)[vs[1].(int)]
	}).(EdgeHostNameOutput)
}

type EdgeHostNameMapOutput struct{ *pulumi.OutputState }

func (EdgeHostNameMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeHostName)(nil)).Elem()
}

func (o EdgeHostNameMapOutput) ToEdgeHostNameMapOutput() EdgeHostNameMapOutput {
	return o
}

func (o EdgeHostNameMapOutput) ToEdgeHostNameMapOutputWithContext(ctx context.Context) EdgeHostNameMapOutput {
	return o
}

func (o EdgeHostNameMapOutput) MapIndex(k pulumi.StringInput) EdgeHostNameOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeHostName {
		return vs[0].(map[string]*EdgeHostName)[vs[1].(string)]
	}).(EdgeHostNameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeHostNameInput)(nil)).Elem(), &EdgeHostName{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeHostNameArrayInput)(nil)).Elem(), EdgeHostNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeHostNameMapInput)(nil)).Elem(), EdgeHostNameMap{})
	pulumi.RegisterOutputType(EdgeHostNameOutput{})
	pulumi.RegisterOutputType(EdgeHostNameArrayOutput{})
	pulumi.RegisterOutputType(EdgeHostNameMapOutput{})
}
