// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package properties

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type PropertyActivationComplianceRecord struct {
	NoncomplianceReasonEmergency           *PropertyActivationComplianceRecordNoncomplianceReasonEmergency           `pulumi:"noncomplianceReasonEmergency"`
	NoncomplianceReasonNoProductionTraffic *PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic `pulumi:"noncomplianceReasonNoProductionTraffic"`
	NoncomplianceReasonNone                *PropertyActivationComplianceRecordNoncomplianceReasonNone                `pulumi:"noncomplianceReasonNone"`
	NoncomplianceReasonOther               *PropertyActivationComplianceRecordNoncomplianceReasonOther               `pulumi:"noncomplianceReasonOther"`
}

// PropertyActivationComplianceRecordInput is an input type that accepts PropertyActivationComplianceRecordArgs and PropertyActivationComplianceRecordOutput values.
// You can construct a concrete instance of `PropertyActivationComplianceRecordInput` via:
//
//	PropertyActivationComplianceRecordArgs{...}
type PropertyActivationComplianceRecordInput interface {
	pulumi.Input

	ToPropertyActivationComplianceRecordOutput() PropertyActivationComplianceRecordOutput
	ToPropertyActivationComplianceRecordOutputWithContext(context.Context) PropertyActivationComplianceRecordOutput
}

type PropertyActivationComplianceRecordArgs struct {
	NoncomplianceReasonEmergency           PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrInput           `pulumi:"noncomplianceReasonEmergency"`
	NoncomplianceReasonNoProductionTraffic PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrInput `pulumi:"noncomplianceReasonNoProductionTraffic"`
	NoncomplianceReasonNone                PropertyActivationComplianceRecordNoncomplianceReasonNonePtrInput                `pulumi:"noncomplianceReasonNone"`
	NoncomplianceReasonOther               PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrInput               `pulumi:"noncomplianceReasonOther"`
}

func (PropertyActivationComplianceRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationComplianceRecord)(nil)).Elem()
}

func (i PropertyActivationComplianceRecordArgs) ToPropertyActivationComplianceRecordOutput() PropertyActivationComplianceRecordOutput {
	return i.ToPropertyActivationComplianceRecordOutputWithContext(context.Background())
}

func (i PropertyActivationComplianceRecordArgs) ToPropertyActivationComplianceRecordOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordOutput)
}

func (i PropertyActivationComplianceRecordArgs) ToPropertyActivationComplianceRecordPtrOutput() PropertyActivationComplianceRecordPtrOutput {
	return i.ToPropertyActivationComplianceRecordPtrOutputWithContext(context.Background())
}

func (i PropertyActivationComplianceRecordArgs) ToPropertyActivationComplianceRecordPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordOutput).ToPropertyActivationComplianceRecordPtrOutputWithContext(ctx)
}

// PropertyActivationComplianceRecordPtrInput is an input type that accepts PropertyActivationComplianceRecordArgs, PropertyActivationComplianceRecordPtr and PropertyActivationComplianceRecordPtrOutput values.
// You can construct a concrete instance of `PropertyActivationComplianceRecordPtrInput` via:
//
//	        PropertyActivationComplianceRecordArgs{...}
//
//	or:
//
//	        nil
type PropertyActivationComplianceRecordPtrInput interface {
	pulumi.Input

	ToPropertyActivationComplianceRecordPtrOutput() PropertyActivationComplianceRecordPtrOutput
	ToPropertyActivationComplianceRecordPtrOutputWithContext(context.Context) PropertyActivationComplianceRecordPtrOutput
}

type propertyActivationComplianceRecordPtrType PropertyActivationComplianceRecordArgs

func PropertyActivationComplianceRecordPtr(v *PropertyActivationComplianceRecordArgs) PropertyActivationComplianceRecordPtrInput {
	return (*propertyActivationComplianceRecordPtrType)(v)
}

func (*propertyActivationComplianceRecordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivationComplianceRecord)(nil)).Elem()
}

func (i *propertyActivationComplianceRecordPtrType) ToPropertyActivationComplianceRecordPtrOutput() PropertyActivationComplianceRecordPtrOutput {
	return i.ToPropertyActivationComplianceRecordPtrOutputWithContext(context.Background())
}

func (i *propertyActivationComplianceRecordPtrType) ToPropertyActivationComplianceRecordPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordPtrOutput)
}

type PropertyActivationComplianceRecordOutput struct{ *pulumi.OutputState }

func (PropertyActivationComplianceRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationComplianceRecord)(nil)).Elem()
}

func (o PropertyActivationComplianceRecordOutput) ToPropertyActivationComplianceRecordOutput() PropertyActivationComplianceRecordOutput {
	return o
}

func (o PropertyActivationComplianceRecordOutput) ToPropertyActivationComplianceRecordOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordOutput {
	return o
}

func (o PropertyActivationComplianceRecordOutput) ToPropertyActivationComplianceRecordPtrOutput() PropertyActivationComplianceRecordPtrOutput {
	return o.ToPropertyActivationComplianceRecordPtrOutputWithContext(context.Background())
}

func (o PropertyActivationComplianceRecordOutput) ToPropertyActivationComplianceRecordPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PropertyActivationComplianceRecord) *PropertyActivationComplianceRecord {
		return &v
	}).(PropertyActivationComplianceRecordPtrOutput)
}

func (o PropertyActivationComplianceRecordOutput) NoncomplianceReasonEmergency() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecord) *PropertyActivationComplianceRecordNoncomplianceReasonEmergency {
		return v.NoncomplianceReasonEmergency
	}).(PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput)
}

func (o PropertyActivationComplianceRecordOutput) NoncomplianceReasonNoProductionTraffic() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecord) *PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic {
		return v.NoncomplianceReasonNoProductionTraffic
	}).(PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput)
}

func (o PropertyActivationComplianceRecordOutput) NoncomplianceReasonNone() PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecord) *PropertyActivationComplianceRecordNoncomplianceReasonNone {
		return v.NoncomplianceReasonNone
	}).(PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput)
}

func (o PropertyActivationComplianceRecordOutput) NoncomplianceReasonOther() PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecord) *PropertyActivationComplianceRecordNoncomplianceReasonOther {
		return v.NoncomplianceReasonOther
	}).(PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput)
}

type PropertyActivationComplianceRecordPtrOutput struct{ *pulumi.OutputState }

func (PropertyActivationComplianceRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivationComplianceRecord)(nil)).Elem()
}

func (o PropertyActivationComplianceRecordPtrOutput) ToPropertyActivationComplianceRecordPtrOutput() PropertyActivationComplianceRecordPtrOutput {
	return o
}

func (o PropertyActivationComplianceRecordPtrOutput) ToPropertyActivationComplianceRecordPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordPtrOutput {
	return o
}

func (o PropertyActivationComplianceRecordPtrOutput) Elem() PropertyActivationComplianceRecordOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecord) PropertyActivationComplianceRecord {
		if v != nil {
			return *v
		}
		var ret PropertyActivationComplianceRecord
		return ret
	}).(PropertyActivationComplianceRecordOutput)
}

func (o PropertyActivationComplianceRecordPtrOutput) NoncomplianceReasonEmergency() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecord) *PropertyActivationComplianceRecordNoncomplianceReasonEmergency {
		if v == nil {
			return nil
		}
		return v.NoncomplianceReasonEmergency
	}).(PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput)
}

func (o PropertyActivationComplianceRecordPtrOutput) NoncomplianceReasonNoProductionTraffic() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecord) *PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic {
		if v == nil {
			return nil
		}
		return v.NoncomplianceReasonNoProductionTraffic
	}).(PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput)
}

func (o PropertyActivationComplianceRecordPtrOutput) NoncomplianceReasonNone() PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecord) *PropertyActivationComplianceRecordNoncomplianceReasonNone {
		if v == nil {
			return nil
		}
		return v.NoncomplianceReasonNone
	}).(PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput)
}

func (o PropertyActivationComplianceRecordPtrOutput) NoncomplianceReasonOther() PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecord) *PropertyActivationComplianceRecordNoncomplianceReasonOther {
		if v == nil {
			return nil
		}
		return v.NoncomplianceReasonOther
	}).(PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonEmergency struct {
	TicketId *string `pulumi:"ticketId"`
}

// PropertyActivationComplianceRecordNoncomplianceReasonEmergencyInput is an input type that accepts PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs and PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput values.
// You can construct a concrete instance of `PropertyActivationComplianceRecordNoncomplianceReasonEmergencyInput` via:
//
//	PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs{...}
type PropertyActivationComplianceRecordNoncomplianceReasonEmergencyInput interface {
	pulumi.Input

	ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput
	ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutputWithContext(context.Context) PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput
}

type PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs struct {
	TicketId pulumi.StringPtrInput `pulumi:"ticketId"`
}

func (PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonEmergency)(nil)).Elem()
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutputWithContext(context.Background())
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput)
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutputWithContext(context.Background())
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput).ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutputWithContext(ctx)
}

// PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrInput is an input type that accepts PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs, PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtr and PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput values.
// You can construct a concrete instance of `PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrInput` via:
//
//	        PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs{...}
//
//	or:
//
//	        nil
type PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrInput interface {
	pulumi.Input

	ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput
	ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutputWithContext(context.Context) PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput
}

type propertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrType PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs

func PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtr(v *PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs) PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrInput {
	return (*propertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrType)(v)
}

func (*propertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivationComplianceRecordNoncomplianceReasonEmergency)(nil)).Elem()
}

func (i *propertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrType) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutputWithContext(context.Background())
}

func (i *propertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrType) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput struct{ *pulumi.OutputState }

func (PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonEmergency)(nil)).Elem()
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput {
	return o.ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutputWithContext(context.Background())
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PropertyActivationComplianceRecordNoncomplianceReasonEmergency) *PropertyActivationComplianceRecordNoncomplianceReasonEmergency {
		return &v
	}).(PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput) TicketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecordNoncomplianceReasonEmergency) *string { return v.TicketId }).(pulumi.StringPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput struct{ *pulumi.OutputState }

func (PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivationComplianceRecordNoncomplianceReasonEmergency)(nil)).Elem()
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput) Elem() PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonEmergency) PropertyActivationComplianceRecordNoncomplianceReasonEmergency {
		if v != nil {
			return *v
		}
		var ret PropertyActivationComplianceRecordNoncomplianceReasonEmergency
		return ret
	}).(PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput) TicketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonEmergency) *string {
		if v == nil {
			return nil
		}
		return v.TicketId
	}).(pulumi.StringPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic struct {
	TicketId *string `pulumi:"ticketId"`
}

// PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficInput is an input type that accepts PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs and PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput values.
// You can construct a concrete instance of `PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficInput` via:
//
//	PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs{...}
type PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficInput interface {
	pulumi.Input

	ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput
	ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutputWithContext(context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput
}

type PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs struct {
	TicketId pulumi.StringPtrInput `pulumi:"ticketId"`
}

func (PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic)(nil)).Elem()
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutputWithContext(context.Background())
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput)
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutputWithContext(context.Background())
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput).ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutputWithContext(ctx)
}

// PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrInput is an input type that accepts PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs, PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtr and PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput values.
// You can construct a concrete instance of `PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrInput` via:
//
//	        PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs{...}
//
//	or:
//
//	        nil
type PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrInput interface {
	pulumi.Input

	ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput
	ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutputWithContext(context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput
}

type propertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrType PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs

func PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtr(v *PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs) PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrInput {
	return (*propertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrType)(v)
}

func (*propertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic)(nil)).Elem()
}

func (i *propertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrType) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutputWithContext(context.Background())
}

func (i *propertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrType) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput struct{ *pulumi.OutputState }

func (PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic)(nil)).Elem()
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput {
	return o.ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutputWithContext(context.Background())
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic) *PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic {
		return &v
	}).(PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput) TicketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic) *string {
		return v.TicketId
	}).(pulumi.StringPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput struct{ *pulumi.OutputState }

func (PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic)(nil)).Elem()
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput) Elem() PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic) PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic {
		if v != nil {
			return *v
		}
		var ret PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic
		return ret
	}).(PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput) TicketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic) *string {
		if v == nil {
			return nil
		}
		return v.TicketId
	}).(pulumi.StringPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonNone struct {
	CustomerEmail  *string `pulumi:"customerEmail"`
	PeerReviewedBy *string `pulumi:"peerReviewedBy"`
	TicketId       *string `pulumi:"ticketId"`
	UnitTested     *bool   `pulumi:"unitTested"`
}

// PropertyActivationComplianceRecordNoncomplianceReasonNoneInput is an input type that accepts PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs and PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput values.
// You can construct a concrete instance of `PropertyActivationComplianceRecordNoncomplianceReasonNoneInput` via:
//
//	PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs{...}
type PropertyActivationComplianceRecordNoncomplianceReasonNoneInput interface {
	pulumi.Input

	ToPropertyActivationComplianceRecordNoncomplianceReasonNoneOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput
	ToPropertyActivationComplianceRecordNoncomplianceReasonNoneOutputWithContext(context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput
}

type PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs struct {
	CustomerEmail  pulumi.StringPtrInput `pulumi:"customerEmail"`
	PeerReviewedBy pulumi.StringPtrInput `pulumi:"peerReviewedBy"`
	TicketId       pulumi.StringPtrInput `pulumi:"ticketId"`
	UnitTested     pulumi.BoolPtrInput   `pulumi:"unitTested"`
}

func (PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonNone)(nil)).Elem()
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonNoneOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonNoneOutputWithContext(context.Background())
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonNoneOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput)
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutputWithContext(context.Background())
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput).ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutputWithContext(ctx)
}

// PropertyActivationComplianceRecordNoncomplianceReasonNonePtrInput is an input type that accepts PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs, PropertyActivationComplianceRecordNoncomplianceReasonNonePtr and PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput values.
// You can construct a concrete instance of `PropertyActivationComplianceRecordNoncomplianceReasonNonePtrInput` via:
//
//	        PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs{...}
//
//	or:
//
//	        nil
type PropertyActivationComplianceRecordNoncomplianceReasonNonePtrInput interface {
	pulumi.Input

	ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput
	ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutputWithContext(context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput
}

type propertyActivationComplianceRecordNoncomplianceReasonNonePtrType PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs

func PropertyActivationComplianceRecordNoncomplianceReasonNonePtr(v *PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs) PropertyActivationComplianceRecordNoncomplianceReasonNonePtrInput {
	return (*propertyActivationComplianceRecordNoncomplianceReasonNonePtrType)(v)
}

func (*propertyActivationComplianceRecordNoncomplianceReasonNonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivationComplianceRecordNoncomplianceReasonNone)(nil)).Elem()
}

func (i *propertyActivationComplianceRecordNoncomplianceReasonNonePtrType) ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutputWithContext(context.Background())
}

func (i *propertyActivationComplianceRecordNoncomplianceReasonNonePtrType) ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput struct{ *pulumi.OutputState }

func (PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonNone)(nil)).Elem()
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNoneOutput() PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNoneOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput {
	return o.ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutputWithContext(context.Background())
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PropertyActivationComplianceRecordNoncomplianceReasonNone) *PropertyActivationComplianceRecordNoncomplianceReasonNone {
		return &v
	}).(PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput) CustomerEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecordNoncomplianceReasonNone) *string { return v.CustomerEmail }).(pulumi.StringPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput) PeerReviewedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecordNoncomplianceReasonNone) *string { return v.PeerReviewedBy }).(pulumi.StringPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput) TicketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecordNoncomplianceReasonNone) *string { return v.TicketId }).(pulumi.StringPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput) UnitTested() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecordNoncomplianceReasonNone) *bool { return v.UnitTested }).(pulumi.BoolPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput struct{ *pulumi.OutputState }

func (PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivationComplianceRecordNoncomplianceReasonNone)(nil)).Elem()
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput) Elem() PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonNone) PropertyActivationComplianceRecordNoncomplianceReasonNone {
		if v != nil {
			return *v
		}
		var ret PropertyActivationComplianceRecordNoncomplianceReasonNone
		return ret
	}).(PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput) CustomerEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonNone) *string {
		if v == nil {
			return nil
		}
		return v.CustomerEmail
	}).(pulumi.StringPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput) PeerReviewedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonNone) *string {
		if v == nil {
			return nil
		}
		return v.PeerReviewedBy
	}).(pulumi.StringPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput) TicketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonNone) *string {
		if v == nil {
			return nil
		}
		return v.TicketId
	}).(pulumi.StringPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput) UnitTested() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonNone) *bool {
		if v == nil {
			return nil
		}
		return v.UnitTested
	}).(pulumi.BoolPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonOther struct {
	OtherNoncomplianceReason *string `pulumi:"otherNoncomplianceReason"`
	TicketId                 *string `pulumi:"ticketId"`
}

// PropertyActivationComplianceRecordNoncomplianceReasonOtherInput is an input type that accepts PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs and PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput values.
// You can construct a concrete instance of `PropertyActivationComplianceRecordNoncomplianceReasonOtherInput` via:
//
//	PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs{...}
type PropertyActivationComplianceRecordNoncomplianceReasonOtherInput interface {
	pulumi.Input

	ToPropertyActivationComplianceRecordNoncomplianceReasonOtherOutput() PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput
	ToPropertyActivationComplianceRecordNoncomplianceReasonOtherOutputWithContext(context.Context) PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput
}

type PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs struct {
	OtherNoncomplianceReason pulumi.StringPtrInput `pulumi:"otherNoncomplianceReason"`
	TicketId                 pulumi.StringPtrInput `pulumi:"ticketId"`
}

func (PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonOther)(nil)).Elem()
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherOutput() PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonOtherOutputWithContext(context.Background())
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput)
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutputWithContext(context.Background())
}

func (i PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput).ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutputWithContext(ctx)
}

// PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrInput is an input type that accepts PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs, PropertyActivationComplianceRecordNoncomplianceReasonOtherPtr and PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput values.
// You can construct a concrete instance of `PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrInput` via:
//
//	        PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs{...}
//
//	or:
//
//	        nil
type PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrInput interface {
	pulumi.Input

	ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput
	ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutputWithContext(context.Context) PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput
}

type propertyActivationComplianceRecordNoncomplianceReasonOtherPtrType PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs

func PropertyActivationComplianceRecordNoncomplianceReasonOtherPtr(v *PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs) PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrInput {
	return (*propertyActivationComplianceRecordNoncomplianceReasonOtherPtrType)(v)
}

func (*propertyActivationComplianceRecordNoncomplianceReasonOtherPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivationComplianceRecordNoncomplianceReasonOther)(nil)).Elem()
}

func (i *propertyActivationComplianceRecordNoncomplianceReasonOtherPtrType) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput {
	return i.ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutputWithContext(context.Background())
}

func (i *propertyActivationComplianceRecordNoncomplianceReasonOtherPtrType) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput struct{ *pulumi.OutputState }

func (PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonOther)(nil)).Elem()
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherOutput() PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput {
	return o.ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutputWithContext(context.Background())
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PropertyActivationComplianceRecordNoncomplianceReasonOther) *PropertyActivationComplianceRecordNoncomplianceReasonOther {
		return &v
	}).(PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput) OtherNoncomplianceReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecordNoncomplianceReasonOther) *string {
		return v.OtherNoncomplianceReason
	}).(pulumi.StringPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput) TicketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationComplianceRecordNoncomplianceReasonOther) *string { return v.TicketId }).(pulumi.StringPtrOutput)
}

type PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput struct{ *pulumi.OutputState }

func (PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropertyActivationComplianceRecordNoncomplianceReasonOther)(nil)).Elem()
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput() PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput) ToPropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutputWithContext(ctx context.Context) PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput {
	return o
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput) Elem() PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonOther) PropertyActivationComplianceRecordNoncomplianceReasonOther {
		if v != nil {
			return *v
		}
		var ret PropertyActivationComplianceRecordNoncomplianceReasonOther
		return ret
	}).(PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput) OtherNoncomplianceReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonOther) *string {
		if v == nil {
			return nil
		}
		return v.OtherNoncomplianceReason
	}).(pulumi.StringPtrOutput)
}

func (o PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput) TicketId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PropertyActivationComplianceRecordNoncomplianceReasonOther) *string {
		if v == nil {
			return nil
		}
		return v.TicketId
	}).(pulumi.StringPtrOutput)
}

type PropertyActivationRuleError struct {
	BehaviorName  *string `pulumi:"behaviorName"`
	Detail        *string `pulumi:"detail"`
	ErrorLocation *string `pulumi:"errorLocation"`
	Instance      *string `pulumi:"instance"`
	StatusCode    *int    `pulumi:"statusCode"`
	Title         *string `pulumi:"title"`
	Type          *string `pulumi:"type"`
}

// PropertyActivationRuleErrorInput is an input type that accepts PropertyActivationRuleErrorArgs and PropertyActivationRuleErrorOutput values.
// You can construct a concrete instance of `PropertyActivationRuleErrorInput` via:
//
//	PropertyActivationRuleErrorArgs{...}
type PropertyActivationRuleErrorInput interface {
	pulumi.Input

	ToPropertyActivationRuleErrorOutput() PropertyActivationRuleErrorOutput
	ToPropertyActivationRuleErrorOutputWithContext(context.Context) PropertyActivationRuleErrorOutput
}

type PropertyActivationRuleErrorArgs struct {
	BehaviorName  pulumi.StringPtrInput `pulumi:"behaviorName"`
	Detail        pulumi.StringPtrInput `pulumi:"detail"`
	ErrorLocation pulumi.StringPtrInput `pulumi:"errorLocation"`
	Instance      pulumi.StringPtrInput `pulumi:"instance"`
	StatusCode    pulumi.IntPtrInput    `pulumi:"statusCode"`
	Title         pulumi.StringPtrInput `pulumi:"title"`
	Type          pulumi.StringPtrInput `pulumi:"type"`
}

func (PropertyActivationRuleErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationRuleError)(nil)).Elem()
}

func (i PropertyActivationRuleErrorArgs) ToPropertyActivationRuleErrorOutput() PropertyActivationRuleErrorOutput {
	return i.ToPropertyActivationRuleErrorOutputWithContext(context.Background())
}

func (i PropertyActivationRuleErrorArgs) ToPropertyActivationRuleErrorOutputWithContext(ctx context.Context) PropertyActivationRuleErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationRuleErrorOutput)
}

// PropertyActivationRuleErrorArrayInput is an input type that accepts PropertyActivationRuleErrorArray and PropertyActivationRuleErrorArrayOutput values.
// You can construct a concrete instance of `PropertyActivationRuleErrorArrayInput` via:
//
//	PropertyActivationRuleErrorArray{ PropertyActivationRuleErrorArgs{...} }
type PropertyActivationRuleErrorArrayInput interface {
	pulumi.Input

	ToPropertyActivationRuleErrorArrayOutput() PropertyActivationRuleErrorArrayOutput
	ToPropertyActivationRuleErrorArrayOutputWithContext(context.Context) PropertyActivationRuleErrorArrayOutput
}

type PropertyActivationRuleErrorArray []PropertyActivationRuleErrorInput

func (PropertyActivationRuleErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyActivationRuleError)(nil)).Elem()
}

func (i PropertyActivationRuleErrorArray) ToPropertyActivationRuleErrorArrayOutput() PropertyActivationRuleErrorArrayOutput {
	return i.ToPropertyActivationRuleErrorArrayOutputWithContext(context.Background())
}

func (i PropertyActivationRuleErrorArray) ToPropertyActivationRuleErrorArrayOutputWithContext(ctx context.Context) PropertyActivationRuleErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationRuleErrorArrayOutput)
}

type PropertyActivationRuleErrorOutput struct{ *pulumi.OutputState }

func (PropertyActivationRuleErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationRuleError)(nil)).Elem()
}

func (o PropertyActivationRuleErrorOutput) ToPropertyActivationRuleErrorOutput() PropertyActivationRuleErrorOutput {
	return o
}

func (o PropertyActivationRuleErrorOutput) ToPropertyActivationRuleErrorOutputWithContext(ctx context.Context) PropertyActivationRuleErrorOutput {
	return o
}

func (o PropertyActivationRuleErrorOutput) BehaviorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationRuleError) *string { return v.BehaviorName }).(pulumi.StringPtrOutput)
}

func (o PropertyActivationRuleErrorOutput) Detail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationRuleError) *string { return v.Detail }).(pulumi.StringPtrOutput)
}

func (o PropertyActivationRuleErrorOutput) ErrorLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationRuleError) *string { return v.ErrorLocation }).(pulumi.StringPtrOutput)
}

func (o PropertyActivationRuleErrorOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationRuleError) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

func (o PropertyActivationRuleErrorOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PropertyActivationRuleError) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

func (o PropertyActivationRuleErrorOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationRuleError) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o PropertyActivationRuleErrorOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyActivationRuleError) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PropertyActivationRuleErrorArrayOutput struct{ *pulumi.OutputState }

func (PropertyActivationRuleErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyActivationRuleError)(nil)).Elem()
}

func (o PropertyActivationRuleErrorArrayOutput) ToPropertyActivationRuleErrorArrayOutput() PropertyActivationRuleErrorArrayOutput {
	return o
}

func (o PropertyActivationRuleErrorArrayOutput) ToPropertyActivationRuleErrorArrayOutputWithContext(ctx context.Context) PropertyActivationRuleErrorArrayOutput {
	return o
}

func (o PropertyActivationRuleErrorArrayOutput) Index(i pulumi.IntInput) PropertyActivationRuleErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyActivationRuleError {
		return vs[0].([]PropertyActivationRuleError)[vs[1].(int)]
	}).(PropertyActivationRuleErrorOutput)
}

type PropertyHostname struct {
	CertProvisioningType string                       `pulumi:"certProvisioningType"`
	CertStatuses         []PropertyHostnameCertStatus `pulumi:"certStatuses"`
	CnameFrom            string                       `pulumi:"cnameFrom"`
	CnameTo              string                       `pulumi:"cnameTo"`
	CnameType            *string                      `pulumi:"cnameType"`
	EdgeHostnameId       *string                      `pulumi:"edgeHostnameId"`
}

// PropertyHostnameInput is an input type that accepts PropertyHostnameArgs and PropertyHostnameOutput values.
// You can construct a concrete instance of `PropertyHostnameInput` via:
//
//	PropertyHostnameArgs{...}
type PropertyHostnameInput interface {
	pulumi.Input

	ToPropertyHostnameOutput() PropertyHostnameOutput
	ToPropertyHostnameOutputWithContext(context.Context) PropertyHostnameOutput
}

type PropertyHostnameArgs struct {
	CertProvisioningType pulumi.StringInput                   `pulumi:"certProvisioningType"`
	CertStatuses         PropertyHostnameCertStatusArrayInput `pulumi:"certStatuses"`
	CnameFrom            pulumi.StringInput                   `pulumi:"cnameFrom"`
	CnameTo              pulumi.StringInput                   `pulumi:"cnameTo"`
	CnameType            pulumi.StringPtrInput                `pulumi:"cnameType"`
	EdgeHostnameId       pulumi.StringPtrInput                `pulumi:"edgeHostnameId"`
}

func (PropertyHostnameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyHostname)(nil)).Elem()
}

func (i PropertyHostnameArgs) ToPropertyHostnameOutput() PropertyHostnameOutput {
	return i.ToPropertyHostnameOutputWithContext(context.Background())
}

func (i PropertyHostnameArgs) ToPropertyHostnameOutputWithContext(ctx context.Context) PropertyHostnameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyHostnameOutput)
}

// PropertyHostnameArrayInput is an input type that accepts PropertyHostnameArray and PropertyHostnameArrayOutput values.
// You can construct a concrete instance of `PropertyHostnameArrayInput` via:
//
//	PropertyHostnameArray{ PropertyHostnameArgs{...} }
type PropertyHostnameArrayInput interface {
	pulumi.Input

	ToPropertyHostnameArrayOutput() PropertyHostnameArrayOutput
	ToPropertyHostnameArrayOutputWithContext(context.Context) PropertyHostnameArrayOutput
}

type PropertyHostnameArray []PropertyHostnameInput

func (PropertyHostnameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyHostname)(nil)).Elem()
}

func (i PropertyHostnameArray) ToPropertyHostnameArrayOutput() PropertyHostnameArrayOutput {
	return i.ToPropertyHostnameArrayOutputWithContext(context.Background())
}

func (i PropertyHostnameArray) ToPropertyHostnameArrayOutputWithContext(ctx context.Context) PropertyHostnameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyHostnameArrayOutput)
}

type PropertyHostnameOutput struct{ *pulumi.OutputState }

func (PropertyHostnameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyHostname)(nil)).Elem()
}

func (o PropertyHostnameOutput) ToPropertyHostnameOutput() PropertyHostnameOutput {
	return o
}

func (o PropertyHostnameOutput) ToPropertyHostnameOutputWithContext(ctx context.Context) PropertyHostnameOutput {
	return o
}

func (o PropertyHostnameOutput) CertProvisioningType() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyHostname) string { return v.CertProvisioningType }).(pulumi.StringOutput)
}

func (o PropertyHostnameOutput) CertStatuses() PropertyHostnameCertStatusArrayOutput {
	return o.ApplyT(func(v PropertyHostname) []PropertyHostnameCertStatus { return v.CertStatuses }).(PropertyHostnameCertStatusArrayOutput)
}

func (o PropertyHostnameOutput) CnameFrom() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyHostname) string { return v.CnameFrom }).(pulumi.StringOutput)
}

func (o PropertyHostnameOutput) CnameTo() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyHostname) string { return v.CnameTo }).(pulumi.StringOutput)
}

func (o PropertyHostnameOutput) CnameType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyHostname) *string { return v.CnameType }).(pulumi.StringPtrOutput)
}

func (o PropertyHostnameOutput) EdgeHostnameId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyHostname) *string { return v.EdgeHostnameId }).(pulumi.StringPtrOutput)
}

type PropertyHostnameArrayOutput struct{ *pulumi.OutputState }

func (PropertyHostnameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyHostname)(nil)).Elem()
}

func (o PropertyHostnameArrayOutput) ToPropertyHostnameArrayOutput() PropertyHostnameArrayOutput {
	return o
}

func (o PropertyHostnameArrayOutput) ToPropertyHostnameArrayOutputWithContext(ctx context.Context) PropertyHostnameArrayOutput {
	return o
}

func (o PropertyHostnameArrayOutput) Index(i pulumi.IntInput) PropertyHostnameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyHostname {
		return vs[0].([]PropertyHostname)[vs[1].(int)]
	}).(PropertyHostnameOutput)
}

type PropertyHostnameCertStatus struct {
	Hostname         *string `pulumi:"hostname"`
	ProductionStatus *string `pulumi:"productionStatus"`
	StagingStatus    *string `pulumi:"stagingStatus"`
	Target           *string `pulumi:"target"`
}

// PropertyHostnameCertStatusInput is an input type that accepts PropertyHostnameCertStatusArgs and PropertyHostnameCertStatusOutput values.
// You can construct a concrete instance of `PropertyHostnameCertStatusInput` via:
//
//	PropertyHostnameCertStatusArgs{...}
type PropertyHostnameCertStatusInput interface {
	pulumi.Input

	ToPropertyHostnameCertStatusOutput() PropertyHostnameCertStatusOutput
	ToPropertyHostnameCertStatusOutputWithContext(context.Context) PropertyHostnameCertStatusOutput
}

type PropertyHostnameCertStatusArgs struct {
	Hostname         pulumi.StringPtrInput `pulumi:"hostname"`
	ProductionStatus pulumi.StringPtrInput `pulumi:"productionStatus"`
	StagingStatus    pulumi.StringPtrInput `pulumi:"stagingStatus"`
	Target           pulumi.StringPtrInput `pulumi:"target"`
}

func (PropertyHostnameCertStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyHostnameCertStatus)(nil)).Elem()
}

func (i PropertyHostnameCertStatusArgs) ToPropertyHostnameCertStatusOutput() PropertyHostnameCertStatusOutput {
	return i.ToPropertyHostnameCertStatusOutputWithContext(context.Background())
}

func (i PropertyHostnameCertStatusArgs) ToPropertyHostnameCertStatusOutputWithContext(ctx context.Context) PropertyHostnameCertStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyHostnameCertStatusOutput)
}

// PropertyHostnameCertStatusArrayInput is an input type that accepts PropertyHostnameCertStatusArray and PropertyHostnameCertStatusArrayOutput values.
// You can construct a concrete instance of `PropertyHostnameCertStatusArrayInput` via:
//
//	PropertyHostnameCertStatusArray{ PropertyHostnameCertStatusArgs{...} }
type PropertyHostnameCertStatusArrayInput interface {
	pulumi.Input

	ToPropertyHostnameCertStatusArrayOutput() PropertyHostnameCertStatusArrayOutput
	ToPropertyHostnameCertStatusArrayOutputWithContext(context.Context) PropertyHostnameCertStatusArrayOutput
}

type PropertyHostnameCertStatusArray []PropertyHostnameCertStatusInput

func (PropertyHostnameCertStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyHostnameCertStatus)(nil)).Elem()
}

func (i PropertyHostnameCertStatusArray) ToPropertyHostnameCertStatusArrayOutput() PropertyHostnameCertStatusArrayOutput {
	return i.ToPropertyHostnameCertStatusArrayOutputWithContext(context.Background())
}

func (i PropertyHostnameCertStatusArray) ToPropertyHostnameCertStatusArrayOutputWithContext(ctx context.Context) PropertyHostnameCertStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyHostnameCertStatusArrayOutput)
}

type PropertyHostnameCertStatusOutput struct{ *pulumi.OutputState }

func (PropertyHostnameCertStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyHostnameCertStatus)(nil)).Elem()
}

func (o PropertyHostnameCertStatusOutput) ToPropertyHostnameCertStatusOutput() PropertyHostnameCertStatusOutput {
	return o
}

func (o PropertyHostnameCertStatusOutput) ToPropertyHostnameCertStatusOutputWithContext(ctx context.Context) PropertyHostnameCertStatusOutput {
	return o
}

func (o PropertyHostnameCertStatusOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyHostnameCertStatus) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o PropertyHostnameCertStatusOutput) ProductionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyHostnameCertStatus) *string { return v.ProductionStatus }).(pulumi.StringPtrOutput)
}

func (o PropertyHostnameCertStatusOutput) StagingStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyHostnameCertStatus) *string { return v.StagingStatus }).(pulumi.StringPtrOutput)
}

func (o PropertyHostnameCertStatusOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyHostnameCertStatus) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type PropertyHostnameCertStatusArrayOutput struct{ *pulumi.OutputState }

func (PropertyHostnameCertStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyHostnameCertStatus)(nil)).Elem()
}

func (o PropertyHostnameCertStatusArrayOutput) ToPropertyHostnameCertStatusArrayOutput() PropertyHostnameCertStatusArrayOutput {
	return o
}

func (o PropertyHostnameCertStatusArrayOutput) ToPropertyHostnameCertStatusArrayOutputWithContext(ctx context.Context) PropertyHostnameCertStatusArrayOutput {
	return o
}

func (o PropertyHostnameCertStatusArrayOutput) Index(i pulumi.IntInput) PropertyHostnameCertStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyHostnameCertStatus {
		return vs[0].([]PropertyHostnameCertStatus)[vs[1].(int)]
	}).(PropertyHostnameCertStatusOutput)
}

type PropertyRuleError struct {
	BehaviorName  *string `pulumi:"behaviorName"`
	Detail        *string `pulumi:"detail"`
	ErrorLocation *string `pulumi:"errorLocation"`
	Instance      *string `pulumi:"instance"`
	StatusCode    *int    `pulumi:"statusCode"`
	Title         *string `pulumi:"title"`
	Type          *string `pulumi:"type"`
}

// PropertyRuleErrorInput is an input type that accepts PropertyRuleErrorArgs and PropertyRuleErrorOutput values.
// You can construct a concrete instance of `PropertyRuleErrorInput` via:
//
//	PropertyRuleErrorArgs{...}
type PropertyRuleErrorInput interface {
	pulumi.Input

	ToPropertyRuleErrorOutput() PropertyRuleErrorOutput
	ToPropertyRuleErrorOutputWithContext(context.Context) PropertyRuleErrorOutput
}

type PropertyRuleErrorArgs struct {
	BehaviorName  pulumi.StringPtrInput `pulumi:"behaviorName"`
	Detail        pulumi.StringPtrInput `pulumi:"detail"`
	ErrorLocation pulumi.StringPtrInput `pulumi:"errorLocation"`
	Instance      pulumi.StringPtrInput `pulumi:"instance"`
	StatusCode    pulumi.IntPtrInput    `pulumi:"statusCode"`
	Title         pulumi.StringPtrInput `pulumi:"title"`
	Type          pulumi.StringPtrInput `pulumi:"type"`
}

func (PropertyRuleErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRuleError)(nil)).Elem()
}

func (i PropertyRuleErrorArgs) ToPropertyRuleErrorOutput() PropertyRuleErrorOutput {
	return i.ToPropertyRuleErrorOutputWithContext(context.Background())
}

func (i PropertyRuleErrorArgs) ToPropertyRuleErrorOutputWithContext(ctx context.Context) PropertyRuleErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRuleErrorOutput)
}

// PropertyRuleErrorArrayInput is an input type that accepts PropertyRuleErrorArray and PropertyRuleErrorArrayOutput values.
// You can construct a concrete instance of `PropertyRuleErrorArrayInput` via:
//
//	PropertyRuleErrorArray{ PropertyRuleErrorArgs{...} }
type PropertyRuleErrorArrayInput interface {
	pulumi.Input

	ToPropertyRuleErrorArrayOutput() PropertyRuleErrorArrayOutput
	ToPropertyRuleErrorArrayOutputWithContext(context.Context) PropertyRuleErrorArrayOutput
}

type PropertyRuleErrorArray []PropertyRuleErrorInput

func (PropertyRuleErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRuleError)(nil)).Elem()
}

func (i PropertyRuleErrorArray) ToPropertyRuleErrorArrayOutput() PropertyRuleErrorArrayOutput {
	return i.ToPropertyRuleErrorArrayOutputWithContext(context.Background())
}

func (i PropertyRuleErrorArray) ToPropertyRuleErrorArrayOutputWithContext(ctx context.Context) PropertyRuleErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRuleErrorArrayOutput)
}

type PropertyRuleErrorOutput struct{ *pulumi.OutputState }

func (PropertyRuleErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRuleError)(nil)).Elem()
}

func (o PropertyRuleErrorOutput) ToPropertyRuleErrorOutput() PropertyRuleErrorOutput {
	return o
}

func (o PropertyRuleErrorOutput) ToPropertyRuleErrorOutputWithContext(ctx context.Context) PropertyRuleErrorOutput {
	return o
}

func (o PropertyRuleErrorOutput) BehaviorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.BehaviorName }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleErrorOutput) Detail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.Detail }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleErrorOutput) ErrorLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.ErrorLocation }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleErrorOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleErrorOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

func (o PropertyRuleErrorOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleErrorOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PropertyRuleErrorArrayOutput struct{ *pulumi.OutputState }

func (PropertyRuleErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRuleError)(nil)).Elem()
}

func (o PropertyRuleErrorArrayOutput) ToPropertyRuleErrorArrayOutput() PropertyRuleErrorArrayOutput {
	return o
}

func (o PropertyRuleErrorArrayOutput) ToPropertyRuleErrorArrayOutputWithContext(ctx context.Context) PropertyRuleErrorArrayOutput {
	return o
}

func (o PropertyRuleErrorArrayOutput) Index(i pulumi.IntInput) PropertyRuleErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRuleError {
		return vs[0].([]PropertyRuleError)[vs[1].(int)]
	}).(PropertyRuleErrorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationComplianceRecordInput)(nil)).Elem(), PropertyActivationComplianceRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationComplianceRecordPtrInput)(nil)).Elem(), PropertyActivationComplianceRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonEmergencyInput)(nil)).Elem(), PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrInput)(nil)).Elem(), PropertyActivationComplianceRecordNoncomplianceReasonEmergencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficInput)(nil)).Elem(), PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrInput)(nil)).Elem(), PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonNoneInput)(nil)).Elem(), PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonNonePtrInput)(nil)).Elem(), PropertyActivationComplianceRecordNoncomplianceReasonNoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonOtherInput)(nil)).Elem(), PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrInput)(nil)).Elem(), PropertyActivationComplianceRecordNoncomplianceReasonOtherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationRuleErrorInput)(nil)).Elem(), PropertyActivationRuleErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyActivationRuleErrorArrayInput)(nil)).Elem(), PropertyActivationRuleErrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyHostnameInput)(nil)).Elem(), PropertyHostnameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyHostnameArrayInput)(nil)).Elem(), PropertyHostnameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyHostnameCertStatusInput)(nil)).Elem(), PropertyHostnameCertStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyHostnameCertStatusArrayInput)(nil)).Elem(), PropertyHostnameCertStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyRuleErrorInput)(nil)).Elem(), PropertyRuleErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PropertyRuleErrorArrayInput)(nil)).Elem(), PropertyRuleErrorArray{})
	pulumi.RegisterOutputType(PropertyActivationComplianceRecordOutput{})
	pulumi.RegisterOutputType(PropertyActivationComplianceRecordPtrOutput{})
	pulumi.RegisterOutputType(PropertyActivationComplianceRecordNoncomplianceReasonEmergencyOutput{})
	pulumi.RegisterOutputType(PropertyActivationComplianceRecordNoncomplianceReasonEmergencyPtrOutput{})
	pulumi.RegisterOutputType(PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficOutput{})
	pulumi.RegisterOutputType(PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTrafficPtrOutput{})
	pulumi.RegisterOutputType(PropertyActivationComplianceRecordNoncomplianceReasonNoneOutput{})
	pulumi.RegisterOutputType(PropertyActivationComplianceRecordNoncomplianceReasonNonePtrOutput{})
	pulumi.RegisterOutputType(PropertyActivationComplianceRecordNoncomplianceReasonOtherOutput{})
	pulumi.RegisterOutputType(PropertyActivationComplianceRecordNoncomplianceReasonOtherPtrOutput{})
	pulumi.RegisterOutputType(PropertyActivationRuleErrorOutput{})
	pulumi.RegisterOutputType(PropertyActivationRuleErrorArrayOutput{})
	pulumi.RegisterOutputType(PropertyHostnameOutput{})
	pulumi.RegisterOutputType(PropertyHostnameArrayOutput{})
	pulumi.RegisterOutputType(PropertyHostnameCertStatusOutput{})
	pulumi.RegisterOutputType(PropertyHostnameCertStatusArrayOutput{})
	pulumi.RegisterOutputType(PropertyRuleErrorOutput{})
	pulumi.RegisterOutputType(PropertyRuleErrorArrayOutput{})
}
