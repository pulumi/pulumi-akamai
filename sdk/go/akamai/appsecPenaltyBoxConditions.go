// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v10/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppsecPenaltyBoxConditions struct {
	pulumi.CustomResourceState

	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Describes the conditions and the operator to be applied for penalty box
	PenaltyBoxConditions pulumi.StringOutput `pulumi:"penaltyBoxConditions"`
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewAppsecPenaltyBoxConditions registers a new resource with the given unique name, arguments, and options.
func NewAppsecPenaltyBoxConditions(ctx *pulumi.Context,
	name string, args *AppsecPenaltyBoxConditionsArgs, opts ...pulumi.ResourceOption) (*AppsecPenaltyBoxConditions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.PenaltyBoxConditions == nil {
		return nil, errors.New("invalid value for required argument 'PenaltyBoxConditions'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppsecPenaltyBoxConditions
	err := ctx.RegisterResource("akamai:index/appsecPenaltyBoxConditions:AppsecPenaltyBoxConditions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppsecPenaltyBoxConditions gets an existing AppsecPenaltyBoxConditions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppsecPenaltyBoxConditions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppsecPenaltyBoxConditionsState, opts ...pulumi.ResourceOption) (*AppsecPenaltyBoxConditions, error) {
	var resource AppsecPenaltyBoxConditions
	err := ctx.ReadResource("akamai:index/appsecPenaltyBoxConditions:AppsecPenaltyBoxConditions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppsecPenaltyBoxConditions resources.
type appsecPenaltyBoxConditionsState struct {
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// Describes the conditions and the operator to be applied for penalty box
	PenaltyBoxConditions *string `pulumi:"penaltyBoxConditions"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppsecPenaltyBoxConditionsState struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// Describes the conditions and the operator to be applied for penalty box
	PenaltyBoxConditions pulumi.StringPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppsecPenaltyBoxConditionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecPenaltyBoxConditionsState)(nil)).Elem()
}

type appsecPenaltyBoxConditionsArgs struct {
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// Describes the conditions and the operator to be applied for penalty box
	PenaltyBoxConditions string `pulumi:"penaltyBoxConditions"`
	// Unique identifier of the security policy
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppsecPenaltyBoxConditions resource.
type AppsecPenaltyBoxConditionsArgs struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// Describes the conditions and the operator to be applied for penalty box
	PenaltyBoxConditions pulumi.StringInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringInput
}

func (AppsecPenaltyBoxConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecPenaltyBoxConditionsArgs)(nil)).Elem()
}

type AppsecPenaltyBoxConditionsInput interface {
	pulumi.Input

	ToAppsecPenaltyBoxConditionsOutput() AppsecPenaltyBoxConditionsOutput
	ToAppsecPenaltyBoxConditionsOutputWithContext(ctx context.Context) AppsecPenaltyBoxConditionsOutput
}

func (*AppsecPenaltyBoxConditions) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecPenaltyBoxConditions)(nil)).Elem()
}

func (i *AppsecPenaltyBoxConditions) ToAppsecPenaltyBoxConditionsOutput() AppsecPenaltyBoxConditionsOutput {
	return i.ToAppsecPenaltyBoxConditionsOutputWithContext(context.Background())
}

func (i *AppsecPenaltyBoxConditions) ToAppsecPenaltyBoxConditionsOutputWithContext(ctx context.Context) AppsecPenaltyBoxConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecPenaltyBoxConditionsOutput)
}

// AppsecPenaltyBoxConditionsArrayInput is an input type that accepts AppsecPenaltyBoxConditionsArray and AppsecPenaltyBoxConditionsArrayOutput values.
// You can construct a concrete instance of `AppsecPenaltyBoxConditionsArrayInput` via:
//
//	AppsecPenaltyBoxConditionsArray{ AppsecPenaltyBoxConditionsArgs{...} }
type AppsecPenaltyBoxConditionsArrayInput interface {
	pulumi.Input

	ToAppsecPenaltyBoxConditionsArrayOutput() AppsecPenaltyBoxConditionsArrayOutput
	ToAppsecPenaltyBoxConditionsArrayOutputWithContext(context.Context) AppsecPenaltyBoxConditionsArrayOutput
}

type AppsecPenaltyBoxConditionsArray []AppsecPenaltyBoxConditionsInput

func (AppsecPenaltyBoxConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecPenaltyBoxConditions)(nil)).Elem()
}

func (i AppsecPenaltyBoxConditionsArray) ToAppsecPenaltyBoxConditionsArrayOutput() AppsecPenaltyBoxConditionsArrayOutput {
	return i.ToAppsecPenaltyBoxConditionsArrayOutputWithContext(context.Background())
}

func (i AppsecPenaltyBoxConditionsArray) ToAppsecPenaltyBoxConditionsArrayOutputWithContext(ctx context.Context) AppsecPenaltyBoxConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecPenaltyBoxConditionsArrayOutput)
}

// AppsecPenaltyBoxConditionsMapInput is an input type that accepts AppsecPenaltyBoxConditionsMap and AppsecPenaltyBoxConditionsMapOutput values.
// You can construct a concrete instance of `AppsecPenaltyBoxConditionsMapInput` via:
//
//	AppsecPenaltyBoxConditionsMap{ "key": AppsecPenaltyBoxConditionsArgs{...} }
type AppsecPenaltyBoxConditionsMapInput interface {
	pulumi.Input

	ToAppsecPenaltyBoxConditionsMapOutput() AppsecPenaltyBoxConditionsMapOutput
	ToAppsecPenaltyBoxConditionsMapOutputWithContext(context.Context) AppsecPenaltyBoxConditionsMapOutput
}

type AppsecPenaltyBoxConditionsMap map[string]AppsecPenaltyBoxConditionsInput

func (AppsecPenaltyBoxConditionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecPenaltyBoxConditions)(nil)).Elem()
}

func (i AppsecPenaltyBoxConditionsMap) ToAppsecPenaltyBoxConditionsMapOutput() AppsecPenaltyBoxConditionsMapOutput {
	return i.ToAppsecPenaltyBoxConditionsMapOutputWithContext(context.Background())
}

func (i AppsecPenaltyBoxConditionsMap) ToAppsecPenaltyBoxConditionsMapOutputWithContext(ctx context.Context) AppsecPenaltyBoxConditionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecPenaltyBoxConditionsMapOutput)
}

type AppsecPenaltyBoxConditionsOutput struct{ *pulumi.OutputState }

func (AppsecPenaltyBoxConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecPenaltyBoxConditions)(nil)).Elem()
}

func (o AppsecPenaltyBoxConditionsOutput) ToAppsecPenaltyBoxConditionsOutput() AppsecPenaltyBoxConditionsOutput {
	return o
}

func (o AppsecPenaltyBoxConditionsOutput) ToAppsecPenaltyBoxConditionsOutputWithContext(ctx context.Context) AppsecPenaltyBoxConditionsOutput {
	return o
}

// Unique identifier of the security configuration
func (o AppsecPenaltyBoxConditionsOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppsecPenaltyBoxConditions) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Describes the conditions and the operator to be applied for penalty box
func (o AppsecPenaltyBoxConditionsOutput) PenaltyBoxConditions() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecPenaltyBoxConditions) pulumi.StringOutput { return v.PenaltyBoxConditions }).(pulumi.StringOutput)
}

// Unique identifier of the security policy
func (o AppsecPenaltyBoxConditionsOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecPenaltyBoxConditions) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type AppsecPenaltyBoxConditionsArrayOutput struct{ *pulumi.OutputState }

func (AppsecPenaltyBoxConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecPenaltyBoxConditions)(nil)).Elem()
}

func (o AppsecPenaltyBoxConditionsArrayOutput) ToAppsecPenaltyBoxConditionsArrayOutput() AppsecPenaltyBoxConditionsArrayOutput {
	return o
}

func (o AppsecPenaltyBoxConditionsArrayOutput) ToAppsecPenaltyBoxConditionsArrayOutputWithContext(ctx context.Context) AppsecPenaltyBoxConditionsArrayOutput {
	return o
}

func (o AppsecPenaltyBoxConditionsArrayOutput) Index(i pulumi.IntInput) AppsecPenaltyBoxConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppsecPenaltyBoxConditions {
		return vs[0].([]*AppsecPenaltyBoxConditions)[vs[1].(int)]
	}).(AppsecPenaltyBoxConditionsOutput)
}

type AppsecPenaltyBoxConditionsMapOutput struct{ *pulumi.OutputState }

func (AppsecPenaltyBoxConditionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecPenaltyBoxConditions)(nil)).Elem()
}

func (o AppsecPenaltyBoxConditionsMapOutput) ToAppsecPenaltyBoxConditionsMapOutput() AppsecPenaltyBoxConditionsMapOutput {
	return o
}

func (o AppsecPenaltyBoxConditionsMapOutput) ToAppsecPenaltyBoxConditionsMapOutputWithContext(ctx context.Context) AppsecPenaltyBoxConditionsMapOutput {
	return o
}

func (o AppsecPenaltyBoxConditionsMapOutput) MapIndex(k pulumi.StringInput) AppsecPenaltyBoxConditionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppsecPenaltyBoxConditions {
		return vs[0].(map[string]*AppsecPenaltyBoxConditions)[vs[1].(string)]
	}).(AppsecPenaltyBoxConditionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecPenaltyBoxConditionsInput)(nil)).Elem(), &AppsecPenaltyBoxConditions{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecPenaltyBoxConditionsArrayInput)(nil)).Elem(), AppsecPenaltyBoxConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecPenaltyBoxConditionsMapInput)(nil)).Elem(), AppsecPenaltyBoxConditionsMap{})
	pulumi.RegisterOutputType(AppsecPenaltyBoxConditionsOutput{})
	pulumi.RegisterOutputType(AppsecPenaltyBoxConditionsArrayOutput{})
	pulumi.RegisterOutputType(AppsecPenaltyBoxConditionsMapOutput{})
}
