// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupBotmanBotDetectionAction(ctx *pulumi.Context, args *LookupBotmanBotDetectionActionArgs, opts ...pulumi.InvokeOption) (*LookupBotmanBotDetectionActionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBotmanBotDetectionActionResult
	err := ctx.Invoke("akamai:index/getBotmanBotDetectionAction:getBotmanBotDetectionAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBotmanBotDetectionAction.
type LookupBotmanBotDetectionActionArgs struct {
	ConfigId         int     `pulumi:"configId"`
	DetectionId      *string `pulumi:"detectionId"`
	SecurityPolicyId string  `pulumi:"securityPolicyId"`
}

// A collection of values returned by getBotmanBotDetectionAction.
type LookupBotmanBotDetectionActionResult struct {
	ConfigId    int     `pulumi:"configId"`
	DetectionId *string `pulumi:"detectionId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	Json             string `pulumi:"json"`
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

func LookupBotmanBotDetectionActionOutput(ctx *pulumi.Context, args LookupBotmanBotDetectionActionOutputArgs, opts ...pulumi.InvokeOption) LookupBotmanBotDetectionActionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBotmanBotDetectionActionResult, error) {
			args := v.(LookupBotmanBotDetectionActionArgs)
			r, err := LookupBotmanBotDetectionAction(ctx, &args, opts...)
			var s LookupBotmanBotDetectionActionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBotmanBotDetectionActionResultOutput)
}

// A collection of arguments for invoking getBotmanBotDetectionAction.
type LookupBotmanBotDetectionActionOutputArgs struct {
	ConfigId         pulumi.IntInput       `pulumi:"configId"`
	DetectionId      pulumi.StringPtrInput `pulumi:"detectionId"`
	SecurityPolicyId pulumi.StringInput    `pulumi:"securityPolicyId"`
}

func (LookupBotmanBotDetectionActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotmanBotDetectionActionArgs)(nil)).Elem()
}

// A collection of values returned by getBotmanBotDetectionAction.
type LookupBotmanBotDetectionActionResultOutput struct{ *pulumi.OutputState }

func (LookupBotmanBotDetectionActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotmanBotDetectionActionResult)(nil)).Elem()
}

func (o LookupBotmanBotDetectionActionResultOutput) ToLookupBotmanBotDetectionActionResultOutput() LookupBotmanBotDetectionActionResultOutput {
	return o
}

func (o LookupBotmanBotDetectionActionResultOutput) ToLookupBotmanBotDetectionActionResultOutputWithContext(ctx context.Context) LookupBotmanBotDetectionActionResultOutput {
	return o
}

func (o LookupBotmanBotDetectionActionResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBotmanBotDetectionActionResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

func (o LookupBotmanBotDetectionActionResultOutput) DetectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBotmanBotDetectionActionResult) *string { return v.DetectionId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBotmanBotDetectionActionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotmanBotDetectionActionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBotmanBotDetectionActionResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotmanBotDetectionActionResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o LookupBotmanBotDetectionActionResultOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotmanBotDetectionActionResult) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBotmanBotDetectionActionResultOutput{})
}
