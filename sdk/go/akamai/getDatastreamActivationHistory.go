// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `getDatastreamActivationHistory` data source to list detailed information about the activation status changes for all versions of a stream.
//
// ## Example Usage
//
// This example returns the activation history for a provided stream ID:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ds, err := akamai.GetDatastreamActivationHistory(ctx, &akamai.GetDatastreamActivationHistoryArgs{
//				StreamId: 12345,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("dsHistoryStreamId", ds.StreamId)
//			ctx.Export("dsHistoryActivations", ds.Activations)
//			return nil
//		})
//	}
//
// ```
// ## Attributes reference
//
// This data source returns these attributes:
//
// * `activations` - Detailed information about an activation status change for a version of a stream, including:
//   - `createdBy` -Â The user who activated or deactivated the stream.
//   - `createdDate` - The date and time of an activation status change.
//   - `streamId` - A stream's unique identifier.
//   - `streamVersionId` - A stream version's unique identifier.
//   - `isActive` -	Whether the version of the stream is active.
func GetDatastreamActivationHistory(ctx *pulumi.Context, args *GetDatastreamActivationHistoryArgs, opts ...pulumi.InvokeOption) (*GetDatastreamActivationHistoryResult, error) {
	var rv GetDatastreamActivationHistoryResult
	err := ctx.Invoke("akamai:index/getDatastreamActivationHistory:getDatastreamActivationHistory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatastreamActivationHistory.
type GetDatastreamActivationHistoryArgs struct {
	// (Required) A stream's unique identifier.
	StreamId int `pulumi:"streamId"`
}

// A collection of values returned by getDatastreamActivationHistory.
type GetDatastreamActivationHistoryResult struct {
	Activations []GetDatastreamActivationHistoryActivation `pulumi:"activations"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	StreamId int    `pulumi:"streamId"`
}

func GetDatastreamActivationHistoryOutput(ctx *pulumi.Context, args GetDatastreamActivationHistoryOutputArgs, opts ...pulumi.InvokeOption) GetDatastreamActivationHistoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatastreamActivationHistoryResult, error) {
			args := v.(GetDatastreamActivationHistoryArgs)
			r, err := GetDatastreamActivationHistory(ctx, &args, opts...)
			var s GetDatastreamActivationHistoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatastreamActivationHistoryResultOutput)
}

// A collection of arguments for invoking getDatastreamActivationHistory.
type GetDatastreamActivationHistoryOutputArgs struct {
	// (Required) A stream's unique identifier.
	StreamId pulumi.IntInput `pulumi:"streamId"`
}

func (GetDatastreamActivationHistoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatastreamActivationHistoryArgs)(nil)).Elem()
}

// A collection of values returned by getDatastreamActivationHistory.
type GetDatastreamActivationHistoryResultOutput struct{ *pulumi.OutputState }

func (GetDatastreamActivationHistoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatastreamActivationHistoryResult)(nil)).Elem()
}

func (o GetDatastreamActivationHistoryResultOutput) ToGetDatastreamActivationHistoryResultOutput() GetDatastreamActivationHistoryResultOutput {
	return o
}

func (o GetDatastreamActivationHistoryResultOutput) ToGetDatastreamActivationHistoryResultOutputWithContext(ctx context.Context) GetDatastreamActivationHistoryResultOutput {
	return o
}

func (o GetDatastreamActivationHistoryResultOutput) Activations() GetDatastreamActivationHistoryActivationArrayOutput {
	return o.ApplyT(func(v GetDatastreamActivationHistoryResult) []GetDatastreamActivationHistoryActivation {
		return v.Activations
	}).(GetDatastreamActivationHistoryActivationArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatastreamActivationHistoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatastreamActivationHistoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatastreamActivationHistoryResultOutput) StreamId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatastreamActivationHistoryResult) int { return v.StreamId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatastreamActivationHistoryResultOutput{})
}
