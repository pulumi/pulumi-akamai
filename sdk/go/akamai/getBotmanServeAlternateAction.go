// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupBotmanServeAlternateAction(ctx *pulumi.Context, args *LookupBotmanServeAlternateActionArgs, opts ...pulumi.InvokeOption) (*LookupBotmanServeAlternateActionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBotmanServeAlternateActionResult
	err := ctx.Invoke("akamai:index/getBotmanServeAlternateAction:getBotmanServeAlternateAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBotmanServeAlternateAction.
type LookupBotmanServeAlternateActionArgs struct {
	ActionId *string `pulumi:"actionId"`
	ConfigId int     `pulumi:"configId"`
}

// A collection of values returned by getBotmanServeAlternateAction.
type LookupBotmanServeAlternateActionResult struct {
	ActionId *string `pulumi:"actionId"`
	ConfigId int     `pulumi:"configId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Json string `pulumi:"json"`
}

func LookupBotmanServeAlternateActionOutput(ctx *pulumi.Context, args LookupBotmanServeAlternateActionOutputArgs, opts ...pulumi.InvokeOption) LookupBotmanServeAlternateActionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBotmanServeAlternateActionResult, error) {
			args := v.(LookupBotmanServeAlternateActionArgs)
			r, err := LookupBotmanServeAlternateAction(ctx, &args, opts...)
			var s LookupBotmanServeAlternateActionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBotmanServeAlternateActionResultOutput)
}

// A collection of arguments for invoking getBotmanServeAlternateAction.
type LookupBotmanServeAlternateActionOutputArgs struct {
	ActionId pulumi.StringPtrInput `pulumi:"actionId"`
	ConfigId pulumi.IntInput       `pulumi:"configId"`
}

func (LookupBotmanServeAlternateActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotmanServeAlternateActionArgs)(nil)).Elem()
}

// A collection of values returned by getBotmanServeAlternateAction.
type LookupBotmanServeAlternateActionResultOutput struct{ *pulumi.OutputState }

func (LookupBotmanServeAlternateActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotmanServeAlternateActionResult)(nil)).Elem()
}

func (o LookupBotmanServeAlternateActionResultOutput) ToLookupBotmanServeAlternateActionResultOutput() LookupBotmanServeAlternateActionResultOutput {
	return o
}

func (o LookupBotmanServeAlternateActionResultOutput) ToLookupBotmanServeAlternateActionResultOutputWithContext(ctx context.Context) LookupBotmanServeAlternateActionResultOutput {
	return o
}

func (o LookupBotmanServeAlternateActionResultOutput) ActionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBotmanServeAlternateActionResult) *string { return v.ActionId }).(pulumi.StringPtrOutput)
}

func (o LookupBotmanServeAlternateActionResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBotmanServeAlternateActionResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBotmanServeAlternateActionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotmanServeAlternateActionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBotmanServeAlternateActionResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotmanServeAlternateActionResult) string { return v.Json }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBotmanServeAlternateActionResultOutput{})
}
