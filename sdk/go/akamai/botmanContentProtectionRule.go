// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v9/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanContentProtectionRule struct {
	pulumi.CustomResourceState

	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// The content protection rule
	ContentProtectionRule pulumi.StringOutput `pulumi:"contentProtectionRule"`
	// Unique identifier of a content protection rule
	ContentProtectionRuleId pulumi.StringOutput `pulumi:"contentProtectionRuleId"`
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewBotmanContentProtectionRule registers a new resource with the given unique name, arguments, and options.
func NewBotmanContentProtectionRule(ctx *pulumi.Context,
	name string, args *BotmanContentProtectionRuleArgs, opts ...pulumi.ResourceOption) (*BotmanContentProtectionRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.ContentProtectionRule == nil {
		return nil, errors.New("invalid value for required argument 'ContentProtectionRule'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BotmanContentProtectionRule
	err := ctx.RegisterResource("akamai:index/botmanContentProtectionRule:BotmanContentProtectionRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanContentProtectionRule gets an existing BotmanContentProtectionRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanContentProtectionRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanContentProtectionRuleState, opts ...pulumi.ResourceOption) (*BotmanContentProtectionRule, error) {
	var resource BotmanContentProtectionRule
	err := ctx.ReadResource("akamai:index/botmanContentProtectionRule:BotmanContentProtectionRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanContentProtectionRule resources.
type botmanContentProtectionRuleState struct {
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// The content protection rule
	ContentProtectionRule *string `pulumi:"contentProtectionRule"`
	// Unique identifier of a content protection rule
	ContentProtectionRuleId *string `pulumi:"contentProtectionRuleId"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type BotmanContentProtectionRuleState struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// The content protection rule
	ContentProtectionRule pulumi.StringPtrInput
	// Unique identifier of a content protection rule
	ContentProtectionRuleId pulumi.StringPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
}

func (BotmanContentProtectionRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanContentProtectionRuleState)(nil)).Elem()
}

type botmanContentProtectionRuleArgs struct {
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// The content protection rule
	ContentProtectionRule string `pulumi:"contentProtectionRule"`
	// Unique identifier of the security policy
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a BotmanContentProtectionRule resource.
type BotmanContentProtectionRuleArgs struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// The content protection rule
	ContentProtectionRule pulumi.StringInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringInput
}

func (BotmanContentProtectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanContentProtectionRuleArgs)(nil)).Elem()
}

type BotmanContentProtectionRuleInput interface {
	pulumi.Input

	ToBotmanContentProtectionRuleOutput() BotmanContentProtectionRuleOutput
	ToBotmanContentProtectionRuleOutputWithContext(ctx context.Context) BotmanContentProtectionRuleOutput
}

func (*BotmanContentProtectionRule) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanContentProtectionRule)(nil)).Elem()
}

func (i *BotmanContentProtectionRule) ToBotmanContentProtectionRuleOutput() BotmanContentProtectionRuleOutput {
	return i.ToBotmanContentProtectionRuleOutputWithContext(context.Background())
}

func (i *BotmanContentProtectionRule) ToBotmanContentProtectionRuleOutputWithContext(ctx context.Context) BotmanContentProtectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanContentProtectionRuleOutput)
}

// BotmanContentProtectionRuleArrayInput is an input type that accepts BotmanContentProtectionRuleArray and BotmanContentProtectionRuleArrayOutput values.
// You can construct a concrete instance of `BotmanContentProtectionRuleArrayInput` via:
//
//	BotmanContentProtectionRuleArray{ BotmanContentProtectionRuleArgs{...} }
type BotmanContentProtectionRuleArrayInput interface {
	pulumi.Input

	ToBotmanContentProtectionRuleArrayOutput() BotmanContentProtectionRuleArrayOutput
	ToBotmanContentProtectionRuleArrayOutputWithContext(context.Context) BotmanContentProtectionRuleArrayOutput
}

type BotmanContentProtectionRuleArray []BotmanContentProtectionRuleInput

func (BotmanContentProtectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanContentProtectionRule)(nil)).Elem()
}

func (i BotmanContentProtectionRuleArray) ToBotmanContentProtectionRuleArrayOutput() BotmanContentProtectionRuleArrayOutput {
	return i.ToBotmanContentProtectionRuleArrayOutputWithContext(context.Background())
}

func (i BotmanContentProtectionRuleArray) ToBotmanContentProtectionRuleArrayOutputWithContext(ctx context.Context) BotmanContentProtectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanContentProtectionRuleArrayOutput)
}

// BotmanContentProtectionRuleMapInput is an input type that accepts BotmanContentProtectionRuleMap and BotmanContentProtectionRuleMapOutput values.
// You can construct a concrete instance of `BotmanContentProtectionRuleMapInput` via:
//
//	BotmanContentProtectionRuleMap{ "key": BotmanContentProtectionRuleArgs{...} }
type BotmanContentProtectionRuleMapInput interface {
	pulumi.Input

	ToBotmanContentProtectionRuleMapOutput() BotmanContentProtectionRuleMapOutput
	ToBotmanContentProtectionRuleMapOutputWithContext(context.Context) BotmanContentProtectionRuleMapOutput
}

type BotmanContentProtectionRuleMap map[string]BotmanContentProtectionRuleInput

func (BotmanContentProtectionRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanContentProtectionRule)(nil)).Elem()
}

func (i BotmanContentProtectionRuleMap) ToBotmanContentProtectionRuleMapOutput() BotmanContentProtectionRuleMapOutput {
	return i.ToBotmanContentProtectionRuleMapOutputWithContext(context.Background())
}

func (i BotmanContentProtectionRuleMap) ToBotmanContentProtectionRuleMapOutputWithContext(ctx context.Context) BotmanContentProtectionRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanContentProtectionRuleMapOutput)
}

type BotmanContentProtectionRuleOutput struct{ *pulumi.OutputState }

func (BotmanContentProtectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanContentProtectionRule)(nil)).Elem()
}

func (o BotmanContentProtectionRuleOutput) ToBotmanContentProtectionRuleOutput() BotmanContentProtectionRuleOutput {
	return o
}

func (o BotmanContentProtectionRuleOutput) ToBotmanContentProtectionRuleOutputWithContext(ctx context.Context) BotmanContentProtectionRuleOutput {
	return o
}

// Unique identifier of the security configuration
func (o BotmanContentProtectionRuleOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanContentProtectionRule) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// The content protection rule
func (o BotmanContentProtectionRuleOutput) ContentProtectionRule() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanContentProtectionRule) pulumi.StringOutput { return v.ContentProtectionRule }).(pulumi.StringOutput)
}

// Unique identifier of a content protection rule
func (o BotmanContentProtectionRuleOutput) ContentProtectionRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanContentProtectionRule) pulumi.StringOutput { return v.ContentProtectionRuleId }).(pulumi.StringOutput)
}

// Unique identifier of the security policy
func (o BotmanContentProtectionRuleOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanContentProtectionRule) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type BotmanContentProtectionRuleArrayOutput struct{ *pulumi.OutputState }

func (BotmanContentProtectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanContentProtectionRule)(nil)).Elem()
}

func (o BotmanContentProtectionRuleArrayOutput) ToBotmanContentProtectionRuleArrayOutput() BotmanContentProtectionRuleArrayOutput {
	return o
}

func (o BotmanContentProtectionRuleArrayOutput) ToBotmanContentProtectionRuleArrayOutputWithContext(ctx context.Context) BotmanContentProtectionRuleArrayOutput {
	return o
}

func (o BotmanContentProtectionRuleArrayOutput) Index(i pulumi.IntInput) BotmanContentProtectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanContentProtectionRule {
		return vs[0].([]*BotmanContentProtectionRule)[vs[1].(int)]
	}).(BotmanContentProtectionRuleOutput)
}

type BotmanContentProtectionRuleMapOutput struct{ *pulumi.OutputState }

func (BotmanContentProtectionRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanContentProtectionRule)(nil)).Elem()
}

func (o BotmanContentProtectionRuleMapOutput) ToBotmanContentProtectionRuleMapOutput() BotmanContentProtectionRuleMapOutput {
	return o
}

func (o BotmanContentProtectionRuleMapOutput) ToBotmanContentProtectionRuleMapOutputWithContext(ctx context.Context) BotmanContentProtectionRuleMapOutput {
	return o
}

func (o BotmanContentProtectionRuleMapOutput) MapIndex(k pulumi.StringInput) BotmanContentProtectionRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanContentProtectionRule {
		return vs[0].(map[string]*BotmanContentProtectionRule)[vs[1].(string)]
	}).(BotmanContentProtectionRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanContentProtectionRuleInput)(nil)).Elem(), &BotmanContentProtectionRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanContentProtectionRuleArrayInput)(nil)).Elem(), BotmanContentProtectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanContentProtectionRuleMapInput)(nil)).Elem(), BotmanContentProtectionRuleMap{})
	pulumi.RegisterOutputType(BotmanContentProtectionRuleOutput{})
	pulumi.RegisterOutputType(BotmanContentProtectionRuleArrayOutput{})
	pulumi.RegisterOutputType(BotmanContentProtectionRuleMapOutput{})
}
