// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanBotAnalyticsCookie struct {
	pulumi.CustomResourceState

	BotAnalyticsCookie pulumi.StringOutput `pulumi:"botAnalyticsCookie"`
	ConfigId           pulumi.IntOutput    `pulumi:"configId"`
}

// NewBotmanBotAnalyticsCookie registers a new resource with the given unique name, arguments, and options.
func NewBotmanBotAnalyticsCookie(ctx *pulumi.Context,
	name string, args *BotmanBotAnalyticsCookieArgs, opts ...pulumi.ResourceOption) (*BotmanBotAnalyticsCookie, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BotAnalyticsCookie == nil {
		return nil, errors.New("invalid value for required argument 'BotAnalyticsCookie'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BotmanBotAnalyticsCookie
	err := ctx.RegisterResource("akamai:index/botmanBotAnalyticsCookie:BotmanBotAnalyticsCookie", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanBotAnalyticsCookie gets an existing BotmanBotAnalyticsCookie resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanBotAnalyticsCookie(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanBotAnalyticsCookieState, opts ...pulumi.ResourceOption) (*BotmanBotAnalyticsCookie, error) {
	var resource BotmanBotAnalyticsCookie
	err := ctx.ReadResource("akamai:index/botmanBotAnalyticsCookie:BotmanBotAnalyticsCookie", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanBotAnalyticsCookie resources.
type botmanBotAnalyticsCookieState struct {
	BotAnalyticsCookie *string `pulumi:"botAnalyticsCookie"`
	ConfigId           *int    `pulumi:"configId"`
}

type BotmanBotAnalyticsCookieState struct {
	BotAnalyticsCookie pulumi.StringPtrInput
	ConfigId           pulumi.IntPtrInput
}

func (BotmanBotAnalyticsCookieState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanBotAnalyticsCookieState)(nil)).Elem()
}

type botmanBotAnalyticsCookieArgs struct {
	BotAnalyticsCookie string `pulumi:"botAnalyticsCookie"`
	ConfigId           int    `pulumi:"configId"`
}

// The set of arguments for constructing a BotmanBotAnalyticsCookie resource.
type BotmanBotAnalyticsCookieArgs struct {
	BotAnalyticsCookie pulumi.StringInput
	ConfigId           pulumi.IntInput
}

func (BotmanBotAnalyticsCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanBotAnalyticsCookieArgs)(nil)).Elem()
}

type BotmanBotAnalyticsCookieInput interface {
	pulumi.Input

	ToBotmanBotAnalyticsCookieOutput() BotmanBotAnalyticsCookieOutput
	ToBotmanBotAnalyticsCookieOutputWithContext(ctx context.Context) BotmanBotAnalyticsCookieOutput
}

func (*BotmanBotAnalyticsCookie) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanBotAnalyticsCookie)(nil)).Elem()
}

func (i *BotmanBotAnalyticsCookie) ToBotmanBotAnalyticsCookieOutput() BotmanBotAnalyticsCookieOutput {
	return i.ToBotmanBotAnalyticsCookieOutputWithContext(context.Background())
}

func (i *BotmanBotAnalyticsCookie) ToBotmanBotAnalyticsCookieOutputWithContext(ctx context.Context) BotmanBotAnalyticsCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanBotAnalyticsCookieOutput)
}

// BotmanBotAnalyticsCookieArrayInput is an input type that accepts BotmanBotAnalyticsCookieArray and BotmanBotAnalyticsCookieArrayOutput values.
// You can construct a concrete instance of `BotmanBotAnalyticsCookieArrayInput` via:
//
//	BotmanBotAnalyticsCookieArray{ BotmanBotAnalyticsCookieArgs{...} }
type BotmanBotAnalyticsCookieArrayInput interface {
	pulumi.Input

	ToBotmanBotAnalyticsCookieArrayOutput() BotmanBotAnalyticsCookieArrayOutput
	ToBotmanBotAnalyticsCookieArrayOutputWithContext(context.Context) BotmanBotAnalyticsCookieArrayOutput
}

type BotmanBotAnalyticsCookieArray []BotmanBotAnalyticsCookieInput

func (BotmanBotAnalyticsCookieArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanBotAnalyticsCookie)(nil)).Elem()
}

func (i BotmanBotAnalyticsCookieArray) ToBotmanBotAnalyticsCookieArrayOutput() BotmanBotAnalyticsCookieArrayOutput {
	return i.ToBotmanBotAnalyticsCookieArrayOutputWithContext(context.Background())
}

func (i BotmanBotAnalyticsCookieArray) ToBotmanBotAnalyticsCookieArrayOutputWithContext(ctx context.Context) BotmanBotAnalyticsCookieArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanBotAnalyticsCookieArrayOutput)
}

// BotmanBotAnalyticsCookieMapInput is an input type that accepts BotmanBotAnalyticsCookieMap and BotmanBotAnalyticsCookieMapOutput values.
// You can construct a concrete instance of `BotmanBotAnalyticsCookieMapInput` via:
//
//	BotmanBotAnalyticsCookieMap{ "key": BotmanBotAnalyticsCookieArgs{...} }
type BotmanBotAnalyticsCookieMapInput interface {
	pulumi.Input

	ToBotmanBotAnalyticsCookieMapOutput() BotmanBotAnalyticsCookieMapOutput
	ToBotmanBotAnalyticsCookieMapOutputWithContext(context.Context) BotmanBotAnalyticsCookieMapOutput
}

type BotmanBotAnalyticsCookieMap map[string]BotmanBotAnalyticsCookieInput

func (BotmanBotAnalyticsCookieMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanBotAnalyticsCookie)(nil)).Elem()
}

func (i BotmanBotAnalyticsCookieMap) ToBotmanBotAnalyticsCookieMapOutput() BotmanBotAnalyticsCookieMapOutput {
	return i.ToBotmanBotAnalyticsCookieMapOutputWithContext(context.Background())
}

func (i BotmanBotAnalyticsCookieMap) ToBotmanBotAnalyticsCookieMapOutputWithContext(ctx context.Context) BotmanBotAnalyticsCookieMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanBotAnalyticsCookieMapOutput)
}

type BotmanBotAnalyticsCookieOutput struct{ *pulumi.OutputState }

func (BotmanBotAnalyticsCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanBotAnalyticsCookie)(nil)).Elem()
}

func (o BotmanBotAnalyticsCookieOutput) ToBotmanBotAnalyticsCookieOutput() BotmanBotAnalyticsCookieOutput {
	return o
}

func (o BotmanBotAnalyticsCookieOutput) ToBotmanBotAnalyticsCookieOutputWithContext(ctx context.Context) BotmanBotAnalyticsCookieOutput {
	return o
}

func (o BotmanBotAnalyticsCookieOutput) BotAnalyticsCookie() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanBotAnalyticsCookie) pulumi.StringOutput { return v.BotAnalyticsCookie }).(pulumi.StringOutput)
}

func (o BotmanBotAnalyticsCookieOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanBotAnalyticsCookie) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

type BotmanBotAnalyticsCookieArrayOutput struct{ *pulumi.OutputState }

func (BotmanBotAnalyticsCookieArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanBotAnalyticsCookie)(nil)).Elem()
}

func (o BotmanBotAnalyticsCookieArrayOutput) ToBotmanBotAnalyticsCookieArrayOutput() BotmanBotAnalyticsCookieArrayOutput {
	return o
}

func (o BotmanBotAnalyticsCookieArrayOutput) ToBotmanBotAnalyticsCookieArrayOutputWithContext(ctx context.Context) BotmanBotAnalyticsCookieArrayOutput {
	return o
}

func (o BotmanBotAnalyticsCookieArrayOutput) Index(i pulumi.IntInput) BotmanBotAnalyticsCookieOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanBotAnalyticsCookie {
		return vs[0].([]*BotmanBotAnalyticsCookie)[vs[1].(int)]
	}).(BotmanBotAnalyticsCookieOutput)
}

type BotmanBotAnalyticsCookieMapOutput struct{ *pulumi.OutputState }

func (BotmanBotAnalyticsCookieMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanBotAnalyticsCookie)(nil)).Elem()
}

func (o BotmanBotAnalyticsCookieMapOutput) ToBotmanBotAnalyticsCookieMapOutput() BotmanBotAnalyticsCookieMapOutput {
	return o
}

func (o BotmanBotAnalyticsCookieMapOutput) ToBotmanBotAnalyticsCookieMapOutputWithContext(ctx context.Context) BotmanBotAnalyticsCookieMapOutput {
	return o
}

func (o BotmanBotAnalyticsCookieMapOutput) MapIndex(k pulumi.StringInput) BotmanBotAnalyticsCookieOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanBotAnalyticsCookie {
		return vs[0].(map[string]*BotmanBotAnalyticsCookie)[vs[1].(string)]
	}).(BotmanBotAnalyticsCookieOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanBotAnalyticsCookieInput)(nil)).Elem(), &BotmanBotAnalyticsCookie{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanBotAnalyticsCookieArrayInput)(nil)).Elem(), BotmanBotAnalyticsCookieArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanBotAnalyticsCookieMapInput)(nil)).Elem(), BotmanBotAnalyticsCookieMap{})
	pulumi.RegisterOutputType(BotmanBotAnalyticsCookieOutput{})
	pulumi.RegisterOutputType(BotmanBotAnalyticsCookieArrayOutput{})
	pulumi.RegisterOutputType(BotmanBotAnalyticsCookieMapOutput{})
}
