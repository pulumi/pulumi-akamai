// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetBotmanBotEndpointCoverageReport(ctx *pulumi.Context, args *GetBotmanBotEndpointCoverageReportArgs, opts ...pulumi.InvokeOption) (*GetBotmanBotEndpointCoverageReportResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBotmanBotEndpointCoverageReportResult
	err := ctx.Invoke("akamai:index/getBotmanBotEndpointCoverageReport:getBotmanBotEndpointCoverageReport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBotmanBotEndpointCoverageReport.
type GetBotmanBotEndpointCoverageReportArgs struct {
	ConfigId    *int    `pulumi:"configId"`
	OperationId *string `pulumi:"operationId"`
}

// A collection of values returned by getBotmanBotEndpointCoverageReport.
type GetBotmanBotEndpointCoverageReportResult struct {
	ConfigId *int `pulumi:"configId"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	Json        string  `pulumi:"json"`
	OperationId *string `pulumi:"operationId"`
}

func GetBotmanBotEndpointCoverageReportOutput(ctx *pulumi.Context, args GetBotmanBotEndpointCoverageReportOutputArgs, opts ...pulumi.InvokeOption) GetBotmanBotEndpointCoverageReportResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBotmanBotEndpointCoverageReportResult, error) {
			args := v.(GetBotmanBotEndpointCoverageReportArgs)
			r, err := GetBotmanBotEndpointCoverageReport(ctx, &args, opts...)
			var s GetBotmanBotEndpointCoverageReportResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBotmanBotEndpointCoverageReportResultOutput)
}

// A collection of arguments for invoking getBotmanBotEndpointCoverageReport.
type GetBotmanBotEndpointCoverageReportOutputArgs struct {
	ConfigId    pulumi.IntPtrInput    `pulumi:"configId"`
	OperationId pulumi.StringPtrInput `pulumi:"operationId"`
}

func (GetBotmanBotEndpointCoverageReportOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBotmanBotEndpointCoverageReportArgs)(nil)).Elem()
}

// A collection of values returned by getBotmanBotEndpointCoverageReport.
type GetBotmanBotEndpointCoverageReportResultOutput struct{ *pulumi.OutputState }

func (GetBotmanBotEndpointCoverageReportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBotmanBotEndpointCoverageReportResult)(nil)).Elem()
}

func (o GetBotmanBotEndpointCoverageReportResultOutput) ToGetBotmanBotEndpointCoverageReportResultOutput() GetBotmanBotEndpointCoverageReportResultOutput {
	return o
}

func (o GetBotmanBotEndpointCoverageReportResultOutput) ToGetBotmanBotEndpointCoverageReportResultOutputWithContext(ctx context.Context) GetBotmanBotEndpointCoverageReportResultOutput {
	return o
}

func (o GetBotmanBotEndpointCoverageReportResultOutput) ConfigId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetBotmanBotEndpointCoverageReportResult) *int { return v.ConfigId }).(pulumi.IntPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBotmanBotEndpointCoverageReportResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotmanBotEndpointCoverageReportResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBotmanBotEndpointCoverageReportResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotmanBotEndpointCoverageReportResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetBotmanBotEndpointCoverageReportResultOutput) OperationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBotmanBotEndpointCoverageReportResult) *string { return v.OperationId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBotmanBotEndpointCoverageReportResultOutput{})
}
