// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkListActivations struct {
	pulumi.CustomResourceState

	// The Akamai network on which the list is activated: STAGING or PRODUCTION
	Network pulumi.StringPtrOutput `pulumi:"network"`
	// Unique identifier of the network list
	NetworkListId pulumi.StringOutput `pulumi:"networkListId"`
	// Descriptive text to accompany the activation
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// List of email addresses of Control Center users who receive an email when activation of this list is complete
	NotificationEmails pulumi.StringArrayOutput `pulumi:"notificationEmails"`
	// This network list's current activation status in the environment specified by the "network" attribute
	Status pulumi.StringOutput `pulumi:"status"`
	// Identifies the sync point of the network list to be activated
	SyncPoint pulumi.IntOutput `pulumi:"syncPoint"`
}

// NewNetworkListActivations registers a new resource with the given unique name, arguments, and options.
func NewNetworkListActivations(ctx *pulumi.Context,
	name string, args *NetworkListActivationsArgs, opts ...pulumi.ResourceOption) (*NetworkListActivations, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkListId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkListId'")
	}
	if args.NotificationEmails == nil {
		return nil, errors.New("invalid value for required argument 'NotificationEmails'")
	}
	if args.SyncPoint == nil {
		return nil, errors.New("invalid value for required argument 'SyncPoint'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkListActivations
	err := ctx.RegisterResource("akamai:index/networkListActivations:NetworkListActivations", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkListActivations gets an existing NetworkListActivations resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkListActivations(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkListActivationsState, opts ...pulumi.ResourceOption) (*NetworkListActivations, error) {
	var resource NetworkListActivations
	err := ctx.ReadResource("akamai:index/networkListActivations:NetworkListActivations", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkListActivations resources.
type networkListActivationsState struct {
	// The Akamai network on which the list is activated: STAGING or PRODUCTION
	Network *string `pulumi:"network"`
	// Unique identifier of the network list
	NetworkListId *string `pulumi:"networkListId"`
	// Descriptive text to accompany the activation
	Notes *string `pulumi:"notes"`
	// List of email addresses of Control Center users who receive an email when activation of this list is complete
	NotificationEmails []string `pulumi:"notificationEmails"`
	// This network list's current activation status in the environment specified by the "network" attribute
	Status *string `pulumi:"status"`
	// Identifies the sync point of the network list to be activated
	SyncPoint *int `pulumi:"syncPoint"`
}

type NetworkListActivationsState struct {
	// The Akamai network on which the list is activated: STAGING or PRODUCTION
	Network pulumi.StringPtrInput
	// Unique identifier of the network list
	NetworkListId pulumi.StringPtrInput
	// Descriptive text to accompany the activation
	Notes pulumi.StringPtrInput
	// List of email addresses of Control Center users who receive an email when activation of this list is complete
	NotificationEmails pulumi.StringArrayInput
	// This network list's current activation status in the environment specified by the "network" attribute
	Status pulumi.StringPtrInput
	// Identifies the sync point of the network list to be activated
	SyncPoint pulumi.IntPtrInput
}

func (NetworkListActivationsState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkListActivationsState)(nil)).Elem()
}

type networkListActivationsArgs struct {
	// The Akamai network on which the list is activated: STAGING or PRODUCTION
	Network *string `pulumi:"network"`
	// Unique identifier of the network list
	NetworkListId string `pulumi:"networkListId"`
	// Descriptive text to accompany the activation
	Notes *string `pulumi:"notes"`
	// List of email addresses of Control Center users who receive an email when activation of this list is complete
	NotificationEmails []string `pulumi:"notificationEmails"`
	// Identifies the sync point of the network list to be activated
	SyncPoint int `pulumi:"syncPoint"`
}

// The set of arguments for constructing a NetworkListActivations resource.
type NetworkListActivationsArgs struct {
	// The Akamai network on which the list is activated: STAGING or PRODUCTION
	Network pulumi.StringPtrInput
	// Unique identifier of the network list
	NetworkListId pulumi.StringInput
	// Descriptive text to accompany the activation
	Notes pulumi.StringPtrInput
	// List of email addresses of Control Center users who receive an email when activation of this list is complete
	NotificationEmails pulumi.StringArrayInput
	// Identifies the sync point of the network list to be activated
	SyncPoint pulumi.IntInput
}

func (NetworkListActivationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkListActivationsArgs)(nil)).Elem()
}

type NetworkListActivationsInput interface {
	pulumi.Input

	ToNetworkListActivationsOutput() NetworkListActivationsOutput
	ToNetworkListActivationsOutputWithContext(ctx context.Context) NetworkListActivationsOutput
}

func (*NetworkListActivations) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkListActivations)(nil)).Elem()
}

func (i *NetworkListActivations) ToNetworkListActivationsOutput() NetworkListActivationsOutput {
	return i.ToNetworkListActivationsOutputWithContext(context.Background())
}

func (i *NetworkListActivations) ToNetworkListActivationsOutputWithContext(ctx context.Context) NetworkListActivationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkListActivationsOutput)
}

// NetworkListActivationsArrayInput is an input type that accepts NetworkListActivationsArray and NetworkListActivationsArrayOutput values.
// You can construct a concrete instance of `NetworkListActivationsArrayInput` via:
//
//	NetworkListActivationsArray{ NetworkListActivationsArgs{...} }
type NetworkListActivationsArrayInput interface {
	pulumi.Input

	ToNetworkListActivationsArrayOutput() NetworkListActivationsArrayOutput
	ToNetworkListActivationsArrayOutputWithContext(context.Context) NetworkListActivationsArrayOutput
}

type NetworkListActivationsArray []NetworkListActivationsInput

func (NetworkListActivationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkListActivations)(nil)).Elem()
}

func (i NetworkListActivationsArray) ToNetworkListActivationsArrayOutput() NetworkListActivationsArrayOutput {
	return i.ToNetworkListActivationsArrayOutputWithContext(context.Background())
}

func (i NetworkListActivationsArray) ToNetworkListActivationsArrayOutputWithContext(ctx context.Context) NetworkListActivationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkListActivationsArrayOutput)
}

// NetworkListActivationsMapInput is an input type that accepts NetworkListActivationsMap and NetworkListActivationsMapOutput values.
// You can construct a concrete instance of `NetworkListActivationsMapInput` via:
//
//	NetworkListActivationsMap{ "key": NetworkListActivationsArgs{...} }
type NetworkListActivationsMapInput interface {
	pulumi.Input

	ToNetworkListActivationsMapOutput() NetworkListActivationsMapOutput
	ToNetworkListActivationsMapOutputWithContext(context.Context) NetworkListActivationsMapOutput
}

type NetworkListActivationsMap map[string]NetworkListActivationsInput

func (NetworkListActivationsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkListActivations)(nil)).Elem()
}

func (i NetworkListActivationsMap) ToNetworkListActivationsMapOutput() NetworkListActivationsMapOutput {
	return i.ToNetworkListActivationsMapOutputWithContext(context.Background())
}

func (i NetworkListActivationsMap) ToNetworkListActivationsMapOutputWithContext(ctx context.Context) NetworkListActivationsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkListActivationsMapOutput)
}

type NetworkListActivationsOutput struct{ *pulumi.OutputState }

func (NetworkListActivationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkListActivations)(nil)).Elem()
}

func (o NetworkListActivationsOutput) ToNetworkListActivationsOutput() NetworkListActivationsOutput {
	return o
}

func (o NetworkListActivationsOutput) ToNetworkListActivationsOutputWithContext(ctx context.Context) NetworkListActivationsOutput {
	return o
}

// The Akamai network on which the list is activated: STAGING or PRODUCTION
func (o NetworkListActivationsOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkListActivations) pulumi.StringPtrOutput { return v.Network }).(pulumi.StringPtrOutput)
}

// Unique identifier of the network list
func (o NetworkListActivationsOutput) NetworkListId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkListActivations) pulumi.StringOutput { return v.NetworkListId }).(pulumi.StringOutput)
}

// Descriptive text to accompany the activation
func (o NetworkListActivationsOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkListActivations) pulumi.StringPtrOutput { return v.Notes }).(pulumi.StringPtrOutput)
}

// List of email addresses of Control Center users who receive an email when activation of this list is complete
func (o NetworkListActivationsOutput) NotificationEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkListActivations) pulumi.StringArrayOutput { return v.NotificationEmails }).(pulumi.StringArrayOutput)
}

// This network list's current activation status in the environment specified by the "network" attribute
func (o NetworkListActivationsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkListActivations) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Identifies the sync point of the network list to be activated
func (o NetworkListActivationsOutput) SyncPoint() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkListActivations) pulumi.IntOutput { return v.SyncPoint }).(pulumi.IntOutput)
}

type NetworkListActivationsArrayOutput struct{ *pulumi.OutputState }

func (NetworkListActivationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkListActivations)(nil)).Elem()
}

func (o NetworkListActivationsArrayOutput) ToNetworkListActivationsArrayOutput() NetworkListActivationsArrayOutput {
	return o
}

func (o NetworkListActivationsArrayOutput) ToNetworkListActivationsArrayOutputWithContext(ctx context.Context) NetworkListActivationsArrayOutput {
	return o
}

func (o NetworkListActivationsArrayOutput) Index(i pulumi.IntInput) NetworkListActivationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkListActivations {
		return vs[0].([]*NetworkListActivations)[vs[1].(int)]
	}).(NetworkListActivationsOutput)
}

type NetworkListActivationsMapOutput struct{ *pulumi.OutputState }

func (NetworkListActivationsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkListActivations)(nil)).Elem()
}

func (o NetworkListActivationsMapOutput) ToNetworkListActivationsMapOutput() NetworkListActivationsMapOutput {
	return o
}

func (o NetworkListActivationsMapOutput) ToNetworkListActivationsMapOutputWithContext(ctx context.Context) NetworkListActivationsMapOutput {
	return o
}

func (o NetworkListActivationsMapOutput) MapIndex(k pulumi.StringInput) NetworkListActivationsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkListActivations {
		return vs[0].(map[string]*NetworkListActivations)[vs[1].(string)]
	}).(NetworkListActivationsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkListActivationsInput)(nil)).Elem(), &NetworkListActivations{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkListActivationsArrayInput)(nil)).Elem(), NetworkListActivationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkListActivationsMapInput)(nil)).Elem(), NetworkListActivationsMap{})
	pulumi.RegisterOutputType(NetworkListActivationsOutput{})
	pulumi.RegisterOutputType(NetworkListActivationsArrayOutput{})
	pulumi.RegisterOutputType(NetworkListActivationsMapOutput{})
}
