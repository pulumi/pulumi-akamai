// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanCustomClient struct {
	pulumi.CustomResourceState

	ConfigId       pulumi.IntOutput    `pulumi:"configId"`
	CustomClient   pulumi.StringOutput `pulumi:"customClient"`
	CustomClientId pulumi.StringOutput `pulumi:"customClientId"`
}

// NewBotmanCustomClient registers a new resource with the given unique name, arguments, and options.
func NewBotmanCustomClient(ctx *pulumi.Context,
	name string, args *BotmanCustomClientArgs, opts ...pulumi.ResourceOption) (*BotmanCustomClient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.CustomClient == nil {
		return nil, errors.New("invalid value for required argument 'CustomClient'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BotmanCustomClient
	err := ctx.RegisterResource("akamai:index/botmanCustomClient:BotmanCustomClient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanCustomClient gets an existing BotmanCustomClient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanCustomClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanCustomClientState, opts ...pulumi.ResourceOption) (*BotmanCustomClient, error) {
	var resource BotmanCustomClient
	err := ctx.ReadResource("akamai:index/botmanCustomClient:BotmanCustomClient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanCustomClient resources.
type botmanCustomClientState struct {
	ConfigId       *int    `pulumi:"configId"`
	CustomClient   *string `pulumi:"customClient"`
	CustomClientId *string `pulumi:"customClientId"`
}

type BotmanCustomClientState struct {
	ConfigId       pulumi.IntPtrInput
	CustomClient   pulumi.StringPtrInput
	CustomClientId pulumi.StringPtrInput
}

func (BotmanCustomClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomClientState)(nil)).Elem()
}

type botmanCustomClientArgs struct {
	ConfigId     int    `pulumi:"configId"`
	CustomClient string `pulumi:"customClient"`
}

// The set of arguments for constructing a BotmanCustomClient resource.
type BotmanCustomClientArgs struct {
	ConfigId     pulumi.IntInput
	CustomClient pulumi.StringInput
}

func (BotmanCustomClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomClientArgs)(nil)).Elem()
}

type BotmanCustomClientInput interface {
	pulumi.Input

	ToBotmanCustomClientOutput() BotmanCustomClientOutput
	ToBotmanCustomClientOutputWithContext(ctx context.Context) BotmanCustomClientOutput
}

func (*BotmanCustomClient) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomClient)(nil)).Elem()
}

func (i *BotmanCustomClient) ToBotmanCustomClientOutput() BotmanCustomClientOutput {
	return i.ToBotmanCustomClientOutputWithContext(context.Background())
}

func (i *BotmanCustomClient) ToBotmanCustomClientOutputWithContext(ctx context.Context) BotmanCustomClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomClientOutput)
}

// BotmanCustomClientArrayInput is an input type that accepts BotmanCustomClientArray and BotmanCustomClientArrayOutput values.
// You can construct a concrete instance of `BotmanCustomClientArrayInput` via:
//
//	BotmanCustomClientArray{ BotmanCustomClientArgs{...} }
type BotmanCustomClientArrayInput interface {
	pulumi.Input

	ToBotmanCustomClientArrayOutput() BotmanCustomClientArrayOutput
	ToBotmanCustomClientArrayOutputWithContext(context.Context) BotmanCustomClientArrayOutput
}

type BotmanCustomClientArray []BotmanCustomClientInput

func (BotmanCustomClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomClient)(nil)).Elem()
}

func (i BotmanCustomClientArray) ToBotmanCustomClientArrayOutput() BotmanCustomClientArrayOutput {
	return i.ToBotmanCustomClientArrayOutputWithContext(context.Background())
}

func (i BotmanCustomClientArray) ToBotmanCustomClientArrayOutputWithContext(ctx context.Context) BotmanCustomClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomClientArrayOutput)
}

// BotmanCustomClientMapInput is an input type that accepts BotmanCustomClientMap and BotmanCustomClientMapOutput values.
// You can construct a concrete instance of `BotmanCustomClientMapInput` via:
//
//	BotmanCustomClientMap{ "key": BotmanCustomClientArgs{...} }
type BotmanCustomClientMapInput interface {
	pulumi.Input

	ToBotmanCustomClientMapOutput() BotmanCustomClientMapOutput
	ToBotmanCustomClientMapOutputWithContext(context.Context) BotmanCustomClientMapOutput
}

type BotmanCustomClientMap map[string]BotmanCustomClientInput

func (BotmanCustomClientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomClient)(nil)).Elem()
}

func (i BotmanCustomClientMap) ToBotmanCustomClientMapOutput() BotmanCustomClientMapOutput {
	return i.ToBotmanCustomClientMapOutputWithContext(context.Background())
}

func (i BotmanCustomClientMap) ToBotmanCustomClientMapOutputWithContext(ctx context.Context) BotmanCustomClientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomClientMapOutput)
}

type BotmanCustomClientOutput struct{ *pulumi.OutputState }

func (BotmanCustomClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomClient)(nil)).Elem()
}

func (o BotmanCustomClientOutput) ToBotmanCustomClientOutput() BotmanCustomClientOutput {
	return o
}

func (o BotmanCustomClientOutput) ToBotmanCustomClientOutputWithContext(ctx context.Context) BotmanCustomClientOutput {
	return o
}

func (o BotmanCustomClientOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanCustomClient) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

func (o BotmanCustomClientOutput) CustomClient() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanCustomClient) pulumi.StringOutput { return v.CustomClient }).(pulumi.StringOutput)
}

func (o BotmanCustomClientOutput) CustomClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanCustomClient) pulumi.StringOutput { return v.CustomClientId }).(pulumi.StringOutput)
}

type BotmanCustomClientArrayOutput struct{ *pulumi.OutputState }

func (BotmanCustomClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomClient)(nil)).Elem()
}

func (o BotmanCustomClientArrayOutput) ToBotmanCustomClientArrayOutput() BotmanCustomClientArrayOutput {
	return o
}

func (o BotmanCustomClientArrayOutput) ToBotmanCustomClientArrayOutputWithContext(ctx context.Context) BotmanCustomClientArrayOutput {
	return o
}

func (o BotmanCustomClientArrayOutput) Index(i pulumi.IntInput) BotmanCustomClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanCustomClient {
		return vs[0].([]*BotmanCustomClient)[vs[1].(int)]
	}).(BotmanCustomClientOutput)
}

type BotmanCustomClientMapOutput struct{ *pulumi.OutputState }

func (BotmanCustomClientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomClient)(nil)).Elem()
}

func (o BotmanCustomClientMapOutput) ToBotmanCustomClientMapOutput() BotmanCustomClientMapOutput {
	return o
}

func (o BotmanCustomClientMapOutput) ToBotmanCustomClientMapOutputWithContext(ctx context.Context) BotmanCustomClientMapOutput {
	return o
}

func (o BotmanCustomClientMapOutput) MapIndex(k pulumi.StringInput) BotmanCustomClientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanCustomClient {
		return vs[0].(map[string]*BotmanCustomClient)[vs[1].(string)]
	}).(BotmanCustomClientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomClientInput)(nil)).Elem(), &BotmanCustomClient{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomClientArrayInput)(nil)).Elem(), BotmanCustomClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomClientMapInput)(nil)).Elem(), BotmanCustomClientMap{})
	pulumi.RegisterOutputType(BotmanCustomClientOutput{})
	pulumi.RegisterOutputType(BotmanCustomClientArrayOutput{})
	pulumi.RegisterOutputType(BotmanCustomClientMapOutput{})
}
