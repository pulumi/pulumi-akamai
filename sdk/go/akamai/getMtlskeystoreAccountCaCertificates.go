// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v10/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetMtlskeystoreAccountCaCertificates(ctx *pulumi.Context, args *GetMtlskeystoreAccountCaCertificatesArgs, opts ...pulumi.InvokeOption) (*GetMtlskeystoreAccountCaCertificatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMtlskeystoreAccountCaCertificatesResult
	err := ctx.Invoke("akamai:index/getMtlskeystoreAccountCaCertificates:getMtlskeystoreAccountCaCertificates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMtlskeystoreAccountCaCertificates.
type GetMtlskeystoreAccountCaCertificatesArgs struct {
	Statuses []string `pulumi:"statuses"`
}

// A collection of values returned by getMtlskeystoreAccountCaCertificates.
type GetMtlskeystoreAccountCaCertificatesResult struct {
	Certificates []GetMtlskeystoreAccountCaCertificatesCertificate `pulumi:"certificates"`
	// The provider-assigned unique ID for this managed resource.
	Id       string   `pulumi:"id"`
	Statuses []string `pulumi:"statuses"`
}

func GetMtlskeystoreAccountCaCertificatesOutput(ctx *pulumi.Context, args GetMtlskeystoreAccountCaCertificatesOutputArgs, opts ...pulumi.InvokeOption) GetMtlskeystoreAccountCaCertificatesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMtlskeystoreAccountCaCertificatesResultOutput, error) {
			args := v.(GetMtlskeystoreAccountCaCertificatesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("akamai:index/getMtlskeystoreAccountCaCertificates:getMtlskeystoreAccountCaCertificates", args, GetMtlskeystoreAccountCaCertificatesResultOutput{}, options).(GetMtlskeystoreAccountCaCertificatesResultOutput), nil
		}).(GetMtlskeystoreAccountCaCertificatesResultOutput)
}

// A collection of arguments for invoking getMtlskeystoreAccountCaCertificates.
type GetMtlskeystoreAccountCaCertificatesOutputArgs struct {
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
}

func (GetMtlskeystoreAccountCaCertificatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMtlskeystoreAccountCaCertificatesArgs)(nil)).Elem()
}

// A collection of values returned by getMtlskeystoreAccountCaCertificates.
type GetMtlskeystoreAccountCaCertificatesResultOutput struct{ *pulumi.OutputState }

func (GetMtlskeystoreAccountCaCertificatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMtlskeystoreAccountCaCertificatesResult)(nil)).Elem()
}

func (o GetMtlskeystoreAccountCaCertificatesResultOutput) ToGetMtlskeystoreAccountCaCertificatesResultOutput() GetMtlskeystoreAccountCaCertificatesResultOutput {
	return o
}

func (o GetMtlskeystoreAccountCaCertificatesResultOutput) ToGetMtlskeystoreAccountCaCertificatesResultOutputWithContext(ctx context.Context) GetMtlskeystoreAccountCaCertificatesResultOutput {
	return o
}

func (o GetMtlskeystoreAccountCaCertificatesResultOutput) Certificates() GetMtlskeystoreAccountCaCertificatesCertificateArrayOutput {
	return o.ApplyT(func(v GetMtlskeystoreAccountCaCertificatesResult) []GetMtlskeystoreAccountCaCertificatesCertificate {
		return v.Certificates
	}).(GetMtlskeystoreAccountCaCertificatesCertificateArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMtlskeystoreAccountCaCertificatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMtlskeystoreAccountCaCertificatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMtlskeystoreAccountCaCertificatesResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMtlskeystoreAccountCaCertificatesResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMtlskeystoreAccountCaCertificatesResultOutput{})
}
