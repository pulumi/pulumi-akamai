// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `getPropertyRulesTemplate` data source lets you configure a rule tree through the use of JSON template files. A rule tree is a nested block of property
// rules in JSON format that include match criteria and behaviors.
//
// With this data source you define the location of the JSON template files and provide information about any user-defined variables included within the templates.
//
// The template format used in this data source matches those used in the [Property Manager CLI](https://learn.akamai.com/en-us/learn_akamai/getting_started_with_akamai_developers/developer_tools/getstartedpmcli.html#addanewsnippet).
//
// You can pass user-defined variables by supplying either:
//
// * paths to `variableDefinitions.json` and `variables.json` with syntax used in Property Manager CLI, or
// * a set of provider variables.
//
// ## Referencing sub-files from a template
//
// You can split each template out into a series of smaller template files. To add
// them to this data source, you need to include them in the currently loaded file,
// which corresponds to the value in the `templateFile` argument.  For example, to
// include `example-file.json` from the `property-snippets` directory, use this syntax
// including the quotes: `"#include:example-file.json"`.  Make sure the `property-snippets` folder contains only `.json` files.
// All files are resolved in relation to the directory that contains the starting template file.
//
// ## Inserting variables in a template
//
// You can also add variables to a template by using a string like `â€œ${env.<variableName>}"`. You'll need the quotes here too.\
// These variables follow the format used in the [Property Manager CLI](https://github.com/akamai/cli-property-manager#update-the-variabledefinitions-file).  They differ from the provider variables which should resolve normally.
//
// ## Example Usage
// ## Attributes reference
//
// This data source returns this attribute:
//
// * `json` - The fully expanded template with variables and all nested templates resolved.
func GetPropertyRulesTemplate(ctx *pulumi.Context, args *GetPropertyRulesTemplateArgs, opts ...pulumi.InvokeOption) (*GetPropertyRulesTemplateResult, error) {
	var rv GetPropertyRulesTemplateResult
	err := ctx.Invoke("akamai:index/getPropertyRulesTemplate:getPropertyRulesTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPropertyRulesTemplate.
type GetPropertyRulesTemplateArgs struct {
	// The absolute path to your top-level JSON template file. The top-level template combines smaller, nested JSON templates to form your property rule tree.
	TemplateFile      *string                            `pulumi:"templateFile"`
	Templates         []GetPropertyRulesTemplateTemplate `pulumi:"templates"`
	VarDefinitionFile *string                            `pulumi:"varDefinitionFile"`
	VarValuesFile     *string                            `pulumi:"varValuesFile"`
	// A definition of a variable. Variables aren't required and you can use multiple ones if needed. This argument conflicts with the `variableDefinitionFile` and `variableValuesFile` arguments. A `variables` block includes:
	Variables []GetPropertyRulesTemplateVariable `pulumi:"variables"`
}

// A collection of values returned by getPropertyRulesTemplate.
type GetPropertyRulesTemplateResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                string                             `pulumi:"id"`
	Json              string                             `pulumi:"json"`
	TemplateFile      *string                            `pulumi:"templateFile"`
	Templates         []GetPropertyRulesTemplateTemplate `pulumi:"templates"`
	VarDefinitionFile *string                            `pulumi:"varDefinitionFile"`
	VarValuesFile     *string                            `pulumi:"varValuesFile"`
	Variables         []GetPropertyRulesTemplateVariable `pulumi:"variables"`
}

func GetPropertyRulesTemplateOutput(ctx *pulumi.Context, args GetPropertyRulesTemplateOutputArgs, opts ...pulumi.InvokeOption) GetPropertyRulesTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPropertyRulesTemplateResult, error) {
			args := v.(GetPropertyRulesTemplateArgs)
			r, err := GetPropertyRulesTemplate(ctx, &args, opts...)
			return *r, err
		}).(GetPropertyRulesTemplateResultOutput)
}

// A collection of arguments for invoking getPropertyRulesTemplate.
type GetPropertyRulesTemplateOutputArgs struct {
	// The absolute path to your top-level JSON template file. The top-level template combines smaller, nested JSON templates to form your property rule tree.
	TemplateFile      pulumi.StringPtrInput                      `pulumi:"templateFile"`
	Templates         GetPropertyRulesTemplateTemplateArrayInput `pulumi:"templates"`
	VarDefinitionFile pulumi.StringPtrInput                      `pulumi:"varDefinitionFile"`
	VarValuesFile     pulumi.StringPtrInput                      `pulumi:"varValuesFile"`
	// A definition of a variable. Variables aren't required and you can use multiple ones if needed. This argument conflicts with the `variableDefinitionFile` and `variableValuesFile` arguments. A `variables` block includes:
	Variables GetPropertyRulesTemplateVariableArrayInput `pulumi:"variables"`
}

func (GetPropertyRulesTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getPropertyRulesTemplate.
type GetPropertyRulesTemplateResultOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesTemplateResult)(nil)).Elem()
}

func (o GetPropertyRulesTemplateResultOutput) ToGetPropertyRulesTemplateResultOutput() GetPropertyRulesTemplateResultOutput {
	return o
}

func (o GetPropertyRulesTemplateResultOutput) ToGetPropertyRulesTemplateResultOutputWithContext(ctx context.Context) GetPropertyRulesTemplateResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPropertyRulesTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPropertyRulesTemplateResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesTemplateResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetPropertyRulesTemplateResultOutput) TemplateFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesTemplateResult) *string { return v.TemplateFile }).(pulumi.StringPtrOutput)
}

func (o GetPropertyRulesTemplateResultOutput) Templates() GetPropertyRulesTemplateTemplateArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesTemplateResult) []GetPropertyRulesTemplateTemplate { return v.Templates }).(GetPropertyRulesTemplateTemplateArrayOutput)
}

func (o GetPropertyRulesTemplateResultOutput) VarDefinitionFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesTemplateResult) *string { return v.VarDefinitionFile }).(pulumi.StringPtrOutput)
}

func (o GetPropertyRulesTemplateResultOutput) VarValuesFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesTemplateResult) *string { return v.VarValuesFile }).(pulumi.StringPtrOutput)
}

func (o GetPropertyRulesTemplateResultOutput) Variables() GetPropertyRulesTemplateVariableArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesTemplateResult) []GetPropertyRulesTemplateVariable { return v.Variables }).(GetPropertyRulesTemplateVariableArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPropertyRulesTemplateResultOutput{})
}
