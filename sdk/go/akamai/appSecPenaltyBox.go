// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppSecPenaltyBox struct {
	pulumi.CustomResourceState

	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// The action to be taken when the penalty box is triggered
	PenaltyBoxAction pulumi.StringOutput `pulumi:"penaltyBoxAction"`
	// Whether to enable the penalty box for the specified security policy
	PenaltyBoxProtection pulumi.BoolOutput `pulumi:"penaltyBoxProtection"`
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewAppSecPenaltyBox registers a new resource with the given unique name, arguments, and options.
func NewAppSecPenaltyBox(ctx *pulumi.Context,
	name string, args *AppSecPenaltyBoxArgs, opts ...pulumi.ResourceOption) (*AppSecPenaltyBox, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.PenaltyBoxAction == nil {
		return nil, errors.New("invalid value for required argument 'PenaltyBoxAction'")
	}
	if args.PenaltyBoxProtection == nil {
		return nil, errors.New("invalid value for required argument 'PenaltyBoxProtection'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppSecPenaltyBox
	err := ctx.RegisterResource("akamai:index/appSecPenaltyBox:AppSecPenaltyBox", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecPenaltyBox gets an existing AppSecPenaltyBox resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecPenaltyBox(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecPenaltyBoxState, opts ...pulumi.ResourceOption) (*AppSecPenaltyBox, error) {
	var resource AppSecPenaltyBox
	err := ctx.ReadResource("akamai:index/appSecPenaltyBox:AppSecPenaltyBox", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecPenaltyBox resources.
type appSecPenaltyBoxState struct {
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// The action to be taken when the penalty box is triggered
	PenaltyBoxAction *string `pulumi:"penaltyBoxAction"`
	// Whether to enable the penalty box for the specified security policy
	PenaltyBoxProtection *bool `pulumi:"penaltyBoxProtection"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppSecPenaltyBoxState struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// The action to be taken when the penalty box is triggered
	PenaltyBoxAction pulumi.StringPtrInput
	// Whether to enable the penalty box for the specified security policy
	PenaltyBoxProtection pulumi.BoolPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecPenaltyBoxState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecPenaltyBoxState)(nil)).Elem()
}

type appSecPenaltyBoxArgs struct {
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// The action to be taken when the penalty box is triggered
	PenaltyBoxAction string `pulumi:"penaltyBoxAction"`
	// Whether to enable the penalty box for the specified security policy
	PenaltyBoxProtection bool `pulumi:"penaltyBoxProtection"`
	// Unique identifier of the security policy
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppSecPenaltyBox resource.
type AppSecPenaltyBoxArgs struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// The action to be taken when the penalty box is triggered
	PenaltyBoxAction pulumi.StringInput
	// Whether to enable the penalty box for the specified security policy
	PenaltyBoxProtection pulumi.BoolInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringInput
}

func (AppSecPenaltyBoxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecPenaltyBoxArgs)(nil)).Elem()
}

type AppSecPenaltyBoxInput interface {
	pulumi.Input

	ToAppSecPenaltyBoxOutput() AppSecPenaltyBoxOutput
	ToAppSecPenaltyBoxOutputWithContext(ctx context.Context) AppSecPenaltyBoxOutput
}

func (*AppSecPenaltyBox) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecPenaltyBox)(nil)).Elem()
}

func (i *AppSecPenaltyBox) ToAppSecPenaltyBoxOutput() AppSecPenaltyBoxOutput {
	return i.ToAppSecPenaltyBoxOutputWithContext(context.Background())
}

func (i *AppSecPenaltyBox) ToAppSecPenaltyBoxOutputWithContext(ctx context.Context) AppSecPenaltyBoxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecPenaltyBoxOutput)
}

// AppSecPenaltyBoxArrayInput is an input type that accepts AppSecPenaltyBoxArray and AppSecPenaltyBoxArrayOutput values.
// You can construct a concrete instance of `AppSecPenaltyBoxArrayInput` via:
//
//	AppSecPenaltyBoxArray{ AppSecPenaltyBoxArgs{...} }
type AppSecPenaltyBoxArrayInput interface {
	pulumi.Input

	ToAppSecPenaltyBoxArrayOutput() AppSecPenaltyBoxArrayOutput
	ToAppSecPenaltyBoxArrayOutputWithContext(context.Context) AppSecPenaltyBoxArrayOutput
}

type AppSecPenaltyBoxArray []AppSecPenaltyBoxInput

func (AppSecPenaltyBoxArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecPenaltyBox)(nil)).Elem()
}

func (i AppSecPenaltyBoxArray) ToAppSecPenaltyBoxArrayOutput() AppSecPenaltyBoxArrayOutput {
	return i.ToAppSecPenaltyBoxArrayOutputWithContext(context.Background())
}

func (i AppSecPenaltyBoxArray) ToAppSecPenaltyBoxArrayOutputWithContext(ctx context.Context) AppSecPenaltyBoxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecPenaltyBoxArrayOutput)
}

// AppSecPenaltyBoxMapInput is an input type that accepts AppSecPenaltyBoxMap and AppSecPenaltyBoxMapOutput values.
// You can construct a concrete instance of `AppSecPenaltyBoxMapInput` via:
//
//	AppSecPenaltyBoxMap{ "key": AppSecPenaltyBoxArgs{...} }
type AppSecPenaltyBoxMapInput interface {
	pulumi.Input

	ToAppSecPenaltyBoxMapOutput() AppSecPenaltyBoxMapOutput
	ToAppSecPenaltyBoxMapOutputWithContext(context.Context) AppSecPenaltyBoxMapOutput
}

type AppSecPenaltyBoxMap map[string]AppSecPenaltyBoxInput

func (AppSecPenaltyBoxMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecPenaltyBox)(nil)).Elem()
}

func (i AppSecPenaltyBoxMap) ToAppSecPenaltyBoxMapOutput() AppSecPenaltyBoxMapOutput {
	return i.ToAppSecPenaltyBoxMapOutputWithContext(context.Background())
}

func (i AppSecPenaltyBoxMap) ToAppSecPenaltyBoxMapOutputWithContext(ctx context.Context) AppSecPenaltyBoxMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecPenaltyBoxMapOutput)
}

type AppSecPenaltyBoxOutput struct{ *pulumi.OutputState }

func (AppSecPenaltyBoxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecPenaltyBox)(nil)).Elem()
}

func (o AppSecPenaltyBoxOutput) ToAppSecPenaltyBoxOutput() AppSecPenaltyBoxOutput {
	return o
}

func (o AppSecPenaltyBoxOutput) ToAppSecPenaltyBoxOutputWithContext(ctx context.Context) AppSecPenaltyBoxOutput {
	return o
}

// Unique identifier of the security configuration
func (o AppSecPenaltyBoxOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecPenaltyBox) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// The action to be taken when the penalty box is triggered
func (o AppSecPenaltyBoxOutput) PenaltyBoxAction() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecPenaltyBox) pulumi.StringOutput { return v.PenaltyBoxAction }).(pulumi.StringOutput)
}

// Whether to enable the penalty box for the specified security policy
func (o AppSecPenaltyBoxOutput) PenaltyBoxProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppSecPenaltyBox) pulumi.BoolOutput { return v.PenaltyBoxProtection }).(pulumi.BoolOutput)
}

// Unique identifier of the security policy
func (o AppSecPenaltyBoxOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecPenaltyBox) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type AppSecPenaltyBoxArrayOutput struct{ *pulumi.OutputState }

func (AppSecPenaltyBoxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecPenaltyBox)(nil)).Elem()
}

func (o AppSecPenaltyBoxArrayOutput) ToAppSecPenaltyBoxArrayOutput() AppSecPenaltyBoxArrayOutput {
	return o
}

func (o AppSecPenaltyBoxArrayOutput) ToAppSecPenaltyBoxArrayOutputWithContext(ctx context.Context) AppSecPenaltyBoxArrayOutput {
	return o
}

func (o AppSecPenaltyBoxArrayOutput) Index(i pulumi.IntInput) AppSecPenaltyBoxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecPenaltyBox {
		return vs[0].([]*AppSecPenaltyBox)[vs[1].(int)]
	}).(AppSecPenaltyBoxOutput)
}

type AppSecPenaltyBoxMapOutput struct{ *pulumi.OutputState }

func (AppSecPenaltyBoxMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecPenaltyBox)(nil)).Elem()
}

func (o AppSecPenaltyBoxMapOutput) ToAppSecPenaltyBoxMapOutput() AppSecPenaltyBoxMapOutput {
	return o
}

func (o AppSecPenaltyBoxMapOutput) ToAppSecPenaltyBoxMapOutputWithContext(ctx context.Context) AppSecPenaltyBoxMapOutput {
	return o
}

func (o AppSecPenaltyBoxMapOutput) MapIndex(k pulumi.StringInput) AppSecPenaltyBoxOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecPenaltyBox {
		return vs[0].(map[string]*AppSecPenaltyBox)[vs[1].(string)]
	}).(AppSecPenaltyBoxOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecPenaltyBoxInput)(nil)).Elem(), &AppSecPenaltyBox{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecPenaltyBoxArrayInput)(nil)).Elem(), AppSecPenaltyBoxArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecPenaltyBoxMapInput)(nil)).Elem(), AppSecPenaltyBoxMap{})
	pulumi.RegisterOutputType(AppSecPenaltyBoxOutput{})
	pulumi.RegisterOutputType(AppSecPenaltyBoxArrayOutput{})
	pulumi.RegisterOutputType(AppSecPenaltyBoxMapOutput{})
}
