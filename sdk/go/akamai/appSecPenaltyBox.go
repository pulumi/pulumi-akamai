// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security policy
//
// Modifies the penalty box settings for a security policy.
// When the penalty box is enabled for a policy, clients that trigger a WAF Deny action are placed in the “penalty box”.
// There, the action you select for penalty box (either Alert or Deny ) continues to apply to any requests from that client for the next 10 minutes.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/match-targets/sequence](https://techdocs.akamai.com/application-security/reference/put-policy-penalty-box)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
//				Name: pulumi.StringRef("Documentation"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = akamai.NewAppSecPenaltyBox(ctx, "penaltyBox", &akamai.AppSecPenaltyBoxArgs{
//				ConfigId:             *pulumi.Int(configuration.ConfigId),
//				SecurityPolicyId:     pulumi.String("gms1_134637"),
//				PenaltyBoxProtection: pulumi.Bool(true),
//				PenaltyBoxAction:     pulumi.String("deny"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AppSecPenaltyBox struct {
	pulumi.CustomResourceState

	// . Unique identifier of the security configuration associated with the penalty box settings being modified.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// . Action taken any time penalty box protection is triggered. Allowed values are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	PenaltyBoxAction pulumi.StringOutput `pulumi:"penaltyBoxAction"`
	// . Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.
	PenaltyBoxProtection pulumi.BoolOutput `pulumi:"penaltyBoxProtection"`
	// . Unique identifier of the security policy associated with the penalty box settings being modified.
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewAppSecPenaltyBox registers a new resource with the given unique name, arguments, and options.
func NewAppSecPenaltyBox(ctx *pulumi.Context,
	name string, args *AppSecPenaltyBoxArgs, opts ...pulumi.ResourceOption) (*AppSecPenaltyBox, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.PenaltyBoxAction == nil {
		return nil, errors.New("invalid value for required argument 'PenaltyBoxAction'")
	}
	if args.PenaltyBoxProtection == nil {
		return nil, errors.New("invalid value for required argument 'PenaltyBoxProtection'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	var resource AppSecPenaltyBox
	err := ctx.RegisterResource("akamai:index/appSecPenaltyBox:AppSecPenaltyBox", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecPenaltyBox gets an existing AppSecPenaltyBox resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecPenaltyBox(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecPenaltyBoxState, opts ...pulumi.ResourceOption) (*AppSecPenaltyBox, error) {
	var resource AppSecPenaltyBox
	err := ctx.ReadResource("akamai:index/appSecPenaltyBox:AppSecPenaltyBox", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecPenaltyBox resources.
type appSecPenaltyBoxState struct {
	// . Unique identifier of the security configuration associated with the penalty box settings being modified.
	ConfigId *int `pulumi:"configId"`
	// . Action taken any time penalty box protection is triggered. Allowed values are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	PenaltyBoxAction *string `pulumi:"penaltyBoxAction"`
	// . Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.
	PenaltyBoxProtection *bool `pulumi:"penaltyBoxProtection"`
	// . Unique identifier of the security policy associated with the penalty box settings being modified.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppSecPenaltyBoxState struct {
	// . Unique identifier of the security configuration associated with the penalty box settings being modified.
	ConfigId pulumi.IntPtrInput
	// . Action taken any time penalty box protection is triggered. Allowed values are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	PenaltyBoxAction pulumi.StringPtrInput
	// . Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.
	PenaltyBoxProtection pulumi.BoolPtrInput
	// . Unique identifier of the security policy associated with the penalty box settings being modified.
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecPenaltyBoxState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecPenaltyBoxState)(nil)).Elem()
}

type appSecPenaltyBoxArgs struct {
	// . Unique identifier of the security configuration associated with the penalty box settings being modified.
	ConfigId int `pulumi:"configId"`
	// . Action taken any time penalty box protection is triggered. Allowed values are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	PenaltyBoxAction string `pulumi:"penaltyBoxAction"`
	// . Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.
	PenaltyBoxProtection bool `pulumi:"penaltyBoxProtection"`
	// . Unique identifier of the security policy associated with the penalty box settings being modified.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppSecPenaltyBox resource.
type AppSecPenaltyBoxArgs struct {
	// . Unique identifier of the security configuration associated with the penalty box settings being modified.
	ConfigId pulumi.IntInput
	// . Action taken any time penalty box protection is triggered. Allowed values are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	PenaltyBoxAction pulumi.StringInput
	// . Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.
	PenaltyBoxProtection pulumi.BoolInput
	// . Unique identifier of the security policy associated with the penalty box settings being modified.
	SecurityPolicyId pulumi.StringInput
}

func (AppSecPenaltyBoxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecPenaltyBoxArgs)(nil)).Elem()
}

type AppSecPenaltyBoxInput interface {
	pulumi.Input

	ToAppSecPenaltyBoxOutput() AppSecPenaltyBoxOutput
	ToAppSecPenaltyBoxOutputWithContext(ctx context.Context) AppSecPenaltyBoxOutput
}

func (*AppSecPenaltyBox) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecPenaltyBox)(nil)).Elem()
}

func (i *AppSecPenaltyBox) ToAppSecPenaltyBoxOutput() AppSecPenaltyBoxOutput {
	return i.ToAppSecPenaltyBoxOutputWithContext(context.Background())
}

func (i *AppSecPenaltyBox) ToAppSecPenaltyBoxOutputWithContext(ctx context.Context) AppSecPenaltyBoxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecPenaltyBoxOutput)
}

// AppSecPenaltyBoxArrayInput is an input type that accepts AppSecPenaltyBoxArray and AppSecPenaltyBoxArrayOutput values.
// You can construct a concrete instance of `AppSecPenaltyBoxArrayInput` via:
//
//	AppSecPenaltyBoxArray{ AppSecPenaltyBoxArgs{...} }
type AppSecPenaltyBoxArrayInput interface {
	pulumi.Input

	ToAppSecPenaltyBoxArrayOutput() AppSecPenaltyBoxArrayOutput
	ToAppSecPenaltyBoxArrayOutputWithContext(context.Context) AppSecPenaltyBoxArrayOutput
}

type AppSecPenaltyBoxArray []AppSecPenaltyBoxInput

func (AppSecPenaltyBoxArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecPenaltyBox)(nil)).Elem()
}

func (i AppSecPenaltyBoxArray) ToAppSecPenaltyBoxArrayOutput() AppSecPenaltyBoxArrayOutput {
	return i.ToAppSecPenaltyBoxArrayOutputWithContext(context.Background())
}

func (i AppSecPenaltyBoxArray) ToAppSecPenaltyBoxArrayOutputWithContext(ctx context.Context) AppSecPenaltyBoxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecPenaltyBoxArrayOutput)
}

// AppSecPenaltyBoxMapInput is an input type that accepts AppSecPenaltyBoxMap and AppSecPenaltyBoxMapOutput values.
// You can construct a concrete instance of `AppSecPenaltyBoxMapInput` via:
//
//	AppSecPenaltyBoxMap{ "key": AppSecPenaltyBoxArgs{...} }
type AppSecPenaltyBoxMapInput interface {
	pulumi.Input

	ToAppSecPenaltyBoxMapOutput() AppSecPenaltyBoxMapOutput
	ToAppSecPenaltyBoxMapOutputWithContext(context.Context) AppSecPenaltyBoxMapOutput
}

type AppSecPenaltyBoxMap map[string]AppSecPenaltyBoxInput

func (AppSecPenaltyBoxMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecPenaltyBox)(nil)).Elem()
}

func (i AppSecPenaltyBoxMap) ToAppSecPenaltyBoxMapOutput() AppSecPenaltyBoxMapOutput {
	return i.ToAppSecPenaltyBoxMapOutputWithContext(context.Background())
}

func (i AppSecPenaltyBoxMap) ToAppSecPenaltyBoxMapOutputWithContext(ctx context.Context) AppSecPenaltyBoxMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecPenaltyBoxMapOutput)
}

type AppSecPenaltyBoxOutput struct{ *pulumi.OutputState }

func (AppSecPenaltyBoxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecPenaltyBox)(nil)).Elem()
}

func (o AppSecPenaltyBoxOutput) ToAppSecPenaltyBoxOutput() AppSecPenaltyBoxOutput {
	return o
}

func (o AppSecPenaltyBoxOutput) ToAppSecPenaltyBoxOutputWithContext(ctx context.Context) AppSecPenaltyBoxOutput {
	return o
}

// . Unique identifier of the security configuration associated with the penalty box settings being modified.
func (o AppSecPenaltyBoxOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecPenaltyBox) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// . Action taken any time penalty box protection is triggered. Allowed values are:
// - **alert**. Record the event.
// - **deny**. Block the request.
// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
// - **none**. Take no action.
func (o AppSecPenaltyBoxOutput) PenaltyBoxAction() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecPenaltyBox) pulumi.StringOutput { return v.PenaltyBoxAction }).(pulumi.StringOutput)
}

// . Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.
func (o AppSecPenaltyBoxOutput) PenaltyBoxProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppSecPenaltyBox) pulumi.BoolOutput { return v.PenaltyBoxProtection }).(pulumi.BoolOutput)
}

// . Unique identifier of the security policy associated with the penalty box settings being modified.
func (o AppSecPenaltyBoxOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecPenaltyBox) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type AppSecPenaltyBoxArrayOutput struct{ *pulumi.OutputState }

func (AppSecPenaltyBoxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecPenaltyBox)(nil)).Elem()
}

func (o AppSecPenaltyBoxArrayOutput) ToAppSecPenaltyBoxArrayOutput() AppSecPenaltyBoxArrayOutput {
	return o
}

func (o AppSecPenaltyBoxArrayOutput) ToAppSecPenaltyBoxArrayOutputWithContext(ctx context.Context) AppSecPenaltyBoxArrayOutput {
	return o
}

func (o AppSecPenaltyBoxArrayOutput) Index(i pulumi.IntInput) AppSecPenaltyBoxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecPenaltyBox {
		return vs[0].([]*AppSecPenaltyBox)[vs[1].(int)]
	}).(AppSecPenaltyBoxOutput)
}

type AppSecPenaltyBoxMapOutput struct{ *pulumi.OutputState }

func (AppSecPenaltyBoxMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecPenaltyBox)(nil)).Elem()
}

func (o AppSecPenaltyBoxMapOutput) ToAppSecPenaltyBoxMapOutput() AppSecPenaltyBoxMapOutput {
	return o
}

func (o AppSecPenaltyBoxMapOutput) ToAppSecPenaltyBoxMapOutputWithContext(ctx context.Context) AppSecPenaltyBoxMapOutput {
	return o
}

func (o AppSecPenaltyBoxMapOutput) MapIndex(k pulumi.StringInput) AppSecPenaltyBoxOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecPenaltyBox {
		return vs[0].(map[string]*AppSecPenaltyBox)[vs[1].(string)]
	}).(AppSecPenaltyBoxOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecPenaltyBoxInput)(nil)).Elem(), &AppSecPenaltyBox{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecPenaltyBoxArrayInput)(nil)).Elem(), AppSecPenaltyBoxArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecPenaltyBoxMapInput)(nil)).Elem(), AppSecPenaltyBoxMap{})
	pulumi.RegisterOutputType(AppSecPenaltyBoxOutput{})
	pulumi.RegisterOutputType(AppSecPenaltyBoxArrayOutput{})
	pulumi.RegisterOutputType(AppSecPenaltyBoxMapOutput{})
}
