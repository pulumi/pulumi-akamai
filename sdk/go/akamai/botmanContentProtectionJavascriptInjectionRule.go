// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v10/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanContentProtectionJavascriptInjectionRule struct {
	pulumi.CustomResourceState

	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// The content protection JavaScript injection rule
	ContentProtectionJavascriptInjectionRule pulumi.StringOutput `pulumi:"contentProtectionJavascriptInjectionRule"`
	// Unique identifier of a content protection JavaScript injection rule
	ContentProtectionJavascriptInjectionRuleId pulumi.StringOutput `pulumi:"contentProtectionJavascriptInjectionRuleId"`
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewBotmanContentProtectionJavascriptInjectionRule registers a new resource with the given unique name, arguments, and options.
func NewBotmanContentProtectionJavascriptInjectionRule(ctx *pulumi.Context,
	name string, args *BotmanContentProtectionJavascriptInjectionRuleArgs, opts ...pulumi.ResourceOption) (*BotmanContentProtectionJavascriptInjectionRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.ContentProtectionJavascriptInjectionRule == nil {
		return nil, errors.New("invalid value for required argument 'ContentProtectionJavascriptInjectionRule'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BotmanContentProtectionJavascriptInjectionRule
	err := ctx.RegisterResource("akamai:index/botmanContentProtectionJavascriptInjectionRule:BotmanContentProtectionJavascriptInjectionRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanContentProtectionJavascriptInjectionRule gets an existing BotmanContentProtectionJavascriptInjectionRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanContentProtectionJavascriptInjectionRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanContentProtectionJavascriptInjectionRuleState, opts ...pulumi.ResourceOption) (*BotmanContentProtectionJavascriptInjectionRule, error) {
	var resource BotmanContentProtectionJavascriptInjectionRule
	err := ctx.ReadResource("akamai:index/botmanContentProtectionJavascriptInjectionRule:BotmanContentProtectionJavascriptInjectionRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanContentProtectionJavascriptInjectionRule resources.
type botmanContentProtectionJavascriptInjectionRuleState struct {
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// The content protection JavaScript injection rule
	ContentProtectionJavascriptInjectionRule *string `pulumi:"contentProtectionJavascriptInjectionRule"`
	// Unique identifier of a content protection JavaScript injection rule
	ContentProtectionJavascriptInjectionRuleId *string `pulumi:"contentProtectionJavascriptInjectionRuleId"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type BotmanContentProtectionJavascriptInjectionRuleState struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// The content protection JavaScript injection rule
	ContentProtectionJavascriptInjectionRule pulumi.StringPtrInput
	// Unique identifier of a content protection JavaScript injection rule
	ContentProtectionJavascriptInjectionRuleId pulumi.StringPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
}

func (BotmanContentProtectionJavascriptInjectionRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanContentProtectionJavascriptInjectionRuleState)(nil)).Elem()
}

type botmanContentProtectionJavascriptInjectionRuleArgs struct {
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// The content protection JavaScript injection rule
	ContentProtectionJavascriptInjectionRule string `pulumi:"contentProtectionJavascriptInjectionRule"`
	// Unique identifier of the security policy
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a BotmanContentProtectionJavascriptInjectionRule resource.
type BotmanContentProtectionJavascriptInjectionRuleArgs struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// The content protection JavaScript injection rule
	ContentProtectionJavascriptInjectionRule pulumi.StringInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringInput
}

func (BotmanContentProtectionJavascriptInjectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanContentProtectionJavascriptInjectionRuleArgs)(nil)).Elem()
}

type BotmanContentProtectionJavascriptInjectionRuleInput interface {
	pulumi.Input

	ToBotmanContentProtectionJavascriptInjectionRuleOutput() BotmanContentProtectionJavascriptInjectionRuleOutput
	ToBotmanContentProtectionJavascriptInjectionRuleOutputWithContext(ctx context.Context) BotmanContentProtectionJavascriptInjectionRuleOutput
}

func (*BotmanContentProtectionJavascriptInjectionRule) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanContentProtectionJavascriptInjectionRule)(nil)).Elem()
}

func (i *BotmanContentProtectionJavascriptInjectionRule) ToBotmanContentProtectionJavascriptInjectionRuleOutput() BotmanContentProtectionJavascriptInjectionRuleOutput {
	return i.ToBotmanContentProtectionJavascriptInjectionRuleOutputWithContext(context.Background())
}

func (i *BotmanContentProtectionJavascriptInjectionRule) ToBotmanContentProtectionJavascriptInjectionRuleOutputWithContext(ctx context.Context) BotmanContentProtectionJavascriptInjectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanContentProtectionJavascriptInjectionRuleOutput)
}

// BotmanContentProtectionJavascriptInjectionRuleArrayInput is an input type that accepts BotmanContentProtectionJavascriptInjectionRuleArray and BotmanContentProtectionJavascriptInjectionRuleArrayOutput values.
// You can construct a concrete instance of `BotmanContentProtectionJavascriptInjectionRuleArrayInput` via:
//
//	BotmanContentProtectionJavascriptInjectionRuleArray{ BotmanContentProtectionJavascriptInjectionRuleArgs{...} }
type BotmanContentProtectionJavascriptInjectionRuleArrayInput interface {
	pulumi.Input

	ToBotmanContentProtectionJavascriptInjectionRuleArrayOutput() BotmanContentProtectionJavascriptInjectionRuleArrayOutput
	ToBotmanContentProtectionJavascriptInjectionRuleArrayOutputWithContext(context.Context) BotmanContentProtectionJavascriptInjectionRuleArrayOutput
}

type BotmanContentProtectionJavascriptInjectionRuleArray []BotmanContentProtectionJavascriptInjectionRuleInput

func (BotmanContentProtectionJavascriptInjectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanContentProtectionJavascriptInjectionRule)(nil)).Elem()
}

func (i BotmanContentProtectionJavascriptInjectionRuleArray) ToBotmanContentProtectionJavascriptInjectionRuleArrayOutput() BotmanContentProtectionJavascriptInjectionRuleArrayOutput {
	return i.ToBotmanContentProtectionJavascriptInjectionRuleArrayOutputWithContext(context.Background())
}

func (i BotmanContentProtectionJavascriptInjectionRuleArray) ToBotmanContentProtectionJavascriptInjectionRuleArrayOutputWithContext(ctx context.Context) BotmanContentProtectionJavascriptInjectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanContentProtectionJavascriptInjectionRuleArrayOutput)
}

// BotmanContentProtectionJavascriptInjectionRuleMapInput is an input type that accepts BotmanContentProtectionJavascriptInjectionRuleMap and BotmanContentProtectionJavascriptInjectionRuleMapOutput values.
// You can construct a concrete instance of `BotmanContentProtectionJavascriptInjectionRuleMapInput` via:
//
//	BotmanContentProtectionJavascriptInjectionRuleMap{ "key": BotmanContentProtectionJavascriptInjectionRuleArgs{...} }
type BotmanContentProtectionJavascriptInjectionRuleMapInput interface {
	pulumi.Input

	ToBotmanContentProtectionJavascriptInjectionRuleMapOutput() BotmanContentProtectionJavascriptInjectionRuleMapOutput
	ToBotmanContentProtectionJavascriptInjectionRuleMapOutputWithContext(context.Context) BotmanContentProtectionJavascriptInjectionRuleMapOutput
}

type BotmanContentProtectionJavascriptInjectionRuleMap map[string]BotmanContentProtectionJavascriptInjectionRuleInput

func (BotmanContentProtectionJavascriptInjectionRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanContentProtectionJavascriptInjectionRule)(nil)).Elem()
}

func (i BotmanContentProtectionJavascriptInjectionRuleMap) ToBotmanContentProtectionJavascriptInjectionRuleMapOutput() BotmanContentProtectionJavascriptInjectionRuleMapOutput {
	return i.ToBotmanContentProtectionJavascriptInjectionRuleMapOutputWithContext(context.Background())
}

func (i BotmanContentProtectionJavascriptInjectionRuleMap) ToBotmanContentProtectionJavascriptInjectionRuleMapOutputWithContext(ctx context.Context) BotmanContentProtectionJavascriptInjectionRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanContentProtectionJavascriptInjectionRuleMapOutput)
}

type BotmanContentProtectionJavascriptInjectionRuleOutput struct{ *pulumi.OutputState }

func (BotmanContentProtectionJavascriptInjectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanContentProtectionJavascriptInjectionRule)(nil)).Elem()
}

func (o BotmanContentProtectionJavascriptInjectionRuleOutput) ToBotmanContentProtectionJavascriptInjectionRuleOutput() BotmanContentProtectionJavascriptInjectionRuleOutput {
	return o
}

func (o BotmanContentProtectionJavascriptInjectionRuleOutput) ToBotmanContentProtectionJavascriptInjectionRuleOutputWithContext(ctx context.Context) BotmanContentProtectionJavascriptInjectionRuleOutput {
	return o
}

// Unique identifier of the security configuration
func (o BotmanContentProtectionJavascriptInjectionRuleOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanContentProtectionJavascriptInjectionRule) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// The content protection JavaScript injection rule
func (o BotmanContentProtectionJavascriptInjectionRuleOutput) ContentProtectionJavascriptInjectionRule() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanContentProtectionJavascriptInjectionRule) pulumi.StringOutput {
		return v.ContentProtectionJavascriptInjectionRule
	}).(pulumi.StringOutput)
}

// Unique identifier of a content protection JavaScript injection rule
func (o BotmanContentProtectionJavascriptInjectionRuleOutput) ContentProtectionJavascriptInjectionRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanContentProtectionJavascriptInjectionRule) pulumi.StringOutput {
		return v.ContentProtectionJavascriptInjectionRuleId
	}).(pulumi.StringOutput)
}

// Unique identifier of the security policy
func (o BotmanContentProtectionJavascriptInjectionRuleOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanContentProtectionJavascriptInjectionRule) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type BotmanContentProtectionJavascriptInjectionRuleArrayOutput struct{ *pulumi.OutputState }

func (BotmanContentProtectionJavascriptInjectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanContentProtectionJavascriptInjectionRule)(nil)).Elem()
}

func (o BotmanContentProtectionJavascriptInjectionRuleArrayOutput) ToBotmanContentProtectionJavascriptInjectionRuleArrayOutput() BotmanContentProtectionJavascriptInjectionRuleArrayOutput {
	return o
}

func (o BotmanContentProtectionJavascriptInjectionRuleArrayOutput) ToBotmanContentProtectionJavascriptInjectionRuleArrayOutputWithContext(ctx context.Context) BotmanContentProtectionJavascriptInjectionRuleArrayOutput {
	return o
}

func (o BotmanContentProtectionJavascriptInjectionRuleArrayOutput) Index(i pulumi.IntInput) BotmanContentProtectionJavascriptInjectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanContentProtectionJavascriptInjectionRule {
		return vs[0].([]*BotmanContentProtectionJavascriptInjectionRule)[vs[1].(int)]
	}).(BotmanContentProtectionJavascriptInjectionRuleOutput)
}

type BotmanContentProtectionJavascriptInjectionRuleMapOutput struct{ *pulumi.OutputState }

func (BotmanContentProtectionJavascriptInjectionRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanContentProtectionJavascriptInjectionRule)(nil)).Elem()
}

func (o BotmanContentProtectionJavascriptInjectionRuleMapOutput) ToBotmanContentProtectionJavascriptInjectionRuleMapOutput() BotmanContentProtectionJavascriptInjectionRuleMapOutput {
	return o
}

func (o BotmanContentProtectionJavascriptInjectionRuleMapOutput) ToBotmanContentProtectionJavascriptInjectionRuleMapOutputWithContext(ctx context.Context) BotmanContentProtectionJavascriptInjectionRuleMapOutput {
	return o
}

func (o BotmanContentProtectionJavascriptInjectionRuleMapOutput) MapIndex(k pulumi.StringInput) BotmanContentProtectionJavascriptInjectionRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanContentProtectionJavascriptInjectionRule {
		return vs[0].(map[string]*BotmanContentProtectionJavascriptInjectionRule)[vs[1].(string)]
	}).(BotmanContentProtectionJavascriptInjectionRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanContentProtectionJavascriptInjectionRuleInput)(nil)).Elem(), &BotmanContentProtectionJavascriptInjectionRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanContentProtectionJavascriptInjectionRuleArrayInput)(nil)).Elem(), BotmanContentProtectionJavascriptInjectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanContentProtectionJavascriptInjectionRuleMapInput)(nil)).Elem(), BotmanContentProtectionJavascriptInjectionRuleMap{})
	pulumi.RegisterOutputType(BotmanContentProtectionJavascriptInjectionRuleOutput{})
	pulumi.RegisterOutputType(BotmanContentProtectionJavascriptInjectionRuleArrayOutput{})
	pulumi.RegisterOutputType(BotmanContentProtectionJavascriptInjectionRuleMapOutput{})
}
