// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Every policy version specifies the match rules that govern how the Cloudlet is used. Matches specify conditions that need to be met in the incoming request.
//
// Use the `getCloudletsRequestControlMatchRule` data source to build a match rule JSON object for the Request Control Cloudlet.
//
// ## Basic usage
//
// This example returns the JSON-encoded rules for the Request Control Cloudlet:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := akamai.GetCloudletsRequestControlMatchRule(ctx, &GetCloudletsRequestControlMatchRuleArgs{
// 			MatchRules: []GetCloudletsRequestControlMatchRuleMatchRule{
// 				GetCloudletsRequestControlMatchRuleMatchRule{
// 					AllowDeny: "allow",
// 					Disabled:  pulumi.BoolRef(false),
// 					End:       pulumi.IntRef(2),
// 					Matches: []GetCloudletsRequestControlMatchRuleMatchRuleMatch{
// 						GetCloudletsRequestControlMatchRuleMatchRuleMatch{
// 							CaseSensitive: pulumi.BoolRef(false),
// 							CheckIps:      pulumi.StringRef("CONNECTING_IP XFF_HEADERS"),
// 							MatchOperator: pulumi.StringRef("contains"),
// 							MatchType:     pulumi.StringRef("method"),
// 							Negate:        pulumi.BoolRef(false),
// 							ObjectMatchValue: []map[string]interface{}{
// 								map[string]interface{}{
// 									"nameCaseSensitive": true,
// 									"nameHasWildcard":   true,
// 									"type":              "simple",
// 									"value": []string{
// 										"GET",
// 									},
// 								},
// 							},
// 						},
// 					},
// 					Name:  pulumi.StringRef("rule 1"),
// 					Start: pulumi.IntRef(1),
// 				},
// 				GetCloudletsRequestControlMatchRuleMatchRule{
// 					AllowDeny: "deny",
// 					Disabled:  pulumi.BoolRef(true),
// 					End:       pulumi.IntRef(2),
// 					Matches: []GetCloudletsRequestControlMatchRuleMatchRuleMatch{
// 						GetCloudletsRequestControlMatchRuleMatchRuleMatch{
// 							CaseSensitive: pulumi.BoolRef(false),
// 							CheckIps:      pulumi.StringRef("XFF_HEADERS"),
// 							MatchOperator: pulumi.StringRef("contains"),
// 							MatchType:     pulumi.StringRef("header"),
// 							Negate:        pulumi.BoolRef(false),
// 							ObjectMatchValue: []map[string]interface{}{
// 								map[string]interface{}{
// 									"name":              "object 1",
// 									"nameCaseSensitive": true,
// 									"nameHasWildcard":   true,
// 									"options": map[string]interface{}{
// 										"value": []string{
// 											"text/html*",
// 											"text/css*",
// 											"application/x-javascript*",
// 										},
// 										"valueCaseSensitive": true,
// 										"valueEscaped":       true,
// 										"valueHasWildcard":   true,
// 									},
// 									"type": "object",
// 								},
// 							},
// 						},
// 					},
// 					Name:  pulumi.StringRef("rule 2"),
// 					Start: pulumi.IntRef(1),
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Attributes reference
//
// This data source returns these attributes:
//
// * `type` - The type of Cloudlet the rule is for.
// * `json` - A `matchRules` JSON structure generated from the API schema that defines the rules for this policy.
func GetCloudletsRequestControlMatchRule(ctx *pulumi.Context, args *GetCloudletsRequestControlMatchRuleArgs, opts ...pulumi.InvokeOption) (*GetCloudletsRequestControlMatchRuleResult, error) {
	var rv GetCloudletsRequestControlMatchRuleResult
	err := ctx.Invoke("akamai:index/getCloudletsRequestControlMatchRule:getCloudletsRequestControlMatchRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudletsRequestControlMatchRule.
type GetCloudletsRequestControlMatchRuleArgs struct {
	// - (Optional) A list of Cloudlet-specific match rules for a policy.
	MatchRules []GetCloudletsRequestControlMatchRuleMatchRule `pulumi:"matchRules"`
}

// A collection of values returned by getCloudletsRequestControlMatchRule.
type GetCloudletsRequestControlMatchRuleResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                                         `pulumi:"id"`
	Json       string                                         `pulumi:"json"`
	MatchRules []GetCloudletsRequestControlMatchRuleMatchRule `pulumi:"matchRules"`
}

func GetCloudletsRequestControlMatchRuleOutput(ctx *pulumi.Context, args GetCloudletsRequestControlMatchRuleOutputArgs, opts ...pulumi.InvokeOption) GetCloudletsRequestControlMatchRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCloudletsRequestControlMatchRuleResult, error) {
			args := v.(GetCloudletsRequestControlMatchRuleArgs)
			r, err := GetCloudletsRequestControlMatchRule(ctx, &args, opts...)
			var s GetCloudletsRequestControlMatchRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCloudletsRequestControlMatchRuleResultOutput)
}

// A collection of arguments for invoking getCloudletsRequestControlMatchRule.
type GetCloudletsRequestControlMatchRuleOutputArgs struct {
	// - (Optional) A list of Cloudlet-specific match rules for a policy.
	MatchRules GetCloudletsRequestControlMatchRuleMatchRuleArrayInput `pulumi:"matchRules"`
}

func (GetCloudletsRequestControlMatchRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudletsRequestControlMatchRuleArgs)(nil)).Elem()
}

// A collection of values returned by getCloudletsRequestControlMatchRule.
type GetCloudletsRequestControlMatchRuleResultOutput struct{ *pulumi.OutputState }

func (GetCloudletsRequestControlMatchRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudletsRequestControlMatchRuleResult)(nil)).Elem()
}

func (o GetCloudletsRequestControlMatchRuleResultOutput) ToGetCloudletsRequestControlMatchRuleResultOutput() GetCloudletsRequestControlMatchRuleResultOutput {
	return o
}

func (o GetCloudletsRequestControlMatchRuleResultOutput) ToGetCloudletsRequestControlMatchRuleResultOutputWithContext(ctx context.Context) GetCloudletsRequestControlMatchRuleResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudletsRequestControlMatchRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudletsRequestControlMatchRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudletsRequestControlMatchRuleResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudletsRequestControlMatchRuleResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetCloudletsRequestControlMatchRuleResultOutput) MatchRules() GetCloudletsRequestControlMatchRuleMatchRuleArrayOutput {
	return o.ApplyT(func(v GetCloudletsRequestControlMatchRuleResult) []GetCloudletsRequestControlMatchRuleMatchRule {
		return v.MatchRules
	}).(GetCloudletsRequestControlMatchRuleMatchRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudletsRequestControlMatchRuleResultOutput{})
}
