// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v9/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCloudwrapperLocations(ctx *pulumi.Context, args *GetCloudwrapperLocationsArgs, opts ...pulumi.InvokeOption) (*GetCloudwrapperLocationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCloudwrapperLocationsResult
	err := ctx.Invoke("akamai:index/getCloudwrapperLocations:getCloudwrapperLocations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudwrapperLocations.
type GetCloudwrapperLocationsArgs struct {
	Locations []GetCloudwrapperLocationsLocation `pulumi:"locations"`
}

// A collection of values returned by getCloudwrapperLocations.
type GetCloudwrapperLocationsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string                             `pulumi:"id"`
	Locations []GetCloudwrapperLocationsLocation `pulumi:"locations"`
}

func GetCloudwrapperLocationsOutput(ctx *pulumi.Context, args GetCloudwrapperLocationsOutputArgs, opts ...pulumi.InvokeOption) GetCloudwrapperLocationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCloudwrapperLocationsResultOutput, error) {
			args := v.(GetCloudwrapperLocationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("akamai:index/getCloudwrapperLocations:getCloudwrapperLocations", args, GetCloudwrapperLocationsResultOutput{}, options).(GetCloudwrapperLocationsResultOutput), nil
		}).(GetCloudwrapperLocationsResultOutput)
}

// A collection of arguments for invoking getCloudwrapperLocations.
type GetCloudwrapperLocationsOutputArgs struct {
	Locations GetCloudwrapperLocationsLocationArrayInput `pulumi:"locations"`
}

func (GetCloudwrapperLocationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudwrapperLocationsArgs)(nil)).Elem()
}

// A collection of values returned by getCloudwrapperLocations.
type GetCloudwrapperLocationsResultOutput struct{ *pulumi.OutputState }

func (GetCloudwrapperLocationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudwrapperLocationsResult)(nil)).Elem()
}

func (o GetCloudwrapperLocationsResultOutput) ToGetCloudwrapperLocationsResultOutput() GetCloudwrapperLocationsResultOutput {
	return o
}

func (o GetCloudwrapperLocationsResultOutput) ToGetCloudwrapperLocationsResultOutputWithContext(ctx context.Context) GetCloudwrapperLocationsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudwrapperLocationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudwrapperLocationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudwrapperLocationsResultOutput) Locations() GetCloudwrapperLocationsLocationArrayOutput {
	return o.ApplyT(func(v GetCloudwrapperLocationsResult) []GetCloudwrapperLocationsLocation { return v.Locations }).(GetCloudwrapperLocationsLocationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudwrapperLocationsResultOutput{})
}
