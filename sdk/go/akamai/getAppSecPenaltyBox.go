// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security policy
//
// Returns penalty box settings for the specified security policy.
// When the penalty box is enabled for a policy, clients that trigger a WAF Deny action are placed in the “penalty box”.
// There, the action you select for penalty box (either Alert or Deny ) continues to apply to any requests from that client for the next 10 minutes.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/penalty-box](https://techdocs.akamai.com/application-security/reference/get-policy-penalty-box)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v3/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &GetAppSecConfigurationArgs{
// 			Name: pulumi.StringRef("Documentation"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		penaltyBox, err := akamai.LookupAppSecPenaltyBox(ctx, &GetAppSecPenaltyBoxArgs{
// 			ConfigId:         configuration.ConfigId,
// 			SecurityPolicyId: "gms1_134637",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("penaltyBoxAction", penaltyBox.Action)
// 		ctx.Export("penaltyBoxEnabled", penaltyBox.Enabled)
// 		ctx.Export("penaltyBoxText", penaltyBox.OutputText)
// 		return nil
// 	})
// }
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `action`. Action taken any time the penalty box is triggered. Valid values are:
//   - **alert**. Record the event.
//   - **deny**. The request is blocked.
//   - **deny_custom_{custom_deny_id}**. The action defined by the custom deny is taken.
//   - **none**. Take no action.
// - `enabled`. If **true**, penalty box protection is enabled. If **false**, penalty box protection is disabled.
// - `outputText`. Tabular report of penalty box protection settings.
func LookupAppSecPenaltyBox(ctx *pulumi.Context, args *LookupAppSecPenaltyBoxArgs, opts ...pulumi.InvokeOption) (*LookupAppSecPenaltyBoxResult, error) {
	var rv LookupAppSecPenaltyBoxResult
	err := ctx.Invoke("akamai:index/getAppSecPenaltyBox:getAppSecPenaltyBox", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecPenaltyBox.
type LookupAppSecPenaltyBoxArgs struct {
	// . Unique identifier of the security configuration associated with the penalty box settings.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the security policy associated with the penalty box settings.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// A collection of values returned by getAppSecPenaltyBox.
type LookupAppSecPenaltyBoxResult struct {
	Action   string `pulumi:"action"`
	ConfigId int    `pulumi:"configId"`
	Enabled  bool   `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	OutputText       string `pulumi:"outputText"`
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

func LookupAppSecPenaltyBoxOutput(ctx *pulumi.Context, args LookupAppSecPenaltyBoxOutputArgs, opts ...pulumi.InvokeOption) LookupAppSecPenaltyBoxResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAppSecPenaltyBoxResult, error) {
			args := v.(LookupAppSecPenaltyBoxArgs)
			r, err := LookupAppSecPenaltyBox(ctx, &args, opts...)
			var s LookupAppSecPenaltyBoxResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAppSecPenaltyBoxResultOutput)
}

// A collection of arguments for invoking getAppSecPenaltyBox.
type LookupAppSecPenaltyBoxOutputArgs struct {
	// . Unique identifier of the security configuration associated with the penalty box settings.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// . Unique identifier of the security policy associated with the penalty box settings.
	SecurityPolicyId pulumi.StringInput `pulumi:"securityPolicyId"`
}

func (LookupAppSecPenaltyBoxOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppSecPenaltyBoxArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecPenaltyBox.
type LookupAppSecPenaltyBoxResultOutput struct{ *pulumi.OutputState }

func (LookupAppSecPenaltyBoxResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppSecPenaltyBoxResult)(nil)).Elem()
}

func (o LookupAppSecPenaltyBoxResultOutput) ToLookupAppSecPenaltyBoxResultOutput() LookupAppSecPenaltyBoxResultOutput {
	return o
}

func (o LookupAppSecPenaltyBoxResultOutput) ToLookupAppSecPenaltyBoxResultOutputWithContext(ctx context.Context) LookupAppSecPenaltyBoxResultOutput {
	return o
}

func (o LookupAppSecPenaltyBoxResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecPenaltyBoxResult) string { return v.Action }).(pulumi.StringOutput)
}

func (o LookupAppSecPenaltyBoxResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAppSecPenaltyBoxResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

func (o LookupAppSecPenaltyBoxResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAppSecPenaltyBoxResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAppSecPenaltyBoxResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecPenaltyBoxResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAppSecPenaltyBoxResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecPenaltyBoxResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func (o LookupAppSecPenaltyBoxResultOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecPenaltyBoxResult) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppSecPenaltyBoxResultOutput{})
}
