// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `getPropertyHostnames` data source to query and retrieve hostnames and their certificate statuses for an existing property. This data source lets you search across the contracts and groups you have access to.
//
// ## Basic usage
//
// This example returns the property's hostnames based on the selected contract and group:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			ctx.Export("propertyHostnames", data.Akamai_property_hostnames.MyExample.Hostnames)
//			return nil
//		})
//	}
//
// ```
//
// ## Attributes reference
//
// This data source returns these attributes:
//
// * `hostnames` - A list of hostnames for the property, including:
//   - `cnameType` - A string containing the hostname's cname type value.
//   - `edgeHostnameId` - The edge hostname's unique ID, including the `ehn_` prefix.
//   - `cnameFrom` - A string containing the original origin's hostname.
//   - `cnameTo` - A string containing the hostname for edge content.
//   - `certProvisioningType` - The certificate's provisioning type, either the default `CPS_MANAGED` type for the custom certificates you provision with the Certificate Provisioning System (CPS), or `DEFAULT` for certificates provisioned automatically.
//   - `certStatus` - If applicable, this shows a list of certificate statuses, including:
//   - `target` - The destination part of the CNAME record used to validate the certificate's domain.
//   - `hostname` - The hostname part of the CNAME record used to validate the certificate's domain.
//   - `productionStatus` - A string containing the status of the certificate deployment on the production network.
//   - `stagingStatus` - A string containing the status of the certificate deployment on the staging network.
//
// ## Domain validation for DEFAULT certificates
//
// If your `certProvisioningType = "DEFAULT"` and the value for `cert_status.production_status` or `cert_status.staging_status` is either `PENDING`, `EXPIRING_SOON_NEEDS_VALIDATION`, or `EXPIRED_NEEDS_VALIDATION`, you need to perform domain validation. This proves to the certificate authority that you control the domain and are authorized to create certificates for it.
//
// In your DNS configuration, create a CNAME record and map the `cert_status.hostname` value to the `cert_status.target` value.
func GetPropertyHostnames(ctx *pulumi.Context, args *GetPropertyHostnamesArgs, opts ...pulumi.InvokeOption) (*GetPropertyHostnamesResult, error) {
	var rv GetPropertyHostnamesResult
	err := ctx.Invoke("akamai:index/getPropertyHostnames:getPropertyHostnames", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPropertyHostnames.
type GetPropertyHostnamesArgs struct {
	// (Required) A contract's unique ID, including the `ctr_` prefix.
	ContractId string `pulumi:"contractId"`
	// (Required) A group's unique ID, including the `grp_` prefix.
	GroupId string `pulumi:"groupId"`
	// (Required) A property's unique ID, including the `prp_` prefix.
	PropertyId string `pulumi:"propertyId"`
}

// A collection of values returned by getPropertyHostnames.
type GetPropertyHostnamesResult struct {
	ContractId string                         `pulumi:"contractId"`
	GroupId    string                         `pulumi:"groupId"`
	Hostnames  []GetPropertyHostnamesHostname `pulumi:"hostnames"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	PropertyId string `pulumi:"propertyId"`
	Version    int    `pulumi:"version"`
}

func GetPropertyHostnamesOutput(ctx *pulumi.Context, args GetPropertyHostnamesOutputArgs, opts ...pulumi.InvokeOption) GetPropertyHostnamesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPropertyHostnamesResult, error) {
			args := v.(GetPropertyHostnamesArgs)
			r, err := GetPropertyHostnames(ctx, &args, opts...)
			var s GetPropertyHostnamesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPropertyHostnamesResultOutput)
}

// A collection of arguments for invoking getPropertyHostnames.
type GetPropertyHostnamesOutputArgs struct {
	// (Required) A contract's unique ID, including the `ctr_` prefix.
	ContractId pulumi.StringInput `pulumi:"contractId"`
	// (Required) A group's unique ID, including the `grp_` prefix.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// (Required) A property's unique ID, including the `prp_` prefix.
	PropertyId pulumi.StringInput `pulumi:"propertyId"`
}

func (GetPropertyHostnamesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyHostnamesArgs)(nil)).Elem()
}

// A collection of values returned by getPropertyHostnames.
type GetPropertyHostnamesResultOutput struct{ *pulumi.OutputState }

func (GetPropertyHostnamesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyHostnamesResult)(nil)).Elem()
}

func (o GetPropertyHostnamesResultOutput) ToGetPropertyHostnamesResultOutput() GetPropertyHostnamesResultOutput {
	return o
}

func (o GetPropertyHostnamesResultOutput) ToGetPropertyHostnamesResultOutputWithContext(ctx context.Context) GetPropertyHostnamesResultOutput {
	return o
}

func (o GetPropertyHostnamesResultOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyHostnamesResult) string { return v.ContractId }).(pulumi.StringOutput)
}

func (o GetPropertyHostnamesResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyHostnamesResult) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o GetPropertyHostnamesResultOutput) Hostnames() GetPropertyHostnamesHostnameArrayOutput {
	return o.ApplyT(func(v GetPropertyHostnamesResult) []GetPropertyHostnamesHostname { return v.Hostnames }).(GetPropertyHostnamesHostnameArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPropertyHostnamesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyHostnamesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPropertyHostnamesResultOutput) PropertyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyHostnamesResult) string { return v.PropertyId }).(pulumi.StringOutput)
}

func (o GetPropertyHostnamesResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetPropertyHostnamesResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPropertyHostnamesResultOutput{})
}
