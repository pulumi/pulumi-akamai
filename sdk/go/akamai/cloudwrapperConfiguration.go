// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudwrapperConfiguration struct {
	pulumi.CustomResourceState

	// Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
	CapacityAlertsThreshold pulumi.IntPtrOutput `pulumi:"capacityAlertsThreshold"`
	// Additional information you provide to differentiate or track changes of the configuration.
	Comments pulumi.StringOutput `pulumi:"comments"`
	// Name of the configuration.
	ConfigName pulumi.StringOutput `pulumi:"configName"`
	// Contract ID having Cloud Wrapper entitlement.
	ContractId pulumi.StringOutput `pulumi:"contractId"`
	// List of locations to use with the configuration.
	Locations CloudwrapperConfigurationLocationArrayOutput `pulumi:"locations"`
	// Email addresses to use for notifications.
	NotificationEmails pulumi.StringArrayOutput `pulumi:"notificationEmails"`
	// List of properties belonging to eligible products.
	PropertyIds pulumi.StringArrayOutput `pulumi:"propertyIds"`
	// Retain idle objects beyond their max idle lifetime.
	RetainIdleObjects pulumi.BoolOutput `pulumi:"retainIdleObjects"`
	// Unique hash value of the configuration.
	Revision pulumi.StringOutput                        `pulumi:"revision"`
	Timeouts CloudwrapperConfigurationTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewCloudwrapperConfiguration registers a new resource with the given unique name, arguments, and options.
func NewCloudwrapperConfiguration(ctx *pulumi.Context,
	name string, args *CloudwrapperConfigurationArgs, opts ...pulumi.ResourceOption) (*CloudwrapperConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Comments == nil {
		return nil, errors.New("invalid value for required argument 'Comments'")
	}
	if args.ConfigName == nil {
		return nil, errors.New("invalid value for required argument 'ConfigName'")
	}
	if args.ContractId == nil {
		return nil, errors.New("invalid value for required argument 'ContractId'")
	}
	if args.PropertyIds == nil {
		return nil, errors.New("invalid value for required argument 'PropertyIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudwrapperConfiguration
	err := ctx.RegisterResource("akamai:index/cloudwrapperConfiguration:CloudwrapperConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudwrapperConfiguration gets an existing CloudwrapperConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudwrapperConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudwrapperConfigurationState, opts ...pulumi.ResourceOption) (*CloudwrapperConfiguration, error) {
	var resource CloudwrapperConfiguration
	err := ctx.ReadResource("akamai:index/cloudwrapperConfiguration:CloudwrapperConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudwrapperConfiguration resources.
type cloudwrapperConfigurationState struct {
	// Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
	CapacityAlertsThreshold *int `pulumi:"capacityAlertsThreshold"`
	// Additional information you provide to differentiate or track changes of the configuration.
	Comments *string `pulumi:"comments"`
	// Name of the configuration.
	ConfigName *string `pulumi:"configName"`
	// Contract ID having Cloud Wrapper entitlement.
	ContractId *string `pulumi:"contractId"`
	// List of locations to use with the configuration.
	Locations []CloudwrapperConfigurationLocation `pulumi:"locations"`
	// Email addresses to use for notifications.
	NotificationEmails []string `pulumi:"notificationEmails"`
	// List of properties belonging to eligible products.
	PropertyIds []string `pulumi:"propertyIds"`
	// Retain idle objects beyond their max idle lifetime.
	RetainIdleObjects *bool `pulumi:"retainIdleObjects"`
	// Unique hash value of the configuration.
	Revision *string                            `pulumi:"revision"`
	Timeouts *CloudwrapperConfigurationTimeouts `pulumi:"timeouts"`
}

type CloudwrapperConfigurationState struct {
	// Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
	CapacityAlertsThreshold pulumi.IntPtrInput
	// Additional information you provide to differentiate or track changes of the configuration.
	Comments pulumi.StringPtrInput
	// Name of the configuration.
	ConfigName pulumi.StringPtrInput
	// Contract ID having Cloud Wrapper entitlement.
	ContractId pulumi.StringPtrInput
	// List of locations to use with the configuration.
	Locations CloudwrapperConfigurationLocationArrayInput
	// Email addresses to use for notifications.
	NotificationEmails pulumi.StringArrayInput
	// List of properties belonging to eligible products.
	PropertyIds pulumi.StringArrayInput
	// Retain idle objects beyond their max idle lifetime.
	RetainIdleObjects pulumi.BoolPtrInput
	// Unique hash value of the configuration.
	Revision pulumi.StringPtrInput
	Timeouts CloudwrapperConfigurationTimeoutsPtrInput
}

func (CloudwrapperConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudwrapperConfigurationState)(nil)).Elem()
}

type cloudwrapperConfigurationArgs struct {
	// Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
	CapacityAlertsThreshold *int `pulumi:"capacityAlertsThreshold"`
	// Additional information you provide to differentiate or track changes of the configuration.
	Comments string `pulumi:"comments"`
	// Name of the configuration.
	ConfigName string `pulumi:"configName"`
	// Contract ID having Cloud Wrapper entitlement.
	ContractId string `pulumi:"contractId"`
	// List of locations to use with the configuration.
	Locations []CloudwrapperConfigurationLocation `pulumi:"locations"`
	// Email addresses to use for notifications.
	NotificationEmails []string `pulumi:"notificationEmails"`
	// List of properties belonging to eligible products.
	PropertyIds []string `pulumi:"propertyIds"`
	// Retain idle objects beyond their max idle lifetime.
	RetainIdleObjects *bool                              `pulumi:"retainIdleObjects"`
	Timeouts          *CloudwrapperConfigurationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudwrapperConfiguration resource.
type CloudwrapperConfigurationArgs struct {
	// Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
	CapacityAlertsThreshold pulumi.IntPtrInput
	// Additional information you provide to differentiate or track changes of the configuration.
	Comments pulumi.StringInput
	// Name of the configuration.
	ConfigName pulumi.StringInput
	// Contract ID having Cloud Wrapper entitlement.
	ContractId pulumi.StringInput
	// List of locations to use with the configuration.
	Locations CloudwrapperConfigurationLocationArrayInput
	// Email addresses to use for notifications.
	NotificationEmails pulumi.StringArrayInput
	// List of properties belonging to eligible products.
	PropertyIds pulumi.StringArrayInput
	// Retain idle objects beyond their max idle lifetime.
	RetainIdleObjects pulumi.BoolPtrInput
	Timeouts          CloudwrapperConfigurationTimeoutsPtrInput
}

func (CloudwrapperConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudwrapperConfigurationArgs)(nil)).Elem()
}

type CloudwrapperConfigurationInput interface {
	pulumi.Input

	ToCloudwrapperConfigurationOutput() CloudwrapperConfigurationOutput
	ToCloudwrapperConfigurationOutputWithContext(ctx context.Context) CloudwrapperConfigurationOutput
}

func (*CloudwrapperConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudwrapperConfiguration)(nil)).Elem()
}

func (i *CloudwrapperConfiguration) ToCloudwrapperConfigurationOutput() CloudwrapperConfigurationOutput {
	return i.ToCloudwrapperConfigurationOutputWithContext(context.Background())
}

func (i *CloudwrapperConfiguration) ToCloudwrapperConfigurationOutputWithContext(ctx context.Context) CloudwrapperConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwrapperConfigurationOutput)
}

// CloudwrapperConfigurationArrayInput is an input type that accepts CloudwrapperConfigurationArray and CloudwrapperConfigurationArrayOutput values.
// You can construct a concrete instance of `CloudwrapperConfigurationArrayInput` via:
//
//	CloudwrapperConfigurationArray{ CloudwrapperConfigurationArgs{...} }
type CloudwrapperConfigurationArrayInput interface {
	pulumi.Input

	ToCloudwrapperConfigurationArrayOutput() CloudwrapperConfigurationArrayOutput
	ToCloudwrapperConfigurationArrayOutputWithContext(context.Context) CloudwrapperConfigurationArrayOutput
}

type CloudwrapperConfigurationArray []CloudwrapperConfigurationInput

func (CloudwrapperConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudwrapperConfiguration)(nil)).Elem()
}

func (i CloudwrapperConfigurationArray) ToCloudwrapperConfigurationArrayOutput() CloudwrapperConfigurationArrayOutput {
	return i.ToCloudwrapperConfigurationArrayOutputWithContext(context.Background())
}

func (i CloudwrapperConfigurationArray) ToCloudwrapperConfigurationArrayOutputWithContext(ctx context.Context) CloudwrapperConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwrapperConfigurationArrayOutput)
}

// CloudwrapperConfigurationMapInput is an input type that accepts CloudwrapperConfigurationMap and CloudwrapperConfigurationMapOutput values.
// You can construct a concrete instance of `CloudwrapperConfigurationMapInput` via:
//
//	CloudwrapperConfigurationMap{ "key": CloudwrapperConfigurationArgs{...} }
type CloudwrapperConfigurationMapInput interface {
	pulumi.Input

	ToCloudwrapperConfigurationMapOutput() CloudwrapperConfigurationMapOutput
	ToCloudwrapperConfigurationMapOutputWithContext(context.Context) CloudwrapperConfigurationMapOutput
}

type CloudwrapperConfigurationMap map[string]CloudwrapperConfigurationInput

func (CloudwrapperConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudwrapperConfiguration)(nil)).Elem()
}

func (i CloudwrapperConfigurationMap) ToCloudwrapperConfigurationMapOutput() CloudwrapperConfigurationMapOutput {
	return i.ToCloudwrapperConfigurationMapOutputWithContext(context.Background())
}

func (i CloudwrapperConfigurationMap) ToCloudwrapperConfigurationMapOutputWithContext(ctx context.Context) CloudwrapperConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwrapperConfigurationMapOutput)
}

type CloudwrapperConfigurationOutput struct{ *pulumi.OutputState }

func (CloudwrapperConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudwrapperConfiguration)(nil)).Elem()
}

func (o CloudwrapperConfigurationOutput) ToCloudwrapperConfigurationOutput() CloudwrapperConfigurationOutput {
	return o
}

func (o CloudwrapperConfigurationOutput) ToCloudwrapperConfigurationOutputWithContext(ctx context.Context) CloudwrapperConfigurationOutput {
	return o
}

// Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100.
func (o CloudwrapperConfigurationOutput) CapacityAlertsThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudwrapperConfiguration) pulumi.IntPtrOutput { return v.CapacityAlertsThreshold }).(pulumi.IntPtrOutput)
}

// Additional information you provide to differentiate or track changes of the configuration.
func (o CloudwrapperConfigurationOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudwrapperConfiguration) pulumi.StringOutput { return v.Comments }).(pulumi.StringOutput)
}

// Name of the configuration.
func (o CloudwrapperConfigurationOutput) ConfigName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudwrapperConfiguration) pulumi.StringOutput { return v.ConfigName }).(pulumi.StringOutput)
}

// Contract ID having Cloud Wrapper entitlement.
func (o CloudwrapperConfigurationOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudwrapperConfiguration) pulumi.StringOutput { return v.ContractId }).(pulumi.StringOutput)
}

// List of locations to use with the configuration.
func (o CloudwrapperConfigurationOutput) Locations() CloudwrapperConfigurationLocationArrayOutput {
	return o.ApplyT(func(v *CloudwrapperConfiguration) CloudwrapperConfigurationLocationArrayOutput { return v.Locations }).(CloudwrapperConfigurationLocationArrayOutput)
}

// Email addresses to use for notifications.
func (o CloudwrapperConfigurationOutput) NotificationEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudwrapperConfiguration) pulumi.StringArrayOutput { return v.NotificationEmails }).(pulumi.StringArrayOutput)
}

// List of properties belonging to eligible products.
func (o CloudwrapperConfigurationOutput) PropertyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudwrapperConfiguration) pulumi.StringArrayOutput { return v.PropertyIds }).(pulumi.StringArrayOutput)
}

// Retain idle objects beyond their max idle lifetime.
func (o CloudwrapperConfigurationOutput) RetainIdleObjects() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudwrapperConfiguration) pulumi.BoolOutput { return v.RetainIdleObjects }).(pulumi.BoolOutput)
}

// Unique hash value of the configuration.
func (o CloudwrapperConfigurationOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudwrapperConfiguration) pulumi.StringOutput { return v.Revision }).(pulumi.StringOutput)
}

func (o CloudwrapperConfigurationOutput) Timeouts() CloudwrapperConfigurationTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudwrapperConfiguration) CloudwrapperConfigurationTimeoutsPtrOutput { return v.Timeouts }).(CloudwrapperConfigurationTimeoutsPtrOutput)
}

type CloudwrapperConfigurationArrayOutput struct{ *pulumi.OutputState }

func (CloudwrapperConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudwrapperConfiguration)(nil)).Elem()
}

func (o CloudwrapperConfigurationArrayOutput) ToCloudwrapperConfigurationArrayOutput() CloudwrapperConfigurationArrayOutput {
	return o
}

func (o CloudwrapperConfigurationArrayOutput) ToCloudwrapperConfigurationArrayOutputWithContext(ctx context.Context) CloudwrapperConfigurationArrayOutput {
	return o
}

func (o CloudwrapperConfigurationArrayOutput) Index(i pulumi.IntInput) CloudwrapperConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudwrapperConfiguration {
		return vs[0].([]*CloudwrapperConfiguration)[vs[1].(int)]
	}).(CloudwrapperConfigurationOutput)
}

type CloudwrapperConfigurationMapOutput struct{ *pulumi.OutputState }

func (CloudwrapperConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudwrapperConfiguration)(nil)).Elem()
}

func (o CloudwrapperConfigurationMapOutput) ToCloudwrapperConfigurationMapOutput() CloudwrapperConfigurationMapOutput {
	return o
}

func (o CloudwrapperConfigurationMapOutput) ToCloudwrapperConfigurationMapOutputWithContext(ctx context.Context) CloudwrapperConfigurationMapOutput {
	return o
}

func (o CloudwrapperConfigurationMapOutput) MapIndex(k pulumi.StringInput) CloudwrapperConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudwrapperConfiguration {
		return vs[0].(map[string]*CloudwrapperConfiguration)[vs[1].(string)]
	}).(CloudwrapperConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwrapperConfigurationInput)(nil)).Elem(), &CloudwrapperConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwrapperConfigurationArrayInput)(nil)).Elem(), CloudwrapperConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwrapperConfigurationMapInput)(nil)).Elem(), CloudwrapperConfigurationMap{})
	pulumi.RegisterOutputType(CloudwrapperConfigurationOutput{})
	pulumi.RegisterOutputType(CloudwrapperConfigurationArrayOutput{})
	pulumi.RegisterOutputType(CloudwrapperConfigurationMapOutput{})
}
