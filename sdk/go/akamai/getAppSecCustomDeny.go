// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security configuration; custom deny
//
// Returns information about custom deny actions: the returned information is described in the [CustomDeny members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#63df3de3) section of the Application Security API. Custom denies allow you to craft your own error messages or redirect pages to use when HTTP requests are denied.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/custom-rules](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcustomdeny)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "Documentation"
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &GetAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		customDenyList, err := akamai.LookupAppSecCustomDeny(ctx, &GetAppSecCustomDenyArgs{
// 			ConfigId: configuration.ConfigId,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("customDenyListOutput", customDenyList.OutputText)
// 		ctx.Export("customDenyListJson", customDenyList.Json)
// 		opt1 := "deny_custom_64386"
// 		customDeny, err := akamai.LookupAppSecCustomDeny(ctx, &GetAppSecCustomDenyArgs{
// 			ConfigId:     configuration.ConfigId,
// 			CustomDenyId: &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("customDenyJson", customDeny.Json)
// 		ctx.Export("customDenyOutput", customDeny.OutputText)
// 		return nil
// 	})
// }
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `json`. JSON-formatted list of custom deny information.
// - `outputText`. Tabular report of the custom deny information.
func LookupAppSecCustomDeny(ctx *pulumi.Context, args *LookupAppSecCustomDenyArgs, opts ...pulumi.InvokeOption) (*LookupAppSecCustomDenyResult, error) {
	var rv LookupAppSecCustomDenyResult
	err := ctx.Invoke("akamai:index/getAppSecCustomDeny:getAppSecCustomDeny", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecCustomDeny.
type LookupAppSecCustomDenyArgs struct {
	// . Unique identifier of the security configuration associated with the custom denies.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the custom deny you want to return information for. If not included. information is returned for all your custom denies.
	CustomDenyId *string `pulumi:"customDenyId"`
}

// A collection of values returned by getAppSecCustomDeny.
type LookupAppSecCustomDenyResult struct {
	ConfigId     int     `pulumi:"configId"`
	CustomDenyId *string `pulumi:"customDenyId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Json       string `pulumi:"json"`
	OutputText string `pulumi:"outputText"`
}

func LookupAppSecCustomDenyOutput(ctx *pulumi.Context, args LookupAppSecCustomDenyOutputArgs, opts ...pulumi.InvokeOption) LookupAppSecCustomDenyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAppSecCustomDenyResult, error) {
			args := v.(LookupAppSecCustomDenyArgs)
			r, err := LookupAppSecCustomDeny(ctx, &args, opts...)
			return *r, err
		}).(LookupAppSecCustomDenyResultOutput)
}

// A collection of arguments for invoking getAppSecCustomDeny.
type LookupAppSecCustomDenyOutputArgs struct {
	// . Unique identifier of the security configuration associated with the custom denies.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// . Unique identifier of the custom deny you want to return information for. If not included. information is returned for all your custom denies.
	CustomDenyId pulumi.StringPtrInput `pulumi:"customDenyId"`
}

func (LookupAppSecCustomDenyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppSecCustomDenyArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecCustomDeny.
type LookupAppSecCustomDenyResultOutput struct{ *pulumi.OutputState }

func (LookupAppSecCustomDenyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppSecCustomDenyResult)(nil)).Elem()
}

func (o LookupAppSecCustomDenyResultOutput) ToLookupAppSecCustomDenyResultOutput() LookupAppSecCustomDenyResultOutput {
	return o
}

func (o LookupAppSecCustomDenyResultOutput) ToLookupAppSecCustomDenyResultOutputWithContext(ctx context.Context) LookupAppSecCustomDenyResultOutput {
	return o
}

func (o LookupAppSecCustomDenyResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAppSecCustomDenyResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

func (o LookupAppSecCustomDenyResultOutput) CustomDenyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAppSecCustomDenyResult) *string { return v.CustomDenyId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAppSecCustomDenyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecCustomDenyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAppSecCustomDenyResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecCustomDenyResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o LookupAppSecCustomDenyResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecCustomDenyResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppSecCustomDenyResultOutput{})
}
