// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v9/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetZoneDnssecStatus(ctx *pulumi.Context, args *GetZoneDnssecStatusArgs, opts ...pulumi.InvokeOption) (*GetZoneDnssecStatusResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetZoneDnssecStatusResult
	err := ctx.Invoke("akamai:index/getZoneDnssecStatus:getZoneDnssecStatus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZoneDnssecStatus.
type GetZoneDnssecStatusArgs struct {
	Zone string `pulumi:"zone"`
}

// A collection of values returned by getZoneDnssecStatus.
type GetZoneDnssecStatusResult struct {
	Alerts         []string                          `pulumi:"alerts"`
	CurrentRecords GetZoneDnssecStatusCurrentRecords `pulumi:"currentRecords"`
	// The provider-assigned unique ID for this managed resource.
	Id         string                        `pulumi:"id"`
	NewRecords GetZoneDnssecStatusNewRecords `pulumi:"newRecords"`
	Zone       string                        `pulumi:"zone"`
}

func GetZoneDnssecStatusOutput(ctx *pulumi.Context, args GetZoneDnssecStatusOutputArgs, opts ...pulumi.InvokeOption) GetZoneDnssecStatusResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetZoneDnssecStatusResultOutput, error) {
			args := v.(GetZoneDnssecStatusArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("akamai:index/getZoneDnssecStatus:getZoneDnssecStatus", args, GetZoneDnssecStatusResultOutput{}, options).(GetZoneDnssecStatusResultOutput), nil
		}).(GetZoneDnssecStatusResultOutput)
}

// A collection of arguments for invoking getZoneDnssecStatus.
type GetZoneDnssecStatusOutputArgs struct {
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetZoneDnssecStatusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneDnssecStatusArgs)(nil)).Elem()
}

// A collection of values returned by getZoneDnssecStatus.
type GetZoneDnssecStatusResultOutput struct{ *pulumi.OutputState }

func (GetZoneDnssecStatusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneDnssecStatusResult)(nil)).Elem()
}

func (o GetZoneDnssecStatusResultOutput) ToGetZoneDnssecStatusResultOutput() GetZoneDnssecStatusResultOutput {
	return o
}

func (o GetZoneDnssecStatusResultOutput) ToGetZoneDnssecStatusResultOutputWithContext(ctx context.Context) GetZoneDnssecStatusResultOutput {
	return o
}

func (o GetZoneDnssecStatusResultOutput) Alerts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZoneDnssecStatusResult) []string { return v.Alerts }).(pulumi.StringArrayOutput)
}

func (o GetZoneDnssecStatusResultOutput) CurrentRecords() GetZoneDnssecStatusCurrentRecordsOutput {
	return o.ApplyT(func(v GetZoneDnssecStatusResult) GetZoneDnssecStatusCurrentRecords { return v.CurrentRecords }).(GetZoneDnssecStatusCurrentRecordsOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetZoneDnssecStatusResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneDnssecStatusResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZoneDnssecStatusResultOutput) NewRecords() GetZoneDnssecStatusNewRecordsOutput {
	return o.ApplyT(func(v GetZoneDnssecStatusResult) GetZoneDnssecStatusNewRecords { return v.NewRecords }).(GetZoneDnssecStatusNewRecordsOutput)
}

func (o GetZoneDnssecStatusResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneDnssecStatusResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZoneDnssecStatusResultOutput{})
}
