// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## getAppSecReputationProfileActions
//
// **Scopes**: Security policy; reputation profile
//
// Returns action information for your reputation profiles. Actions specify what happens any time a profile is triggered: the issue could be ignored, the request could be denied, or an alert could be generated.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/reputation-profiles](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getreputationprofileactions)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &GetAppSecConfigurationArgs{
// 			Name: pulumi.StringRef("Documentation"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		reputationProfileActions, err := akamai.GetAppSecReputationProfileActions(ctx, &GetAppSecReputationProfileActionsArgs{
// 			ConfigId:         configuration.ConfigId,
// 			SecurityPolicyId: "gms1_134637",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("reputationProfileActionsText", reputationProfileActions.OutputText)
// 		ctx.Export("reputationProfileActionsJson", reputationProfileActions.Json)
// 		_, err = akamai.GetAppSecReputationProfileActions(ctx, &GetAppSecReputationProfileActionsArgs{
// 			ConfigId:            configuration.ConfigId,
// 			SecurityPolicyId:    "gms1_134637",
// 			ReputationProfileId: pulumi.IntRef(12345),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("reputationProfileActions2", reputationProfileActions.Action)
// 		return nil
// 	})
// }
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `action`. Action taken any time the reputation profile is triggered. Valid values are:
//   - **alert**. Record the event.
//   - **deny**. Block the request.
//   - **deny_custom_{custom_deny_id}**. The action defined by the custom deny is taken.
//   - **none**. Take no action.
// - `json`. JSON-formatted report of the reputation profile action information.
// - `outputText`. Tabular report of the reputation profile action information.
func GetAppSecReputationProfileActions(ctx *pulumi.Context, args *GetAppSecReputationProfileActionsArgs, opts ...pulumi.InvokeOption) (*GetAppSecReputationProfileActionsResult, error) {
	var rv GetAppSecReputationProfileActionsResult
	err := ctx.Invoke("akamai:index/getAppSecReputationProfileActions:getAppSecReputationProfileActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecReputationProfileActions.
type GetAppSecReputationProfileActionsArgs struct {
	// . Unique identifier of the security configuration associated with the reputation profiles.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the reputation profile you want to return information for. If not included, information is returned for all your reputation profiles.
	ReputationProfileId *int `pulumi:"reputationProfileId"`
	// . Unique identifier of the security policy associated with the reputation profiles.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// A collection of values returned by getAppSecReputationProfileActions.
type GetAppSecReputationProfileActionsResult struct {
	Action   string `pulumi:"action"`
	ConfigId int    `pulumi:"configId"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string `pulumi:"id"`
	Json                string `pulumi:"json"`
	OutputText          string `pulumi:"outputText"`
	ReputationProfileId *int   `pulumi:"reputationProfileId"`
	SecurityPolicyId    string `pulumi:"securityPolicyId"`
}

func GetAppSecReputationProfileActionsOutput(ctx *pulumi.Context, args GetAppSecReputationProfileActionsOutputArgs, opts ...pulumi.InvokeOption) GetAppSecReputationProfileActionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAppSecReputationProfileActionsResult, error) {
			args := v.(GetAppSecReputationProfileActionsArgs)
			r, err := GetAppSecReputationProfileActions(ctx, &args, opts...)
			var s GetAppSecReputationProfileActionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAppSecReputationProfileActionsResultOutput)
}

// A collection of arguments for invoking getAppSecReputationProfileActions.
type GetAppSecReputationProfileActionsOutputArgs struct {
	// . Unique identifier of the security configuration associated with the reputation profiles.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// . Unique identifier of the reputation profile you want to return information for. If not included, information is returned for all your reputation profiles.
	ReputationProfileId pulumi.IntPtrInput `pulumi:"reputationProfileId"`
	// . Unique identifier of the security policy associated with the reputation profiles.
	SecurityPolicyId pulumi.StringInput `pulumi:"securityPolicyId"`
}

func (GetAppSecReputationProfileActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecReputationProfileActionsArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecReputationProfileActions.
type GetAppSecReputationProfileActionsResultOutput struct{ *pulumi.OutputState }

func (GetAppSecReputationProfileActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecReputationProfileActionsResult)(nil)).Elem()
}

func (o GetAppSecReputationProfileActionsResultOutput) ToGetAppSecReputationProfileActionsResultOutput() GetAppSecReputationProfileActionsResultOutput {
	return o
}

func (o GetAppSecReputationProfileActionsResultOutput) ToGetAppSecReputationProfileActionsResultOutputWithContext(ctx context.Context) GetAppSecReputationProfileActionsResultOutput {
	return o
}

func (o GetAppSecReputationProfileActionsResultOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecReputationProfileActionsResult) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetAppSecReputationProfileActionsResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppSecReputationProfileActionsResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppSecReputationProfileActionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecReputationProfileActionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAppSecReputationProfileActionsResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecReputationProfileActionsResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetAppSecReputationProfileActionsResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecReputationProfileActionsResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func (o GetAppSecReputationProfileActionsResultOutput) ReputationProfileId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSecReputationProfileActionsResult) *int { return v.ReputationProfileId }).(pulumi.IntPtrOutput)
}

func (o GetAppSecReputationProfileActionsResultOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecReputationProfileActionsResult) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppSecReputationProfileActionsResultOutput{})
}
