// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppSecMatchTarget struct {
	pulumi.CustomResourceState

	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// JSON-formatted definition of the match target
	MatchTarget pulumi.StringOutput `pulumi:"matchTarget"`
	// Unique identifier of the match target
	MatchTargetId pulumi.IntOutput `pulumi:"matchTargetId"`
}

// NewAppSecMatchTarget registers a new resource with the given unique name, arguments, and options.
func NewAppSecMatchTarget(ctx *pulumi.Context,
	name string, args *AppSecMatchTargetArgs, opts ...pulumi.ResourceOption) (*AppSecMatchTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.MatchTarget == nil {
		return nil, errors.New("invalid value for required argument 'MatchTarget'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppSecMatchTarget
	err := ctx.RegisterResource("akamai:index/appSecMatchTarget:AppSecMatchTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecMatchTarget gets an existing AppSecMatchTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecMatchTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecMatchTargetState, opts ...pulumi.ResourceOption) (*AppSecMatchTarget, error) {
	var resource AppSecMatchTarget
	err := ctx.ReadResource("akamai:index/appSecMatchTarget:AppSecMatchTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecMatchTarget resources.
type appSecMatchTargetState struct {
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// JSON-formatted definition of the match target
	MatchTarget *string `pulumi:"matchTarget"`
	// Unique identifier of the match target
	MatchTargetId *int `pulumi:"matchTargetId"`
}

type AppSecMatchTargetState struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// JSON-formatted definition of the match target
	MatchTarget pulumi.StringPtrInput
	// Unique identifier of the match target
	MatchTargetId pulumi.IntPtrInput
}

func (AppSecMatchTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecMatchTargetState)(nil)).Elem()
}

type appSecMatchTargetArgs struct {
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// JSON-formatted definition of the match target
	MatchTarget string `pulumi:"matchTarget"`
}

// The set of arguments for constructing a AppSecMatchTarget resource.
type AppSecMatchTargetArgs struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// JSON-formatted definition of the match target
	MatchTarget pulumi.StringInput
}

func (AppSecMatchTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecMatchTargetArgs)(nil)).Elem()
}

type AppSecMatchTargetInput interface {
	pulumi.Input

	ToAppSecMatchTargetOutput() AppSecMatchTargetOutput
	ToAppSecMatchTargetOutputWithContext(ctx context.Context) AppSecMatchTargetOutput
}

func (*AppSecMatchTarget) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecMatchTarget)(nil)).Elem()
}

func (i *AppSecMatchTarget) ToAppSecMatchTargetOutput() AppSecMatchTargetOutput {
	return i.ToAppSecMatchTargetOutputWithContext(context.Background())
}

func (i *AppSecMatchTarget) ToAppSecMatchTargetOutputWithContext(ctx context.Context) AppSecMatchTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecMatchTargetOutput)
}

// AppSecMatchTargetArrayInput is an input type that accepts AppSecMatchTargetArray and AppSecMatchTargetArrayOutput values.
// You can construct a concrete instance of `AppSecMatchTargetArrayInput` via:
//
//	AppSecMatchTargetArray{ AppSecMatchTargetArgs{...} }
type AppSecMatchTargetArrayInput interface {
	pulumi.Input

	ToAppSecMatchTargetArrayOutput() AppSecMatchTargetArrayOutput
	ToAppSecMatchTargetArrayOutputWithContext(context.Context) AppSecMatchTargetArrayOutput
}

type AppSecMatchTargetArray []AppSecMatchTargetInput

func (AppSecMatchTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecMatchTarget)(nil)).Elem()
}

func (i AppSecMatchTargetArray) ToAppSecMatchTargetArrayOutput() AppSecMatchTargetArrayOutput {
	return i.ToAppSecMatchTargetArrayOutputWithContext(context.Background())
}

func (i AppSecMatchTargetArray) ToAppSecMatchTargetArrayOutputWithContext(ctx context.Context) AppSecMatchTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecMatchTargetArrayOutput)
}

// AppSecMatchTargetMapInput is an input type that accepts AppSecMatchTargetMap and AppSecMatchTargetMapOutput values.
// You can construct a concrete instance of `AppSecMatchTargetMapInput` via:
//
//	AppSecMatchTargetMap{ "key": AppSecMatchTargetArgs{...} }
type AppSecMatchTargetMapInput interface {
	pulumi.Input

	ToAppSecMatchTargetMapOutput() AppSecMatchTargetMapOutput
	ToAppSecMatchTargetMapOutputWithContext(context.Context) AppSecMatchTargetMapOutput
}

type AppSecMatchTargetMap map[string]AppSecMatchTargetInput

func (AppSecMatchTargetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecMatchTarget)(nil)).Elem()
}

func (i AppSecMatchTargetMap) ToAppSecMatchTargetMapOutput() AppSecMatchTargetMapOutput {
	return i.ToAppSecMatchTargetMapOutputWithContext(context.Background())
}

func (i AppSecMatchTargetMap) ToAppSecMatchTargetMapOutputWithContext(ctx context.Context) AppSecMatchTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecMatchTargetMapOutput)
}

type AppSecMatchTargetOutput struct{ *pulumi.OutputState }

func (AppSecMatchTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecMatchTarget)(nil)).Elem()
}

func (o AppSecMatchTargetOutput) ToAppSecMatchTargetOutput() AppSecMatchTargetOutput {
	return o
}

func (o AppSecMatchTargetOutput) ToAppSecMatchTargetOutputWithContext(ctx context.Context) AppSecMatchTargetOutput {
	return o
}

// Unique identifier of the security configuration
func (o AppSecMatchTargetOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecMatchTarget) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// JSON-formatted definition of the match target
func (o AppSecMatchTargetOutput) MatchTarget() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecMatchTarget) pulumi.StringOutput { return v.MatchTarget }).(pulumi.StringOutput)
}

// Unique identifier of the match target
func (o AppSecMatchTargetOutput) MatchTargetId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecMatchTarget) pulumi.IntOutput { return v.MatchTargetId }).(pulumi.IntOutput)
}

type AppSecMatchTargetArrayOutput struct{ *pulumi.OutputState }

func (AppSecMatchTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecMatchTarget)(nil)).Elem()
}

func (o AppSecMatchTargetArrayOutput) ToAppSecMatchTargetArrayOutput() AppSecMatchTargetArrayOutput {
	return o
}

func (o AppSecMatchTargetArrayOutput) ToAppSecMatchTargetArrayOutputWithContext(ctx context.Context) AppSecMatchTargetArrayOutput {
	return o
}

func (o AppSecMatchTargetArrayOutput) Index(i pulumi.IntInput) AppSecMatchTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecMatchTarget {
		return vs[0].([]*AppSecMatchTarget)[vs[1].(int)]
	}).(AppSecMatchTargetOutput)
}

type AppSecMatchTargetMapOutput struct{ *pulumi.OutputState }

func (AppSecMatchTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecMatchTarget)(nil)).Elem()
}

func (o AppSecMatchTargetMapOutput) ToAppSecMatchTargetMapOutput() AppSecMatchTargetMapOutput {
	return o
}

func (o AppSecMatchTargetMapOutput) ToAppSecMatchTargetMapOutputWithContext(ctx context.Context) AppSecMatchTargetMapOutput {
	return o
}

func (o AppSecMatchTargetMapOutput) MapIndex(k pulumi.StringInput) AppSecMatchTargetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecMatchTarget {
		return vs[0].(map[string]*AppSecMatchTarget)[vs[1].(string)]
	}).(AppSecMatchTargetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecMatchTargetInput)(nil)).Elem(), &AppSecMatchTarget{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecMatchTargetArrayInput)(nil)).Elem(), AppSecMatchTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecMatchTargetMapInput)(nil)).Elem(), AppSecMatchTargetMap{})
	pulumi.RegisterOutputType(AppSecMatchTargetOutput{})
	pulumi.RegisterOutputType(AppSecMatchTargetArrayOutput{})
	pulumi.RegisterOutputType(AppSecMatchTargetMapOutput{})
}
