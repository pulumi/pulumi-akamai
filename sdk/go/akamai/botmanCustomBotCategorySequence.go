// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanCustomBotCategorySequence struct {
	pulumi.CustomResourceState

	CategoryIds pulumi.StringArrayOutput `pulumi:"categoryIds"`
	ConfigId    pulumi.IntOutput         `pulumi:"configId"`
}

// NewBotmanCustomBotCategorySequence registers a new resource with the given unique name, arguments, and options.
func NewBotmanCustomBotCategorySequence(ctx *pulumi.Context,
	name string, args *BotmanCustomBotCategorySequenceArgs, opts ...pulumi.ResourceOption) (*BotmanCustomBotCategorySequence, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CategoryIds == nil {
		return nil, errors.New("invalid value for required argument 'CategoryIds'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BotmanCustomBotCategorySequence
	err := ctx.RegisterResource("akamai:index/botmanCustomBotCategorySequence:BotmanCustomBotCategorySequence", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanCustomBotCategorySequence gets an existing BotmanCustomBotCategorySequence resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanCustomBotCategorySequence(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanCustomBotCategorySequenceState, opts ...pulumi.ResourceOption) (*BotmanCustomBotCategorySequence, error) {
	var resource BotmanCustomBotCategorySequence
	err := ctx.ReadResource("akamai:index/botmanCustomBotCategorySequence:BotmanCustomBotCategorySequence", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanCustomBotCategorySequence resources.
type botmanCustomBotCategorySequenceState struct {
	CategoryIds []string `pulumi:"categoryIds"`
	ConfigId    *int     `pulumi:"configId"`
}

type BotmanCustomBotCategorySequenceState struct {
	CategoryIds pulumi.StringArrayInput
	ConfigId    pulumi.IntPtrInput
}

func (BotmanCustomBotCategorySequenceState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomBotCategorySequenceState)(nil)).Elem()
}

type botmanCustomBotCategorySequenceArgs struct {
	CategoryIds []string `pulumi:"categoryIds"`
	ConfigId    int      `pulumi:"configId"`
}

// The set of arguments for constructing a BotmanCustomBotCategorySequence resource.
type BotmanCustomBotCategorySequenceArgs struct {
	CategoryIds pulumi.StringArrayInput
	ConfigId    pulumi.IntInput
}

func (BotmanCustomBotCategorySequenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomBotCategorySequenceArgs)(nil)).Elem()
}

type BotmanCustomBotCategorySequenceInput interface {
	pulumi.Input

	ToBotmanCustomBotCategorySequenceOutput() BotmanCustomBotCategorySequenceOutput
	ToBotmanCustomBotCategorySequenceOutputWithContext(ctx context.Context) BotmanCustomBotCategorySequenceOutput
}

func (*BotmanCustomBotCategorySequence) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomBotCategorySequence)(nil)).Elem()
}

func (i *BotmanCustomBotCategorySequence) ToBotmanCustomBotCategorySequenceOutput() BotmanCustomBotCategorySequenceOutput {
	return i.ToBotmanCustomBotCategorySequenceOutputWithContext(context.Background())
}

func (i *BotmanCustomBotCategorySequence) ToBotmanCustomBotCategorySequenceOutputWithContext(ctx context.Context) BotmanCustomBotCategorySequenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategorySequenceOutput)
}

// BotmanCustomBotCategorySequenceArrayInput is an input type that accepts BotmanCustomBotCategorySequenceArray and BotmanCustomBotCategorySequenceArrayOutput values.
// You can construct a concrete instance of `BotmanCustomBotCategorySequenceArrayInput` via:
//
//	BotmanCustomBotCategorySequenceArray{ BotmanCustomBotCategorySequenceArgs{...} }
type BotmanCustomBotCategorySequenceArrayInput interface {
	pulumi.Input

	ToBotmanCustomBotCategorySequenceArrayOutput() BotmanCustomBotCategorySequenceArrayOutput
	ToBotmanCustomBotCategorySequenceArrayOutputWithContext(context.Context) BotmanCustomBotCategorySequenceArrayOutput
}

type BotmanCustomBotCategorySequenceArray []BotmanCustomBotCategorySequenceInput

func (BotmanCustomBotCategorySequenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomBotCategorySequence)(nil)).Elem()
}

func (i BotmanCustomBotCategorySequenceArray) ToBotmanCustomBotCategorySequenceArrayOutput() BotmanCustomBotCategorySequenceArrayOutput {
	return i.ToBotmanCustomBotCategorySequenceArrayOutputWithContext(context.Background())
}

func (i BotmanCustomBotCategorySequenceArray) ToBotmanCustomBotCategorySequenceArrayOutputWithContext(ctx context.Context) BotmanCustomBotCategorySequenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategorySequenceArrayOutput)
}

// BotmanCustomBotCategorySequenceMapInput is an input type that accepts BotmanCustomBotCategorySequenceMap and BotmanCustomBotCategorySequenceMapOutput values.
// You can construct a concrete instance of `BotmanCustomBotCategorySequenceMapInput` via:
//
//	BotmanCustomBotCategorySequenceMap{ "key": BotmanCustomBotCategorySequenceArgs{...} }
type BotmanCustomBotCategorySequenceMapInput interface {
	pulumi.Input

	ToBotmanCustomBotCategorySequenceMapOutput() BotmanCustomBotCategorySequenceMapOutput
	ToBotmanCustomBotCategorySequenceMapOutputWithContext(context.Context) BotmanCustomBotCategorySequenceMapOutput
}

type BotmanCustomBotCategorySequenceMap map[string]BotmanCustomBotCategorySequenceInput

func (BotmanCustomBotCategorySequenceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomBotCategorySequence)(nil)).Elem()
}

func (i BotmanCustomBotCategorySequenceMap) ToBotmanCustomBotCategorySequenceMapOutput() BotmanCustomBotCategorySequenceMapOutput {
	return i.ToBotmanCustomBotCategorySequenceMapOutputWithContext(context.Background())
}

func (i BotmanCustomBotCategorySequenceMap) ToBotmanCustomBotCategorySequenceMapOutputWithContext(ctx context.Context) BotmanCustomBotCategorySequenceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategorySequenceMapOutput)
}

type BotmanCustomBotCategorySequenceOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategorySequenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomBotCategorySequence)(nil)).Elem()
}

func (o BotmanCustomBotCategorySequenceOutput) ToBotmanCustomBotCategorySequenceOutput() BotmanCustomBotCategorySequenceOutput {
	return o
}

func (o BotmanCustomBotCategorySequenceOutput) ToBotmanCustomBotCategorySequenceOutputWithContext(ctx context.Context) BotmanCustomBotCategorySequenceOutput {
	return o
}

func (o BotmanCustomBotCategorySequenceOutput) CategoryIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategorySequence) pulumi.StringArrayOutput { return v.CategoryIds }).(pulumi.StringArrayOutput)
}

func (o BotmanCustomBotCategorySequenceOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategorySequence) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

type BotmanCustomBotCategorySequenceArrayOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategorySequenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomBotCategorySequence)(nil)).Elem()
}

func (o BotmanCustomBotCategorySequenceArrayOutput) ToBotmanCustomBotCategorySequenceArrayOutput() BotmanCustomBotCategorySequenceArrayOutput {
	return o
}

func (o BotmanCustomBotCategorySequenceArrayOutput) ToBotmanCustomBotCategorySequenceArrayOutputWithContext(ctx context.Context) BotmanCustomBotCategorySequenceArrayOutput {
	return o
}

func (o BotmanCustomBotCategorySequenceArrayOutput) Index(i pulumi.IntInput) BotmanCustomBotCategorySequenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanCustomBotCategorySequence {
		return vs[0].([]*BotmanCustomBotCategorySequence)[vs[1].(int)]
	}).(BotmanCustomBotCategorySequenceOutput)
}

type BotmanCustomBotCategorySequenceMapOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategorySequenceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomBotCategorySequence)(nil)).Elem()
}

func (o BotmanCustomBotCategorySequenceMapOutput) ToBotmanCustomBotCategorySequenceMapOutput() BotmanCustomBotCategorySequenceMapOutput {
	return o
}

func (o BotmanCustomBotCategorySequenceMapOutput) ToBotmanCustomBotCategorySequenceMapOutputWithContext(ctx context.Context) BotmanCustomBotCategorySequenceMapOutput {
	return o
}

func (o BotmanCustomBotCategorySequenceMapOutput) MapIndex(k pulumi.StringInput) BotmanCustomBotCategorySequenceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanCustomBotCategorySequence {
		return vs[0].(map[string]*BotmanCustomBotCategorySequence)[vs[1].(string)]
	}).(BotmanCustomBotCategorySequenceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategorySequenceInput)(nil)).Elem(), &BotmanCustomBotCategorySequence{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategorySequenceArrayInput)(nil)).Elem(), BotmanCustomBotCategorySequenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategorySequenceMapInput)(nil)).Elem(), BotmanCustomBotCategorySequenceMap{})
	pulumi.RegisterOutputType(BotmanCustomBotCategorySequenceOutput{})
	pulumi.RegisterOutputType(BotmanCustomBotCategorySequenceArrayOutput{})
	pulumi.RegisterOutputType(BotmanCustomBotCategorySequenceMapOutput{})
}
