// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security configuration
//
// Returns a list of the failover hostnames in a configuration. The returned information is described in the [List failover hostnames](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getfailoverhostnames) section of the Application Security API.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/failover-hostnames](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getfailoverhostnames)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "Documentation"
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &GetAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		failoverHostnamesAppSecFailoverHostnames, err := akamai.GetAppSecFailoverHostnames(ctx, &GetAppSecFailoverHostnamesArgs{
// 			ConfigId: configuration.ConfigId,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("failoverHostnames", failoverHostnamesAppSecFailoverHostnames.Hostnames)
// 		ctx.Export("failoverHostnamesOutput", failoverHostnamesAppSecFailoverHostnames.OutputText)
// 		ctx.Export("failoverHostnamesJson", failoverHostnamesAppSecFailoverHostnames.Json)
// 		return nil
// 	})
// }
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `hostnames`. List of the failover hostnames.
// - `json`. JSON-formatted list of the failover hostnames.
func GetAppSecFailoverHostnames(ctx *pulumi.Context, args *GetAppSecFailoverHostnamesArgs, opts ...pulumi.InvokeOption) (*GetAppSecFailoverHostnamesResult, error) {
	var rv GetAppSecFailoverHostnamesResult
	err := ctx.Invoke("akamai:index/getAppSecFailoverHostnames:getAppSecFailoverHostnames", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecFailoverHostnames.
type GetAppSecFailoverHostnamesArgs struct {
	// . Unique identifier of the security configuration associated with the failover hosts.
	ConfigId int `pulumi:"configId"`
}

// A collection of values returned by getAppSecFailoverHostnames.
type GetAppSecFailoverHostnamesResult struct {
	ConfigId  int      `pulumi:"configId"`
	Hostnames []string `pulumi:"hostnames"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Json       string `pulumi:"json"`
	OutputText string `pulumi:"outputText"`
}

func GetAppSecFailoverHostnamesOutput(ctx *pulumi.Context, args GetAppSecFailoverHostnamesOutputArgs, opts ...pulumi.InvokeOption) GetAppSecFailoverHostnamesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAppSecFailoverHostnamesResult, error) {
			args := v.(GetAppSecFailoverHostnamesArgs)
			r, err := GetAppSecFailoverHostnames(ctx, &args, opts...)
			return *r, err
		}).(GetAppSecFailoverHostnamesResultOutput)
}

// A collection of arguments for invoking getAppSecFailoverHostnames.
type GetAppSecFailoverHostnamesOutputArgs struct {
	// . Unique identifier of the security configuration associated with the failover hosts.
	ConfigId pulumi.IntInput `pulumi:"configId"`
}

func (GetAppSecFailoverHostnamesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecFailoverHostnamesArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecFailoverHostnames.
type GetAppSecFailoverHostnamesResultOutput struct{ *pulumi.OutputState }

func (GetAppSecFailoverHostnamesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecFailoverHostnamesResult)(nil)).Elem()
}

func (o GetAppSecFailoverHostnamesResultOutput) ToGetAppSecFailoverHostnamesResultOutput() GetAppSecFailoverHostnamesResultOutput {
	return o
}

func (o GetAppSecFailoverHostnamesResultOutput) ToGetAppSecFailoverHostnamesResultOutputWithContext(ctx context.Context) GetAppSecFailoverHostnamesResultOutput {
	return o
}

func (o GetAppSecFailoverHostnamesResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppSecFailoverHostnamesResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

func (o GetAppSecFailoverHostnamesResultOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppSecFailoverHostnamesResult) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppSecFailoverHostnamesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecFailoverHostnamesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAppSecFailoverHostnamesResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecFailoverHostnamesResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetAppSecFailoverHostnamesResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecFailoverHostnamesResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppSecFailoverHostnamesResultOutput{})
}
