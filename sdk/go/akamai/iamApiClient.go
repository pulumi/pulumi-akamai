// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v10/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamApiClient struct {
	pulumi.CustomResourceState

	// The part of the client secret that identifies your API client and lets you access applications and resources.
	AccessToken pulumi.StringOutput `pulumi:"accessToken"`
	// Specifies activities available for the API client.
	Actions IamApiClientActionsOutput `pulumi:"actions"`
	// The number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.
	ActiveCredentialCount pulumi.IntOutput `pulumi:"activeCredentialCount"`
	// Enables the API client to manage more than one account.
	AllowAccountSwitch pulumi.BoolOutput `pulumi:"allowAccountSwitch"`
	// The APIs the API client can access.
	ApiAccess IamApiClientApiAccessOutput `pulumi:"apiAccess"`
	// The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single username in an array.
	AuthorizedUsers pulumi.StringArrayOutput `pulumi:"authorizedUsers"`
	// The base URL for the service.
	BaseUrl pulumi.StringOutput `pulumi:"baseUrl"`
	// Whether the API client can create a credential for a new API client. The default is false.
	CanAutoCreateCredential pulumi.BoolOutput `pulumi:"canAutoCreateCredential"`
	// A human-readable description of the API client.
	ClientDescription pulumi.StringOutput `pulumi:"clientDescription"`
	// A unique identifier for the API client.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// A human-readable name for the API client.
	ClientName pulumi.StringOutput `pulumi:"clientName"`
	// Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials.
	ClientType pulumi.StringOutput `pulumi:"clientType"`
	// The user who created the API client.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The ISO 8601 timestamp indicating when the API client was created.
	CreatedDate pulumi.StringOutput          `pulumi:"createdDate"`
	Credential  IamApiClientCredentialOutput `pulumi:"credential"`
	// Specifies the API client's group access.
	GroupAccess IamApiClientGroupAccessOutput `pulumi:"groupAccess"`
	// Specifies the API client's IP list restriction.
	IpAcl IamApiClientIpAclPtrOutput `pulumi:"ipAcl"`
	// Whether to lock or unlock the API client.
	Lock pulumi.BoolOutput `pulumi:"lock"`
	// Email addresses to notify users when credentials expire.
	NotificationEmails pulumi.StringArrayOutput `pulumi:"notificationEmails"`
	// Configures the API client to access the Fast Purge API. Provide it only if the `apis` attribute includes an `apiName` of `CCU API`.
	PurgeOptions IamApiClientPurgeOptionsPtrOutput `pulumi:"purgeOptions"`
}

// NewIamApiClient registers a new resource with the given unique name, arguments, and options.
func NewIamApiClient(ctx *pulumi.Context,
	name string, args *IamApiClientArgs, opts ...pulumi.ResourceOption) (*IamApiClient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiAccess == nil {
		return nil, errors.New("invalid value for required argument 'ApiAccess'")
	}
	if args.AuthorizedUsers == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizedUsers'")
	}
	if args.ClientName == nil {
		return nil, errors.New("invalid value for required argument 'ClientName'")
	}
	if args.ClientType == nil {
		return nil, errors.New("invalid value for required argument 'ClientType'")
	}
	if args.Credential == nil {
		return nil, errors.New("invalid value for required argument 'Credential'")
	}
	if args.GroupAccess == nil {
		return nil, errors.New("invalid value for required argument 'GroupAccess'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accessToken",
		"baseUrl",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IamApiClient
	err := ctx.RegisterResource("akamai:index/iamApiClient:IamApiClient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamApiClient gets an existing IamApiClient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamApiClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamApiClientState, opts ...pulumi.ResourceOption) (*IamApiClient, error) {
	var resource IamApiClient
	err := ctx.ReadResource("akamai:index/iamApiClient:IamApiClient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamApiClient resources.
type iamApiClientState struct {
	// The part of the client secret that identifies your API client and lets you access applications and resources.
	AccessToken *string `pulumi:"accessToken"`
	// Specifies activities available for the API client.
	Actions *IamApiClientActions `pulumi:"actions"`
	// The number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.
	ActiveCredentialCount *int `pulumi:"activeCredentialCount"`
	// Enables the API client to manage more than one account.
	AllowAccountSwitch *bool `pulumi:"allowAccountSwitch"`
	// The APIs the API client can access.
	ApiAccess *IamApiClientApiAccess `pulumi:"apiAccess"`
	// The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single username in an array.
	AuthorizedUsers []string `pulumi:"authorizedUsers"`
	// The base URL for the service.
	BaseUrl *string `pulumi:"baseUrl"`
	// Whether the API client can create a credential for a new API client. The default is false.
	CanAutoCreateCredential *bool `pulumi:"canAutoCreateCredential"`
	// A human-readable description of the API client.
	ClientDescription *string `pulumi:"clientDescription"`
	// A unique identifier for the API client.
	ClientId *string `pulumi:"clientId"`
	// A human-readable name for the API client.
	ClientName *string `pulumi:"clientName"`
	// Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials.
	ClientType *string `pulumi:"clientType"`
	// The user who created the API client.
	CreatedBy *string `pulumi:"createdBy"`
	// The ISO 8601 timestamp indicating when the API client was created.
	CreatedDate *string                 `pulumi:"createdDate"`
	Credential  *IamApiClientCredential `pulumi:"credential"`
	// Specifies the API client's group access.
	GroupAccess *IamApiClientGroupAccess `pulumi:"groupAccess"`
	// Specifies the API client's IP list restriction.
	IpAcl *IamApiClientIpAcl `pulumi:"ipAcl"`
	// Whether to lock or unlock the API client.
	Lock *bool `pulumi:"lock"`
	// Email addresses to notify users when credentials expire.
	NotificationEmails []string `pulumi:"notificationEmails"`
	// Configures the API client to access the Fast Purge API. Provide it only if the `apis` attribute includes an `apiName` of `CCU API`.
	PurgeOptions *IamApiClientPurgeOptions `pulumi:"purgeOptions"`
}

type IamApiClientState struct {
	// The part of the client secret that identifies your API client and lets you access applications and resources.
	AccessToken pulumi.StringPtrInput
	// Specifies activities available for the API client.
	Actions IamApiClientActionsPtrInput
	// The number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.
	ActiveCredentialCount pulumi.IntPtrInput
	// Enables the API client to manage more than one account.
	AllowAccountSwitch pulumi.BoolPtrInput
	// The APIs the API client can access.
	ApiAccess IamApiClientApiAccessPtrInput
	// The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single username in an array.
	AuthorizedUsers pulumi.StringArrayInput
	// The base URL for the service.
	BaseUrl pulumi.StringPtrInput
	// Whether the API client can create a credential for a new API client. The default is false.
	CanAutoCreateCredential pulumi.BoolPtrInput
	// A human-readable description of the API client.
	ClientDescription pulumi.StringPtrInput
	// A unique identifier for the API client.
	ClientId pulumi.StringPtrInput
	// A human-readable name for the API client.
	ClientName pulumi.StringPtrInput
	// Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials.
	ClientType pulumi.StringPtrInput
	// The user who created the API client.
	CreatedBy pulumi.StringPtrInput
	// The ISO 8601 timestamp indicating when the API client was created.
	CreatedDate pulumi.StringPtrInput
	Credential  IamApiClientCredentialPtrInput
	// Specifies the API client's group access.
	GroupAccess IamApiClientGroupAccessPtrInput
	// Specifies the API client's IP list restriction.
	IpAcl IamApiClientIpAclPtrInput
	// Whether to lock or unlock the API client.
	Lock pulumi.BoolPtrInput
	// Email addresses to notify users when credentials expire.
	NotificationEmails pulumi.StringArrayInput
	// Configures the API client to access the Fast Purge API. Provide it only if the `apis` attribute includes an `apiName` of `CCU API`.
	PurgeOptions IamApiClientPurgeOptionsPtrInput
}

func (IamApiClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamApiClientState)(nil)).Elem()
}

type iamApiClientArgs struct {
	// Enables the API client to manage more than one account.
	AllowAccountSwitch *bool `pulumi:"allowAccountSwitch"`
	// The APIs the API client can access.
	ApiAccess IamApiClientApiAccess `pulumi:"apiAccess"`
	// The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single username in an array.
	AuthorizedUsers []string `pulumi:"authorizedUsers"`
	// Whether the API client can create a credential for a new API client. The default is false.
	CanAutoCreateCredential *bool `pulumi:"canAutoCreateCredential"`
	// A human-readable description of the API client.
	ClientDescription *string `pulumi:"clientDescription"`
	// A human-readable name for the API client.
	ClientName string `pulumi:"clientName"`
	// Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials.
	ClientType string                 `pulumi:"clientType"`
	Credential IamApiClientCredential `pulumi:"credential"`
	// Specifies the API client's group access.
	GroupAccess IamApiClientGroupAccess `pulumi:"groupAccess"`
	// Specifies the API client's IP list restriction.
	IpAcl *IamApiClientIpAcl `pulumi:"ipAcl"`
	// Whether to lock or unlock the API client.
	Lock *bool `pulumi:"lock"`
	// Email addresses to notify users when credentials expire.
	NotificationEmails []string `pulumi:"notificationEmails"`
	// Configures the API client to access the Fast Purge API. Provide it only if the `apis` attribute includes an `apiName` of `CCU API`.
	PurgeOptions *IamApiClientPurgeOptions `pulumi:"purgeOptions"`
}

// The set of arguments for constructing a IamApiClient resource.
type IamApiClientArgs struct {
	// Enables the API client to manage more than one account.
	AllowAccountSwitch pulumi.BoolPtrInput
	// The APIs the API client can access.
	ApiAccess IamApiClientApiAccessInput
	// The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single username in an array.
	AuthorizedUsers pulumi.StringArrayInput
	// Whether the API client can create a credential for a new API client. The default is false.
	CanAutoCreateCredential pulumi.BoolPtrInput
	// A human-readable description of the API client.
	ClientDescription pulumi.StringPtrInput
	// A human-readable name for the API client.
	ClientName pulumi.StringInput
	// Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials.
	ClientType pulumi.StringInput
	Credential IamApiClientCredentialInput
	// Specifies the API client's group access.
	GroupAccess IamApiClientGroupAccessInput
	// Specifies the API client's IP list restriction.
	IpAcl IamApiClientIpAclPtrInput
	// Whether to lock or unlock the API client.
	Lock pulumi.BoolPtrInput
	// Email addresses to notify users when credentials expire.
	NotificationEmails pulumi.StringArrayInput
	// Configures the API client to access the Fast Purge API. Provide it only if the `apis` attribute includes an `apiName` of `CCU API`.
	PurgeOptions IamApiClientPurgeOptionsPtrInput
}

func (IamApiClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamApiClientArgs)(nil)).Elem()
}

type IamApiClientInput interface {
	pulumi.Input

	ToIamApiClientOutput() IamApiClientOutput
	ToIamApiClientOutputWithContext(ctx context.Context) IamApiClientOutput
}

func (*IamApiClient) ElementType() reflect.Type {
	return reflect.TypeOf((**IamApiClient)(nil)).Elem()
}

func (i *IamApiClient) ToIamApiClientOutput() IamApiClientOutput {
	return i.ToIamApiClientOutputWithContext(context.Background())
}

func (i *IamApiClient) ToIamApiClientOutputWithContext(ctx context.Context) IamApiClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamApiClientOutput)
}

// IamApiClientArrayInput is an input type that accepts IamApiClientArray and IamApiClientArrayOutput values.
// You can construct a concrete instance of `IamApiClientArrayInput` via:
//
//	IamApiClientArray{ IamApiClientArgs{...} }
type IamApiClientArrayInput interface {
	pulumi.Input

	ToIamApiClientArrayOutput() IamApiClientArrayOutput
	ToIamApiClientArrayOutputWithContext(context.Context) IamApiClientArrayOutput
}

type IamApiClientArray []IamApiClientInput

func (IamApiClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamApiClient)(nil)).Elem()
}

func (i IamApiClientArray) ToIamApiClientArrayOutput() IamApiClientArrayOutput {
	return i.ToIamApiClientArrayOutputWithContext(context.Background())
}

func (i IamApiClientArray) ToIamApiClientArrayOutputWithContext(ctx context.Context) IamApiClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamApiClientArrayOutput)
}

// IamApiClientMapInput is an input type that accepts IamApiClientMap and IamApiClientMapOutput values.
// You can construct a concrete instance of `IamApiClientMapInput` via:
//
//	IamApiClientMap{ "key": IamApiClientArgs{...} }
type IamApiClientMapInput interface {
	pulumi.Input

	ToIamApiClientMapOutput() IamApiClientMapOutput
	ToIamApiClientMapOutputWithContext(context.Context) IamApiClientMapOutput
}

type IamApiClientMap map[string]IamApiClientInput

func (IamApiClientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamApiClient)(nil)).Elem()
}

func (i IamApiClientMap) ToIamApiClientMapOutput() IamApiClientMapOutput {
	return i.ToIamApiClientMapOutputWithContext(context.Background())
}

func (i IamApiClientMap) ToIamApiClientMapOutputWithContext(ctx context.Context) IamApiClientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamApiClientMapOutput)
}

type IamApiClientOutput struct{ *pulumi.OutputState }

func (IamApiClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamApiClient)(nil)).Elem()
}

func (o IamApiClientOutput) ToIamApiClientOutput() IamApiClientOutput {
	return o
}

func (o IamApiClientOutput) ToIamApiClientOutputWithContext(ctx context.Context) IamApiClientOutput {
	return o
}

// The part of the client secret that identifies your API client and lets you access applications and resources.
func (o IamApiClientOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.StringOutput { return v.AccessToken }).(pulumi.StringOutput)
}

// Specifies activities available for the API client.
func (o IamApiClientOutput) Actions() IamApiClientActionsOutput {
	return o.ApplyT(func(v *IamApiClient) IamApiClientActionsOutput { return v.Actions }).(IamApiClientActionsOutput)
}

// The number of credentials active for the API client. When the count is zero, you can delete the API client without interruption.
func (o IamApiClientOutput) ActiveCredentialCount() pulumi.IntOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.IntOutput { return v.ActiveCredentialCount }).(pulumi.IntOutput)
}

// Enables the API client to manage more than one account.
func (o IamApiClientOutput) AllowAccountSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.BoolOutput { return v.AllowAccountSwitch }).(pulumi.BoolOutput)
}

// The APIs the API client can access.
func (o IamApiClientOutput) ApiAccess() IamApiClientApiAccessOutput {
	return o.ApplyT(func(v *IamApiClient) IamApiClientApiAccessOutput { return v.ApiAccess }).(IamApiClientApiAccessOutput)
}

// The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single username in an array.
func (o IamApiClientOutput) AuthorizedUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.StringArrayOutput { return v.AuthorizedUsers }).(pulumi.StringArrayOutput)
}

// The base URL for the service.
func (o IamApiClientOutput) BaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.StringOutput { return v.BaseUrl }).(pulumi.StringOutput)
}

// Whether the API client can create a credential for a new API client. The default is false.
func (o IamApiClientOutput) CanAutoCreateCredential() pulumi.BoolOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.BoolOutput { return v.CanAutoCreateCredential }).(pulumi.BoolOutput)
}

// A human-readable description of the API client.
func (o IamApiClientOutput) ClientDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.StringOutput { return v.ClientDescription }).(pulumi.StringOutput)
}

// A unique identifier for the API client.
func (o IamApiClientOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// A human-readable name for the API client.
func (o IamApiClientOutput) ClientName() pulumi.StringOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.StringOutput { return v.ClientName }).(pulumi.StringOutput)
}

// Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials.
func (o IamApiClientOutput) ClientType() pulumi.StringOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.StringOutput { return v.ClientType }).(pulumi.StringOutput)
}

// The user who created the API client.
func (o IamApiClientOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The ISO 8601 timestamp indicating when the API client was created.
func (o IamApiClientOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

func (o IamApiClientOutput) Credential() IamApiClientCredentialOutput {
	return o.ApplyT(func(v *IamApiClient) IamApiClientCredentialOutput { return v.Credential }).(IamApiClientCredentialOutput)
}

// Specifies the API client's group access.
func (o IamApiClientOutput) GroupAccess() IamApiClientGroupAccessOutput {
	return o.ApplyT(func(v *IamApiClient) IamApiClientGroupAccessOutput { return v.GroupAccess }).(IamApiClientGroupAccessOutput)
}

// Specifies the API client's IP list restriction.
func (o IamApiClientOutput) IpAcl() IamApiClientIpAclPtrOutput {
	return o.ApplyT(func(v *IamApiClient) IamApiClientIpAclPtrOutput { return v.IpAcl }).(IamApiClientIpAclPtrOutput)
}

// Whether to lock or unlock the API client.
func (o IamApiClientOutput) Lock() pulumi.BoolOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.BoolOutput { return v.Lock }).(pulumi.BoolOutput)
}

// Email addresses to notify users when credentials expire.
func (o IamApiClientOutput) NotificationEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IamApiClient) pulumi.StringArrayOutput { return v.NotificationEmails }).(pulumi.StringArrayOutput)
}

// Configures the API client to access the Fast Purge API. Provide it only if the `apis` attribute includes an `apiName` of `CCU API`.
func (o IamApiClientOutput) PurgeOptions() IamApiClientPurgeOptionsPtrOutput {
	return o.ApplyT(func(v *IamApiClient) IamApiClientPurgeOptionsPtrOutput { return v.PurgeOptions }).(IamApiClientPurgeOptionsPtrOutput)
}

type IamApiClientArrayOutput struct{ *pulumi.OutputState }

func (IamApiClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamApiClient)(nil)).Elem()
}

func (o IamApiClientArrayOutput) ToIamApiClientArrayOutput() IamApiClientArrayOutput {
	return o
}

func (o IamApiClientArrayOutput) ToIamApiClientArrayOutputWithContext(ctx context.Context) IamApiClientArrayOutput {
	return o
}

func (o IamApiClientArrayOutput) Index(i pulumi.IntInput) IamApiClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IamApiClient {
		return vs[0].([]*IamApiClient)[vs[1].(int)]
	}).(IamApiClientOutput)
}

type IamApiClientMapOutput struct{ *pulumi.OutputState }

func (IamApiClientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamApiClient)(nil)).Elem()
}

func (o IamApiClientMapOutput) ToIamApiClientMapOutput() IamApiClientMapOutput {
	return o
}

func (o IamApiClientMapOutput) ToIamApiClientMapOutputWithContext(ctx context.Context) IamApiClientMapOutput {
	return o
}

func (o IamApiClientMapOutput) MapIndex(k pulumi.StringInput) IamApiClientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IamApiClient {
		return vs[0].(map[string]*IamApiClient)[vs[1].(string)]
	}).(IamApiClientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamApiClientInput)(nil)).Elem(), &IamApiClient{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamApiClientArrayInput)(nil)).Elem(), IamApiClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamApiClientMapInput)(nil)).Elem(), IamApiClientMap{})
	pulumi.RegisterOutputType(IamApiClientOutput{})
	pulumi.RegisterOutputType(IamApiClientArrayOutput{})
	pulumi.RegisterOutputType(IamApiClientMapOutput{})
}
