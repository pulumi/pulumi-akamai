// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppSecRatePolicyAction struct {
	pulumi.CustomResourceState

	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Action to be taken for requests coming from an IPv4 address
	Ipv4Action pulumi.StringOutput `pulumi:"ipv4Action"`
	// Action to be taken for requests coming from an IPv6 address
	Ipv6Action pulumi.StringOutput `pulumi:"ipv6Action"`
	// Unique identifier of the rate policy
	RatePolicyId pulumi.IntOutput `pulumi:"ratePolicyId"`
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewAppSecRatePolicyAction registers a new resource with the given unique name, arguments, and options.
func NewAppSecRatePolicyAction(ctx *pulumi.Context,
	name string, args *AppSecRatePolicyActionArgs, opts ...pulumi.ResourceOption) (*AppSecRatePolicyAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.Ipv4Action == nil {
		return nil, errors.New("invalid value for required argument 'Ipv4Action'")
	}
	if args.Ipv6Action == nil {
		return nil, errors.New("invalid value for required argument 'Ipv6Action'")
	}
	if args.RatePolicyId == nil {
		return nil, errors.New("invalid value for required argument 'RatePolicyId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppSecRatePolicyAction
	err := ctx.RegisterResource("akamai:index/appSecRatePolicyAction:AppSecRatePolicyAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecRatePolicyAction gets an existing AppSecRatePolicyAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecRatePolicyAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecRatePolicyActionState, opts ...pulumi.ResourceOption) (*AppSecRatePolicyAction, error) {
	var resource AppSecRatePolicyAction
	err := ctx.ReadResource("akamai:index/appSecRatePolicyAction:AppSecRatePolicyAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecRatePolicyAction resources.
type appSecRatePolicyActionState struct {
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// Action to be taken for requests coming from an IPv4 address
	Ipv4Action *string `pulumi:"ipv4Action"`
	// Action to be taken for requests coming from an IPv6 address
	Ipv6Action *string `pulumi:"ipv6Action"`
	// Unique identifier of the rate policy
	RatePolicyId *int `pulumi:"ratePolicyId"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppSecRatePolicyActionState struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// Action to be taken for requests coming from an IPv4 address
	Ipv4Action pulumi.StringPtrInput
	// Action to be taken for requests coming from an IPv6 address
	Ipv6Action pulumi.StringPtrInput
	// Unique identifier of the rate policy
	RatePolicyId pulumi.IntPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecRatePolicyActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecRatePolicyActionState)(nil)).Elem()
}

type appSecRatePolicyActionArgs struct {
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// Action to be taken for requests coming from an IPv4 address
	Ipv4Action string `pulumi:"ipv4Action"`
	// Action to be taken for requests coming from an IPv6 address
	Ipv6Action string `pulumi:"ipv6Action"`
	// Unique identifier of the rate policy
	RatePolicyId int `pulumi:"ratePolicyId"`
	// Unique identifier of the security policy
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppSecRatePolicyAction resource.
type AppSecRatePolicyActionArgs struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// Action to be taken for requests coming from an IPv4 address
	Ipv4Action pulumi.StringInput
	// Action to be taken for requests coming from an IPv6 address
	Ipv6Action pulumi.StringInput
	// Unique identifier of the rate policy
	RatePolicyId pulumi.IntInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringInput
}

func (AppSecRatePolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecRatePolicyActionArgs)(nil)).Elem()
}

type AppSecRatePolicyActionInput interface {
	pulumi.Input

	ToAppSecRatePolicyActionOutput() AppSecRatePolicyActionOutput
	ToAppSecRatePolicyActionOutputWithContext(ctx context.Context) AppSecRatePolicyActionOutput
}

func (*AppSecRatePolicyAction) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecRatePolicyAction)(nil)).Elem()
}

func (i *AppSecRatePolicyAction) ToAppSecRatePolicyActionOutput() AppSecRatePolicyActionOutput {
	return i.ToAppSecRatePolicyActionOutputWithContext(context.Background())
}

func (i *AppSecRatePolicyAction) ToAppSecRatePolicyActionOutputWithContext(ctx context.Context) AppSecRatePolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecRatePolicyActionOutput)
}

// AppSecRatePolicyActionArrayInput is an input type that accepts AppSecRatePolicyActionArray and AppSecRatePolicyActionArrayOutput values.
// You can construct a concrete instance of `AppSecRatePolicyActionArrayInput` via:
//
//	AppSecRatePolicyActionArray{ AppSecRatePolicyActionArgs{...} }
type AppSecRatePolicyActionArrayInput interface {
	pulumi.Input

	ToAppSecRatePolicyActionArrayOutput() AppSecRatePolicyActionArrayOutput
	ToAppSecRatePolicyActionArrayOutputWithContext(context.Context) AppSecRatePolicyActionArrayOutput
}

type AppSecRatePolicyActionArray []AppSecRatePolicyActionInput

func (AppSecRatePolicyActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecRatePolicyAction)(nil)).Elem()
}

func (i AppSecRatePolicyActionArray) ToAppSecRatePolicyActionArrayOutput() AppSecRatePolicyActionArrayOutput {
	return i.ToAppSecRatePolicyActionArrayOutputWithContext(context.Background())
}

func (i AppSecRatePolicyActionArray) ToAppSecRatePolicyActionArrayOutputWithContext(ctx context.Context) AppSecRatePolicyActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecRatePolicyActionArrayOutput)
}

// AppSecRatePolicyActionMapInput is an input type that accepts AppSecRatePolicyActionMap and AppSecRatePolicyActionMapOutput values.
// You can construct a concrete instance of `AppSecRatePolicyActionMapInput` via:
//
//	AppSecRatePolicyActionMap{ "key": AppSecRatePolicyActionArgs{...} }
type AppSecRatePolicyActionMapInput interface {
	pulumi.Input

	ToAppSecRatePolicyActionMapOutput() AppSecRatePolicyActionMapOutput
	ToAppSecRatePolicyActionMapOutputWithContext(context.Context) AppSecRatePolicyActionMapOutput
}

type AppSecRatePolicyActionMap map[string]AppSecRatePolicyActionInput

func (AppSecRatePolicyActionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecRatePolicyAction)(nil)).Elem()
}

func (i AppSecRatePolicyActionMap) ToAppSecRatePolicyActionMapOutput() AppSecRatePolicyActionMapOutput {
	return i.ToAppSecRatePolicyActionMapOutputWithContext(context.Background())
}

func (i AppSecRatePolicyActionMap) ToAppSecRatePolicyActionMapOutputWithContext(ctx context.Context) AppSecRatePolicyActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecRatePolicyActionMapOutput)
}

type AppSecRatePolicyActionOutput struct{ *pulumi.OutputState }

func (AppSecRatePolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecRatePolicyAction)(nil)).Elem()
}

func (o AppSecRatePolicyActionOutput) ToAppSecRatePolicyActionOutput() AppSecRatePolicyActionOutput {
	return o
}

func (o AppSecRatePolicyActionOutput) ToAppSecRatePolicyActionOutputWithContext(ctx context.Context) AppSecRatePolicyActionOutput {
	return o
}

// Unique identifier of the security configuration
func (o AppSecRatePolicyActionOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecRatePolicyAction) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Action to be taken for requests coming from an IPv4 address
func (o AppSecRatePolicyActionOutput) Ipv4Action() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecRatePolicyAction) pulumi.StringOutput { return v.Ipv4Action }).(pulumi.StringOutput)
}

// Action to be taken for requests coming from an IPv6 address
func (o AppSecRatePolicyActionOutput) Ipv6Action() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecRatePolicyAction) pulumi.StringOutput { return v.Ipv6Action }).(pulumi.StringOutput)
}

// Unique identifier of the rate policy
func (o AppSecRatePolicyActionOutput) RatePolicyId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecRatePolicyAction) pulumi.IntOutput { return v.RatePolicyId }).(pulumi.IntOutput)
}

// Unique identifier of the security policy
func (o AppSecRatePolicyActionOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecRatePolicyAction) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type AppSecRatePolicyActionArrayOutput struct{ *pulumi.OutputState }

func (AppSecRatePolicyActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecRatePolicyAction)(nil)).Elem()
}

func (o AppSecRatePolicyActionArrayOutput) ToAppSecRatePolicyActionArrayOutput() AppSecRatePolicyActionArrayOutput {
	return o
}

func (o AppSecRatePolicyActionArrayOutput) ToAppSecRatePolicyActionArrayOutputWithContext(ctx context.Context) AppSecRatePolicyActionArrayOutput {
	return o
}

func (o AppSecRatePolicyActionArrayOutput) Index(i pulumi.IntInput) AppSecRatePolicyActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecRatePolicyAction {
		return vs[0].([]*AppSecRatePolicyAction)[vs[1].(int)]
	}).(AppSecRatePolicyActionOutput)
}

type AppSecRatePolicyActionMapOutput struct{ *pulumi.OutputState }

func (AppSecRatePolicyActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecRatePolicyAction)(nil)).Elem()
}

func (o AppSecRatePolicyActionMapOutput) ToAppSecRatePolicyActionMapOutput() AppSecRatePolicyActionMapOutput {
	return o
}

func (o AppSecRatePolicyActionMapOutput) ToAppSecRatePolicyActionMapOutputWithContext(ctx context.Context) AppSecRatePolicyActionMapOutput {
	return o
}

func (o AppSecRatePolicyActionMapOutput) MapIndex(k pulumi.StringInput) AppSecRatePolicyActionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecRatePolicyAction {
		return vs[0].(map[string]*AppSecRatePolicyAction)[vs[1].(string)]
	}).(AppSecRatePolicyActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecRatePolicyActionInput)(nil)).Elem(), &AppSecRatePolicyAction{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecRatePolicyActionArrayInput)(nil)).Elem(), AppSecRatePolicyActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecRatePolicyActionMapInput)(nil)).Elem(), AppSecRatePolicyActionMap{})
	pulumi.RegisterOutputType(AppSecRatePolicyActionOutput{})
	pulumi.RegisterOutputType(AppSecRatePolicyActionArrayOutput{})
	pulumi.RegisterOutputType(AppSecRatePolicyActionMapOutput{})
}
