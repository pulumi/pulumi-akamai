// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v8/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupBotmanContentProtectionJavascriptInjectionRule(ctx *pulumi.Context, args *LookupBotmanContentProtectionJavascriptInjectionRuleArgs, opts ...pulumi.InvokeOption) (*LookupBotmanContentProtectionJavascriptInjectionRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBotmanContentProtectionJavascriptInjectionRuleResult
	err := ctx.Invoke("akamai:index/getBotmanContentProtectionJavascriptInjectionRule:getBotmanContentProtectionJavascriptInjectionRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBotmanContentProtectionJavascriptInjectionRule.
type LookupBotmanContentProtectionJavascriptInjectionRuleArgs struct {
	ConfigId                                   int     `pulumi:"configId"`
	ContentProtectionJavascriptInjectionRuleId *string `pulumi:"contentProtectionJavascriptInjectionRuleId"`
	SecurityPolicyId                           string  `pulumi:"securityPolicyId"`
}

// A collection of values returned by getBotmanContentProtectionJavascriptInjectionRule.
type LookupBotmanContentProtectionJavascriptInjectionRuleResult struct {
	ConfigId                                   int     `pulumi:"configId"`
	ContentProtectionJavascriptInjectionRuleId *string `pulumi:"contentProtectionJavascriptInjectionRuleId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	Json             string `pulumi:"json"`
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

func LookupBotmanContentProtectionJavascriptInjectionRuleOutput(ctx *pulumi.Context, args LookupBotmanContentProtectionJavascriptInjectionRuleOutputArgs, opts ...pulumi.InvokeOption) LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput, error) {
			args := v.(LookupBotmanContentProtectionJavascriptInjectionRuleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("akamai:index/getBotmanContentProtectionJavascriptInjectionRule:getBotmanContentProtectionJavascriptInjectionRule", args, LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput{}, options).(LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput), nil
		}).(LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput)
}

// A collection of arguments for invoking getBotmanContentProtectionJavascriptInjectionRule.
type LookupBotmanContentProtectionJavascriptInjectionRuleOutputArgs struct {
	ConfigId                                   pulumi.IntInput       `pulumi:"configId"`
	ContentProtectionJavascriptInjectionRuleId pulumi.StringPtrInput `pulumi:"contentProtectionJavascriptInjectionRuleId"`
	SecurityPolicyId                           pulumi.StringInput    `pulumi:"securityPolicyId"`
}

func (LookupBotmanContentProtectionJavascriptInjectionRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotmanContentProtectionJavascriptInjectionRuleArgs)(nil)).Elem()
}

// A collection of values returned by getBotmanContentProtectionJavascriptInjectionRule.
type LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput struct{ *pulumi.OutputState }

func (LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBotmanContentProtectionJavascriptInjectionRuleResult)(nil)).Elem()
}

func (o LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput) ToLookupBotmanContentProtectionJavascriptInjectionRuleResultOutput() LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput {
	return o
}

func (o LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput) ToLookupBotmanContentProtectionJavascriptInjectionRuleResultOutputWithContext(ctx context.Context) LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput {
	return o
}

func (o LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBotmanContentProtectionJavascriptInjectionRuleResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

func (o LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput) ContentProtectionJavascriptInjectionRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBotmanContentProtectionJavascriptInjectionRuleResult) *string {
		return v.ContentProtectionJavascriptInjectionRuleId
	}).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotmanContentProtectionJavascriptInjectionRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotmanContentProtectionJavascriptInjectionRuleResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBotmanContentProtectionJavascriptInjectionRuleResult) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBotmanContentProtectionJavascriptInjectionRuleResultOutput{})
}
