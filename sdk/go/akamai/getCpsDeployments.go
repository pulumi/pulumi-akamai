// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `getCpsDeployments` data source to retrieve deployed certificates for a specific enrollment.
//
// You'll see data for ECDSA, RSA, or both depending on the type and number of certificates you uploaded.
//
// ## Basic usage
//
// This example shows how to return information about deployed certificates for enrollment ID 12345.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := akamai.GetCpsDeployments(ctx, &akamai.GetCpsDeploymentsArgs{
//				EnrollmentId: 12345,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Attributes reference
//
// This data source returns these attributes:
//
// * `productionCertificateRsa` - The RSA certificate deployed on the production network.
// * `productionCertificateEcdsa` - The ECDSA certificate deployed on the production network.
// * `stagingCertificateRsa` - The RSA certificate deployed on the staging network.
// * `stagingCertificateEcdsa` - The ECDSA certificate deployed on the staging network.
// * `expiryDate` - The expiration date for the certificate in ISO-8601 format.
// * `autoRenewalStartTime` - The specific date the automatic renewal will start on. The date is in ISO-8601 format. <br> For DV certificates, CPS automatically starts the renewal process 90 days before the current certificate expires. It then automatically deploys the renewed certificate when it receives it from the CA. <br> For third-party certificates, CPS creates a change. This change is needed to get a new CSR and upload the new certificate. Use the `getCPSEnrollments` data source to view pending changes.
func GetCpsDeployments(ctx *pulumi.Context, args *GetCpsDeploymentsArgs, opts ...pulumi.InvokeOption) (*GetCpsDeploymentsResult, error) {
	var rv GetCpsDeploymentsResult
	err := ctx.Invoke("akamai:index/getCpsDeployments:getCpsDeployments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCpsDeployments.
type GetCpsDeploymentsArgs struct {
	// Unique identifier of the enrollment.
	EnrollmentId int `pulumi:"enrollmentId"`
}

// A collection of values returned by getCpsDeployments.
type GetCpsDeploymentsResult struct {
	AutoRenewalStartTime string `pulumi:"autoRenewalStartTime"`
	EnrollmentId         int    `pulumi:"enrollmentId"`
	ExpiryDate           string `pulumi:"expiryDate"`
	// The provider-assigned unique ID for this managed resource.
	Id                         string `pulumi:"id"`
	ProductionCertificateEcdsa string `pulumi:"productionCertificateEcdsa"`
	ProductionCertificateRsa   string `pulumi:"productionCertificateRsa"`
	StagingCertificateEcdsa    string `pulumi:"stagingCertificateEcdsa"`
	StagingCertificateRsa      string `pulumi:"stagingCertificateRsa"`
}

func GetCpsDeploymentsOutput(ctx *pulumi.Context, args GetCpsDeploymentsOutputArgs, opts ...pulumi.InvokeOption) GetCpsDeploymentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCpsDeploymentsResult, error) {
			args := v.(GetCpsDeploymentsArgs)
			r, err := GetCpsDeployments(ctx, &args, opts...)
			var s GetCpsDeploymentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCpsDeploymentsResultOutput)
}

// A collection of arguments for invoking getCpsDeployments.
type GetCpsDeploymentsOutputArgs struct {
	// Unique identifier of the enrollment.
	EnrollmentId pulumi.IntInput `pulumi:"enrollmentId"`
}

func (GetCpsDeploymentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCpsDeploymentsArgs)(nil)).Elem()
}

// A collection of values returned by getCpsDeployments.
type GetCpsDeploymentsResultOutput struct{ *pulumi.OutputState }

func (GetCpsDeploymentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCpsDeploymentsResult)(nil)).Elem()
}

func (o GetCpsDeploymentsResultOutput) ToGetCpsDeploymentsResultOutput() GetCpsDeploymentsResultOutput {
	return o
}

func (o GetCpsDeploymentsResultOutput) ToGetCpsDeploymentsResultOutputWithContext(ctx context.Context) GetCpsDeploymentsResultOutput {
	return o
}

func (o GetCpsDeploymentsResultOutput) AutoRenewalStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpsDeploymentsResult) string { return v.AutoRenewalStartTime }).(pulumi.StringOutput)
}

func (o GetCpsDeploymentsResultOutput) EnrollmentId() pulumi.IntOutput {
	return o.ApplyT(func(v GetCpsDeploymentsResult) int { return v.EnrollmentId }).(pulumi.IntOutput)
}

func (o GetCpsDeploymentsResultOutput) ExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpsDeploymentsResult) string { return v.ExpiryDate }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCpsDeploymentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpsDeploymentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCpsDeploymentsResultOutput) ProductionCertificateEcdsa() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpsDeploymentsResult) string { return v.ProductionCertificateEcdsa }).(pulumi.StringOutput)
}

func (o GetCpsDeploymentsResultOutput) ProductionCertificateRsa() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpsDeploymentsResult) string { return v.ProductionCertificateRsa }).(pulumi.StringOutput)
}

func (o GetCpsDeploymentsResultOutput) StagingCertificateEcdsa() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpsDeploymentsResult) string { return v.StagingCertificateEcdsa }).(pulumi.StringOutput)
}

func (o GetCpsDeploymentsResultOutput) StagingCertificateRsa() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpsDeploymentsResult) string { return v.StagingCertificateRsa }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCpsDeploymentsResultOutput{})
}
