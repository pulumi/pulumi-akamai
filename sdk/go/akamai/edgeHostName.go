// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EdgeHostName struct {
	pulumi.CustomResourceState

	Certificate  pulumi.IntPtrOutput `pulumi:"certificate"`
	ContractId   pulumi.StringOutput `pulumi:"contractId"`
	EdgeHostname pulumi.StringOutput `pulumi:"edgeHostname"`
	GroupId      pulumi.StringOutput `pulumi:"groupId"`
	IpBehavior   pulumi.StringOutput `pulumi:"ipBehavior"`
	ProductId    pulumi.StringOutput `pulumi:"productId"`
	// Email address that should receive updates on the IP behavior update request. Required for update operation.
	StatusUpdateEmails pulumi.StringArrayOutput `pulumi:"statusUpdateEmails"`
	// A JSON encoded list of use cases
	UseCases pulumi.StringPtrOutput `pulumi:"useCases"`
}

// NewEdgeHostName registers a new resource with the given unique name, arguments, and options.
func NewEdgeHostName(ctx *pulumi.Context,
	name string, args *EdgeHostNameArgs, opts ...pulumi.ResourceOption) (*EdgeHostName, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContractId == nil {
		return nil, errors.New("invalid value for required argument 'ContractId'")
	}
	if args.EdgeHostname == nil {
		return nil, errors.New("invalid value for required argument 'EdgeHostname'")
	}
	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.IpBehavior == nil {
		return nil, errors.New("invalid value for required argument 'IpBehavior'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("akamai:properties/edgeHostName:EdgeHostName"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EdgeHostName
	err := ctx.RegisterResource("akamai:index/edgeHostName:EdgeHostName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeHostName gets an existing EdgeHostName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeHostName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeHostNameState, opts ...pulumi.ResourceOption) (*EdgeHostName, error) {
	var resource EdgeHostName
	err := ctx.ReadResource("akamai:index/edgeHostName:EdgeHostName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeHostName resources.
type edgeHostNameState struct {
	Certificate  *int    `pulumi:"certificate"`
	ContractId   *string `pulumi:"contractId"`
	EdgeHostname *string `pulumi:"edgeHostname"`
	GroupId      *string `pulumi:"groupId"`
	IpBehavior   *string `pulumi:"ipBehavior"`
	ProductId    *string `pulumi:"productId"`
	// Email address that should receive updates on the IP behavior update request. Required for update operation.
	StatusUpdateEmails []string `pulumi:"statusUpdateEmails"`
	// A JSON encoded list of use cases
	UseCases *string `pulumi:"useCases"`
}

type EdgeHostNameState struct {
	Certificate  pulumi.IntPtrInput
	ContractId   pulumi.StringPtrInput
	EdgeHostname pulumi.StringPtrInput
	GroupId      pulumi.StringPtrInput
	IpBehavior   pulumi.StringPtrInput
	ProductId    pulumi.StringPtrInput
	// Email address that should receive updates on the IP behavior update request. Required for update operation.
	StatusUpdateEmails pulumi.StringArrayInput
	// A JSON encoded list of use cases
	UseCases pulumi.StringPtrInput
}

func (EdgeHostNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeHostNameState)(nil)).Elem()
}

type edgeHostNameArgs struct {
	Certificate  *int    `pulumi:"certificate"`
	ContractId   string  `pulumi:"contractId"`
	EdgeHostname string  `pulumi:"edgeHostname"`
	GroupId      string  `pulumi:"groupId"`
	IpBehavior   string  `pulumi:"ipBehavior"`
	ProductId    *string `pulumi:"productId"`
	// Email address that should receive updates on the IP behavior update request. Required for update operation.
	StatusUpdateEmails []string `pulumi:"statusUpdateEmails"`
	// A JSON encoded list of use cases
	UseCases *string `pulumi:"useCases"`
}

// The set of arguments for constructing a EdgeHostName resource.
type EdgeHostNameArgs struct {
	Certificate  pulumi.IntPtrInput
	ContractId   pulumi.StringInput
	EdgeHostname pulumi.StringInput
	GroupId      pulumi.StringInput
	IpBehavior   pulumi.StringInput
	ProductId    pulumi.StringPtrInput
	// Email address that should receive updates on the IP behavior update request. Required for update operation.
	StatusUpdateEmails pulumi.StringArrayInput
	// A JSON encoded list of use cases
	UseCases pulumi.StringPtrInput
}

func (EdgeHostNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeHostNameArgs)(nil)).Elem()
}

type EdgeHostNameInput interface {
	pulumi.Input

	ToEdgeHostNameOutput() EdgeHostNameOutput
	ToEdgeHostNameOutputWithContext(ctx context.Context) EdgeHostNameOutput
}

func (*EdgeHostName) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeHostName)(nil)).Elem()
}

func (i *EdgeHostName) ToEdgeHostNameOutput() EdgeHostNameOutput {
	return i.ToEdgeHostNameOutputWithContext(context.Background())
}

func (i *EdgeHostName) ToEdgeHostNameOutputWithContext(ctx context.Context) EdgeHostNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeHostNameOutput)
}

// EdgeHostNameArrayInput is an input type that accepts EdgeHostNameArray and EdgeHostNameArrayOutput values.
// You can construct a concrete instance of `EdgeHostNameArrayInput` via:
//
//	EdgeHostNameArray{ EdgeHostNameArgs{...} }
type EdgeHostNameArrayInput interface {
	pulumi.Input

	ToEdgeHostNameArrayOutput() EdgeHostNameArrayOutput
	ToEdgeHostNameArrayOutputWithContext(context.Context) EdgeHostNameArrayOutput
}

type EdgeHostNameArray []EdgeHostNameInput

func (EdgeHostNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeHostName)(nil)).Elem()
}

func (i EdgeHostNameArray) ToEdgeHostNameArrayOutput() EdgeHostNameArrayOutput {
	return i.ToEdgeHostNameArrayOutputWithContext(context.Background())
}

func (i EdgeHostNameArray) ToEdgeHostNameArrayOutputWithContext(ctx context.Context) EdgeHostNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeHostNameArrayOutput)
}

// EdgeHostNameMapInput is an input type that accepts EdgeHostNameMap and EdgeHostNameMapOutput values.
// You can construct a concrete instance of `EdgeHostNameMapInput` via:
//
//	EdgeHostNameMap{ "key": EdgeHostNameArgs{...} }
type EdgeHostNameMapInput interface {
	pulumi.Input

	ToEdgeHostNameMapOutput() EdgeHostNameMapOutput
	ToEdgeHostNameMapOutputWithContext(context.Context) EdgeHostNameMapOutput
}

type EdgeHostNameMap map[string]EdgeHostNameInput

func (EdgeHostNameMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeHostName)(nil)).Elem()
}

func (i EdgeHostNameMap) ToEdgeHostNameMapOutput() EdgeHostNameMapOutput {
	return i.ToEdgeHostNameMapOutputWithContext(context.Background())
}

func (i EdgeHostNameMap) ToEdgeHostNameMapOutputWithContext(ctx context.Context) EdgeHostNameMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeHostNameMapOutput)
}

type EdgeHostNameOutput struct{ *pulumi.OutputState }

func (EdgeHostNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeHostName)(nil)).Elem()
}

func (o EdgeHostNameOutput) ToEdgeHostNameOutput() EdgeHostNameOutput {
	return o
}

func (o EdgeHostNameOutput) ToEdgeHostNameOutputWithContext(ctx context.Context) EdgeHostNameOutput {
	return o
}

func (o EdgeHostNameOutput) Certificate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.IntPtrOutput { return v.Certificate }).(pulumi.IntPtrOutput)
}

func (o EdgeHostNameOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.ContractId }).(pulumi.StringOutput)
}

func (o EdgeHostNameOutput) EdgeHostname() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.EdgeHostname }).(pulumi.StringOutput)
}

func (o EdgeHostNameOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

func (o EdgeHostNameOutput) IpBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.IpBehavior }).(pulumi.StringOutput)
}

func (o EdgeHostNameOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

// Email address that should receive updates on the IP behavior update request. Required for update operation.
func (o EdgeHostNameOutput) StatusUpdateEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringArrayOutput { return v.StatusUpdateEmails }).(pulumi.StringArrayOutput)
}

// A JSON encoded list of use cases
func (o EdgeHostNameOutput) UseCases() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeHostName) pulumi.StringPtrOutput { return v.UseCases }).(pulumi.StringPtrOutput)
}

type EdgeHostNameArrayOutput struct{ *pulumi.OutputState }

func (EdgeHostNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeHostName)(nil)).Elem()
}

func (o EdgeHostNameArrayOutput) ToEdgeHostNameArrayOutput() EdgeHostNameArrayOutput {
	return o
}

func (o EdgeHostNameArrayOutput) ToEdgeHostNameArrayOutputWithContext(ctx context.Context) EdgeHostNameArrayOutput {
	return o
}

func (o EdgeHostNameArrayOutput) Index(i pulumi.IntInput) EdgeHostNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeHostName {
		return vs[0].([]*EdgeHostName)[vs[1].(int)]
	}).(EdgeHostNameOutput)
}

type EdgeHostNameMapOutput struct{ *pulumi.OutputState }

func (EdgeHostNameMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeHostName)(nil)).Elem()
}

func (o EdgeHostNameMapOutput) ToEdgeHostNameMapOutput() EdgeHostNameMapOutput {
	return o
}

func (o EdgeHostNameMapOutput) ToEdgeHostNameMapOutputWithContext(ctx context.Context) EdgeHostNameMapOutput {
	return o
}

func (o EdgeHostNameMapOutput) MapIndex(k pulumi.StringInput) EdgeHostNameOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeHostName {
		return vs[0].(map[string]*EdgeHostName)[vs[1].(string)]
	}).(EdgeHostNameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeHostNameInput)(nil)).Elem(), &EdgeHostName{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeHostNameArrayInput)(nil)).Elem(), EdgeHostNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeHostNameMapInput)(nil)).Elem(), EdgeHostNameMap{})
	pulumi.RegisterOutputType(EdgeHostNameOutput{})
	pulumi.RegisterOutputType(EdgeHostNameArrayOutput{})
	pulumi.RegisterOutputType(EdgeHostNameMapOutput{})
}
