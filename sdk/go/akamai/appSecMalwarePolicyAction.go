// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppSecMalwarePolicyAction struct {
	pulumi.CustomResourceState

	// Action to be taken for requests scanned according to the malware policy
	Action pulumi.StringOutput `pulumi:"action"`
	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Unique identifier of the malware policy
	MalwarePolicyId pulumi.IntOutput `pulumi:"malwarePolicyId"`
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
	// Action to be taken for requests not scanned according to the malware policy
	UnscannedAction pulumi.StringOutput `pulumi:"unscannedAction"`
}

// NewAppSecMalwarePolicyAction registers a new resource with the given unique name, arguments, and options.
func NewAppSecMalwarePolicyAction(ctx *pulumi.Context,
	name string, args *AppSecMalwarePolicyActionArgs, opts ...pulumi.ResourceOption) (*AppSecMalwarePolicyAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.MalwarePolicyId == nil {
		return nil, errors.New("invalid value for required argument 'MalwarePolicyId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	if args.UnscannedAction == nil {
		return nil, errors.New("invalid value for required argument 'UnscannedAction'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppSecMalwarePolicyAction
	err := ctx.RegisterResource("akamai:index/appSecMalwarePolicyAction:AppSecMalwarePolicyAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecMalwarePolicyAction gets an existing AppSecMalwarePolicyAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecMalwarePolicyAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecMalwarePolicyActionState, opts ...pulumi.ResourceOption) (*AppSecMalwarePolicyAction, error) {
	var resource AppSecMalwarePolicyAction
	err := ctx.ReadResource("akamai:index/appSecMalwarePolicyAction:AppSecMalwarePolicyAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecMalwarePolicyAction resources.
type appSecMalwarePolicyActionState struct {
	// Action to be taken for requests scanned according to the malware policy
	Action *string `pulumi:"action"`
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// Unique identifier of the malware policy
	MalwarePolicyId *int `pulumi:"malwarePolicyId"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
	// Action to be taken for requests not scanned according to the malware policy
	UnscannedAction *string `pulumi:"unscannedAction"`
}

type AppSecMalwarePolicyActionState struct {
	// Action to be taken for requests scanned according to the malware policy
	Action pulumi.StringPtrInput
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// Unique identifier of the malware policy
	MalwarePolicyId pulumi.IntPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
	// Action to be taken for requests not scanned according to the malware policy
	UnscannedAction pulumi.StringPtrInput
}

func (AppSecMalwarePolicyActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecMalwarePolicyActionState)(nil)).Elem()
}

type appSecMalwarePolicyActionArgs struct {
	// Action to be taken for requests scanned according to the malware policy
	Action string `pulumi:"action"`
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// Unique identifier of the malware policy
	MalwarePolicyId int `pulumi:"malwarePolicyId"`
	// Unique identifier of the security policy
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	// Action to be taken for requests not scanned according to the malware policy
	UnscannedAction string `pulumi:"unscannedAction"`
}

// The set of arguments for constructing a AppSecMalwarePolicyAction resource.
type AppSecMalwarePolicyActionArgs struct {
	// Action to be taken for requests scanned according to the malware policy
	Action pulumi.StringInput
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// Unique identifier of the malware policy
	MalwarePolicyId pulumi.IntInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringInput
	// Action to be taken for requests not scanned according to the malware policy
	UnscannedAction pulumi.StringInput
}

func (AppSecMalwarePolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecMalwarePolicyActionArgs)(nil)).Elem()
}

type AppSecMalwarePolicyActionInput interface {
	pulumi.Input

	ToAppSecMalwarePolicyActionOutput() AppSecMalwarePolicyActionOutput
	ToAppSecMalwarePolicyActionOutputWithContext(ctx context.Context) AppSecMalwarePolicyActionOutput
}

func (*AppSecMalwarePolicyAction) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecMalwarePolicyAction)(nil)).Elem()
}

func (i *AppSecMalwarePolicyAction) ToAppSecMalwarePolicyActionOutput() AppSecMalwarePolicyActionOutput {
	return i.ToAppSecMalwarePolicyActionOutputWithContext(context.Background())
}

func (i *AppSecMalwarePolicyAction) ToAppSecMalwarePolicyActionOutputWithContext(ctx context.Context) AppSecMalwarePolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecMalwarePolicyActionOutput)
}

// AppSecMalwarePolicyActionArrayInput is an input type that accepts AppSecMalwarePolicyActionArray and AppSecMalwarePolicyActionArrayOutput values.
// You can construct a concrete instance of `AppSecMalwarePolicyActionArrayInput` via:
//
//	AppSecMalwarePolicyActionArray{ AppSecMalwarePolicyActionArgs{...} }
type AppSecMalwarePolicyActionArrayInput interface {
	pulumi.Input

	ToAppSecMalwarePolicyActionArrayOutput() AppSecMalwarePolicyActionArrayOutput
	ToAppSecMalwarePolicyActionArrayOutputWithContext(context.Context) AppSecMalwarePolicyActionArrayOutput
}

type AppSecMalwarePolicyActionArray []AppSecMalwarePolicyActionInput

func (AppSecMalwarePolicyActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecMalwarePolicyAction)(nil)).Elem()
}

func (i AppSecMalwarePolicyActionArray) ToAppSecMalwarePolicyActionArrayOutput() AppSecMalwarePolicyActionArrayOutput {
	return i.ToAppSecMalwarePolicyActionArrayOutputWithContext(context.Background())
}

func (i AppSecMalwarePolicyActionArray) ToAppSecMalwarePolicyActionArrayOutputWithContext(ctx context.Context) AppSecMalwarePolicyActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecMalwarePolicyActionArrayOutput)
}

// AppSecMalwarePolicyActionMapInput is an input type that accepts AppSecMalwarePolicyActionMap and AppSecMalwarePolicyActionMapOutput values.
// You can construct a concrete instance of `AppSecMalwarePolicyActionMapInput` via:
//
//	AppSecMalwarePolicyActionMap{ "key": AppSecMalwarePolicyActionArgs{...} }
type AppSecMalwarePolicyActionMapInput interface {
	pulumi.Input

	ToAppSecMalwarePolicyActionMapOutput() AppSecMalwarePolicyActionMapOutput
	ToAppSecMalwarePolicyActionMapOutputWithContext(context.Context) AppSecMalwarePolicyActionMapOutput
}

type AppSecMalwarePolicyActionMap map[string]AppSecMalwarePolicyActionInput

func (AppSecMalwarePolicyActionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecMalwarePolicyAction)(nil)).Elem()
}

func (i AppSecMalwarePolicyActionMap) ToAppSecMalwarePolicyActionMapOutput() AppSecMalwarePolicyActionMapOutput {
	return i.ToAppSecMalwarePolicyActionMapOutputWithContext(context.Background())
}

func (i AppSecMalwarePolicyActionMap) ToAppSecMalwarePolicyActionMapOutputWithContext(ctx context.Context) AppSecMalwarePolicyActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecMalwarePolicyActionMapOutput)
}

type AppSecMalwarePolicyActionOutput struct{ *pulumi.OutputState }

func (AppSecMalwarePolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecMalwarePolicyAction)(nil)).Elem()
}

func (o AppSecMalwarePolicyActionOutput) ToAppSecMalwarePolicyActionOutput() AppSecMalwarePolicyActionOutput {
	return o
}

func (o AppSecMalwarePolicyActionOutput) ToAppSecMalwarePolicyActionOutputWithContext(ctx context.Context) AppSecMalwarePolicyActionOutput {
	return o
}

// Action to be taken for requests scanned according to the malware policy
func (o AppSecMalwarePolicyActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecMalwarePolicyAction) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Unique identifier of the security configuration
func (o AppSecMalwarePolicyActionOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecMalwarePolicyAction) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Unique identifier of the malware policy
func (o AppSecMalwarePolicyActionOutput) MalwarePolicyId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecMalwarePolicyAction) pulumi.IntOutput { return v.MalwarePolicyId }).(pulumi.IntOutput)
}

// Unique identifier of the security policy
func (o AppSecMalwarePolicyActionOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecMalwarePolicyAction) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

// Action to be taken for requests not scanned according to the malware policy
func (o AppSecMalwarePolicyActionOutput) UnscannedAction() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecMalwarePolicyAction) pulumi.StringOutput { return v.UnscannedAction }).(pulumi.StringOutput)
}

type AppSecMalwarePolicyActionArrayOutput struct{ *pulumi.OutputState }

func (AppSecMalwarePolicyActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecMalwarePolicyAction)(nil)).Elem()
}

func (o AppSecMalwarePolicyActionArrayOutput) ToAppSecMalwarePolicyActionArrayOutput() AppSecMalwarePolicyActionArrayOutput {
	return o
}

func (o AppSecMalwarePolicyActionArrayOutput) ToAppSecMalwarePolicyActionArrayOutputWithContext(ctx context.Context) AppSecMalwarePolicyActionArrayOutput {
	return o
}

func (o AppSecMalwarePolicyActionArrayOutput) Index(i pulumi.IntInput) AppSecMalwarePolicyActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecMalwarePolicyAction {
		return vs[0].([]*AppSecMalwarePolicyAction)[vs[1].(int)]
	}).(AppSecMalwarePolicyActionOutput)
}

type AppSecMalwarePolicyActionMapOutput struct{ *pulumi.OutputState }

func (AppSecMalwarePolicyActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecMalwarePolicyAction)(nil)).Elem()
}

func (o AppSecMalwarePolicyActionMapOutput) ToAppSecMalwarePolicyActionMapOutput() AppSecMalwarePolicyActionMapOutput {
	return o
}

func (o AppSecMalwarePolicyActionMapOutput) ToAppSecMalwarePolicyActionMapOutputWithContext(ctx context.Context) AppSecMalwarePolicyActionMapOutput {
	return o
}

func (o AppSecMalwarePolicyActionMapOutput) MapIndex(k pulumi.StringInput) AppSecMalwarePolicyActionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecMalwarePolicyAction {
		return vs[0].(map[string]*AppSecMalwarePolicyAction)[vs[1].(string)]
	}).(AppSecMalwarePolicyActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecMalwarePolicyActionInput)(nil)).Elem(), &AppSecMalwarePolicyAction{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecMalwarePolicyActionArrayInput)(nil)).Elem(), AppSecMalwarePolicyActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecMalwarePolicyActionMapInput)(nil)).Elem(), AppSecMalwarePolicyActionMap{})
	pulumi.RegisterOutputType(AppSecMalwarePolicyActionOutput{})
	pulumi.RegisterOutputType(AppSecMalwarePolicyActionArrayOutput{})
	pulumi.RegisterOutputType(AppSecMalwarePolicyActionMapOutput{})
}
