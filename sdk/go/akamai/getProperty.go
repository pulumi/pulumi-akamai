// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v8/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupProperty(ctx *pulumi.Context, args *LookupPropertyArgs, opts ...pulumi.InvokeOption) (*LookupPropertyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPropertyResult
	err := ctx.Invoke("akamai:index/getProperty:getProperty", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProperty.
type LookupPropertyArgs struct {
	Name    string `pulumi:"name"`
	Version *int   `pulumi:"version"`
}

// A collection of values returned by getProperty.
type LookupPropertyResult struct {
	AssetId    string `pulumi:"assetId"`
	ContractId string `pulumi:"contractId"`
	GroupId    string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	LatestVersion     int    `pulumi:"latestVersion"`
	Name              string `pulumi:"name"`
	Note              string `pulumi:"note"`
	ProductId         string `pulumi:"productId"`
	ProductionVersion int    `pulumi:"productionVersion"`
	PropertyId        string `pulumi:"propertyId"`
	PropertyType      string `pulumi:"propertyType"`
	RuleFormat        string `pulumi:"ruleFormat"`
	Rules             string `pulumi:"rules"`
	StagingVersion    int    `pulumi:"stagingVersion"`
	Version           *int   `pulumi:"version"`
}

func LookupPropertyOutput(ctx *pulumi.Context, args LookupPropertyOutputArgs, opts ...pulumi.InvokeOption) LookupPropertyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPropertyResultOutput, error) {
			args := v.(LookupPropertyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("akamai:index/getProperty:getProperty", args, LookupPropertyResultOutput{}, options).(LookupPropertyResultOutput), nil
		}).(LookupPropertyResultOutput)
}

// A collection of arguments for invoking getProperty.
type LookupPropertyOutputArgs struct {
	Name    pulumi.StringInput `pulumi:"name"`
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (LookupPropertyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPropertyArgs)(nil)).Elem()
}

// A collection of values returned by getProperty.
type LookupPropertyResultOutput struct{ *pulumi.OutputState }

func (LookupPropertyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPropertyResult)(nil)).Elem()
}

func (o LookupPropertyResultOutput) ToLookupPropertyResultOutput() LookupPropertyResultOutput {
	return o
}

func (o LookupPropertyResultOutput) ToLookupPropertyResultOutputWithContext(ctx context.Context) LookupPropertyResultOutput {
	return o
}

func (o LookupPropertyResultOutput) AssetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.AssetId }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.ContractId }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPropertyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) LatestVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPropertyResult) int { return v.LatestVersion }).(pulumi.IntOutput)
}

func (o LookupPropertyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.Note }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.ProductId }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) ProductionVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPropertyResult) int { return v.ProductionVersion }).(pulumi.IntOutput)
}

func (o LookupPropertyResultOutput) PropertyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.PropertyId }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) PropertyType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.PropertyType }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) RuleFormat() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.RuleFormat }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) Rules() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPropertyResult) string { return v.Rules }).(pulumi.StringOutput)
}

func (o LookupPropertyResultOutput) StagingVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPropertyResult) int { return v.StagingVersion }).(pulumi.IntOutput)
}

func (o LookupPropertyResultOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPropertyResult) *int { return v.Version }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPropertyResultOutput{})
}
