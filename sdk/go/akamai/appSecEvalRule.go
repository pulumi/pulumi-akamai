// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Evaluation rule
//
// Creates or modifies an evaluation rule's action, conditions, and exceptions.
// Evaluation rules are Kona Rule Set rules used when running a security configuration in evaluation mode.
// Changes to these rules do not affect the rules used on your production network.
//
// **Related API Endpoints**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/eval-rules/{ruleId}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalrule) *and* [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/eval-rules/{ruleId}/condition-exception](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"fmt"
// 	"io/ioutil"
//
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func readFileOrPanic(path string) pulumi.StringPtrInput {
// 	data, err := ioutil.ReadFile(path)
// 	if err != nil {
// 		panic(err.Error())
// 	}
// 	return pulumi.String(string(data))
// }
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "Documentation"
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &GetAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = akamai.NewAppSecEvalRule(ctx, "evalRule", &akamai.AppSecEvalRuleArgs{
// 			ConfigId:           pulumi.Int(configuration.ConfigId),
// 			SecurityPolicyId:   pulumi.String("gms1_134637"),
// 			RuleId:             pulumi.Int(60029316),
// 			RuleAction:         pulumi.String("deny"),
// 			ConditionException: readFileOrPanic(fmt.Sprintf("%v%v", path.Module, "/condition_exception.json")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type AppSecEvalRule struct {
	pulumi.CustomResourceState

	// . Path to a JSON file containing the conditions and exceptions to be applied to the evaluation rule. To view a sample JSON file, see the [Modify the conditions and exceptions for an evaluation rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions) section of the Application Security API documentation.
	ConditionException pulumi.StringPtrOutput `pulumi:"conditionException"`
	// . Unique identifier of the security configuration in evaluation mode.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// . Action to be taken any time the evaluation rule is triggered, Allowed actions are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	RuleAction pulumi.StringOutput `pulumi:"ruleAction"`
	// . Unique identifier of the evaluation rule being modified.
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// . Unique identifier of the security policy associated with the evaluation process.
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewAppSecEvalRule registers a new resource with the given unique name, arguments, and options.
func NewAppSecEvalRule(ctx *pulumi.Context,
	name string, args *AppSecEvalRuleArgs, opts ...pulumi.ResourceOption) (*AppSecEvalRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.RuleAction == nil {
		return nil, errors.New("invalid value for required argument 'RuleAction'")
	}
	if args.RuleId == nil {
		return nil, errors.New("invalid value for required argument 'RuleId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	var resource AppSecEvalRule
	err := ctx.RegisterResource("akamai:index/appSecEvalRule:AppSecEvalRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecEvalRule gets an existing AppSecEvalRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecEvalRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecEvalRuleState, opts ...pulumi.ResourceOption) (*AppSecEvalRule, error) {
	var resource AppSecEvalRule
	err := ctx.ReadResource("akamai:index/appSecEvalRule:AppSecEvalRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecEvalRule resources.
type appSecEvalRuleState struct {
	// . Path to a JSON file containing the conditions and exceptions to be applied to the evaluation rule. To view a sample JSON file, see the [Modify the conditions and exceptions for an evaluation rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions) section of the Application Security API documentation.
	ConditionException *string `pulumi:"conditionException"`
	// . Unique identifier of the security configuration in evaluation mode.
	ConfigId *int `pulumi:"configId"`
	// . Action to be taken any time the evaluation rule is triggered, Allowed actions are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	RuleAction *string `pulumi:"ruleAction"`
	// . Unique identifier of the evaluation rule being modified.
	RuleId *int `pulumi:"ruleId"`
	// . Unique identifier of the security policy associated with the evaluation process.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppSecEvalRuleState struct {
	// . Path to a JSON file containing the conditions and exceptions to be applied to the evaluation rule. To view a sample JSON file, see the [Modify the conditions and exceptions for an evaluation rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions) section of the Application Security API documentation.
	ConditionException pulumi.StringPtrInput
	// . Unique identifier of the security configuration in evaluation mode.
	ConfigId pulumi.IntPtrInput
	// . Action to be taken any time the evaluation rule is triggered, Allowed actions are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	RuleAction pulumi.StringPtrInput
	// . Unique identifier of the evaluation rule being modified.
	RuleId pulumi.IntPtrInput
	// . Unique identifier of the security policy associated with the evaluation process.
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecEvalRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecEvalRuleState)(nil)).Elem()
}

type appSecEvalRuleArgs struct {
	// . Path to a JSON file containing the conditions and exceptions to be applied to the evaluation rule. To view a sample JSON file, see the [Modify the conditions and exceptions for an evaluation rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions) section of the Application Security API documentation.
	ConditionException *string `pulumi:"conditionException"`
	// . Unique identifier of the security configuration in evaluation mode.
	ConfigId int `pulumi:"configId"`
	// . Action to be taken any time the evaluation rule is triggered, Allowed actions are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	RuleAction string `pulumi:"ruleAction"`
	// . Unique identifier of the evaluation rule being modified.
	RuleId int `pulumi:"ruleId"`
	// . Unique identifier of the security policy associated with the evaluation process.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppSecEvalRule resource.
type AppSecEvalRuleArgs struct {
	// . Path to a JSON file containing the conditions and exceptions to be applied to the evaluation rule. To view a sample JSON file, see the [Modify the conditions and exceptions for an evaluation rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions) section of the Application Security API documentation.
	ConditionException pulumi.StringPtrInput
	// . Unique identifier of the security configuration in evaluation mode.
	ConfigId pulumi.IntInput
	// . Action to be taken any time the evaluation rule is triggered, Allowed actions are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	RuleAction pulumi.StringInput
	// . Unique identifier of the evaluation rule being modified.
	RuleId pulumi.IntInput
	// . Unique identifier of the security policy associated with the evaluation process.
	SecurityPolicyId pulumi.StringInput
}

func (AppSecEvalRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecEvalRuleArgs)(nil)).Elem()
}

type AppSecEvalRuleInput interface {
	pulumi.Input

	ToAppSecEvalRuleOutput() AppSecEvalRuleOutput
	ToAppSecEvalRuleOutputWithContext(ctx context.Context) AppSecEvalRuleOutput
}

func (*AppSecEvalRule) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecEvalRule)(nil))
}

func (i *AppSecEvalRule) ToAppSecEvalRuleOutput() AppSecEvalRuleOutput {
	return i.ToAppSecEvalRuleOutputWithContext(context.Background())
}

func (i *AppSecEvalRule) ToAppSecEvalRuleOutputWithContext(ctx context.Context) AppSecEvalRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleOutput)
}

func (i *AppSecEvalRule) ToAppSecEvalRulePtrOutput() AppSecEvalRulePtrOutput {
	return i.ToAppSecEvalRulePtrOutputWithContext(context.Background())
}

func (i *AppSecEvalRule) ToAppSecEvalRulePtrOutputWithContext(ctx context.Context) AppSecEvalRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRulePtrOutput)
}

type AppSecEvalRulePtrInput interface {
	pulumi.Input

	ToAppSecEvalRulePtrOutput() AppSecEvalRulePtrOutput
	ToAppSecEvalRulePtrOutputWithContext(ctx context.Context) AppSecEvalRulePtrOutput
}

type appSecEvalRulePtrType AppSecEvalRuleArgs

func (*appSecEvalRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecEvalRule)(nil))
}

func (i *appSecEvalRulePtrType) ToAppSecEvalRulePtrOutput() AppSecEvalRulePtrOutput {
	return i.ToAppSecEvalRulePtrOutputWithContext(context.Background())
}

func (i *appSecEvalRulePtrType) ToAppSecEvalRulePtrOutputWithContext(ctx context.Context) AppSecEvalRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRulePtrOutput)
}

// AppSecEvalRuleArrayInput is an input type that accepts AppSecEvalRuleArray and AppSecEvalRuleArrayOutput values.
// You can construct a concrete instance of `AppSecEvalRuleArrayInput` via:
//
//          AppSecEvalRuleArray{ AppSecEvalRuleArgs{...} }
type AppSecEvalRuleArrayInput interface {
	pulumi.Input

	ToAppSecEvalRuleArrayOutput() AppSecEvalRuleArrayOutput
	ToAppSecEvalRuleArrayOutputWithContext(context.Context) AppSecEvalRuleArrayOutput
}

type AppSecEvalRuleArray []AppSecEvalRuleInput

func (AppSecEvalRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecEvalRule)(nil)).Elem()
}

func (i AppSecEvalRuleArray) ToAppSecEvalRuleArrayOutput() AppSecEvalRuleArrayOutput {
	return i.ToAppSecEvalRuleArrayOutputWithContext(context.Background())
}

func (i AppSecEvalRuleArray) ToAppSecEvalRuleArrayOutputWithContext(ctx context.Context) AppSecEvalRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleArrayOutput)
}

// AppSecEvalRuleMapInput is an input type that accepts AppSecEvalRuleMap and AppSecEvalRuleMapOutput values.
// You can construct a concrete instance of `AppSecEvalRuleMapInput` via:
//
//          AppSecEvalRuleMap{ "key": AppSecEvalRuleArgs{...} }
type AppSecEvalRuleMapInput interface {
	pulumi.Input

	ToAppSecEvalRuleMapOutput() AppSecEvalRuleMapOutput
	ToAppSecEvalRuleMapOutputWithContext(context.Context) AppSecEvalRuleMapOutput
}

type AppSecEvalRuleMap map[string]AppSecEvalRuleInput

func (AppSecEvalRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecEvalRule)(nil)).Elem()
}

func (i AppSecEvalRuleMap) ToAppSecEvalRuleMapOutput() AppSecEvalRuleMapOutput {
	return i.ToAppSecEvalRuleMapOutputWithContext(context.Background())
}

func (i AppSecEvalRuleMap) ToAppSecEvalRuleMapOutputWithContext(ctx context.Context) AppSecEvalRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleMapOutput)
}

type AppSecEvalRuleOutput struct{ *pulumi.OutputState }

func (AppSecEvalRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecEvalRule)(nil))
}

func (o AppSecEvalRuleOutput) ToAppSecEvalRuleOutput() AppSecEvalRuleOutput {
	return o
}

func (o AppSecEvalRuleOutput) ToAppSecEvalRuleOutputWithContext(ctx context.Context) AppSecEvalRuleOutput {
	return o
}

func (o AppSecEvalRuleOutput) ToAppSecEvalRulePtrOutput() AppSecEvalRulePtrOutput {
	return o.ToAppSecEvalRulePtrOutputWithContext(context.Background())
}

func (o AppSecEvalRuleOutput) ToAppSecEvalRulePtrOutputWithContext(ctx context.Context) AppSecEvalRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSecEvalRule) *AppSecEvalRule {
		return &v
	}).(AppSecEvalRulePtrOutput)
}

type AppSecEvalRulePtrOutput struct{ *pulumi.OutputState }

func (AppSecEvalRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecEvalRule)(nil))
}

func (o AppSecEvalRulePtrOutput) ToAppSecEvalRulePtrOutput() AppSecEvalRulePtrOutput {
	return o
}

func (o AppSecEvalRulePtrOutput) ToAppSecEvalRulePtrOutputWithContext(ctx context.Context) AppSecEvalRulePtrOutput {
	return o
}

func (o AppSecEvalRulePtrOutput) Elem() AppSecEvalRuleOutput {
	return o.ApplyT(func(v *AppSecEvalRule) AppSecEvalRule {
		if v != nil {
			return *v
		}
		var ret AppSecEvalRule
		return ret
	}).(AppSecEvalRuleOutput)
}

type AppSecEvalRuleArrayOutput struct{ *pulumi.OutputState }

func (AppSecEvalRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecEvalRule)(nil))
}

func (o AppSecEvalRuleArrayOutput) ToAppSecEvalRuleArrayOutput() AppSecEvalRuleArrayOutput {
	return o
}

func (o AppSecEvalRuleArrayOutput) ToAppSecEvalRuleArrayOutputWithContext(ctx context.Context) AppSecEvalRuleArrayOutput {
	return o
}

func (o AppSecEvalRuleArrayOutput) Index(i pulumi.IntInput) AppSecEvalRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSecEvalRule {
		return vs[0].([]AppSecEvalRule)[vs[1].(int)]
	}).(AppSecEvalRuleOutput)
}

type AppSecEvalRuleMapOutput struct{ *pulumi.OutputState }

func (AppSecEvalRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppSecEvalRule)(nil))
}

func (o AppSecEvalRuleMapOutput) ToAppSecEvalRuleMapOutput() AppSecEvalRuleMapOutput {
	return o
}

func (o AppSecEvalRuleMapOutput) ToAppSecEvalRuleMapOutputWithContext(ctx context.Context) AppSecEvalRuleMapOutput {
	return o
}

func (o AppSecEvalRuleMapOutput) MapIndex(k pulumi.StringInput) AppSecEvalRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppSecEvalRule {
		return vs[0].(map[string]AppSecEvalRule)[vs[1].(string)]
	}).(AppSecEvalRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecEvalRuleInput)(nil)).Elem(), &AppSecEvalRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecEvalRulePtrInput)(nil)).Elem(), &AppSecEvalRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecEvalRuleArrayInput)(nil)).Elem(), AppSecEvalRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecEvalRuleMapInput)(nil)).Elem(), AppSecEvalRuleMap{})
	pulumi.RegisterOutputType(AppSecEvalRuleOutput{})
	pulumi.RegisterOutputType(AppSecEvalRulePtrOutput{})
	pulumi.RegisterOutputType(AppSecEvalRuleArrayOutput{})
	pulumi.RegisterOutputType(AppSecEvalRuleMapOutput{})
}
