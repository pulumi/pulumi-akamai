// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppSecEvalRule struct {
	pulumi.CustomResourceState

	// JSON-formatted condition and exception information for the evaluation rule
	ConditionException pulumi.StringPtrOutput `pulumi:"conditionException"`
	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Action to be taken when the evaluation rule is triggered
	RuleAction pulumi.StringOutput `pulumi:"ruleAction"`
	// Unique identifier of the evaluation rule being modified
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewAppSecEvalRule registers a new resource with the given unique name, arguments, and options.
func NewAppSecEvalRule(ctx *pulumi.Context,
	name string, args *AppSecEvalRuleArgs, opts ...pulumi.ResourceOption) (*AppSecEvalRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.RuleAction == nil {
		return nil, errors.New("invalid value for required argument 'RuleAction'")
	}
	if args.RuleId == nil {
		return nil, errors.New("invalid value for required argument 'RuleId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppSecEvalRule
	err := ctx.RegisterResource("akamai:index/appSecEvalRule:AppSecEvalRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecEvalRule gets an existing AppSecEvalRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecEvalRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecEvalRuleState, opts ...pulumi.ResourceOption) (*AppSecEvalRule, error) {
	var resource AppSecEvalRule
	err := ctx.ReadResource("akamai:index/appSecEvalRule:AppSecEvalRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecEvalRule resources.
type appSecEvalRuleState struct {
	// JSON-formatted condition and exception information for the evaluation rule
	ConditionException *string `pulumi:"conditionException"`
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// Action to be taken when the evaluation rule is triggered
	RuleAction *string `pulumi:"ruleAction"`
	// Unique identifier of the evaluation rule being modified
	RuleId *int `pulumi:"ruleId"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppSecEvalRuleState struct {
	// JSON-formatted condition and exception information for the evaluation rule
	ConditionException pulumi.StringPtrInput
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// Action to be taken when the evaluation rule is triggered
	RuleAction pulumi.StringPtrInput
	// Unique identifier of the evaluation rule being modified
	RuleId pulumi.IntPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecEvalRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecEvalRuleState)(nil)).Elem()
}

type appSecEvalRuleArgs struct {
	// JSON-formatted condition and exception information for the evaluation rule
	ConditionException *string `pulumi:"conditionException"`
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// Action to be taken when the evaluation rule is triggered
	RuleAction string `pulumi:"ruleAction"`
	// Unique identifier of the evaluation rule being modified
	RuleId int `pulumi:"ruleId"`
	// Unique identifier of the security policy
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppSecEvalRule resource.
type AppSecEvalRuleArgs struct {
	// JSON-formatted condition and exception information for the evaluation rule
	ConditionException pulumi.StringPtrInput
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// Action to be taken when the evaluation rule is triggered
	RuleAction pulumi.StringInput
	// Unique identifier of the evaluation rule being modified
	RuleId pulumi.IntInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringInput
}

func (AppSecEvalRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecEvalRuleArgs)(nil)).Elem()
}

type AppSecEvalRuleInput interface {
	pulumi.Input

	ToAppSecEvalRuleOutput() AppSecEvalRuleOutput
	ToAppSecEvalRuleOutputWithContext(ctx context.Context) AppSecEvalRuleOutput
}

func (*AppSecEvalRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecEvalRule)(nil)).Elem()
}

func (i *AppSecEvalRule) ToAppSecEvalRuleOutput() AppSecEvalRuleOutput {
	return i.ToAppSecEvalRuleOutputWithContext(context.Background())
}

func (i *AppSecEvalRule) ToAppSecEvalRuleOutputWithContext(ctx context.Context) AppSecEvalRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleOutput)
}

// AppSecEvalRuleArrayInput is an input type that accepts AppSecEvalRuleArray and AppSecEvalRuleArrayOutput values.
// You can construct a concrete instance of `AppSecEvalRuleArrayInput` via:
//
//	AppSecEvalRuleArray{ AppSecEvalRuleArgs{...} }
type AppSecEvalRuleArrayInput interface {
	pulumi.Input

	ToAppSecEvalRuleArrayOutput() AppSecEvalRuleArrayOutput
	ToAppSecEvalRuleArrayOutputWithContext(context.Context) AppSecEvalRuleArrayOutput
}

type AppSecEvalRuleArray []AppSecEvalRuleInput

func (AppSecEvalRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecEvalRule)(nil)).Elem()
}

func (i AppSecEvalRuleArray) ToAppSecEvalRuleArrayOutput() AppSecEvalRuleArrayOutput {
	return i.ToAppSecEvalRuleArrayOutputWithContext(context.Background())
}

func (i AppSecEvalRuleArray) ToAppSecEvalRuleArrayOutputWithContext(ctx context.Context) AppSecEvalRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleArrayOutput)
}

// AppSecEvalRuleMapInput is an input type that accepts AppSecEvalRuleMap and AppSecEvalRuleMapOutput values.
// You can construct a concrete instance of `AppSecEvalRuleMapInput` via:
//
//	AppSecEvalRuleMap{ "key": AppSecEvalRuleArgs{...} }
type AppSecEvalRuleMapInput interface {
	pulumi.Input

	ToAppSecEvalRuleMapOutput() AppSecEvalRuleMapOutput
	ToAppSecEvalRuleMapOutputWithContext(context.Context) AppSecEvalRuleMapOutput
}

type AppSecEvalRuleMap map[string]AppSecEvalRuleInput

func (AppSecEvalRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecEvalRule)(nil)).Elem()
}

func (i AppSecEvalRuleMap) ToAppSecEvalRuleMapOutput() AppSecEvalRuleMapOutput {
	return i.ToAppSecEvalRuleMapOutputWithContext(context.Background())
}

func (i AppSecEvalRuleMap) ToAppSecEvalRuleMapOutputWithContext(ctx context.Context) AppSecEvalRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleMapOutput)
}

type AppSecEvalRuleOutput struct{ *pulumi.OutputState }

func (AppSecEvalRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecEvalRule)(nil)).Elem()
}

func (o AppSecEvalRuleOutput) ToAppSecEvalRuleOutput() AppSecEvalRuleOutput {
	return o
}

func (o AppSecEvalRuleOutput) ToAppSecEvalRuleOutputWithContext(ctx context.Context) AppSecEvalRuleOutput {
	return o
}

// JSON-formatted condition and exception information for the evaluation rule
func (o AppSecEvalRuleOutput) ConditionException() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSecEvalRule) pulumi.StringPtrOutput { return v.ConditionException }).(pulumi.StringPtrOutput)
}

// Unique identifier of the security configuration
func (o AppSecEvalRuleOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecEvalRule) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Action to be taken when the evaluation rule is triggered
func (o AppSecEvalRuleOutput) RuleAction() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecEvalRule) pulumi.StringOutput { return v.RuleAction }).(pulumi.StringOutput)
}

// Unique identifier of the evaluation rule being modified
func (o AppSecEvalRuleOutput) RuleId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecEvalRule) pulumi.IntOutput { return v.RuleId }).(pulumi.IntOutput)
}

// Unique identifier of the security policy
func (o AppSecEvalRuleOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecEvalRule) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type AppSecEvalRuleArrayOutput struct{ *pulumi.OutputState }

func (AppSecEvalRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecEvalRule)(nil)).Elem()
}

func (o AppSecEvalRuleArrayOutput) ToAppSecEvalRuleArrayOutput() AppSecEvalRuleArrayOutput {
	return o
}

func (o AppSecEvalRuleArrayOutput) ToAppSecEvalRuleArrayOutputWithContext(ctx context.Context) AppSecEvalRuleArrayOutput {
	return o
}

func (o AppSecEvalRuleArrayOutput) Index(i pulumi.IntInput) AppSecEvalRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecEvalRule {
		return vs[0].([]*AppSecEvalRule)[vs[1].(int)]
	}).(AppSecEvalRuleOutput)
}

type AppSecEvalRuleMapOutput struct{ *pulumi.OutputState }

func (AppSecEvalRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecEvalRule)(nil)).Elem()
}

func (o AppSecEvalRuleMapOutput) ToAppSecEvalRuleMapOutput() AppSecEvalRuleMapOutput {
	return o
}

func (o AppSecEvalRuleMapOutput) ToAppSecEvalRuleMapOutputWithContext(ctx context.Context) AppSecEvalRuleMapOutput {
	return o
}

func (o AppSecEvalRuleMapOutput) MapIndex(k pulumi.StringInput) AppSecEvalRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecEvalRule {
		return vs[0].(map[string]*AppSecEvalRule)[vs[1].(string)]
	}).(AppSecEvalRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecEvalRuleInput)(nil)).Elem(), &AppSecEvalRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecEvalRuleArrayInput)(nil)).Elem(), AppSecEvalRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecEvalRuleMapInput)(nil)).Elem(), AppSecEvalRuleMap{})
	pulumi.RegisterOutputType(AppSecEvalRuleOutput{})
	pulumi.RegisterOutputType(AppSecEvalRuleArrayOutput{})
	pulumi.RegisterOutputType(AppSecEvalRuleMapOutput{})
}
