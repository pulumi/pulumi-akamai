// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v10/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCpCodes(ctx *pulumi.Context, args *GetCpCodesArgs, opts ...pulumi.InvokeOption) (*GetCpCodesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCpCodesResult
	err := ctx.Invoke("akamai:index/getCpCodes:getCpCodes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCpCodes.
type GetCpCodesArgs struct {
	ContractId        string  `pulumi:"contractId"`
	FilterByName      *string `pulumi:"filterByName"`
	FilterByProductId *string `pulumi:"filterByProductId"`
	GroupId           string  `pulumi:"groupId"`
}

// A collection of values returned by getCpCodes.
type GetCpCodesResult struct {
	AccountId         string             `pulumi:"accountId"`
	ContractId        string             `pulumi:"contractId"`
	CpCodes           []GetCpCodesCpCode `pulumi:"cpCodes"`
	FilterByName      *string            `pulumi:"filterByName"`
	FilterByProductId *string            `pulumi:"filterByProductId"`
	GroupId           string             `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetCpCodesOutput(ctx *pulumi.Context, args GetCpCodesOutputArgs, opts ...pulumi.InvokeOption) GetCpCodesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCpCodesResultOutput, error) {
			args := v.(GetCpCodesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("akamai:index/getCpCodes:getCpCodes", args, GetCpCodesResultOutput{}, options).(GetCpCodesResultOutput), nil
		}).(GetCpCodesResultOutput)
}

// A collection of arguments for invoking getCpCodes.
type GetCpCodesOutputArgs struct {
	ContractId        pulumi.StringInput    `pulumi:"contractId"`
	FilterByName      pulumi.StringPtrInput `pulumi:"filterByName"`
	FilterByProductId pulumi.StringPtrInput `pulumi:"filterByProductId"`
	GroupId           pulumi.StringInput    `pulumi:"groupId"`
}

func (GetCpCodesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCpCodesArgs)(nil)).Elem()
}

// A collection of values returned by getCpCodes.
type GetCpCodesResultOutput struct{ *pulumi.OutputState }

func (GetCpCodesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCpCodesResult)(nil)).Elem()
}

func (o GetCpCodesResultOutput) ToGetCpCodesResultOutput() GetCpCodesResultOutput {
	return o
}

func (o GetCpCodesResultOutput) ToGetCpCodesResultOutputWithContext(ctx context.Context) GetCpCodesResultOutput {
	return o
}

func (o GetCpCodesResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpCodesResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o GetCpCodesResultOutput) ContractId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpCodesResult) string { return v.ContractId }).(pulumi.StringOutput)
}

func (o GetCpCodesResultOutput) CpCodes() GetCpCodesCpCodeArrayOutput {
	return o.ApplyT(func(v GetCpCodesResult) []GetCpCodesCpCode { return v.CpCodes }).(GetCpCodesCpCodeArrayOutput)
}

func (o GetCpCodesResultOutput) FilterByName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCpCodesResult) *string { return v.FilterByName }).(pulumi.StringPtrOutput)
}

func (o GetCpCodesResultOutput) FilterByProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCpCodesResult) *string { return v.FilterByProductId }).(pulumi.StringPtrOutput)
}

func (o GetCpCodesResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpCodesResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCpCodesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpCodesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCpCodesResultOutput{})
}
