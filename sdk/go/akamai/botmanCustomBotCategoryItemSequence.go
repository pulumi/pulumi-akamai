// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v10/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanCustomBotCategoryItemSequence struct {
	pulumi.CustomResourceState

	// Unique identifiers of bots in this category, sorted in preferred order
	BotIds pulumi.StringArrayOutput `pulumi:"botIds"`
	// Unique identifier of the bot category
	CategoryId pulumi.StringOutput `pulumi:"categoryId"`
	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
}

// NewBotmanCustomBotCategoryItemSequence registers a new resource with the given unique name, arguments, and options.
func NewBotmanCustomBotCategoryItemSequence(ctx *pulumi.Context,
	name string, args *BotmanCustomBotCategoryItemSequenceArgs, opts ...pulumi.ResourceOption) (*BotmanCustomBotCategoryItemSequence, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BotIds == nil {
		return nil, errors.New("invalid value for required argument 'BotIds'")
	}
	if args.CategoryId == nil {
		return nil, errors.New("invalid value for required argument 'CategoryId'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BotmanCustomBotCategoryItemSequence
	err := ctx.RegisterResource("akamai:index/botmanCustomBotCategoryItemSequence:BotmanCustomBotCategoryItemSequence", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanCustomBotCategoryItemSequence gets an existing BotmanCustomBotCategoryItemSequence resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanCustomBotCategoryItemSequence(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanCustomBotCategoryItemSequenceState, opts ...pulumi.ResourceOption) (*BotmanCustomBotCategoryItemSequence, error) {
	var resource BotmanCustomBotCategoryItemSequence
	err := ctx.ReadResource("akamai:index/botmanCustomBotCategoryItemSequence:BotmanCustomBotCategoryItemSequence", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanCustomBotCategoryItemSequence resources.
type botmanCustomBotCategoryItemSequenceState struct {
	// Unique identifiers of bots in this category, sorted in preferred order
	BotIds []string `pulumi:"botIds"`
	// Unique identifier of the bot category
	CategoryId *string `pulumi:"categoryId"`
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
}

type BotmanCustomBotCategoryItemSequenceState struct {
	// Unique identifiers of bots in this category, sorted in preferred order
	BotIds pulumi.StringArrayInput
	// Unique identifier of the bot category
	CategoryId pulumi.StringPtrInput
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
}

func (BotmanCustomBotCategoryItemSequenceState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomBotCategoryItemSequenceState)(nil)).Elem()
}

type botmanCustomBotCategoryItemSequenceArgs struct {
	// Unique identifiers of bots in this category, sorted in preferred order
	BotIds []string `pulumi:"botIds"`
	// Unique identifier of the bot category
	CategoryId string `pulumi:"categoryId"`
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
}

// The set of arguments for constructing a BotmanCustomBotCategoryItemSequence resource.
type BotmanCustomBotCategoryItemSequenceArgs struct {
	// Unique identifiers of bots in this category, sorted in preferred order
	BotIds pulumi.StringArrayInput
	// Unique identifier of the bot category
	CategoryId pulumi.StringInput
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
}

func (BotmanCustomBotCategoryItemSequenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomBotCategoryItemSequenceArgs)(nil)).Elem()
}

type BotmanCustomBotCategoryItemSequenceInput interface {
	pulumi.Input

	ToBotmanCustomBotCategoryItemSequenceOutput() BotmanCustomBotCategoryItemSequenceOutput
	ToBotmanCustomBotCategoryItemSequenceOutputWithContext(ctx context.Context) BotmanCustomBotCategoryItemSequenceOutput
}

func (*BotmanCustomBotCategoryItemSequence) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomBotCategoryItemSequence)(nil)).Elem()
}

func (i *BotmanCustomBotCategoryItemSequence) ToBotmanCustomBotCategoryItemSequenceOutput() BotmanCustomBotCategoryItemSequenceOutput {
	return i.ToBotmanCustomBotCategoryItemSequenceOutputWithContext(context.Background())
}

func (i *BotmanCustomBotCategoryItemSequence) ToBotmanCustomBotCategoryItemSequenceOutputWithContext(ctx context.Context) BotmanCustomBotCategoryItemSequenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategoryItemSequenceOutput)
}

// BotmanCustomBotCategoryItemSequenceArrayInput is an input type that accepts BotmanCustomBotCategoryItemSequenceArray and BotmanCustomBotCategoryItemSequenceArrayOutput values.
// You can construct a concrete instance of `BotmanCustomBotCategoryItemSequenceArrayInput` via:
//
//	BotmanCustomBotCategoryItemSequenceArray{ BotmanCustomBotCategoryItemSequenceArgs{...} }
type BotmanCustomBotCategoryItemSequenceArrayInput interface {
	pulumi.Input

	ToBotmanCustomBotCategoryItemSequenceArrayOutput() BotmanCustomBotCategoryItemSequenceArrayOutput
	ToBotmanCustomBotCategoryItemSequenceArrayOutputWithContext(context.Context) BotmanCustomBotCategoryItemSequenceArrayOutput
}

type BotmanCustomBotCategoryItemSequenceArray []BotmanCustomBotCategoryItemSequenceInput

func (BotmanCustomBotCategoryItemSequenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomBotCategoryItemSequence)(nil)).Elem()
}

func (i BotmanCustomBotCategoryItemSequenceArray) ToBotmanCustomBotCategoryItemSequenceArrayOutput() BotmanCustomBotCategoryItemSequenceArrayOutput {
	return i.ToBotmanCustomBotCategoryItemSequenceArrayOutputWithContext(context.Background())
}

func (i BotmanCustomBotCategoryItemSequenceArray) ToBotmanCustomBotCategoryItemSequenceArrayOutputWithContext(ctx context.Context) BotmanCustomBotCategoryItemSequenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategoryItemSequenceArrayOutput)
}

// BotmanCustomBotCategoryItemSequenceMapInput is an input type that accepts BotmanCustomBotCategoryItemSequenceMap and BotmanCustomBotCategoryItemSequenceMapOutput values.
// You can construct a concrete instance of `BotmanCustomBotCategoryItemSequenceMapInput` via:
//
//	BotmanCustomBotCategoryItemSequenceMap{ "key": BotmanCustomBotCategoryItemSequenceArgs{...} }
type BotmanCustomBotCategoryItemSequenceMapInput interface {
	pulumi.Input

	ToBotmanCustomBotCategoryItemSequenceMapOutput() BotmanCustomBotCategoryItemSequenceMapOutput
	ToBotmanCustomBotCategoryItemSequenceMapOutputWithContext(context.Context) BotmanCustomBotCategoryItemSequenceMapOutput
}

type BotmanCustomBotCategoryItemSequenceMap map[string]BotmanCustomBotCategoryItemSequenceInput

func (BotmanCustomBotCategoryItemSequenceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomBotCategoryItemSequence)(nil)).Elem()
}

func (i BotmanCustomBotCategoryItemSequenceMap) ToBotmanCustomBotCategoryItemSequenceMapOutput() BotmanCustomBotCategoryItemSequenceMapOutput {
	return i.ToBotmanCustomBotCategoryItemSequenceMapOutputWithContext(context.Background())
}

func (i BotmanCustomBotCategoryItemSequenceMap) ToBotmanCustomBotCategoryItemSequenceMapOutputWithContext(ctx context.Context) BotmanCustomBotCategoryItemSequenceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategoryItemSequenceMapOutput)
}

type BotmanCustomBotCategoryItemSequenceOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategoryItemSequenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomBotCategoryItemSequence)(nil)).Elem()
}

func (o BotmanCustomBotCategoryItemSequenceOutput) ToBotmanCustomBotCategoryItemSequenceOutput() BotmanCustomBotCategoryItemSequenceOutput {
	return o
}

func (o BotmanCustomBotCategoryItemSequenceOutput) ToBotmanCustomBotCategoryItemSequenceOutputWithContext(ctx context.Context) BotmanCustomBotCategoryItemSequenceOutput {
	return o
}

// Unique identifiers of bots in this category, sorted in preferred order
func (o BotmanCustomBotCategoryItemSequenceOutput) BotIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategoryItemSequence) pulumi.StringArrayOutput { return v.BotIds }).(pulumi.StringArrayOutput)
}

// Unique identifier of the bot category
func (o BotmanCustomBotCategoryItemSequenceOutput) CategoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategoryItemSequence) pulumi.StringOutput { return v.CategoryId }).(pulumi.StringOutput)
}

// Unique identifier of the security configuration
func (o BotmanCustomBotCategoryItemSequenceOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategoryItemSequence) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

type BotmanCustomBotCategoryItemSequenceArrayOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategoryItemSequenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomBotCategoryItemSequence)(nil)).Elem()
}

func (o BotmanCustomBotCategoryItemSequenceArrayOutput) ToBotmanCustomBotCategoryItemSequenceArrayOutput() BotmanCustomBotCategoryItemSequenceArrayOutput {
	return o
}

func (o BotmanCustomBotCategoryItemSequenceArrayOutput) ToBotmanCustomBotCategoryItemSequenceArrayOutputWithContext(ctx context.Context) BotmanCustomBotCategoryItemSequenceArrayOutput {
	return o
}

func (o BotmanCustomBotCategoryItemSequenceArrayOutput) Index(i pulumi.IntInput) BotmanCustomBotCategoryItemSequenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanCustomBotCategoryItemSequence {
		return vs[0].([]*BotmanCustomBotCategoryItemSequence)[vs[1].(int)]
	}).(BotmanCustomBotCategoryItemSequenceOutput)
}

type BotmanCustomBotCategoryItemSequenceMapOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategoryItemSequenceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomBotCategoryItemSequence)(nil)).Elem()
}

func (o BotmanCustomBotCategoryItemSequenceMapOutput) ToBotmanCustomBotCategoryItemSequenceMapOutput() BotmanCustomBotCategoryItemSequenceMapOutput {
	return o
}

func (o BotmanCustomBotCategoryItemSequenceMapOutput) ToBotmanCustomBotCategoryItemSequenceMapOutputWithContext(ctx context.Context) BotmanCustomBotCategoryItemSequenceMapOutput {
	return o
}

func (o BotmanCustomBotCategoryItemSequenceMapOutput) MapIndex(k pulumi.StringInput) BotmanCustomBotCategoryItemSequenceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanCustomBotCategoryItemSequence {
		return vs[0].(map[string]*BotmanCustomBotCategoryItemSequence)[vs[1].(string)]
	}).(BotmanCustomBotCategoryItemSequenceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategoryItemSequenceInput)(nil)).Elem(), &BotmanCustomBotCategoryItemSequence{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategoryItemSequenceArrayInput)(nil)).Elem(), BotmanCustomBotCategoryItemSequenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategoryItemSequenceMapInput)(nil)).Elem(), BotmanCustomBotCategoryItemSequenceMap{})
	pulumi.RegisterOutputType(BotmanCustomBotCategoryItemSequenceOutput{})
	pulumi.RegisterOutputType(BotmanCustomBotCategoryItemSequenceArrayOutput{})
	pulumi.RegisterOutputType(BotmanCustomBotCategoryItemSequenceMapOutput{})
}
