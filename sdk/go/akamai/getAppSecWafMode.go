// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security policy
//
// Returns information about how the Kona Rule Set rules associated with a security configuration and security policy are updated. The WAF (Web Application Firewall) mode determines whether Kona Rule Sets are automatically updated as part of automated attack groups (`mode = AAG`) or whether you must periodically check for new rules and then manually update those rules yourself (`mode = KRS`).
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/mode](https://techdocs.akamai.com/application-security/reference/get-policy-mode)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v3/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &GetAppSecConfigurationArgs{
// 			Name: pulumi.StringRef("Documentation"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		wafMode, err := akamai.LookupAppSecWafMode(ctx, &GetAppSecWafModeArgs{
// 			ConfigId:         configuration.ConfigId,
// 			SecurityPolicyId: "gms1_134637",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("wafModeMode", wafMode.Mode)
// 		ctx.Export("wafModeCurrentRuleset", wafMode.CurrentRuleset)
// 		ctx.Export("wafModeEvalStatus", wafMode.EvalStatus)
// 		ctx.Export("wafModeEvalRuleset", wafMode.EvalRuleset)
// 		ctx.Export("wafModeEvalExpirationDate", wafMode.EvalExpirationDate)
// 		ctx.Export("wafModeText", wafMode.OutputText)
// 		ctx.Export("wafModeJson", wafMode.Json)
// 		return nil
// 	})
// }
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `mode`. Security policy mode, either **KRS** (update manually) or **AAG** (update automatically), For organizations running the Adaptive Security Engine (ASE) beta, you'll get back **ASE_AUTO** for automatic updates or **ASE_MANUAL** for manual updates. Please contact your Akamai representative to learn more about ASE.
// - `currentRuleset`. Current ruleset version and the ISO 8601 date the version was introduced.
// - `evalStatus`. Specifies whether evaluation mode is enabled or disabled.
// - `evalRuleset`. Evaluation ruleset version and the ISO 8601 date the evaluation began.
// - `evalExpirationDate`. ISO 8601 timestamp indicating when evaluation mode expires. Valid only if `evalStatus` is set to **enabled**.
// - `outputText`. Tabular report of the mode information.
// - `json`. JSON-formatted list of the mode information.
func LookupAppSecWafMode(ctx *pulumi.Context, args *LookupAppSecWafModeArgs, opts ...pulumi.InvokeOption) (*LookupAppSecWafModeResult, error) {
	var rv LookupAppSecWafModeResult
	err := ctx.Invoke("akamai:index/getAppSecWafMode:getAppSecWafMode", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecWafMode.
type LookupAppSecWafModeArgs struct {
	// . Unique identifier of the security configuration associated with the Kona Rule Set rules.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the security policy associated with the Kona Rule Set rules.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// A collection of values returned by getAppSecWafMode.
type LookupAppSecWafModeResult struct {
	ConfigId           int    `pulumi:"configId"`
	CurrentRuleset     string `pulumi:"currentRuleset"`
	EvalExpirationDate string `pulumi:"evalExpirationDate"`
	EvalRuleset        string `pulumi:"evalRuleset"`
	EvalStatus         string `pulumi:"evalStatus"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	Json             string `pulumi:"json"`
	Mode             string `pulumi:"mode"`
	OutputText       string `pulumi:"outputText"`
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

func LookupAppSecWafModeOutput(ctx *pulumi.Context, args LookupAppSecWafModeOutputArgs, opts ...pulumi.InvokeOption) LookupAppSecWafModeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAppSecWafModeResult, error) {
			args := v.(LookupAppSecWafModeArgs)
			r, err := LookupAppSecWafMode(ctx, &args, opts...)
			var s LookupAppSecWafModeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAppSecWafModeResultOutput)
}

// A collection of arguments for invoking getAppSecWafMode.
type LookupAppSecWafModeOutputArgs struct {
	// . Unique identifier of the security configuration associated with the Kona Rule Set rules.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// . Unique identifier of the security policy associated with the Kona Rule Set rules.
	SecurityPolicyId pulumi.StringInput `pulumi:"securityPolicyId"`
}

func (LookupAppSecWafModeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppSecWafModeArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecWafMode.
type LookupAppSecWafModeResultOutput struct{ *pulumi.OutputState }

func (LookupAppSecWafModeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppSecWafModeResult)(nil)).Elem()
}

func (o LookupAppSecWafModeResultOutput) ToLookupAppSecWafModeResultOutput() LookupAppSecWafModeResultOutput {
	return o
}

func (o LookupAppSecWafModeResultOutput) ToLookupAppSecWafModeResultOutputWithContext(ctx context.Context) LookupAppSecWafModeResultOutput {
	return o
}

func (o LookupAppSecWafModeResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAppSecWafModeResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

func (o LookupAppSecWafModeResultOutput) CurrentRuleset() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecWafModeResult) string { return v.CurrentRuleset }).(pulumi.StringOutput)
}

func (o LookupAppSecWafModeResultOutput) EvalExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecWafModeResult) string { return v.EvalExpirationDate }).(pulumi.StringOutput)
}

func (o LookupAppSecWafModeResultOutput) EvalRuleset() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecWafModeResult) string { return v.EvalRuleset }).(pulumi.StringOutput)
}

func (o LookupAppSecWafModeResultOutput) EvalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecWafModeResult) string { return v.EvalStatus }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAppSecWafModeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecWafModeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAppSecWafModeResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecWafModeResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o LookupAppSecWafModeResultOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecWafModeResult) string { return v.Mode }).(pulumi.StringOutput)
}

func (o LookupAppSecWafModeResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecWafModeResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func (o LookupAppSecWafModeResultOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppSecWafModeResult) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppSecWafModeResultOutput{})
}
