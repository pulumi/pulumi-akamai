// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns tuning recommendations for the specified attack group (or, if the `attackGroup` argument is not included, returns tuning recommendations for all the attack groups in the specified security policy).
// Tuning recommendations help minimize the number of false positives triggered by a security policy. With a false positive, a client request is marked as having violated the security policy restrictions even though it actually did not.
// Tuning recommendations are returned as attack group exceptions: if you choose, you can copy the response and use the `AppSecAttackGroup` resource to add the recommended exception to a security policy or attack group.
// If the data source response is empty, that means that there are no further recommendations for tuning your security policy or attack group.
// If you need, you can manually merge a recommended exception for an attack group with the exception previously configured in the attack group resource.
// You can find additional information in our [Application Security API v1 documentation](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getrecommendations).
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &GetAppSecConfigurationArgs{
// 			Name: pulumi.StringRef(_var.Security_configuration),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		policyRecommendations, err := akamai.GetAppSecTuningRecommendations(ctx, &GetAppSecTuningRecommendationsArgs{
// 			ConfigId:         configuration.ConfigId,
// 			SecurityPolicyId: pulumi.StringRef(_var.Security_policy_id),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("policyRecommendationsJson", policyRecommendations.Json)
// 		attackGroupRecommendations, err := akamai.GetAppSecTuningRecommendations(ctx, &GetAppSecTuningRecommendationsArgs{
// 			ConfigId:         configuration.ConfigId,
// 			SecurityPolicyId: pulumi.StringRef(_var.Security_policy_id),
// 			AttackGroup:      pulumi.StringRef(_var.Attack_group),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("attackGroupRecommendationsJson", attackGroupRecommendations.Json)
// 		return nil
// 	})
// }
// ```
func GetAppSecTuningRecommendations(ctx *pulumi.Context, args *GetAppSecTuningRecommendationsArgs, opts ...pulumi.InvokeOption) (*GetAppSecTuningRecommendationsResult, error) {
	var rv GetAppSecTuningRecommendationsResult
	err := ctx.Invoke("akamai:index/getAppSecTuningRecommendations:getAppSecTuningRecommendations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecTuningRecommendations.
type GetAppSecTuningRecommendationsArgs struct {
	// . Unique name of the attack group you want to return tuning recommendations for. If not included, recommendations are returned for all your attack groups.
	AttackGroup *string `pulumi:"attackGroup"`
	// . Unique identifier of the security configuration you want to return tuning recommendations for.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the security policy you want to return tuning recommendations for.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

// A collection of values returned by getAppSecTuningRecommendations.
type GetAppSecTuningRecommendationsResult struct {
	AttackGroup *string `pulumi:"attackGroup"`
	ConfigId    int     `pulumi:"configId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// JSON-formatted list of the tuning recommendations for the security policy or the attack group. The exception block format in a recommendation conforms to the exception block format used in `conditionException` element of `attackGroup` resource.
	Json             string  `pulumi:"json"`
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

func GetAppSecTuningRecommendationsOutput(ctx *pulumi.Context, args GetAppSecTuningRecommendationsOutputArgs, opts ...pulumi.InvokeOption) GetAppSecTuningRecommendationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAppSecTuningRecommendationsResult, error) {
			args := v.(GetAppSecTuningRecommendationsArgs)
			r, err := GetAppSecTuningRecommendations(ctx, &args, opts...)
			return *r, err
		}).(GetAppSecTuningRecommendationsResultOutput)
}

// A collection of arguments for invoking getAppSecTuningRecommendations.
type GetAppSecTuningRecommendationsOutputArgs struct {
	// . Unique name of the attack group you want to return tuning recommendations for. If not included, recommendations are returned for all your attack groups.
	AttackGroup pulumi.StringPtrInput `pulumi:"attackGroup"`
	// . Unique identifier of the security configuration you want to return tuning recommendations for.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// . Unique identifier of the security policy you want to return tuning recommendations for.
	SecurityPolicyId pulumi.StringPtrInput `pulumi:"securityPolicyId"`
}

func (GetAppSecTuningRecommendationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecTuningRecommendationsArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecTuningRecommendations.
type GetAppSecTuningRecommendationsResultOutput struct{ *pulumi.OutputState }

func (GetAppSecTuningRecommendationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecTuningRecommendationsResult)(nil)).Elem()
}

func (o GetAppSecTuningRecommendationsResultOutput) ToGetAppSecTuningRecommendationsResultOutput() GetAppSecTuningRecommendationsResultOutput {
	return o
}

func (o GetAppSecTuningRecommendationsResultOutput) ToGetAppSecTuningRecommendationsResultOutputWithContext(ctx context.Context) GetAppSecTuningRecommendationsResultOutput {
	return o
}

func (o GetAppSecTuningRecommendationsResultOutput) AttackGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSecTuningRecommendationsResult) *string { return v.AttackGroup }).(pulumi.StringPtrOutput)
}

func (o GetAppSecTuningRecommendationsResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppSecTuningRecommendationsResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppSecTuningRecommendationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecTuningRecommendationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// JSON-formatted list of the tuning recommendations for the security policy or the attack group. The exception block format in a recommendation conforms to the exception block format used in `conditionException` element of `attackGroup` resource.
func (o GetAppSecTuningRecommendationsResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecTuningRecommendationsResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetAppSecTuningRecommendationsResultOutput) SecurityPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSecTuningRecommendationsResult) *string { return v.SecurityPolicyId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppSecTuningRecommendationsResultOutput{})
}
