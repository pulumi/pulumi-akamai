// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security policy; evaluation rule
//
// Returns the action and the condition-exception information for a rule or set of rules being used in evaluation mode.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/eval-rules](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getevalrules)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &GetAppSecConfigurationArgs{
// 			Name: pulumi.StringRef("Documentation"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		evalRule, err := akamai.GetAppSecEvalRules(ctx, &GetAppSecEvalRulesArgs{
// 			ConfigId:         configuration.ConfigId,
// 			SecurityPolicyId: "gms1_134637",
// 			RuleId:           pulumi.IntRef(60029316),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("evalRuleAction", evalRule.EvalRuleAction)
// 		ctx.Export("conditionException", evalRule.ConditionException)
// 		ctx.Export("json", evalRule.Json)
// 		ctx.Export("outputText", evalRule.OutputText)
// 		return nil
// 	})
// }
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `evalRuleAction`. Action taken anytime the evaluation rule is triggered. Valid values are:
//   - **alert**. Record the event,
//   - **deny**. Reject the request.
//   - **deny_custom_{custom_deny_id}**. The action defined by the custom deny is taken.
//   - **none**. Take no action.
// - `conditionException`. Conditions and exceptions associated with the rule.
// - `json`. JSON-formatted list of the action and the condition-exception information for the rule. This output is only generated if the `ruleId` argument is included.
// - `outputText`. Tabular report showing the rule action as well as Boolean values indicating whether conditions and exceptions have been configured for the rule.
func GetAppSecEvalRules(ctx *pulumi.Context, args *GetAppSecEvalRulesArgs, opts ...pulumi.InvokeOption) (*GetAppSecEvalRulesResult, error) {
	var rv GetAppSecEvalRulesResult
	err := ctx.Invoke("akamai:index/getAppSecEvalRules:getAppSecEvalRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecEvalRules.
type GetAppSecEvalRulesArgs struct {
	// . Unique identifier of the security configuration running in evaluation mode.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the evaluation rule you want to return information for. If not included, information is returned for all your evaluation rules.
	RuleId *int `pulumi:"ruleId"`
	// . Unique identifier of the security policy associated with the evaluation rule.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// A collection of values returned by getAppSecEvalRules.
type GetAppSecEvalRulesResult struct {
	ConditionException string `pulumi:"conditionException"`
	ConfigId           int    `pulumi:"configId"`
	EvalRuleAction     string `pulumi:"evalRuleAction"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	Json             string `pulumi:"json"`
	OutputText       string `pulumi:"outputText"`
	RuleId           *int   `pulumi:"ruleId"`
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

func GetAppSecEvalRulesOutput(ctx *pulumi.Context, args GetAppSecEvalRulesOutputArgs, opts ...pulumi.InvokeOption) GetAppSecEvalRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAppSecEvalRulesResult, error) {
			args := v.(GetAppSecEvalRulesArgs)
			r, err := GetAppSecEvalRules(ctx, &args, opts...)
			var s GetAppSecEvalRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAppSecEvalRulesResultOutput)
}

// A collection of arguments for invoking getAppSecEvalRules.
type GetAppSecEvalRulesOutputArgs struct {
	// . Unique identifier of the security configuration running in evaluation mode.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// . Unique identifier of the evaluation rule you want to return information for. If not included, information is returned for all your evaluation rules.
	RuleId pulumi.IntPtrInput `pulumi:"ruleId"`
	// . Unique identifier of the security policy associated with the evaluation rule.
	SecurityPolicyId pulumi.StringInput `pulumi:"securityPolicyId"`
}

func (GetAppSecEvalRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecEvalRulesArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecEvalRules.
type GetAppSecEvalRulesResultOutput struct{ *pulumi.OutputState }

func (GetAppSecEvalRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecEvalRulesResult)(nil)).Elem()
}

func (o GetAppSecEvalRulesResultOutput) ToGetAppSecEvalRulesResultOutput() GetAppSecEvalRulesResultOutput {
	return o
}

func (o GetAppSecEvalRulesResultOutput) ToGetAppSecEvalRulesResultOutputWithContext(ctx context.Context) GetAppSecEvalRulesResultOutput {
	return o
}

func (o GetAppSecEvalRulesResultOutput) ConditionException() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecEvalRulesResult) string { return v.ConditionException }).(pulumi.StringOutput)
}

func (o GetAppSecEvalRulesResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppSecEvalRulesResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

func (o GetAppSecEvalRulesResultOutput) EvalRuleAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecEvalRulesResult) string { return v.EvalRuleAction }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppSecEvalRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecEvalRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAppSecEvalRulesResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecEvalRulesResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetAppSecEvalRulesResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecEvalRulesResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func (o GetAppSecEvalRulesResultOutput) RuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSecEvalRulesResult) *int { return v.RuleId }).(pulumi.IntPtrOutput)
}

func (o GetAppSecEvalRulesResultOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecEvalRulesResult) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppSecEvalRulesResultOutput{})
}
