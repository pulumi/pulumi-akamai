// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanCustomClientSequence struct {
	pulumi.CustomResourceState

	ConfigId        pulumi.IntOutput         `pulumi:"configId"`
	CustomClientIds pulumi.StringArrayOutput `pulumi:"customClientIds"`
}

// NewBotmanCustomClientSequence registers a new resource with the given unique name, arguments, and options.
func NewBotmanCustomClientSequence(ctx *pulumi.Context,
	name string, args *BotmanCustomClientSequenceArgs, opts ...pulumi.ResourceOption) (*BotmanCustomClientSequence, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.CustomClientIds == nil {
		return nil, errors.New("invalid value for required argument 'CustomClientIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BotmanCustomClientSequence
	err := ctx.RegisterResource("akamai:index/botmanCustomClientSequence:BotmanCustomClientSequence", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanCustomClientSequence gets an existing BotmanCustomClientSequence resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanCustomClientSequence(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanCustomClientSequenceState, opts ...pulumi.ResourceOption) (*BotmanCustomClientSequence, error) {
	var resource BotmanCustomClientSequence
	err := ctx.ReadResource("akamai:index/botmanCustomClientSequence:BotmanCustomClientSequence", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanCustomClientSequence resources.
type botmanCustomClientSequenceState struct {
	ConfigId        *int     `pulumi:"configId"`
	CustomClientIds []string `pulumi:"customClientIds"`
}

type BotmanCustomClientSequenceState struct {
	ConfigId        pulumi.IntPtrInput
	CustomClientIds pulumi.StringArrayInput
}

func (BotmanCustomClientSequenceState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomClientSequenceState)(nil)).Elem()
}

type botmanCustomClientSequenceArgs struct {
	ConfigId        int      `pulumi:"configId"`
	CustomClientIds []string `pulumi:"customClientIds"`
}

// The set of arguments for constructing a BotmanCustomClientSequence resource.
type BotmanCustomClientSequenceArgs struct {
	ConfigId        pulumi.IntInput
	CustomClientIds pulumi.StringArrayInput
}

func (BotmanCustomClientSequenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomClientSequenceArgs)(nil)).Elem()
}

type BotmanCustomClientSequenceInput interface {
	pulumi.Input

	ToBotmanCustomClientSequenceOutput() BotmanCustomClientSequenceOutput
	ToBotmanCustomClientSequenceOutputWithContext(ctx context.Context) BotmanCustomClientSequenceOutput
}

func (*BotmanCustomClientSequence) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomClientSequence)(nil)).Elem()
}

func (i *BotmanCustomClientSequence) ToBotmanCustomClientSequenceOutput() BotmanCustomClientSequenceOutput {
	return i.ToBotmanCustomClientSequenceOutputWithContext(context.Background())
}

func (i *BotmanCustomClientSequence) ToBotmanCustomClientSequenceOutputWithContext(ctx context.Context) BotmanCustomClientSequenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomClientSequenceOutput)
}

// BotmanCustomClientSequenceArrayInput is an input type that accepts BotmanCustomClientSequenceArray and BotmanCustomClientSequenceArrayOutput values.
// You can construct a concrete instance of `BotmanCustomClientSequenceArrayInput` via:
//
//	BotmanCustomClientSequenceArray{ BotmanCustomClientSequenceArgs{...} }
type BotmanCustomClientSequenceArrayInput interface {
	pulumi.Input

	ToBotmanCustomClientSequenceArrayOutput() BotmanCustomClientSequenceArrayOutput
	ToBotmanCustomClientSequenceArrayOutputWithContext(context.Context) BotmanCustomClientSequenceArrayOutput
}

type BotmanCustomClientSequenceArray []BotmanCustomClientSequenceInput

func (BotmanCustomClientSequenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomClientSequence)(nil)).Elem()
}

func (i BotmanCustomClientSequenceArray) ToBotmanCustomClientSequenceArrayOutput() BotmanCustomClientSequenceArrayOutput {
	return i.ToBotmanCustomClientSequenceArrayOutputWithContext(context.Background())
}

func (i BotmanCustomClientSequenceArray) ToBotmanCustomClientSequenceArrayOutputWithContext(ctx context.Context) BotmanCustomClientSequenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomClientSequenceArrayOutput)
}

// BotmanCustomClientSequenceMapInput is an input type that accepts BotmanCustomClientSequenceMap and BotmanCustomClientSequenceMapOutput values.
// You can construct a concrete instance of `BotmanCustomClientSequenceMapInput` via:
//
//	BotmanCustomClientSequenceMap{ "key": BotmanCustomClientSequenceArgs{...} }
type BotmanCustomClientSequenceMapInput interface {
	pulumi.Input

	ToBotmanCustomClientSequenceMapOutput() BotmanCustomClientSequenceMapOutput
	ToBotmanCustomClientSequenceMapOutputWithContext(context.Context) BotmanCustomClientSequenceMapOutput
}

type BotmanCustomClientSequenceMap map[string]BotmanCustomClientSequenceInput

func (BotmanCustomClientSequenceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomClientSequence)(nil)).Elem()
}

func (i BotmanCustomClientSequenceMap) ToBotmanCustomClientSequenceMapOutput() BotmanCustomClientSequenceMapOutput {
	return i.ToBotmanCustomClientSequenceMapOutputWithContext(context.Background())
}

func (i BotmanCustomClientSequenceMap) ToBotmanCustomClientSequenceMapOutputWithContext(ctx context.Context) BotmanCustomClientSequenceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomClientSequenceMapOutput)
}

type BotmanCustomClientSequenceOutput struct{ *pulumi.OutputState }

func (BotmanCustomClientSequenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomClientSequence)(nil)).Elem()
}

func (o BotmanCustomClientSequenceOutput) ToBotmanCustomClientSequenceOutput() BotmanCustomClientSequenceOutput {
	return o
}

func (o BotmanCustomClientSequenceOutput) ToBotmanCustomClientSequenceOutputWithContext(ctx context.Context) BotmanCustomClientSequenceOutput {
	return o
}

func (o BotmanCustomClientSequenceOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanCustomClientSequence) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

func (o BotmanCustomClientSequenceOutput) CustomClientIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BotmanCustomClientSequence) pulumi.StringArrayOutput { return v.CustomClientIds }).(pulumi.StringArrayOutput)
}

type BotmanCustomClientSequenceArrayOutput struct{ *pulumi.OutputState }

func (BotmanCustomClientSequenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomClientSequence)(nil)).Elem()
}

func (o BotmanCustomClientSequenceArrayOutput) ToBotmanCustomClientSequenceArrayOutput() BotmanCustomClientSequenceArrayOutput {
	return o
}

func (o BotmanCustomClientSequenceArrayOutput) ToBotmanCustomClientSequenceArrayOutputWithContext(ctx context.Context) BotmanCustomClientSequenceArrayOutput {
	return o
}

func (o BotmanCustomClientSequenceArrayOutput) Index(i pulumi.IntInput) BotmanCustomClientSequenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanCustomClientSequence {
		return vs[0].([]*BotmanCustomClientSequence)[vs[1].(int)]
	}).(BotmanCustomClientSequenceOutput)
}

type BotmanCustomClientSequenceMapOutput struct{ *pulumi.OutputState }

func (BotmanCustomClientSequenceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomClientSequence)(nil)).Elem()
}

func (o BotmanCustomClientSequenceMapOutput) ToBotmanCustomClientSequenceMapOutput() BotmanCustomClientSequenceMapOutput {
	return o
}

func (o BotmanCustomClientSequenceMapOutput) ToBotmanCustomClientSequenceMapOutputWithContext(ctx context.Context) BotmanCustomClientSequenceMapOutput {
	return o
}

func (o BotmanCustomClientSequenceMapOutput) MapIndex(k pulumi.StringInput) BotmanCustomClientSequenceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanCustomClientSequence {
		return vs[0].(map[string]*BotmanCustomClientSequence)[vs[1].(string)]
	}).(BotmanCustomClientSequenceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomClientSequenceInput)(nil)).Elem(), &BotmanCustomClientSequence{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomClientSequenceArrayInput)(nil)).Elem(), BotmanCustomClientSequenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomClientSequenceMapInput)(nil)).Elem(), BotmanCustomClientSequenceMap{})
	pulumi.RegisterOutputType(BotmanCustomClientSequenceOutput{})
	pulumi.RegisterOutputType(BotmanCustomClientSequenceArrayOutput{})
	pulumi.RegisterOutputType(BotmanCustomClientSequenceMapOutput{})
}
