// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanCustomBotCategory struct {
	pulumi.CustomResourceState

	CategoryId        pulumi.StringOutput `pulumi:"categoryId"`
	ConfigId          pulumi.IntOutput    `pulumi:"configId"`
	CustomBotCategory pulumi.StringOutput `pulumi:"customBotCategory"`
}

// NewBotmanCustomBotCategory registers a new resource with the given unique name, arguments, and options.
func NewBotmanCustomBotCategory(ctx *pulumi.Context,
	name string, args *BotmanCustomBotCategoryArgs, opts ...pulumi.ResourceOption) (*BotmanCustomBotCategory, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.CustomBotCategory == nil {
		return nil, errors.New("invalid value for required argument 'CustomBotCategory'")
	}
	var resource BotmanCustomBotCategory
	err := ctx.RegisterResource("akamai:index/botmanCustomBotCategory:BotmanCustomBotCategory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanCustomBotCategory gets an existing BotmanCustomBotCategory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanCustomBotCategory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanCustomBotCategoryState, opts ...pulumi.ResourceOption) (*BotmanCustomBotCategory, error) {
	var resource BotmanCustomBotCategory
	err := ctx.ReadResource("akamai:index/botmanCustomBotCategory:BotmanCustomBotCategory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanCustomBotCategory resources.
type botmanCustomBotCategoryState struct {
	CategoryId        *string `pulumi:"categoryId"`
	ConfigId          *int    `pulumi:"configId"`
	CustomBotCategory *string `pulumi:"customBotCategory"`
}

type BotmanCustomBotCategoryState struct {
	CategoryId        pulumi.StringPtrInput
	ConfigId          pulumi.IntPtrInput
	CustomBotCategory pulumi.StringPtrInput
}

func (BotmanCustomBotCategoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomBotCategoryState)(nil)).Elem()
}

type botmanCustomBotCategoryArgs struct {
	ConfigId          int    `pulumi:"configId"`
	CustomBotCategory string `pulumi:"customBotCategory"`
}

// The set of arguments for constructing a BotmanCustomBotCategory resource.
type BotmanCustomBotCategoryArgs struct {
	ConfigId          pulumi.IntInput
	CustomBotCategory pulumi.StringInput
}

func (BotmanCustomBotCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanCustomBotCategoryArgs)(nil)).Elem()
}

type BotmanCustomBotCategoryInput interface {
	pulumi.Input

	ToBotmanCustomBotCategoryOutput() BotmanCustomBotCategoryOutput
	ToBotmanCustomBotCategoryOutputWithContext(ctx context.Context) BotmanCustomBotCategoryOutput
}

func (*BotmanCustomBotCategory) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomBotCategory)(nil)).Elem()
}

func (i *BotmanCustomBotCategory) ToBotmanCustomBotCategoryOutput() BotmanCustomBotCategoryOutput {
	return i.ToBotmanCustomBotCategoryOutputWithContext(context.Background())
}

func (i *BotmanCustomBotCategory) ToBotmanCustomBotCategoryOutputWithContext(ctx context.Context) BotmanCustomBotCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategoryOutput)
}

// BotmanCustomBotCategoryArrayInput is an input type that accepts BotmanCustomBotCategoryArray and BotmanCustomBotCategoryArrayOutput values.
// You can construct a concrete instance of `BotmanCustomBotCategoryArrayInput` via:
//
//	BotmanCustomBotCategoryArray{ BotmanCustomBotCategoryArgs{...} }
type BotmanCustomBotCategoryArrayInput interface {
	pulumi.Input

	ToBotmanCustomBotCategoryArrayOutput() BotmanCustomBotCategoryArrayOutput
	ToBotmanCustomBotCategoryArrayOutputWithContext(context.Context) BotmanCustomBotCategoryArrayOutput
}

type BotmanCustomBotCategoryArray []BotmanCustomBotCategoryInput

func (BotmanCustomBotCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomBotCategory)(nil)).Elem()
}

func (i BotmanCustomBotCategoryArray) ToBotmanCustomBotCategoryArrayOutput() BotmanCustomBotCategoryArrayOutput {
	return i.ToBotmanCustomBotCategoryArrayOutputWithContext(context.Background())
}

func (i BotmanCustomBotCategoryArray) ToBotmanCustomBotCategoryArrayOutputWithContext(ctx context.Context) BotmanCustomBotCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategoryArrayOutput)
}

// BotmanCustomBotCategoryMapInput is an input type that accepts BotmanCustomBotCategoryMap and BotmanCustomBotCategoryMapOutput values.
// You can construct a concrete instance of `BotmanCustomBotCategoryMapInput` via:
//
//	BotmanCustomBotCategoryMap{ "key": BotmanCustomBotCategoryArgs{...} }
type BotmanCustomBotCategoryMapInput interface {
	pulumi.Input

	ToBotmanCustomBotCategoryMapOutput() BotmanCustomBotCategoryMapOutput
	ToBotmanCustomBotCategoryMapOutputWithContext(context.Context) BotmanCustomBotCategoryMapOutput
}

type BotmanCustomBotCategoryMap map[string]BotmanCustomBotCategoryInput

func (BotmanCustomBotCategoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomBotCategory)(nil)).Elem()
}

func (i BotmanCustomBotCategoryMap) ToBotmanCustomBotCategoryMapOutput() BotmanCustomBotCategoryMapOutput {
	return i.ToBotmanCustomBotCategoryMapOutputWithContext(context.Background())
}

func (i BotmanCustomBotCategoryMap) ToBotmanCustomBotCategoryMapOutputWithContext(ctx context.Context) BotmanCustomBotCategoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanCustomBotCategoryMapOutput)
}

type BotmanCustomBotCategoryOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanCustomBotCategory)(nil)).Elem()
}

func (o BotmanCustomBotCategoryOutput) ToBotmanCustomBotCategoryOutput() BotmanCustomBotCategoryOutput {
	return o
}

func (o BotmanCustomBotCategoryOutput) ToBotmanCustomBotCategoryOutputWithContext(ctx context.Context) BotmanCustomBotCategoryOutput {
	return o
}

func (o BotmanCustomBotCategoryOutput) CategoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategory) pulumi.StringOutput { return v.CategoryId }).(pulumi.StringOutput)
}

func (o BotmanCustomBotCategoryOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategory) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

func (o BotmanCustomBotCategoryOutput) CustomBotCategory() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanCustomBotCategory) pulumi.StringOutput { return v.CustomBotCategory }).(pulumi.StringOutput)
}

type BotmanCustomBotCategoryArrayOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanCustomBotCategory)(nil)).Elem()
}

func (o BotmanCustomBotCategoryArrayOutput) ToBotmanCustomBotCategoryArrayOutput() BotmanCustomBotCategoryArrayOutput {
	return o
}

func (o BotmanCustomBotCategoryArrayOutput) ToBotmanCustomBotCategoryArrayOutputWithContext(ctx context.Context) BotmanCustomBotCategoryArrayOutput {
	return o
}

func (o BotmanCustomBotCategoryArrayOutput) Index(i pulumi.IntInput) BotmanCustomBotCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanCustomBotCategory {
		return vs[0].([]*BotmanCustomBotCategory)[vs[1].(int)]
	}).(BotmanCustomBotCategoryOutput)
}

type BotmanCustomBotCategoryMapOutput struct{ *pulumi.OutputState }

func (BotmanCustomBotCategoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanCustomBotCategory)(nil)).Elem()
}

func (o BotmanCustomBotCategoryMapOutput) ToBotmanCustomBotCategoryMapOutput() BotmanCustomBotCategoryMapOutput {
	return o
}

func (o BotmanCustomBotCategoryMapOutput) ToBotmanCustomBotCategoryMapOutputWithContext(ctx context.Context) BotmanCustomBotCategoryMapOutput {
	return o
}

func (o BotmanCustomBotCategoryMapOutput) MapIndex(k pulumi.StringInput) BotmanCustomBotCategoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanCustomBotCategory {
		return vs[0].(map[string]*BotmanCustomBotCategory)[vs[1].(string)]
	}).(BotmanCustomBotCategoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategoryInput)(nil)).Elem(), &BotmanCustomBotCategory{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategoryArrayInput)(nil)).Elem(), BotmanCustomBotCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanCustomBotCategoryMapInput)(nil)).Elem(), BotmanCustomBotCategoryMap{})
	pulumi.RegisterOutputType(BotmanCustomBotCategoryOutput{})
	pulumi.RegisterOutputType(BotmanCustomBotCategoryArrayOutput{})
	pulumi.RegisterOutputType(BotmanCustomBotCategoryMapOutput{})
}
