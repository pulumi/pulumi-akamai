// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security configuration
//
// Specifies the networks that appear on the bypass network list. Networks on this list are allowed to bypass the Web Application Firewall.
//
// Note that this resource is only applicable to WAP (Web Application Protector) configurations.
//
// **Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/bypass-network-lists](https://techdocs.akamai.com/application-security/reference/put-bypass-network-lists)
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
//				Name: pulumi.StringRef("Documentation"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = akamai.NewAppSecByPassNetworkList(ctx, "bypassNetworkLists", &akamai.AppSecByPassNetworkListArgs{
//				ConfigId:         *pulumi.Int(configuration.ConfigId),
//				SecurityPolicyId: pulumi.String("gms1_134637"),
//				BypassNetworkLists: pulumi.StringArray{
//					pulumi.String("DocumentationNetworkList"),
//					pulumi.String("TrainingNetworkList"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Output Options
//
// The following options can be used to determine the information returned, and how that returned information is formatted:
//
// - `outputText`. Tabular report showing the updated list of bypass network IDs.
type AppSecByPassNetworkList struct {
	pulumi.CustomResourceState

	// . JSON array of network IDs that comprise the bypass list.
	BypassNetworkLists pulumi.StringArrayOutput `pulumi:"bypassNetworkLists"`
	// . Unique identifier of the security configuration associated with the bypass network lists being modified.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// . Unique identifier of the security policy associated with the bypass network lists.
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewAppSecByPassNetworkList registers a new resource with the given unique name, arguments, and options.
func NewAppSecByPassNetworkList(ctx *pulumi.Context,
	name string, args *AppSecByPassNetworkListArgs, opts ...pulumi.ResourceOption) (*AppSecByPassNetworkList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BypassNetworkLists == nil {
		return nil, errors.New("invalid value for required argument 'BypassNetworkLists'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	var resource AppSecByPassNetworkList
	err := ctx.RegisterResource("akamai:index/appSecByPassNetworkList:AppSecByPassNetworkList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecByPassNetworkList gets an existing AppSecByPassNetworkList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecByPassNetworkList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecByPassNetworkListState, opts ...pulumi.ResourceOption) (*AppSecByPassNetworkList, error) {
	var resource AppSecByPassNetworkList
	err := ctx.ReadResource("akamai:index/appSecByPassNetworkList:AppSecByPassNetworkList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecByPassNetworkList resources.
type appSecByPassNetworkListState struct {
	// . JSON array of network IDs that comprise the bypass list.
	BypassNetworkLists []string `pulumi:"bypassNetworkLists"`
	// . Unique identifier of the security configuration associated with the bypass network lists being modified.
	ConfigId *int `pulumi:"configId"`
	// . Unique identifier of the security policy associated with the bypass network lists.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppSecByPassNetworkListState struct {
	// . JSON array of network IDs that comprise the bypass list.
	BypassNetworkLists pulumi.StringArrayInput
	// . Unique identifier of the security configuration associated with the bypass network lists being modified.
	ConfigId pulumi.IntPtrInput
	// . Unique identifier of the security policy associated with the bypass network lists.
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecByPassNetworkListState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecByPassNetworkListState)(nil)).Elem()
}

type appSecByPassNetworkListArgs struct {
	// . JSON array of network IDs that comprise the bypass list.
	BypassNetworkLists []string `pulumi:"bypassNetworkLists"`
	// . Unique identifier of the security configuration associated with the bypass network lists being modified.
	ConfigId int `pulumi:"configId"`
	// . Unique identifier of the security policy associated with the bypass network lists.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppSecByPassNetworkList resource.
type AppSecByPassNetworkListArgs struct {
	// . JSON array of network IDs that comprise the bypass list.
	BypassNetworkLists pulumi.StringArrayInput
	// . Unique identifier of the security configuration associated with the bypass network lists being modified.
	ConfigId pulumi.IntInput
	// . Unique identifier of the security policy associated with the bypass network lists.
	SecurityPolicyId pulumi.StringInput
}

func (AppSecByPassNetworkListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecByPassNetworkListArgs)(nil)).Elem()
}

type AppSecByPassNetworkListInput interface {
	pulumi.Input

	ToAppSecByPassNetworkListOutput() AppSecByPassNetworkListOutput
	ToAppSecByPassNetworkListOutputWithContext(ctx context.Context) AppSecByPassNetworkListOutput
}

func (*AppSecByPassNetworkList) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecByPassNetworkList)(nil)).Elem()
}

func (i *AppSecByPassNetworkList) ToAppSecByPassNetworkListOutput() AppSecByPassNetworkListOutput {
	return i.ToAppSecByPassNetworkListOutputWithContext(context.Background())
}

func (i *AppSecByPassNetworkList) ToAppSecByPassNetworkListOutputWithContext(ctx context.Context) AppSecByPassNetworkListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecByPassNetworkListOutput)
}

// AppSecByPassNetworkListArrayInput is an input type that accepts AppSecByPassNetworkListArray and AppSecByPassNetworkListArrayOutput values.
// You can construct a concrete instance of `AppSecByPassNetworkListArrayInput` via:
//
//	AppSecByPassNetworkListArray{ AppSecByPassNetworkListArgs{...} }
type AppSecByPassNetworkListArrayInput interface {
	pulumi.Input

	ToAppSecByPassNetworkListArrayOutput() AppSecByPassNetworkListArrayOutput
	ToAppSecByPassNetworkListArrayOutputWithContext(context.Context) AppSecByPassNetworkListArrayOutput
}

type AppSecByPassNetworkListArray []AppSecByPassNetworkListInput

func (AppSecByPassNetworkListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecByPassNetworkList)(nil)).Elem()
}

func (i AppSecByPassNetworkListArray) ToAppSecByPassNetworkListArrayOutput() AppSecByPassNetworkListArrayOutput {
	return i.ToAppSecByPassNetworkListArrayOutputWithContext(context.Background())
}

func (i AppSecByPassNetworkListArray) ToAppSecByPassNetworkListArrayOutputWithContext(ctx context.Context) AppSecByPassNetworkListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecByPassNetworkListArrayOutput)
}

// AppSecByPassNetworkListMapInput is an input type that accepts AppSecByPassNetworkListMap and AppSecByPassNetworkListMapOutput values.
// You can construct a concrete instance of `AppSecByPassNetworkListMapInput` via:
//
//	AppSecByPassNetworkListMap{ "key": AppSecByPassNetworkListArgs{...} }
type AppSecByPassNetworkListMapInput interface {
	pulumi.Input

	ToAppSecByPassNetworkListMapOutput() AppSecByPassNetworkListMapOutput
	ToAppSecByPassNetworkListMapOutputWithContext(context.Context) AppSecByPassNetworkListMapOutput
}

type AppSecByPassNetworkListMap map[string]AppSecByPassNetworkListInput

func (AppSecByPassNetworkListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecByPassNetworkList)(nil)).Elem()
}

func (i AppSecByPassNetworkListMap) ToAppSecByPassNetworkListMapOutput() AppSecByPassNetworkListMapOutput {
	return i.ToAppSecByPassNetworkListMapOutputWithContext(context.Background())
}

func (i AppSecByPassNetworkListMap) ToAppSecByPassNetworkListMapOutputWithContext(ctx context.Context) AppSecByPassNetworkListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecByPassNetworkListMapOutput)
}

type AppSecByPassNetworkListOutput struct{ *pulumi.OutputState }

func (AppSecByPassNetworkListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecByPassNetworkList)(nil)).Elem()
}

func (o AppSecByPassNetworkListOutput) ToAppSecByPassNetworkListOutput() AppSecByPassNetworkListOutput {
	return o
}

func (o AppSecByPassNetworkListOutput) ToAppSecByPassNetworkListOutputWithContext(ctx context.Context) AppSecByPassNetworkListOutput {
	return o
}

// . JSON array of network IDs that comprise the bypass list.
func (o AppSecByPassNetworkListOutput) BypassNetworkLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppSecByPassNetworkList) pulumi.StringArrayOutput { return v.BypassNetworkLists }).(pulumi.StringArrayOutput)
}

// . Unique identifier of the security configuration associated with the bypass network lists being modified.
func (o AppSecByPassNetworkListOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecByPassNetworkList) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// . Unique identifier of the security policy associated with the bypass network lists.
func (o AppSecByPassNetworkListOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecByPassNetworkList) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type AppSecByPassNetworkListArrayOutput struct{ *pulumi.OutputState }

func (AppSecByPassNetworkListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecByPassNetworkList)(nil)).Elem()
}

func (o AppSecByPassNetworkListArrayOutput) ToAppSecByPassNetworkListArrayOutput() AppSecByPassNetworkListArrayOutput {
	return o
}

func (o AppSecByPassNetworkListArrayOutput) ToAppSecByPassNetworkListArrayOutputWithContext(ctx context.Context) AppSecByPassNetworkListArrayOutput {
	return o
}

func (o AppSecByPassNetworkListArrayOutput) Index(i pulumi.IntInput) AppSecByPassNetworkListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecByPassNetworkList {
		return vs[0].([]*AppSecByPassNetworkList)[vs[1].(int)]
	}).(AppSecByPassNetworkListOutput)
}

type AppSecByPassNetworkListMapOutput struct{ *pulumi.OutputState }

func (AppSecByPassNetworkListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecByPassNetworkList)(nil)).Elem()
}

func (o AppSecByPassNetworkListMapOutput) ToAppSecByPassNetworkListMapOutput() AppSecByPassNetworkListMapOutput {
	return o
}

func (o AppSecByPassNetworkListMapOutput) ToAppSecByPassNetworkListMapOutputWithContext(ctx context.Context) AppSecByPassNetworkListMapOutput {
	return o
}

func (o AppSecByPassNetworkListMapOutput) MapIndex(k pulumi.StringInput) AppSecByPassNetworkListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecByPassNetworkList {
		return vs[0].(map[string]*AppSecByPassNetworkList)[vs[1].(string)]
	}).(AppSecByPassNetworkListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecByPassNetworkListInput)(nil)).Elem(), &AppSecByPassNetworkList{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecByPassNetworkListArrayInput)(nil)).Elem(), AppSecByPassNetworkListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecByPassNetworkListMapInput)(nil)).Elem(), AppSecByPassNetworkListMap{})
	pulumi.RegisterOutputType(AppSecByPassNetworkListOutput{})
	pulumi.RegisterOutputType(AppSecByPassNetworkListArrayOutput{})
	pulumi.RegisterOutputType(AppSecByPassNetworkListMapOutput{})
}
