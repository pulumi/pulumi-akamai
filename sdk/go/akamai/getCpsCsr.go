// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v8/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCpsCsr(ctx *pulumi.Context, args *GetCpsCsrArgs, opts ...pulumi.InvokeOption) (*GetCpsCsrResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCpsCsrResult
	err := ctx.Invoke("akamai:index/getCpsCsr:getCpsCsr", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCpsCsr.
type GetCpsCsrArgs struct {
	EnrollmentId int `pulumi:"enrollmentId"`
}

// A collection of values returned by getCpsCsr.
type GetCpsCsrResult struct {
	CsrEcdsa     string `pulumi:"csrEcdsa"`
	CsrRsa       string `pulumi:"csrRsa"`
	EnrollmentId int    `pulumi:"enrollmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetCpsCsrOutput(ctx *pulumi.Context, args GetCpsCsrOutputArgs, opts ...pulumi.InvokeOption) GetCpsCsrResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCpsCsrResultOutput, error) {
			args := v.(GetCpsCsrArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("akamai:index/getCpsCsr:getCpsCsr", args, GetCpsCsrResultOutput{}, options).(GetCpsCsrResultOutput), nil
		}).(GetCpsCsrResultOutput)
}

// A collection of arguments for invoking getCpsCsr.
type GetCpsCsrOutputArgs struct {
	EnrollmentId pulumi.IntInput `pulumi:"enrollmentId"`
}

func (GetCpsCsrOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCpsCsrArgs)(nil)).Elem()
}

// A collection of values returned by getCpsCsr.
type GetCpsCsrResultOutput struct{ *pulumi.OutputState }

func (GetCpsCsrResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCpsCsrResult)(nil)).Elem()
}

func (o GetCpsCsrResultOutput) ToGetCpsCsrResultOutput() GetCpsCsrResultOutput {
	return o
}

func (o GetCpsCsrResultOutput) ToGetCpsCsrResultOutputWithContext(ctx context.Context) GetCpsCsrResultOutput {
	return o
}

func (o GetCpsCsrResultOutput) CsrEcdsa() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpsCsrResult) string { return v.CsrEcdsa }).(pulumi.StringOutput)
}

func (o GetCpsCsrResultOutput) CsrRsa() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpsCsrResult) string { return v.CsrRsa }).(pulumi.StringOutput)
}

func (o GetCpsCsrResultOutput) EnrollmentId() pulumi.IntOutput {
	return o.ApplyT(func(v GetCpsCsrResult) int { return v.EnrollmentId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCpsCsrResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCpsCsrResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCpsCsrResultOutput{})
}
