// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `getCpsWarnings` data source to return a map of all possible pre- and post-verification warnings. The map includes both the ID needed to acknowledge a warning and a brief description of the issue.
//
// CPS produces warnings during enrollment creation or after a client uploads the certificate. CPS won't process a change until you acknowledge all warnings.
//
// You can use the warning IDs returned by this data source to acknowledge or auto-approve warnings. The `CpsThirdPartyEnrollment` and `CpsUploadCertificate` resources include arguments to help you do this.
//
// ## Basic usage
//
// This example shows how to return a map of verification warnings:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := akamai.GetCpsWarnings(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Attributes reference
//
// This data source returns this attribute:
//
//   - `warnings` - Validation warnings for the current change you're making. Warnings display with an ID and a short description. Unless you auto-approve warnings, you need the ID to acknowledge the change. CPS won't process the change until you acknowledge these warnings.
func GetCpsWarnings(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetCpsWarningsResult, error) {
	var rv GetCpsWarningsResult
	err := ctx.Invoke("akamai:index/getCpsWarnings:getCpsWarnings", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getCpsWarnings.
type GetCpsWarningsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string            `pulumi:"id"`
	Warnings map[string]string `pulumi:"warnings"`
}
