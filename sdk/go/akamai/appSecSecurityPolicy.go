// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v6/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppSecSecurityPolicy struct {
	pulumi.CustomResourceState

	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Unique identifier of the existing security policy being cloned
	CreateFromSecurityPolicyId pulumi.StringPtrOutput `pulumi:"createFromSecurityPolicyId"`
	// Whether to assign default settings to the new security policy
	DefaultSettings pulumi.BoolPtrOutput `pulumi:"defaultSettings"`
	// Unique identifier of the new security policy
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
	// Name of the new security policy
	SecurityPolicyName pulumi.StringOutput `pulumi:"securityPolicyName"`
	// Four-character alphanumeric string prefix used in creating the security policy ID
	SecurityPolicyPrefix pulumi.StringOutput `pulumi:"securityPolicyPrefix"`
}

// NewAppSecSecurityPolicy registers a new resource with the given unique name, arguments, and options.
func NewAppSecSecurityPolicy(ctx *pulumi.Context,
	name string, args *AppSecSecurityPolicyArgs, opts ...pulumi.ResourceOption) (*AppSecSecurityPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.SecurityPolicyName == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyName'")
	}
	if args.SecurityPolicyPrefix == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyPrefix'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppSecSecurityPolicy
	err := ctx.RegisterResource("akamai:index/appSecSecurityPolicy:AppSecSecurityPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecSecurityPolicy gets an existing AppSecSecurityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecSecurityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecSecurityPolicyState, opts ...pulumi.ResourceOption) (*AppSecSecurityPolicy, error) {
	var resource AppSecSecurityPolicy
	err := ctx.ReadResource("akamai:index/appSecSecurityPolicy:AppSecSecurityPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecSecurityPolicy resources.
type appSecSecurityPolicyState struct {
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// Unique identifier of the existing security policy being cloned
	CreateFromSecurityPolicyId *string `pulumi:"createFromSecurityPolicyId"`
	// Whether to assign default settings to the new security policy
	DefaultSettings *bool `pulumi:"defaultSettings"`
	// Unique identifier of the new security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
	// Name of the new security policy
	SecurityPolicyName *string `pulumi:"securityPolicyName"`
	// Four-character alphanumeric string prefix used in creating the security policy ID
	SecurityPolicyPrefix *string `pulumi:"securityPolicyPrefix"`
}

type AppSecSecurityPolicyState struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// Unique identifier of the existing security policy being cloned
	CreateFromSecurityPolicyId pulumi.StringPtrInput
	// Whether to assign default settings to the new security policy
	DefaultSettings pulumi.BoolPtrInput
	// Unique identifier of the new security policy
	SecurityPolicyId pulumi.StringPtrInput
	// Name of the new security policy
	SecurityPolicyName pulumi.StringPtrInput
	// Four-character alphanumeric string prefix used in creating the security policy ID
	SecurityPolicyPrefix pulumi.StringPtrInput
}

func (AppSecSecurityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecSecurityPolicyState)(nil)).Elem()
}

type appSecSecurityPolicyArgs struct {
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// Unique identifier of the existing security policy being cloned
	CreateFromSecurityPolicyId *string `pulumi:"createFromSecurityPolicyId"`
	// Whether to assign default settings to the new security policy
	DefaultSettings *bool `pulumi:"defaultSettings"`
	// Name of the new security policy
	SecurityPolicyName string `pulumi:"securityPolicyName"`
	// Four-character alphanumeric string prefix used in creating the security policy ID
	SecurityPolicyPrefix string `pulumi:"securityPolicyPrefix"`
}

// The set of arguments for constructing a AppSecSecurityPolicy resource.
type AppSecSecurityPolicyArgs struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// Unique identifier of the existing security policy being cloned
	CreateFromSecurityPolicyId pulumi.StringPtrInput
	// Whether to assign default settings to the new security policy
	DefaultSettings pulumi.BoolPtrInput
	// Name of the new security policy
	SecurityPolicyName pulumi.StringInput
	// Four-character alphanumeric string prefix used in creating the security policy ID
	SecurityPolicyPrefix pulumi.StringInput
}

func (AppSecSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecSecurityPolicyArgs)(nil)).Elem()
}

type AppSecSecurityPolicyInput interface {
	pulumi.Input

	ToAppSecSecurityPolicyOutput() AppSecSecurityPolicyOutput
	ToAppSecSecurityPolicyOutputWithContext(ctx context.Context) AppSecSecurityPolicyOutput
}

func (*AppSecSecurityPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecSecurityPolicy)(nil)).Elem()
}

func (i *AppSecSecurityPolicy) ToAppSecSecurityPolicyOutput() AppSecSecurityPolicyOutput {
	return i.ToAppSecSecurityPolicyOutputWithContext(context.Background())
}

func (i *AppSecSecurityPolicy) ToAppSecSecurityPolicyOutputWithContext(ctx context.Context) AppSecSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSecurityPolicyOutput)
}

// AppSecSecurityPolicyArrayInput is an input type that accepts AppSecSecurityPolicyArray and AppSecSecurityPolicyArrayOutput values.
// You can construct a concrete instance of `AppSecSecurityPolicyArrayInput` via:
//
//	AppSecSecurityPolicyArray{ AppSecSecurityPolicyArgs{...} }
type AppSecSecurityPolicyArrayInput interface {
	pulumi.Input

	ToAppSecSecurityPolicyArrayOutput() AppSecSecurityPolicyArrayOutput
	ToAppSecSecurityPolicyArrayOutputWithContext(context.Context) AppSecSecurityPolicyArrayOutput
}

type AppSecSecurityPolicyArray []AppSecSecurityPolicyInput

func (AppSecSecurityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecSecurityPolicy)(nil)).Elem()
}

func (i AppSecSecurityPolicyArray) ToAppSecSecurityPolicyArrayOutput() AppSecSecurityPolicyArrayOutput {
	return i.ToAppSecSecurityPolicyArrayOutputWithContext(context.Background())
}

func (i AppSecSecurityPolicyArray) ToAppSecSecurityPolicyArrayOutputWithContext(ctx context.Context) AppSecSecurityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSecurityPolicyArrayOutput)
}

// AppSecSecurityPolicyMapInput is an input type that accepts AppSecSecurityPolicyMap and AppSecSecurityPolicyMapOutput values.
// You can construct a concrete instance of `AppSecSecurityPolicyMapInput` via:
//
//	AppSecSecurityPolicyMap{ "key": AppSecSecurityPolicyArgs{...} }
type AppSecSecurityPolicyMapInput interface {
	pulumi.Input

	ToAppSecSecurityPolicyMapOutput() AppSecSecurityPolicyMapOutput
	ToAppSecSecurityPolicyMapOutputWithContext(context.Context) AppSecSecurityPolicyMapOutput
}

type AppSecSecurityPolicyMap map[string]AppSecSecurityPolicyInput

func (AppSecSecurityPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecSecurityPolicy)(nil)).Elem()
}

func (i AppSecSecurityPolicyMap) ToAppSecSecurityPolicyMapOutput() AppSecSecurityPolicyMapOutput {
	return i.ToAppSecSecurityPolicyMapOutputWithContext(context.Background())
}

func (i AppSecSecurityPolicyMap) ToAppSecSecurityPolicyMapOutputWithContext(ctx context.Context) AppSecSecurityPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSecurityPolicyMapOutput)
}

type AppSecSecurityPolicyOutput struct{ *pulumi.OutputState }

func (AppSecSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecSecurityPolicy)(nil)).Elem()
}

func (o AppSecSecurityPolicyOutput) ToAppSecSecurityPolicyOutput() AppSecSecurityPolicyOutput {
	return o
}

func (o AppSecSecurityPolicyOutput) ToAppSecSecurityPolicyOutputWithContext(ctx context.Context) AppSecSecurityPolicyOutput {
	return o
}

// Unique identifier of the security configuration
func (o AppSecSecurityPolicyOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecSecurityPolicy) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Unique identifier of the existing security policy being cloned
func (o AppSecSecurityPolicyOutput) CreateFromSecurityPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSecSecurityPolicy) pulumi.StringPtrOutput { return v.CreateFromSecurityPolicyId }).(pulumi.StringPtrOutput)
}

// Whether to assign default settings to the new security policy
func (o AppSecSecurityPolicyOutput) DefaultSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSecSecurityPolicy) pulumi.BoolPtrOutput { return v.DefaultSettings }).(pulumi.BoolPtrOutput)
}

// Unique identifier of the new security policy
func (o AppSecSecurityPolicyOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecSecurityPolicy) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

// Name of the new security policy
func (o AppSecSecurityPolicyOutput) SecurityPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecSecurityPolicy) pulumi.StringOutput { return v.SecurityPolicyName }).(pulumi.StringOutput)
}

// Four-character alphanumeric string prefix used in creating the security policy ID
func (o AppSecSecurityPolicyOutput) SecurityPolicyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecSecurityPolicy) pulumi.StringOutput { return v.SecurityPolicyPrefix }).(pulumi.StringOutput)
}

type AppSecSecurityPolicyArrayOutput struct{ *pulumi.OutputState }

func (AppSecSecurityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecSecurityPolicy)(nil)).Elem()
}

func (o AppSecSecurityPolicyArrayOutput) ToAppSecSecurityPolicyArrayOutput() AppSecSecurityPolicyArrayOutput {
	return o
}

func (o AppSecSecurityPolicyArrayOutput) ToAppSecSecurityPolicyArrayOutputWithContext(ctx context.Context) AppSecSecurityPolicyArrayOutput {
	return o
}

func (o AppSecSecurityPolicyArrayOutput) Index(i pulumi.IntInput) AppSecSecurityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecSecurityPolicy {
		return vs[0].([]*AppSecSecurityPolicy)[vs[1].(int)]
	}).(AppSecSecurityPolicyOutput)
}

type AppSecSecurityPolicyMapOutput struct{ *pulumi.OutputState }

func (AppSecSecurityPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecSecurityPolicy)(nil)).Elem()
}

func (o AppSecSecurityPolicyMapOutput) ToAppSecSecurityPolicyMapOutput() AppSecSecurityPolicyMapOutput {
	return o
}

func (o AppSecSecurityPolicyMapOutput) ToAppSecSecurityPolicyMapOutputWithContext(ctx context.Context) AppSecSecurityPolicyMapOutput {
	return o
}

func (o AppSecSecurityPolicyMapOutput) MapIndex(k pulumi.StringInput) AppSecSecurityPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecSecurityPolicy {
		return vs[0].(map[string]*AppSecSecurityPolicy)[vs[1].(string)]
	}).(AppSecSecurityPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecSecurityPolicyInput)(nil)).Elem(), &AppSecSecurityPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecSecurityPolicyArrayInput)(nil)).Elem(), AppSecSecurityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecSecurityPolicyMapInput)(nil)).Elem(), AppSecSecurityPolicyMap{})
	pulumi.RegisterOutputType(AppSecSecurityPolicyOutput{})
	pulumi.RegisterOutputType(AppSecSecurityPolicyArrayOutput{})
	pulumi.RegisterOutputType(AppSecSecurityPolicyMapOutput{})
}
