// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-akamai/sdk/v8/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppsecEvalPenaltyBoxConditions struct {
	pulumi.CustomResourceState

	// Unique identifier of the security configuration
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Description of evaluation penalty box conditions
	PenaltyBoxConditions pulumi.StringOutput `pulumi:"penaltyBoxConditions"`
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewAppsecEvalPenaltyBoxConditions registers a new resource with the given unique name, arguments, and options.
func NewAppsecEvalPenaltyBoxConditions(ctx *pulumi.Context,
	name string, args *AppsecEvalPenaltyBoxConditionsArgs, opts ...pulumi.ResourceOption) (*AppsecEvalPenaltyBoxConditions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.PenaltyBoxConditions == nil {
		return nil, errors.New("invalid value for required argument 'PenaltyBoxConditions'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppsecEvalPenaltyBoxConditions
	err := ctx.RegisterResource("akamai:index/appsecEvalPenaltyBoxConditions:AppsecEvalPenaltyBoxConditions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppsecEvalPenaltyBoxConditions gets an existing AppsecEvalPenaltyBoxConditions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppsecEvalPenaltyBoxConditions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppsecEvalPenaltyBoxConditionsState, opts ...pulumi.ResourceOption) (*AppsecEvalPenaltyBoxConditions, error) {
	var resource AppsecEvalPenaltyBoxConditions
	err := ctx.ReadResource("akamai:index/appsecEvalPenaltyBoxConditions:AppsecEvalPenaltyBoxConditions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppsecEvalPenaltyBoxConditions resources.
type appsecEvalPenaltyBoxConditionsState struct {
	// Unique identifier of the security configuration
	ConfigId *int `pulumi:"configId"`
	// Description of evaluation penalty box conditions
	PenaltyBoxConditions *string `pulumi:"penaltyBoxConditions"`
	// Unique identifier of the security policy
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppsecEvalPenaltyBoxConditionsState struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntPtrInput
	// Description of evaluation penalty box conditions
	PenaltyBoxConditions pulumi.StringPtrInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppsecEvalPenaltyBoxConditionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecEvalPenaltyBoxConditionsState)(nil)).Elem()
}

type appsecEvalPenaltyBoxConditionsArgs struct {
	// Unique identifier of the security configuration
	ConfigId int `pulumi:"configId"`
	// Description of evaluation penalty box conditions
	PenaltyBoxConditions string `pulumi:"penaltyBoxConditions"`
	// Unique identifier of the security policy
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppsecEvalPenaltyBoxConditions resource.
type AppsecEvalPenaltyBoxConditionsArgs struct {
	// Unique identifier of the security configuration
	ConfigId pulumi.IntInput
	// Description of evaluation penalty box conditions
	PenaltyBoxConditions pulumi.StringInput
	// Unique identifier of the security policy
	SecurityPolicyId pulumi.StringInput
}

func (AppsecEvalPenaltyBoxConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecEvalPenaltyBoxConditionsArgs)(nil)).Elem()
}

type AppsecEvalPenaltyBoxConditionsInput interface {
	pulumi.Input

	ToAppsecEvalPenaltyBoxConditionsOutput() AppsecEvalPenaltyBoxConditionsOutput
	ToAppsecEvalPenaltyBoxConditionsOutputWithContext(ctx context.Context) AppsecEvalPenaltyBoxConditionsOutput
}

func (*AppsecEvalPenaltyBoxConditions) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecEvalPenaltyBoxConditions)(nil)).Elem()
}

func (i *AppsecEvalPenaltyBoxConditions) ToAppsecEvalPenaltyBoxConditionsOutput() AppsecEvalPenaltyBoxConditionsOutput {
	return i.ToAppsecEvalPenaltyBoxConditionsOutputWithContext(context.Background())
}

func (i *AppsecEvalPenaltyBoxConditions) ToAppsecEvalPenaltyBoxConditionsOutputWithContext(ctx context.Context) AppsecEvalPenaltyBoxConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecEvalPenaltyBoxConditionsOutput)
}

// AppsecEvalPenaltyBoxConditionsArrayInput is an input type that accepts AppsecEvalPenaltyBoxConditionsArray and AppsecEvalPenaltyBoxConditionsArrayOutput values.
// You can construct a concrete instance of `AppsecEvalPenaltyBoxConditionsArrayInput` via:
//
//	AppsecEvalPenaltyBoxConditionsArray{ AppsecEvalPenaltyBoxConditionsArgs{...} }
type AppsecEvalPenaltyBoxConditionsArrayInput interface {
	pulumi.Input

	ToAppsecEvalPenaltyBoxConditionsArrayOutput() AppsecEvalPenaltyBoxConditionsArrayOutput
	ToAppsecEvalPenaltyBoxConditionsArrayOutputWithContext(context.Context) AppsecEvalPenaltyBoxConditionsArrayOutput
}

type AppsecEvalPenaltyBoxConditionsArray []AppsecEvalPenaltyBoxConditionsInput

func (AppsecEvalPenaltyBoxConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecEvalPenaltyBoxConditions)(nil)).Elem()
}

func (i AppsecEvalPenaltyBoxConditionsArray) ToAppsecEvalPenaltyBoxConditionsArrayOutput() AppsecEvalPenaltyBoxConditionsArrayOutput {
	return i.ToAppsecEvalPenaltyBoxConditionsArrayOutputWithContext(context.Background())
}

func (i AppsecEvalPenaltyBoxConditionsArray) ToAppsecEvalPenaltyBoxConditionsArrayOutputWithContext(ctx context.Context) AppsecEvalPenaltyBoxConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecEvalPenaltyBoxConditionsArrayOutput)
}

// AppsecEvalPenaltyBoxConditionsMapInput is an input type that accepts AppsecEvalPenaltyBoxConditionsMap and AppsecEvalPenaltyBoxConditionsMapOutput values.
// You can construct a concrete instance of `AppsecEvalPenaltyBoxConditionsMapInput` via:
//
//	AppsecEvalPenaltyBoxConditionsMap{ "key": AppsecEvalPenaltyBoxConditionsArgs{...} }
type AppsecEvalPenaltyBoxConditionsMapInput interface {
	pulumi.Input

	ToAppsecEvalPenaltyBoxConditionsMapOutput() AppsecEvalPenaltyBoxConditionsMapOutput
	ToAppsecEvalPenaltyBoxConditionsMapOutputWithContext(context.Context) AppsecEvalPenaltyBoxConditionsMapOutput
}

type AppsecEvalPenaltyBoxConditionsMap map[string]AppsecEvalPenaltyBoxConditionsInput

func (AppsecEvalPenaltyBoxConditionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecEvalPenaltyBoxConditions)(nil)).Elem()
}

func (i AppsecEvalPenaltyBoxConditionsMap) ToAppsecEvalPenaltyBoxConditionsMapOutput() AppsecEvalPenaltyBoxConditionsMapOutput {
	return i.ToAppsecEvalPenaltyBoxConditionsMapOutputWithContext(context.Background())
}

func (i AppsecEvalPenaltyBoxConditionsMap) ToAppsecEvalPenaltyBoxConditionsMapOutputWithContext(ctx context.Context) AppsecEvalPenaltyBoxConditionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecEvalPenaltyBoxConditionsMapOutput)
}

type AppsecEvalPenaltyBoxConditionsOutput struct{ *pulumi.OutputState }

func (AppsecEvalPenaltyBoxConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecEvalPenaltyBoxConditions)(nil)).Elem()
}

func (o AppsecEvalPenaltyBoxConditionsOutput) ToAppsecEvalPenaltyBoxConditionsOutput() AppsecEvalPenaltyBoxConditionsOutput {
	return o
}

func (o AppsecEvalPenaltyBoxConditionsOutput) ToAppsecEvalPenaltyBoxConditionsOutputWithContext(ctx context.Context) AppsecEvalPenaltyBoxConditionsOutput {
	return o
}

// Unique identifier of the security configuration
func (o AppsecEvalPenaltyBoxConditionsOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppsecEvalPenaltyBoxConditions) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// Description of evaluation penalty box conditions
func (o AppsecEvalPenaltyBoxConditionsOutput) PenaltyBoxConditions() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecEvalPenaltyBoxConditions) pulumi.StringOutput { return v.PenaltyBoxConditions }).(pulumi.StringOutput)
}

// Unique identifier of the security policy
func (o AppsecEvalPenaltyBoxConditionsOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecEvalPenaltyBoxConditions) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type AppsecEvalPenaltyBoxConditionsArrayOutput struct{ *pulumi.OutputState }

func (AppsecEvalPenaltyBoxConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecEvalPenaltyBoxConditions)(nil)).Elem()
}

func (o AppsecEvalPenaltyBoxConditionsArrayOutput) ToAppsecEvalPenaltyBoxConditionsArrayOutput() AppsecEvalPenaltyBoxConditionsArrayOutput {
	return o
}

func (o AppsecEvalPenaltyBoxConditionsArrayOutput) ToAppsecEvalPenaltyBoxConditionsArrayOutputWithContext(ctx context.Context) AppsecEvalPenaltyBoxConditionsArrayOutput {
	return o
}

func (o AppsecEvalPenaltyBoxConditionsArrayOutput) Index(i pulumi.IntInput) AppsecEvalPenaltyBoxConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppsecEvalPenaltyBoxConditions {
		return vs[0].([]*AppsecEvalPenaltyBoxConditions)[vs[1].(int)]
	}).(AppsecEvalPenaltyBoxConditionsOutput)
}

type AppsecEvalPenaltyBoxConditionsMapOutput struct{ *pulumi.OutputState }

func (AppsecEvalPenaltyBoxConditionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecEvalPenaltyBoxConditions)(nil)).Elem()
}

func (o AppsecEvalPenaltyBoxConditionsMapOutput) ToAppsecEvalPenaltyBoxConditionsMapOutput() AppsecEvalPenaltyBoxConditionsMapOutput {
	return o
}

func (o AppsecEvalPenaltyBoxConditionsMapOutput) ToAppsecEvalPenaltyBoxConditionsMapOutputWithContext(ctx context.Context) AppsecEvalPenaltyBoxConditionsMapOutput {
	return o
}

func (o AppsecEvalPenaltyBoxConditionsMapOutput) MapIndex(k pulumi.StringInput) AppsecEvalPenaltyBoxConditionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppsecEvalPenaltyBoxConditions {
		return vs[0].(map[string]*AppsecEvalPenaltyBoxConditions)[vs[1].(string)]
	}).(AppsecEvalPenaltyBoxConditionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecEvalPenaltyBoxConditionsInput)(nil)).Elem(), &AppsecEvalPenaltyBoxConditions{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecEvalPenaltyBoxConditionsArrayInput)(nil)).Elem(), AppsecEvalPenaltyBoxConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecEvalPenaltyBoxConditionsMapInput)(nil)).Elem(), AppsecEvalPenaltyBoxConditionsMap{})
	pulumi.RegisterOutputType(AppsecEvalPenaltyBoxConditionsOutput{})
	pulumi.RegisterOutputType(AppsecEvalPenaltyBoxConditionsArrayOutput{})
	pulumi.RegisterOutputType(AppsecEvalPenaltyBoxConditionsMapOutput{})
}
