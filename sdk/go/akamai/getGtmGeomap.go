// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-akamai/sdk/v9/go/akamai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupGtmGeomap(ctx *pulumi.Context, args *LookupGtmGeomapArgs, opts ...pulumi.InvokeOption) (*LookupGtmGeomapResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGtmGeomapResult
	err := ctx.Invoke("akamai:index/getGtmGeomap:getGtmGeomap", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGtmGeomap.
type LookupGtmGeomapArgs struct {
	Domain  string `pulumi:"domain"`
	MapName string `pulumi:"mapName"`
}

// A collection of values returned by getGtmGeomap.
type LookupGtmGeomapResult struct {
	Assignments       []GetGtmGeomapAssignment      `pulumi:"assignments"`
	DefaultDatacenter GetGtmGeomapDefaultDatacenter `pulumi:"defaultDatacenter"`
	Domain            string                        `pulumi:"domain"`
	// The provider-assigned unique ID for this managed resource.
	Id      string             `pulumi:"id"`
	Links   []GetGtmGeomapLink `pulumi:"links"`
	MapName string             `pulumi:"mapName"`
}

func LookupGtmGeomapOutput(ctx *pulumi.Context, args LookupGtmGeomapOutputArgs, opts ...pulumi.InvokeOption) LookupGtmGeomapResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGtmGeomapResultOutput, error) {
			args := v.(LookupGtmGeomapArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("akamai:index/getGtmGeomap:getGtmGeomap", args, LookupGtmGeomapResultOutput{}, options).(LookupGtmGeomapResultOutput), nil
		}).(LookupGtmGeomapResultOutput)
}

// A collection of arguments for invoking getGtmGeomap.
type LookupGtmGeomapOutputArgs struct {
	Domain  pulumi.StringInput `pulumi:"domain"`
	MapName pulumi.StringInput `pulumi:"mapName"`
}

func (LookupGtmGeomapOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGtmGeomapArgs)(nil)).Elem()
}

// A collection of values returned by getGtmGeomap.
type LookupGtmGeomapResultOutput struct{ *pulumi.OutputState }

func (LookupGtmGeomapResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGtmGeomapResult)(nil)).Elem()
}

func (o LookupGtmGeomapResultOutput) ToLookupGtmGeomapResultOutput() LookupGtmGeomapResultOutput {
	return o
}

func (o LookupGtmGeomapResultOutput) ToLookupGtmGeomapResultOutputWithContext(ctx context.Context) LookupGtmGeomapResultOutput {
	return o
}

func (o LookupGtmGeomapResultOutput) Assignments() GetGtmGeomapAssignmentArrayOutput {
	return o.ApplyT(func(v LookupGtmGeomapResult) []GetGtmGeomapAssignment { return v.Assignments }).(GetGtmGeomapAssignmentArrayOutput)
}

func (o LookupGtmGeomapResultOutput) DefaultDatacenter() GetGtmGeomapDefaultDatacenterOutput {
	return o.ApplyT(func(v LookupGtmGeomapResult) GetGtmGeomapDefaultDatacenter { return v.DefaultDatacenter }).(GetGtmGeomapDefaultDatacenterOutput)
}

func (o LookupGtmGeomapResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGtmGeomapResult) string { return v.Domain }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGtmGeomapResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGtmGeomapResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGtmGeomapResultOutput) Links() GetGtmGeomapLinkArrayOutput {
	return o.ApplyT(func(v LookupGtmGeomapResult) []GetGtmGeomapLink { return v.Links }).(GetGtmGeomapLinkArrayOutput)
}

func (o LookupGtmGeomapResultOutput) MapName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGtmGeomapResult) string { return v.MapName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGtmGeomapResultOutput{})
}
