// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BotmanClientSideSecurity struct {
	pulumi.CustomResourceState

	ClientSideSecurity pulumi.StringOutput `pulumi:"clientSideSecurity"`
	ConfigId           pulumi.IntOutput    `pulumi:"configId"`
}

// NewBotmanClientSideSecurity registers a new resource with the given unique name, arguments, and options.
func NewBotmanClientSideSecurity(ctx *pulumi.Context,
	name string, args *BotmanClientSideSecurityArgs, opts ...pulumi.ResourceOption) (*BotmanClientSideSecurity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientSideSecurity == nil {
		return nil, errors.New("invalid value for required argument 'ClientSideSecurity'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	var resource BotmanClientSideSecurity
	err := ctx.RegisterResource("akamai:index/botmanClientSideSecurity:BotmanClientSideSecurity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotmanClientSideSecurity gets an existing BotmanClientSideSecurity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotmanClientSideSecurity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotmanClientSideSecurityState, opts ...pulumi.ResourceOption) (*BotmanClientSideSecurity, error) {
	var resource BotmanClientSideSecurity
	err := ctx.ReadResource("akamai:index/botmanClientSideSecurity:BotmanClientSideSecurity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotmanClientSideSecurity resources.
type botmanClientSideSecurityState struct {
	ClientSideSecurity *string `pulumi:"clientSideSecurity"`
	ConfigId           *int    `pulumi:"configId"`
}

type BotmanClientSideSecurityState struct {
	ClientSideSecurity pulumi.StringPtrInput
	ConfigId           pulumi.IntPtrInput
}

func (BotmanClientSideSecurityState) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanClientSideSecurityState)(nil)).Elem()
}

type botmanClientSideSecurityArgs struct {
	ClientSideSecurity string `pulumi:"clientSideSecurity"`
	ConfigId           int    `pulumi:"configId"`
}

// The set of arguments for constructing a BotmanClientSideSecurity resource.
type BotmanClientSideSecurityArgs struct {
	ClientSideSecurity pulumi.StringInput
	ConfigId           pulumi.IntInput
}

func (BotmanClientSideSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botmanClientSideSecurityArgs)(nil)).Elem()
}

type BotmanClientSideSecurityInput interface {
	pulumi.Input

	ToBotmanClientSideSecurityOutput() BotmanClientSideSecurityOutput
	ToBotmanClientSideSecurityOutputWithContext(ctx context.Context) BotmanClientSideSecurityOutput
}

func (*BotmanClientSideSecurity) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanClientSideSecurity)(nil)).Elem()
}

func (i *BotmanClientSideSecurity) ToBotmanClientSideSecurityOutput() BotmanClientSideSecurityOutput {
	return i.ToBotmanClientSideSecurityOutputWithContext(context.Background())
}

func (i *BotmanClientSideSecurity) ToBotmanClientSideSecurityOutputWithContext(ctx context.Context) BotmanClientSideSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanClientSideSecurityOutput)
}

// BotmanClientSideSecurityArrayInput is an input type that accepts BotmanClientSideSecurityArray and BotmanClientSideSecurityArrayOutput values.
// You can construct a concrete instance of `BotmanClientSideSecurityArrayInput` via:
//
//	BotmanClientSideSecurityArray{ BotmanClientSideSecurityArgs{...} }
type BotmanClientSideSecurityArrayInput interface {
	pulumi.Input

	ToBotmanClientSideSecurityArrayOutput() BotmanClientSideSecurityArrayOutput
	ToBotmanClientSideSecurityArrayOutputWithContext(context.Context) BotmanClientSideSecurityArrayOutput
}

type BotmanClientSideSecurityArray []BotmanClientSideSecurityInput

func (BotmanClientSideSecurityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanClientSideSecurity)(nil)).Elem()
}

func (i BotmanClientSideSecurityArray) ToBotmanClientSideSecurityArrayOutput() BotmanClientSideSecurityArrayOutput {
	return i.ToBotmanClientSideSecurityArrayOutputWithContext(context.Background())
}

func (i BotmanClientSideSecurityArray) ToBotmanClientSideSecurityArrayOutputWithContext(ctx context.Context) BotmanClientSideSecurityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanClientSideSecurityArrayOutput)
}

// BotmanClientSideSecurityMapInput is an input type that accepts BotmanClientSideSecurityMap and BotmanClientSideSecurityMapOutput values.
// You can construct a concrete instance of `BotmanClientSideSecurityMapInput` via:
//
//	BotmanClientSideSecurityMap{ "key": BotmanClientSideSecurityArgs{...} }
type BotmanClientSideSecurityMapInput interface {
	pulumi.Input

	ToBotmanClientSideSecurityMapOutput() BotmanClientSideSecurityMapOutput
	ToBotmanClientSideSecurityMapOutputWithContext(context.Context) BotmanClientSideSecurityMapOutput
}

type BotmanClientSideSecurityMap map[string]BotmanClientSideSecurityInput

func (BotmanClientSideSecurityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanClientSideSecurity)(nil)).Elem()
}

func (i BotmanClientSideSecurityMap) ToBotmanClientSideSecurityMapOutput() BotmanClientSideSecurityMapOutput {
	return i.ToBotmanClientSideSecurityMapOutputWithContext(context.Background())
}

func (i BotmanClientSideSecurityMap) ToBotmanClientSideSecurityMapOutputWithContext(ctx context.Context) BotmanClientSideSecurityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotmanClientSideSecurityMapOutput)
}

type BotmanClientSideSecurityOutput struct{ *pulumi.OutputState }

func (BotmanClientSideSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BotmanClientSideSecurity)(nil)).Elem()
}

func (o BotmanClientSideSecurityOutput) ToBotmanClientSideSecurityOutput() BotmanClientSideSecurityOutput {
	return o
}

func (o BotmanClientSideSecurityOutput) ToBotmanClientSideSecurityOutputWithContext(ctx context.Context) BotmanClientSideSecurityOutput {
	return o
}

func (o BotmanClientSideSecurityOutput) ClientSideSecurity() pulumi.StringOutput {
	return o.ApplyT(func(v *BotmanClientSideSecurity) pulumi.StringOutput { return v.ClientSideSecurity }).(pulumi.StringOutput)
}

func (o BotmanClientSideSecurityOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *BotmanClientSideSecurity) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

type BotmanClientSideSecurityArrayOutput struct{ *pulumi.OutputState }

func (BotmanClientSideSecurityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BotmanClientSideSecurity)(nil)).Elem()
}

func (o BotmanClientSideSecurityArrayOutput) ToBotmanClientSideSecurityArrayOutput() BotmanClientSideSecurityArrayOutput {
	return o
}

func (o BotmanClientSideSecurityArrayOutput) ToBotmanClientSideSecurityArrayOutputWithContext(ctx context.Context) BotmanClientSideSecurityArrayOutput {
	return o
}

func (o BotmanClientSideSecurityArrayOutput) Index(i pulumi.IntInput) BotmanClientSideSecurityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BotmanClientSideSecurity {
		return vs[0].([]*BotmanClientSideSecurity)[vs[1].(int)]
	}).(BotmanClientSideSecurityOutput)
}

type BotmanClientSideSecurityMapOutput struct{ *pulumi.OutputState }

func (BotmanClientSideSecurityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BotmanClientSideSecurity)(nil)).Elem()
}

func (o BotmanClientSideSecurityMapOutput) ToBotmanClientSideSecurityMapOutput() BotmanClientSideSecurityMapOutput {
	return o
}

func (o BotmanClientSideSecurityMapOutput) ToBotmanClientSideSecurityMapOutputWithContext(ctx context.Context) BotmanClientSideSecurityMapOutput {
	return o
}

func (o BotmanClientSideSecurityMapOutput) MapIndex(k pulumi.StringInput) BotmanClientSideSecurityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BotmanClientSideSecurity {
		return vs[0].(map[string]*BotmanClientSideSecurity)[vs[1].(string)]
	}).(BotmanClientSideSecurityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanClientSideSecurityInput)(nil)).Elem(), &BotmanClientSideSecurity{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanClientSideSecurityArrayInput)(nil)).Elem(), BotmanClientSideSecurityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotmanClientSideSecurityMapInput)(nil)).Elem(), BotmanClientSideSecurityMap{})
	pulumi.RegisterOutputType(BotmanClientSideSecurityOutput{})
	pulumi.RegisterOutputType(BotmanClientSideSecurityArrayOutput{})
	pulumi.RegisterOutputType(BotmanClientSideSecurityMapOutput{})
}
