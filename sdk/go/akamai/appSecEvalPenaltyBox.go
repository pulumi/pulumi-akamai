// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Scopes**: Security policy
//
//	__ASE_Beta__.:
//
// Modifies the penalty box settings for a security policy in evaluation mode - evaluation penalty box.
// When the penalty box is enabled for a policy in evaluation mode, clients that trigger a WAF Deny action are placed in the “penalty box”.
// There, the action you select for the penalty box (either Alert or Deny) continues to apply to any requests from that client for the next 10 minutes.
//
// **Related API Endpoint**:  [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/eval_penalty-box](https://techdocs.akamai.com/application-security/reference/put-policy-eval_penalty-box)
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-akamai/sdk/v4/go/akamai"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
//				Name: pulumi.StringRef("Documentation"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = akamai.NewAppSecEvalPenaltyBox(ctx, "evalPenaltyBox", &akamai.AppSecEvalPenaltyBoxArgs{
//				ConfigId:             *pulumi.Int(configuration.ConfigId),
//				SecurityPolicyId:     pulumi.String("gms1_134637"),
//				PenaltyBoxProtection: pulumi.Bool(true),
//				PenaltyBoxAction:     pulumi.String("deny"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AppSecEvalPenaltyBox struct {
	pulumi.CustomResourceState

	// . Unique identifier of the security configuration associated with the evaluation penalty box settings being modified.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// . Action taken any time evaluation penalty box protection is triggered. Allowed values are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	PenaltyBoxAction pulumi.StringOutput `pulumi:"penaltyBoxAction"`
	// . Set to **true** to enable evaluation penalty box protection; set to **false** to disable evaluation penalty box protection.
	PenaltyBoxProtection pulumi.BoolOutput `pulumi:"penaltyBoxProtection"`
	// . Unique identifier of the security policy associated with the evaluation penalty box settings being modified.
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
}

// NewAppSecEvalPenaltyBox registers a new resource with the given unique name, arguments, and options.
func NewAppSecEvalPenaltyBox(ctx *pulumi.Context,
	name string, args *AppSecEvalPenaltyBoxArgs, opts ...pulumi.ResourceOption) (*AppSecEvalPenaltyBox, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.PenaltyBoxAction == nil {
		return nil, errors.New("invalid value for required argument 'PenaltyBoxAction'")
	}
	if args.PenaltyBoxProtection == nil {
		return nil, errors.New("invalid value for required argument 'PenaltyBoxProtection'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	var resource AppSecEvalPenaltyBox
	err := ctx.RegisterResource("akamai:index/appSecEvalPenaltyBox:AppSecEvalPenaltyBox", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecEvalPenaltyBox gets an existing AppSecEvalPenaltyBox resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecEvalPenaltyBox(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecEvalPenaltyBoxState, opts ...pulumi.ResourceOption) (*AppSecEvalPenaltyBox, error) {
	var resource AppSecEvalPenaltyBox
	err := ctx.ReadResource("akamai:index/appSecEvalPenaltyBox:AppSecEvalPenaltyBox", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecEvalPenaltyBox resources.
type appSecEvalPenaltyBoxState struct {
	// . Unique identifier of the security configuration associated with the evaluation penalty box settings being modified.
	ConfigId *int `pulumi:"configId"`
	// . Action taken any time evaluation penalty box protection is triggered. Allowed values are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	PenaltyBoxAction *string `pulumi:"penaltyBoxAction"`
	// . Set to **true** to enable evaluation penalty box protection; set to **false** to disable evaluation penalty box protection.
	PenaltyBoxProtection *bool `pulumi:"penaltyBoxProtection"`
	// . Unique identifier of the security policy associated with the evaluation penalty box settings being modified.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppSecEvalPenaltyBoxState struct {
	// . Unique identifier of the security configuration associated with the evaluation penalty box settings being modified.
	ConfigId pulumi.IntPtrInput
	// . Action taken any time evaluation penalty box protection is triggered. Allowed values are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	PenaltyBoxAction pulumi.StringPtrInput
	// . Set to **true** to enable evaluation penalty box protection; set to **false** to disable evaluation penalty box protection.
	PenaltyBoxProtection pulumi.BoolPtrInput
	// . Unique identifier of the security policy associated with the evaluation penalty box settings being modified.
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecEvalPenaltyBoxState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecEvalPenaltyBoxState)(nil)).Elem()
}

type appSecEvalPenaltyBoxArgs struct {
	// . Unique identifier of the security configuration associated with the evaluation penalty box settings being modified.
	ConfigId int `pulumi:"configId"`
	// . Action taken any time evaluation penalty box protection is triggered. Allowed values are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	PenaltyBoxAction string `pulumi:"penaltyBoxAction"`
	// . Set to **true** to enable evaluation penalty box protection; set to **false** to disable evaluation penalty box protection.
	PenaltyBoxProtection bool `pulumi:"penaltyBoxProtection"`
	// . Unique identifier of the security policy associated with the evaluation penalty box settings being modified.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppSecEvalPenaltyBox resource.
type AppSecEvalPenaltyBoxArgs struct {
	// . Unique identifier of the security configuration associated with the evaluation penalty box settings being modified.
	ConfigId pulumi.IntInput
	// . Action taken any time evaluation penalty box protection is triggered. Allowed values are:
	// - **alert**. Record the event.
	// - **deny**. Block the request.
	// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
	// - **none**. Take no action.
	PenaltyBoxAction pulumi.StringInput
	// . Set to **true** to enable evaluation penalty box protection; set to **false** to disable evaluation penalty box protection.
	PenaltyBoxProtection pulumi.BoolInput
	// . Unique identifier of the security policy associated with the evaluation penalty box settings being modified.
	SecurityPolicyId pulumi.StringInput
}

func (AppSecEvalPenaltyBoxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecEvalPenaltyBoxArgs)(nil)).Elem()
}

type AppSecEvalPenaltyBoxInput interface {
	pulumi.Input

	ToAppSecEvalPenaltyBoxOutput() AppSecEvalPenaltyBoxOutput
	ToAppSecEvalPenaltyBoxOutputWithContext(ctx context.Context) AppSecEvalPenaltyBoxOutput
}

func (*AppSecEvalPenaltyBox) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecEvalPenaltyBox)(nil)).Elem()
}

func (i *AppSecEvalPenaltyBox) ToAppSecEvalPenaltyBoxOutput() AppSecEvalPenaltyBoxOutput {
	return i.ToAppSecEvalPenaltyBoxOutputWithContext(context.Background())
}

func (i *AppSecEvalPenaltyBox) ToAppSecEvalPenaltyBoxOutputWithContext(ctx context.Context) AppSecEvalPenaltyBoxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalPenaltyBoxOutput)
}

// AppSecEvalPenaltyBoxArrayInput is an input type that accepts AppSecEvalPenaltyBoxArray and AppSecEvalPenaltyBoxArrayOutput values.
// You can construct a concrete instance of `AppSecEvalPenaltyBoxArrayInput` via:
//
//	AppSecEvalPenaltyBoxArray{ AppSecEvalPenaltyBoxArgs{...} }
type AppSecEvalPenaltyBoxArrayInput interface {
	pulumi.Input

	ToAppSecEvalPenaltyBoxArrayOutput() AppSecEvalPenaltyBoxArrayOutput
	ToAppSecEvalPenaltyBoxArrayOutputWithContext(context.Context) AppSecEvalPenaltyBoxArrayOutput
}

type AppSecEvalPenaltyBoxArray []AppSecEvalPenaltyBoxInput

func (AppSecEvalPenaltyBoxArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecEvalPenaltyBox)(nil)).Elem()
}

func (i AppSecEvalPenaltyBoxArray) ToAppSecEvalPenaltyBoxArrayOutput() AppSecEvalPenaltyBoxArrayOutput {
	return i.ToAppSecEvalPenaltyBoxArrayOutputWithContext(context.Background())
}

func (i AppSecEvalPenaltyBoxArray) ToAppSecEvalPenaltyBoxArrayOutputWithContext(ctx context.Context) AppSecEvalPenaltyBoxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalPenaltyBoxArrayOutput)
}

// AppSecEvalPenaltyBoxMapInput is an input type that accepts AppSecEvalPenaltyBoxMap and AppSecEvalPenaltyBoxMapOutput values.
// You can construct a concrete instance of `AppSecEvalPenaltyBoxMapInput` via:
//
//	AppSecEvalPenaltyBoxMap{ "key": AppSecEvalPenaltyBoxArgs{...} }
type AppSecEvalPenaltyBoxMapInput interface {
	pulumi.Input

	ToAppSecEvalPenaltyBoxMapOutput() AppSecEvalPenaltyBoxMapOutput
	ToAppSecEvalPenaltyBoxMapOutputWithContext(context.Context) AppSecEvalPenaltyBoxMapOutput
}

type AppSecEvalPenaltyBoxMap map[string]AppSecEvalPenaltyBoxInput

func (AppSecEvalPenaltyBoxMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecEvalPenaltyBox)(nil)).Elem()
}

func (i AppSecEvalPenaltyBoxMap) ToAppSecEvalPenaltyBoxMapOutput() AppSecEvalPenaltyBoxMapOutput {
	return i.ToAppSecEvalPenaltyBoxMapOutputWithContext(context.Background())
}

func (i AppSecEvalPenaltyBoxMap) ToAppSecEvalPenaltyBoxMapOutputWithContext(ctx context.Context) AppSecEvalPenaltyBoxMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalPenaltyBoxMapOutput)
}

type AppSecEvalPenaltyBoxOutput struct{ *pulumi.OutputState }

func (AppSecEvalPenaltyBoxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecEvalPenaltyBox)(nil)).Elem()
}

func (o AppSecEvalPenaltyBoxOutput) ToAppSecEvalPenaltyBoxOutput() AppSecEvalPenaltyBoxOutput {
	return o
}

func (o AppSecEvalPenaltyBoxOutput) ToAppSecEvalPenaltyBoxOutputWithContext(ctx context.Context) AppSecEvalPenaltyBoxOutput {
	return o
}

// . Unique identifier of the security configuration associated with the evaluation penalty box settings being modified.
func (o AppSecEvalPenaltyBoxOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v *AppSecEvalPenaltyBox) pulumi.IntOutput { return v.ConfigId }).(pulumi.IntOutput)
}

// . Action taken any time evaluation penalty box protection is triggered. Allowed values are:
// - **alert**. Record the event.
// - **deny**. Block the request.
// - **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.
// - **none**. Take no action.
func (o AppSecEvalPenaltyBoxOutput) PenaltyBoxAction() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecEvalPenaltyBox) pulumi.StringOutput { return v.PenaltyBoxAction }).(pulumi.StringOutput)
}

// . Set to **true** to enable evaluation penalty box protection; set to **false** to disable evaluation penalty box protection.
func (o AppSecEvalPenaltyBoxOutput) PenaltyBoxProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppSecEvalPenaltyBox) pulumi.BoolOutput { return v.PenaltyBoxProtection }).(pulumi.BoolOutput)
}

// . Unique identifier of the security policy associated with the evaluation penalty box settings being modified.
func (o AppSecEvalPenaltyBoxOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppSecEvalPenaltyBox) pulumi.StringOutput { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

type AppSecEvalPenaltyBoxArrayOutput struct{ *pulumi.OutputState }

func (AppSecEvalPenaltyBoxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppSecEvalPenaltyBox)(nil)).Elem()
}

func (o AppSecEvalPenaltyBoxArrayOutput) ToAppSecEvalPenaltyBoxArrayOutput() AppSecEvalPenaltyBoxArrayOutput {
	return o
}

func (o AppSecEvalPenaltyBoxArrayOutput) ToAppSecEvalPenaltyBoxArrayOutputWithContext(ctx context.Context) AppSecEvalPenaltyBoxArrayOutput {
	return o
}

func (o AppSecEvalPenaltyBoxArrayOutput) Index(i pulumi.IntInput) AppSecEvalPenaltyBoxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppSecEvalPenaltyBox {
		return vs[0].([]*AppSecEvalPenaltyBox)[vs[1].(int)]
	}).(AppSecEvalPenaltyBoxOutput)
}

type AppSecEvalPenaltyBoxMapOutput struct{ *pulumi.OutputState }

func (AppSecEvalPenaltyBoxMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppSecEvalPenaltyBox)(nil)).Elem()
}

func (o AppSecEvalPenaltyBoxMapOutput) ToAppSecEvalPenaltyBoxMapOutput() AppSecEvalPenaltyBoxMapOutput {
	return o
}

func (o AppSecEvalPenaltyBoxMapOutput) ToAppSecEvalPenaltyBoxMapOutputWithContext(ctx context.Context) AppSecEvalPenaltyBoxMapOutput {
	return o
}

func (o AppSecEvalPenaltyBoxMapOutput) MapIndex(k pulumi.StringInput) AppSecEvalPenaltyBoxOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppSecEvalPenaltyBox {
		return vs[0].(map[string]*AppSecEvalPenaltyBox)[vs[1].(string)]
	}).(AppSecEvalPenaltyBoxOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecEvalPenaltyBoxInput)(nil)).Elem(), &AppSecEvalPenaltyBox{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecEvalPenaltyBoxArrayInput)(nil)).Elem(), AppSecEvalPenaltyBoxArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecEvalPenaltyBoxMapInput)(nil)).Elem(), AppSecEvalPenaltyBoxMap{})
	pulumi.RegisterOutputType(AppSecEvalPenaltyBoxOutput{})
	pulumi.RegisterOutputType(AppSecEvalPenaltyBoxArrayOutput{})
	pulumi.RegisterOutputType(AppSecEvalPenaltyBoxMapOutput{})
}
