{
    "name": "akamai",
    "displayName": "Akamai",
    "description": "A Pulumi package for creating and managing akamai cloud resources.",
    "keywords": [
        "pulumi",
        "akamai"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`akamai` Terraform Provider](https://github.com/akamai/terraform-provider-akamai).",
    "repository": "https://github.com/pulumi/pulumi-akamai",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "namespaces": {
                "akamai": "Akamai"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-akamai/sdk/v10/go/akamai",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing akamai cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/akamai/terraform-provider-akamai)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-akamai` repo](https://github.com/pulumi/pulumi-akamai/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-akamai` repo](https://github.com/akamai/terraform-provider-akamai/issues).",
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/akamai/terraform-provider-akamai)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-akamai` repo](https://github.com/pulumi/pulumi-akamai/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-akamai` repo](https://github.com/akamai/terraform-provider-akamai/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:config/config:config",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration"
            },
            "edgerc": {
                "type": "string"
            },
            "requestLimit": {
                "type": "integer",
                "description": "The maximum number of API requests to be made per second (0 for no limit)"
            },
            "retryDisabled": {
                "type": "boolean",
                "description": "Should the retries of API requests be disabled, default false"
            },
            "retryMax": {
                "type": "integer",
                "description": "The maximum number retires of API requests, default 10"
            },
            "retryWaitMax": {
                "type": "integer",
                "description": "The maximum wait time in seconds between API requests retries, default is 30 sec"
            },
            "retryWaitMin": {
                "type": "integer",
                "description": "The minimum wait time in seconds between API requests retries, default is 1 sec"
            }
        }
    },
    "types": {
        "akamai:config/config:config": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientSecret",
                "clientToken",
                "host"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/AppSecSiemSettingsExceptions:AppSecSiemSettingsExceptions": {
            "properties": {
                "apiRequestConstraints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include api request constraints events in SIEM\n"
                },
                "aprProtections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include apr protection events in SIEM\n"
                },
                "botManagements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include bot management events in SIEM\n"
                },
                "clientReps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include client reputation events in SIEM\n"
                },
                "customRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include custom rules events in SIEM\n"
                },
                "ipGeos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include ip geo events in SIEM\n"
                },
                "malwareProtections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include malware protection events in SIEM\n"
                },
                "rates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include rate events in SIEM\n"
                },
                "slowPosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include slow post events in SIEM\n"
                },
                "urlProtections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include url protection events in SIEM\n"
                },
                "wafs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Whether there should be an exception to include waf events in SIEM\n"
                }
            },
            "type": "object"
        },
        "akamai:index/ClientlistListItem:ClientlistListItem": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the item.\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "The item expiration date.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The item tags.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the item. (i.e. IP address, AS Number, GEO, ...etc)\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "akamai:index/CloudAccessKeyCredentialsA:CloudAccessKeyCredentialsA": {
            "properties": {
                "cloudAccessKeyId": {
                    "type": "string",
                    "description": "Access key id from cloud provider which is used to sign API requests\n"
                },
                "cloudSecretAccessKey": {
                    "type": "string",
                    "description": "Cloud Access secret from cloud provider which is used to sign API requests\n",
                    "secret": true
                },
                "primaryKey": {
                    "type": "boolean",
                    "description": "Boolean value which helps to define if credentials should be assigned to property\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Numeric access key version associated with specific pair of cloud access credentials used to sign API requests\n"
                },
                "versionGuid": {
                    "type": "string",
                    "description": "The unique identifier assigned to specific access key version\n"
                }
            },
            "type": "object",
            "required": [
                "cloudAccessKeyId",
                "cloudSecretAccessKey",
                "primaryKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cloudAccessKeyId",
                        "cloudSecretAccessKey",
                        "primaryKey",
                        "version",
                        "versionGuid"
                    ]
                }
            }
        },
        "akamai:index/CloudAccessKeyCredentialsB:CloudAccessKeyCredentialsB": {
            "properties": {
                "cloudAccessKeyId": {
                    "type": "string",
                    "description": "Access key id from cloud provider which is used to sign API requests\n"
                },
                "cloudSecretAccessKey": {
                    "type": "string",
                    "description": "Cloud Access secret from cloud provider which is used to sign API requests\n",
                    "secret": true
                },
                "primaryKey": {
                    "type": "boolean",
                    "description": "Boolean value which helps to define if credentials should be assigned to property\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Numeric access key version associated with specific pair of cloud access credentials used to sign API requests\n"
                },
                "versionGuid": {
                    "type": "string",
                    "description": "The unique identifier assigned to specific access key version\n"
                }
            },
            "type": "object",
            "required": [
                "cloudAccessKeyId",
                "cloudSecretAccessKey",
                "primaryKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cloudAccessKeyId",
                        "cloudSecretAccessKey",
                        "primaryKey",
                        "version",
                        "versionGuid"
                    ]
                }
            }
        },
        "akamai:index/CloudAccessKeyNetworkConfiguration:CloudAccessKeyNetworkConfiguration": {
            "properties": {
                "additionalCdn": {
                    "type": "string",
                    "description": "Additional type of the deployment network that the access key will be deployed to.\n"
                },
                "securityNetwork": {
                    "type": "string",
                    "description": "The API deploys the access key to this secure network\n"
                }
            },
            "type": "object",
            "required": [
                "securityNetwork"
            ]
        },
        "akamai:index/CloudAccessKeyTimeouts:CloudAccessKeyTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "Optional configurable resource create timeout. By default it's 60 minutes with 1 minute polling interval.\n"
                },
                "delete": {
                    "type": "string",
                    "description": "Optional configurable resource delete timeout. By default it's 60 minutes with 1 minute polling interval.\n"
                },
                "update": {
                    "type": "string",
                    "description": "Optional configurable resource update timeout. By default it's 60 minutes with 1 minute polling interval.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/CloudletsApplicationLoadBalancerActivationTimeouts:CloudletsApplicationLoadBalancerActivationTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/CloudletsApplicationLoadBalancerDataCenter:CloudletsApplicationLoadBalancerDataCenter": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city in which the data center is located.\n"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean",
                    "description": "Describes if cloud server host header is overridden\n"
                },
                "cloudService": {
                    "type": "boolean",
                    "description": "Describes if this datacenter is a cloud service\n"
                },
                "continent": {
                    "type": "string",
                    "description": "The continent on which the data center is located\n"
                },
                "country": {
                    "type": "string",
                    "description": "The country in which the data center is located\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "This should match the 'hostname' value defined for this datacenter in Property Manager\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "The latitude value for the data center. This member supports six decimal places of precision.\n"
                },
                "livenessHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings that represent the origin servers used to poll the data centers in an application load balancer configuration. These servers support basic HTTP polling.\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "The longitude value for the data center. This member supports six decimal places of precision.\n"
                },
                "originId": {
                    "type": "string",
                    "description": "The ID of an origin that represents the data center. The conditional origin, which is defined in the Property Manager API, must have an originType of either CUSTOMER or NET_STORAGE\n"
                },
                "percent": {
                    "type": "number",
                    "description": "The percent of traffic that is sent to the data center. The total for all data centers must equal 100%.\n"
                },
                "stateOrProvince": {
                    "type": "string",
                    "description": "The state, province, or region where the data center is located\n"
                }
            },
            "type": "object",
            "required": [
                "continent",
                "country",
                "latitude",
                "longitude",
                "originId",
                "percent"
            ]
        },
        "akamai:index/CloudletsApplicationLoadBalancerLivenessSettings:CloudletsApplicationLoadBalancerLivenessSettings": {
            "properties": {
                "additionalHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Maps additional case-insensitive HTTP header names included to the liveness testing requests\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The Host header for the liveness HTTP request\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Describes how often the liveness test will be performed. Optional defaults to 60 seconds, minimum is 10 seconds.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the test object used for liveness testing. The function of the test object is to help determine whether the data center is functioning.\n"
                },
                "peerCertificateVerification": {
                    "type": "boolean",
                    "description": "Describes whether or not to validate the origin certificate for an HTTPS request\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port for the test object. The default port is 80, which is standard for HTTP. Enter 443 if you are using HTTPS.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol or scheme for the database, either HTTP or HTTPS.\n"
                },
                "requestString": {
                    "type": "string",
                    "description": "The request which will be used for TCP(S) tests\n"
                },
                "responseString": {
                    "type": "string"
                },
                "status3xxFailure": {
                    "type": "boolean",
                    "description": "Set to true to mark the liveness test as failed when the request returns a 3xx (redirection) status code.\n"
                },
                "status4xxFailure": {
                    "type": "boolean",
                    "description": "Set to true to mark the liveness test as failed when the request returns a 4xx (client error) status code.\n"
                },
                "status5xxFailure": {
                    "type": "boolean",
                    "description": "Set to true to mark the liveness test as failed when the request returns a 5xx (server error) status code.\n"
                },
                "timeout": {
                    "type": "number",
                    "description": "The number of seconds the system waits before failing the liveness test. The default is 25 seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "path",
                "port",
                "protocol"
            ]
        },
        "akamai:index/CloudletsPolicyActivationTimeouts:CloudletsPolicyActivationTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/CloudletsPolicyTimeouts:CloudletsPolicyTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/CloudwrapperActivationTimeouts:CloudwrapperActivationTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "Optional configurable activation timeout to be used on resource create. By default it's 4h with 1m pooling interval.\n"
                },
                "update": {
                    "type": "string",
                    "description": "Optional configurable activation timeout to be used on resource update. By default it's 4h with 1m pooling interval.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/CloudwrapperConfigurationLocation:CloudwrapperConfigurationLocation": {
            "properties": {
                "capacity": {
                    "$ref": "#/types/akamai:index/CloudwrapperConfigurationLocationCapacity:CloudwrapperConfigurationLocationCapacity",
                    "description": "The capacity assigned to this configuration's location\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Additional comments provided by the user.\n"
                },
                "trafficTypeId": {
                    "type": "integer",
                    "description": "Unique identifier for the location and traffic type combination\n"
                }
            },
            "type": "object",
            "required": [
                "comments",
                "trafficTypeId"
            ]
        },
        "akamai:index/CloudwrapperConfigurationLocationCapacity:CloudwrapperConfigurationLocationCapacity": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Unit of capacity. Can be either 'GB' or 'TB'.\n"
                },
                "value": {
                    "type": "integer",
                    "description": "Value of capacity.\n"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "akamai:index/CloudwrapperConfigurationTimeouts:CloudwrapperConfigurationTimeouts": {
            "properties": {
                "delete": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/CpCodeTimeouts:CpCodeTimeouts": {
            "properties": {
                "update": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of residence of the contact\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of the contact\n"
                },
                "email": {
                    "type": "string",
                    "description": "E-mail address of the contact\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "First name of the contact\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the contact\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Organization where contact is hired\n"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number of the contact\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of the contact\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the contact\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the the contact\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "phone"
            ]
        },
        "akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City where organization is located\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "The code of the country where organization is located\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Name of organization used in all legal documents\n"
                },
                "organizationalUnit": {
                    "type": "string",
                    "description": "Organizational unit of organization\n"
                },
                "preferredTrustChain": {
                    "type": "string",
                    "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, the preferred trust chain will be included by CPS with the leaf certificate in the TLS handshake. If the field does not have a value, whichever trust chain Akamai chooses will be used by default\n"
                },
                "state": {
                    "type": "string",
                    "description": "State or province of organization location\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "countryCode",
                "organization"
            ]
        },
        "akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Domain for which the challenges were completed\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "The domain name where Akamai publishes the response body to validate\n"
                },
                "responseBody": {
                    "type": "string",
                    "description": "The unique content of the challenge\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domain",
                        "fullPath",
                        "responseBody"
                    ]
                }
            }
        },
        "akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Domain for which the challenges were completed\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "The URL where Akamai publishes the response body to validate\n"
                },
                "responseBody": {
                    "type": "string",
                    "description": "The unique content of the challenge\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domain",
                        "fullPath",
                        "responseBody"
                    ]
                }
            }
        },
        "akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration": {
            "properties": {
                "clientMutualAuthentication": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication:CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication",
                    "description": "The trust chain configuration used for client mutual authentication\n"
                },
                "cloneDnsNames": {
                    "type": "boolean",
                    "description": "Enable CPS to direct traffic using all the SANs listed in the SANs parameter when enrollment is created. Default is false\n"
                },
                "disallowedTlsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "TLS versions which are disallowed\n"
                },
                "geography": {
                    "type": "string",
                    "description": "Geography type used for enrollment\n"
                },
                "mustHaveCiphers": {
                    "type": "string",
                    "description": "Mandatory Ciphers which are included for enrollment. Default is 'ak-akamai-2020q1'\n"
                },
                "ocspStapling": {
                    "type": "string",
                    "description": "Enable OCSP stapling. Default is 'on'\n"
                },
                "preferredCiphers": {
                    "type": "string",
                    "description": "Preferred Ciphers which are included for enrollment. Default is 'ak-akamai-2020q1'\n"
                },
                "quicEnabled": {
                    "type": "boolean",
                    "description": "Enable QUIC protocol. Default is false\n"
                }
            },
            "type": "object",
            "required": [
                "geography"
            ]
        },
        "akamai:index/CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication:CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication": {
            "properties": {
                "ocspEnabled": {
                    "type": "boolean",
                    "description": "Enable OCSP stapling\n"
                },
                "sendCaListToClient": {
                    "type": "boolean",
                    "description": "Enable the server to send the certificate authority (CA) list to the client\n"
                },
                "setId": {
                    "type": "string",
                    "description": "The identifier of the set of trust chains, created in the Trust Chain Manager\n"
                }
            },
            "type": "object"
        },
        "akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of organization\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of organization\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of organization\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of organization\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of organization\n"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number of organization\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of organization\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of organization\n"
                }
            },
            "type": "object",
            "required": [
                "addressLineOne",
                "city",
                "countryCode",
                "name",
                "phone",
                "postalCode",
                "region"
            ]
        },
        "akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of residence of the contact\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of the contact\n"
                },
                "email": {
                    "type": "string",
                    "description": "E-mail address of the contact\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "First name of the contact\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the contact\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Organization where contact is hired\n"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number of the contact\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of the contact\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the contact\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the the contact\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "phone"
            ]
        },
        "akamai:index/CpsDvEnrollmentTimeouts:CpsDvEnrollmentTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/CpsDvValidationTimeouts:CpsDvValidationTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/CpsThirdPartyEnrollmentAdminContact:CpsThirdPartyEnrollmentAdminContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of residence of the contact\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of the contact\n"
                },
                "email": {
                    "type": "string",
                    "description": "E-mail address of the contact\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "First name of the contact\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the contact\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Organization where contact is hired\n"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number of the contact\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of the contact\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the contact\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the the contact\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "phone"
            ]
        },
        "akamai:index/CpsThirdPartyEnrollmentCsr:CpsThirdPartyEnrollmentCsr": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City where organization is located\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "The code of the country where organization is located\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Name of organization used in all legal documents\n"
                },
                "organizationalUnit": {
                    "type": "string",
                    "description": "Organizational unit of organization\n"
                },
                "preferredTrustChain": {
                    "type": "string",
                    "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, the preferred trust chain will be included by CPS with the leaf certificate in the TLS handshake. If the field does not have a value, whichever trust chain Akamai chooses will be used by default\n"
                },
                "state": {
                    "type": "string",
                    "description": "State or province of organization location\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "countryCode",
                "organization"
            ]
        },
        "akamai:index/CpsThirdPartyEnrollmentNetworkConfiguration:CpsThirdPartyEnrollmentNetworkConfiguration": {
            "properties": {
                "clientMutualAuthentication": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentNetworkConfigurationClientMutualAuthentication:CpsThirdPartyEnrollmentNetworkConfigurationClientMutualAuthentication",
                    "description": "The trust chain configuration used for client mutual authentication\n"
                },
                "cloneDnsNames": {
                    "type": "boolean",
                    "description": "Enable CPS to direct traffic using all the SANs listed in the SANs parameter when enrollment is created. Default is false\n"
                },
                "disallowedTlsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "TLS versions which are disallowed\n"
                },
                "geography": {
                    "type": "string",
                    "description": "Geography type used for enrollment\n"
                },
                "mustHaveCiphers": {
                    "type": "string",
                    "description": "Mandatory Ciphers which are included for enrollment. Default is 'ak-akamai-2020q1'\n"
                },
                "ocspStapling": {
                    "type": "string",
                    "description": "Enable OCSP stapling. Default is 'on'\n"
                },
                "preferredCiphers": {
                    "type": "string",
                    "description": "Preferred Ciphers which are included for enrollment. Default is 'ak-akamai-2020q1'\n"
                },
                "quicEnabled": {
                    "type": "boolean",
                    "description": "Enable QUIC protocol. Default is false\n"
                }
            },
            "type": "object",
            "required": [
                "geography"
            ]
        },
        "akamai:index/CpsThirdPartyEnrollmentNetworkConfigurationClientMutualAuthentication:CpsThirdPartyEnrollmentNetworkConfigurationClientMutualAuthentication": {
            "properties": {
                "ocspEnabled": {
                    "type": "boolean",
                    "description": "Enable OCSP stapling\n"
                },
                "sendCaListToClient": {
                    "type": "boolean",
                    "description": "Enable the server to send the certificate authority (CA) list to the client\n"
                },
                "setId": {
                    "type": "string",
                    "description": "The identifier of the set of trust chains, created in the Trust Chain Manager\n"
                }
            },
            "type": "object"
        },
        "akamai:index/CpsThirdPartyEnrollmentOrganization:CpsThirdPartyEnrollmentOrganization": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of organization\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of organization\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of organization\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of organization\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of organization\n"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number of organization\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of organization\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of organization\n"
                }
            },
            "type": "object",
            "required": [
                "addressLineOne",
                "city",
                "countryCode",
                "name",
                "phone",
                "postalCode",
                "region"
            ]
        },
        "akamai:index/CpsThirdPartyEnrollmentTechContact:CpsThirdPartyEnrollmentTechContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of residence of the contact\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of the contact\n"
                },
                "email": {
                    "type": "string",
                    "description": "E-mail address of the contact\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "First name of the contact\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the contact\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Organization where contact is hired\n"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number of the contact\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of the contact\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the contact\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the the contact\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "phone"
            ]
        },
        "akamai:index/CpsThirdPartyEnrollmentTimeouts:CpsThirdPartyEnrollmentTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/CpsUploadCertificateTimeouts:CpsUploadCertificateTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/DatastreamAzureConnector:DatastreamAzureConnector": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Access keys associated with Azure Storage account\n",
                    "secret": true
                },
                "accountName": {
                    "type": "string",
                    "description": "Specifies the Azure Storage account name\n"
                },
                "compressLogs": {
                    "type": "boolean",
                    "description": "Indicates whether the logs should be compressed\n"
                },
                "containerName": {
                    "type": "string",
                    "description": "Specifies the Azure Storage container name\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the folder within Azure Storage container where logs will be stored\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "accountName",
                "containerName",
                "displayName",
                "path"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKey",
                        "accountName",
                        "compressLogs",
                        "containerName",
                        "displayName",
                        "path"
                    ]
                }
            }
        },
        "akamai:index/DatastreamDatadogConnector:DatastreamDatadogConnector": {
            "properties": {
                "authToken": {
                    "type": "string",
                    "description": "The API key associated with Datadog account\n",
                    "secret": true
                },
                "compressLogs": {
                    "type": "boolean",
                    "description": "Indicates whether the logs should be compressed\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The Datadog endpoint where logs will be stored\n"
                },
                "service": {
                    "type": "string",
                    "description": "The service of the Datadog connector\n"
                },
                "source": {
                    "type": "string",
                    "description": "The source of the Datadog connector\n"
                },
                "tags": {
                    "type": "string",
                    "description": "The tags of the Datadog connector\n"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "displayName",
                "endpoint"
            ]
        },
        "akamai:index/DatastreamDeliveryConfiguration:DatastreamDeliveryConfiguration": {
            "properties": {
                "fieldDelimiter": {
                    "type": "string",
                    "description": "A delimiter that you use to separate data set fields in log lines\n"
                },
                "format": {
                    "type": "string",
                    "description": "The format in which logs will be received\n"
                },
                "frequency": {
                    "$ref": "#/types/akamai:index/DatastreamDeliveryConfigurationFrequency:DatastreamDeliveryConfigurationFrequency",
                    "description": "The frequency of collecting logs from each uploader and sending these logs to a destination\n"
                },
                "uploadFilePrefix": {
                    "type": "string",
                    "description": "The prefix of the log file that will be send to a destination\n"
                },
                "uploadFileSuffix": {
                    "type": "string",
                    "description": "The suffix of the log file that will be send to a destination\n"
                }
            },
            "type": "object",
            "required": [
                "format",
                "frequency"
            ]
        },
        "akamai:index/DatastreamDeliveryConfigurationFrequency:DatastreamDeliveryConfigurationFrequency": {
            "properties": {
                "intervalInSecs": {
                    "type": "integer",
                    "description": "The time in seconds after which the system bundles log lines into a file and sends it to a destination\n"
                }
            },
            "type": "object",
            "required": [
                "intervalInSecs"
            ]
        },
        "akamai:index/DatastreamElasticsearchConnector:DatastreamElasticsearchConnector": {
            "properties": {
                "caCert": {
                    "type": "string",
                    "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification.\n",
                    "secret": true
                },
                "clientCert": {
                    "type": "string",
                    "description": "The PEM-formatted digital certificate you want to authenticate requests to your destination with. If you want to use mutual authentication, you need to provide both the client certificate and the client key.\n",
                    "secret": true
                },
                "clientKey": {
                    "type": "string",
                    "description": "The private key in the non-encrypted PKCS8 format you want to use to authenticate with the backend server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.\n",
                    "secret": true
                },
                "contentType": {
                    "type": "string",
                    "description": "The type of the resource passed in the request's custom header. For details, see Additional options in the DataStream user guide.\n"
                },
                "customHeaderName": {
                    "type": "string",
                    "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see Additional options in the DataStream user guide.\n"
                },
                "customHeaderValue": {
                    "type": "string",
                    "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see Additional options in the DataStream user guide.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The Elasticsearch bulk endpoint URL in the https://hostname.elastic-cloud.com:9243/_bulk/ format. Set indexName in the appropriate field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See Stream logs to Elasticsearch.\n"
                },
                "indexName": {
                    "type": "string",
                    "description": "The index name of the Elastic cloud where you want to store log files.\n",
                    "secret": true
                },
                "mTls": {
                    "type": "boolean",
                    "description": "Indicates whether mTLS is enabled or not.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The Elasticsearch basic access authentication password.\n",
                    "secret": true
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The Elasticsearch basic access authentication username.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "endpoint",
                "indexName",
                "password",
                "userName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "endpoint",
                        "indexName",
                        "mTls",
                        "password",
                        "userName"
                    ]
                }
            }
        },
        "akamai:index/DatastreamGcsConnector:DatastreamGcsConnector": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "The name of the storage bucket created in Google Cloud account\n"
                },
                "compressLogs": {
                    "type": "boolean",
                    "description": "Indicates whether the logs should be compressed\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the folder within Google Cloud bucket where logs will be stored\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The contents of the JSON private key generated and downloaded in Google Cloud Storage account\n",
                    "secret": true
                },
                "projectId": {
                    "type": "string",
                    "description": "The unique ID of Google Cloud project\n"
                },
                "serviceAccountName": {
                    "type": "string",
                    "description": "The name of the service account with the storage.object.create permission or Storage Object Creator role\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "displayName",
                "privateKey",
                "projectId",
                "serviceAccountName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bucket",
                        "compressLogs",
                        "displayName",
                        "privateKey",
                        "projectId",
                        "serviceAccountName"
                    ]
                }
            }
        },
        "akamai:index/DatastreamHttpsConnector:DatastreamHttpsConnector": {
            "properties": {
                "authenticationType": {
                    "type": "string",
                    "description": "Either NONE for no authentication, or BASIC for username and password authentication\n"
                },
                "caCert": {
                    "type": "string",
                    "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification.\n",
                    "secret": true
                },
                "clientCert": {
                    "type": "string",
                    "description": "The digital certificate in the PEM format you want to use to authenticate requests to your destination. If you want to use mutual authentication, you need to provide both the client certificate and the client key (in the PEM format).\n",
                    "secret": true
                },
                "clientKey": {
                    "type": "string",
                    "description": "The private key in the non-encrypted PKCS8 format you want to use to authenticate with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.\n",
                    "secret": true
                },
                "compressLogs": {
                    "type": "boolean",
                    "description": "Indicates whether the logs should be compressed\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "Content type to pass in the log file header\n"
                },
                "customHeaderName": {
                    "type": "string",
                    "description": "The name of custom header passed with the request to the destination\n"
                },
                "customHeaderValue": {
                    "type": "string",
                    "description": "The custom header's contents passed with the request to the destination\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "URL where logs will be stored\n"
                },
                "mTls": {
                    "type": "boolean",
                    "description": "Indicates whether mTLS is enabled or not.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password set for custom HTTPS endpoint for authentication\n",
                    "secret": true
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Username used for authentication\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "authenticationType",
                "displayName",
                "endpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authenticationType",
                        "displayName",
                        "endpoint",
                        "mTls"
                    ]
                }
            }
        },
        "akamai:index/DatastreamLogglyConnector:DatastreamLogglyConnector": {
            "properties": {
                "authToken": {
                    "type": "string",
                    "description": "The unique HTTP code for your Loggly bulk endpoint.\n",
                    "secret": true
                },
                "contentType": {
                    "type": "string",
                    "description": "The type of the resource passed in the request's custom header. For details, see Additional options in the DataStream user guide.\n"
                },
                "customHeaderName": {
                    "type": "string",
                    "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see Additional options in the DataStream user guide.\n"
                },
                "customHeaderValue": {
                    "type": "string",
                    "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see Additional options in the DataStream user guide.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The Loggly bulk endpoint URL in the https://hostname.loggly.com/bulk/ format. Set the endpoint code in the authToken field instead of providing it in the URL. You can use Akamaized property hostnames as endpoint URLs. See Stream logs to Loggly.\n"
                },
                "tags": {
                    "type": "string",
                    "description": "The tags you can use to segment and filter log events in Loggly. See Tags in the Loggly documentation.\n"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "displayName",
                "endpoint"
            ]
        },
        "akamai:index/DatastreamNewRelicConnector:DatastreamNewRelicConnector": {
            "properties": {
                "authToken": {
                    "type": "string",
                    "description": "Your Log API token for your account in New Relic.\n",
                    "secret": true
                },
                "contentType": {
                    "type": "string",
                    "description": "The type of the resource passed in the request's custom header. For details, see Additional options in the DataStream user guide.\n"
                },
                "customHeaderName": {
                    "type": "string",
                    "description": "A human-readable name for the request's custom header, containing only alphanumeric, dash, and underscore characters. For details, see Additional options in the DataStream user guide.\n"
                },
                "customHeaderValue": {
                    "type": "string",
                    "description": "The custom header's contents passed with the request that contains information about the client connection. For details, see Additional options in the DataStream user guide.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "A New Relic endpoint URL you want to send your logs to. The endpoint URL should follow the https://\u003cnewrelic.com\u003e/log/v1/ format format. See Introduction to the Log API https://docs.newrelic.com/docs/logs/log-api/introduction-log-api/ if you want to retrieve your New Relic endpoint URL.\n"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "displayName",
                "endpoint"
            ]
        },
        "akamai:index/DatastreamOracleConnector:DatastreamOracleConnector": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key identifier used to authenticate requests to the Oracle Cloud account\n",
                    "secret": true
                },
                "bucket": {
                    "type": "string",
                    "description": "The name of the Oracle Cloud Storage bucket\n"
                },
                "compressLogs": {
                    "type": "boolean",
                    "description": "Indicates whether the logs should be compressed\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace of Oracle Cloud Storage account\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the folder within your Oracle Cloud Storage bucket where logs will be stored\n"
                },
                "region": {
                    "type": "string",
                    "description": "The Oracle Cloud Storage region where bucket resides\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "The secret access key identifier used to authenticate requests to the Oracle Cloud account\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucket",
                "displayName",
                "namespace",
                "path",
                "region",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKey",
                        "bucket",
                        "compressLogs",
                        "displayName",
                        "namespace",
                        "path",
                        "region",
                        "secretAccessKey"
                    ]
                }
            }
        },
        "akamai:index/DatastreamS3Connector:DatastreamS3Connector": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "The access key identifier used to authenticate requests to the Amazon S3 account\n",
                    "secret": true
                },
                "bucket": {
                    "type": "string",
                    "description": "The name of the Amazon S3 bucket\n"
                },
                "compressLogs": {
                    "type": "boolean",
                    "description": "Indicates whether the logs should be compressed\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the folder within Amazon S3 bucket where logs will be stored\n"
                },
                "region": {
                    "type": "string",
                    "description": "The AWS region where Amazon S3 bucket resides\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "The secret access key identifier used to authenticate requests to the Amazon S3 account\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bucket",
                "displayName",
                "path",
                "region",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessKey",
                        "bucket",
                        "compressLogs",
                        "displayName",
                        "path",
                        "region",
                        "secretAccessKey"
                    ]
                }
            }
        },
        "akamai:index/DatastreamSplunkConnector:DatastreamSplunkConnector": {
            "properties": {
                "caCert": {
                    "type": "string",
                    "description": "The certification authority (CA) certificate used to verify the origin server's certificate. If the certificate is not signed by a well-known certification authority, enter the CA certificate in the PEM format for verification.\n",
                    "secret": true
                },
                "clientCert": {
                    "type": "string",
                    "description": "The digital certificate in the PEM format you want to use to authenticate requests to your destination. If you want to use mutual authentication, you need to provide both the client certificate and the client key (in the PEM format).\n",
                    "secret": true
                },
                "clientKey": {
                    "type": "string",
                    "description": "The private key in the non-encrypted PKCS8 format you want to use to authenticate with the back-end server. If you want to use mutual authentication, you need to provide both the client certificate and the client key.\n",
                    "secret": true
                },
                "compressLogs": {
                    "type": "boolean",
                    "description": "Indicates whether the logs should be compressed\n"
                },
                "customHeaderName": {
                    "type": "string",
                    "description": "The name of custom header passed with the request to the destination\n"
                },
                "customHeaderValue": {
                    "type": "string",
                    "description": "The custom header's contents passed with the request to the destination\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The raw event Splunk URL where logs will be stored\n"
                },
                "eventCollectorToken": {
                    "type": "string",
                    "description": "The Event Collector token associated with Splunk account\n",
                    "secret": true
                },
                "mTls": {
                    "type": "boolean",
                    "description": "Indicates whether mTLS is enabled or not.\n"
                },
                "tlsHostname": {
                    "type": "string",
                    "description": "The hostname that verifies the server's certificate and matches the Subject Alternative Names (SANs) in the certificate. If not provided, DataStream fetches the hostname from the endpoint URL.\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "endpoint",
                "eventCollectorToken"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "endpoint",
                        "eventCollectorToken",
                        "mTls"
                    ]
                }
            }
        },
        "akamai:index/DatastreamSumologicConnector:DatastreamSumologicConnector": {
            "properties": {
                "collectorCode": {
                    "type": "string",
                    "description": "The unique HTTP collector code of Sumo Logic endpoint\n",
                    "secret": true
                },
                "compressLogs": {
                    "type": "boolean",
                    "description": "Indicates whether the logs should be compressed\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "Content type to pass in the log file header\n"
                },
                "customHeaderName": {
                    "type": "string",
                    "description": "The name of custom header passed with the request to the destination\n"
                },
                "customHeaderValue": {
                    "type": "string",
                    "description": "The custom header's contents passed with the request to the destination\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the connector\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The Sumo Logic collection endpoint where logs will be stored\n"
                }
            },
            "type": "object",
            "required": [
                "collectorCode",
                "displayName",
                "endpoint"
            ]
        },
        "akamai:index/DnsZoneOutboundZoneTransfer:DnsZoneOutboundZoneTransfer": {
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The access control list, defined as IPv4 and IPv6 CIDR blocks.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables outbound zone transfer.\n"
                },
                "notifyTargets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Customer secondary nameservers to notify, if NOTIFY requests are desired. Up to 64 IPv4 or IPv6 addresses. If no targets are specified, you can manually request zone transfer updates as needed.\n"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:index/DnsZoneOutboundZoneTransferTsigKey:DnsZoneOutboundZoneTransferTsigKey",
                    "description": "The TSIG key used for outbound zone transfers.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/DnsZoneOutboundZoneTransferTsigKey:DnsZoneOutboundZoneTransferTsigKey": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The algorithm used to encode the TSIG key's secret data. Possible values are: hmac-md5, hmac-sha1, hmac-sha224, hmac-sha256, hmac-sha384, hmac-sha512, or HMAC-MD5.SIG-ALG.REG.INT.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The zone name.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "A Base64-encoded string of data. When decoded, it needs to contain the correct number of bits for the chosen algorithm. If the input isn't correctly padded, the server applies the padding.\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "name",
                "secret"
            ]
        },
        "akamai:index/DnsZoneTsigKey:DnsZoneTsigKey": {
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "name",
                "secret"
            ]
        },
        "akamai:index/EdgeHostNameTimeouts:EdgeHostNameTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/EdgeWorkerTimeouts:EdgeWorkerTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/EdgeWorkersActivationTimeouts:EdgeWorkersActivationTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                },
                "delete": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/EdgekvGroupItemsTimeouts:EdgekvGroupItemsTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/GtmAsmapAssignment:GtmAsmapAssignment": {
            "properties": {
                "asNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "datacenterId": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "asNumbers",
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment": {
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datacenterId": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject": {
            "properties": {
                "loadObject": {
                    "type": "string"
                },
                "loadObjectPort": {
                    "type": "integer"
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmGeomapAssignment:GtmGeomapAssignment": {
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datacenterId": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest": {
            "properties": {
                "alternateCaCertificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "answersRequired": {
                    "type": "boolean"
                },
                "disableNonstandardPortWarning": {
                    "type": "boolean"
                },
                "disabled": {
                    "type": "boolean"
                },
                "errorPenalty": {
                    "type": "number"
                },
                "httpError3xx": {
                    "type": "boolean"
                },
                "httpError4xx": {
                    "type": "boolean"
                },
                "httpError5xx": {
                    "type": "boolean"
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader"
                    }
                },
                "httpMethod": {
                    "type": "string"
                },
                "httpRequestBody": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "peerCertificateVerification": {
                    "type": "boolean"
                },
                "pre2023SecurityPosture": {
                    "type": "boolean",
                    "description": "Whether to enable backwards compatibility for liveness endpoints that use older TLS protocols\n"
                },
                "recursionRequested": {
                    "type": "boolean"
                },
                "requestString": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "responseString": {
                    "type": "string"
                },
                "sslClientCertificate": {
                    "type": "string"
                },
                "sslClientPrivateKey": {
                    "type": "string"
                },
                "testInterval": {
                    "type": "integer"
                },
                "testObject": {
                    "type": "string"
                },
                "testObjectPassword": {
                    "type": "string"
                },
                "testObjectPort": {
                    "type": "integer"
                },
                "testObjectProtocol": {
                    "type": "string"
                },
                "testObjectUsername": {
                    "type": "string"
                },
                "testTimeout": {
                    "type": "number"
                },
                "timeoutPenalty": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "name",
                "testInterval",
                "testObjectProtocol",
                "testTimeout"
            ]
        },
        "akamai:index/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet": {
            "properties": {
                "rdatas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget": {
            "properties": {
                "datacenterId": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                },
                "handoutCname": {
                    "type": "string"
                },
                "precedence": {
                    "type": "integer"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "weight": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance": {
            "properties": {
                "datacenterId": {
                    "type": "integer"
                },
                "loadObject": {
                    "type": "string"
                },
                "loadObjectPort": {
                    "type": "integer"
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "useDefaultLoadObject": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/IamApiClientActions:IamApiClientActions": {
            "properties": {
                "deactivateAll": {
                    "type": "boolean",
                    "description": "Whether you can deactivate the API client's credentials.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Whether you can remove the API client.\n"
                },
                "edit": {
                    "type": "boolean",
                    "description": "Whether you can update the API client.\n"
                },
                "editApis": {
                    "type": "boolean",
                    "description": "Whether you can update the \u003cspan pulumi-lang-nodejs=\"`apis`\" pulumi-lang-dotnet=\"`Apis`\" pulumi-lang-go=\"`apis`\" pulumi-lang-python=\"`apis`\" pulumi-lang-yaml=\"`apis`\" pulumi-lang-java=\"`apis`\"\u003e`apis`\u003c/span\u003e the API client can access, same as \u003cspan pulumi-lang-nodejs=\"`editAuth`\" pulumi-lang-dotnet=\"`EditAuth`\" pulumi-lang-go=\"`editAuth`\" pulumi-lang-python=\"`edit_auth`\" pulumi-lang-yaml=\"`editAuth`\" pulumi-lang-java=\"`editAuth`\"\u003e`edit_auth`\u003c/span\u003e.\n"
                },
                "editAuth": {
                    "type": "boolean",
                    "description": "Whether you can update the \u003cspan pulumi-lang-nodejs=\"`apis`\" pulumi-lang-dotnet=\"`Apis`\" pulumi-lang-go=\"`apis`\" pulumi-lang-python=\"`apis`\" pulumi-lang-yaml=\"`apis`\" pulumi-lang-java=\"`apis`\"\u003e`apis`\u003c/span\u003e the API client can access, same as \u003cspan pulumi-lang-nodejs=\"`editApis`\" pulumi-lang-dotnet=\"`EditApis`\" pulumi-lang-go=\"`editApis`\" pulumi-lang-python=\"`edit_apis`\" pulumi-lang-yaml=\"`editApis`\" pulumi-lang-java=\"`editApis`\"\u003e`edit_apis`\u003c/span\u003e.\n"
                },
                "editGroups": {
                    "type": "boolean",
                    "description": "Whether you can update the \u003cspan pulumi-lang-nodejs=\"`groups`\" pulumi-lang-dotnet=\"`Groups`\" pulumi-lang-go=\"`groups`\" pulumi-lang-python=\"`groups`\" pulumi-lang-yaml=\"`groups`\" pulumi-lang-java=\"`groups`\"\u003e`groups`\u003c/span\u003e the API client can access.\n"
                },
                "editIpAcl": {
                    "type": "boolean",
                    "description": "Whether you can update the 'ip acl' the API client can access.\n"
                },
                "editSwitchAccount": {
                    "type": "boolean",
                    "description": "Whether you can update the API client's option to manage many accounts.\n"
                },
                "lock": {
                    "type": "boolean",
                    "description": "Whether you can lock the API client.\n"
                },
                "transfer": {
                    "type": "boolean",
                    "description": "Whether you can transfer the API client to a new owner.\n"
                },
                "unlock": {
                    "type": "boolean",
                    "description": "Whether you can unlock the API client.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deactivateAll",
                        "delete",
                        "edit",
                        "editApis",
                        "editAuth",
                        "editGroups",
                        "editIpAcl",
                        "editSwitchAccount",
                        "lock",
                        "transfer",
                        "unlock"
                    ]
                }
            }
        },
        "akamai:index/IamApiClientApiAccess:IamApiClientApiAccess": {
            "properties": {
                "allAccessibleApis": {
                    "type": "boolean",
                    "description": "Enables the API client to access a full set of available APIs.\n"
                },
                "apis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/IamApiClientApiAccessApi:IamApiClientApiAccessApi"
                    },
                    "description": "The set of APIs the API client can access when \u003cspan pulumi-lang-nodejs=\"`allAccessibleApis`\" pulumi-lang-dotnet=\"`AllAccessibleApis`\" pulumi-lang-go=\"`allAccessibleApis`\" pulumi-lang-python=\"`all_accessible_apis`\" pulumi-lang-yaml=\"`allAccessibleApis`\" pulumi-lang-java=\"`allAccessibleApis`\"\u003e`all_accessible_apis`\u003c/span\u003e is \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "allAccessibleApis"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allAccessibleApis",
                        "apis"
                    ]
                }
            }
        },
        "akamai:index/IamApiClientApiAccessApi:IamApiClientApiAccessApi": {
            "properties": {
                "accessLevel": {
                    "type": "string",
                    "description": "The API client's access level on an API basis, either 'READ-ONLY', 'READ-WRITE', 'CREDENTIAL-READ-ONLY', or 'CREDENTIAL-READ-WRITE'.\n"
                },
                "apiId": {
                    "type": "integer",
                    "description": "A unique identifier of the API.\n"
                },
                "apiName": {
                    "type": "string",
                    "description": "A human-readable name for the API.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description for the API.\n"
                },
                "documentationUrl": {
                    "type": "string",
                    "description": "A link to more information about the API.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Specifies where the API can access resources.\n"
                }
            },
            "type": "object",
            "required": [
                "accessLevel",
                "apiId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessLevel",
                        "apiId",
                        "apiName",
                        "description",
                        "documentationUrl",
                        "endpoint"
                    ]
                }
            }
        },
        "akamai:index/IamApiClientCredential:IamApiClientCredential": {
            "properties": {
                "actions": {
                    "$ref": "#/types/akamai:index/IamApiClientCredentialActions:IamApiClientCredentialActions",
                    "description": "Actions available on the API client's credentials.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret.\n",
                    "secret": true
                },
                "clientToken": {
                    "type": "string",
                    "description": "The part of the credential that identifies the API client.\n",
                    "secret": true
                },
                "createdOn": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp indicating when the credential was created.\n"
                },
                "credentialId": {
                    "type": "integer",
                    "description": "A unique identifier of the credential.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description for the credential.\n"
                },
                "expiresOn": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp indicating when the credential expires. The default expiration date is two years from the creation date.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Whether a credential is 'ACTIVE', 'INACTIVE', or 'DELETED'. Can be updated to 'ACTIVE' or 'INACTIVE' only.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "actions",
                        "clientSecret",
                        "clientToken",
                        "createdOn",
                        "credentialId",
                        "description",
                        "expiresOn",
                        "status"
                    ]
                }
            }
        },
        "akamai:index/IamApiClientCredentialActions:IamApiClientCredentialActions": {
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Whether you can activate the credential.\n"
                },
                "deactivate": {
                    "type": "boolean",
                    "description": "Whether you can deactivate the credential.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Whether you can remove the credential.\n"
                },
                "editDescription": {
                    "type": "boolean",
                    "description": "Whether you can modify the credential's description.\n"
                },
                "editExpiration": {
                    "type": "boolean",
                    "description": "Whether you can modify the credential's expiration date.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "activate",
                        "deactivate",
                        "delete",
                        "editDescription",
                        "editExpiration"
                    ]
                }
            }
        },
        "akamai:index/IamApiClientGroupAccess:IamApiClientGroupAccess": {
            "properties": {
                "cloneAuthorizedUserGroups": {
                    "type": "boolean",
                    "description": "Sets the API client's group access the same as the authorized user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/IamApiClientGroupAccessGroup:IamApiClientGroupAccessGroup"
                    },
                    "description": "Groups the API client can access.\n"
                }
            },
            "type": "object",
            "required": [
                "cloneAuthorizedUserGroups"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cloneAuthorizedUserGroups",
                        "groups"
                    ]
                }
            }
        },
        "akamai:index/IamApiClientGroupAccessGroup:IamApiClientGroupAccessGroup": {
            "properties": {
                "groupId": {
                    "type": "integer",
                    "description": "A unique identifier for the group.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "A human-readable name for the group.\n"
                },
                "isBlocked": {
                    "type": "boolean",
                    "description": "Blocks the API client access to the group's child groups.\n"
                },
                "parentGroupId": {
                    "type": "integer",
                    "description": "A unique identifier for the parent group within the group tree.\n"
                },
                "roleDescription": {
                    "type": "string",
                    "description": "A human-readable description for the role to convey its use.\n"
                },
                "roleId": {
                    "type": "integer",
                    "description": "A unique identifier for the role.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "A human-readable name for the role.\n"
                },
                "subGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/IamApiClientGroupAccessGroupSubGroup:IamApiClientGroupAccessGroupSubGroup"
                    },
                    "description": "Groups the API client can access.\n"
                }
            },
            "type": "object",
            "required": [
                "groupId",
                "roleId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "groupId",
                        "groupName",
                        "isBlocked",
                        "parentGroupId",
                        "roleDescription",
                        "roleId",
                        "roleName",
                        "subGroups"
                    ]
                }
            }
        },
        "akamai:index/IamApiClientGroupAccessGroupSubGroup:IamApiClientGroupAccessGroupSubGroup": {
            "properties": {
                "groupId": {
                    "type": "integer",
                    "description": "A unique identifier for the group.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "A human-readable name for the group.\n"
                },
                "isBlocked": {
                    "type": "boolean",
                    "description": "Blocks the API client access to the group's child groups.\n"
                },
                "parentGroupId": {
                    "type": "integer",
                    "description": "A unique identifier for the parent group within the group tree.\n"
                },
                "roleDescription": {
                    "type": "string",
                    "description": "A human-readable description for the role to convey its use.\n"
                },
                "roleId": {
                    "type": "integer",
                    "description": "A unique identifier for the role.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "A human-readable name for the role.\n"
                },
                "subGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/IamApiClientGroupAccessGroupSubGroup:IamApiClientGroupAccessGroupSubGroup"
                    },
                    "description": "Groups the API client can access.\n"
                }
            },
            "type": "object",
            "required": [
                "groupId",
                "roleId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "groupId",
                        "groupName",
                        "isBlocked",
                        "parentGroupId",
                        "roleDescription",
                        "roleId",
                        "roleName",
                        "subGroups"
                    ]
                }
            }
        },
        "akamai:index/IamApiClientIpAcl:IamApiClientIpAcl": {
            "properties": {
                "cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP addresses or CIDR blocks the API client can access.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enables the API client to access the IP access control list (ACL).\n"
                }
            },
            "type": "object",
            "required": [
                "enable"
            ]
        },
        "akamai:index/IamApiClientPurgeOptions:IamApiClientPurgeOptions": {
            "properties": {
                "canPurgeByCacheTag": {
                    "type": "boolean",
                    "description": "Whether the API client can purge content by cache tag.\n"
                },
                "canPurgeByCpCode": {
                    "type": "boolean",
                    "description": "Whether the API client can purge content by CP code.\n"
                },
                "cpCodeAccess": {
                    "$ref": "#/types/akamai:index/IamApiClientPurgeOptionsCpCodeAccess:IamApiClientPurgeOptionsCpCodeAccess",
                    "description": "CP codes the API client can purge.\n"
                }
            },
            "type": "object",
            "required": [
                "canPurgeByCacheTag",
                "canPurgeByCpCode",
                "cpCodeAccess"
            ]
        },
        "akamai:index/IamApiClientPurgeOptionsCpCodeAccess:IamApiClientPurgeOptionsCpCodeAccess": {
            "properties": {
                "allCurrentAndNewCpCodes": {
                    "type": "boolean",
                    "description": "Whether the API can purge content by all current and new CP codes.\n"
                },
                "cpCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "CP codes the API client can purge.\n"
                }
            },
            "type": "object",
            "required": [
                "allCurrentAndNewCpCodes"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allCurrentAndNewCpCodes",
                        "cpCodes"
                    ]
                }
            }
        },
        "akamai:index/IamCidrBlockActions:IamCidrBlockActions": {
            "properties": {
                "delete": {
                    "type": "boolean",
                    "description": "Whether you can delete this CIDR block. You can't delete a CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.\n"
                },
                "edit": {
                    "type": "boolean",
                    "description": "Whether you can edit this CIDR block. You can't edit CIDR block from an IP address not on the allowlist, or if the CIDR block is the only one on the allowlist.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "delete",
                        "edit"
                    ]
                }
            }
        },
        "akamai:index/IamUserUserNotifications:IamUserUserNotifications": {
            "properties": {
                "apiClientCredentialExpiryNotification": {
                    "type": "boolean",
                    "description": "Enables notifications for expiring API client credentials.\n"
                },
                "enableEmailNotifications": {
                    "type": "boolean",
                    "description": "Enables email notifications.\n"
                },
                "newUserNotification": {
                    "type": "boolean",
                    "description": "Enables notifications for group administrators when the user creates other new users.\n"
                },
                "passwordExpiry": {
                    "type": "boolean",
                    "description": "Enables notifications for expiring passwords.\n"
                },
                "proactives": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Products for which the user gets notifications for service issues.\n"
                },
                "upgrades": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Products for which the user receives notifications for upgrades.\n"
                }
            },
            "type": "object",
            "required": [
                "enableEmailNotifications",
                "passwordExpiry",
                "proactives",
                "upgrades"
            ]
        },
        "akamai:index/MtlskeystoreClientCertificateAkamaiVersion:MtlskeystoreClientCertificateAkamaiVersion": {
            "properties": {
                "certificateBlock": {
                    "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateAkamaiVersionCertificateBlock:MtlskeystoreClientCertificateAkamaiVersionCertificateBlock",
                    "description": "Details of the certificate block for the client certificate version.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the client certificate version.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's creation.\n"
                },
                "deleteRequestedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's deletion request. Appears as null if there's no request.\n"
                },
                "ellipticCurve": {
                    "type": "string",
                    "description": "Specifies the key elliptic curve when key algorithm `ECDSA` is used.\n"
                },
                "expiryDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the client certificate version expires.\n"
                },
                "issuedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's availability.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The signing entity of the client certificate version.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the client certificate version's encryption algorithm. Supported values are `RSA` and `ECDSA`.\n"
                },
                "keySizeInBytes": {
                    "type": "string",
                    "description": "The private key length of the client certificate version when key algorithm `RSA` is used.\n"
                },
                "scheduledDeleteDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's deletion. Appears as null if there's no request.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Specifies the algorithm that secures the data exchange between the edge server and origin.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The client certificate version status. Possible values: `DEPLOYMENT_PENDING`, `DEPLOYED`, or `DELETE_PENDING`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The public key's entity stored in the client certificate version's subject public key field.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The unique identifier of the client certificate version.\n"
                },
                "versionGuid": {
                    "type": "string",
                    "description": "Unique identifier for the client certificate version. Use it to configure mutual authentication (mTLS) sessions between the origin and edge servers in Property Manager's Mutual TLS Origin Keystore behavior.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateBlock",
                        "createdBy",
                        "createdDate",
                        "deleteRequestedDate",
                        "ellipticCurve",
                        "expiryDate",
                        "issuedDate",
                        "issuer",
                        "keyAlgorithm",
                        "keySizeInBytes",
                        "scheduledDeleteDate",
                        "signatureAlgorithm",
                        "status",
                        "subject",
                        "version",
                        "versionGuid"
                    ]
                }
            }
        },
        "akamai:index/MtlskeystoreClientCertificateAkamaiVersionCertificateBlock:MtlskeystoreClientCertificateAkamaiVersionCertificateBlock": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "A text representation of the client certificate in PEM format.\n"
                },
                "trustChain": {
                    "type": "string",
                    "description": "A text representation of the trust chain in PEM format.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificate",
                        "trustChain"
                    ]
                }
            }
        },
        "akamai:index/MtlskeystoreClientCertificateThirdPartyVersions:MtlskeystoreClientCertificateThirdPartyVersions": {
            "properties": {
                "certificateBlock": {
                    "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateThirdPartyVersionsCertificateBlock:MtlskeystoreClientCertificateThirdPartyVersionsCertificateBlock",
                    "description": "Details of the certificate block for the client certificate version.\n"
                },
                "certificateSubmittedBy": {
                    "type": "string",
                    "description": "The user who uploaded the THIRD_PARTY client certificate version. Appears as null if not specified.\n"
                },
                "certificateSubmittedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the THIRD_PARTY signer client certificate version was uploaded. Appears as null if not specified.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the client certificate version.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's creation.\n"
                },
                "csrBlock": {
                    "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateThirdPartyVersionsCsrBlock:MtlskeystoreClientCertificateThirdPartyVersionsCsrBlock",
                    "description": "Details of the Certificate Signing Request (CSR) for the client certificate version.\n"
                },
                "deleteRequestedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's deletion request. Appears as null if there's no request.\n"
                },
                "ellipticCurve": {
                    "type": "string",
                    "description": "Specifies the key elliptic curve when key algorithm `ECDSA` is used.\n"
                },
                "expiryDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the client certificate version expires.\n"
                },
                "issuedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's availability.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The signing entity of the client certificate version.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the client certificate version's encryption algorithm. Supported values are `RSA` and `ECDSA`.\n"
                },
                "keySizeInBytes": {
                    "type": "string",
                    "description": "The private key length of the client certificate version when key algorithm `RSA` is used.\n"
                },
                "scheduledDeleteDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's deletion. Appears as null if there's no request.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Specifies the algorithm that secures the data exchange between the edge server and origin.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The client certificate version status. Possible values: `AWAITING_SIGNED_CERTIFICATE`, `DEPLOYMENT_PENDING`, `DEPLOYED`, or `DELETE_PENDING`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The public key's entity stored in the client certificate version's subject public key field.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The unique identifier of the client certificate version.\n"
                },
                "versionGuid": {
                    "type": "string",
                    "description": "Unique identifier for the client certificate version. Use it to configure mutual authentication (mTLS) sessions between the origin and edge servers in Property Manager's Mutual TLS Origin Keystore behavior.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateBlock",
                        "certificateSubmittedBy",
                        "certificateSubmittedDate",
                        "createdBy",
                        "createdDate",
                        "csrBlock",
                        "deleteRequestedDate",
                        "ellipticCurve",
                        "expiryDate",
                        "issuedDate",
                        "issuer",
                        "keyAlgorithm",
                        "keySizeInBytes",
                        "scheduledDeleteDate",
                        "signatureAlgorithm",
                        "status",
                        "subject",
                        "version",
                        "versionGuid"
                    ]
                }
            }
        },
        "akamai:index/MtlskeystoreClientCertificateThirdPartyVersionsCertificateBlock:MtlskeystoreClientCertificateThirdPartyVersionsCertificateBlock": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "A text representation of the client certificate in PEM format.\n"
                },
                "trustChain": {
                    "type": "string",
                    "description": "A text representation of the trust chain in PEM format.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificate",
                        "trustChain"
                    ]
                }
            }
        },
        "akamai:index/MtlskeystoreClientCertificateThirdPartyVersionsCsrBlock:MtlskeystoreClientCertificateThirdPartyVersionsCsrBlock": {
            "properties": {
                "csr": {
                    "type": "string",
                    "description": "Text of the certificate signing request.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the client certificate's encryption algorithm.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "csr",
                        "keyAlgorithm"
                    ]
                }
            }
        },
        "akamai:index/MtlskeystoreClientCertificateUploadTimeouts:MtlskeystoreClientCertificateUploadTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "Optional configurable resource create timeout. By default it's 30m.\n"
                },
                "update": {
                    "type": "string",
                    "description": "Optional configurable resource update timeout. By default it's 30m.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyActivationComplianceRecord:PropertyActivationComplianceRecord": {
            "properties": {
                "noncomplianceReasonEmergency": {
                    "$ref": "#/types/akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonEmergency:PropertyActivationComplianceRecordNoncomplianceReasonEmergency",
                    "description": "Provides an audit record when activating on a production network with noncompliance reason as `EMERGENCY`\n"
                },
                "noncomplianceReasonNoProductionTraffic": {
                    "$ref": "#/types/akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic:PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic",
                    "description": "Provides an audit record when activating on a production network with noncompliance reason as `NO_PRODUCTION_TRAFFIC`\n"
                },
                "noncomplianceReasonNone": {
                    "$ref": "#/types/akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonNone:PropertyActivationComplianceRecordNoncomplianceReasonNone",
                    "description": "Provides an audit record when activating on a production network with noncompliance reason as `NONE`\n"
                },
                "noncomplianceReasonOther": {
                    "$ref": "#/types/akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonOther:PropertyActivationComplianceRecordNoncomplianceReasonOther",
                    "description": "Provides an audit record when activating on a production network with noncompliance reason as `OTHER`\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonEmergency:PropertyActivationComplianceRecordNoncomplianceReasonEmergency": {
            "properties": {
                "ticketId": {
                    "type": "string",
                    "description": "Identifies the ticket that describes the need for the activation\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic:PropertyActivationComplianceRecordNoncomplianceReasonNoProductionTraffic": {
            "properties": {
                "ticketId": {
                    "type": "string",
                    "description": "Identifies the ticket that describes the need for the activation\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonNone:PropertyActivationComplianceRecordNoncomplianceReasonNone": {
            "properties": {
                "customerEmail": {
                    "type": "string",
                    "description": "Identifies the customer\n"
                },
                "peerReviewedBy": {
                    "type": "string",
                    "description": "Identifies person who has independently approved the activation request\n"
                },
                "ticketId": {
                    "type": "string",
                    "description": "Identifies the ticket that describes the need for the activation\n"
                },
                "unitTested": {
                    "type": "boolean",
                    "description": "Whether the metadata to activate has been fully tested\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyActivationComplianceRecordNoncomplianceReasonOther:PropertyActivationComplianceRecordNoncomplianceReasonOther": {
            "properties": {
                "otherNoncomplianceReason": {
                    "type": "string",
                    "description": "Describes the reason why the activation must occur immediately, out of compliance with the standard procedure\n"
                },
                "ticketId": {
                    "type": "string",
                    "description": "Identifies the ticket that describes the need for the activation\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyActivationRuleError:PropertyActivationRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "errorLocation": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyActivationTimeouts:PropertyActivationTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyHostname:PropertyHostname": {
            "properties": {
                "certProvisioningType": {
                    "type": "string"
                },
                "certStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyHostnameCertStatus:PropertyHostnameCertStatus"
                    }
                },
                "cnameFrom": {
                    "type": "string"
                },
                "cnameTo": {
                    "type": "string"
                },
                "cnameType": {
                    "type": "string"
                },
                "edgeHostnameId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certProvisioningType",
                "cnameFrom",
                "cnameTo"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certProvisioningType",
                        "certStatuses",
                        "cnameFrom",
                        "cnameTo",
                        "cnameType",
                        "edgeHostnameId"
                    ]
                }
            }
        },
        "akamai:index/PropertyHostnameBucketHostnames:PropertyHostnameBucketHostnames": {
            "properties": {
                "certProvisioningType": {
                    "type": "string",
                    "description": "Indicates the type of the certificate used in the property hostname. Either `CPS_MANAGED` for certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for Domain Validation (DV) certificates deployed automatically.\n"
                },
                "cnameTo": {
                    "type": "string",
                    "description": "The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object's `edgeHostnameDomain` member.\n"
                },
                "edgeHostnameId": {
                    "type": "string",
                    "description": "Identifies the edge hostname you mapped your traffic to on the production network.\n"
                }
            },
            "type": "object",
            "required": [
                "certProvisioningType",
                "edgeHostnameId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certProvisioningType",
                        "cnameTo",
                        "edgeHostnameId"
                    ]
                }
            }
        },
        "akamai:index/PropertyHostnameCertStatus:PropertyHostnameCertStatus": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": "The hostname part of the CNAME record used to validate the certificate's domain.\n"
                },
                "productionStatus": {
                    "type": "string",
                    "description": "The certificate's deployment status on the production network.\n"
                },
                "stagingStatus": {
                    "type": "string",
                    "description": "The certificate's deployment status on the staging network.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The destination part of the CNAME record used to validate the certificate's domain.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostname",
                        "productionStatus",
                        "stagingStatus",
                        "target"
                    ]
                }
            }
        },
        "akamai:index/PropertyIncludeActivationComplianceRecord:PropertyIncludeActivationComplianceRecord": {
            "properties": {
                "noncomplianceReasonEmergency": {
                    "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonEmergency:PropertyIncludeActivationComplianceRecordNoncomplianceReasonEmergency",
                    "description": "Provides an audit record when activating on a production network with noncompliance reason as `EMERGENCY`\n"
                },
                "noncomplianceReasonNoProductionTraffic": {
                    "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonNoProductionTraffic:PropertyIncludeActivationComplianceRecordNoncomplianceReasonNoProductionTraffic",
                    "description": "Provides an audit record when activating on a production network with noncompliance reason as `NO_PRODUCTION_TRAFFIC`\n"
                },
                "noncomplianceReasonNone": {
                    "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonNone:PropertyIncludeActivationComplianceRecordNoncomplianceReasonNone",
                    "description": "Provides an audit record when activating on a production network with noncompliance reason as `NONE`\n"
                },
                "noncomplianceReasonOther": {
                    "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonOther:PropertyIncludeActivationComplianceRecordNoncomplianceReasonOther",
                    "description": "Provides an audit record when activating on a production network with noncompliance reason as `OTHER`\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonEmergency:PropertyIncludeActivationComplianceRecordNoncomplianceReasonEmergency": {
            "properties": {
                "ticketId": {
                    "type": "string",
                    "description": "Identifies the ticket that describes the need for the activation\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonNoProductionTraffic:PropertyIncludeActivationComplianceRecordNoncomplianceReasonNoProductionTraffic": {
            "properties": {
                "ticketId": {
                    "type": "string",
                    "description": "Identifies the ticket that describes the need for the activation\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonNone:PropertyIncludeActivationComplianceRecordNoncomplianceReasonNone": {
            "properties": {
                "customerEmail": {
                    "type": "string",
                    "description": "Identifies the customer\n"
                },
                "peerReviewedBy": {
                    "type": "string",
                    "description": "Identifies person who has independently approved the activation request\n"
                },
                "ticketId": {
                    "type": "string",
                    "description": "Identifies the ticket that describes the need for the activation\n"
                },
                "unitTested": {
                    "type": "boolean",
                    "description": "Whether the metadata to activate has been fully tested\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyIncludeActivationComplianceRecordNoncomplianceReasonOther:PropertyIncludeActivationComplianceRecordNoncomplianceReasonOther": {
            "properties": {
                "otherNoncomplianceReason": {
                    "type": "string",
                    "description": "Describes the reason why the activation must occur immediately, out of compliance with the standard procedure\n"
                },
                "ticketId": {
                    "type": "string",
                    "description": "Identifies the ticket that describes the need for the activation\n"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyIncludeActivationTimeouts:PropertyIncludeActivationTimeouts": {
            "properties": {
                "default": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyRuleError:PropertyRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "errorLocation": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyRuleWarning:PropertyRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "errorLocation": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderConfig:ProviderConfig": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientSecret",
                "clientToken",
                "host"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": []
                }
            }
        },
        "akamai:index/getAppsecRapidRulesRapidRule:getAppsecRapidRulesRapidRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The rapid rule action.\n"
                },
                "attackGroup": {
                    "type": "string",
                    "description": "The unique identifier of attack group, rapid rule belongs to.\n"
                },
                "attackGroupException": {
                    "type": "string",
                    "description": "The attack group exception.\n"
                },
                "conditionException": {
                    "type": "string",
                    "description": "The rapid rule exception.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of rapid rule.\n"
                },
                "lock": {
                    "type": "boolean",
                    "description": "The the rapid rule action lock.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The rapid rule name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "attackGroup",
                "attackGroupException",
                "conditionException",
                "id",
                "lock",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentAdminContact:getCPSEnrollmentAdminContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of residence of the contact\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of the contact\n"
                },
                "email": {
                    "type": "string",
                    "description": "E-mail address of the contact\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "First name of the contact\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the contact\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Organization where contact is hired\n"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number of the contact\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of the contact\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the contact\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the the contact\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "phone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentCsr:getCPSEnrollmentCsr": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City where organization is located\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "The code of the country where organization is located\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Name of organization used in all legal documents\n"
                },
                "organizationalUnit": {
                    "type": "string",
                    "description": "Organizational unit of organization\n"
                },
                "preferredTrustChain": {
                    "type": "string",
                    "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, the preferred trust chain will be included by CPS with the leaf certificate in the TLS handshake. If the field does not have a value, whichever trust chain Akamai chooses will be used by default\n"
                },
                "state": {
                    "type": "string",
                    "description": "State or province of organization location\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "countryCode",
                "organization",
                "organizationalUnit",
                "preferredTrustChain",
                "state"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentDnsChallenge:getCPSEnrollmentDnsChallenge": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Domain for which the challenges were completed\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "The domain name where Akamai publishes the response body to validate\n"
                },
                "responseBody": {
                    "type": "string",
                    "description": "The unique content of the challenge\n"
                }
            },
            "type": "object",
            "required": [
                "domain",
                "fullPath",
                "responseBody"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentHttpChallenge:getCPSEnrollmentHttpChallenge": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Domain for which the challenges were completed\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "The URL where Akamai publishes the response body to validate\n"
                },
                "responseBody": {
                    "type": "string",
                    "description": "The unique content of the challenge\n"
                }
            },
            "type": "object",
            "required": [
                "domain",
                "fullPath",
                "responseBody"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentNetworkConfiguration:getCPSEnrollmentNetworkConfiguration": {
            "properties": {
                "clientMutualAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCPSEnrollmentNetworkConfigurationClientMutualAuthentication:getCPSEnrollmentNetworkConfigurationClientMutualAuthentication"
                    },
                    "description": "The trust chain configuration used for client mutual authentication\n"
                },
                "cloneDnsNames": {
                    "type": "boolean",
                    "description": "Enable CPS to direct traffic using all the SANs listed in the SANs parameter when enrollment is created\n"
                },
                "disallowedTlsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "TLS versions which are disallowed\n"
                },
                "geography": {
                    "type": "string",
                    "description": "Geography type used for enrollment\n"
                },
                "mustHaveCiphers": {
                    "type": "string",
                    "description": "Mandatory Ciphers which are included for enrollment\n"
                },
                "ocspStapling": {
                    "type": "string",
                    "description": "Enable OCSP stapling\n"
                },
                "preferredCiphers": {
                    "type": "string",
                    "description": "Preferred Ciphers which are included for enrollment\n"
                },
                "quicEnabled": {
                    "type": "boolean",
                    "description": "Enable QUIC protocol\n"
                }
            },
            "type": "object",
            "required": [
                "clientMutualAuthentications",
                "cloneDnsNames",
                "disallowedTlsVersions",
                "geography",
                "mustHaveCiphers",
                "ocspStapling",
                "preferredCiphers",
                "quicEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentNetworkConfigurationClientMutualAuthentication:getCPSEnrollmentNetworkConfigurationClientMutualAuthentication": {
            "properties": {
                "ocspEnabled": {
                    "type": "boolean",
                    "description": "Enable the OCSP stapling\n"
                },
                "sendCaListToClient": {
                    "type": "boolean",
                    "description": "Enable the server to send the certificate authority (CA) list to the client\n"
                },
                "setId": {
                    "type": "string",
                    "description": "The identifier of the set of trust chains, created in the Trust Chain Manager\n"
                }
            },
            "type": "object",
            "required": [
                "ocspEnabled",
                "sendCaListToClient",
                "setId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentOrganization:getCPSEnrollmentOrganization": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of organization\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of organization\n"
                },
                "city": {
                    "type": "string",
                    "description": "City where organization is located\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of country where organization is located\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of organization\n"
                },
                "phone": {
                    "type": "string",
                    "description": "The phone number of the administrator who is organization contact\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postal code of organization\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where organization resides\n"
                }
            },
            "type": "object",
            "required": [
                "addressLineOne",
                "addressLineTwo",
                "city",
                "countryCode",
                "name",
                "phone",
                "postalCode",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentTechContact:getCPSEnrollmentTechContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of residence of the contact\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of the contact\n"
                },
                "email": {
                    "type": "string",
                    "description": "E-mail address of the contact\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "First name of the contact\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the contact\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Organization where contact is hired\n"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number of the contact\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of the contact\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the contact\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the the contact\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "phone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentsEnrollment:getCPSEnrollmentsEnrollment": {
            "properties": {
                "adminContacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentAdminContact:getCPSEnrollmentsEnrollmentAdminContact"
                    },
                    "description": "Contact information for the certificate administrator used at organization\n"
                },
                "assignedSlots": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Slots where the certificate either will be deployed or is already deployed\n"
                },
                "certificateChainType": {
                    "type": "string",
                    "description": "Certificate trust chain type\n"
                },
                "certificateType": {
                    "type": "string",
                    "description": "Certificate type of enrollment\n"
                },
                "commonName": {
                    "type": "string",
                    "description": "Common name used for enrollment\n"
                },
                "csrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentCsr:getCPSEnrollmentsEnrollmentCsr"
                    },
                    "description": "Data used for generation of Certificate Signing Request\n"
                },
                "enableMultiStackedCertificates": {
                    "type": "boolean",
                    "description": "Enable Dual-Stacked certificate deployment for enrollment\n"
                },
                "enrollmentId": {
                    "type": "integer",
                    "description": "The unique identifier of enrollment\n"
                },
                "networkConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentNetworkConfiguration:getCPSEnrollmentsEnrollmentNetworkConfiguration"
                    },
                    "description": "Settings containing network information and TLS metadata used by CPS\n"
                },
                "orgId": {
                    "type": "integer",
                    "description": "The Digicert unique identifier for the organization\n"
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentOrganization:getCPSEnrollmentsEnrollmentOrganization"
                    },
                    "description": "Organization information\n"
                },
                "pendingChanges": {
                    "type": "boolean",
                    "description": "Whether some changes are pending\n"
                },
                "productionSlots": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Slots where the certificate is deployed on the production network\n"
                },
                "registrationAuthority": {
                    "type": "string",
                    "description": "The registration authority or certificate authority (CA) used to obtain a certificate\n"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of SANs\n"
                },
                "secureNetwork": {
                    "type": "string",
                    "description": "Type of TLS deployment network\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "SHA algorithm type\n"
                },
                "sniOnly": {
                    "type": "boolean",
                    "description": "Whether Server Name Indication is used for enrollment\n"
                },
                "stagingSlots": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Slots where the certificate is deployed on the staging network\n"
                },
                "techContacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentTechContact:getCPSEnrollmentsEnrollmentTechContact"
                    },
                    "description": "Contact information for an administrator at Akamai\n"
                },
                "validationType": {
                    "type": "string",
                    "description": "Enrolment validation type\n"
                }
            },
            "type": "object",
            "required": [
                "adminContacts",
                "assignedSlots",
                "certificateChainType",
                "certificateType",
                "commonName",
                "csrs",
                "enableMultiStackedCertificates",
                "enrollmentId",
                "networkConfigurations",
                "orgId",
                "organizations",
                "pendingChanges",
                "productionSlots",
                "registrationAuthority",
                "sans",
                "secureNetwork",
                "signatureAlgorithm",
                "sniOnly",
                "stagingSlots",
                "techContacts",
                "validationType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentsEnrollmentAdminContact:getCPSEnrollmentsEnrollmentAdminContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of residence of the contact\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of the contact\n"
                },
                "email": {
                    "type": "string",
                    "description": "E-mail address of the contact\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "First name of the contact\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the contact\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Organization where contact is hired\n"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number of the contact\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of the contact\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the contact\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the the contact\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "phone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentsEnrollmentCsr:getCPSEnrollmentsEnrollmentCsr": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City where organization is located\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "The code of the country where organization is located\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Name of organization used in all legal documents\n"
                },
                "organizationalUnit": {
                    "type": "string",
                    "description": "Organizational unit of organization\n"
                },
                "preferredTrustChain": {
                    "type": "string",
                    "description": "For the Let's Encrypt Domain Validated (DV) SAN certificates, the preferred trust chain will be included by CPS with the leaf certificate in the TLS handshake. If the field does not have a value, whichever trust chain Akamai chooses will be used by default\n"
                },
                "state": {
                    "type": "string",
                    "description": "State or province of organization location\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "countryCode",
                "organization",
                "organizationalUnit",
                "preferredTrustChain",
                "state"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentsEnrollmentNetworkConfiguration:getCPSEnrollmentsEnrollmentNetworkConfiguration": {
            "properties": {
                "clientMutualAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollmentNetworkConfigurationClientMutualAuthentication:getCPSEnrollmentsEnrollmentNetworkConfigurationClientMutualAuthentication"
                    },
                    "description": "The trust chain configuration used for client mutual authentication\n"
                },
                "cloneDnsNames": {
                    "type": "boolean",
                    "description": "Enable CPS to direct traffic using all the SANs listed in the SANs parameter when enrollment is created\n"
                },
                "disallowedTlsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "TLS versions which are disallowed\n"
                },
                "geography": {
                    "type": "string",
                    "description": "Geography type used for enrollment\n"
                },
                "mustHaveCiphers": {
                    "type": "string",
                    "description": "Mandatory Ciphers which are included for enrollment\n"
                },
                "ocspStapling": {
                    "type": "string",
                    "description": "Enable OCSP stapling\n"
                },
                "preferredCiphers": {
                    "type": "string",
                    "description": "Preferred Ciphers which are included for enrollment\n"
                },
                "quicEnabled": {
                    "type": "boolean",
                    "description": "Enable QUIC protocol\n"
                }
            },
            "type": "object",
            "required": [
                "clientMutualAuthentications",
                "cloneDnsNames",
                "disallowedTlsVersions",
                "geography",
                "mustHaveCiphers",
                "ocspStapling",
                "preferredCiphers",
                "quicEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentsEnrollmentNetworkConfigurationClientMutualAuthentication:getCPSEnrollmentsEnrollmentNetworkConfigurationClientMutualAuthentication": {
            "properties": {
                "ocspEnabled": {
                    "type": "boolean",
                    "description": "Enable the OCSP stapling\n"
                },
                "sendCaListToClient": {
                    "type": "boolean",
                    "description": "Enable the server to send the certificate authority (CA) list to the client\n"
                },
                "setId": {
                    "type": "string",
                    "description": "The identifier of the set of trust chains, created in the Trust Chain Manager\n"
                }
            },
            "type": "object",
            "required": [
                "ocspEnabled",
                "sendCaListToClient",
                "setId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentsEnrollmentOrganization:getCPSEnrollmentsEnrollmentOrganization": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of organization\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of organization\n"
                },
                "city": {
                    "type": "string",
                    "description": "City where organization is located\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of country where organization is located\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of organization\n"
                },
                "phone": {
                    "type": "string",
                    "description": "The phone number of the administrator who is organization contact\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postal code of organization\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where organization resides\n"
                }
            },
            "type": "object",
            "required": [
                "addressLineOne",
                "addressLineTwo",
                "city",
                "countryCode",
                "name",
                "phone",
                "postalCode",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCPSEnrollmentsEnrollmentTechContact:getCPSEnrollmentsEnrollmentTechContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "addressLineTwo": {
                    "type": "string",
                    "description": "The address of the contact\n"
                },
                "city": {
                    "type": "string",
                    "description": "City of residence of the contact\n"
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code of the contact\n"
                },
                "email": {
                    "type": "string",
                    "description": "E-mail address of the contact\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "First name of the contact\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the contact\n"
                },
                "organization": {
                    "type": "string",
                    "description": "Organization where contact is hired\n"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number of the contact\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of the contact\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the contact\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the the contact\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "phone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getClientlistListsList:getClientlistListsList": {
            "properties": {
                "createDate": {
                    "type": "string",
                    "description": "The client list creation date.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The username of the user who created the client list.\n"
                },
                "deprecated": {
                    "type": "boolean",
                    "description": "Whether the client list was removed.\n"
                },
                "itemsCount": {
                    "type": "integer",
                    "description": "The number of items that a client list contains.\n"
                },
                "listId": {
                    "type": "string",
                    "description": "The ID of the client list.\n"
                },
                "listType": {
                    "type": "string",
                    "description": "The client list type.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the client list\n"
                },
                "notes": {
                    "type": "string",
                    "description": "The client list notes\n"
                },
                "productionActivationStatus": {
                    "type": "string",
                    "description": "The activation status in production environment.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Whether the client is editable for the authenticated user.\n"
                },
                "shared": {
                    "type": "boolean",
                    "description": "Whether the client list is shared.\n"
                },
                "stagingActivationStatus": {
                    "type": "string",
                    "description": "The activation status in staging environment.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The client list tags\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the client list\n"
                },
                "updateDate": {
                    "type": "string",
                    "description": "The date of last update.\n"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The username of the user that updated the client list last.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The current version of the client list.\n"
                }
            },
            "type": "object",
            "required": [
                "createDate",
                "createdBy",
                "deprecated",
                "itemsCount",
                "listId",
                "listType",
                "name",
                "notes",
                "productionActivationStatus",
                "readOnly",
                "shared",
                "stagingActivationStatus",
                "tags",
                "type",
                "updateDate",
                "updatedBy",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudaccessKeyGroup:getCloudaccessKeyGroup": {
            "properties": {
                "contractsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Akamai contracts that are associated with this access key for the group_id.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The unique identifier of Akamai group that's associated with the access key.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "The name of Akamai group that's associated with the access key.\n"
                }
            },
            "type": "object",
            "required": [
                "contractsIds",
                "groupId",
                "groupName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudaccessKeyNetworkConfiguration:getCloudaccessKeyNetworkConfiguration": {
            "properties": {
                "additionalCdn": {
                    "type": "string",
                    "description": "The access key can be deployed to the Akamai’s  additional networks. Available options are RUSSIA_CDN and CHINA_CDN.\n"
                },
                "securityNetwork": {
                    "type": "string",
                    "description": "Attribute defines the type of secure network to which access key is deployed. Two options are available: STANDARD_TLS and ENHANCED_TLS.\n"
                }
            },
            "type": "object",
            "required": [
                "additionalCdn",
                "securityNetwork"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudaccessKeyPropertiesProperty:getCloudaccessKeyPropertiesProperty": {
            "properties": {
                "accessKeyVersion": {
                    "type": "integer",
                    "description": "Version of the access key.\n"
                },
                "productionVersion": {
                    "type": "integer",
                    "description": "Identifies the specific property version whose production status is either active or activating.\n"
                },
                "propertyId": {
                    "type": "string",
                    "description": "The unique identifier Akamai assigned to the matching property.\n"
                },
                "propertyName": {
                    "type": "string",
                    "description": "Identifies the specific property name whose Origin Characteristics behavior uses the access key version.\n"
                },
                "stagingVersion": {
                    "type": "integer",
                    "description": "Identifies the specific property version whose staging status is either active or activating.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKeyVersion",
                "productionVersion",
                "propertyId",
                "propertyName",
                "stagingVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudaccessKeyVersionsAccessKeyVersion:getCloudaccessKeyVersionsAccessKeyVersion": {
            "properties": {
                "cloudAccessKeyId": {
                    "type": "string",
                    "description": "The unique identifier assigned to the access key assigned from AWS or GCS.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The username of the person who created the access key.\n"
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time the access key was created, in ISO 8601 format.\n"
                },
                "deploymentStatus": {
                    "type": "string",
                    "description": "Indicates if the version has been activated to the Akamai networks. Available statuses are: PENDING_DELETION, ACTIVE and PENDING_ACTIVATION.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Version of the access key.\n"
                },
                "versionGuid": {
                    "type": "string",
                    "description": "The unique identifier assigned to an access key version.\n"
                }
            },
            "type": "object",
            "required": [
                "cloudAccessKeyId",
                "createdBy",
                "createdTime",
                "deploymentStatus",
                "version",
                "versionGuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudaccessKeysAccessKey:getCloudaccessKeysAccessKey": {
            "properties": {
                "accessKeyName": {
                    "type": "string",
                    "description": "Name of the access key.\n"
                },
                "accessKeyUid": {
                    "type": "integer",
                    "description": "Identifier of the retrieved access key.\n"
                },
                "authenticationMethod": {
                    "type": "string",
                    "description": "The type of signing process used to authenticate API requests: AWS4_HMAC_SHA256 for Amazon Web Services or GOOG4_HMAC_SHA256 for Google Cloud Services in interoperability mode.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The username of the person who created the access key.\n"
                },
                "createdTime": {
                    "type": "string",
                    "description": "The time the access key was created, in ISO 8601 format.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudaccessKeysAccessKeyGroup:getCloudaccessKeysAccessKeyGroup"
                    },
                    "description": "A list of groups to which the access key is assigned.\n"
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "The most recent version of the access key.\n"
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/getCloudaccessKeysAccessKeyNetworkConfiguration:getCloudaccessKeysAccessKeyNetworkConfiguration",
                    "description": "The API deploys the access key to this secure network.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKeyName",
                "accessKeyUid",
                "authenticationMethod",
                "createdBy",
                "createdTime",
                "groups",
                "latestVersion",
                "networkConfiguration"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudaccessKeysAccessKeyGroup:getCloudaccessKeysAccessKeyGroup": {
            "properties": {
                "contractsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The Akamai contracts that are associated with this access key for the group_id.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The unique identifier of Akamai group that's associated with the access key.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "The name of Akamai group that's associated with the access key.\n"
                }
            },
            "type": "object",
            "required": [
                "contractsIds",
                "groupId",
                "groupName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudaccessKeysAccessKeyNetworkConfiguration:getCloudaccessKeysAccessKeyNetworkConfiguration": {
            "properties": {
                "additionalCdn": {
                    "type": "string",
                    "description": "The access key can be deployed to the Akamai’s  additional networks. Available options are RUSSIA_CDN and CHINA_CDN.\n"
                },
                "securityNetwork": {
                    "type": "string",
                    "description": "Attribute defines the type of secure network to which access key is deployed. Two options are available: STANDARD_TLS and ENHANCED_TLS.\n"
                }
            },
            "type": "object",
            "required": [
                "additionalCdn",
                "securityNetwork"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRule:getCloudletsApiPrioritizationMatchRuleMatchRule": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "If set to true, disables a rule so it is not evaluated against incoming requests.\n"
                },
                "end": {
                    "type": "integer",
                    "description": "The end time for this match (in seconds since the epoch)\n"
                },
                "matchUrl": {
                    "type": "string",
                    "description": "If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatch:getCloudletsApiPrioritizationMatchRuleMatchRuleMatch"
                    },
                    "description": "Defines a set of match objects\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "passThroughPercent": {
                    "type": "number",
                    "description": "The range 0.0: 99.0 specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin. A value of -1 means send everyone to the waiting room.\n"
                },
                "start": {
                    "type": "integer",
                    "description": "The start time for this match (in seconds since the epoch)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Cloudlet the rule is for\n"
                }
            },
            "type": "object",
            "required": [
                "passThroughPercent",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "passThroughPercent"
                    ]
                }
            }
        },
        "akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatch:getCloudletsApiPrioritizationMatchRuleMatchRuleMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "If true, the match is case sensitive\n"
                },
                "checkIps": {
                    "type": "string",
                    "description": "For clientip, continent, countrycode, proxy, and regioncode match types, the part of the request that determines the IP address to use\n"
                },
                "matchOperator": {
                    "type": "string",
                    "description": "Valid entries for this property: contains, exists, and equals\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "The type of match used\n"
                },
                "matchValue": {
                    "type": "string",
                    "description": "Depends on the matchType\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "If true, negates the match\n"
                },
                "objectMatchValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValue"
                    },
                    "description": "An object used when a rule either includes more complex match criteria, like multiple value attributes\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValue": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support this property: cookie, header, parameter, and query\n"
                },
                "nameCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property should be evaluated based on case sensitivity\n"
                },
                "nameHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property includes wildcards\n"
                },
                "options": {
                    "$ref": "#/types/akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions",
                    "description": "If using the object type, use this set to list the values to match on (use only with the object type)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The array type, which can be one of the following: object or simple. Use the simple option when adding only an array of string-based values\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on (use only with simple type)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsApiPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions": {
            "properties": {
                "valueCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property should be evaluated based on case sensitivity\n"
                },
                "valueEscaped": {
                    "type": "boolean",
                    "description": "Set to true if provided value should be compared in escaped form\n"
                },
                "valueHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property include wildcards\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsApplicationLoadBalancerDataCenter:getCloudletsApplicationLoadBalancerDataCenter": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city in which the data center is located.\n"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean",
                    "description": "Describes if cloud server host header is overridden\n"
                },
                "cloudService": {
                    "type": "boolean",
                    "description": "Describes if this datacenter is a cloud service\n"
                },
                "continent": {
                    "type": "string",
                    "description": "The continent on which the data center is located\n"
                },
                "country": {
                    "type": "string",
                    "description": "The country in which the data center is located\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "This should match the 'hostname' value defined for this datacenter in Property Manager\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "The latitude value for the data center. This member supports six decimal places of precision.\n"
                },
                "livenessHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings that represent the origin servers used to poll the data centers in an application load balancer configuration. These servers support basic HTTP polling.\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "The longitude value for the data center. This member supports six decimal places of precision.\n"
                },
                "originId": {
                    "type": "string",
                    "description": "The id of an origin that represents the data center. The conditional origin, which is defined in the Property Manager API, must have an originType of either CUSTOMER or NET_STORAGE\n"
                },
                "percent": {
                    "type": "number",
                    "description": "The percent of traffic that is sent to the data center. The total for all data centers must equal 100%.\n"
                },
                "stateOrProvince": {
                    "type": "string",
                    "description": "The state, province, or region where the data center is located\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "cloudServerHostHeaderOverride",
                "cloudService",
                "continent",
                "country",
                "hostname",
                "latitude",
                "livenessHosts",
                "longitude",
                "originId",
                "percent",
                "stateOrProvince"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudletsApplicationLoadBalancerLivenessSetting:getCloudletsApplicationLoadBalancerLivenessSetting": {
            "properties": {
                "additionalHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Maps additional case-insensitive HTTP header names included to the liveness testing requests\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The Host header for the liveness HTTP request\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Describes how often the liveness test will be performed. Optional defaults to 60 seconds, minimum is 10 seconds.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the test object used for liveness testing. The function of the test object is to help determine whether the data center is functioning.\n"
                },
                "peerCertificateVerification": {
                    "type": "boolean",
                    "description": "Describes whether or not to validate the origin certificate for an HTTPS request\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port for the test object. The default port is 80, which is standard for HTTP. Enter 443 if you are using HTTPS.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol or scheme for the database, either HTTP or HTTPS.\n"
                },
                "requestString": {
                    "type": "string",
                    "description": "The request which will be used for TCP(S) tests\n"
                },
                "responseString": {
                    "type": "string",
                    "description": "The response which will be used for TCP(S) tests\n"
                },
                "status3xxFailure": {
                    "type": "boolean",
                    "description": "Set to true to mark the liveness test as failed when the request returns a 3xx (redirection) status code.\n"
                },
                "status4xxFailure": {
                    "type": "boolean",
                    "description": "Set to true to mark the liveness test as failed when the request returns a 4xx (client error) status code.\n"
                },
                "status5xxFailure": {
                    "type": "boolean",
                    "description": "Set to true to mark the liveness test as failed when the request returns a 5xx (server error) status code.\n"
                },
                "timeout": {
                    "type": "number",
                    "description": "The number of seconds the system waits before failing the liveness test. The default is 25 seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "additionalHeaders",
                "hostHeader",
                "interval",
                "path",
                "peerCertificateVerification",
                "port",
                "protocol",
                "requestString",
                "responseString",
                "status3xxFailure",
                "status4xxFailure",
                "status5xxFailure",
                "timeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRule:getCloudletsApplicationLoadBalancerMatchRuleMatchRule": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "If set to true, disables a rule so it is not evaluated against incoming requests.\n"
                },
                "end": {
                    "type": "integer",
                    "description": "The end time for this match (in seconds since the epoch)\n"
                },
                "forwardSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleForwardSetting:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleForwardSetting"
                    },
                    "description": "This property defines data used to construct a new request URL if all conditions are met. If all of the conditions you set are true, then the Edge Server returns an HTTP response from the rewritten URL\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Akamai internal use only\n"
                },
                "matchUrl": {
                    "type": "string",
                    "description": "If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatch:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatch"
                    },
                    "description": "Defines a set of match objects\n"
                },
                "matchesAlways": {
                    "type": "boolean",
                    "description": "Is used in some cloudlets to support default rules (rule that is always matched)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "start": {
                    "type": "integer",
                    "description": "The start time for this match (in seconds since the epoch)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Cloudlet the rule is for\n"
                }
            },
            "type": "object",
            "required": [
                "forwardSettings",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "forwardSettings"
                    ]
                }
            }
        },
        "akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleForwardSetting:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleForwardSetting": {
            "properties": {
                "originId": {
                    "type": "string",
                    "description": "The ID of the Conditional Origin requests are forwarded to\n"
                }
            },
            "type": "object",
            "required": [
                "originId"
            ]
        },
        "akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatch:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "If true, the match is case sensitive\n"
                },
                "checkIps": {
                    "type": "string",
                    "description": "For clientip, continent, countrycode, proxy, and regioncode match types, the part of the request that determines the IP address to use\n"
                },
                "matchOperator": {
                    "type": "string",
                    "description": "Valid entries for this property: contains, exists, and equals\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "The type of match used\n"
                },
                "matchValue": {
                    "type": "string",
                    "description": "Depends on the matchType\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "If true, negates the match\n"
                },
                "objectMatchValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValue"
                    },
                    "description": "An object used when a rule either includes more complex match criteria, like multiple value attributes, or a range match\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValue": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support this property: cookie, header, parameter, and query\n"
                },
                "nameCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property should be evaluated based on case sensitivity\n"
                },
                "nameHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property includes wildcards\n"
                },
                "options": {
                    "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValueOptions",
                    "description": "If using the object type, use this set to list the values to match on (use only with the object type)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The array type, which can be one of the following: object, range, or simple. Use the simple option when adding only an array of string-based values\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on (use only with simple or range type)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsApplicationLoadBalancerMatchRuleMatchRuleMatchObjectMatchValueOptions": {
            "properties": {
                "valueCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property should be evaluated based on case sensitivity\n"
                },
                "valueEscaped": {
                    "type": "boolean",
                    "description": "Set to true if provided value should be compared in escaped form\n"
                },
                "valueHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property include wildcards\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRule:getCloudletsAudienceSegmentationMatchRuleMatchRule": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "If set to true, disables a rule so it is not evaluated against incoming requests.\n"
                },
                "end": {
                    "type": "integer",
                    "description": "The end time for this match (in seconds since the epoch)\n"
                },
                "forwardSettings": {
                    "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings:getCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings",
                    "description": "This property defines data used to construct a new request URL if all conditions are met. If all of the conditions you set are true, then the Edge Server returns an HTTP response from the rewritten URL\n"
                },
                "matchUrl": {
                    "type": "string",
                    "description": "If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatch:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatch"
                    },
                    "description": "Defines a set of match objects\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "start": {
                    "type": "integer",
                    "description": "The start time for this match (in seconds since the epoch)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Cloudlet the rule is for\n"
                }
            },
            "type": "object",
            "required": [
                "forwardSettings",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "forwardSettings"
                    ]
                }
            }
        },
        "akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings:getCloudletsAudienceSegmentationMatchRuleMatchRuleForwardSettings": {
            "properties": {
                "originId": {
                    "type": "string",
                    "description": "The ID of the Conditional Origin requests are forwarded to\n"
                },
                "pathAndQs": {
                    "type": "string",
                    "description": "If a value is provided and match conditions are met, this property defines the path/resource/query string to rewrite URL for the incoming request.\n"
                },
                "useIncomingQueryString": {
                    "type": "boolean",
                    "description": "If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatch:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "If true, the match is case sensitive\n"
                },
                "checkIps": {
                    "type": "string",
                    "description": "For clientip, continent, countrycode, proxy, and regioncode match types, the part of the request that determines the IP address to use\n"
                },
                "matchOperator": {
                    "type": "string",
                    "description": "Valid entries for this property: contains, exists, and equals\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "The type of match used\n"
                },
                "matchValue": {
                    "type": "string",
                    "description": "Depends on the matchType\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "If true, negates the match\n"
                },
                "objectMatchValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValue"
                    },
                    "description": "An object used when a rule either includes more complex match criteria, like multiple value attributes\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValue": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support this property: cookie, header, parameter, and query\n"
                },
                "nameCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property should be evaluated based on case sensitivity\n"
                },
                "nameHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property includes wildcards\n"
                },
                "options": {
                    "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueOptions",
                    "description": "If using the object type, use this set to list the values to match on (use only with the object type)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The array type, which can be one of the following: object or simple or range. Use the simple option when adding only an array of string-based values\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on (use only with simple or range type)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsAudienceSegmentationMatchRuleMatchRuleMatchObjectMatchValueOptions": {
            "properties": {
                "valueCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property should be evaluated based on case sensitivity\n"
                },
                "valueEscaped": {
                    "type": "boolean",
                    "description": "Set to true if provided value should be compared in escaped form\n"
                },
                "valueHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property include wildcards\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRule:getCloudletsEdgeRedirectorMatchRuleMatchRule": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "If set to true, disables a rule so it is not evaluated against incoming requests.\n"
                },
                "end": {
                    "type": "integer",
                    "description": "The end time for this match (in seconds since the epoch)\n"
                },
                "matchUrl": {
                    "type": "string",
                    "description": "If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatch:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatch"
                    },
                    "description": "Defines a set of match objects\n"
                },
                "matchesAlways": {
                    "type": "boolean",
                    "description": "Is used in some cloudlets to support default rules (rule that is always matched)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "The URL Edge Redirector redirects the request to. If using use_relative_url, you can enter a path for the value\n"
                },
                "start": {
                    "type": "integer",
                    "description": "The start time for this match (in seconds since the epoch)\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The HTTP response status code (allowed values: 301, 302, 303, 307, 308)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Cloudlet the rule is for\n"
                },
                "useIncomingQueryString": {
                    "type": "boolean",
                    "description": "If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL\n"
                },
                "useRelativeUrl": {
                    "type": "string",
                    "description": "If set to relative_url, takes the path entered for the redirectUrl and sets it in the response’s Location header. If set to copy_scheme_hostname, creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the redirectUrl. If this property is not included, or is set to none, then the\u003cspan pulumi-lang-nodejs=\" redirectUrl \" pulumi-lang-dotnet=\" RedirectUrl \" pulumi-lang-go=\" redirectUrl \" pulumi-lang-python=\" redirect_url \" pulumi-lang-yaml=\" redirectUrl \" pulumi-lang-java=\" redirectUrl \"\u003e redirect_url \u003c/span\u003eshould be fully-qualified URL\n"
                }
            },
            "type": "object",
            "required": [
                "redirectUrl",
                "statusCode",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "redirectUrl",
                        "statusCode"
                    ]
                }
            }
        },
        "akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatch:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "If true, the match is case sensitive\n"
                },
                "checkIps": {
                    "type": "string",
                    "description": "For clientip, continent, countrycode, proxy, and regioncode match types, the part of the request that determines the IP address to use\n"
                },
                "matchOperator": {
                    "type": "string",
                    "description": "Valid entries for this property: contains, exists, and equals\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "The type of match used\n"
                },
                "matchValue": {
                    "type": "string",
                    "description": "Depends on the matchType\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "If true, negates the match\n"
                },
                "objectMatchValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValue"
                    },
                    "description": "An object used when a rule either includes more complex match criteria, like multiple value attributes\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValue": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support this property: cookie, header, parameter, and query\n"
                },
                "nameCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property should be evaluated based on case sensitivity\n"
                },
                "nameHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property includes wildcards\n"
                },
                "options": {
                    "$ref": "#/types/akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValueOptions",
                    "description": "If using the object type, use this set to list the values to match on (use only with the object type)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The array type, which can be one of the following: object or simple. Use the simple option when adding only an array of string-based values\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on (use only with simple type)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsEdgeRedirectorMatchRuleMatchRuleMatchObjectMatchValueOptions": {
            "properties": {
                "valueCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property should be evaluated based on case sensitivity\n"
                },
                "valueEscaped": {
                    "type": "boolean",
                    "description": "Set to true if provided value should be compared in escaped form\n"
                },
                "valueHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property include wildcards\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsForwardRewriteMatchRuleMatchRule:getCloudletsForwardRewriteMatchRuleMatchRule": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "If set to true, disables a rule so it is not evaluated against incoming requests.\n"
                },
                "end": {
                    "type": "integer",
                    "description": "The end time for this match (in seconds since the epoch)\n"
                },
                "forwardSettings": {
                    "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleForwardSettings:getCloudletsForwardRewriteMatchRuleMatchRuleForwardSettings",
                    "description": "This property defines data used to construct a new request URL if all conditions are met. If all of the conditions you set are true, then the Edge Server returns an HTTP response from the rewritten URL\n"
                },
                "matchUrl": {
                    "type": "string",
                    "description": "If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatch:getCloudletsForwardRewriteMatchRuleMatchRuleMatch"
                    },
                    "description": "Defines a set of match objects\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "start": {
                    "type": "integer",
                    "description": "The start time for this match (in seconds since the epoch)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Cloudlet the rule is for\n"
                }
            },
            "type": "object",
            "required": [
                "forwardSettings",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "forwardSettings"
                    ]
                }
            }
        },
        "akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleForwardSettings:getCloudletsForwardRewriteMatchRuleMatchRuleForwardSettings": {
            "properties": {
                "originId": {
                    "type": "string",
                    "description": "The ID of the Conditional Origin requests are forwarded to\n"
                },
                "pathAndQs": {
                    "type": "string",
                    "description": "If a value is provided and match conditions are met, this property defines the path/resource/query string to rewrite URL for the incoming request.\n"
                },
                "useIncomingQueryString": {
                    "type": "boolean",
                    "description": "If set to true, the Cloudlet includes the query string from the request in the rewritten or forwarded URL.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatch:getCloudletsForwardRewriteMatchRuleMatchRuleMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "If true, the match is case sensitive\n"
                },
                "checkIps": {
                    "type": "string",
                    "description": "For clientip, continent, countrycode, proxy, and regioncode match types, the part of the request that determines the IP address to use\n"
                },
                "matchOperator": {
                    "type": "string",
                    "description": "Valid entries for this property: contains, exists, and equals\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "The type of match used\n"
                },
                "matchValue": {
                    "type": "string",
                    "description": "Depends on the matchType\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "If true, negates the match\n"
                },
                "objectMatchValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue"
                    },
                    "description": "An object used when a rule either includes more complex match criteria, like multiple value attributes\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValue": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support this property: cookie, header, parameter, and query\n"
                },
                "nameCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property should be evaluated based on case sensitivity\n"
                },
                "nameHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property includes wildcards\n"
                },
                "options": {
                    "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptions",
                    "description": "If using the object type, use this set to list the values to match on (use only with the object type)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The array type, which can be one of the following: object or simple. Use the simple option when adding only an array of string-based values\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on (use only with simple or range type)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "akamai:index/getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsForwardRewriteMatchRuleMatchRuleMatchObjectMatchValueOptions": {
            "properties": {
                "valueCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property should be evaluated based on case sensitivity\n"
                },
                "valueEscaped": {
                    "type": "boolean",
                    "description": "Set to true if provided value should be compared in escaped form\n"
                },
                "valueHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property include wildcards\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRule:getCloudletsPhasedReleaseMatchRuleMatchRule": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "If set to true, disables a rule so it is not evaluated against incoming requests.\n"
                },
                "end": {
                    "type": "integer",
                    "description": "The end time for this match (in seconds since the epoch)\n"
                },
                "forwardSettings": {
                    "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleForwardSettings:getCloudletsPhasedReleaseMatchRuleMatchRuleForwardSettings",
                    "description": "This property defines data used to construct a new request URL if all conditions are met. If all of the conditions you set are true, then the Edge Server returns an HTTP response from the rewritten URL\n"
                },
                "matchUrl": {
                    "type": "string",
                    "description": "If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatch:getCloudletsPhasedReleaseMatchRuleMatchRuleMatch"
                    },
                    "description": "Defines a set of match objects\n"
                },
                "matchesAlways": {
                    "type": "boolean",
                    "description": "Is used in some cloudlets to support default rules (rule that is always matched)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "start": {
                    "type": "integer",
                    "description": "The start time for this match (in seconds since the epoch)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Cloudlet the rule is for. It is known as Continuous Deployment (CD) too.\n"
                }
            },
            "type": "object",
            "required": [
                "forwardSettings",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "forwardSettings"
                    ]
                }
            }
        },
        "akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleForwardSettings:getCloudletsPhasedReleaseMatchRuleMatchRuleForwardSettings": {
            "properties": {
                "originId": {
                    "type": "string",
                    "description": "The ID of the Conditional Origin requests are forwarded to\n"
                },
                "percent": {
                    "type": "integer",
                    "description": "The percent of traffic that is sent to the data center.\n"
                }
            },
            "type": "object",
            "required": [
                "originId",
                "percent"
            ]
        },
        "akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatch:getCloudletsPhasedReleaseMatchRuleMatchRuleMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "If true, the match is case sensitive\n"
                },
                "checkIps": {
                    "type": "string",
                    "description": "For clientip, continent, countrycode, proxy, and regioncode match types, the part of the request that determines the IP address to use\n"
                },
                "matchOperator": {
                    "type": "string",
                    "description": "Valid entries for this property: contains, exists, and equals\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "The type of match used\n"
                },
                "matchValue": {
                    "type": "string",
                    "description": "Depends on the matchType\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "If true, negates the match\n"
                },
                "objectMatchValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue"
                    },
                    "description": "An object used when a rule either includes more complex match criteria, like multiple value attributes\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValue": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support this property: cookie, header, parameter, and query\n"
                },
                "nameCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property should be evaluated based on case sensitivity\n"
                },
                "nameHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property includes wildcards\n"
                },
                "options": {
                    "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValueOptions",
                    "description": "If using the object type, use this set to list the values to match on (use only with the object type)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The array type, which can be one of the following: object or simple. Use the simple option when adding only an array of string-based values\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on (use only with simple or range type)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsPhasedReleaseMatchRuleMatchRuleMatchObjectMatchValueOptions": {
            "properties": {
                "valueCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property should be evaluated based on case sensitivity\n"
                },
                "valueEscaped": {
                    "type": "boolean",
                    "description": "Set to true if provided value should be compared in escaped form\n"
                },
                "valueHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property include wildcards\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsPolicyActivation:getCloudletsPolicyActivation": {
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "description": "The specific version of this API.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The network type, either 'staging' or 'prod' where a property or a Cloudlet policy has been activated.\n"
                },
                "policyInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsPolicyActivationPolicyInfo:getCloudletsPolicyActivationPolicyInfo"
                    },
                    "description": "The object containing Cloudlet policy information.\n"
                },
                "propertyInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsPolicyActivationPropertyInfo:getCloudletsPolicyActivationPropertyInfo"
                    },
                    "description": "A set containing information about the property associated with a particular Cloudlet policy.\n"
                }
            },
            "type": "object",
            "required": [
                "apiVersion",
                "network",
                "policyInfos",
                "propertyInfos"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudletsPolicyActivationPolicyInfo:getCloudletsPolicyActivationPolicyInfo": {
            "properties": {
                "activatedBy": {
                    "type": "string",
                    "description": "The name of the user who activated the policy.\n"
                },
                "activationDate": {
                    "type": "integer",
                    "description": "The date on which the policy was activated (in milliseconds since Epoch).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the policy.\n"
                },
                "policyId": {
                    "type": "integer",
                    "description": "An integer ID that is associated with all versions of a policy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The activation status for the policy: active, inactive, deactivated, pending or failed.\n"
                },
                "statusDetail": {
                    "type": "string",
                    "description": "Information about the status of an activation operation.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of the activated policy.\n"
                }
            },
            "type": "object",
            "required": [
                "activatedBy",
                "activationDate",
                "name",
                "policyId",
                "status",
                "statusDetail",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudletsPolicyActivationPropertyInfo:getCloudletsPolicyActivationPropertyInfo": {
            "properties": {
                "activatedBy": {
                    "type": "string",
                    "description": "The name of the user who activated the property.\n"
                },
                "activationDate": {
                    "type": "integer",
                    "description": "The date on which the property was activated (in milliseconds since Epoch).\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "Defines the group association for the policy or property.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the property.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The activation status for the property. Can be active, inactive, deactivated, pending or failed.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of the activated property.\n"
                }
            },
            "type": "object",
            "required": [
                "activatedBy",
                "activationDate",
                "groupId",
                "name",
                "status",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudletsRequestControlMatchRuleMatchRule:getCloudletsRequestControlMatchRuleMatchRule": {
            "properties": {
                "allowDeny": {
                    "type": "string",
                    "description": "If set to allow, the request is sent to origin when all conditions are true. If deny, the request is denied when all conditions are true. If denybranded, the request is denied and rerouted according to the configuration of the Request Control behavior\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "If set to true, disables a rule so it is not evaluated against incoming requests.\n"
                },
                "end": {
                    "type": "integer",
                    "description": "The end time for this match (in seconds since the epoch)\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatch:getCloudletsRequestControlMatchRuleMatchRuleMatch"
                    },
                    "description": "Defines a set of match objects\n"
                },
                "matchesAlways": {
                    "type": "boolean",
                    "description": "Is used in some cloudlets to support default rules (rule that is always matched)\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "start": {
                    "type": "integer",
                    "description": "The start time for this match (in seconds since the epoch)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Cloudlet the rule is for\n"
                }
            },
            "type": "object",
            "required": [
                "allowDeny",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "allowDeny"
                    ]
                }
            }
        },
        "akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatch:getCloudletsRequestControlMatchRuleMatchRuleMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "If true, the match is case sensitive\n"
                },
                "checkIps": {
                    "type": "string",
                    "description": "For clientip, continent, countrycode, proxy, and regioncode match types, the part of the request that determines the IP address to use\n"
                },
                "matchOperator": {
                    "type": "string",
                    "description": "Valid entries for this property: contains, exists, and equals\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "The type of match used\n"
                },
                "matchValue": {
                    "type": "string",
                    "description": "Depends on the matchType\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "If true, negates the match\n"
                },
                "objectMatchValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValue"
                    },
                    "description": "An object used when a rule either includes more complex match criteria, like multiple value attributes\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValue": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support this property: cookie, header, parameter, and query\n"
                },
                "nameCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property should be evaluated based on case sensitivity\n"
                },
                "nameHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property includes wildcards\n"
                },
                "options": {
                    "$ref": "#/types/akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValueOptions",
                    "description": "If using the object type, use this set to list the values to match on (use only with the object type)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The array type, which can be one of the following: object or simple. Use the simple option when adding only an array of string-based values\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on (use only with simple type)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "akamai:index/getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsRequestControlMatchRuleMatchRuleMatchObjectMatchValueOptions": {
            "properties": {
                "valueCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property should be evaluated based on case sensitivity\n"
                },
                "valueEscaped": {
                    "type": "boolean",
                    "description": "Set to true if provided value should be compared in escaped form\n"
                },
                "valueHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property include wildcards\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsSharedPolicyActivations:getCloudletsSharedPolicyActivations": {
            "properties": {
                "production": {
                    "$ref": "#/types/akamai:index/getCloudletsSharedPolicyActivationsProduction:getCloudletsSharedPolicyActivationsProduction",
                    "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.\n"
                },
                "staging": {
                    "$ref": "#/types/akamai:index/getCloudletsSharedPolicyActivationsStaging:getCloudletsSharedPolicyActivationsStaging",
                    "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsSharedPolicyActivationsProduction:getCloudletsSharedPolicyActivationsProduction": {
            "properties": {
                "effective": {
                    "$ref": "#/types/akamai:index/getCloudletsSharedPolicyActivationsProductionEffective:getCloudletsSharedPolicyActivationsProductionEffective",
                    "description": "The status of the activation that's currently in use on this network, or null if the policy has no activations.\n"
                },
                "latest": {
                    "$ref": "#/types/akamai:index/getCloudletsSharedPolicyActivationsProductionLatest:getCloudletsSharedPolicyActivationsProductionLatest",
                    "description": "The status of the latest activation or null if the policy has no activations.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsSharedPolicyActivationsProductionEffective:getCloudletsSharedPolicyActivationsProductionEffective": {
            "properties": {
                "activationId": {
                    "type": "integer",
                    "description": "Identifies the activation.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The username who created the activation.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the activation was created.\n"
                },
                "finishDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in 'failureDetails'.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The networks where you can activate or deactivate the policy version, either 'PRODUCTION' or 'STAGING'.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "The operations that you can perform on a policy version, either 'ACTIVATION' or 'DEACTIVATION'.\n"
                },
                "policyId": {
                    "type": "integer",
                    "description": "Identifies the shared policy.\n"
                },
                "policyVersion": {
                    "type": "integer",
                    "description": "The number of the policy version.\n"
                },
                "policyVersionDeleted": {
                    "type": "boolean",
                    "description": "Indicates if the policy version is deleted.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the operation, either 'IN_PROGRESS', 'SUCCESS', or 'FAILED'.\n"
                }
            },
            "type": "object",
            "required": [
                "activationId",
                "createdBy",
                "createdDate",
                "finishDate",
                "network",
                "operation",
                "policyId",
                "policyVersion",
                "policyVersionDeleted",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudletsSharedPolicyActivationsProductionLatest:getCloudletsSharedPolicyActivationsProductionLatest": {
            "properties": {
                "activationId": {
                    "type": "integer",
                    "description": "Identifies the activation.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The username who created the activation.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the activation was created.\n"
                },
                "finishDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in 'failureDetails'.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The networks where you can activate or deactivate the policy version, either 'PRODUCTION' or 'STAGING'.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "The operations that you can perform on a policy version, either 'ACTIVATION' or 'DEACTIVATION'.\n"
                },
                "policyId": {
                    "type": "integer",
                    "description": "Identifies the shared policy.\n"
                },
                "policyVersion": {
                    "type": "integer",
                    "description": "The number of the policy version.\n"
                },
                "policyVersionDeleted": {
                    "type": "boolean",
                    "description": "Indicates if the policy version is deleted.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the operation, either 'IN_PROGRESS', 'SUCCESS', or 'FAILED'.\n"
                }
            },
            "type": "object",
            "required": [
                "activationId",
                "createdBy",
                "createdDate",
                "finishDate",
                "network",
                "operation",
                "policyId",
                "policyVersion",
                "policyVersionDeleted",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudletsSharedPolicyActivationsStaging:getCloudletsSharedPolicyActivationsStaging": {
            "properties": {
                "effective": {
                    "$ref": "#/types/akamai:index/getCloudletsSharedPolicyActivationsStagingEffective:getCloudletsSharedPolicyActivationsStagingEffective",
                    "description": "The status of the activation that's currently in use on this network, or null if the policy has no activations.\n"
                },
                "latest": {
                    "$ref": "#/types/akamai:index/getCloudletsSharedPolicyActivationsStagingLatest:getCloudletsSharedPolicyActivationsStagingLatest",
                    "description": "The status of the latest activation or null if the policy has no activations.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsSharedPolicyActivationsStagingEffective:getCloudletsSharedPolicyActivationsStagingEffective": {
            "properties": {
                "activationId": {
                    "type": "integer",
                    "description": "Identifies the activation.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The username who created the activation.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the activation was created.\n"
                },
                "finishDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in 'failureDetails'.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The networks where you can activate or deactivate the policy version, either 'PRODUCTION' or 'STAGING'.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "The operations that you can perform on a policy version, either 'ACTIVATION' or 'DEACTIVATION'.\n"
                },
                "policyId": {
                    "type": "integer",
                    "description": "Identifies the shared policy.\n"
                },
                "policyVersion": {
                    "type": "integer",
                    "description": "The number of the policy version.\n"
                },
                "policyVersionDeleted": {
                    "type": "boolean",
                    "description": "Indicates if the policy version is deleted.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the operation, either 'IN_PROGRESS', 'SUCCESS', or 'FAILED'.\n"
                }
            },
            "type": "object",
            "required": [
                "activationId",
                "createdBy",
                "createdDate",
                "finishDate",
                "network",
                "operation",
                "policyId",
                "policyVersion",
                "policyVersionDeleted",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudletsSharedPolicyActivationsStagingLatest:getCloudletsSharedPolicyActivationsStagingLatest": {
            "properties": {
                "activationId": {
                    "type": "integer",
                    "description": "Identifies the activation.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The username who created the activation.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the activation was created.\n"
                },
                "finishDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in 'failureDetails'.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The networks where you can activate or deactivate the policy version, either 'PRODUCTION' or 'STAGING'.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "The operations that you can perform on a policy version, either 'ACTIVATION' or 'DEACTIVATION'.\n"
                },
                "policyId": {
                    "type": "integer",
                    "description": "Identifies the shared policy.\n"
                },
                "policyVersion": {
                    "type": "integer",
                    "description": "The number of the policy version.\n"
                },
                "policyVersionDeleted": {
                    "type": "boolean",
                    "description": "Indicates if the policy version is deleted.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the operation, either 'IN_PROGRESS', 'SUCCESS', or 'FAILED'.\n"
                }
            },
            "type": "object",
            "required": [
                "activationId",
                "createdBy",
                "createdDate",
                "finishDate",
                "network",
                "operation",
                "policyId",
                "policyVersion",
                "policyVersionDeleted",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRule:getCloudletsVisitorPrioritizationMatchRuleMatchRule": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "If set to true, disables a rule so it is not evaluated against incoming requests.\n"
                },
                "end": {
                    "type": "integer",
                    "description": "The end time for this match (in seconds since the epoch)\n"
                },
                "matchUrl": {
                    "type": "string",
                    "description": "If using a URL match, this property is the URL that the Cloudlet uses to match the incoming request\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatch:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatch"
                    },
                    "description": "Defines a set of match objects\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule\n"
                },
                "passThroughPercent": {
                    "type": "number",
                    "description": "The range 0.0: 99.0 specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin. A value of -1 means send everyone to the waiting room.\n"
                },
                "start": {
                    "type": "integer",
                    "description": "The start time for this match (in seconds since the epoch)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of Cloudlet the rule is for\n"
                }
            },
            "type": "object",
            "required": [
                "passThroughPercent",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "passThroughPercent"
                    ]
                }
            }
        },
        "akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatch:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatch": {
            "properties": {
                "caseSensitive": {
                    "type": "boolean",
                    "description": "If true, the match is case sensitive\n"
                },
                "checkIps": {
                    "type": "string",
                    "description": "For clientip, continent, countrycode, proxy, and regioncode match types, the part of the request that determines the IP address to use\n"
                },
                "matchOperator": {
                    "type": "string",
                    "description": "Valid entries for this property: contains, exists, and equals\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "The type of match used\n"
                },
                "matchValue": {
                    "type": "string",
                    "description": "Depends on the matchType\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "If true, negates the match\n"
                },
                "objectMatchValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValue"
                    },
                    "description": "An object used when a rule either includes more complex match criteria, like multiple value attributes\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValue:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValue": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support this property: cookie, header, parameter, and query\n"
                },
                "nameCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property should be evaluated based on case sensitivity\n"
                },
                "nameHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entry for the name property includes wildcards\n"
                },
                "options": {
                    "$ref": "#/types/akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions",
                    "description": "If using the object type, use this set to list the values to match on (use only with the object type)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The array type, which can be one of the following: object or simple. Use the simple option when adding only an array of string-based values\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on (use only with simple type)\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions:getCloudletsVisitorPrioritizationMatchRuleMatchRuleMatchObjectMatchValueOptions": {
            "properties": {
                "valueCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property should be evaluated based on case sensitivity\n"
                },
                "valueEscaped": {
                    "type": "boolean",
                    "description": "Set to true if provided value should be compared in escaped form\n"
                },
                "valueHasWildcard": {
                    "type": "boolean",
                    "description": "Set to true if the entries for the value property include wildcards\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The value attributes in the incoming request to match on\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getCloudwrapperCapacitiesCapacity:getCloudwrapperCapacitiesCapacity": {
            "properties": {
                "approved": {
                    "$ref": "#/types/akamai:index/getCloudwrapperCapacitiesCapacityApproved:getCloudwrapperCapacitiesCapacityApproved",
                    "description": "Capacity allocated for the location.\n"
                },
                "assigned": {
                    "$ref": "#/types/akamai:index/getCloudwrapperCapacitiesCapacityAssigned:getCloudwrapperCapacitiesCapacityAssigned",
                    "description": "Capacity already assigned to Cloud Wrapper configurations.\n"
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID having Cloud Wrapper entitlement.\n"
                },
                "locationId": {
                    "type": "integer",
                    "description": "Unique identifier of the configured location.\n"
                },
                "locationName": {
                    "type": "string",
                    "description": "Name of the location.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of property this capacity is related to.\n"
                },
                "unassigned": {
                    "$ref": "#/types/akamai:index/getCloudwrapperCapacitiesCapacityUnassigned:getCloudwrapperCapacitiesCapacityUnassigned",
                    "description": "Capacity value that can be assigned to Cloud Wrapper configurations.\n"
                }
            },
            "type": "object",
            "required": [
                "approved",
                "assigned",
                "contractId",
                "locationId",
                "locationName",
                "type",
                "unassigned"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperCapacitiesCapacityApproved:getCloudwrapperCapacitiesCapacityApproved": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "akamai:index/getCloudwrapperCapacitiesCapacityAssigned:getCloudwrapperCapacitiesCapacityAssigned": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "akamai:index/getCloudwrapperCapacitiesCapacityUnassigned:getCloudwrapperCapacitiesCapacityUnassigned": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "akamai:index/getCloudwrapperConfigurationLocation:getCloudwrapperConfigurationLocation": {
            "properties": {
                "capacity": {
                    "$ref": "#/types/akamai:index/getCloudwrapperConfigurationLocationCapacity:getCloudwrapperConfigurationLocationCapacity",
                    "description": "The capacity assigned to this configuration's location.\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Additional comments provided by user.\n"
                },
                "mapName": {
                    "type": "string",
                    "description": "The name of the map.\n"
                },
                "trafficTypeId": {
                    "type": "integer",
                    "description": "Unique identifier for the location and traffic type combination.\n"
                }
            },
            "type": "object",
            "required": [
                "capacity",
                "comments",
                "mapName",
                "trafficTypeId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationLocationCapacity:getCloudwrapperConfigurationLocationCapacity": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "akamai:index/getCloudwrapperConfigurationMultiCdnSettings:getCloudwrapperConfigurationMultiCdnSettings": {
            "properties": {
                "bocc": {
                    "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettingsBocc:getCloudwrapperConfigurationMultiCdnSettingsBocc",
                    "description": "Specify diagnostic data beacons details.\n"
                },
                "cdns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettingsCdn:getCloudwrapperConfigurationMultiCdnSettingsCdn"
                    },
                    "description": "List of CDN added for the configuration.\n"
                },
                "dataStreams": {
                    "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettingsDataStreams:getCloudwrapperConfigurationMultiCdnSettingsDataStreams",
                    "description": "Specifies data streams details.\n"
                },
                "enableSoftAlerts": {
                    "type": "boolean",
                    "description": "Option to opt out of alerts based on soft limits of bandwidth usage.\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettingsOrigin:getCloudwrapperConfigurationMultiCdnSettingsOrigin"
                    },
                    "description": "List of origins corresponding to the properties selected in the configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "enableSoftAlerts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationMultiCdnSettingsBocc:getCloudwrapperConfigurationMultiCdnSettingsBocc": {
            "properties": {
                "conditionalSamplingFrequency": {
                    "type": "string",
                    "description": "The sampling frequency of requests and forwards for EDGE, MIDGRESS, and ORIGIN beacons.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic data beacons for consumption by the Broadcast Operations Control Center.\n"
                },
                "forwardType": {
                    "type": "string",
                    "description": "Select whether to beacon diagnostics data for internal ORIGIN_ONLY, MIDGRESS_ONLY, or both ORIGIN_AND_MIDGRESS forwards.\n"
                },
                "requestType": {
                    "type": "string",
                    "description": "Select whether to beacon diagnostics data for EDGE_ONLY or EDGE_AND_MIDGRESS requests.\n"
                },
                "samplingFrequency": {
                    "type": "string",
                    "description": "The sampling frequency of requests and forwards for EDGE, MIDGRESS, and ORIGIN beacons.\n"
                }
            },
            "type": "object",
            "required": [
                "conditionalSamplingFrequency",
                "enabled",
                "forwardType",
                "requestType",
                "samplingFrequency"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationMultiCdnSettingsCdn:getCloudwrapperConfigurationMultiCdnSettingsCdn": {
            "properties": {
                "cdnAuthKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKey:getCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKey"
                    },
                    "description": "List of auth keys configured for the CDN.\n"
                },
                "cdnCode": {
                    "type": "string",
                    "description": "Unique identifier for the CDN.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable CDN.\n"
                },
                "httpsOnly": {
                    "type": "boolean",
                    "description": "Specify whether CDN communication is HTTPS only.\n"
                },
                "ipAclCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Configure an access control list using IP addresses in CIDR notation.\n"
                }
            },
            "type": "object",
            "required": [
                "cdnCode",
                "enabled",
                "httpsOnly",
                "ipAclCidrs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKey:getCloudwrapperConfigurationMultiCdnSettingsCdnCdnAuthKey": {
            "properties": {
                "authKeyName": {
                    "type": "string",
                    "description": "The name of the auth key.\n"
                },
                "expiryDate": {
                    "type": "string",
                    "description": "The expirty date of an auth key.\n"
                },
                "headerName": {
                    "type": "string",
                    "description": "The header name of an auth key.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The secret of an auth key.\n"
                }
            },
            "type": "object",
            "required": [
                "authKeyName",
                "expiryDate",
                "headerName",
                "secret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationMultiCdnSettingsDataStreams:getCloudwrapperConfigurationMultiCdnSettingsDataStreams": {
            "properties": {
                "dataStreamIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifiers of the Data Streams.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables DataStream reporting.\n"
                },
                "samplingRate": {
                    "type": "integer",
                    "description": "Specifies the percentage of log data you want to collect for this configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "dataStreamIds",
                "enabled",
                "samplingRate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationMultiCdnSettingsOrigin:getCloudwrapperConfigurationMultiCdnSettingsOrigin": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": "Origins hostname corresponding to the Akamai Delivery Property.\n"
                },
                "originId": {
                    "type": "string",
                    "description": "Origin identifier and will be used to generated Multi CDN host names.\n"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "Property ID of the property that origin belongs to.\n"
                }
            },
            "type": "object",
            "required": [
                "hostname",
                "originId",
                "propertyId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationsConfiguration:getCloudwrapperConfigurationsConfiguration": {
            "properties": {
                "capacityAlertsThreshold": {
                    "type": "integer",
                    "description": "Represents the threshold for sending alerts.\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Additional information provided by user which can help to differentiate or track changes of the configuration.\n"
                },
                "configName": {
                    "type": "string",
                    "description": "Name of the configuration.\n"
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID with Cloud Wrapper entitlement.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique identifier of a Cloud Wrapper configuration.\n"
                },
                "lastActivatedBy": {
                    "type": "string",
                    "description": "User to last activate the configuration.\n"
                },
                "lastActivatedDate": {
                    "type": "string",
                    "description": "ISO format date that represents when the configuration was last activated successfully.\n"
                },
                "lastUpdatedBy": {
                    "type": "string",
                    "description": "User to last modify the configuration.\n"
                },
                "lastUpdatedDate": {
                    "type": "string",
                    "description": "ISO format date that represents when the configuration was last edited.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationLocation:getCloudwrapperConfigurationsConfigurationLocation"
                    },
                    "description": "List of all unused properties.\n"
                },
                "multiCdnSettings": {
                    "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettings:getCloudwrapperConfigurationsConfigurationMultiCdnSettings",
                    "description": "Specify details about the Multi CDN settings.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email addresses to receive notifications.\n"
                },
                "propertyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of properties belonging to media delivery products. Properties need to be unique across configurations.\n"
                },
                "retainIdleObjects": {
                    "type": "boolean",
                    "description": "Retain idle objects beyond their max idle lifetime.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current state of the provisioning of the configuration, either SAVED, IN_PROGRESS, ACTIVE, DELETE_IN_PROGRESS, or FAILED.\n"
                }
            },
            "type": "object",
            "required": [
                "capacityAlertsThreshold",
                "comments",
                "configName",
                "contractId",
                "id",
                "lastActivatedBy",
                "lastActivatedDate",
                "lastUpdatedBy",
                "lastUpdatedDate",
                "notificationEmails",
                "propertyIds",
                "retainIdleObjects",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationsConfigurationLocation:getCloudwrapperConfigurationsConfigurationLocation": {
            "properties": {
                "capacity": {
                    "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationLocationCapacity:getCloudwrapperConfigurationsConfigurationLocationCapacity",
                    "description": "The capacity assigned to this configuration's location.\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Additional comments provided by user.\n"
                },
                "mapName": {
                    "type": "string",
                    "description": "The name of the map.\n"
                },
                "trafficTypeId": {
                    "type": "integer",
                    "description": "Unique identifier for the location and traffic type combination.\n"
                }
            },
            "type": "object",
            "required": [
                "capacity",
                "comments",
                "mapName",
                "trafficTypeId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationsConfigurationLocationCapacity:getCloudwrapperConfigurationsConfigurationLocationCapacity": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettings:getCloudwrapperConfigurationsConfigurationMultiCdnSettings": {
            "properties": {
                "bocc": {
                    "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc",
                    "description": "Specify diagnostic data beacons details.\n"
                },
                "cdns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn"
                    },
                    "description": "List of CDN added for the configuration.\n"
                },
                "dataStreams": {
                    "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams",
                    "description": "Specifies data streams details.\n"
                },
                "enableSoftAlerts": {
                    "type": "boolean",
                    "description": "Option to opt out of alerts based on soft limits of bandwidth usage.\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin"
                    },
                    "description": "List of origins corresponding to the properties selected in the configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "enableSoftAlerts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsBocc": {
            "properties": {
                "conditionalSamplingFrequency": {
                    "type": "string",
                    "description": "The sampling frequency of requests and forwards for EDGE, MIDGRESS, and ORIGIN beacons.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic data beacons for consumption by the Broadcast Operations Control Center.\n"
                },
                "forwardType": {
                    "type": "string",
                    "description": "Select whether to beacon diagnostics data for internal ORIGIN_ONLY, MIDGRESS_ONLY, or both ORIGIN_AND_MIDGRESS forwards.\n"
                },
                "requestType": {
                    "type": "string",
                    "description": "Select whether to beacon diagnostics data for EDGE_ONLY or EDGE_AND_MIDGRESS requests.\n"
                },
                "samplingFrequency": {
                    "type": "string",
                    "description": "The sampling frequency of requests and forwards for EDGE, MIDGRESS, and ORIGIN beacons.\n"
                }
            },
            "type": "object",
            "required": [
                "conditionalSamplingFrequency",
                "enabled",
                "forwardType",
                "requestType",
                "samplingFrequency"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdn": {
            "properties": {
                "cdnAuthKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdnCdnAuthKey:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdnCdnAuthKey"
                    },
                    "description": "List of auth keys configured for the CDN.\n"
                },
                "cdnCode": {
                    "type": "string",
                    "description": "Unique identifier for the CDN.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable CDN.\n"
                },
                "httpsOnly": {
                    "type": "boolean",
                    "description": "Specify whether CDN communication is HTTPS only.\n"
                },
                "ipAclCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Configure an access control list using IP addresses in CIDR notation.\n"
                }
            },
            "type": "object",
            "required": [
                "cdnCode",
                "enabled",
                "httpsOnly",
                "ipAclCidrs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdnCdnAuthKey:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsCdnCdnAuthKey": {
            "properties": {
                "authKeyName": {
                    "type": "string",
                    "description": "The name of the auth key.\n"
                },
                "expiryDate": {
                    "type": "string",
                    "description": "The expirty date of an auth key.\n"
                },
                "headerName": {
                    "type": "string",
                    "description": "The header name of an auth key.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The secret of an auth key.\n"
                }
            },
            "type": "object",
            "required": [
                "authKeyName",
                "expiryDate",
                "headerName",
                "secret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsDataStreams": {
            "properties": {
                "dataStreamIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Unique identifiers of the Data Streams.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables DataStream reporting.\n"
                },
                "samplingRate": {
                    "type": "integer",
                    "description": "Specifies the percentage of log data you want to collect for this configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "dataStreamIds",
                "enabled",
                "samplingRate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin:getCloudwrapperConfigurationsConfigurationMultiCdnSettingsOrigin": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": "Origins hostname corresponding to the Akamai Delivery Property.\n"
                },
                "originId": {
                    "type": "string",
                    "description": "Origin identifier and will be used to generated Multi CDN host names.\n"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "Property ID of the property that origin belongs to.\n"
                }
            },
            "type": "object",
            "required": [
                "hostname",
                "originId",
                "propertyId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperLocationsLocation:getCloudwrapperLocationsLocation": {
            "properties": {
                "locationId": {
                    "type": "integer",
                    "description": "Unique identifier of the location.\n"
                },
                "locationName": {
                    "type": "string",
                    "description": "Name of the location.\n"
                },
                "multiCdnLocationId": {
                    "type": "string",
                    "description": "Unique identifier of the multi CDN location.\n"
                },
                "trafficTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getCloudwrapperLocationsLocationTrafficType:getCloudwrapperLocationsLocationTrafficType"
                    },
                    "description": "List of traffic types for the location.\n"
                }
            },
            "type": "object",
            "required": [
                "locationId",
                "locationName",
                "multiCdnLocationId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperLocationsLocationTrafficType:getCloudwrapperLocationsLocationTrafficType": {
            "properties": {
                "locationId": {
                    "type": "string",
                    "description": "Represents the failover map.\n"
                },
                "trafficType": {
                    "type": "string",
                    "description": "Represents the traffic type. LIVE applies to low-latency media traffic, such as live streaming. LIVE_VOD applies to redundant media traffic, like video on demand content. WEB_STANDARD_TLS or WEB_ENHANCED_TLS applies to web content using Standard TLS security or Enhanced TLS security, respectively.\n"
                },
                "trafficTypeId": {
                    "type": "integer",
                    "description": "Unique identifier for the location and traffic type combination.\n"
                }
            },
            "type": "object",
            "required": [
                "locationId",
                "trafficType",
                "trafficTypeId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCloudwrapperPropertiesProperty:getCloudwrapperPropertiesProperty": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "description": "Contract ID having Cloud Wrapper entitlement.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "ID of the group which the property belongs to.\n"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "Property ID of the property.\n"
                },
                "propertyName": {
                    "type": "string",
                    "description": "Name of the property belonging to the origin.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of property. MEDIA applies to live or video on demand content. WEB applies to website or app content.\n"
                }
            },
            "type": "object",
            "required": [
                "contractId",
                "groupId",
                "propertyId",
                "propertyName",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getContractsContract:getContractsContract": {
            "properties": {
                "contractId": {
                    "type": "string"
                },
                "contractTypeName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "contractId",
                "contractTypeName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getCpCodesCpCode:getCpCodesCpCode": {
            "properties": {
                "cpCodeId": {
                    "type": "string",
                    "description": "The ID of a specific CP code.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the CP code was created.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the CP code.\n"
                },
                "productIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of of product IDs for a given CP code.\n"
                }
            },
            "type": "object",
            "required": [
                "cpCodeId",
                "createdDate",
                "name",
                "productIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getDatastreamActivationHistoryActivation:getDatastreamActivationHistoryActivation": {
            "properties": {
                "modifiedBy": {
                    "type": "string",
                    "description": "The username who activated or deactivated the stream\n"
                },
                "modifiedDate": {
                    "type": "string",
                    "description": "The date and time when activation status was modified\n"
                },
                "status": {
                    "type": "string",
                    "description": "Stream Status\n"
                },
                "streamId": {
                    "type": "integer",
                    "description": "Identifies the stream\n"
                },
                "streamVersion": {
                    "type": "integer",
                    "description": "Identifies the version of the stream\n"
                }
            },
            "type": "object",
            "required": [
                "modifiedBy",
                "modifiedDate",
                "status",
                "streamId",
                "streamVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getDatastreamDatasetFieldsDatasetField:getDatastreamDatasetFieldsDatasetField": {
            "properties": {
                "datasetFieldDescription": {
                    "type": "string",
                    "description": "Describes the data set field\n"
                },
                "datasetFieldGroup": {
                    "type": "string",
                    "description": "A name of the group for data set field\n"
                },
                "datasetFieldId": {
                    "type": "integer",
                    "description": "Identifies the field\n"
                },
                "datasetFieldJsonKey": {
                    "type": "string",
                    "description": "Specifies the JSON key for the field in a log line\n"
                },
                "datasetFieldName": {
                    "type": "string",
                    "description": "A name of the data set field\n"
                }
            },
            "type": "object",
            "required": [
                "datasetFieldDescription",
                "datasetFieldGroup",
                "datasetFieldId",
                "datasetFieldJsonKey",
                "datasetFieldName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getDatastreamsStreamsDetail:getDatastreamsStreamsDetail": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "description": "Identifies the contract that the stream is associated with.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The username who created the stream.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the stream was created.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "Identifies the group where the stream is created.\n"
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Identifies the latestVersion version of the stream.\n"
                },
                "modifiedBy": {
                    "type": "string",
                    "description": "The username who activated or deactivated the stream\n"
                },
                "modifiedDate": {
                    "type": "string",
                    "description": "The date and time when activation status was modified\n"
                },
                "productId": {
                    "type": "string",
                    "description": "The productId.\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getDatastreamsStreamsDetailProperty:getDatastreamsStreamsDetailProperty"
                    },
                    "description": "List of properties associated with the stream.\n"
                },
                "streamId": {
                    "type": "integer",
                    "description": "Identifies the stream.\n"
                },
                "streamName": {
                    "type": "string",
                    "description": "The name of the stream.\n"
                },
                "streamStatus": {
                    "type": "string",
                    "description": "The activation status of the stream.\n"
                },
                "streamVersion": {
                    "type": "integer",
                    "description": "Identifies the current version of the stream.\n"
                }
            },
            "type": "object",
            "required": [
                "contractId",
                "createdBy",
                "createdDate",
                "groupId",
                "latestVersion",
                "modifiedBy",
                "modifiedDate",
                "productId",
                "properties",
                "streamId",
                "streamName",
                "streamStatus",
                "streamVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getDatastreamsStreamsDetailProperty:getDatastreamsStreamsDetailProperty": {
            "properties": {
                "propertyId": {
                    "type": "integer",
                    "description": "The identifier of the property.\n"
                },
                "propertyName": {
                    "type": "string",
                    "description": "The descriptive label for the property.\n"
                }
            },
            "type": "object",
            "required": [
                "propertyId",
                "propertyName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGroupsGroup:getGroupsGroup": {
            "properties": {
                "contractIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupId": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "parentGroupId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "contractIds",
                "groupId",
                "groupName",
                "parentGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmAsmapAssignment:getGtmAsmapAssignment": {
            "properties": {
                "asNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Specifies an array of AS numbers.\n"
                },
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for the group.\n"
                }
            },
            "type": "object",
            "required": [
                "asNumbers",
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmAsmapDefaultDatacenter:getGtmAsmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "For each property, an identifier for all other AS zones\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for all other AS zones\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmAsmapLink:getGtmAsmapLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmCidrmapAssignment:getGtmCidrmapAssignment": {
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies an array of CIDR blocks.\n"
                },
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for the CIDR zone group.\n"
                }
            },
            "type": "object",
            "required": [
                "blocks",
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmCidrmapDefaultDatacenter:getGtmCidrmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "For each property, an identifier for all other CIDR zones' CNAME.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for all other CIDR blocks.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmCidrmapLink:getGtmCidrmapLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDatacenterDefaultLoadObject:getGtmDatacenterDefaultLoadObject": {
            "properties": {
                "loadObject": {
                    "type": "string",
                    "description": "Specifies the load object that GTM requests.\n"
                },
                "loadObjectPort": {
                    "type": "integer",
                    "description": "Specifies the TCP port to connect to when requesting the load object.\n"
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of servers to requests the load object from.\n"
                }
            },
            "type": "object",
            "required": [
                "loadObject",
                "loadObjectPort",
                "loadServers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDatacenterLink:getGtmDatacenterLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDatacentersDatacenter:getGtmDatacentersDatacenter": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The name of the city where the data center is located.\n"
                },
                "cloneOf": {
                    "type": "integer",
                    "description": "Identifies the data center's ID of which this data center is a clone.\n"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean",
                    "description": "Balances load between two or more servers in a cloud environment.\n"
                },
                "cloudServerTargeting": {
                    "type": "boolean",
                    "description": "Balances load between two or more servers in a cloud environment.\n"
                },
                "continent": {
                    "type": "string",
                    "description": "A two-letter code that specifies the continent where the data center maps to.\n"
                },
                "country": {
                    "type": "string",
                    "description": "A two-letter ISO 3166 country code that specifies the country where the data center is located.\n"
                },
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "defaultLoadObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDatacentersDatacenterDefaultLoadObject:getGtmDatacentersDatacenterDefaultLoadObject"
                    },
                    "description": "Specifies the load reporting interface between you and the GTM system.\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "Specifies the geographic latitude of the data center's position.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDatacentersDatacenterLink:getGtmDatacentersDatacenterLink"
                    },
                    "description": "Provides a URL path that allows direct navigation to a data center.\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "Specifies the geographic longitude of the data center's position.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for the datacenter.\n"
                },
                "scorePenalty": {
                    "type": "integer",
                    "description": "Influences the score for a datacenter.\n"
                },
                "servermonitorPool": {
                    "type": "string",
                    "description": "The name of the pool from which servermonitors are drawn for liveness tests in this datacenter. If omitted (null), the domain-wide default is used. (If no domain-wide default is specified, the pool used is all servermonitors in the same continent as the datacenter.)\n"
                },
                "stateOrProvince": {
                    "type": "string",
                    "description": "Specifies a two-letter ISO 3166 country code for the state of province, where the data center is located.\n"
                },
                "virtual": {
                    "type": "boolean",
                    "description": "Indicates whether or not the data center is virtual or physical.\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "cloneOf",
                "cloudServerHostHeaderOverride",
                "cloudServerTargeting",
                "continent",
                "country",
                "datacenterId",
                "defaultLoadObjects",
                "latitude",
                "links",
                "longitude",
                "nickname",
                "scorePenalty",
                "servermonitorPool",
                "stateOrProvince",
                "virtual"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDatacentersDatacenterDefaultLoadObject:getGtmDatacentersDatacenterDefaultLoadObject": {
            "properties": {
                "loadObject": {
                    "type": "string",
                    "description": "Specifies the load object that GTM requests.\n"
                },
                "loadObjectPort": {
                    "type": "integer",
                    "description": "Specifies the TCP port to connect to when requesting the load object.\n"
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of servers to requests the load object from.\n"
                }
            },
            "type": "object",
            "required": [
                "loadObject",
                "loadObjectPort",
                "loadServers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDatacentersDatacenterLink:getGtmDatacentersDatacenterLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainAsMap:getGtmDomainAsMap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainAsMapAssignment:getGtmDomainAsMapAssignment"
                    },
                    "description": "Contains information about the AS zone groupings of AS IDs.\n"
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/getGtmDomainAsMapDefaultDatacenter:getGtmDomainAsMapDefaultDatacenter",
                    "description": "A placeholder for all other AS zones, AS IDs not found in these AS zones.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainAsMapLink:getGtmDomainAsMapLink"
                    },
                    "description": "Specifies the URL path that allows direct navigation to the As map.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive label for the AS map.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainAsMapAssignment:getGtmDomainAsMapAssignment": {
            "properties": {
                "asNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Specifies an array of AS numbers.\n"
                },
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for all other AS zones.\n"
                }
            },
            "type": "object",
            "required": [
                "asNumbers",
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainAsMapDefaultDatacenter:getGtmDomainAsMapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "For each property, an identifier for all other AS zones' CNAME.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for all other AS zones.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainAsMapLink:getGtmDomainAsMapLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainCidrMap:getGtmDomainCidrMap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainCidrMapAssignment:getGtmDomainCidrMapAssignment"
                    },
                    "description": "Contains information about the CIDR zone groupings of CIDR blocks.\n"
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/getGtmDomainCidrMapDefaultDatacenter:getGtmDomainCidrMapDefaultDatacenter",
                    "description": "A placeholder for all other CIDR zones, CIDR blocks not found in these CIDR zones.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainCidrMapLink:getGtmDomainCidrMapLink"
                    },
                    "description": "Specifies the URL path that allows direct navigation to the CIDR map.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for the CIDR map.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainCidrMapAssignment:getGtmDomainCidrMapAssignment": {
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies an array of CIDR blocks.\n"
                },
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for all other AS zones.\n"
                }
            },
            "type": "object",
            "required": [
                "blocks",
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainCidrMapDefaultDatacenter:getGtmDomainCidrMapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "For each property, an identifier for all other CIDR zones' CNAME.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for all other CIDR blocks.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainCidrMapLink:getGtmDomainCidrMapLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainDatacenter:getGtmDomainDatacenter": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The name of the city where the data center is located.\n"
                },
                "cloneOf": {
                    "type": "integer",
                    "description": "Identifies the data center's ID of which this data center is a clone.\n"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean",
                    "description": "Balances load between two or more servers in a cloud environment.\n"
                },
                "cloudServerTargeting": {
                    "type": "boolean",
                    "description": "Balances load between two or more servers in a cloud environment.\n"
                },
                "continent": {
                    "type": "string",
                    "description": "A two-letter code that specifies the continent where the data center maps to.\n"
                },
                "country": {
                    "type": "string",
                    "description": "A two-letter ISO 3166 country code that specifies the country where the data center is located.\n"
                },
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "defaultLoadObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainDatacenterDefaultLoadObject:getGtmDomainDatacenterDefaultLoadObject"
                    },
                    "description": "Specifies the load reporting interface between you and the GTM system.\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "Specifies the geographic latitude of the data center's position.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainDatacenterLink:getGtmDomainDatacenterLink"
                    },
                    "description": "Provides a URL path that allows direct navigation to a data center.\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "Specifies the geographic longitude of the data center's position.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for the datacenter.\n"
                },
                "scorePenalty": {
                    "type": "integer",
                    "description": "Influences the score for a datacenter.\n"
                },
                "serverMonitorPool": {
                    "type": "string",
                    "description": "The name of the pool from which servermonitors are drawn for liveness tests in this datacenter. If omitted (null), the domain-wide default is used. (If no domain-wide default is specified, the pool used is all servermonitors in the same continent as the datacenter.).\n"
                },
                "stateOrProvince": {
                    "type": "string",
                    "description": "Specifies a two-letter ISO 3166 country code for the state of province, where the data center is located.\n"
                },
                "virtual": {
                    "type": "boolean",
                    "description": "Indicates whether or not the data center is virtual or physical.\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "cloneOf",
                "cloudServerHostHeaderOverride",
                "cloudServerTargeting",
                "continent",
                "country",
                "datacenterId",
                "latitude",
                "longitude",
                "nickname",
                "scorePenalty",
                "serverMonitorPool",
                "stateOrProvince",
                "virtual"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainDatacenterDefaultLoadObject:getGtmDomainDatacenterDefaultLoadObject": {
            "properties": {
                "loadObject": {
                    "type": "string",
                    "description": "Specifies the load object that GTM requests.\n"
                },
                "loadObjectPort": {
                    "type": "integer",
                    "description": "Specifies the TCP port to connect to when requesting the load object.\n"
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of servers to requests the load object from.\n"
                }
            },
            "type": "object",
            "required": [
                "loadObject",
                "loadObjectPort",
                "loadServers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainDatacenterLink:getGtmDomainDatacenterLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainGeographicMap:getGtmDomainGeographicMap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainGeographicMapAssignment:getGtmDomainGeographicMapAssignment"
                    },
                    "description": "Contains information about the geographic zone groupings of countries.\n"
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/getGtmDomainGeographicMapDefaultDatacenter:getGtmDomainGeographicMapDefaultDatacenter",
                    "description": "A placeholder for all other geographic zones, countries not found in these geographic zones.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainGeographicMapLink:getGtmDomainGeographicMapLink"
                    },
                    "description": "Specifies the URL path that allows direct navigation to the geographic map.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive label for the geographic map.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainGeographicMapAssignment:getGtmDomainGeographicMapAssignment": {
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies an array of two-letter ISO 3166 \u003cspan pulumi-lang-nodejs=\"`country`\" pulumi-lang-dotnet=\"`Country`\" pulumi-lang-go=\"`country`\" pulumi-lang-python=\"`country`\" pulumi-lang-yaml=\"`country`\" pulumi-lang-java=\"`country`\"\u003e`country`\u003c/span\u003e codes.\n"
                },
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for all other AS zones.\n"
                }
            },
            "type": "object",
            "required": [
                "countries",
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainGeographicMapDefaultDatacenter:getGtmDomainGeographicMapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "An identifier for all other geographic zones' CNAME.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for all other geographic zones.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainGeographicMapLink:getGtmDomainGeographicMapLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainLink:getGtmDomainLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainProperty:getGtmDomainProperty": {
            "properties": {
                "backupCname": {
                    "type": "string",
                    "description": "Specifies a backup CNAME.\n"
                },
                "backupIp": {
                    "type": "string",
                    "description": "Specifies a backup IP.\n"
                },
                "balanceByDownloadScore": {
                    "type": "boolean",
                    "description": "Indicates whether download score based load balancing is enabled.\n"
                },
                "cname": {
                    "type": "string",
                    "description": "Indicates the fully qualified name aliased to a particular property.\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Descriptive comments for the property.\n"
                },
                "dynamicTtl": {
                    "type": "integer",
                    "description": "Indicates the TTL in seconds for records that might change dynamically based on liveness and load balancing.\n"
                },
                "failbackDelay": {
                    "type": "integer",
                    "description": "Specifies the failback delay in seconds.\n"
                },
                "failoverDelay": {
                    "type": "integer",
                    "description": "Specifies the failover delay in seconds.\n"
                },
                "ghostDemandReporting": {
                    "type": "boolean",
                    "description": "Whether an alternate way to collect load feedback from a GTM Performance domain is enabled.\n"
                },
                "handoutLimit": {
                    "type": "integer",
                    "description": "Indicates the limit for the number of live IPs handed out to a DNS request.\n"
                },
                "handoutMode": {
                    "type": "string",
                    "description": "Specifies how IPs are returned when more than one IP is alive and available.\n"
                },
                "healthMax": {
                    "type": "number",
                    "description": "Defines the absolute limit beyond which IPs are declared unhealthy.\n"
                },
                "healthMultiplier": {
                    "type": "number",
                    "description": "Configures a cutoff value that is computed from the median scores.\n"
                },
                "healthThreshold": {
                    "type": "number",
                    "description": "Configures a cutoff value that is computed from the median scores.\n"
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "Indicates the type of IP address handed out by a property.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp that indicates when the property was last changed.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainPropertyLink:getGtmDomainPropertyLink"
                    },
                    "description": "Provides a URL path that allows direct navigation to the property.\n"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainPropertyLivenessTest:getGtmDomainPropertyLivenessTest"
                    },
                    "description": "Contains information about liveness tests.\n"
                },
                "loadImbalancePercentage": {
                    "type": "number",
                    "description": "Indicates the percent of load imbalance factor for the domain.\n"
                },
                "mapName": {
                    "type": "string",
                    "description": "A descriptive label for a geographic or a CIDR map that's required if the property is either geographic or cidrmapping.\n"
                },
                "maxUnreachablePenalty": {
                    "type": "integer",
                    "description": "For performance domains, this specifies a penalty value that's added to liveness test scores when data centers show an aggregated loss fraction higher than the penalty value.\n"
                },
                "minLiveFraction": {
                    "type": "number",
                    "description": "Specifies what fraction of the servers need to respond to requests so GTM considers the data center up and able to receive traffic.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive label for the property.\n"
                },
                "scoreAggregationType": {
                    "type": "string",
                    "description": "Specifies how GTM aggregates liveness test scores across different tests, when multiple tests are configured.\n"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainPropertyStaticRrSet:getGtmDomainPropertyStaticRrSet"
                    },
                    "description": "Contains static recordsets.\n"
                },
                "staticTtl": {
                    "type": "integer",
                    "description": "Specifies the TTL in seconds for static resource records that don't change based on the requesting name server IP.\n"
                },
                "sticknessBonusConstant": {
                    "type": "integer",
                    "description": "Specifies a percentage used to configure data center affinity.\n"
                },
                "sticknessBonusPercentage": {
                    "type": "integer",
                    "description": "Specifies a percentage used to configure data center affinity.\n"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainPropertyTrafficTarget:getGtmDomainPropertyTrafficTarget"
                    },
                    "description": "Traffic targets for the property.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the load balancing behvior for the property.\n"
                },
                "unreachableThreshold": {
                    "type": "number",
                    "description": "For performance domains, this specifies a penalty value that's added to liveness test scores when data centers have an aggregated loss fraction higher than this value.\n"
                },
                "useComputedTargets": {
                    "type": "boolean",
                    "description": "For load-feedback domains only, this specifies that you want GTM to automatically compute target load.\n"
                },
                "weightedHashBitsForIpv4": {
                    "type": "integer",
                    "description": "For weighted hashed properties, how many leading bits of the client nameserver IP address to include when computing a hash for picking a datacenter for a client nameserver using IPv4; the default value is 32 (the entire address).\n"
                },
                "weightedHashBitsForIpv6": {
                    "type": "integer",
                    "description": "For weighted hashed properties, how many leading bits of the client nameserver IP address to include when computing a hash for picking a datacenter for a client nameserver using IPv6; the default value is 128 (the entire address).\n"
                }
            },
            "type": "object",
            "required": [
                "backupCname",
                "backupIp",
                "balanceByDownloadScore",
                "cname",
                "comments",
                "dynamicTtl",
                "failbackDelay",
                "failoverDelay",
                "ghostDemandReporting",
                "handoutLimit",
                "handoutMode",
                "healthMax",
                "healthMultiplier",
                "healthThreshold",
                "ipv6",
                "lastModified",
                "loadImbalancePercentage",
                "mapName",
                "maxUnreachablePenalty",
                "minLiveFraction",
                "name",
                "scoreAggregationType",
                "staticTtl",
                "sticknessBonusConstant",
                "sticknessBonusPercentage",
                "type",
                "unreachableThreshold",
                "useComputedTargets",
                "weightedHashBitsForIpv4",
                "weightedHashBitsForIpv6"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainPropertyLink:getGtmDomainPropertyLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainPropertyLivenessTest:getGtmDomainPropertyLivenessTest": {
            "properties": {
                "alternateCaCertificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of alternate trust anchors (CA certificates)\n"
                },
                "answersRequired": {
                    "type": "boolean",
                    "description": "If testObjectProtocol is DNS, DOH or DOT, requires an answer to the DNS query to be considered a success.\n"
                },
                "disableNonstandardPortWarning": {
                    "type": "boolean",
                    "description": "Disables warnings when non-standard ports are used.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disables the liveness test.\n"
                },
                "errorPenalty": {
                    "type": "number",
                    "description": "Specifies the score that's reported if the liveness test encounters an error other than timeout, such as connection refused, and 404.\n"
                },
                "httpError3xx": {
                    "type": "boolean",
                    "description": "Treats a 3xx HTTP response as a failure if the testObjectProtocol is http, https or ftp.\n"
                },
                "httpError4xx": {
                    "type": "boolean",
                    "description": "Treats a 4xx HTTP response as a failure if the testObjectProtocol is http, https or ftp.\n"
                },
                "httpError5xx": {
                    "type": "boolean",
                    "description": "Treats a 5xx HTTP response as a failure if the testObjectProtocol is http, https or ftp.\n"
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainPropertyLivenessTestHttpHeader:getGtmDomainPropertyLivenessTestHttpHeader"
                    },
                    "description": "List of HTTP headers for the liveness test.\n"
                },
                "httpMethod": {
                    "type": "string",
                    "description": "Contains HTTP method to send if the `testObjectProtocol` is \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`https`\" pulumi-lang-dotnet=\"`Https`\" pulumi-lang-go=\"`https`\" pulumi-lang-python=\"`https`\" pulumi-lang-yaml=\"`https`\" pulumi-lang-java=\"`https`\"\u003e`https`\u003c/span\u003e. Supported values are `TRACE`, `HEAD`, `OPTIONS`, `GET`, `PUT`, `POST`, `PATCH`, `DELETE`. When omitted or \u003cspan pulumi-lang-nodejs=\"`null`\" pulumi-lang-dotnet=\"`Null`\" pulumi-lang-go=\"`null`\" pulumi-lang-python=\"`null`\" pulumi-lang-yaml=\"`null`\" pulumi-lang-java=\"`null`\"\u003e`null`\u003c/span\u003e, this value defaults to `GET`.\n"
                },
                "httpRequestBody": {
                    "type": "string",
                    "description": "Contains Base64-encoded HTTP request body to send if the `testObjectProtocol` is \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`https`\" pulumi-lang-dotnet=\"`Https`\" pulumi-lang-go=\"`https`\" pulumi-lang-python=\"`https`\" pulumi-lang-yaml=\"`https`\" pulumi-lang-java=\"`https`\"\u003e`https`\u003c/span\u003e. When omitted or \u003cspan pulumi-lang-nodejs=\"`null`\" pulumi-lang-dotnet=\"`Null`\" pulumi-lang-go=\"`null`\" pulumi-lang-python=\"`null`\" pulumi-lang-yaml=\"`null`\" pulumi-lang-java=\"`null`\"\u003e`null`\u003c/span\u003e, omits the request body from the request.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name for the liveness test.\n"
                },
                "peerCertificateVerification": {
                    "type": "boolean",
                    "description": "Validates the origin certificate. Applies only to tests with testObjectProtocol of https.\n"
                },
                "pre2023SecurityPosture": {
                    "type": "boolean",
                    "description": "Whether to enable backwards compatibility for liveness endpoints that use older TLS protocols\n"
                },
                "recursionRequested": {
                    "type": "boolean",
                    "description": "Indicates that if testObjectProtocol is DNS, DOH or DOT, the DNS query is recursive.\n"
                },
                "requestString": {
                    "type": "string",
                    "description": "Specifies a request string.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Specifies the query type, if testObjectProtocol is DNS.\n"
                },
                "responseString": {
                    "type": "string",
                    "description": "Specifies a response string.\n"
                },
                "sslClientCertificate": {
                    "type": "string",
                    "description": "Indicates a base64-encoded certificate.\n"
                },
                "sslClientPrivateKey": {
                    "type": "string",
                    "description": "Indicates a base64-encoded private key.\n"
                },
                "testInterval": {
                    "type": "integer",
                    "description": "Indicates the interval at which the liveness test is run, in seconds.\n"
                },
                "testObject": {
                    "type": "string",
                    "description": "Specifies the static text that acts as a stand-in for the data that you're sending on the network.\n"
                },
                "testObjectPassword": {
                    "type": "string",
                    "description": "Specifies the test object's password.\n"
                },
                "testObjectPort": {
                    "type": "integer",
                    "description": "Specifies the port number for the testObject.\n"
                },
                "testObjectProtocol": {
                    "type": "string",
                    "description": "Specifies the test protocol.\n"
                },
                "testObjectUsername": {
                    "type": "string",
                    "description": "A descriptive name for the testObject.\n"
                },
                "testTimeout": {
                    "type": "number",
                    "description": "Specifies the duration of the liveness test before it fails.\n"
                },
                "timeoutPenalty": {
                    "type": "number",
                    "description": "Specifies the timeout penalty score.\n"
                }
            },
            "type": "object",
            "required": [
                "alternateCaCertificates",
                "answersRequired",
                "disableNonstandardPortWarning",
                "disabled",
                "errorPenalty",
                "httpError3xx",
                "httpError4xx",
                "httpError5xx",
                "httpMethod",
                "httpRequestBody",
                "name",
                "peerCertificateVerification",
                "pre2023SecurityPosture",
                "recursionRequested",
                "requestString",
                "resourceType",
                "responseString",
                "sslClientCertificate",
                "sslClientPrivateKey",
                "testInterval",
                "testObject",
                "testObjectPassword",
                "testObjectPort",
                "testObjectProtocol",
                "testObjectUsername",
                "testTimeout",
                "timeoutPenalty"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainPropertyLivenessTestHttpHeader:getGtmDomainPropertyLivenessTestHttpHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the HTTP header.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value of the HTTP header.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainPropertyStaticRrSet:getGtmDomainPropertyStaticRrSet": {
            "properties": {
                "rdatas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of data strings, representing multiple records within a set.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The number of seconds that this record should live in a resolver's cache before being refetched.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The record type.\n"
                }
            },
            "type": "object",
            "required": [
                "rdatas",
                "ttl",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainPropertyTrafficTarget:getGtmDomainPropertyTrafficTarget": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the traffic target is used.\n"
                },
                "handoutCname": {
                    "type": "string",
                    "description": "Specifies an optional data center for the property.\n"
                },
                "name": {
                    "type": "string",
                    "description": "An alternative label for the traffic target.\n"
                },
                "precedence": {
                    "type": "integer",
                    "description": "Non-negative integer that ranks the order of the backups that GTM will hand out in the event that the primary Traffic Target has been declared down\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Identifies the IP address or the hostnames of the servers.\n"
                },
                "weight": {
                    "type": "number",
                    "description": "Specifies the traffic target weight for the target.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "enabled",
                "handoutCname",
                "name",
                "precedence",
                "servers",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainResource:getGtmDomainResource": {
            "properties": {
                "aggregationType": {
                    "type": "string",
                    "description": "Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.\n"
                },
                "constrainedProperty": {
                    "type": "string",
                    "description": "Specifies the name of the property that this resource constraints.\n"
                },
                "decayRate": {
                    "type": "number",
                    "description": "For internal use only.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A descriptive note to help you track what the resource constraints.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "Specifies the host header used when fetching the load object.\n"
                },
                "leaderString": {
                    "type": "string",
                    "description": "Specifies the text that comes before the loadObject.\n"
                },
                "leastSquaresDecay": {
                    "type": "number",
                    "description": "For internal use only.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainResourceLink:getGtmDomainResourceLink"
                    },
                    "description": "Specifies the URL path that allows direct navigation to the resource.\n"
                },
                "loadImbalancePercentage": {
                    "type": "number",
                    "description": "Indicates the percent of load imbalance factor for the domain.\n"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number",
                    "description": "For internal use only.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive label for the resource.\n"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainResourceResourceInstance:getGtmDomainResourceResourceInstance"
                    },
                    "description": "List of resource instances.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the kind of loadObject format used to determine the load on the resource.\n"
                },
                "upperBound": {
                    "type": "integer",
                    "description": "An optional sanity check that specifies the maximum allowed value for any component of the load object.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregationType",
                "constrainedProperty",
                "decayRate",
                "description",
                "hostHeader",
                "leaderString",
                "leastSquaresDecay",
                "loadImbalancePercentage",
                "maxUMultiplicativeIncrement",
                "name",
                "type",
                "upperBound"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainResourceLink:getGtmDomainResourceLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainResourceResourceInstance:getGtmDomainResourceResourceInstance": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "loadObject": {
                    "type": "string",
                    "description": "Identifies the load object file used to report real-time information about the current load, maximum allowable load and target load on each resource.\n"
                },
                "loadObjectPort": {
                    "type": "integer",
                    "description": "Specifies the TCP port of the loadObject.\n"
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of servers to requests the load object from.\n"
                },
                "useDefaultLoadObject": {
                    "type": "boolean",
                    "description": "Whether to use default loadObject.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "loadObject",
                "loadObjectPort",
                "loadServers",
                "useDefaultLoadObject"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainStatus:getGtmDomainStatus": {
            "properties": {
                "changeId": {
                    "type": "string",
                    "description": "A unique identifier generated when a change occurs to the domain.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainStatusLink:getGtmDomainStatusLink"
                    },
                    "description": "Specifies the URL path that allows direct navigation to the domain.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A notification generated when a change occurs to the domain.\n"
                },
                "passingValidation": {
                    "type": "boolean",
                    "description": "Indicates if the domain validates.\n"
                },
                "propagationStatus": {
                    "type": "string",
                    "description": "Tracks the status of the domain's propagation state.\n"
                },
                "propagationStatusDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when a change occurs to the domain.\n"
                }
            },
            "type": "object",
            "required": [
                "changeId",
                "message",
                "passingValidation",
                "propagationStatus",
                "propagationStatusDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainStatusLink:getGtmDomainStatusLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainsDomain:getGtmDomainsDomain": {
            "properties": {
                "acgId": {
                    "type": "string",
                    "description": "The contract's identifier, with which the domain is associated.\n"
                },
                "activationState": {
                    "type": "string",
                    "description": "'PENDING' when a change has been made but not yet propagated; 'COMPLETE' when the last configuration change has propagated successfully; 'DENIED' if the domain configuration failed validation; 'DELETED' if the domain has been deleted.\n"
                },
                "changeId": {
                    "type": "string",
                    "description": "UUID that identifies a version of the domain configuration.\n"
                },
                "deleteRequestId": {
                    "type": "string",
                    "description": "UUID for delete request during domain deletion. Null if the domain is not being deleted.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp that indicates the time of the last domain change.\n"
                },
                "lastModifiedBy": {
                    "type": "string",
                    "description": "The email address of the administrator who made the last change to the domain.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmDomainsDomainLink:getGtmDomainsDomainLink"
                    },
                    "description": "Provides a URL path that allows direct navigation to the domain.\n"
                },
                "modificationComments": {
                    "type": "string",
                    "description": "A descriptive note about changes to the domain.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique domain name.\n"
                },
                "signAndServe": {
                    "type": "boolean",
                    "description": "If set (true) we will sign the domain's resource records so that they can be validated by a validating resolver.\n"
                },
                "signAndServeAlgorithm": {
                    "type": "string",
                    "description": "The signing algorithm to use for signAndServe. One of the following values: RSA_SHA1, RSA_SHA256, RSA_SHA512, ECDSA_P256_SHA256, ECDSA_P384_SHA384, ED25519, ED448.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the domain.\n"
                }
            },
            "type": "object",
            "required": [
                "acgId",
                "activationState",
                "changeId",
                "deleteRequestId",
                "lastModified",
                "lastModifiedBy",
                "modificationComments",
                "name",
                "signAndServe",
                "signAndServeAlgorithm",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmDomainsDomainLink:getGtmDomainsDomainLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmGeomapAssignment:getGtmGeomapAssignment": {
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies an array of two-letter ISO 3166 country codes, or for finer subdivisions, the two-letter country code and the two-letter state or province code separated by a forward slash.\n"
                },
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for the group.\n"
                }
            },
            "type": "object",
            "required": [
                "countries",
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmGeomapDefaultDatacenter:getGtmGeomapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "For each property, an identifier for all other geographic zones.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for all other geographic zones.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmGeomapLink:getGtmGeomapLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmGeomapsGeoMap:getGtmGeomapsGeoMap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmGeomapsGeoMapAssignment:getGtmGeomapsGeoMapAssignment"
                    },
                    "description": "Contains information about the geographic zone groupings of countries.\n"
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/getGtmGeomapsGeoMapDefaultDatacenter:getGtmGeomapsGeoMapDefaultDatacenter",
                    "description": "A placeholder for all other geographic zones, countries not found in these geographic zones.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmGeomapsGeoMapLink:getGtmGeomapsGeoMapLink"
                    },
                    "description": "Specifies the URL path that allows direct navigation to the Geographic maps.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive label for the Geographic map.\n"
                }
            },
            "type": "object",
            "required": [
                "assignments",
                "defaultDatacenter",
                "links",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmGeomapsGeoMapAssignment:getGtmGeomapsGeoMapAssignment": {
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies an array of two-letter ISO 3166 country codes, or for finer subdivisions, the two-letter country code and the two-letter state or province code separated by a forward slash.\n"
                },
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for the group.\n"
                }
            },
            "type": "object",
            "required": [
                "countries",
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmGeomapsGeoMapDefaultDatacenter:getGtmGeomapsGeoMapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "For each property, an identifier for all other geographic zones.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A descriptive label for all other geographic zones.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmGeomapsGeoMapLink:getGtmGeomapsGeoMapLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmResourceLink:getGtmResourceLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmResourceResourceInstance:getGtmResourceResourceInstance": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "loadObject": {
                    "type": "string",
                    "description": "Identifies the load object file used to report real-time information about the current load, maximum allowable load and target load on each resource.\n"
                },
                "loadObjectPort": {
                    "type": "integer",
                    "description": "Specifies the TCP port of the loadObject.\n"
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of servers to requests the load object from.\n"
                },
                "useDefaultLoadObject": {
                    "type": "boolean",
                    "description": "Whether to use default loadObject.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "loadObject",
                "loadObjectPort",
                "loadServers",
                "useDefaultLoadObject"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmResourcesResource:getGtmResourcesResource": {
            "properties": {
                "aggregationType": {
                    "type": "string",
                    "description": "Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.\n"
                },
                "constrainedProperty": {
                    "type": "string",
                    "description": "Specifies the name of the property that this resource constraints.\n"
                },
                "decayRate": {
                    "type": "number",
                    "description": "For internal use only.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A descriptive note which allows to track what is constrained by this resource.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "Specifies the host header used when fetching the load object.\n"
                },
                "leaderString": {
                    "type": "string",
                    "description": "Specifies the text that comes before the load object.\n"
                },
                "leastSquaresDecay": {
                    "type": "number",
                    "description": "For internal use only.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmResourcesResourceLink:getGtmResourcesResourceLink"
                    },
                    "description": "Specifies the URL path that allows direct navigation to the resource.\n"
                },
                "loadImbalancePercentage": {
                    "type": "number",
                    "description": "Indicates the percentage of load imbalance for the domain.\n"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number",
                    "description": "For internal use only.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive label for the resource.\n"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getGtmResourcesResourceResourceInstance:getGtmResourcesResourceResourceInstance"
                    },
                    "description": "Instances of the resource.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the type of load object used to determine the load on the resource.\n"
                },
                "upperBound": {
                    "type": "integer",
                    "description": "An optional sanity check that specifies the maximum allowed value for any component of the load object.\n"
                }
            },
            "type": "object",
            "required": [
                "aggregationType",
                "constrainedProperty",
                "decayRate",
                "description",
                "hostHeader",
                "leaderString",
                "leastSquaresDecay",
                "loadImbalancePercentage",
                "maxUMultiplicativeIncrement",
                "name",
                "type",
                "upperBound"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "name"
                    ]
                }
            }
        },
        "akamai:index/getGtmResourcesResourceLink:getGtmResourcesResourceLink": {
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A hypermedia link to the complete URL that uniquely defines a resource.\n"
                },
                "rel": {
                    "type": "string",
                    "description": "Indicates the link relationship of the object.\n"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGtmResourcesResourceResourceInstance:getGtmResourcesResourceResourceInstance": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "description": "A unique identifier for an existing data center in the domain.\n"
                },
                "loadObject": {
                    "type": "string",
                    "description": "Identifies the load object file used to report real-time information about the current load, maximum allowable load and target load on each resource.\n"
                },
                "loadObjectPort": {
                    "type": "integer",
                    "description": "Specifies the TCP port of the loadObject.\n"
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of servers to requests the load object from.\n"
                },
                "useDefaultLoadObject": {
                    "type": "boolean",
                    "description": "Whether to use default loadObject.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "loadObject",
                "loadObjectPort",
                "loadServers",
                "useDefaultLoadObject"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamAccountSwitchKeysAccountSwitchKey:getIamAccountSwitchKeysAccountSwitchKey": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Descriptive label for the account.\n"
                },
                "accountSwitchKey": {
                    "type": "string",
                    "description": "The identifier for an account other than your API client's default.\n"
                }
            },
            "type": "object",
            "required": [
                "accountName",
                "accountSwitchKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamAllowedApisAllowedApi:getIamAllowedApisAllowedApi": {
            "properties": {
                "accessLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "API access levels, possible values are READ-ONLY, READ-WRITE, CREDENTIAL-READ-ONLY and CREDENTIAL-READ-WRITE.\n"
                },
                "apiId": {
                    "type": "integer",
                    "description": "A unique identifier for each API.\n"
                },
                "apiName": {
                    "type": "string",
                    "description": "Name of the API.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable name for the API.\n"
                },
                "documentationUrl": {
                    "type": "string",
                    "description": "A link to more information about the API.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Specifies where the API can access resources.\n"
                },
                "hasAccess": {
                    "type": "boolean",
                    "description": "Confirms access to the API.\n"
                },
                "serviceProviderId": {
                    "type": "integer",
                    "description": "Unique identifier for the API's service provider.\n"
                }
            },
            "type": "object",
            "required": [
                "accessLevels",
                "apiId",
                "apiName",
                "description",
                "documentationUrl",
                "endpoint",
                "hasAccess",
                "serviceProviderId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientActions:getIamApiClientActions": {
            "properties": {
                "deactivateAll": {
                    "type": "boolean",
                    "description": "Whether you can deactivate the API client's credentials.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Whether you can remove the API client.\n"
                },
                "edit": {
                    "type": "boolean",
                    "description": "Whether you can update the API client.\n"
                },
                "editApis": {
                    "type": "boolean",
                    "description": "Whether you can update the \u003cspan pulumi-lang-nodejs=\"`apis`\" pulumi-lang-dotnet=\"`Apis`\" pulumi-lang-go=\"`apis`\" pulumi-lang-python=\"`apis`\" pulumi-lang-yaml=\"`apis`\" pulumi-lang-java=\"`apis`\"\u003e`apis`\u003c/span\u003e the API client can access, same as \u003cspan pulumi-lang-nodejs=\"`editAuth`\" pulumi-lang-dotnet=\"`EditAuth`\" pulumi-lang-go=\"`editAuth`\" pulumi-lang-python=\"`edit_auth`\" pulumi-lang-yaml=\"`editAuth`\" pulumi-lang-java=\"`editAuth`\"\u003e`edit_auth`\u003c/span\u003e.\n"
                },
                "editAuth": {
                    "type": "boolean",
                    "description": "Whether you can update the \u003cspan pulumi-lang-nodejs=\"`apis`\" pulumi-lang-dotnet=\"`Apis`\" pulumi-lang-go=\"`apis`\" pulumi-lang-python=\"`apis`\" pulumi-lang-yaml=\"`apis`\" pulumi-lang-java=\"`apis`\"\u003e`apis`\u003c/span\u003e the API client can access, same as \u003cspan pulumi-lang-nodejs=\"`editApis`\" pulumi-lang-dotnet=\"`EditApis`\" pulumi-lang-go=\"`editApis`\" pulumi-lang-python=\"`edit_apis`\" pulumi-lang-yaml=\"`editApis`\" pulumi-lang-java=\"`editApis`\"\u003e`edit_apis`\u003c/span\u003e.\n"
                },
                "editGroups": {
                    "type": "boolean",
                    "description": "Whether you can update the \u003cspan pulumi-lang-nodejs=\"`groups`\" pulumi-lang-dotnet=\"`Groups`\" pulumi-lang-go=\"`groups`\" pulumi-lang-python=\"`groups`\" pulumi-lang-yaml=\"`groups`\" pulumi-lang-java=\"`groups`\"\u003e`groups`\u003c/span\u003e the API client can access.\n"
                },
                "editIpAcl": {
                    "type": "boolean",
                    "description": "Whether you can update the \u003cspan pulumi-lang-nodejs=\"`ipAcl`\" pulumi-lang-dotnet=\"`IpAcl`\" pulumi-lang-go=\"`ipAcl`\" pulumi-lang-python=\"`ip_acl`\" pulumi-lang-yaml=\"`ipAcl`\" pulumi-lang-java=\"`ipAcl`\"\u003e`ip_acl`\u003c/span\u003e the API client can access.\n"
                },
                "editSwitchAccount": {
                    "type": "boolean",
                    "description": "Whether you can update the API client's option to manage many accounts.\n"
                },
                "lock": {
                    "type": "boolean",
                    "description": "Whether you can lock the API client.\n"
                },
                "transfer": {
                    "type": "boolean",
                    "description": "Whether you can transfer the API client to a new owner.\n"
                },
                "unlock": {
                    "type": "boolean",
                    "description": "Whether you can unlock the API client.\n"
                }
            },
            "type": "object",
            "required": [
                "deactivateAll",
                "delete",
                "edit",
                "editApis",
                "editAuth",
                "editGroups",
                "editIpAcl",
                "editSwitchAccount",
                "lock",
                "transfer",
                "unlock"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientApiAccess:getIamApiClientApiAccess": {
            "properties": {
                "allAccessibleApis": {
                    "type": "boolean",
                    "description": "Whether the API client has access to a full set of available APIs.\n"
                },
                "apis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getIamApiClientApiAccessApi:getIamApiClientApiAccessApi"
                    },
                    "description": "The set of APIs the API client can access when \u003cspan pulumi-lang-nodejs=\"`allAccessibleApis`\" pulumi-lang-dotnet=\"`AllAccessibleApis`\" pulumi-lang-go=\"`allAccessibleApis`\" pulumi-lang-python=\"`all_accessible_apis`\" pulumi-lang-yaml=\"`allAccessibleApis`\" pulumi-lang-java=\"`allAccessibleApis`\"\u003e`all_accessible_apis`\u003c/span\u003e is disabled.\n"
                }
            },
            "type": "object",
            "required": [
                "allAccessibleApis",
                "apis"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientApiAccessApi:getIamApiClientApiAccessApi": {
            "properties": {
                "accessLevel": {
                    "type": "string",
                    "description": "The API client's access level on an API basis, either `READ-ONLY`, `READ-WRITE`, `CREDENTIAL-READ-ONLY`, or `CREDENTIAL-READ-WRITE`.\n"
                },
                "apiId": {
                    "type": "integer",
                    "description": "A unique identifier for each API.\n"
                },
                "apiName": {
                    "type": "string",
                    "description": "A human-readable name for the API.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description for the API.\n"
                },
                "documentationUrl": {
                    "type": "string",
                    "description": "A link to more information about the API.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Specifies where the API can access resources.\n"
                }
            },
            "type": "object",
            "required": [
                "accessLevel",
                "apiId",
                "apiName",
                "description",
                "documentationUrl",
                "endpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientCredential:getIamApiClientCredential": {
            "properties": {
                "actions": {
                    "$ref": "#/types/akamai:index/getIamApiClientCredentialActions:getIamApiClientCredentialActions",
                    "description": "Specifies activities available on the API client's credentials.\n"
                },
                "clientToken": {
                    "type": "string",
                    "description": "The part of the credential that identifies the API client.\n",
                    "secret": true
                },
                "createdOn": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp indicating when the credential was created.\n"
                },
                "credentialId": {
                    "type": "integer",
                    "description": "A unique identifier for each credential.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description for the API client.\n"
                },
                "expiresOn": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp indicating when the credential expires.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Whether a credential is `ACTIVE`, `INACTIVE`, or `DELETED`.\n"
                }
            },
            "type": "object",
            "required": [
                "actions",
                "clientToken",
                "createdOn",
                "credentialId",
                "description",
                "expiresOn",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientCredentialActions:getIamApiClientCredentialActions": {
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Whether you can activate the credential.\n"
                },
                "deactivate": {
                    "type": "boolean",
                    "description": "Whether you can deactivate the credential.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Whether you can remove the credential.\n"
                },
                "editDescription": {
                    "type": "boolean",
                    "description": "Whether you can modify the credential's description.\n"
                },
                "editExpiration": {
                    "type": "boolean",
                    "description": "Whether you can modify the credential's expiration date.\n"
                }
            },
            "type": "object",
            "required": [
                "activate",
                "deactivate",
                "delete",
                "editDescription",
                "editExpiration"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientGroupAccess:getIamApiClientGroupAccess": {
            "properties": {
                "cloneAuthorizedUserGroups": {
                    "type": "boolean",
                    "description": "Sets the API client's group access the same as the authorized user.\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getIamApiClientGroupAccessGroup:getIamApiClientGroupAccessGroup"
                    },
                    "description": "Groups the API client can access.\n"
                }
            },
            "type": "object",
            "required": [
                "cloneAuthorizedUserGroups",
                "groups"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientGroupAccessGroup:getIamApiClientGroupAccessGroup": {
            "properties": {
                "groupId": {
                    "type": "integer",
                    "description": "Unique identifier for each group.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "Descriptive label for the group.\n"
                },
                "isBlocked": {
                    "type": "boolean",
                    "description": "Blocks the API client access to the group's child groups.\n"
                },
                "parentGroupId": {
                    "type": "integer",
                    "description": "Unique identifier for the parent group within the group tree.\n"
                },
                "roleDescription": {
                    "type": "string",
                    "description": "Descriptive label for the role to convey its use.\n"
                },
                "roleId": {
                    "type": "integer",
                    "description": "Unique identifier for each role.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Descriptive label for the role.\n"
                },
                "subGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getIamApiClientGroupAccessGroupSubGroup:getIamApiClientGroupAccessGroupSubGroup"
                    },
                    "description": "Groups the API client can access.\n"
                }
            },
            "type": "object",
            "required": [
                "groupId",
                "groupName",
                "isBlocked",
                "parentGroupId",
                "roleDescription",
                "roleId",
                "roleName",
                "subGroups"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientGroupAccessGroupSubGroup:getIamApiClientGroupAccessGroupSubGroup": {
            "properties": {
                "groupId": {
                    "type": "integer",
                    "description": "Unique identifier for each group.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "Descriptive label for the group.\n"
                },
                "isBlocked": {
                    "type": "boolean",
                    "description": "Blocks the API client access to the group's child groups.\n"
                },
                "parentGroupId": {
                    "type": "integer",
                    "description": "Unique identifier for the parent group within the group tree.\n"
                },
                "roleDescription": {
                    "type": "string",
                    "description": "Descriptive label for the role to convey its use.\n"
                },
                "roleId": {
                    "type": "integer",
                    "description": "Unique identifier for each role.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Descriptive label for the role.\n"
                },
                "subGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getIamApiClientGroupAccessGroupSubGroup:getIamApiClientGroupAccessGroupSubGroup"
                    },
                    "description": "Groups the API client can access.\n"
                }
            },
            "type": "object",
            "required": [
                "groupId",
                "groupName",
                "isBlocked",
                "parentGroupId",
                "roleDescription",
                "roleId",
                "roleName",
                "subGroups"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientIpAcl:getIamApiClientIpAcl": {
            "properties": {
                "cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP addresses or CIDR blocks the API client can access.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enables the API client to access the IP access control list (ACL).\n"
                }
            },
            "type": "object",
            "required": [
                "cidrs",
                "enable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientPurgeOptions:getIamApiClientPurgeOptions": {
            "properties": {
                "canPurgeByCacheTag": {
                    "type": "boolean",
                    "description": "Whether the API client can purge content by cache tag.\n"
                },
                "canPurgeByCpCode": {
                    "type": "boolean",
                    "description": "Whether the API client can purge content by CP code.\n"
                },
                "cpCodeAccess": {
                    "$ref": "#/types/akamai:index/getIamApiClientPurgeOptionsCpCodeAccess:getIamApiClientPurgeOptionsCpCodeAccess",
                    "description": "CP codes the API client can purge.\n"
                }
            },
            "type": "object",
            "required": [
                "canPurgeByCacheTag",
                "canPurgeByCpCode",
                "cpCodeAccess"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientPurgeOptionsCpCodeAccess:getIamApiClientPurgeOptionsCpCodeAccess": {
            "properties": {
                "allCurrentAndNewCpCodes": {
                    "type": "boolean",
                    "description": "Whether the API can purge content by all current and new CP codes.\n"
                },
                "cpCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "CP codes the API client can purge.\n"
                }
            },
            "type": "object",
            "required": [
                "allCurrentAndNewCpCodes",
                "cpCodes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientsApiClient:getIamApiClientsApiClient": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The part of the client secret that identifies your API client and lets you access applications and resources.\n"
                },
                "actions": {
                    "$ref": "#/types/akamai:index/getIamApiClientsApiClientActions:getIamApiClientsApiClientActions",
                    "description": "Specifies activities available for the API client.\n"
                },
                "activeCredentialCount": {
                    "type": "integer",
                    "description": "The number of credentials active for the API client.\n"
                },
                "allowAccountSwitch": {
                    "type": "boolean",
                    "description": "Whether the API client can manage more than one account.\n"
                },
                "authorizedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The API client's valid users.\n"
                },
                "canAutoCreateCredential": {
                    "type": "boolean",
                    "description": "Whether the API client can create a credential for a new API client.\n"
                },
                "clientDescription": {
                    "type": "string",
                    "description": "A human-readable description of the API client.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "A unique identifier for the API client.\n"
                },
                "clientName": {
                    "type": "string",
                    "description": "A human-readable name for the API client.\n"
                },
                "clientType": {
                    "type": "string",
                    "description": "Specifies the API client's ownership and credential management.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the API client.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp indicating when the API client was created.\n"
                },
                "isLocked": {
                    "type": "boolean",
                    "description": "Whether the API client is locked.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email addresses to notify users when credentials expire.\n"
                },
                "serviceConsumerToken": {
                    "type": "string",
                    "description": "Unique identifier for the service hostname.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "actions",
                "activeCredentialCount",
                "allowAccountSwitch",
                "authorizedUsers",
                "canAutoCreateCredential",
                "clientDescription",
                "clientId",
                "clientName",
                "clientType",
                "createdBy",
                "createdDate",
                "isLocked",
                "notificationEmails",
                "serviceConsumerToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamApiClientsApiClientActions:getIamApiClientsApiClientActions": {
            "properties": {
                "deactivateAll": {
                    "type": "boolean",
                    "description": "Whether you can deactivate the API client's credentials.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Whether you can remove the API client.\n"
                },
                "edit": {
                    "type": "boolean",
                    "description": "Whether you can update the API client.\n"
                },
                "lock": {
                    "type": "boolean",
                    "description": "Whether you can lock the API client.\n"
                },
                "transfer": {
                    "type": "boolean",
                    "description": "Whether you can transfer the API client to a new owner.\n"
                },
                "unlock": {
                    "type": "boolean",
                    "description": "Whether you can unlock the API client.\n"
                }
            },
            "type": "object",
            "required": [
                "deactivateAll",
                "delete",
                "edit",
                "lock",
                "transfer",
                "unlock"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamBlockedPropertiesBlockedProperty:getIamBlockedPropertiesBlockedProperty": {
            "properties": {
                "assetId": {
                    "type": "integer",
                    "description": "IAM's blocked property ID.\n"
                },
                "propertyId": {
                    "type": "string",
                    "description": "PAPI's blocked property ID.\n"
                }
            },
            "type": "object",
            "required": [
                "assetId",
                "propertyId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamCidrBlockActions:getIamCidrBlockActions": {
            "properties": {
                "delete": {
                    "type": "boolean",
                    "description": "Whether you can delete this CIDR block.\n"
                },
                "edit": {
                    "type": "boolean",
                    "description": "Whether you can edit this CIDR block.\n"
                }
            },
            "type": "object",
            "required": [
                "delete",
                "edit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamCidrBlocksCidrBlock:getIamCidrBlocksCidrBlock": {
            "properties": {
                "actions": {
                    "$ref": "#/types/akamai:index/getIamCidrBlocksCidrBlockActions:getIamCidrBlocksCidrBlockActions",
                    "description": "Specifies activities available for the CIDR block.\n"
                },
                "cidrBlock": {
                    "type": "string",
                    "description": "The value of an IP address or IP address range.\n"
                },
                "cidrBlockId": {
                    "type": "integer",
                    "description": "Unique identifier for each CIDR block.\n"
                },
                "comments": {
                    "type": "string",
                    "description": "Descriptive label you provide for the CIDR block.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the CIDR block.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the CIDR block was created.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the CIDR block is enabled.\n"
                },
                "modifiedBy": {
                    "type": "string",
                    "description": "The user who last edited the CIDR block.\n"
                },
                "modifiedDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the CIDR block was last modified.\n"
                }
            },
            "type": "object",
            "required": [
                "actions",
                "cidrBlock",
                "cidrBlockId",
                "comments",
                "createdBy",
                "createdDate",
                "enabled",
                "modifiedBy",
                "modifiedDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamCidrBlocksCidrBlockActions:getIamCidrBlocksCidrBlockActions": {
            "properties": {
                "delete": {
                    "type": "boolean",
                    "description": "Whether you can delete this CIDR block.\n"
                },
                "edit": {
                    "type": "boolean",
                    "description": "Whether you can edit this CIDR block.\n"
                }
            },
            "type": "object",
            "required": [
                "delete",
                "edit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamGrantableRolesGrantableRole:getIamGrantableRolesGrantableRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Granted role description.\n"
                },
                "grantedRoleId": {
                    "type": "integer",
                    "description": "Granted role ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Granted role name.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "grantedRoleId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamPropertyUsersUser:getIamPropertyUsersUser": {
            "properties": {
                "firstName": {
                    "type": "string",
                    "description": "The user's first name.\n"
                },
                "isBlocked": {
                    "type": "boolean",
                    "description": "Whether a user's access to a property is blocked.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The user's surname.\n"
                },
                "uiIdentityId": {
                    "type": "string",
                    "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a contactId in other APIs.\n"
                },
                "uiUserName": {
                    "type": "string",
                    "description": "The user's username in Control Center.\n"
                }
            },
            "type": "object",
            "required": [
                "firstName",
                "isBlocked",
                "lastName",
                "uiIdentityId",
                "uiUserName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamRoleActions:getIamRoleActions": {
            "properties": {
                "delete": {
                    "type": "boolean",
                    "description": "Whether you can remove the role.\n"
                },
                "edit": {
                    "type": "boolean",
                    "description": "Whether you can modify the role.\n"
                }
            },
            "type": "object",
            "required": [
                "delete",
                "edit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamRoleGrantedRole:getIamRoleGrantedRole": {
            "properties": {
                "grantedRoleDescription": {
                    "type": "string",
                    "description": "Descriptive label for the role to convey its use.\n"
                },
                "grantedRoleId": {
                    "type": "integer",
                    "description": "Unique identifier for each granted role.\n"
                },
                "grantedRoleName": {
                    "type": "string",
                    "description": "Descriptive label for the granted role.\n"
                }
            },
            "type": "object",
            "required": [
                "grantedRoleDescription",
                "grantedRoleId",
                "grantedRoleName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamRoleUser:getIamRoleUser": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Unique identifier for each account.\n"
                },
                "email": {
                    "type": "string",
                    "description": "The user's email address.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The user's first name.\n"
                },
                "lastLoginDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the user last logged in.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The user's surname.\n"
                },
                "uiIdentityId": {
                    "type": "string",
                    "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a contactId in other APIs.\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "email",
                "firstName",
                "lastLoginDate",
                "lastName",
                "uiIdentityId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamRolesRole:getIamRolesRole": {
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "The user name or email of the person who created the role.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The role's description.\n"
                },
                "modifiedBy": {
                    "type": "string",
                    "description": "The username or email of the last person to edit the role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The role's name.\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "A unique identifier for each role.\n"
                },
                "timeCreated": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the role was originally created.\n"
                },
                "timeModified": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the role was last updated.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Whether the role is a standard role or a custom role.\n"
                }
            },
            "type": "object",
            "required": [
                "createdBy",
                "description",
                "modifiedBy",
                "name",
                "roleId",
                "timeCreated",
                "timeModified",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamTimezonesTimezone:getIamTimezonesTimezone": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of a time zone, including the GMT +/-.\n"
                },
                "offset": {
                    "type": "string",
                    "description": "The time zone offset from GMT.\n"
                },
                "posix": {
                    "type": "string",
                    "description": "The time zone posix.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The time zone ID.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "offset",
                "posix",
                "timezone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getIamUsersAffectedByMovingGroupUser:getIamUsersAffectedByMovingGroupUser": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Unique identifier for each account.\n"
                },
                "email": {
                    "type": "string",
                    "description": "The user's email address.\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The user's first name.\n"
                },
                "lastLoginDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the user last logged in.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The user's surname.\n"
                },
                "uiIdentityId": {
                    "type": "string",
                    "description": "Unique identifier for each user, which corresponds to their Control Center profile or client ID. Also known as a contactId in other APIs.\n"
                },
                "uiUsername": {
                    "type": "string",
                    "description": "The user's username in Control Center.\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "email",
                "firstName",
                "lastLoginDate",
                "lastName",
                "uiIdentityId",
                "uiUsername"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getImagingPolicyImagePolicy:getImagingPolicyImagePolicy": {
            "properties": {
                "breakpoints": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyBreakpoints:getImagingPolicyImagePolicyBreakpoints",
                    "description": "The breakpoint widths (in pixels) to use to create derivative images/videos.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Hosts that are allowed for image/video URLs within transformations or variables.\n"
                },
                "output": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyOutput:getImagingPolicyImagePolicyOutput",
                    "description": "Dictates the output quality (either \u003cspan pulumi-lang-nodejs=\"`quality`\" pulumi-lang-dotnet=\"`Quality`\" pulumi-lang-go=\"`quality`\" pulumi-lang-python=\"`quality`\" pulumi-lang-yaml=\"`quality`\" pulumi-lang-java=\"`quality`\"\u003e`quality`\u003c/span\u003e or `perceptualQuality`) and formats that are created for each resized image. If unspecified, image formats are created to support all browsers at the default quality level (\u003cspan pulumi-lang-nodejs=\"`85`\" pulumi-lang-dotnet=\"`85`\" pulumi-lang-go=\"`85`\" pulumi-lang-python=\"`85`\" pulumi-lang-yaml=\"`85`\" pulumi-lang-java=\"`85`\"\u003e`85`\u003c/span\u003e), which includes formats such as WEBP, JPEG2000 and JPEG-XR for specific browsers.\n"
                },
                "postBreakpointTransformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                    },
                    "description": "Post-processing Transformations are applied to the image after image and quality settings have been applied.\n"
                },
                "rolloutDuration": {
                    "type": "string",
                    "description": "The amount of time in seconds that the policy takes to rollout. During the rollout an increasing proportion of images/videos will begin to use the new policy instead of the cached images/videos from the previous version. This value has no effect on the staging network.\n"
                },
                "serveStaleDuration": {
                    "type": "string",
                    "description": "The amount of time in seconds that the policy will serve stale images. During the serve stale period realtime images will attempt to use the offline image from the previous policy version first if possible.\n"
                },
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                    },
                    "description": "Set of image transformations to apply to the source image. If unspecified, no operations are performed.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyVariable:getImagingPolicyImagePolicyVariable"
                    },
                    "description": "Declares variables for use within the policy. Any variable declared here can be invoked throughout transformations as a Variable object, so that you don't have to specify values separately. You can also pass in these variable names and values dynamically as query parameters in the image's request URL.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyBreakpoints:getImagingPolicyImagePolicyBreakpoints": {
            "properties": {
                "widths": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyOutput:getImagingPolicyImagePolicyOutput": {
            "properties": {
                "adaptiveQuality": {
                    "type": "string",
                    "description": "Override the quality of image to serve when Image \u0026 Video Manager detects a slow connection. Specifying lower values lets users with slow connections browse your site with reduced load times without impacting the quality of images for users with faster connections.\n"
                },
                "allowPristineOnDownsize": {
                    "type": "string",
                    "description": "Whether a pristine image wider than the requested breakpoint is allowed as a derivative image if it has the fewest bytes. This will not have an affect if transformations are present.\n"
                },
                "allowedFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The graphics file formats allowed for browser specific results.\n"
                },
                "forcedFormats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The forced extra formats for the `imFormat` query parameter, which requests a specific browser type. By default, Image and Video Manager detects the browser and returns the appropriate image.\n"
                },
                "perceptualQuality": {
                    "type": "string",
                    "description": "Mutually exclusive with quality. The perceptual quality to use when comparing resulting images, which overrides the \u003cspan pulumi-lang-nodejs=\"`quality`\" pulumi-lang-dotnet=\"`Quality`\" pulumi-lang-go=\"`quality`\" pulumi-lang-python=\"`quality`\" pulumi-lang-yaml=\"`quality`\" pulumi-lang-java=\"`quality`\"\u003e`quality`\u003c/span\u003e setting. Perceptual quality tunes each image format's quality parameter dynamically based on the human-perceived quality of the output image. This can result in better byte savings (as compared to using regular quality) as many images can be encoded at a much lower quality without compromising perception of the image. In addition, certain images may need to be encoded at a slightly higher quality in order to maintain human-perceived quality. Values are tiered \u003cspan pulumi-lang-nodejs=\"`high`\" pulumi-lang-dotnet=\"`High`\" pulumi-lang-go=\"`high`\" pulumi-lang-python=\"`high`\" pulumi-lang-yaml=\"`high`\" pulumi-lang-java=\"`high`\"\u003e`high`\u003c/span\u003e, `mediumHigh`, \u003cspan pulumi-lang-nodejs=\"`medium`\" pulumi-lang-dotnet=\"`Medium`\" pulumi-lang-go=\"`medium`\" pulumi-lang-python=\"`medium`\" pulumi-lang-yaml=\"`medium`\" pulumi-lang-java=\"`medium`\"\u003e`medium`\u003c/span\u003e, `mediumLow`, or \u003cspan pulumi-lang-nodejs=\"`low`\" pulumi-lang-dotnet=\"`Low`\" pulumi-lang-go=\"`low`\" pulumi-lang-python=\"`low`\" pulumi-lang-yaml=\"`low`\" pulumi-lang-java=\"`low`\"\u003e`low`\u003c/span\u003e.\n"
                },
                "perceptualQualityFloor": {
                    "type": "string",
                    "description": "Only applies with perceptualQuality set. Sets a minimum image quality to respect when using perceptual quality. Perceptual quality will not reduce the quality below this value even if it determines the compressed image to be acceptably visually similar.\n"
                },
                "perceptualQualityVar": {
                    "type": "string",
                    "description": "Mutually exclusive with quality. The perceptual quality to use when comparing resulting images, which overrides the \u003cspan pulumi-lang-nodejs=\"`quality`\" pulumi-lang-dotnet=\"`Quality`\" pulumi-lang-go=\"`quality`\" pulumi-lang-python=\"`quality`\" pulumi-lang-yaml=\"`quality`\" pulumi-lang-java=\"`quality`\"\u003e`quality`\u003c/span\u003e setting. Perceptual quality tunes each image format's quality parameter dynamically based on the human-perceived quality of the output image. This can result in better byte savings (as compared to using regular quality) as many images can be encoded at a much lower quality without compromising perception of the image. In addition, certain images may need to be encoded at a slightly higher quality in order to maintain human-perceived quality. Values are tiered \u003cspan pulumi-lang-nodejs=\"`high`\" pulumi-lang-dotnet=\"`High`\" pulumi-lang-go=\"`high`\" pulumi-lang-python=\"`high`\" pulumi-lang-yaml=\"`high`\" pulumi-lang-java=\"`high`\"\u003e`high`\u003c/span\u003e, `mediumHigh`, \u003cspan pulumi-lang-nodejs=\"`medium`\" pulumi-lang-dotnet=\"`Medium`\" pulumi-lang-go=\"`medium`\" pulumi-lang-python=\"`medium`\" pulumi-lang-yaml=\"`medium`\" pulumi-lang-java=\"`medium`\"\u003e`medium`\u003c/span\u003e, `mediumLow`, or \u003cspan pulumi-lang-nodejs=\"`low`\" pulumi-lang-dotnet=\"`Low`\" pulumi-lang-go=\"`low`\" pulumi-lang-python=\"`low`\" pulumi-lang-yaml=\"`low`\" pulumi-lang-java=\"`low`\"\u003e`low`\u003c/span\u003e.\n"
                },
                "preferModernFormats": {
                    "type": "string",
                    "description": "Whether derivative image formats should be selected with a preference for modern formats (such as WebP and Avif) instead the format that results in the fewest bytes.\n"
                },
                "quality": {
                    "type": "string",
                    "description": "Mutually exclusive with perceptualQuality, used by default if neither is specified. The chosen quality of the output images. Using a quality value from 1-100 resembles JPEG quality across output formats.\n"
                },
                "qualityVar": {
                    "type": "string",
                    "description": "Mutually exclusive with perceptualQuality, used by default if neither is specified. The chosen quality of the output images. Using a quality value from 1-100 resembles JPEG quality across output formats.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation": {
            "properties": {
                "backgroundColors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationBackgroundColor:getImagingPolicyImagePolicyPostBreakpointTransformationBackgroundColor"
                    },
                    "description": "Places a transparent image on a set background color. Color is specified in the typical CSS hexadecimal format.\n"
                },
                "blurs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationBlur:getImagingPolicyImagePolicyPostBreakpointTransformationBlur"
                    },
                    "description": "Applies a Gaussian blur to the image.\n"
                },
                "chromaKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationChromaKey:getImagingPolicyImagePolicyPostBreakpointTransformationChromaKey"
                    },
                    "description": "Changes any color in an image within the specified volume of the HSL colorspace to transparent or semitransparent. This transformation applies a 'green screen' technique commonly used to isolate and remove background colors.\n"
                },
                "composites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationComposite:getImagingPolicyImagePolicyPostBreakpointTransformationComposite"
                    },
                    "description": "Applies another image to the source image, either as an overlay or an underlay. The image that's underneath is visible in areas that are beyond the edges of the top image or that are less than 100% opaque. A common use of an overlay composite is to add a watermark.\n"
                },
                "compounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompound:getImagingPolicyImagePolicyPostBreakpointTransformationCompound"
                    }
                },
                "contrasts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationContrast:getImagingPolicyImagePolicyPostBreakpointTransformationContrast"
                    },
                    "description": "Adjusts both the contrast and brightness of an image.\n"
                },
                "goops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationGoop:getImagingPolicyImagePolicyPostBreakpointTransformationGoop"
                    },
                    "description": "Distorts an image by randomly repositioning a set of control points along a specified grid. The transformed image appears _goopy_. Adjust the density of the grid and the degree of randomity. You can use this transformation to create watermarks for use in security.\n"
                },
                "grayscales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationGrayscale:getImagingPolicyImagePolicyPostBreakpointTransformationGrayscale"
                    },
                    "description": "Restricts image color to shades of gray only.\n"
                },
                "hsls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationHsl:getImagingPolicyImagePolicyPostBreakpointTransformationHsl"
                    },
                    "description": "Adjusts the hue, saturation, and lightness (HSL) of an image. Hue is the number of degrees that colors rotate around the color wheel. Saturation is a multiplier to increase or decrease color saturation. Lightness is a multiplier to increase or decrease the lightness of an image. Other transformations can also affect color, such as `Grayscale` and `MaxColors`. If youre using more than one, consider the order to apply them for the desired results.\n"
                },
                "hsvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationHsv:getImagingPolicyImagePolicyPostBreakpointTransformationHsv"
                    },
                    "description": "Identical to HSL except it replaces \u003cspan pulumi-lang-nodejs=\"`lightness`\" pulumi-lang-dotnet=\"`Lightness`\" pulumi-lang-go=\"`lightness`\" pulumi-lang-python=\"`lightness`\" pulumi-lang-yaml=\"`lightness`\" pulumi-lang-java=\"`lightness`\"\u003e`lightness`\u003c/span\u003e with \u003cspan pulumi-lang-nodejs=\"`value`\" pulumi-lang-dotnet=\"`Value`\" pulumi-lang-go=\"`value`\" pulumi-lang-python=\"`value`\" pulumi-lang-yaml=\"`value`\" pulumi-lang-java=\"`value`\"\u003e`value`\u003c/span\u003e. For example, if you reduce the \u003cspan pulumi-lang-nodejs=\"`lightness`\" pulumi-lang-dotnet=\"`Lightness`\" pulumi-lang-go=\"`lightness`\" pulumi-lang-python=\"`lightness`\" pulumi-lang-yaml=\"`lightness`\" pulumi-lang-java=\"`lightness`\"\u003e`lightness`\u003c/span\u003e of a light green, almost white, image, the color turns a vibrant green. Reducing the \u003cspan pulumi-lang-nodejs=\"`value`\" pulumi-lang-dotnet=\"`Value`\" pulumi-lang-go=\"`value`\" pulumi-lang-python=\"`value`\" pulumi-lang-yaml=\"`value`\" pulumi-lang-java=\"`value`\"\u003e`value`\u003c/span\u003e turns the image a darker color, close to grey. This happens because the original image color is very close to white.\n"
                },
                "ifDimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationIfDimension:getImagingPolicyImagePolicyPostBreakpointTransformationIfDimension"
                    }
                },
                "ifOrientations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationIfOrientation:getImagingPolicyImagePolicyPostBreakpointTransformationIfOrientation"
                    }
                },
                "maxColors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMaxColor:getImagingPolicyImagePolicyPostBreakpointTransformationMaxColor"
                    },
                    "description": "Set the maximum number of colors in the images palette. Reducing the number of colors in an image can help to reduce file size.\n"
                },
                "mirrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMirror:getImagingPolicyImagePolicyPostBreakpointTransformationMirror"
                    },
                    "description": "Flips an image horizontally, vertically, or both.\n"
                },
                "monoHues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMonoHue:getImagingPolicyImagePolicyPostBreakpointTransformationMonoHue"
                    },
                    "description": "Allows you to set all hues in an image to a single specified hue of your choosing. Mono Hue maintains the original color’s lightness and saturation but sets the hue to that of the specified value. This has the effect of making the image shades of the specified hue.\n"
                },
                "opacities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationOpacity:getImagingPolicyImagePolicyPostBreakpointTransformationOpacity"
                    },
                    "description": "Adjusts the level of transparency of an image. Use this transformation to make an image more or less transparent.\n"
                },
                "removeColors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationRemoveColor:getImagingPolicyImagePolicyPostBreakpointTransformationRemoveColor"
                    },
                    "description": "Removes a specified color from an image and replaces it with transparent pixels. This transformation is ideal for removing solid background colors from product images photographed on clean, consistent backgrounds without any shadows.\n"
                },
                "unsharpMasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationUnsharpMask:getImagingPolicyImagePolicyPostBreakpointTransformationUnsharpMask"
                    },
                    "description": "Emphasizes edges and details in source images without distorting the colors. Although this effect is often referred to as _sharpening_ an image, it actually creates a blurred, inverted copy of the image known as an unsharp mask. Image and Video Manager combines the unsharp mask with the source image to create an image perceived as clearer.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationBackgroundColor:getImagingPolicyImagePolicyPostBreakpointTransformationBackgroundColor": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The hexadecimal CSS color value for the background.\n"
                },
                "colorVar": {
                    "type": "string",
                    "description": "The hexadecimal CSS color value for the background.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationBlur:getImagingPolicyImagePolicyPostBreakpointTransformationBlur": {
            "properties": {
                "sigma": {
                    "type": "string",
                    "description": "The number of pixels to scatter the original pixel by to create the blur effect. Resulting images may be larger than the original as pixels at the edge of the image might scatter outside the image's original dimensions.\n"
                },
                "sigmaVar": {
                    "type": "string",
                    "description": "The number of pixels to scatter the original pixel by to create the blur effect. Resulting images may be larger than the original as pixels at the edge of the image might scatter outside the image's original dimensions.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationChromaKey:getImagingPolicyImagePolicyPostBreakpointTransformationChromaKey": {
            "properties": {
                "hue": {
                    "type": "string",
                    "description": "The hue to remove. Enter the degree of rotation between 0 and 360 degrees around the color wheel. By default Chroma Key removes a green hue, 120° on the color wheel.\n"
                },
                "hueFeather": {
                    "type": "string",
                    "description": "How much additional hue to make semi-transparent beyond the Hue Tolerance. By default Hue Feather is 0.083 which applies semi-transparency to hues 30° around the Hue Tolerance.\n"
                },
                "hueFeatherVar": {
                    "type": "string",
                    "description": "How much additional hue to make semi-transparent beyond the Hue Tolerance. By default Hue Feather is 0.083 which applies semi-transparency to hues 30° around the Hue Tolerance.\n"
                },
                "hueTolerance": {
                    "type": "string",
                    "description": "How close a color's hue needs to be to the selected hue for it to be changed to fully transparent. If you enter the maximum value of 1.0 the entire image is made transparent. By default Hue Tolerance is approximately 0.083 or 8.3% of the color wheel. This value corresponds to 30° around the specified hue.\n"
                },
                "hueToleranceVar": {
                    "type": "string",
                    "description": "How close a color's hue needs to be to the selected hue for it to be changed to fully transparent. If you enter the maximum value of 1.0 the entire image is made transparent. By default Hue Tolerance is approximately 0.083 or 8.3% of the color wheel. This value corresponds to 30° around the specified hue.\n"
                },
                "hueVar": {
                    "type": "string",
                    "description": "The hue to remove. Enter the degree of rotation between 0 and 360 degrees around the color wheel. By default Chroma Key removes a green hue, 120° on the color wheel.\n"
                },
                "lightnessFeather": {
                    "type": "string",
                    "description": "How much additional lightness to make semi-transparent beyond the Lightness Tolerance. The default value of 0.1 corresponds to 10% away from the tolerated lightness towards full black or full white.\n"
                },
                "lightnessFeatherVar": {
                    "type": "string",
                    "description": "How much additional lightness to make semi-transparent beyond the Lightness Tolerance. The default value of 0.1 corresponds to 10% away from the tolerated lightness towards full black or full white.\n"
                },
                "lightnessTolerance": {
                    "type": "string",
                    "description": "How much of the lightest part and darkest part of a color to preserve. For example, you can space this value out from the middle (i.e. 0.5 lightness or full color) to help preserve the splash lighting impact in the image. You can define how close the color needs to be to the full color to remove it from your image. The default value of 0.75 means that a colour must be within 75% of the full color to full white or full black for full removal.\n"
                },
                "lightnessToleranceVar": {
                    "type": "string",
                    "description": "How much of the lightest part and darkest part of a color to preserve. For example, you can space this value out from the middle (i.e. 0.5 lightness or full color) to help preserve the splash lighting impact in the image. You can define how close the color needs to be to the full color to remove it from your image. The default value of 0.75 means that a colour must be within 75% of the full color to full white or full black for full removal.\n"
                },
                "saturationFeather": {
                    "type": "string",
                    "description": "How much additional saturation to make semi-transparent beyond the Saturation Tolerance. By default Saturation Feather is 0.1 which applies semi-transparency to hues 10% below the saturationTolerance.\n"
                },
                "saturationFeatherVar": {
                    "type": "string",
                    "description": "How much additional saturation to make semi-transparent beyond the Saturation Tolerance. By default Saturation Feather is 0.1 which applies semi-transparency to hues 10% below the saturationTolerance.\n"
                },
                "saturationTolerance": {
                    "type": "string",
                    "description": "How close a color's saturation needs to be to full saturation for it to be changed to fully transparent. For example, you can define how green the color needs to be to remove it from your image. The default value of 0.75 means that a color must be within 75% of full saturation in order to be made fully transparent.\n"
                },
                "saturationToleranceVar": {
                    "type": "string",
                    "description": "How close a color's saturation needs to be to full saturation for it to be changed to fully transparent. For example, you can define how green the color needs to be to remove it from your image. The default value of 0.75 means that a color must be within 75% of full saturation in order to be made fully transparent.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationComposite:getImagingPolicyImagePolicyPostBreakpointTransformationComposite": {
            "properties": {
                "gravity": {
                    "type": "string",
                    "description": "Compass direction indicating the corner or edge of the base image to place the applied image. Use Horizontal and Vertical Offset to adjust the applied image's gravity position\n"
                },
                "gravityVar": {
                    "type": "string",
                    "description": "Compass direction indicating the corner or edge of the base image to place the applied image. Use Horizontal and Vertical Offset to adjust the applied image's gravity position\n"
                },
                "image": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage"
                },
                "placement": {
                    "type": "string",
                    "description": "Place applied image on top of or underneath the base image. Watermarks are usually applied over. Backgrounds are usually applied under.\n"
                },
                "placementVar": {
                    "type": "string",
                    "description": "Place applied image on top of or underneath the base image. Watermarks are usually applied over. Backgrounds are usually applied under.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "A multiplier to resize the applied image relative to the source image and preserve aspect ratio, 1 by default. Set the `scaleDimension` to calculate the \u003cspan pulumi-lang-nodejs=\"`scale`\" pulumi-lang-dotnet=\"`Scale`\" pulumi-lang-go=\"`scale`\" pulumi-lang-python=\"`scale`\" pulumi-lang-yaml=\"`scale`\" pulumi-lang-java=\"`scale`\"\u003e`scale`\u003c/span\u003e from the source image's width or height.\n"
                },
                "scaleDimension": {
                    "type": "string",
                    "description": "The dimension, either \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e, of the source image to scale.\n"
                },
                "scaleDimensionVar": {
                    "type": "string",
                    "description": "The dimension, either \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e, of the source image to scale.\n"
                },
                "scaleVar": {
                    "type": "string",
                    "description": "A multiplier to resize the applied image relative to the source image and preserve aspect ratio, 1 by default. Set the `scaleDimension` to calculate the \u003cspan pulumi-lang-nodejs=\"`scale`\" pulumi-lang-dotnet=\"`Scale`\" pulumi-lang-go=\"`scale`\" pulumi-lang-python=\"`scale`\" pulumi-lang-yaml=\"`scale`\" pulumi-lang-java=\"`scale`\"\u003e`scale`\u003c/span\u003e from the source image's width or height.\n"
                },
                "xPosition": {
                    "type": "string",
                    "description": "The x-axis position of the image to apply.\n"
                },
                "xPositionVar": {
                    "type": "string",
                    "description": "The x-axis position of the image to apply.\n"
                },
                "yPosition": {
                    "type": "string",
                    "description": "The y-axis position of the image to apply.\n"
                },
                "yPositionVar": {
                    "type": "string",
                    "description": "The y-axis position of the image to apply.\n"
                }
            },
            "type": "object",
            "required": [
                "image"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImage": {
            "properties": {
                "boxImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageBoxImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageBoxImage"
                    },
                    "description": "A rectangular box, with a specified color and applied transformation.\n"
                },
                "circleImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageCircleImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageCircleImage"
                    },
                    "description": "A rectangular box, with a specified color and applied transformation.\n"
                },
                "textImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImage"
                    },
                    "description": "A snippet of text. Defines font family and size, fill color, and outline stroke width and color.\n"
                },
                "urlImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImage"
                    },
                    "description": "An image loaded from a URL.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageBoxImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageBoxImage": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The fill color of the box, not the edge of the box. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "colorVar": {
                    "type": "string",
                    "description": "The fill color of the box, not the edge of the box. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "height": {
                    "type": "string",
                    "description": "The height of the box in pixels.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The height of the box in pixels.\n"
                },
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "width": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageCircleImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageCircleImage": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The fill color of the circle. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "colorVar": {
                    "type": "string",
                    "description": "The fill color of the circle. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "diameter": {
                    "type": "string",
                    "description": "The diameter of the circle. The diameter will be the width and the height of the image in pixels.\n"
                },
                "diameterVar": {
                    "type": "string",
                    "description": "The diameter of the circle. The diameter will be the width and the height of the image in pixels.\n"
                },
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "width": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageTextImage": {
            "properties": {
                "fill": {
                    "type": "string",
                    "description": "The main fill color of the text.\n"
                },
                "fillVar": {
                    "type": "string",
                    "description": "The main fill color of the text.\n"
                },
                "size": {
                    "type": "string",
                    "description": "The size in pixels to render the text.\n"
                },
                "sizeVar": {
                    "type": "string",
                    "description": "The size in pixels to render the text.\n"
                },
                "stroke": {
                    "type": "string",
                    "description": "The color for the outline of the text.\n"
                },
                "strokeSize": {
                    "type": "string",
                    "description": "The thickness in points for the outline of the text.\n"
                },
                "strokeSizeVar": {
                    "type": "string",
                    "description": "The thickness in points for the outline of the text.\n"
                },
                "strokeVar": {
                    "type": "string",
                    "description": "The color for the outline of the text.\n"
                },
                "text": {
                    "type": "string",
                    "description": "The line of text to render.\n"
                },
                "textVar": {
                    "type": "string",
                    "description": "The line of text to render.\n"
                },
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "typeface": {
                    "type": "string",
                    "description": "The font family to apply to the text image. This may be a URL to a TrueType or WOFF (v1) typeface, or a string that refers to one of the standard built-in browser fonts.\n"
                },
                "typefaceVar": {
                    "type": "string",
                    "description": "The font family to apply to the text image. This may be a URL to a TrueType or WOFF (v1) typeface, or a string that refers to one of the standard built-in browser fonts.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImage:getImagingPolicyImagePolicyPostBreakpointTransformationCompositeImageUrlImage": {
            "properties": {
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the image.\n"
                },
                "urlVar": {
                    "type": "string",
                    "description": "The URL of the image.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationCompound:getImagingPolicyImagePolicyPostBreakpointTransformationCompound": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationContrast:getImagingPolicyImagePolicyPostBreakpointTransformationContrast": {
            "properties": {
                "brightness": {
                    "type": "string",
                    "description": "Adjusts the brightness of the image. Positive values increase brightness and negative values decrease brightness. A value of  \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e produces a white image. A value of  `-1` produces a black image. The default value is \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e, which leaves the image unchanged. The acceptable value range is `-1.0` to `1.0`. Values outside of the acceptable range clamp to this range.\n"
                },
                "brightnessVar": {
                    "type": "string",
                    "description": "Adjusts the brightness of the image. Positive values increase brightness and negative values decrease brightness. A value of  \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e produces a white image. A value of  `-1` produces a black image. The default value is \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e, which leaves the image unchanged. The acceptable value range is `-1.0` to `1.0`. Values outside of the acceptable range clamp to this range.\n"
                },
                "contrast": {
                    "type": "string",
                    "description": "Adjusts the contrast of the image. Expressed as a range from `-1` to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e, positive values increase contrast, negative values decrease it, while \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e leaves the image unchanged. Values outside of the `-1` to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e range clamp to this range.\n"
                },
                "contrastVar": {
                    "type": "string",
                    "description": "Adjusts the contrast of the image. Expressed as a range from `-1` to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e, positive values increase contrast, negative values decrease it, while \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e leaves the image unchanged. Values outside of the `-1` to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e range clamp to this range.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationGoop:getImagingPolicyImagePolicyPostBreakpointTransformationGoop": {
            "properties": {
                "chaos": {
                    "type": "string",
                    "description": "Specifies the greatest distance control points may move from their original position. A value of `1.0` shifts control points over as far as the next one in the original grid. A value of `0.0` leaves the image unchanged. Values under `0.5` work better for subtle distortions, otherwise control points may pass each other and cause a twisting effect.\n"
                },
                "chaosVar": {
                    "type": "string",
                    "description": "Specifies the greatest distance control points may move from their original position. A value of `1.0` shifts control points over as far as the next one in the original grid. A value of `0.0` leaves the image unchanged. Values under `0.5` work better for subtle distortions, otherwise control points may pass each other and cause a twisting effect.\n"
                },
                "density": {
                    "type": "string",
                    "description": "Controls the density of control points used to distort the image. The largest dimension of the input image is divided up to fit this number of control points. A grid of points is extended on the smaller dimension such that each row and column of control points is equidistant from each adjacent row or column. This parameter strongly affects transformation performance. Be careful choosing values above the default if you expect to transform medium to large size images.\n"
                },
                "densityVar": {
                    "type": "string",
                    "description": "Controls the density of control points used to distort the image. The largest dimension of the input image is divided up to fit this number of control points. A grid of points is extended on the smaller dimension such that each row and column of control points is equidistant from each adjacent row or column. This parameter strongly affects transformation performance. Be careful choosing values above the default if you expect to transform medium to large size images.\n"
                },
                "power": {
                    "type": "string",
                    "description": "By default, the distortion algorithm relies on inverse squares to calculate distance but this allows you to change the exponent. You shouldnt need to vary the default value of `2.0`.\n"
                },
                "powerVar": {
                    "type": "string",
                    "description": "By default, the distortion algorithm relies on inverse squares to calculate distance but this allows you to change the exponent. You shouldnt need to vary the default value of `2.0`.\n"
                },
                "seed": {
                    "type": "string",
                    "description": "Specifies your own \u003cspan pulumi-lang-nodejs=\"`seed`\" pulumi-lang-dotnet=\"`Seed`\" pulumi-lang-go=\"`seed`\" pulumi-lang-python=\"`seed`\" pulumi-lang-yaml=\"`seed`\" pulumi-lang-java=\"`seed`\"\u003e`seed`\u003c/span\u003e value as an alternative to the default, which is subject to variability. This allows for reproducible and deterministic distortions. If all parameters are kept equal and a constant seed is used, `Goop` distorts an input image consistently over many transformations. By default, this value is set to the current Epoch Time measured in milliseconds, which provides inconsistent transformation output.\n"
                },
                "seedVar": {
                    "type": "string",
                    "description": "Specifies your own \u003cspan pulumi-lang-nodejs=\"`seed`\" pulumi-lang-dotnet=\"`Seed`\" pulumi-lang-go=\"`seed`\" pulumi-lang-python=\"`seed`\" pulumi-lang-yaml=\"`seed`\" pulumi-lang-java=\"`seed`\"\u003e`seed`\u003c/span\u003e value as an alternative to the default, which is subject to variability. This allows for reproducible and deterministic distortions. If all parameters are kept equal and a constant seed is used, `Goop` distorts an input image consistently over many transformations. By default, this value is set to the current Epoch Time measured in milliseconds, which provides inconsistent transformation output.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationGrayscale:getImagingPolicyImagePolicyPostBreakpointTransformationGrayscale": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The algorithm used to transform colors to grays, either `Brightness`, `Lightness`, `Rec601`, or the default `Rec709`.\n"
                },
                "typeVar": {
                    "type": "string",
                    "description": "The algorithm used to transform colors to grays, either `Brightness`, `Lightness`, `Rec601`, or the default `Rec709`.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationHsl:getImagingPolicyImagePolicyPostBreakpointTransformationHsl": {
            "properties": {
                "hue": {
                    "type": "string",
                    "description": "The number of degrees to rotate colors around the color wheel, \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e by default.\n"
                },
                "hueVar": {
                    "type": "string",
                    "description": "The number of degrees to rotate colors around the color wheel, \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e by default.\n"
                },
                "lightness": {
                    "type": "string",
                    "description": "A multiplier to adjust the lightness of colors in the image. Note that lightness is distinct from brightness. For example, reducing the lightness of a light green might give you a lime green whereas reducing the brightness of a light green might give you a darker shade of the same green. Values less than `1.0` decrease the lightness of colors in the image. Values greater than `1.0` increase the lightness of colors in the image.\n"
                },
                "lightnessVar": {
                    "type": "string",
                    "description": "A multiplier to adjust the lightness of colors in the image. Note that lightness is distinct from brightness. For example, reducing the lightness of a light green might give you a lime green whereas reducing the brightness of a light green might give you a darker shade of the same green. Values less than `1.0` decrease the lightness of colors in the image. Values greater than `1.0` increase the lightness of colors in the image.\n"
                },
                "saturation": {
                    "type": "string",
                    "description": "A multiplier to adjust the saturation of colors in the image. Values less than `1.0` decrease saturation and values greater than `1.0` increase the saturation. A value of `0.0` removes all color from the image.\n"
                },
                "saturationVar": {
                    "type": "string",
                    "description": "A multiplier to adjust the saturation of colors in the image. Values less than `1.0` decrease saturation and values greater than `1.0` increase the saturation. A value of `0.0` removes all color from the image.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationHsv:getImagingPolicyImagePolicyPostBreakpointTransformationHsv": {
            "properties": {
                "hue": {
                    "type": "string",
                    "description": "The number of degrees to rotate colors around the color wheel, `0.0` by default.\n"
                },
                "hueVar": {
                    "type": "string",
                    "description": "The number of degrees to rotate colors around the color wheel, `0.0` by default.\n"
                },
                "saturation": {
                    "type": "string",
                    "description": "A multiplier to adjust the saturation of colors in the image. Values less than `1.0` decrease saturation and values greater than `1.0` increase the saturation. A value of `0.0` removes all color from the image.\n"
                },
                "saturationVar": {
                    "type": "string",
                    "description": "A multiplier to adjust the saturation of colors in the image. Values less than `1.0` decrease saturation and values greater than `1.0` increase the saturation. A value of `0.0` removes all color from the image.\n"
                },
                "value": {
                    "type": "string",
                    "description": "A multiplier to adjust the lightness or darkness of the images base color. Values less than 1.0 decrease the base colors in the image, making them appear darker. Values greater than 1.0 increase the base colors in the image, making them appear lighter.\n"
                },
                "valueVar": {
                    "type": "string",
                    "description": "A multiplier to adjust the lightness or darkness of the images base color. Values less than 1.0 decrease the base colors in the image, making them appear darker. Values greater than 1.0 increase the base colors in the image, making them appear lighter.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationIfDimension:getImagingPolicyImagePolicyPostBreakpointTransformationIfDimension": {
            "properties": {
                "default": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "dimension": {
                    "type": "string",
                    "description": "The dimension to use to select the transformation, either \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`both`\" pulumi-lang-dotnet=\"`Both`\" pulumi-lang-go=\"`both`\" pulumi-lang-python=\"`both`\" pulumi-lang-yaml=\"`both`\" pulumi-lang-java=\"`both`\"\u003e`both`\u003c/span\u003e.\n"
                },
                "dimensionVar": {
                    "type": "string",
                    "description": "The dimension to use to select the transformation, either \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`both`\" pulumi-lang-dotnet=\"`Both`\" pulumi-lang-go=\"`both`\" pulumi-lang-python=\"`both`\" pulumi-lang-yaml=\"`both`\" pulumi-lang-java=\"`both`\"\u003e`both`\u003c/span\u003e.\n"
                },
                "equal": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "greaterThan": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "lessThan": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare against the source image dimension. For example, if the image dimension is less than the value the lessThan transformation is applied.\n"
                },
                "valueVar": {
                    "type": "string",
                    "description": "The value to compare against the source image dimension. For example, if the image dimension is less than the value the lessThan transformation is applied.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationIfOrientation:getImagingPolicyImagePolicyPostBreakpointTransformationIfOrientation": {
            "properties": {
                "default": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "landscape": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "portrait": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                },
                "square": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformation:getImagingPolicyImagePolicyPostBreakpointTransformation"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMaxColor:getImagingPolicyImagePolicyPostBreakpointTransformationMaxColor": {
            "properties": {
                "colors": {
                    "type": "string",
                    "description": "The value representing the maximum number of colors to use with the source image.\n"
                },
                "colorsVar": {
                    "type": "string",
                    "description": "The value representing the maximum number of colors to use with the source image.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMirror:getImagingPolicyImagePolicyPostBreakpointTransformationMirror": {
            "properties": {
                "horizontal": {
                    "type": "string",
                    "description": "Flips the image horizontally.\n"
                },
                "horizontalVar": {
                    "type": "string",
                    "description": "Flips the image horizontally.\n"
                },
                "vertical": {
                    "type": "string",
                    "description": "Flips the image vertically.\n"
                },
                "verticalVar": {
                    "type": "string",
                    "description": "Flips the image vertically.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationMonoHue:getImagingPolicyImagePolicyPostBreakpointTransformationMonoHue": {
            "properties": {
                "hue": {
                    "type": "string",
                    "description": "Specify a hue by indicating the degree of rotation between 0 and 360 degrees around the color wheel. By default Mono Hue applies a red hue, 0.0 on the color wheel.\n"
                },
                "hueVar": {
                    "type": "string",
                    "description": "Specify a hue by indicating the degree of rotation between 0 and 360 degrees around the color wheel. By default Mono Hue applies a red hue, 0.0 on the color wheel.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationOpacity:getImagingPolicyImagePolicyPostBreakpointTransformationOpacity": {
            "properties": {
                "opacity": {
                    "type": "string",
                    "description": "Represents alpha values on a scale of \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Values below \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e increase transparency, and \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e is invisible. For images that have some transparency, values above \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e increase the opacity of the transparent portions.\n"
                },
                "opacityVar": {
                    "type": "string",
                    "description": "Represents alpha values on a scale of \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Values below \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e increase transparency, and \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e is invisible. For images that have some transparency, values above \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e increase the opacity of the transparent portions.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationRemoveColor:getImagingPolicyImagePolicyPostBreakpointTransformationRemoveColor": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The hexadecimal CSS color value to remove.\n"
                },
                "colorVar": {
                    "type": "string",
                    "description": "The hexadecimal CSS color value to remove.\n"
                },
                "feather": {
                    "type": "string",
                    "description": "The RemoveColor transformation may create a hard edge around an image. To minimize these hard edges and make the removal of the color more gradual in appearance, use the Feather option. This option allows you to extend the color removal beyond the specified Tolerance. The pixels in this extended tolerance become semi-transparent - creating a softer edge.  The first realtime request for an image using the feather option may result in a slow transformation time. Subsequent requests are not impacted as they are served directly out of cache.\n"
                },
                "featherVar": {
                    "type": "string",
                    "description": "The RemoveColor transformation may create a hard edge around an image. To minimize these hard edges and make the removal of the color more gradual in appearance, use the Feather option. This option allows you to extend the color removal beyond the specified Tolerance. The pixels in this extended tolerance become semi-transparent - creating a softer edge.  The first realtime request for an image using the feather option may result in a slow transformation time. Subsequent requests are not impacted as they are served directly out of cache.\n"
                },
                "tolerance": {
                    "type": "string",
                    "description": "The Tolerance option defines how close the color needs to be to the selected color before it's changed to fully transparent. Set the Tolerance to 0.0 to remove only the exact color specified.\n"
                },
                "toleranceVar": {
                    "type": "string",
                    "description": "The Tolerance option defines how close the color needs to be to the selected color before it's changed to fully transparent. Set the Tolerance to 0.0 to remove only the exact color specified.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyPostBreakpointTransformationUnsharpMask:getImagingPolicyImagePolicyPostBreakpointTransformationUnsharpMask": {
            "properties": {
                "gain": {
                    "type": "string",
                    "description": "Set how much emphasis the filter applies to details. Higher values increase apparent sharpness of details.\n"
                },
                "gainVar": {
                    "type": "string",
                    "description": "Set how much emphasis the filter applies to details. Higher values increase apparent sharpness of details.\n"
                },
                "sigma": {
                    "type": "string",
                    "description": "The standard deviation of the Gaussian distribution used in the in unsharp mask, measured in pixels, `1.0` by default. High values emphasize large details and low values emphasize small details.\n"
                },
                "sigmaVar": {
                    "type": "string",
                    "description": "The standard deviation of the Gaussian distribution used in the in unsharp mask, measured in pixels, `1.0` by default. High values emphasize large details and low values emphasize small details.\n"
                },
                "threshold": {
                    "type": "string",
                    "description": "Set the minimum change required to include a detail in the filter. Higher values discard more changes.\n"
                },
                "thresholdVar": {
                    "type": "string",
                    "description": "Set the minimum change required to include a detail in the filter. Higher values discard more changes.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation": {
            "properties": {
                "appends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppend:getImagingPolicyImagePolicyTransformationAppend"
                    },
                    "description": "Places a specified \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e beside the source image. The API places the \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e on a major dimension, then aligns it on the minor dimension. Transparent pixels fill any area not covered by either image.\n"
                },
                "aspectCrops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAspectCrop:getImagingPolicyImagePolicyTransformationAspectCrop"
                    },
                    "description": "Lets you change the height or width of an image (either by cropping or expanding the area) to an aspect ratio of your choosing.\n"
                },
                "backgroundColors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationBackgroundColor:getImagingPolicyImagePolicyTransformationBackgroundColor"
                    },
                    "description": "Places a transparent image on a set background color. Color is specified in the typical CSS hexadecimal format.\n"
                },
                "blurs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationBlur:getImagingPolicyImagePolicyTransformationBlur"
                    },
                    "description": "Applies a Gaussian blur to the image.\n"
                },
                "chromaKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationChromaKey:getImagingPolicyImagePolicyTransformationChromaKey"
                    },
                    "description": "Changes any color in an image within the specified volume of the HSL colorspace to transparent or semitransparent. This transformation applies a 'green screen' technique commonly used to isolate and remove background colors.\n"
                },
                "composites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationComposite:getImagingPolicyImagePolicyTransformationComposite"
                    },
                    "description": "Applies another image to the source image, either as an overlay or an underlay. The image that's underneath is visible in areas that are beyond the edges of the top image or that are less than 100% opaque. A common use of an overlay composite is to add a watermark.\n"
                },
                "compounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompound:getImagingPolicyImagePolicyTransformationCompound"
                    }
                },
                "contrasts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationContrast:getImagingPolicyImagePolicyTransformationContrast"
                    },
                    "description": "Adjusts both the contrast and brightness of an image.\n"
                },
                "crops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCrop:getImagingPolicyImagePolicyTransformationCrop"
                    },
                    "description": "Crops an image.\n"
                },
                "faceCrops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationFaceCrop:getImagingPolicyImagePolicyTransformationFaceCrop"
                    },
                    "description": "Applies a method to detect faces in the source image and applies the rectangular crop on either the \u003cspan pulumi-lang-nodejs=\"`biggest`\" pulumi-lang-dotnet=\"`Biggest`\" pulumi-lang-go=\"`biggest`\" pulumi-lang-python=\"`biggest`\" pulumi-lang-yaml=\"`biggest`\" pulumi-lang-java=\"`biggest`\"\u003e`biggest`\u003c/span\u003e face or \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e of the faces detected. Image and Video Manager tries to preserve faces in the image instead of using specified crop coordinates.\n"
                },
                "featureCrops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationFeatureCrop:getImagingPolicyImagePolicyTransformationFeatureCrop"
                    },
                    "description": "Identifies prominent features of the source image, then crops around as many of these features as possible relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values.\n"
                },
                "fitAndFills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationFitAndFill:getImagingPolicyImagePolicyTransformationFitAndFill"
                    },
                    "description": "Resizes an image to fit within a specific size box and then uses a fill of that same image to cover any transparent space at the edges. By default the fill image has a Blur transformation with a sigma value of 8 applied, but the transformation can be customized using the fillTransformation parameter.\n"
                },
                "goops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationGoop:getImagingPolicyImagePolicyTransformationGoop"
                    },
                    "description": "Distorts an image by randomly repositioning a set of control points along a specified grid. The transformed image appears _goopy_. Adjust the density of the grid and the degree of randomity. You can use this transformation to create watermarks for use in security.\n"
                },
                "grayscales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationGrayscale:getImagingPolicyImagePolicyTransformationGrayscale"
                    },
                    "description": "Restricts image color to shades of gray only.\n"
                },
                "hsls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationHsl:getImagingPolicyImagePolicyTransformationHsl"
                    },
                    "description": "Adjusts the hue, saturation, and lightness (HSL) of an image. Hue is the number of degrees that colors rotate around the color wheel. Saturation is a multiplier to increase or decrease color saturation. Lightness is a multiplier to increase or decrease the lightness of an image. Other transformations can also affect color, such as `Grayscale` and `MaxColors`. If youre using more than one, consider the order to apply them for the desired results.\n"
                },
                "hsvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationHsv:getImagingPolicyImagePolicyTransformationHsv"
                    },
                    "description": "Identical to HSL except it replaces \u003cspan pulumi-lang-nodejs=\"`lightness`\" pulumi-lang-dotnet=\"`Lightness`\" pulumi-lang-go=\"`lightness`\" pulumi-lang-python=\"`lightness`\" pulumi-lang-yaml=\"`lightness`\" pulumi-lang-java=\"`lightness`\"\u003e`lightness`\u003c/span\u003e with \u003cspan pulumi-lang-nodejs=\"`value`\" pulumi-lang-dotnet=\"`Value`\" pulumi-lang-go=\"`value`\" pulumi-lang-python=\"`value`\" pulumi-lang-yaml=\"`value`\" pulumi-lang-java=\"`value`\"\u003e`value`\u003c/span\u003e. For example, if you reduce the \u003cspan pulumi-lang-nodejs=\"`lightness`\" pulumi-lang-dotnet=\"`Lightness`\" pulumi-lang-go=\"`lightness`\" pulumi-lang-python=\"`lightness`\" pulumi-lang-yaml=\"`lightness`\" pulumi-lang-java=\"`lightness`\"\u003e`lightness`\u003c/span\u003e of a light green, almost white, image, the color turns a vibrant green. Reducing the \u003cspan pulumi-lang-nodejs=\"`value`\" pulumi-lang-dotnet=\"`Value`\" pulumi-lang-go=\"`value`\" pulumi-lang-python=\"`value`\" pulumi-lang-yaml=\"`value`\" pulumi-lang-java=\"`value`\"\u003e`value`\u003c/span\u003e turns the image a darker color, close to grey. This happens because the original image color is very close to white.\n"
                },
                "ifDimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationIfDimension:getImagingPolicyImagePolicyTransformationIfDimension"
                    }
                },
                "ifOrientations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationIfOrientation:getImagingPolicyImagePolicyTransformationIfOrientation"
                    }
                },
                "imQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationImQuery:getImagingPolicyImagePolicyTransformationImQuery"
                    },
                    "description": "Apply artistic transformations to images quickly and dynamically by specifying transformations with a query string appendedto the image URL.\n"
                },
                "maxColors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationMaxColor:getImagingPolicyImagePolicyTransformationMaxColor"
                    },
                    "description": "Set the maximum number of colors in the images palette. Reducing the number of colors in an image can help to reduce file size.\n"
                },
                "mirrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationMirror:getImagingPolicyImagePolicyTransformationMirror"
                    },
                    "description": "Flips an image horizontally, vertically, or both.\n"
                },
                "monoHues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationMonoHue:getImagingPolicyImagePolicyTransformationMonoHue"
                    },
                    "description": "Allows you to set all hues in an image to a single specified hue of your choosing. Mono Hue maintains the original color’s lightness and saturation but sets the hue to that of the specified value. This has the effect of making the image shades of the specified hue.\n"
                },
                "opacities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationOpacity:getImagingPolicyImagePolicyTransformationOpacity"
                    },
                    "description": "Adjusts the level of transparency of an image. Use this transformation to make an image more or less transparent.\n"
                },
                "regionOfInterestCrops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCrop:getImagingPolicyImagePolicyTransformationRegionOfInterestCrop"
                    },
                    "description": "Crops to a region around a specified area of interest relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values.\n"
                },
                "relativeCrops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRelativeCrop:getImagingPolicyImagePolicyTransformationRelativeCrop"
                    },
                    "description": "Shrinks or expands an image relative to the image's specified dimensions. Image and Video Manager fills the expanded areas with transparency. Positive values shrink the side, while negative values expand it.\n"
                },
                "removeColors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRemoveColor:getImagingPolicyImagePolicyTransformationRemoveColor"
                    },
                    "description": "Removes a specified color from an image and replaces it with transparent pixels. This transformation is ideal for removing solid background colors from product images photographed on clean, consistent backgrounds without any shadows.\n"
                },
                "resizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationResize:getImagingPolicyImagePolicyTransformationResize"
                    },
                    "description": "Resizes an image to a particular, absolute dimension. If you don't enter a \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e or a \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e, the image is resized with the \u003cspan pulumi-lang-nodejs=\"`fit`\" pulumi-lang-dotnet=\"`Fit`\" pulumi-lang-go=\"`fit`\" pulumi-lang-python=\"`fit`\" pulumi-lang-yaml=\"`fit`\" pulumi-lang-java=\"`fit`\"\u003e`fit`\u003c/span\u003e aspect preservation mode, which selects a value for the missing dimension that preserves the image's aspect.\n"
                },
                "rotates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRotate:getImagingPolicyImagePolicyTransformationRotate"
                    },
                    "description": "Rotate the image around its center by indicating the degrees of rotation.\n"
                },
                "scales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationScale:getImagingPolicyImagePolicyTransformationScale"
                    },
                    "description": "Changes the image's size to different dimensions relative to its starting size.\n"
                },
                "shears": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationShears:getImagingPolicyImagePolicyTransformationShears"
                    },
                    "description": "Slants an image into a parallelogram, as a percent of the starting dimension as represented in decimal format. You need to specify at least one axis property. Transparent pixels fill empty areas around the sheared image as needed, so it's often useful to use a `BackgroundColor` transformation for these areas.\n"
                },
                "smartCrops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationSmartCrop:getImagingPolicyImagePolicyTransformationSmartCrop"
                    },
                    "description": "Crops around whatever is most important in the image, to a region around a specified area of interest relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. The crop detects any faces present, otherwise features.\n"
                },
                "trims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationTrim:getImagingPolicyImagePolicyTransformationTrim"
                    },
                    "description": "Automatically crops uniform backgrounds from the edges of an image.\n"
                },
                "unsharpMasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationUnsharpMask:getImagingPolicyImagePolicyTransformationUnsharpMask"
                    },
                    "description": "Emphasizes edges and details in source images without distorting the colors. Although this effect is often referred to as _sharpening_ an image, it actually creates a blurred, inverted copy of the image known as an unsharp mask. Image and Video Manager combines the unsharp mask with the source image to create an image perceived as clearer.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationAppend:getImagingPolicyImagePolicyTransformationAppend": {
            "properties": {
                "gravity": {
                    "type": "string",
                    "description": "Specifies where to place the \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e relative to the source image. The available values represent the eight cardinal directions (`North`, `South`, `East`, `West`, `NorthEast`, `NorthWest`, `SouthEast`, `SouthWest`) and a `Center` by default.\n"
                },
                "gravityPriority": {
                    "type": "string",
                    "description": "Determines the exact placement of the \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e when \u003cspan pulumi-lang-nodejs=\"`gravity`\" pulumi-lang-dotnet=\"`Gravity`\" pulumi-lang-go=\"`gravity`\" pulumi-lang-python=\"`gravity`\" pulumi-lang-yaml=\"`gravity`\" pulumi-lang-java=\"`gravity`\"\u003e`gravity`\u003c/span\u003e is `Center` or a diagonal. The value is either \u003cspan pulumi-lang-nodejs=\"`horizontal`\" pulumi-lang-dotnet=\"`Horizontal`\" pulumi-lang-go=\"`horizontal`\" pulumi-lang-python=\"`horizontal`\" pulumi-lang-yaml=\"`horizontal`\" pulumi-lang-java=\"`horizontal`\"\u003e`horizontal`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`vertical`\" pulumi-lang-dotnet=\"`Vertical`\" pulumi-lang-go=\"`vertical`\" pulumi-lang-python=\"`vertical`\" pulumi-lang-yaml=\"`vertical`\" pulumi-lang-java=\"`vertical`\"\u003e`vertical`\u003c/span\u003e. Use \u003cspan pulumi-lang-nodejs=\"`horizontal`\" pulumi-lang-dotnet=\"`Horizontal`\" pulumi-lang-go=\"`horizontal`\" pulumi-lang-python=\"`horizontal`\" pulumi-lang-yaml=\"`horizontal`\" pulumi-lang-java=\"`horizontal`\"\u003e`horizontal`\u003c/span\u003e to append an \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e east or west of the source image. This aligns the \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e on the vertical gravity component, placing `Center` gravity east. Use \u003cspan pulumi-lang-nodejs=\"`vertical`\" pulumi-lang-dotnet=\"`Vertical`\" pulumi-lang-go=\"`vertical`\" pulumi-lang-python=\"`vertical`\" pulumi-lang-yaml=\"`vertical`\" pulumi-lang-java=\"`vertical`\"\u003e`vertical`\u003c/span\u003e to append an \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e north or south of the source image. This aligns the \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e on the horizontal gravity component, placing `Center` gravity south.\n"
                },
                "gravityPriorityVar": {
                    "type": "string",
                    "description": "Determines the exact placement of the \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e when \u003cspan pulumi-lang-nodejs=\"`gravity`\" pulumi-lang-dotnet=\"`Gravity`\" pulumi-lang-go=\"`gravity`\" pulumi-lang-python=\"`gravity`\" pulumi-lang-yaml=\"`gravity`\" pulumi-lang-java=\"`gravity`\"\u003e`gravity`\u003c/span\u003e is `Center` or a diagonal. The value is either \u003cspan pulumi-lang-nodejs=\"`horizontal`\" pulumi-lang-dotnet=\"`Horizontal`\" pulumi-lang-go=\"`horizontal`\" pulumi-lang-python=\"`horizontal`\" pulumi-lang-yaml=\"`horizontal`\" pulumi-lang-java=\"`horizontal`\"\u003e`horizontal`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`vertical`\" pulumi-lang-dotnet=\"`Vertical`\" pulumi-lang-go=\"`vertical`\" pulumi-lang-python=\"`vertical`\" pulumi-lang-yaml=\"`vertical`\" pulumi-lang-java=\"`vertical`\"\u003e`vertical`\u003c/span\u003e. Use \u003cspan pulumi-lang-nodejs=\"`horizontal`\" pulumi-lang-dotnet=\"`Horizontal`\" pulumi-lang-go=\"`horizontal`\" pulumi-lang-python=\"`horizontal`\" pulumi-lang-yaml=\"`horizontal`\" pulumi-lang-java=\"`horizontal`\"\u003e`horizontal`\u003c/span\u003e to append an \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e east or west of the source image. This aligns the \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e on the vertical gravity component, placing `Center` gravity east. Use \u003cspan pulumi-lang-nodejs=\"`vertical`\" pulumi-lang-dotnet=\"`Vertical`\" pulumi-lang-go=\"`vertical`\" pulumi-lang-python=\"`vertical`\" pulumi-lang-yaml=\"`vertical`\" pulumi-lang-java=\"`vertical`\"\u003e`vertical`\u003c/span\u003e to append an \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e north or south of the source image. This aligns the \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e on the horizontal gravity component, placing `Center` gravity south.\n"
                },
                "gravityVar": {
                    "type": "string",
                    "description": "Specifies where to place the \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e relative to the source image. The available values represent the eight cardinal directions (`North`, `South`, `East`, `West`, `NorthEast`, `NorthWest`, `SouthEast`, `SouthWest`) and a `Center` by default.\n"
                },
                "image": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppendImage:getImagingPolicyImagePolicyTransformationAppendImage"
                },
                "preserveMinorDimension": {
                    "type": "string",
                    "description": "Whether to preserve the source image's minor dimension, \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e by default. The minor dimension is the dimension opposite the dimension that the appending \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e is placed. For example, the dimensions of the source image are 100 \u0026times; 100 pixels. The dimensions of the appending \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e are 50 \u0026times; 150 pixels. The \u003cspan pulumi-lang-nodejs=\"`gravity`\" pulumi-lang-dotnet=\"`Gravity`\" pulumi-lang-go=\"`gravity`\" pulumi-lang-python=\"`gravity`\" pulumi-lang-yaml=\"`gravity`\" pulumi-lang-java=\"`gravity`\"\u003e`gravity`\u003c/span\u003e is set to `East`. This makes the major dimension horizontal and the source image's minor dimension vertical. To preserve the source image's minor dimension at 100 pixels, the `preserveMinorDimension` is set to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e. As a result of the append, the major dimension expanded with the appended image to 150 pixels. The source image's minor dimension was maintained at 100 pixels. The total combined dimension of the image is 150 \u0026times; 100 pixels.\n"
                },
                "preserveMinorDimensionVar": {
                    "type": "string",
                    "description": "Whether to preserve the source image's minor dimension, \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e by default. The minor dimension is the dimension opposite the dimension that the appending \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e is placed. For example, the dimensions of the source image are 100 \u0026times; 100 pixels. The dimensions of the appending \u003cspan pulumi-lang-nodejs=\"`image`\" pulumi-lang-dotnet=\"`Image`\" pulumi-lang-go=\"`image`\" pulumi-lang-python=\"`image`\" pulumi-lang-yaml=\"`image`\" pulumi-lang-java=\"`image`\"\u003e`image`\u003c/span\u003e are 50 \u0026times; 150 pixels. The \u003cspan pulumi-lang-nodejs=\"`gravity`\" pulumi-lang-dotnet=\"`Gravity`\" pulumi-lang-go=\"`gravity`\" pulumi-lang-python=\"`gravity`\" pulumi-lang-yaml=\"`gravity`\" pulumi-lang-java=\"`gravity`\"\u003e`gravity`\u003c/span\u003e is set to `East`. This makes the major dimension horizontal and the source image's minor dimension vertical. To preserve the source image's minor dimension at 100 pixels, the `preserveMinorDimension` is set to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e. As a result of the append, the major dimension expanded with the appended image to 150 pixels. The source image's minor dimension was maintained at 100 pixels. The total combined dimension of the image is 150 \u0026times; 100 pixels.\n"
                }
            },
            "type": "object",
            "required": [
                "image"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationAppendImage:getImagingPolicyImagePolicyTransformationAppendImage": {
            "properties": {
                "boxImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppendImageBoxImage:getImagingPolicyImagePolicyTransformationAppendImageBoxImage"
                    },
                    "description": "A rectangular box, with a specified color and applied transformation.\n"
                },
                "circleImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppendImageCircleImage:getImagingPolicyImagePolicyTransformationAppendImageCircleImage"
                    },
                    "description": "A rectangular box, with a specified color and applied transformation.\n"
                },
                "textImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppendImageTextImage:getImagingPolicyImagePolicyTransformationAppendImageTextImage"
                    },
                    "description": "A snippet of text. Defines font family and size, fill color, and outline stroke width and color.\n"
                },
                "urlImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationAppendImageUrlImage:getImagingPolicyImagePolicyTransformationAppendImageUrlImage"
                    },
                    "description": "An image loaded from a URL.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationAppendImageBoxImage:getImagingPolicyImagePolicyTransformationAppendImageBoxImage": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The fill color of the box, not the edge of the box. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "colorVar": {
                    "type": "string",
                    "description": "The fill color of the box, not the edge of the box. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "height": {
                    "type": "string",
                    "description": "The height of the box in pixels.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The height of the box in pixels.\n"
                },
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "width": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationAppendImageCircleImage:getImagingPolicyImagePolicyTransformationAppendImageCircleImage": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The fill color of the circle. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "colorVar": {
                    "type": "string",
                    "description": "The fill color of the circle. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "diameter": {
                    "type": "string",
                    "description": "The diameter of the circle. The diameter will be the width and the height of the image in pixels.\n"
                },
                "diameterVar": {
                    "type": "string",
                    "description": "The diameter of the circle. The diameter will be the width and the height of the image in pixels.\n"
                },
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "width": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationAppendImageTextImage:getImagingPolicyImagePolicyTransformationAppendImageTextImage": {
            "properties": {
                "fill": {
                    "type": "string",
                    "description": "The main fill color of the text.\n"
                },
                "fillVar": {
                    "type": "string",
                    "description": "The main fill color of the text.\n"
                },
                "size": {
                    "type": "string",
                    "description": "The size in pixels to render the text.\n"
                },
                "sizeVar": {
                    "type": "string",
                    "description": "The size in pixels to render the text.\n"
                },
                "stroke": {
                    "type": "string",
                    "description": "The color for the outline of the text.\n"
                },
                "strokeSize": {
                    "type": "string",
                    "description": "The thickness in points for the outline of the text.\n"
                },
                "strokeSizeVar": {
                    "type": "string",
                    "description": "The thickness in points for the outline of the text.\n"
                },
                "strokeVar": {
                    "type": "string",
                    "description": "The color for the outline of the text.\n"
                },
                "text": {
                    "type": "string",
                    "description": "The line of text to render.\n"
                },
                "textVar": {
                    "type": "string",
                    "description": "The line of text to render.\n"
                },
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "typeface": {
                    "type": "string",
                    "description": "The font family to apply to the text image. This may be a URL to a TrueType or WOFF (v1) typeface, or a string that refers to one of the standard built-in browser fonts.\n"
                },
                "typefaceVar": {
                    "type": "string",
                    "description": "The font family to apply to the text image. This may be a URL to a TrueType or WOFF (v1) typeface, or a string that refers to one of the standard built-in browser fonts.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationAppendImageUrlImage:getImagingPolicyImagePolicyTransformationAppendImageUrlImage": {
            "properties": {
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the image.\n"
                },
                "urlVar": {
                    "type": "string",
                    "description": "The URL of the image.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationAspectCrop:getImagingPolicyImagePolicyTransformationAspectCrop": {
            "properties": {
                "allowExpansion": {
                    "type": "string",
                    "description": "Increases the size of the image canvas to achieve the requested aspect ratio instead of cropping the image. Use the Horizontal Offset and Vertical Offset settings to determine where to add the fully transparent pixels on the expanded image canvas.\n"
                },
                "allowExpansionVar": {
                    "type": "string",
                    "description": "Increases the size of the image canvas to achieve the requested aspect ratio instead of cropping the image. Use the Horizontal Offset and Vertical Offset settings to determine where to add the fully transparent pixels on the expanded image canvas.\n"
                },
                "height": {
                    "type": "string",
                    "description": "The height term of the aspect ratio to crop.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The height term of the aspect ratio to crop.\n"
                },
                "width": {
                    "type": "string",
                    "description": "The width term of the aspect ratio to crop.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width term of the aspect ratio to crop.\n"
                },
                "xPosition": {
                    "type": "string",
                    "description": "Specifies the horizontal portion of the image you want to keep when the aspect ratio cropping is applied. When using Allow Expansion this setting defines the horizontal position of the image on the new expanded image canvas.\n"
                },
                "xPositionVar": {
                    "type": "string",
                    "description": "Specifies the horizontal portion of the image you want to keep when the aspect ratio cropping is applied. When using Allow Expansion this setting defines the horizontal position of the image on the new expanded image canvas.\n"
                },
                "yPosition": {
                    "type": "string",
                    "description": "Specifies the horizontal portion of the image you want to keep when the aspect ratio cropping is applied. When using Allow Expansion this setting defines the horizontal position of the image on the new expanded image canvas.\n"
                },
                "yPositionVar": {
                    "type": "string",
                    "description": "Specifies the horizontal portion of the image you want to keep when the aspect ratio cropping is applied. When using Allow Expansion this setting defines the horizontal position of the image on the new expanded image canvas.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationBackgroundColor:getImagingPolicyImagePolicyTransformationBackgroundColor": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The hexadecimal CSS color value for the background.\n"
                },
                "colorVar": {
                    "type": "string",
                    "description": "The hexadecimal CSS color value for the background.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationBlur:getImagingPolicyImagePolicyTransformationBlur": {
            "properties": {
                "sigma": {
                    "type": "string",
                    "description": "The number of pixels to scatter the original pixel by to create the blur effect. Resulting images may be larger than the original as pixels at the edge of the image might scatter outside the image's original dimensions.\n"
                },
                "sigmaVar": {
                    "type": "string",
                    "description": "The number of pixels to scatter the original pixel by to create the blur effect. Resulting images may be larger than the original as pixels at the edge of the image might scatter outside the image's original dimensions.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationChromaKey:getImagingPolicyImagePolicyTransformationChromaKey": {
            "properties": {
                "hue": {
                    "type": "string",
                    "description": "The hue to remove. Enter the degree of rotation between 0 and 360 degrees around the color wheel. By default Chroma Key removes a green hue, 120° on the color wheel.\n"
                },
                "hueFeather": {
                    "type": "string",
                    "description": "How much additional hue to make semi-transparent beyond the Hue Tolerance. By default Hue Feather is 0.083 which applies semi-transparency to hues 30° around the Hue Tolerance.\n"
                },
                "hueFeatherVar": {
                    "type": "string",
                    "description": "How much additional hue to make semi-transparent beyond the Hue Tolerance. By default Hue Feather is 0.083 which applies semi-transparency to hues 30° around the Hue Tolerance.\n"
                },
                "hueTolerance": {
                    "type": "string",
                    "description": "How close a color's hue needs to be to the selected hue for it to be changed to fully transparent. If you enter the maximum value of 1.0 the entire image is made transparent. By default Hue Tolerance is approximately 0.083 or 8.3% of the color wheel. This value corresponds to 30° around the specified hue.\n"
                },
                "hueToleranceVar": {
                    "type": "string",
                    "description": "How close a color's hue needs to be to the selected hue for it to be changed to fully transparent. If you enter the maximum value of 1.0 the entire image is made transparent. By default Hue Tolerance is approximately 0.083 or 8.3% of the color wheel. This value corresponds to 30° around the specified hue.\n"
                },
                "hueVar": {
                    "type": "string",
                    "description": "The hue to remove. Enter the degree of rotation between 0 and 360 degrees around the color wheel. By default Chroma Key removes a green hue, 120° on the color wheel.\n"
                },
                "lightnessFeather": {
                    "type": "string",
                    "description": "How much additional lightness to make semi-transparent beyond the Lightness Tolerance. The default value of 0.1 corresponds to 10% away from the tolerated lightness towards full black or full white.\n"
                },
                "lightnessFeatherVar": {
                    "type": "string",
                    "description": "How much additional lightness to make semi-transparent beyond the Lightness Tolerance. The default value of 0.1 corresponds to 10% away from the tolerated lightness towards full black or full white.\n"
                },
                "lightnessTolerance": {
                    "type": "string",
                    "description": "How much of the lightest part and darkest part of a color to preserve. For example, you can space this value out from the middle (i.e. 0.5 lightness or full color) to help preserve the splash lighting impact in the image. You can define how close the color needs to be to the full color to remove it from your image. The default value of 0.75 means that a colour must be within 75% of the full color to full white or full black for full removal.\n"
                },
                "lightnessToleranceVar": {
                    "type": "string",
                    "description": "How much of the lightest part and darkest part of a color to preserve. For example, you can space this value out from the middle (i.e. 0.5 lightness or full color) to help preserve the splash lighting impact in the image. You can define how close the color needs to be to the full color to remove it from your image. The default value of 0.75 means that a colour must be within 75% of the full color to full white or full black for full removal.\n"
                },
                "saturationFeather": {
                    "type": "string",
                    "description": "How much additional saturation to make semi-transparent beyond the Saturation Tolerance. By default Saturation Feather is 0.1 which applies semi-transparency to hues 10% below the saturationTolerance.\n"
                },
                "saturationFeatherVar": {
                    "type": "string",
                    "description": "How much additional saturation to make semi-transparent beyond the Saturation Tolerance. By default Saturation Feather is 0.1 which applies semi-transparency to hues 10% below the saturationTolerance.\n"
                },
                "saturationTolerance": {
                    "type": "string",
                    "description": "How close a color's saturation needs to be to full saturation for it to be changed to fully transparent. For example, you can define how green the color needs to be to remove it from your image. The default value of 0.75 means that a color must be within 75% of full saturation in order to be made fully transparent.\n"
                },
                "saturationToleranceVar": {
                    "type": "string",
                    "description": "How close a color's saturation needs to be to full saturation for it to be changed to fully transparent. For example, you can define how green the color needs to be to remove it from your image. The default value of 0.75 means that a color must be within 75% of full saturation in order to be made fully transparent.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationComposite:getImagingPolicyImagePolicyTransformationComposite": {
            "properties": {
                "gravity": {
                    "type": "string",
                    "description": "Compass direction indicating the corner or edge of the base image to place the applied image. Use Horizontal and Vertical Offset to adjust the applied image's gravity position\n"
                },
                "gravityVar": {
                    "type": "string",
                    "description": "Compass direction indicating the corner or edge of the base image to place the applied image. Use Horizontal and Vertical Offset to adjust the applied image's gravity position\n"
                },
                "image": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompositeImage:getImagingPolicyImagePolicyTransformationCompositeImage"
                },
                "placement": {
                    "type": "string",
                    "description": "Place applied image on top of or underneath the base image. Watermarks are usually applied over. Backgrounds are usually applied under.\n"
                },
                "placementVar": {
                    "type": "string",
                    "description": "Place applied image on top of or underneath the base image. Watermarks are usually applied over. Backgrounds are usually applied under.\n"
                },
                "scale": {
                    "type": "string",
                    "description": "A multiplier to resize the applied image relative to the source image and preserve aspect ratio, 1 by default. Set the `scaleDimension` to calculate the \u003cspan pulumi-lang-nodejs=\"`scale`\" pulumi-lang-dotnet=\"`Scale`\" pulumi-lang-go=\"`scale`\" pulumi-lang-python=\"`scale`\" pulumi-lang-yaml=\"`scale`\" pulumi-lang-java=\"`scale`\"\u003e`scale`\u003c/span\u003e from the source image's width or height.\n"
                },
                "scaleDimension": {
                    "type": "string",
                    "description": "The dimension, either \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e, of the source image to scale.\n"
                },
                "scaleDimensionVar": {
                    "type": "string",
                    "description": "The dimension, either \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e, of the source image to scale.\n"
                },
                "scaleVar": {
                    "type": "string",
                    "description": "A multiplier to resize the applied image relative to the source image and preserve aspect ratio, 1 by default. Set the `scaleDimension` to calculate the \u003cspan pulumi-lang-nodejs=\"`scale`\" pulumi-lang-dotnet=\"`Scale`\" pulumi-lang-go=\"`scale`\" pulumi-lang-python=\"`scale`\" pulumi-lang-yaml=\"`scale`\" pulumi-lang-java=\"`scale`\"\u003e`scale`\u003c/span\u003e from the source image's width or height.\n"
                },
                "xPosition": {
                    "type": "string",
                    "description": "The x-axis position of the image to apply.\n"
                },
                "xPositionVar": {
                    "type": "string",
                    "description": "The x-axis position of the image to apply.\n"
                },
                "yPosition": {
                    "type": "string",
                    "description": "The y-axis position of the image to apply.\n"
                },
                "yPositionVar": {
                    "type": "string",
                    "description": "The y-axis position of the image to apply.\n"
                }
            },
            "type": "object",
            "required": [
                "image"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationCompositeImage:getImagingPolicyImagePolicyTransformationCompositeImage": {
            "properties": {
                "boxImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageBoxImage:getImagingPolicyImagePolicyTransformationCompositeImageBoxImage"
                    },
                    "description": "A rectangular box, with a specified color and applied transformation.\n"
                },
                "circleImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageCircleImage:getImagingPolicyImagePolicyTransformationCompositeImageCircleImage"
                    },
                    "description": "A rectangular box, with a specified color and applied transformation.\n"
                },
                "textImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageTextImage:getImagingPolicyImagePolicyTransformationCompositeImageTextImage"
                    },
                    "description": "A snippet of text. Defines font family and size, fill color, and outline stroke width and color.\n"
                },
                "urlImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageUrlImage:getImagingPolicyImagePolicyTransformationCompositeImageUrlImage"
                    },
                    "description": "An image loaded from a URL.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageBoxImage:getImagingPolicyImagePolicyTransformationCompositeImageBoxImage": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The fill color of the box, not the edge of the box. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "colorVar": {
                    "type": "string",
                    "description": "The fill color of the box, not the edge of the box. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "height": {
                    "type": "string",
                    "description": "The height of the box in pixels.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The height of the box in pixels.\n"
                },
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "width": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageCircleImage:getImagingPolicyImagePolicyTransformationCompositeImageCircleImage": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The fill color of the circle. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "colorVar": {
                    "type": "string",
                    "description": "The fill color of the circle. The API supports hexadecimal representation and CSS hexadecimal color values.\n"
                },
                "diameter": {
                    "type": "string",
                    "description": "The diameter of the circle. The diameter will be the width and the height of the image in pixels.\n"
                },
                "diameterVar": {
                    "type": "string",
                    "description": "The diameter of the circle. The diameter will be the width and the height of the image in pixels.\n"
                },
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "width": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width of the box in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageTextImage:getImagingPolicyImagePolicyTransformationCompositeImageTextImage": {
            "properties": {
                "fill": {
                    "type": "string",
                    "description": "The main fill color of the text.\n"
                },
                "fillVar": {
                    "type": "string",
                    "description": "The main fill color of the text.\n"
                },
                "size": {
                    "type": "string",
                    "description": "The size in pixels to render the text.\n"
                },
                "sizeVar": {
                    "type": "string",
                    "description": "The size in pixels to render the text.\n"
                },
                "stroke": {
                    "type": "string",
                    "description": "The color for the outline of the text.\n"
                },
                "strokeSize": {
                    "type": "string",
                    "description": "The thickness in points for the outline of the text.\n"
                },
                "strokeSizeVar": {
                    "type": "string",
                    "description": "The thickness in points for the outline of the text.\n"
                },
                "strokeVar": {
                    "type": "string",
                    "description": "The color for the outline of the text.\n"
                },
                "text": {
                    "type": "string",
                    "description": "The line of text to render.\n"
                },
                "textVar": {
                    "type": "string",
                    "description": "The line of text to render.\n"
                },
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "typeface": {
                    "type": "string",
                    "description": "The font family to apply to the text image. This may be a URL to a TrueType or WOFF (v1) typeface, or a string that refers to one of the standard built-in browser fonts.\n"
                },
                "typefaceVar": {
                    "type": "string",
                    "description": "The font family to apply to the text image. This may be a URL to a TrueType or WOFF (v1) typeface, or a string that refers to one of the standard built-in browser fonts.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationCompositeImageUrlImage:getImagingPolicyImagePolicyTransformationCompositeImageUrlImage": {
            "properties": {
                "transformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the image.\n"
                },
                "urlVar": {
                    "type": "string",
                    "description": "The URL of the image.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationCompound:getImagingPolicyImagePolicyTransformationCompound": {
            "properties": {
                "transformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationContrast:getImagingPolicyImagePolicyTransformationContrast": {
            "properties": {
                "brightness": {
                    "type": "string",
                    "description": "Adjusts the brightness of the image. Positive values increase brightness and negative values decrease brightness. A value of  \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e produces a white image. A value of  `-1` produces a black image. The default value is \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e, which leaves the image unchanged. The acceptable value range is `-1.0` to `1.0`. Values outside of the acceptable range clamp to this range.\n"
                },
                "brightnessVar": {
                    "type": "string",
                    "description": "Adjusts the brightness of the image. Positive values increase brightness and negative values decrease brightness. A value of  \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e produces a white image. A value of  `-1` produces a black image. The default value is \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e, which leaves the image unchanged. The acceptable value range is `-1.0` to `1.0`. Values outside of the acceptable range clamp to this range.\n"
                },
                "contrast": {
                    "type": "string",
                    "description": "Adjusts the contrast of the image. Expressed as a range from `-1` to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e, positive values increase contrast, negative values decrease it, while \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e leaves the image unchanged. Values outside of the `-1` to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e range clamp to this range.\n"
                },
                "contrastVar": {
                    "type": "string",
                    "description": "Adjusts the contrast of the image. Expressed as a range from `-1` to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e, positive values increase contrast, negative values decrease it, while \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e leaves the image unchanged. Values outside of the `-1` to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e range clamp to this range.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationCrop:getImagingPolicyImagePolicyTransformationCrop": {
            "properties": {
                "allowExpansion": {
                    "type": "string",
                    "description": "If cropping an area outside of the existing canvas, expands the image canvas.\n"
                },
                "allowExpansionVar": {
                    "type": "string",
                    "description": "If cropping an area outside of the existing canvas, expands the image canvas.\n"
                },
                "gravity": {
                    "type": "string",
                    "description": "Frame of reference for X and Y Positions.\n"
                },
                "gravityVar": {
                    "type": "string",
                    "description": "Frame of reference for X and Y Positions.\n"
                },
                "height": {
                    "type": "string",
                    "description": "The number of pixels to crop along the y-axis.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The number of pixels to crop along the y-axis.\n"
                },
                "width": {
                    "type": "string",
                    "description": "The number of pixels to crop along the x-axis.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The number of pixels to crop along the x-axis.\n"
                },
                "xPosition": {
                    "type": "string",
                    "description": "The x-axis position of the image to crop from.\n"
                },
                "xPositionVar": {
                    "type": "string",
                    "description": "The x-axis position of the image to crop from.\n"
                },
                "yPosition": {
                    "type": "string",
                    "description": "The y-axis position of the image to crop from.\n"
                },
                "yPositionVar": {
                    "type": "string",
                    "description": "The y-axis position of the image to crop from.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationFaceCrop:getImagingPolicyImagePolicyTransformationFaceCrop": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Specifies the type of algorithm used to detect faces in the image, either \u003cspan pulumi-lang-nodejs=\"`cascade`\" pulumi-lang-dotnet=\"`Cascade`\" pulumi-lang-go=\"`cascade`\" pulumi-lang-python=\"`cascade`\" pulumi-lang-yaml=\"`cascade`\" pulumi-lang-java=\"`cascade`\"\u003e`cascade`\u003c/span\u003e for the cascade classifier algorithm or \u003cspan pulumi-lang-nodejs=\"`dnn`\" pulumi-lang-dotnet=\"`Dnn`\" pulumi-lang-go=\"`dnn`\" pulumi-lang-python=\"`dnn`\" pulumi-lang-yaml=\"`dnn`\" pulumi-lang-java=\"`dnn`\"\u003e`dnn`\u003c/span\u003e for the deep neural network algorithm, \u003cspan pulumi-lang-nodejs=\"`cascade`\" pulumi-lang-dotnet=\"`Cascade`\" pulumi-lang-go=\"`cascade`\" pulumi-lang-python=\"`cascade`\" pulumi-lang-yaml=\"`cascade`\" pulumi-lang-java=\"`cascade`\"\u003e`cascade`\u003c/span\u003e by default.\n"
                },
                "algorithmVar": {
                    "type": "string",
                    "description": "Specifies the type of algorithm used to detect faces in the image, either \u003cspan pulumi-lang-nodejs=\"`cascade`\" pulumi-lang-dotnet=\"`Cascade`\" pulumi-lang-go=\"`cascade`\" pulumi-lang-python=\"`cascade`\" pulumi-lang-yaml=\"`cascade`\" pulumi-lang-java=\"`cascade`\"\u003e`cascade`\u003c/span\u003e for the cascade classifier algorithm or \u003cspan pulumi-lang-nodejs=\"`dnn`\" pulumi-lang-dotnet=\"`Dnn`\" pulumi-lang-go=\"`dnn`\" pulumi-lang-python=\"`dnn`\" pulumi-lang-yaml=\"`dnn`\" pulumi-lang-java=\"`dnn`\"\u003e`dnn`\u003c/span\u003e for the deep neural network algorithm, \u003cspan pulumi-lang-nodejs=\"`cascade`\" pulumi-lang-dotnet=\"`Cascade`\" pulumi-lang-go=\"`cascade`\" pulumi-lang-python=\"`cascade`\" pulumi-lang-yaml=\"`cascade`\" pulumi-lang-java=\"`cascade`\"\u003e`cascade`\u003c/span\u003e by default.\n"
                },
                "confidence": {
                    "type": "string",
                    "description": "With \u003cspan pulumi-lang-nodejs=\"`algorithm`\" pulumi-lang-dotnet=\"`Algorithm`\" pulumi-lang-go=\"`algorithm`\" pulumi-lang-python=\"`algorithm`\" pulumi-lang-yaml=\"`algorithm`\" pulumi-lang-java=\"`algorithm`\"\u003e`algorithm`\u003c/span\u003e set to \u003cspan pulumi-lang-nodejs=\"`dnn`\" pulumi-lang-dotnet=\"`Dnn`\" pulumi-lang-go=\"`dnn`\" pulumi-lang-python=\"`dnn`\" pulumi-lang-yaml=\"`dnn`\" pulumi-lang-java=\"`dnn`\"\u003e`dnn`\u003c/span\u003e, specifies the minimum confidence needed to detect faces in the image. Values range from \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e for increased confidence, and possibly fewer faces detected.\n"
                },
                "confidenceVar": {
                    "type": "string",
                    "description": "With \u003cspan pulumi-lang-nodejs=\"`algorithm`\" pulumi-lang-dotnet=\"`Algorithm`\" pulumi-lang-go=\"`algorithm`\" pulumi-lang-python=\"`algorithm`\" pulumi-lang-yaml=\"`algorithm`\" pulumi-lang-java=\"`algorithm`\"\u003e`algorithm`\u003c/span\u003e set to \u003cspan pulumi-lang-nodejs=\"`dnn`\" pulumi-lang-dotnet=\"`Dnn`\" pulumi-lang-go=\"`dnn`\" pulumi-lang-python=\"`dnn`\" pulumi-lang-yaml=\"`dnn`\" pulumi-lang-java=\"`dnn`\"\u003e`dnn`\u003c/span\u003e, specifies the minimum confidence needed to detect faces in the image. Values range from \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e for increased confidence, and possibly fewer faces detected.\n"
                },
                "failGravity": {
                    "type": "string",
                    "description": "Controls placement of the crop if Image and Video Manager does not detect any faces in the image. Directions are relative to the edges of the image being transformed.\n"
                },
                "failGravityVar": {
                    "type": "string",
                    "description": "Controls placement of the crop if Image and Video Manager does not detect any faces in the image. Directions are relative to the edges of the image being transformed.\n"
                },
                "focus": {
                    "type": "string",
                    "description": "Distinguishes the faces detected, either `biggestFace` or `allFaces` to place the crop rectangle around the full set of faces, \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e by default.\n"
                },
                "focusVar": {
                    "type": "string",
                    "description": "Distinguishes the faces detected, either `biggestFace` or `allFaces` to place the crop rectangle around the full set of faces, \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e by default.\n"
                },
                "gravity": {
                    "type": "string",
                    "description": "Controls placement of the crop. Directions are relative to the face(s) plus padding.\n"
                },
                "gravityVar": {
                    "type": "string",
                    "description": "Controls placement of the crop. Directions are relative to the face(s) plus padding.\n"
                },
                "height": {
                    "type": "string",
                    "description": "The height of the output image in pixels relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The height of the output image in pixels relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "padding": {
                    "type": "string",
                    "description": "The padding ratio based on the dimensions of the biggest face detected, `0.5` by default. Larger values increase padding.\n"
                },
                "paddingVar": {
                    "type": "string",
                    "description": "The padding ratio based on the dimensions of the biggest face detected, `0.5` by default. Larger values increase padding.\n"
                },
                "style": {
                    "type": "string",
                    "description": "Specifies how to crop or scale a crop area for the faces detected in the source image, \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e by default. The output image resizes to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`crop`\" pulumi-lang-dotnet=\"`Crop`\" pulumi-lang-go=\"`crop`\" pulumi-lang-python=\"`crop`\" pulumi-lang-yaml=\"`crop`\" pulumi-lang-java=\"`crop`\"\u003e`crop`\u003c/span\u003e places a raw crop around the faces, relative to the specified \u003cspan pulumi-lang-nodejs=\"`gravity`\" pulumi-lang-dotnet=\"`Gravity`\" pulumi-lang-go=\"`gravity`\" pulumi-lang-python=\"`gravity`\" pulumi-lang-yaml=\"`gravity`\" pulumi-lang-java=\"`gravity`\"\u003e`gravity`\u003c/span\u003e value.  A value of \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e scales the crop area to include as much of the image and faces as possible, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e scales the crop area as small as possible to fit the faces, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. Allows Variable substitution.\n"
                },
                "styleVar": {
                    "type": "string",
                    "description": "Specifies how to crop or scale a crop area for the faces detected in the source image, \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e by default. The output image resizes to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`crop`\" pulumi-lang-dotnet=\"`Crop`\" pulumi-lang-go=\"`crop`\" pulumi-lang-python=\"`crop`\" pulumi-lang-yaml=\"`crop`\" pulumi-lang-java=\"`crop`\"\u003e`crop`\u003c/span\u003e places a raw crop around the faces, relative to the specified \u003cspan pulumi-lang-nodejs=\"`gravity`\" pulumi-lang-dotnet=\"`Gravity`\" pulumi-lang-go=\"`gravity`\" pulumi-lang-python=\"`gravity`\" pulumi-lang-yaml=\"`gravity`\" pulumi-lang-java=\"`gravity`\"\u003e`gravity`\u003c/span\u003e value.  A value of \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e scales the crop area to include as much of the image and faces as possible, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e scales the crop area as small as possible to fit the faces, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. Allows Variable substitution.\n"
                },
                "width": {
                    "type": "string",
                    "description": "The width of the output image in pixels relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width of the output image in pixels relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationFeatureCrop:getImagingPolicyImagePolicyTransformationFeatureCrop": {
            "properties": {
                "failGravity": {
                    "type": "string",
                    "description": "Controls placement of the crop if Image and Video Manager does not detect any features in the image. Directions are relative to the edges of the image being transformed.\n"
                },
                "failGravityVar": {
                    "type": "string",
                    "description": "Controls placement of the crop if Image and Video Manager does not detect any features in the image. Directions are relative to the edges of the image being transformed.\n"
                },
                "featureRadius": {
                    "type": "string",
                    "description": "The size in pixels of the important features to search for. If identified, two features never appear closer together than this value, `8.0` by default.\n"
                },
                "featureRadiusVar": {
                    "type": "string",
                    "description": "The size in pixels of the important features to search for. If identified, two features never appear closer together than this value, `8.0` by default.\n"
                },
                "gravity": {
                    "type": "string",
                    "description": "Controls placement of the crop. Directions are relative to the region of interest plus padding.\n"
                },
                "gravityVar": {
                    "type": "string",
                    "description": "Controls placement of the crop. Directions are relative to the region of interest plus padding.\n"
                },
                "height": {
                    "type": "string",
                    "description": "The height in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The height in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "maxFeatures": {
                    "type": "string",
                    "description": "The maximum number of features to identify as important features, \u003cspan pulumi-lang-nodejs=\"`32`\" pulumi-lang-dotnet=\"`32`\" pulumi-lang-go=\"`32`\" pulumi-lang-python=\"`32`\" pulumi-lang-yaml=\"`32`\" pulumi-lang-java=\"`32`\"\u003e`32`\u003c/span\u003e by default. The strongest features are always chosen.\n"
                },
                "maxFeaturesVar": {
                    "type": "string",
                    "description": "The maximum number of features to identify as important features, \u003cspan pulumi-lang-nodejs=\"`32`\" pulumi-lang-dotnet=\"`32`\" pulumi-lang-go=\"`32`\" pulumi-lang-python=\"`32`\" pulumi-lang-yaml=\"`32`\" pulumi-lang-java=\"`32`\"\u003e`32`\u003c/span\u003e by default. The strongest features are always chosen.\n"
                },
                "minFeatureQuality": {
                    "type": "string",
                    "description": "Determines the minimum quality level of the feature identified. To consider a feature important, the feature needs to surpass this value.  Image and Video Manager measures quality on a scale from \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e for the lowest quality to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e for the highest quality, `.1` by default.\n"
                },
                "minFeatureQualityVar": {
                    "type": "string",
                    "description": "Determines the minimum quality level of the feature identified. To consider a feature important, the feature needs to surpass this value.  Image and Video Manager measures quality on a scale from \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e for the lowest quality to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e for the highest quality, `.1` by default.\n"
                },
                "padding": {
                    "type": "string",
                    "description": "Adds space around the region of interest. The amount of padding added is directly related to the size of the bounding box of the selected features. Specifically, the region of interest is expanded in all directions by the largest dimension of the bounding box of the selected features multiplied by this value.\n"
                },
                "paddingVar": {
                    "type": "string",
                    "description": "Adds space around the region of interest. The amount of padding added is directly related to the size of the bounding box of the selected features. Specifically, the region of interest is expanded in all directions by the largest dimension of the bounding box of the selected features multiplied by this value.\n"
                },
                "style": {
                    "type": "string",
                    "description": "Specifies how to crop or scale a crop area for the features identified in the source image, \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e by default. The output image resizes to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`crop`\" pulumi-lang-dotnet=\"`Crop`\" pulumi-lang-go=\"`crop`\" pulumi-lang-python=\"`crop`\" pulumi-lang-yaml=\"`crop`\" pulumi-lang-java=\"`crop`\"\u003e`crop`\u003c/span\u003e performs a raw crop around the features, relative to the specified \u003cspan pulumi-lang-nodejs=\"`gravity`\" pulumi-lang-dotnet=\"`Gravity`\" pulumi-lang-go=\"`gravity`\" pulumi-lang-python=\"`gravity`\" pulumi-lang-yaml=\"`gravity`\" pulumi-lang-java=\"`gravity`\"\u003e`gravity`\u003c/span\u003e value.  A value of \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e scales the crop area to include as much of the image and features as possible, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e scales the crop area as small as possible to fit the features, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. Allows Variable substitution.\n"
                },
                "styleVar": {
                    "type": "string",
                    "description": "Specifies how to crop or scale a crop area for the features identified in the source image, \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e by default. The output image resizes to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`crop`\" pulumi-lang-dotnet=\"`Crop`\" pulumi-lang-go=\"`crop`\" pulumi-lang-python=\"`crop`\" pulumi-lang-yaml=\"`crop`\" pulumi-lang-java=\"`crop`\"\u003e`crop`\u003c/span\u003e performs a raw crop around the features, relative to the specified \u003cspan pulumi-lang-nodejs=\"`gravity`\" pulumi-lang-dotnet=\"`Gravity`\" pulumi-lang-go=\"`gravity`\" pulumi-lang-python=\"`gravity`\" pulumi-lang-yaml=\"`gravity`\" pulumi-lang-java=\"`gravity`\"\u003e`gravity`\u003c/span\u003e value.  A value of \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e scales the crop area to include as much of the image and features as possible, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e scales the crop area as small as possible to fit the features, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. Allows Variable substitution.\n"
                },
                "width": {
                    "type": "string",
                    "description": "The width in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationFitAndFill:getImagingPolicyImagePolicyTransformationFitAndFill": {
            "properties": {
                "fillTransformation": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "height": {
                    "type": "string",
                    "description": "The height value of the resized image.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The height value of the resized image.\n"
                },
                "width": {
                    "type": "string",
                    "description": "The width value of the resized image.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width value of the resized image.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationGoop:getImagingPolicyImagePolicyTransformationGoop": {
            "properties": {
                "chaos": {
                    "type": "string",
                    "description": "Specifies the greatest distance control points may move from their original position. A value of `1.0` shifts control points over as far as the next one in the original grid. A value of `0.0` leaves the image unchanged. Values under `0.5` work better for subtle distortions, otherwise control points may pass each other and cause a twisting effect.\n"
                },
                "chaosVar": {
                    "type": "string",
                    "description": "Specifies the greatest distance control points may move from their original position. A value of `1.0` shifts control points over as far as the next one in the original grid. A value of `0.0` leaves the image unchanged. Values under `0.5` work better for subtle distortions, otherwise control points may pass each other and cause a twisting effect.\n"
                },
                "density": {
                    "type": "string",
                    "description": "Controls the density of control points used to distort the image. The largest dimension of the input image is divided up to fit this number of control points. A grid of points is extended on the smaller dimension such that each row and column of control points is equidistant from each adjacent row or column. This parameter strongly affects transformation performance. Be careful choosing values above the default if you expect to transform medium to large size images.\n"
                },
                "densityVar": {
                    "type": "string",
                    "description": "Controls the density of control points used to distort the image. The largest dimension of the input image is divided up to fit this number of control points. A grid of points is extended on the smaller dimension such that each row and column of control points is equidistant from each adjacent row or column. This parameter strongly affects transformation performance. Be careful choosing values above the default if you expect to transform medium to large size images.\n"
                },
                "power": {
                    "type": "string",
                    "description": "By default, the distortion algorithm relies on inverse squares to calculate distance but this allows you to change the exponent. You shouldnt need to vary the default value of `2.0`.\n"
                },
                "powerVar": {
                    "type": "string",
                    "description": "By default, the distortion algorithm relies on inverse squares to calculate distance but this allows you to change the exponent. You shouldnt need to vary the default value of `2.0`.\n"
                },
                "seed": {
                    "type": "string",
                    "description": "Specifies your own \u003cspan pulumi-lang-nodejs=\"`seed`\" pulumi-lang-dotnet=\"`Seed`\" pulumi-lang-go=\"`seed`\" pulumi-lang-python=\"`seed`\" pulumi-lang-yaml=\"`seed`\" pulumi-lang-java=\"`seed`\"\u003e`seed`\u003c/span\u003e value as an alternative to the default, which is subject to variability. This allows for reproducible and deterministic distortions. If all parameters are kept equal and a constant seed is used, `Goop` distorts an input image consistently over many transformations. By default, this value is set to the current Epoch Time measured in milliseconds, which provides inconsistent transformation output.\n"
                },
                "seedVar": {
                    "type": "string",
                    "description": "Specifies your own \u003cspan pulumi-lang-nodejs=\"`seed`\" pulumi-lang-dotnet=\"`Seed`\" pulumi-lang-go=\"`seed`\" pulumi-lang-python=\"`seed`\" pulumi-lang-yaml=\"`seed`\" pulumi-lang-java=\"`seed`\"\u003e`seed`\u003c/span\u003e value as an alternative to the default, which is subject to variability. This allows for reproducible and deterministic distortions. If all parameters are kept equal and a constant seed is used, `Goop` distorts an input image consistently over many transformations. By default, this value is set to the current Epoch Time measured in milliseconds, which provides inconsistent transformation output.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationGrayscale:getImagingPolicyImagePolicyTransformationGrayscale": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The algorithm used to transform colors to grays, either `Brightness`, `Lightness`, `Rec601`, or the default `Rec709`.\n"
                },
                "typeVar": {
                    "type": "string",
                    "description": "The algorithm used to transform colors to grays, either `Brightness`, `Lightness`, `Rec601`, or the default `Rec709`.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationHsl:getImagingPolicyImagePolicyTransformationHsl": {
            "properties": {
                "hue": {
                    "type": "string",
                    "description": "The number of degrees to rotate colors around the color wheel, \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e by default.\n"
                },
                "hueVar": {
                    "type": "string",
                    "description": "The number of degrees to rotate colors around the color wheel, \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e by default.\n"
                },
                "lightness": {
                    "type": "string",
                    "description": "A multiplier to adjust the lightness of colors in the image. Note that lightness is distinct from brightness. For example, reducing the lightness of a light green might give you a lime green whereas reducing the brightness of a light green might give you a darker shade of the same green. Values less than `1.0` decrease the lightness of colors in the image. Values greater than `1.0` increase the lightness of colors in the image.\n"
                },
                "lightnessVar": {
                    "type": "string",
                    "description": "A multiplier to adjust the lightness of colors in the image. Note that lightness is distinct from brightness. For example, reducing the lightness of a light green might give you a lime green whereas reducing the brightness of a light green might give you a darker shade of the same green. Values less than `1.0` decrease the lightness of colors in the image. Values greater than `1.0` increase the lightness of colors in the image.\n"
                },
                "saturation": {
                    "type": "string",
                    "description": "A multiplier to adjust the saturation of colors in the image. Values less than `1.0` decrease saturation and values greater than `1.0` increase the saturation. A value of `0.0` removes all color from the image.\n"
                },
                "saturationVar": {
                    "type": "string",
                    "description": "A multiplier to adjust the saturation of colors in the image. Values less than `1.0` decrease saturation and values greater than `1.0` increase the saturation. A value of `0.0` removes all color from the image.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationHsv:getImagingPolicyImagePolicyTransformationHsv": {
            "properties": {
                "hue": {
                    "type": "string",
                    "description": "The number of degrees to rotate colors around the color wheel, `0.0` by default.\n"
                },
                "hueVar": {
                    "type": "string",
                    "description": "The number of degrees to rotate colors around the color wheel, `0.0` by default.\n"
                },
                "saturation": {
                    "type": "string",
                    "description": "A multiplier to adjust the saturation of colors in the image. Values less than `1.0` decrease saturation and values greater than `1.0` increase the saturation. A value of `0.0` removes all color from the image.\n"
                },
                "saturationVar": {
                    "type": "string",
                    "description": "A multiplier to adjust the saturation of colors in the image. Values less than `1.0` decrease saturation and values greater than `1.0` increase the saturation. A value of `0.0` removes all color from the image.\n"
                },
                "value": {
                    "type": "string",
                    "description": "A multiplier to adjust the lightness or darkness of the images base color. Values less than 1.0 decrease the base colors in the image, making them appear darker. Values greater than 1.0 increase the base colors in the image, making them appear lighter.\n"
                },
                "valueVar": {
                    "type": "string",
                    "description": "A multiplier to adjust the lightness or darkness of the images base color. Values less than 1.0 decrease the base colors in the image, making them appear darker. Values greater than 1.0 increase the base colors in the image, making them appear lighter.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationIfDimension:getImagingPolicyImagePolicyTransformationIfDimension": {
            "properties": {
                "default": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "dimension": {
                    "type": "string",
                    "description": "The dimension to use to select the transformation, either \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`both`\" pulumi-lang-dotnet=\"`Both`\" pulumi-lang-go=\"`both`\" pulumi-lang-python=\"`both`\" pulumi-lang-yaml=\"`both`\" pulumi-lang-java=\"`both`\"\u003e`both`\u003c/span\u003e.\n"
                },
                "dimensionVar": {
                    "type": "string",
                    "description": "The dimension to use to select the transformation, either \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`both`\" pulumi-lang-dotnet=\"`Both`\" pulumi-lang-go=\"`both`\" pulumi-lang-python=\"`both`\" pulumi-lang-yaml=\"`both`\" pulumi-lang-java=\"`both`\"\u003e`both`\u003c/span\u003e.\n"
                },
                "equal": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "greaterThan": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "lessThan": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "value": {
                    "type": "string",
                    "description": "The value to compare against the source image dimension. For example, if the image dimension is less than the value the lessThan transformation is applied.\n"
                },
                "valueVar": {
                    "type": "string",
                    "description": "The value to compare against the source image dimension. For example, if the image dimension is less than the value the lessThan transformation is applied.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationIfOrientation:getImagingPolicyImagePolicyTransformationIfOrientation": {
            "properties": {
                "default": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "landscape": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "portrait": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                },
                "square": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformation:getImagingPolicyImagePolicyTransformation"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationImQuery:getImagingPolicyImagePolicyTransformationImQuery": {
            "properties": {
                "allowedTransformations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the transformations that can be applied using the query string parameter.\n"
                },
                "queryVar": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "allowedTransformations",
                "queryVar"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationMaxColor:getImagingPolicyImagePolicyTransformationMaxColor": {
            "properties": {
                "colors": {
                    "type": "string",
                    "description": "The value representing the maximum number of colors to use with the source image.\n"
                },
                "colorsVar": {
                    "type": "string",
                    "description": "The value representing the maximum number of colors to use with the source image.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationMirror:getImagingPolicyImagePolicyTransformationMirror": {
            "properties": {
                "horizontal": {
                    "type": "string",
                    "description": "Flips the image horizontally.\n"
                },
                "horizontalVar": {
                    "type": "string",
                    "description": "Flips the image horizontally.\n"
                },
                "vertical": {
                    "type": "string",
                    "description": "Flips the image vertically.\n"
                },
                "verticalVar": {
                    "type": "string",
                    "description": "Flips the image vertically.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationMonoHue:getImagingPolicyImagePolicyTransformationMonoHue": {
            "properties": {
                "hue": {
                    "type": "string",
                    "description": "Specify a hue by indicating the degree of rotation between 0 and 360 degrees around the color wheel. By default Mono Hue applies a red hue, 0.0 on the color wheel.\n"
                },
                "hueVar": {
                    "type": "string",
                    "description": "Specify a hue by indicating the degree of rotation between 0 and 360 degrees around the color wheel. By default Mono Hue applies a red hue, 0.0 on the color wheel.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationOpacity:getImagingPolicyImagePolicyTransformationOpacity": {
            "properties": {
                "opacity": {
                    "type": "string",
                    "description": "Represents alpha values on a scale of \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Values below \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e increase transparency, and \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e is invisible. For images that have some transparency, values above \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e increase the opacity of the transparent portions.\n"
                },
                "opacityVar": {
                    "type": "string",
                    "description": "Represents alpha values on a scale of \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e to \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e. Values below \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e increase transparency, and \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e is invisible. For images that have some transparency, values above \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e increase the opacity of the transparent portions.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCrop:getImagingPolicyImagePolicyTransformationRegionOfInterestCrop": {
            "properties": {
                "gravity": {
                    "type": "string",
                    "description": "The placement of the crop area relative to the specified area of interest.\n"
                },
                "gravityVar": {
                    "type": "string",
                    "description": "The placement of the crop area relative to the specified area of interest.\n"
                },
                "height": {
                    "type": "string",
                    "description": "The height in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The height in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "regionOfInterest": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterest:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterest"
                },
                "style": {
                    "type": "string",
                    "description": "Specifies how to crop or scale a crop area for the specified area of interest in the source image, \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e by default. The output image resizes to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`crop`\" pulumi-lang-dotnet=\"`Crop`\" pulumi-lang-go=\"`crop`\" pulumi-lang-python=\"`crop`\" pulumi-lang-yaml=\"`crop`\" pulumi-lang-java=\"`crop`\"\u003e`crop`\u003c/span\u003e places raw crop around the point of interest, relative to the specified \u003cspan pulumi-lang-nodejs=\"`gravity`\" pulumi-lang-dotnet=\"`Gravity`\" pulumi-lang-go=\"`gravity`\" pulumi-lang-python=\"`gravity`\" pulumi-lang-yaml=\"`gravity`\" pulumi-lang-java=\"`gravity`\"\u003e`gravity`\u003c/span\u003e value.  A value of \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e scales the crop area to include as much of the image and point of interest as possible, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e scales the crop area as small as possible to fit the point of interest, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values.\n"
                },
                "styleVar": {
                    "type": "string",
                    "description": "Specifies how to crop or scale a crop area for the specified area of interest in the source image, \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e by default. The output image resizes to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`crop`\" pulumi-lang-dotnet=\"`Crop`\" pulumi-lang-go=\"`crop`\" pulumi-lang-python=\"`crop`\" pulumi-lang-yaml=\"`crop`\" pulumi-lang-java=\"`crop`\"\u003e`crop`\u003c/span\u003e places raw crop around the point of interest, relative to the specified \u003cspan pulumi-lang-nodejs=\"`gravity`\" pulumi-lang-dotnet=\"`Gravity`\" pulumi-lang-go=\"`gravity`\" pulumi-lang-python=\"`gravity`\" pulumi-lang-yaml=\"`gravity`\" pulumi-lang-java=\"`gravity`\"\u003e`gravity`\u003c/span\u003e value.  A value of \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e scales the crop area to include as much of the image and point of interest as possible, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e scales the crop area as small as possible to fit the point of interest, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values.\n"
                },
                "width": {
                    "type": "string",
                    "description": "The width in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                }
            },
            "type": "object",
            "required": [
                "regionOfInterest"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterest:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterest": {
            "properties": {
                "circleShapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShape"
                    },
                    "description": "Defines a circle with a specified \u003cspan pulumi-lang-nodejs=\"`radius`\" pulumi-lang-dotnet=\"`Radius`\" pulumi-lang-go=\"`radius`\" pulumi-lang-python=\"`radius`\" pulumi-lang-yaml=\"`radius`\" pulumi-lang-java=\"`radius`\"\u003e`radius`\u003c/span\u003e from its \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e point.\n"
                },
                "pointShapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPointShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPointShape"
                    }
                },
                "polygonShapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShape"
                    },
                    "description": "Defines a polygon from a series of connected points.\n"
                },
                "rectangleShapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShape"
                    },
                    "description": "Defines a rectangle's \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e relative to an \u003cspan pulumi-lang-nodejs=\"`anchor`\" pulumi-lang-dotnet=\"`Anchor`\" pulumi-lang-go=\"`anchor`\" pulumi-lang-python=\"`anchor`\" pulumi-lang-yaml=\"`anchor`\" pulumi-lang-java=\"`anchor`\"\u003e`anchor`\u003c/span\u003e point at the top left corner.\n"
                },
                "unionShapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShape"
                    },
                    "description": "Identifies a combined shape based on a set of other shapes. You can use a full JSON object to represent a union or an array of shapes that describe it.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShape": {
            "properties": {
                "center": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenter:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenter",
                    "description": "Defines coordinates for a single point, to help define polygons and rectangles. Each point may be an object with \u003cspan pulumi-lang-nodejs=\"`x`\" pulumi-lang-dotnet=\"`X`\" pulumi-lang-go=\"`x`\" pulumi-lang-python=\"`x`\" pulumi-lang-yaml=\"`x`\" pulumi-lang-java=\"`x`\"\u003e`x`\u003c/span\u003eand \u003cspan pulumi-lang-nodejs=\"`y`\" pulumi-lang-dotnet=\"`Y`\" pulumi-lang-go=\"`y`\" pulumi-lang-python=\"`y`\" pulumi-lang-yaml=\"`y`\" pulumi-lang-java=\"`y`\"\u003e`y`\u003c/span\u003e members, or a two-element array.\n"
                },
                "radius": {
                    "type": "string",
                    "description": "The radius of the circle measured in pixels.\n"
                },
                "radiusVar": {
                    "type": "string",
                    "description": "The radius of the circle measured in pixels.\n"
                }
            },
            "type": "object",
            "required": [
                "center"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenter:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestCircleShapeCenter": {
            "properties": {
                "x": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "xVar": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "y": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                },
                "yVar": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPointShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPointShape": {
            "properties": {
                "x": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "xVar": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "y": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                },
                "yVar": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShape": {
            "properties": {
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint"
                    },
                    "description": "Series of PointShapeType objects. The last and first points connect to close the shape automatically.\n"
                }
            },
            "type": "object",
            "required": [
                "points"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestPolygonShapePoint": {
            "properties": {
                "x": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "xVar": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "y": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                },
                "yVar": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShape": {
            "properties": {
                "anchor": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShapeAnchor:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShapeAnchor"
                },
                "height": {
                    "type": "string",
                    "description": "Extends the rectangle down from the \u003cspan pulumi-lang-nodejs=\"`anchor`\" pulumi-lang-dotnet=\"`Anchor`\" pulumi-lang-go=\"`anchor`\" pulumi-lang-python=\"`anchor`\" pulumi-lang-yaml=\"`anchor`\" pulumi-lang-java=\"`anchor`\"\u003e`anchor`\u003c/span\u003e point.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "Extends the rectangle down from the \u003cspan pulumi-lang-nodejs=\"`anchor`\" pulumi-lang-dotnet=\"`Anchor`\" pulumi-lang-go=\"`anchor`\" pulumi-lang-python=\"`anchor`\" pulumi-lang-yaml=\"`anchor`\" pulumi-lang-java=\"`anchor`\"\u003e`anchor`\u003c/span\u003e point.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Extends the rectangle right from the \u003cspan pulumi-lang-nodejs=\"`anchor`\" pulumi-lang-dotnet=\"`Anchor`\" pulumi-lang-go=\"`anchor`\" pulumi-lang-python=\"`anchor`\" pulumi-lang-yaml=\"`anchor`\" pulumi-lang-java=\"`anchor`\"\u003e`anchor`\u003c/span\u003e point.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "Extends the rectangle right from the \u003cspan pulumi-lang-nodejs=\"`anchor`\" pulumi-lang-dotnet=\"`Anchor`\" pulumi-lang-go=\"`anchor`\" pulumi-lang-python=\"`anchor`\" pulumi-lang-yaml=\"`anchor`\" pulumi-lang-java=\"`anchor`\"\u003e`anchor`\u003c/span\u003e point.\n"
                }
            },
            "type": "object",
            "required": [
                "anchor"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShapeAnchor:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestRectangleShapeAnchor": {
            "properties": {
                "x": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "xVar": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "y": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                },
                "yVar": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShape": {
            "properties": {
                "shapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShape"
                    }
                }
            },
            "type": "object",
            "required": [
                "shapes"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShape": {
            "properties": {
                "circleShapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShape"
                    },
                    "description": "Defines a circle with a specified \u003cspan pulumi-lang-nodejs=\"`radius`\" pulumi-lang-dotnet=\"`Radius`\" pulumi-lang-go=\"`radius`\" pulumi-lang-python=\"`radius`\" pulumi-lang-yaml=\"`radius`\" pulumi-lang-java=\"`radius`\"\u003e`radius`\u003c/span\u003e from its \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e point.\n"
                },
                "pointShapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePointShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePointShape"
                    }
                },
                "polygonShapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShape"
                    },
                    "description": "Defines a polygon from a series of connected points.\n"
                },
                "rectangleShapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShape"
                    },
                    "description": "Defines a rectangle's \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e relative to an \u003cspan pulumi-lang-nodejs=\"`anchor`\" pulumi-lang-dotnet=\"`Anchor`\" pulumi-lang-go=\"`anchor`\" pulumi-lang-python=\"`anchor`\" pulumi-lang-yaml=\"`anchor`\" pulumi-lang-java=\"`anchor`\"\u003e`anchor`\u003c/span\u003e point at the top left corner.\n"
                },
                "unionShapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShape"
                    },
                    "description": "Identifies a combined shape based on a set of other shapes. You can use a full JSON object to represent a union or an array of shapes that describe it.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShape": {
            "properties": {
                "center": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShapeCenter:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShapeCenter",
                    "description": "Defines coordinates for a single point, to help define polygons and rectangles. Each point may be an object with \u003cspan pulumi-lang-nodejs=\"`x`\" pulumi-lang-dotnet=\"`X`\" pulumi-lang-go=\"`x`\" pulumi-lang-python=\"`x`\" pulumi-lang-yaml=\"`x`\" pulumi-lang-java=\"`x`\"\u003e`x`\u003c/span\u003eand \u003cspan pulumi-lang-nodejs=\"`y`\" pulumi-lang-dotnet=\"`Y`\" pulumi-lang-go=\"`y`\" pulumi-lang-python=\"`y`\" pulumi-lang-yaml=\"`y`\" pulumi-lang-java=\"`y`\"\u003e`y`\u003c/span\u003e members, or a two-element array.\n"
                },
                "radius": {
                    "type": "string",
                    "description": "The radius of the circle measured in pixels.\n"
                },
                "radiusVar": {
                    "type": "string",
                    "description": "The radius of the circle measured in pixels.\n"
                }
            },
            "type": "object",
            "required": [
                "center"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShapeCenter:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeCircleShapeCenter": {
            "properties": {
                "x": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "xVar": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "y": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                },
                "yVar": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePointShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePointShape": {
            "properties": {
                "x": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "xVar": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "y": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                },
                "yVar": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShape": {
            "properties": {
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShapePoint:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShapePoint"
                    },
                    "description": "Series of PointShapeType objects. The last and first points connect to close the shape automatically.\n"
                }
            },
            "type": "object",
            "required": [
                "points"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShapePoint:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapePolygonShapePoint": {
            "properties": {
                "x": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "xVar": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "y": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                },
                "yVar": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShape": {
            "properties": {
                "anchor": {
                    "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor"
                },
                "height": {
                    "type": "string",
                    "description": "Extends the rectangle down from the \u003cspan pulumi-lang-nodejs=\"`anchor`\" pulumi-lang-dotnet=\"`Anchor`\" pulumi-lang-go=\"`anchor`\" pulumi-lang-python=\"`anchor`\" pulumi-lang-yaml=\"`anchor`\" pulumi-lang-java=\"`anchor`\"\u003e`anchor`\u003c/span\u003e point.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "Extends the rectangle down from the \u003cspan pulumi-lang-nodejs=\"`anchor`\" pulumi-lang-dotnet=\"`Anchor`\" pulumi-lang-go=\"`anchor`\" pulumi-lang-python=\"`anchor`\" pulumi-lang-yaml=\"`anchor`\" pulumi-lang-java=\"`anchor`\"\u003e`anchor`\u003c/span\u003e point.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Extends the rectangle right from the \u003cspan pulumi-lang-nodejs=\"`anchor`\" pulumi-lang-dotnet=\"`Anchor`\" pulumi-lang-go=\"`anchor`\" pulumi-lang-python=\"`anchor`\" pulumi-lang-yaml=\"`anchor`\" pulumi-lang-java=\"`anchor`\"\u003e`anchor`\u003c/span\u003e point.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "Extends the rectangle right from the \u003cspan pulumi-lang-nodejs=\"`anchor`\" pulumi-lang-dotnet=\"`Anchor`\" pulumi-lang-go=\"`anchor`\" pulumi-lang-python=\"`anchor`\" pulumi-lang-yaml=\"`anchor`\" pulumi-lang-java=\"`anchor`\"\u003e`anchor`\u003c/span\u003e point.\n"
                }
            },
            "type": "object",
            "required": [
                "anchor"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeRectangleShapeAnchor": {
            "properties": {
                "x": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "xVar": {
                    "type": "string",
                    "description": "The horizontal position of the point, measured in pixels.\n"
                },
                "y": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                },
                "yVar": {
                    "type": "string",
                    "description": "The vertical position of the point, measured in pixels.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShape": {
            "properties": {
                "shapes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShapeShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShapeShape"
                    }
                }
            },
            "type": "object",
            "required": [
                "shapes"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShapeShape:getImagingPolicyImagePolicyTransformationRegionOfInterestCropRegionOfInterestUnionShapeShapeUnionShapeShape": {
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRelativeCrop:getImagingPolicyImagePolicyTransformationRelativeCrop": {
            "properties": {
                "east": {
                    "type": "string",
                    "description": "The number of pixels to shrink or expand the right side of the image.\n"
                },
                "eastVar": {
                    "type": "string",
                    "description": "The number of pixels to shrink or expand the right side of the image.\n"
                },
                "north": {
                    "type": "string",
                    "description": "The number of pixels to shrink or expand the top side of the image.\n"
                },
                "northVar": {
                    "type": "string",
                    "description": "The number of pixels to shrink or expand the top side of the image.\n"
                },
                "south": {
                    "type": "string",
                    "description": "The number of pixels to shrink or expand the bottom side of the image.\n"
                },
                "southVar": {
                    "type": "string",
                    "description": "The number of pixels to shrink or expand the bottom side of the image.\n"
                },
                "west": {
                    "type": "string",
                    "description": "The number of pixels to shrink or expand the left side of the image.\n"
                },
                "westVar": {
                    "type": "string",
                    "description": "The number of pixels to shrink or expand the left side of the image.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRemoveColor:getImagingPolicyImagePolicyTransformationRemoveColor": {
            "properties": {
                "color": {
                    "type": "string",
                    "description": "The hexadecimal CSS color value to remove.\n"
                },
                "colorVar": {
                    "type": "string",
                    "description": "The hexadecimal CSS color value to remove.\n"
                },
                "feather": {
                    "type": "string",
                    "description": "The RemoveColor transformation may create a hard edge around an image. To minimize these hard edges and make the removal of the color more gradual in appearance, use the Feather option. This option allows you to extend the color removal beyond the specified Tolerance. The pixels in this extended tolerance become semi-transparent - creating a softer edge.  The first realtime request for an image using the feather option may result in a slow transformation time. Subsequent requests are not impacted as they are served directly out of cache.\n"
                },
                "featherVar": {
                    "type": "string",
                    "description": "The RemoveColor transformation may create a hard edge around an image. To minimize these hard edges and make the removal of the color more gradual in appearance, use the Feather option. This option allows you to extend the color removal beyond the specified Tolerance. The pixels in this extended tolerance become semi-transparent - creating a softer edge.  The first realtime request for an image using the feather option may result in a slow transformation time. Subsequent requests are not impacted as they are served directly out of cache.\n"
                },
                "tolerance": {
                    "type": "string",
                    "description": "The Tolerance option defines how close the color needs to be to the selected color before it's changed to fully transparent. Set the Tolerance to 0.0 to remove only the exact color specified.\n"
                },
                "toleranceVar": {
                    "type": "string",
                    "description": "The Tolerance option defines how close the color needs to be to the selected color before it's changed to fully transparent. Set the Tolerance to 0.0 to remove only the exact color specified.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationResize:getImagingPolicyImagePolicyTransformationResize": {
            "properties": {
                "aspect": {
                    "type": "string",
                    "description": "Preserves the aspect ratio. Select \u003cspan pulumi-lang-nodejs=\"`fit`\" pulumi-lang-dotnet=\"`Fit`\" pulumi-lang-go=\"`fit`\" pulumi-lang-python=\"`fit`\" pulumi-lang-yaml=\"`fit`\" pulumi-lang-java=\"`fit`\"\u003e`fit`\u003c/span\u003e to make the image fit entirely within the selected width and height. When using \u003cspan pulumi-lang-nodejs=\"`fit`\" pulumi-lang-dotnet=\"`Fit`\" pulumi-lang-go=\"`fit`\" pulumi-lang-python=\"`fit`\" pulumi-lang-yaml=\"`fit`\" pulumi-lang-java=\"`fit`\"\u003e`fit`\u003c/span\u003e, the resulting image has the largest possible size for the specified dimensions. Select \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e to size the image so it both completely fills the dimensions and has the smallest possible file size. Otherwise \u003cspan pulumi-lang-nodejs=\"`ignore`\" pulumi-lang-dotnet=\"`Ignore`\" pulumi-lang-go=\"`ignore`\" pulumi-lang-python=\"`ignore`\" pulumi-lang-yaml=\"`ignore`\" pulumi-lang-java=\"`ignore`\"\u003e`ignore`\u003c/span\u003e changes the original aspect ratio to fit within an arbitrarily shaped rectangle.\n"
                },
                "aspectVar": {
                    "type": "string",
                    "description": "Preserves the aspect ratio. Select \u003cspan pulumi-lang-nodejs=\"`fit`\" pulumi-lang-dotnet=\"`Fit`\" pulumi-lang-go=\"`fit`\" pulumi-lang-python=\"`fit`\" pulumi-lang-yaml=\"`fit`\" pulumi-lang-java=\"`fit`\"\u003e`fit`\u003c/span\u003e to make the image fit entirely within the selected width and height. When using \u003cspan pulumi-lang-nodejs=\"`fit`\" pulumi-lang-dotnet=\"`Fit`\" pulumi-lang-go=\"`fit`\" pulumi-lang-python=\"`fit`\" pulumi-lang-yaml=\"`fit`\" pulumi-lang-java=\"`fit`\"\u003e`fit`\u003c/span\u003e, the resulting image has the largest possible size for the specified dimensions. Select \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e to size the image so it both completely fills the dimensions and has the smallest possible file size. Otherwise \u003cspan pulumi-lang-nodejs=\"`ignore`\" pulumi-lang-dotnet=\"`Ignore`\" pulumi-lang-go=\"`ignore`\" pulumi-lang-python=\"`ignore`\" pulumi-lang-yaml=\"`ignore`\" pulumi-lang-java=\"`ignore`\"\u003e`ignore`\u003c/span\u003e changes the original aspect ratio to fit within an arbitrarily shaped rectangle.\n"
                },
                "height": {
                    "type": "string",
                    "description": "The height to resize the source image to. Must be set if height is not specified.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The height to resize the source image to. Must be set if height is not specified.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Sets constraints for the image resize. Select \u003cspan pulumi-lang-nodejs=\"`normal`\" pulumi-lang-dotnet=\"`Normal`\" pulumi-lang-go=\"`normal`\" pulumi-lang-python=\"`normal`\" pulumi-lang-yaml=\"`normal`\" pulumi-lang-java=\"`normal`\"\u003e`normal`\u003c/span\u003e to resize in all cases, either increasing or decreasing the dimensions. Select \u003cspan pulumi-lang-nodejs=\"`downsize`\" pulumi-lang-dotnet=\"`Downsize`\" pulumi-lang-go=\"`downsize`\" pulumi-lang-python=\"`downsize`\" pulumi-lang-yaml=\"`downsize`\" pulumi-lang-java=\"`downsize`\"\u003e`downsize`\u003c/span\u003e to ignore this transformation if the result would be larger than the original. Select \u003cspan pulumi-lang-nodejs=\"`upsize`\" pulumi-lang-dotnet=\"`Upsize`\" pulumi-lang-go=\"`upsize`\" pulumi-lang-python=\"`upsize`\" pulumi-lang-yaml=\"`upsize`\" pulumi-lang-java=\"`upsize`\"\u003e`upsize`\u003c/span\u003e to ignore this transformation if the result would be smaller.\n"
                },
                "typeVar": {
                    "type": "string",
                    "description": "Sets constraints for the image resize. Select \u003cspan pulumi-lang-nodejs=\"`normal`\" pulumi-lang-dotnet=\"`Normal`\" pulumi-lang-go=\"`normal`\" pulumi-lang-python=\"`normal`\" pulumi-lang-yaml=\"`normal`\" pulumi-lang-java=\"`normal`\"\u003e`normal`\u003c/span\u003e to resize in all cases, either increasing or decreasing the dimensions. Select \u003cspan pulumi-lang-nodejs=\"`downsize`\" pulumi-lang-dotnet=\"`Downsize`\" pulumi-lang-go=\"`downsize`\" pulumi-lang-python=\"`downsize`\" pulumi-lang-yaml=\"`downsize`\" pulumi-lang-java=\"`downsize`\"\u003e`downsize`\u003c/span\u003e to ignore this transformation if the result would be larger than the original. Select \u003cspan pulumi-lang-nodejs=\"`upsize`\" pulumi-lang-dotnet=\"`Upsize`\" pulumi-lang-go=\"`upsize`\" pulumi-lang-python=\"`upsize`\" pulumi-lang-yaml=\"`upsize`\" pulumi-lang-java=\"`upsize`\"\u003e`upsize`\u003c/span\u003e to ignore this transformation if the result would be smaller.\n"
                },
                "width": {
                    "type": "string",
                    "description": "The width to resize the source image to. Must be set if width is not specified.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width to resize the source image to. Must be set if width is not specified.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationRotate:getImagingPolicyImagePolicyTransformationRotate": {
            "properties": {
                "degrees": {
                    "type": "string",
                    "description": "The value to rotate the image by. Positive values rotate clockwise, while negative values rotate counter-clockwise.\n"
                },
                "degreesVar": {
                    "type": "string",
                    "description": "The value to rotate the image by. Positive values rotate clockwise, while negative values rotate counter-clockwise.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationScale:getImagingPolicyImagePolicyTransformationScale": {
            "properties": {
                "height": {
                    "type": "string",
                    "description": "Scaling factor for the input height to determine the output height of the image, where values between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e decrease size. Image dimensions need to be non-zero positive numbers.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "Scaling factor for the input height to determine the output height of the image, where values between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e decrease size. Image dimensions need to be non-zero positive numbers.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Scaling factor for the input width to determine the output width of the image, where \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e leaves the width unchanged. Values greater than \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e increase the image size. Image dimensions need to be non-zero positive numbers.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "Scaling factor for the input width to determine the output width of the image, where \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e leaves the width unchanged. Values greater than \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e increase the image size. Image dimensions need to be non-zero positive numbers.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationShears:getImagingPolicyImagePolicyTransformationShears": {
            "properties": {
                "xShear": {
                    "type": "string",
                    "description": "The amount to shear along the x-axis, measured in multiples of the image's width. Must be set if yShear is not specified.\n"
                },
                "xShearVar": {
                    "type": "string",
                    "description": "The amount to shear along the x-axis, measured in multiples of the image's width. Must be set if yShear is not specified.\n"
                },
                "yShear": {
                    "type": "string",
                    "description": "The amount to shear along the y-axis, measured in multiples of the image's height. Must be set if xShear is not specified.\n"
                },
                "yShearVar": {
                    "type": "string",
                    "description": "The amount to shear along the y-axis, measured in multiples of the image's height. Must be set if xShear is not specified.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationSmartCrop:getImagingPolicyImagePolicyTransformationSmartCrop": {
            "properties": {
                "debug": {
                    "type": "string",
                    "description": "When enabled, the SmartCrop transformation doesn't actually execute. Instead, it outlines found faces or features, the region of interest, and the crop area.\n"
                },
                "debugVar": {
                    "type": "string",
                    "description": "When enabled, the SmartCrop transformation doesn't actually execute. Instead, it outlines found faces or features, the region of interest, and the crop area.\n"
                },
                "height": {
                    "type": "string",
                    "description": "The height in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "heightVar": {
                    "type": "string",
                    "description": "The height in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "sloppy": {
                    "type": "string",
                    "description": "Whether to sacrifice any image fidelity for transformation performance.\n"
                },
                "sloppyVar": {
                    "type": "string",
                    "description": "Whether to sacrifice any image fidelity for transformation performance.\n"
                },
                "style": {
                    "type": "string",
                    "description": "Specifies how to crop or scale a crop area for the specified area of interest in the source image, \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e by default. The output image resizes to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`crop`\" pulumi-lang-dotnet=\"`Crop`\" pulumi-lang-go=\"`crop`\" pulumi-lang-python=\"`crop`\" pulumi-lang-yaml=\"`crop`\" pulumi-lang-java=\"`crop`\"\u003e`crop`\u003c/span\u003e places raw crop around the point of interest.  A value of \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e scales the crop area to include as much of the image and point of interest as possible, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e scales the crop area as small as possible to fit the point of interest, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values.\n"
                },
                "styleVar": {
                    "type": "string",
                    "description": "Specifies how to crop or scale a crop area for the specified area of interest in the source image, \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e by default. The output image resizes to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`crop`\" pulumi-lang-dotnet=\"`Crop`\" pulumi-lang-go=\"`crop`\" pulumi-lang-python=\"`crop`\" pulumi-lang-yaml=\"`crop`\" pulumi-lang-java=\"`crop`\"\u003e`crop`\u003c/span\u003e places raw crop around the point of interest.  A value of \u003cspan pulumi-lang-nodejs=\"`fill`\" pulumi-lang-dotnet=\"`Fill`\" pulumi-lang-go=\"`fill`\" pulumi-lang-python=\"`fill`\" pulumi-lang-yaml=\"`fill`\" pulumi-lang-java=\"`fill`\"\u003e`fill`\u003c/span\u003e scales the crop area to include as much of the image and point of interest as possible, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values. A value of \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e scales the crop area as small as possible to fit the point of interest, relative to the specified \u003cspan pulumi-lang-nodejs=\"`width`\" pulumi-lang-dotnet=\"`Width`\" pulumi-lang-go=\"`width`\" pulumi-lang-python=\"`width`\" pulumi-lang-yaml=\"`width`\" pulumi-lang-java=\"`width`\"\u003e`width`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`height`\" pulumi-lang-dotnet=\"`Height`\" pulumi-lang-go=\"`height`\" pulumi-lang-python=\"`height`\" pulumi-lang-yaml=\"`height`\" pulumi-lang-java=\"`height`\"\u003e`height`\u003c/span\u003e values.\n"
                },
                "width": {
                    "type": "string",
                    "description": "The width in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                },
                "widthVar": {
                    "type": "string",
                    "description": "The width in pixels of the output image relative to the specified \u003cspan pulumi-lang-nodejs=\"`style`\" pulumi-lang-dotnet=\"`Style`\" pulumi-lang-go=\"`style`\" pulumi-lang-python=\"`style`\" pulumi-lang-yaml=\"`style`\" pulumi-lang-java=\"`style`\"\u003e`style`\u003c/span\u003e value.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationTrim:getImagingPolicyImagePolicyTransformationTrim": {
            "properties": {
                "fuzz": {
                    "type": "string",
                    "description": "The fuzz tolerance of the trim, a value between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e that determines the acceptable amount of background variation before trimming stops.\n"
                },
                "fuzzVar": {
                    "type": "string",
                    "description": "The fuzz tolerance of the trim, a value between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e that determines the acceptable amount of background variation before trimming stops.\n"
                },
                "padding": {
                    "type": "string",
                    "description": "The amount of padding in pixels to add to the trimmed image.\n"
                },
                "paddingVar": {
                    "type": "string",
                    "description": "The amount of padding in pixels to add to the trimmed image.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyTransformationUnsharpMask:getImagingPolicyImagePolicyTransformationUnsharpMask": {
            "properties": {
                "gain": {
                    "type": "string",
                    "description": "Set how much emphasis the filter applies to details. Higher values increase apparent sharpness of details.\n"
                },
                "gainVar": {
                    "type": "string",
                    "description": "Set how much emphasis the filter applies to details. Higher values increase apparent sharpness of details.\n"
                },
                "sigma": {
                    "type": "string",
                    "description": "The standard deviation of the Gaussian distribution used in the in unsharp mask, measured in pixels, `1.0` by default. High values emphasize large details and low values emphasize small details.\n"
                },
                "sigmaVar": {
                    "type": "string",
                    "description": "The standard deviation of the Gaussian distribution used in the in unsharp mask, measured in pixels, `1.0` by default. High values emphasize large details and low values emphasize small details.\n"
                },
                "threshold": {
                    "type": "string",
                    "description": "Set the minimum change required to include a detail in the filter. Higher values discard more changes.\n"
                },
                "thresholdVar": {
                    "type": "string",
                    "description": "Set the minimum change required to include a detail in the filter. Higher values discard more changes.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyImagePolicyVariable:getImagingPolicyImagePolicyVariable": {
            "properties": {
                "defaultValue": {
                    "type": "string",
                    "description": "The default value of the variable if no query parameter is provided. It needs to be one of the `enumOptions` if any are provided.\n"
                },
                "enumOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicyVariableEnumOption:getImagingPolicyImagePolicyVariableEnumOption"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable, also available as the query parameter name to set the variable's value dynamically. Use up to 50 alphanumeric characters.\n"
                },
                "postfix": {
                    "type": "string",
                    "description": "A postfix added to the value provided for the variable, or to the default value.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "A prefix added to the value provided for the variable, or to the default value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of value for the variable.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultValue",
                "name",
                "type"
            ]
        },
        "akamai:index/getImagingPolicyImagePolicyVariableEnumOption:getImagingPolicyImagePolicyVariableEnumOption": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier for each enum value, up to 50 alphanumeric characters.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the variable when the \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e is provided.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "value"
            ]
        },
        "akamai:index/getImagingPolicyVideoPolicy:getImagingPolicyVideoPolicy": {
            "properties": {
                "breakpoints": {
                    "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicyBreakpoints:getImagingPolicyVideoPolicyBreakpoints",
                    "description": "The breakpoint widths (in pixels) to use to create derivative images/videos.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Hosts that are allowed for image/video URLs within transformations or variables.\n"
                },
                "output": {
                    "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicyOutput:getImagingPolicyVideoPolicyOutput",
                    "description": "Dictates the output quality that are created for each resized video.\n"
                },
                "rolloutDuration": {
                    "type": "string",
                    "description": "The amount of time in seconds that the policy takes to rollout. During the rollout an increasing proportion of images/videos will begin to use the new policy instead of the cached images/videos from the previous version. This value has no effect on the staging network.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicyVariable:getImagingPolicyVideoPolicyVariable"
                    },
                    "description": "Declares variables for use within the policy. Any variable declared here can be invoked throughout transformations as a Variable object, so that you don't have to specify values separately. You can also pass in these variable names and values dynamically as query parameters in the image's request URL.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyVideoPolicyBreakpoints:getImagingPolicyVideoPolicyBreakpoints": {
            "properties": {
                "widths": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyVideoPolicyOutput:getImagingPolicyVideoPolicyOutput": {
            "properties": {
                "perceptualQuality": {
                    "type": "string",
                    "description": "The quality of derivative videos. High preserves video quality with reduced byte savings while low reduces video quality to increase byte savings.\n"
                },
                "perceptualQualityVar": {
                    "type": "string",
                    "description": "The quality of derivative videos. High preserves video quality with reduced byte savings while low reduces video quality to increase byte savings.\n"
                },
                "placeholderVideoUrl": {
                    "type": "string",
                    "description": "Allows you to add a specific placeholder video that appears when a user first requests a video, but before Image \u0026 Video Manager processes the video. If not specified the original video plays during the processing time.\n"
                },
                "placeholderVideoUrlVar": {
                    "type": "string",
                    "description": "Allows you to add a specific placeholder video that appears when a user first requests a video, but before Image \u0026 Video Manager processes the video. If not specified the original video plays during the processing time.\n"
                },
                "videoAdaptiveQuality": {
                    "type": "string",
                    "description": "Override the quality of video to serve when Image \u0026 Video Manager detects a slow connection. Specifying lower values lets users with slow connections browse your site with reduced load times without impacting the quality of videos for users with faster connections.\n"
                },
                "videoAdaptiveQualityVar": {
                    "type": "string",
                    "description": "Override the quality of video to serve when Image \u0026 Video Manager detects a slow connection. Specifying lower values lets users with slow connections browse your site with reduced load times without impacting the quality of videos for users with faster connections.\n"
                }
            },
            "type": "object"
        },
        "akamai:index/getImagingPolicyVideoPolicyVariable:getImagingPolicyVideoPolicyVariable": {
            "properties": {
                "defaultValue": {
                    "type": "string",
                    "description": "The default value of the variable if no query parameter is provided. It needs to be one of the `enumOptions` if any are provided.\n"
                },
                "enumOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicyVariableEnumOption:getImagingPolicyVideoPolicyVariableEnumOption"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable, also available as the query parameter name to set the variable's value dynamically. Use up to 50 alphanumeric characters.\n"
                },
                "postfix": {
                    "type": "string",
                    "description": "A postfix added to the value provided for the variable, or to the default value.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "A prefix added to the value provided for the variable, or to the default value.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of value for the variable.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultValue",
                "name",
                "type"
            ]
        },
        "akamai:index/getImagingPolicyVideoPolicyVariableEnumOption:getImagingPolicyVideoPolicyVariableEnumOption": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier for each enum value, up to 50 alphanumeric characters.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the variable when the \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e is provided.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "value"
            ]
        },
        "akamai:index/getMtlskeystoreAccountCaCertificatesCertificate:getMtlskeystoreAccountCaCertificatesCertificate": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account the CA certificate is under.\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "The certificate block of the CA certificate.\n"
                },
                "commonName": {
                    "type": "string",
                    "description": "The common name of the CA certificate.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the CA certificate.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the CA certificate's creation.\n"
                },
                "expiryDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the CA certificate expires.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the CA certificate.\n"
                },
                "issuedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the CA certificate's availability.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the CA certificate's encryption algorithm. Possible values: `RSA` or `ECDSA`.\n"
                },
                "keySizeInBytes": {
                    "type": "integer",
                    "description": "The private key length of the CA certificate.\n"
                },
                "qualificationDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the CA certificate's status moved from QUALIFYING to CURRENT.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Specifies the algorithm that secures the data exchange between the edge server and origin.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the CA certificate. Possible values: QUALIFYING, CURRENT, PREVIOUS, or EXPIRED.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The public key's entity stored in the CA certificate's subject public key field.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version of the CA certificate.\n"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "certificate",
                "commonName",
                "createdBy",
                "createdDate",
                "expiryDate",
                "id",
                "issuedDate",
                "keyAlgorithm",
                "keySizeInBytes",
                "qualificationDate",
                "signatureAlgorithm",
                "status",
                "subject",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateCurrent:getMtlskeystoreClientCertificateCurrent": {
            "properties": {
                "certificateBlock": {
                    "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateCurrentCertificateBlock:getMtlskeystoreClientCertificateCurrentCertificateBlock",
                    "description": "Details of the certificate block for the client certificate version.\n"
                },
                "certificateSubmittedBy": {
                    "type": "string",
                    "description": "The user who uploaded the `THIRD_PARTY` client certificate version.\n"
                },
                "certificateSubmittedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the `THIRD_PARTY` signer client certificate version was uploaded.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the client certificate version.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's creation.\n"
                },
                "csrBlock": {
                    "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateCurrentCsrBlock:getMtlskeystoreClientCertificateCurrentCsrBlock",
                    "description": "Details of the Certificate Signing Request (CSR) for the client certificate version.\n"
                },
                "deleteRequestedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's deletion request.\n"
                },
                "ellipticCurve": {
                    "type": "string",
                    "description": "Specifies the key elliptic curve when the key algorithm `ECDSA` is used.\n"
                },
                "expiryDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the client certificate version expires.\n"
                },
                "issuedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's availability.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The signing entity of the client certificate version.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the client certificate version's encryption algorithm. Supported values are `RSA` and `ECDSA`.\n"
                },
                "keySizeInBytes": {
                    "type": "string",
                    "description": "The private key length of the client certificate version when the key algorithm `RSA` is used.\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateCurrentProperty:getMtlskeystoreClientCertificateCurrentProperty"
                    },
                    "description": "A list of properties associated with the client certificate.\n"
                },
                "scheduledDeleteDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's scheduled deletion.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Specifies the algorithm that secures the data exchange between the edge server and origin.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The client certificate version status. Possible values: `AWAITING_SIGNED_CERTIFICATE`, `DEPLOYMENT_PENDING`, `DEPLOYED`, or `DELETE_PENDING`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The public key's entity stored in the client certificate version's subject public key field.\n"
                },
                "validation": {
                    "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateCurrentValidation:getMtlskeystoreClientCertificateCurrentValidation",
                    "description": "Validation results for the client certificate version.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The unique identifier of the client certificate version.\n"
                },
                "versionGuid": {
                    "type": "string",
                    "description": "Unique identifier for the client certificate version. Use it to configure mutual authentication (mTLS) sessions between the origin and edge servers in Property Manager's Mutual TLS Origin Keystore behavior.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateBlock",
                "certificateSubmittedBy",
                "certificateSubmittedDate",
                "createdBy",
                "createdDate",
                "csrBlock",
                "deleteRequestedDate",
                "ellipticCurve",
                "expiryDate",
                "issuedDate",
                "issuer",
                "keyAlgorithm",
                "keySizeInBytes",
                "properties",
                "scheduledDeleteDate",
                "signatureAlgorithm",
                "status",
                "subject",
                "validation",
                "version",
                "versionGuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateCurrentCertificateBlock:getMtlskeystoreClientCertificateCurrentCertificateBlock": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "A text representation of the client certificate in PEM format.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the CA certificate's encryption algorithm. Possible values: `RSA` or `ECDSA`.\n"
                },
                "trustChain": {
                    "type": "string",
                    "description": "A text representation of the trust chain in PEM format.\n"
                }
            },
            "type": "object",
            "required": [
                "certificate",
                "keyAlgorithm",
                "trustChain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateCurrentCsrBlock:getMtlskeystoreClientCertificateCurrentCsrBlock": {
            "properties": {
                "csr": {
                    "type": "string",
                    "description": "Text of the certificate signing request.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the CA certificate's encryption algorithm. Possible values: `RSA` or `ECDSA`.\n"
                }
            },
            "type": "object",
            "required": [
                "csr",
                "keyAlgorithm"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateCurrentProperty:getMtlskeystoreClientCertificateCurrentProperty": {
            "properties": {
                "assetId": {
                    "type": "integer",
                    "description": "The unique identifier of the asset.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The unique identifier of the group.\n"
                },
                "propertyName": {
                    "type": "string",
                    "description": "The name of the property.\n"
                },
                "propertyVersion": {
                    "type": "integer",
                    "description": "The version of the property.\n"
                }
            },
            "type": "object",
            "required": [
                "assetId",
                "groupId",
                "propertyName",
                "propertyVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateCurrentValidation:getMtlskeystoreClientCertificateCurrentValidation": {
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateCurrentValidationError:getMtlskeystoreClientCertificateCurrentValidationError"
                    },
                    "description": "Validation errors that need to be resolved for the request to succeed.\n"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateCurrentValidationWarning:getMtlskeystoreClientCertificateCurrentValidationWarning"
                    },
                    "description": "Validation warnings that can be resolved.\n"
                }
            },
            "type": "object",
            "required": [
                "errors",
                "warnings"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateCurrentValidationError:getMtlskeystoreClientCertificateCurrentValidationError": {
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Specifies the error details.\n"
                },
                "reason": {
                    "type": "string",
                    "description": "Specifies the error root cause.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the error category.\n"
                }
            },
            "type": "object",
            "required": [
                "message",
                "reason",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateCurrentValidationWarning:getMtlskeystoreClientCertificateCurrentValidationWarning": {
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Specifies the warning details.\n"
                },
                "reason": {
                    "type": "string",
                    "description": "Specifies the warning root cause.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the warning category.\n"
                }
            },
            "type": "object",
            "required": [
                "message",
                "reason",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificatePrevious:getMtlskeystoreClientCertificatePrevious": {
            "properties": {
                "certificateBlock": {
                    "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificatePreviousCertificateBlock:getMtlskeystoreClientCertificatePreviousCertificateBlock",
                    "description": "Details of the certificate block for the client certificate version.\n"
                },
                "certificateSubmittedBy": {
                    "type": "string",
                    "description": "The user who uploaded the `THIRD_PARTY` client certificate version.\n"
                },
                "certificateSubmittedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the `THIRD_PARTY` signer client certificate version was uploaded.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the client certificate version.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's creation.\n"
                },
                "csrBlock": {
                    "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificatePreviousCsrBlock:getMtlskeystoreClientCertificatePreviousCsrBlock",
                    "description": "Details of the Certificate Signing Request (CSR) for the client certificate version.\n"
                },
                "deleteRequestedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's deletion request.\n"
                },
                "ellipticCurve": {
                    "type": "string",
                    "description": "Specifies the key elliptic curve when the key algorithm `ECDSA` is used.\n"
                },
                "expiryDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the client certificate version expires.\n"
                },
                "issuedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's availability.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The signing entity of the client certificate version.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the client certificate version's encryption algorithm. Supported values are `RSA` and `ECDSA`.\n"
                },
                "keySizeInBytes": {
                    "type": "string",
                    "description": "The private key length of the client certificate version when the key algorithm `RSA` is used.\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificatePreviousProperty:getMtlskeystoreClientCertificatePreviousProperty"
                    },
                    "description": "A list of properties associated with the client certificate.\n"
                },
                "scheduledDeleteDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's scheduled deletion.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Specifies the algorithm that secures the data exchange between the edge server and origin.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The client certificate version status. Possible values: `AWAITING_SIGNED_CERTIFICATE`, `DEPLOYMENT_PENDING`, `DEPLOYED`, or `DELETE_PENDING`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The public key's entity stored in the client certificate version's subject public key field.\n"
                },
                "validation": {
                    "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificatePreviousValidation:getMtlskeystoreClientCertificatePreviousValidation",
                    "description": "Validation results for the client certificate version.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The unique identifier of the client certificate version.\n"
                },
                "versionGuid": {
                    "type": "string",
                    "description": "Unique identifier for the client certificate version. Use it to configure mutual authentication (mTLS) sessions between the origin and edge servers in Property Manager's Mutual TLS Origin Keystore behavior.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateBlock",
                "certificateSubmittedBy",
                "certificateSubmittedDate",
                "createdBy",
                "createdDate",
                "csrBlock",
                "deleteRequestedDate",
                "ellipticCurve",
                "expiryDate",
                "issuedDate",
                "issuer",
                "keyAlgorithm",
                "keySizeInBytes",
                "properties",
                "scheduledDeleteDate",
                "signatureAlgorithm",
                "status",
                "subject",
                "validation",
                "version",
                "versionGuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificatePreviousCertificateBlock:getMtlskeystoreClientCertificatePreviousCertificateBlock": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "A text representation of the client certificate in PEM format.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the CA certificate's encryption algorithm. Possible values: `RSA` or `ECDSA`.\n"
                },
                "trustChain": {
                    "type": "string",
                    "description": "A text representation of the trust chain in PEM format.\n"
                }
            },
            "type": "object",
            "required": [
                "certificate",
                "keyAlgorithm",
                "trustChain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificatePreviousCsrBlock:getMtlskeystoreClientCertificatePreviousCsrBlock": {
            "properties": {
                "csr": {
                    "type": "string",
                    "description": "Text of the certificate signing request.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the CA certificate's encryption algorithm. Possible values: `RSA` or `ECDSA`.\n"
                }
            },
            "type": "object",
            "required": [
                "csr",
                "keyAlgorithm"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificatePreviousProperty:getMtlskeystoreClientCertificatePreviousProperty": {
            "properties": {
                "assetId": {
                    "type": "integer",
                    "description": "The unique identifier of the asset.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The unique identifier of the group.\n"
                },
                "propertyName": {
                    "type": "string",
                    "description": "The name of the property.\n"
                },
                "propertyVersion": {
                    "type": "integer",
                    "description": "The version of the property.\n"
                }
            },
            "type": "object",
            "required": [
                "assetId",
                "groupId",
                "propertyName",
                "propertyVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificatePreviousValidation:getMtlskeystoreClientCertificatePreviousValidation": {
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificatePreviousValidationError:getMtlskeystoreClientCertificatePreviousValidationError"
                    },
                    "description": "Validation errors that need to be resolved for the request to succeed.\n"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificatePreviousValidationWarning:getMtlskeystoreClientCertificatePreviousValidationWarning"
                    },
                    "description": "Validation warnings that can be resolved.\n"
                }
            },
            "type": "object",
            "required": [
                "errors",
                "warnings"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificatePreviousValidationError:getMtlskeystoreClientCertificatePreviousValidationError": {
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Specifies the error details.\n"
                },
                "reason": {
                    "type": "string",
                    "description": "Specifies the error root cause.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the error category.\n"
                }
            },
            "type": "object",
            "required": [
                "message",
                "reason",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificatePreviousValidationWarning:getMtlskeystoreClientCertificatePreviousValidationWarning": {
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Specifies the warning details.\n"
                },
                "reason": {
                    "type": "string",
                    "description": "Specifies the warning root cause.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the warning category.\n"
                }
            },
            "type": "object",
            "required": [
                "message",
                "reason",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateVersion:getMtlskeystoreClientCertificateVersion": {
            "properties": {
                "certificateBlock": {
                    "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateVersionCertificateBlock:getMtlskeystoreClientCertificateVersionCertificateBlock",
                    "description": "Details of the certificate block for the client certificate version.\n"
                },
                "certificateSubmittedBy": {
                    "type": "string",
                    "description": "The user who uploaded the `THIRD_PARTY` client certificate version.\n"
                },
                "certificateSubmittedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the `THIRD_PARTY` signer client certificate version was uploaded.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the client certificate version.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's creation.\n"
                },
                "csrBlock": {
                    "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateVersionCsrBlock:getMtlskeystoreClientCertificateVersionCsrBlock",
                    "description": "Details of the Certificate Signing Request (CSR) for the client certificate version.\n"
                },
                "deleteRequestedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's deletion request.\n"
                },
                "ellipticCurve": {
                    "type": "string",
                    "description": "Specifies the key elliptic curve when the key algorithm `ECDSA` is used.\n"
                },
                "expiryDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating when the client certificate version expires.\n"
                },
                "issuedDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's availability.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The signing entity of the client certificate version.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the client certificate version's encryption algorithm. Supported values are `RSA` and `ECDSA`.\n"
                },
                "keySizeInBytes": {
                    "type": "string",
                    "description": "The private key length of the client certificate version when the key algorithm `RSA` is used.\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateVersionProperty:getMtlskeystoreClientCertificateVersionProperty"
                    },
                    "description": "A list of properties associated with the client certificate.\n"
                },
                "scheduledDeleteDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate version's scheduled deletion.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Specifies the algorithm that secures the data exchange between the edge server and origin.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The client certificate version status. Possible values: `AWAITING_SIGNED_CERTIFICATE`, `DEPLOYMENT_PENDING`, `DEPLOYED`, or `DELETE_PENDING`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The public key's entity stored in the client certificate version's subject public key field.\n"
                },
                "validation": {
                    "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateVersionValidation:getMtlskeystoreClientCertificateVersionValidation",
                    "description": "Validation results for the client certificate version.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The unique identifier of the client certificate version.\n"
                },
                "versionGuid": {
                    "type": "string",
                    "description": "Unique identifier for the client certificate version. Use it to configure mutual authentication (mTLS) sessions between the origin and edge servers in Property Manager's Mutual TLS Origin Keystore behavior.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateBlock",
                "certificateSubmittedBy",
                "certificateSubmittedDate",
                "createdBy",
                "createdDate",
                "csrBlock",
                "deleteRequestedDate",
                "ellipticCurve",
                "expiryDate",
                "issuedDate",
                "issuer",
                "keyAlgorithm",
                "keySizeInBytes",
                "properties",
                "scheduledDeleteDate",
                "signatureAlgorithm",
                "status",
                "subject",
                "validation",
                "version",
                "versionGuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateVersionCertificateBlock:getMtlskeystoreClientCertificateVersionCertificateBlock": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "A text representation of the client certificate in PEM format.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the CA certificate's encryption algorithm. Possible values: `RSA` or `ECDSA`.\n"
                },
                "trustChain": {
                    "type": "string",
                    "description": "A text representation of the trust chain in PEM format.\n"
                }
            },
            "type": "object",
            "required": [
                "certificate",
                "keyAlgorithm",
                "trustChain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateVersionCsrBlock:getMtlskeystoreClientCertificateVersionCsrBlock": {
            "properties": {
                "csr": {
                    "type": "string",
                    "description": "Text of the certificate signing request.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the CA certificate's encryption algorithm. Possible values: `RSA` or `ECDSA`.\n"
                }
            },
            "type": "object",
            "required": [
                "csr",
                "keyAlgorithm"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateVersionProperty:getMtlskeystoreClientCertificateVersionProperty": {
            "properties": {
                "assetId": {
                    "type": "integer",
                    "description": "The unique identifier of the asset.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The unique identifier of the group.\n"
                },
                "propertyName": {
                    "type": "string",
                    "description": "The name of the property.\n"
                },
                "propertyVersion": {
                    "type": "integer",
                    "description": "The version of the property.\n"
                }
            },
            "type": "object",
            "required": [
                "assetId",
                "groupId",
                "propertyName",
                "propertyVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateVersionValidation:getMtlskeystoreClientCertificateVersionValidation": {
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateVersionValidationError:getMtlskeystoreClientCertificateVersionValidationError"
                    },
                    "description": "Validation errors that need to be resolved for the request to succeed.\n"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateVersionValidationWarning:getMtlskeystoreClientCertificateVersionValidationWarning"
                    },
                    "description": "Validation warnings that can be resolved.\n"
                }
            },
            "type": "object",
            "required": [
                "errors",
                "warnings"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateVersionValidationError:getMtlskeystoreClientCertificateVersionValidationError": {
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Specifies the error details.\n"
                },
                "reason": {
                    "type": "string",
                    "description": "Specifies the error root cause.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the error category.\n"
                }
            },
            "type": "object",
            "required": [
                "message",
                "reason",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificateVersionValidationWarning:getMtlskeystoreClientCertificateVersionValidationWarning": {
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Specifies the warning details.\n"
                },
                "reason": {
                    "type": "string",
                    "description": "Specifies the warning root cause.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the warning category.\n"
                }
            },
            "type": "object",
            "required": [
                "message",
                "reason",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getMtlskeystoreClientCertificatesCertificate:getMtlskeystoreClientCertificatesCertificate": {
            "properties": {
                "certificateId": {
                    "type": "integer",
                    "description": "The unique identifier of the client certificate.\n"
                },
                "certificateName": {
                    "type": "string",
                    "description": "The name of the client certificate.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the CA certificate.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the CA certificate's creation.\n"
                },
                "geography": {
                    "type": "string",
                    "description": "Specifies the type of network to deploy the client certificate. Possible values: `CORE`, `RUSSIA_AND_CORE`, or `CHINA_AND_CORE`.\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "Identifies the CA certificate's encryption algorithm. Possible values: `RSA` or `ECDSA`.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The email addresses to notify for client certificate-related issues.\n"
                },
                "secureNetwork": {
                    "type": "string",
                    "description": "Identifies the network deployment type. Possible values: `STANDARD_TLS` or `ENHANCED_TLS`.\n"
                },
                "signer": {
                    "type": "string",
                    "description": "The signing entity of the client certificate. Possible values: `AKAMAI` or `THIRD_PARTY`.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The CA certificate’s key value details.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateId",
                "certificateName",
                "createdBy",
                "createdDate",
                "geography",
                "keyAlgorithm",
                "notificationEmails",
                "secureNetwork",
                "signer",
                "subject"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertiesProperty:getPropertiesProperty": {
            "properties": {
                "contractId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "latestVersion": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "productionVersion": {
                    "type": "integer"
                },
                "propertyId": {
                    "type": "string"
                },
                "propertyName": {
                    "type": "string"
                },
                "propertyType": {
                    "type": "string",
                    "description": "Specifies the type of the property.\n"
                },
                "stagingVersion": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "contractId",
                "groupId",
                "latestVersion",
                "note",
                "productionVersion",
                "propertyId",
                "propertyName",
                "propertyType",
                "stagingVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertiesSearchProperty:getPropertiesSearchProperty": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "assetId": {
                    "type": "string"
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "productionStatus": {
                    "type": "string"
                },
                "propertyId": {
                    "type": "string"
                },
                "propertyName": {
                    "type": "string"
                },
                "propertyVersion": {
                    "type": "integer"
                },
                "stagingStatus": {
                    "type": "string"
                },
                "updatedByUser": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "assetId",
                "contractId",
                "edgeHostname",
                "groupId",
                "hostname",
                "productionStatus",
                "propertyId",
                "propertyName",
                "propertyVersion",
                "stagingStatus",
                "updatedByUser",
                "updatedDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnameActivationHostname:getPropertyHostnameActivationHostname": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies whether a given activation adds or removes a hostname item. Available options are `ADD` and `REMOVE`.\n"
                },
                "certProvisioningType": {
                    "type": "string",
                    "description": "Indicates the certificate's provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can't specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.\n"
                },
                "cnameFrom": {
                    "type": "string",
                    "description": "The hostname that your end users see, indicated by the Host header in end user requests.\n"
                },
                "cnameTo": {
                    "type": "string",
                    "description": "The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers.\n"
                },
                "edgeHostnameId": {
                    "type": "string",
                    "description": "Identifies the edge hostname you mapped your traffic to on the production network.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "certProvisioningType",
                "cnameFrom",
                "cnameTo",
                "edgeHostnameId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnameActivationsHostnameActivation:getPropertyHostnameActivationsHostnameActivation": {
            "properties": {
                "activationType": {
                    "type": "string",
                    "description": "The activation type, either `ACTIVATE` or `DEACTIVATE`.\n"
                },
                "hostnameActivationId": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp property hostname activation's unique identifier.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The network of activation, either `STAGING` or `PRODUCTION`.`\n"
                },
                "note": {
                    "type": "string",
                    "description": "Assigns a log message to the activation request.\n"
                },
                "notifyEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email addresses to notify when the activation status changes.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The activation's status. `ACTIVE` if currently serving traffic. `INACTIVE` if another activation has superseded this one. `PENDING` if not yet active. `ABORTED` if the client followed up with a `DELETE` request in time. `FAILED` if the activation causes a range of edge network errors that may cause a fallback to the previous activation. `PENDING_DEACTIVATION` or `DEACTIVATED` when the \u003cspan pulumi-lang-nodejs=\"`activationType`\" pulumi-lang-dotnet=\"`ActivationType`\" pulumi-lang-go=\"`activationType`\" pulumi-lang-python=\"`activation_type`\" pulumi-lang-yaml=\"`activationType`\" pulumi-lang-java=\"`activationType`\"\u003e`activation_type`\u003c/span\u003e is `DEACTIVATE` to no longer serve traffic.\n"
                },
                "submitDate": {
                    "type": "string",
                    "description": "The timestamp indicating when the activation was initiated.\n"
                },
                "updateDate": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp indicating when the status last changed.\n"
                }
            },
            "type": "object",
            "required": [
                "activationType",
                "hostnameActivationId",
                "network",
                "note",
                "notifyEmails",
                "status",
                "submitDate",
                "updateDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnamesDiffHostname:getPropertyHostnamesDiffHostname": {
            "properties": {
                "cnameFrom": {
                    "type": "string",
                    "description": "The hostname that your end users see, indicated by the Host header in end user requests.\n"
                },
                "productionCertProvisioningType": {
                    "type": "string",
                    "description": "Indicates the certificate's provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can't specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.\n"
                },
                "productionCnameTo": {
                    "type": "string",
                    "description": "The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object's `edgeHostnameDomain` member.\n"
                },
                "productionCnameType": {
                    "type": "string",
                    "description": "A hostname's CNAME type. Supports only the `EDGE_HOSTNAME` value.\n"
                },
                "productionEdgeHostnameId": {
                    "type": "string",
                    "description": "The unique identifier for the edge hostname.\n"
                },
                "stagingCertProvisioningType": {
                    "type": "string",
                    "description": "Indicates the certificate's provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can't specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.\n"
                },
                "stagingCnameTo": {
                    "type": "string",
                    "description": "The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object's `edgeHostnameDomain` member.\n"
                },
                "stagingCnameType": {
                    "type": "string",
                    "description": "A hostname's CNAME type. Supports only the `EDGE_HOSTNAME` value.\n"
                },
                "stagingEdgeHostnameId": {
                    "type": "string",
                    "description": "The unique identifier for the edge hostname.\n"
                }
            },
            "type": "object",
            "required": [
                "cnameFrom",
                "productionCertProvisioningType",
                "productionCnameTo",
                "productionCnameType",
                "productionEdgeHostnameId",
                "stagingCertProvisioningType",
                "stagingCnameTo",
                "stagingCnameType",
                "stagingEdgeHostnameId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnamesHostname:getPropertyHostnamesHostname": {
            "properties": {
                "certProvisioningType": {
                    "type": "string",
                    "description": "Indicates the certificate's provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can't specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.\n"
                },
                "certStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getPropertyHostnamesHostnameCertStatus:getPropertyHostnamesHostnameCertStatus"
                    }
                },
                "cnameFrom": {
                    "type": "string",
                    "description": "The hostname that your end users see, indicated by the Host header in end user requests.\n"
                },
                "cnameTo": {
                    "type": "string",
                    "description": "The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object's `edgeHostnameDomain` member.\n"
                },
                "cnameType": {
                    "type": "string",
                    "description": "A hostname's CNAME type. Supports only the `EDGE_HOSTNAME` value.\n"
                },
                "edgeHostnameId": {
                    "type": "string",
                    "description": "The unique identifier for the edge hostname.\n"
                }
            },
            "type": "object",
            "required": [
                "certProvisioningType",
                "certStatuses",
                "cnameFrom",
                "cnameTo",
                "cnameType",
                "edgeHostnameId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnamesHostnameBucket:getPropertyHostnamesHostnameBucket": {
            "properties": {
                "certStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getPropertyHostnamesHostnameBucketCertStatus:getPropertyHostnamesHostnameBucketCertStatus"
                    }
                },
                "cnameFrom": {
                    "type": "string",
                    "description": "The hostname that your end users see, indicated by the Host header in end user requests.\n"
                },
                "cnameType": {
                    "type": "string",
                    "description": "A hostname's CNAME type. Supports only the `EDGE_HOSTNAME` value.\n"
                },
                "productionCertType": {
                    "type": "string",
                    "description": "Indicates the certificate's provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can't specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.\n"
                },
                "productionCnameTo": {
                    "type": "string",
                    "description": "The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object's `edgeHostnameDomain` member.\n"
                },
                "productionEdgeHostnameId": {
                    "type": "string",
                    "description": "The unique identifier for the edge hostname.\n"
                },
                "stagingCertType": {
                    "type": "string",
                    "description": "Indicates the certificate's provisioning type. Either `CPS_MANAGED` for the certificates you create with the Certificate Provisioning System (CPS) API, or `DEFAULT` for the Domain Validation (DV) certificates created automatically. Note that you can't specify the `DEFAULT` value if your property hostname uses the `akamaized.net` domain suffix.\n"
                },
                "stagingCnameTo": {
                    "type": "string",
                    "description": "The edge hostname you point the property hostname to so that you can start serving traffic through Akamai servers. This member corresponds to the edge hostname object's `edgeHostnameDomain` member.\n"
                },
                "stagingEdgeHostnameId": {
                    "type": "string",
                    "description": "The unique identifier for the edge hostname.\n"
                }
            },
            "type": "object",
            "required": [
                "certStatuses",
                "cnameFrom",
                "cnameType",
                "productionCertType",
                "productionCnameTo",
                "productionEdgeHostnameId",
                "stagingCertType",
                "stagingCnameTo",
                "stagingEdgeHostnameId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnamesHostnameBucketCertStatus:getPropertyHostnamesHostnameBucketCertStatus": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": "The hostname part of the CNAME record used to validate the certificate's domain.\n"
                },
                "productionStatus": {
                    "type": "string",
                    "description": "The certificate's deployment status on the production network.\n"
                },
                "stagingStatus": {
                    "type": "string",
                    "description": "The certificate's deployment status on the staging network.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The destination part of the CNAME record used to validate the certificate's domain.\n"
                }
            },
            "type": "object",
            "required": [
                "hostname",
                "productionStatus",
                "stagingStatus",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnamesHostnameCertStatus:getPropertyHostnamesHostnameCertStatus": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "description": "The hostname part of the CNAME record used to validate the certificate's domain.\n"
                },
                "productionStatus": {
                    "type": "string",
                    "description": "The certificate's deployment status on the production network.\n"
                },
                "stagingStatus": {
                    "type": "string",
                    "description": "The certificate's deployment status on the staging network.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The destination part of the CNAME record used to validate the certificate's domain.\n"
                }
            },
            "type": "object",
            "required": [
                "hostname",
                "productionStatus",
                "stagingStatus",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyIncludeParentsParent:getPropertyIncludeParentsParent": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The property's unique identifier\n"
                },
                "isIncludeUsedInProductionVersion": {
                    "type": "boolean",
                    "description": "Indicates if the include is used in the production network\n"
                },
                "isIncludeUsedInStagingVersion": {
                    "type": "boolean",
                    "description": "Indicates if the include is used in the staging network\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name for the property\n"
                },
                "productionVersion": {
                    "type": "string",
                    "description": "The most recent property version to be activated to the production network\n"
                },
                "stagingVersion": {
                    "type": "string",
                    "description": "The most recent property version to be activated to the staging network\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "isIncludeUsedInProductionVersion",
                "isIncludeUsedInStagingVersion",
                "name",
                "productionVersion",
                "stagingVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyIncludesInclude:getPropertyIncludesInclude": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The include's unique identifier\n"
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Specifies the most recent version of the include\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name for the include\n"
                },
                "productionVersion": {
                    "type": "string",
                    "description": "The most recent version to be activated to the production network\n"
                },
                "stagingVersion": {
                    "type": "string",
                    "description": "The most recent version to be activated to the staging network\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the type of the include, either `MICROSERVICES` or `COMMON_SETTINGS`\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "latestVersion",
                "name",
                "productionVersion",
                "stagingVersion",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyIncludesParentProperty:getPropertyIncludesParentProperty": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The property's unique identifier\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The property's version for which the data is requested\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "version"
            ]
        },
        "akamai:index/getPropertyProductsProduct:getPropertyProductsProduct": {
            "properties": {
                "productId": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "productId",
                "productName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyRulesTemplateTemplate:getPropertyRulesTemplateTemplate": {
            "properties": {
                "templateData": {
                    "type": "string",
                    "description": "Content of the template as string\n"
                },
                "templateDir": {
                    "type": "string",
                    "description": "Directory points to a folder, which contains snippets to include into template.\n"
                }
            },
            "type": "object",
            "required": [
                "templateData",
                "templateDir"
            ]
        },
        "akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "akamai:index/getZoneDnssecStatusCurrentRecords:getZoneDnssecStatusCurrentRecords": {
            "properties": {
                "dnskeyRecord": {
                    "type": "string",
                    "description": "The generated DNSKEY record for this zone.\n"
                },
                "dsRecord": {
                    "type": "string",
                    "description": "The generated DS record for this zone.\n"
                },
                "expectedTtl": {
                    "type": "integer",
                    "description": "The TTL on the NS record for this zone. This should match the TTL on the DS or DNSKEY record.\n"
                },
                "lastModifiedDate": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp on which these records were generated.\n"
                }
            },
            "type": "object",
            "required": [
                "dnskeyRecord",
                "dsRecord",
                "expectedTtl",
                "lastModifiedDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getZoneDnssecStatusNewRecords:getZoneDnssecStatusNewRecords": {
            "properties": {
                "dnskeyRecord": {
                    "type": "string",
                    "description": "The generated DNSKEY record for this zone.\n"
                },
                "dsRecord": {
                    "type": "string",
                    "description": "The generated DS record for this zone.\n"
                },
                "expectedTtl": {
                    "type": "integer",
                    "description": "The TTL on the NS record for this zone. This should match the TTL on the DS or DNSKEY record.\n"
                },
                "lastModifiedDate": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp on which these records were generated.\n"
                }
            },
            "type": "object",
            "required": [
                "dnskeyRecord",
                "dsRecord",
                "expectedTtl",
                "lastModifiedDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the akamai package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:index/ProviderConfig:ProviderConfig",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration"
            },
            "edgerc": {
                "type": "string"
            },
            "requestLimit": {
                "type": "integer",
                "description": "The maximum number of API requests to be made per second (0 for no limit)"
            },
            "retryDisabled": {
                "type": "boolean",
                "description": "Should the retries of API requests be disabled, default false"
            },
            "retryMax": {
                "type": "integer",
                "description": "The maximum number retires of API requests, default 10"
            },
            "retryWaitMax": {
                "type": "integer",
                "description": "The maximum wait time in seconds between API requests retries, default is 30 sec"
            },
            "retryWaitMin": {
                "type": "integer",
                "description": "The minimum wait time in seconds between API requests retries, default is 1 sec"
            }
        },
        "inputProperties": {
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:index/ProviderConfig:ProviderConfig",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration"
            },
            "edgerc": {
                "type": "string"
            },
            "requestLimit": {
                "type": "integer",
                "description": "The maximum number of API requests to be made per second (0 for no limit)"
            },
            "retryDisabled": {
                "type": "boolean",
                "description": "Should the retries of API requests be disabled, default false"
            },
            "retryMax": {
                "type": "integer",
                "description": "The maximum number retires of API requests, default 10"
            },
            "retryWaitMax": {
                "type": "integer",
                "description": "The maximum wait time in seconds between API requests retries, default is 30 sec"
            },
            "retryWaitMin": {
                "type": "integer",
                "description": "The minimum wait time in seconds between API requests retries, default is 1 sec"
            }
        },
        "methods": {
            "terraformConfig": "pulumi:providers:akamai/terraformConfig"
        }
    },
    "resources": {
        "akamai:index/appSecActivations:AppSecActivations": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration to be activated"
                },
                "network": {
                    "type": "string",
                    "description": "Network on which to activate the configuration version (STAGING or PRODUCTION)"
                },
                "note": {
                    "type": "string",
                    "description": "Note describing the activation. Will use timestamp if omitted."
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of email addresses to be notified with the results of the activation"
                },
                "status": {
                    "type": "string",
                    "description": "The results of the activation"
                },
                "version": {
                    "type": "integer",
                    "description": "Version of the security configuration to be activated"
                }
            },
            "required": [
                "configId",
                "notificationEmails",
                "status",
                "version"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration to be activated"
                },
                "network": {
                    "type": "string",
                    "description": "Network on which to activate the configuration version (STAGING or PRODUCTION)"
                },
                "note": {
                    "type": "string",
                    "description": "Note describing the activation. Will use timestamp if omitted."
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of email addresses to be notified with the results of the activation"
                },
                "version": {
                    "type": "integer",
                    "description": "Version of the security configuration to be activated"
                }
            },
            "requiredInputs": [
                "configId",
                "notificationEmails",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecActivations resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration to be activated"
                    },
                    "network": {
                        "type": "string",
                        "description": "Network on which to activate the configuration version (STAGING or PRODUCTION)"
                    },
                    "note": {
                        "type": "string",
                        "description": "Note describing the activation. Will use timestamp if omitted."
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of email addresses to be notified with the results of the activation"
                    },
                    "status": {
                        "type": "string",
                        "description": "The results of the activation"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version of the security configuration to be activated"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAdvancedSettingsEvasivePathMatch:AppSecAdvancedSettingsEvasivePathMatch": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enablePathMatch": {
                    "type": "boolean",
                    "description": "Whether to enable the evasive path match setting"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "enablePathMatch"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enablePathMatch": {
                    "type": "boolean",
                    "description": "Whether to enable the evasive path match setting"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "enablePathMatch"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsEvasivePathMatch resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enablePathMatch": {
                        "type": "boolean",
                        "description": "Whether to enable the evasive path match setting"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAdvancedSettingsLogging:AppSecAdvancedSettingsLogging": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "logging": {
                    "type": "string",
                    "description": "Whether to enable, disable, or update HTTP header logging settings"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "logging"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "logging": {
                    "type": "string",
                    "description": "Whether to enable, disable, or update HTTP header logging settings"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "logging"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsLogging resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "logging": {
                        "type": "string",
                        "description": "Whether to enable, disable, or update HTTP header logging settings"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAdvancedSettingsPragmaHeader:AppSecAdvancedSettingsPragmaHeader": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "pragmaHeader": {
                    "type": "string",
                    "description": "JSON-formatted information describing the conditions to exclude from the default remove action"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "pragmaHeader"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "pragmaHeader": {
                    "type": "string",
                    "description": "JSON-formatted information describing the conditions to exclude from the default remove action"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "pragmaHeader"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsPragmaHeader resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "pragmaHeader": {
                        "type": "string",
                        "description": "JSON-formatted information describing the conditions to exclude from the default remove action"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAdvancedSettingsPrefetch:AppSecAdvancedSettingsPrefetch": {
            "properties": {
                "allExtensions": {
                    "type": "boolean",
                    "description": "Whether to enable prefetch requests for all file extensions"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enableAppLayer": {
                    "type": "boolean",
                    "description": "Whether to enable or disable prefetch requests"
                },
                "enableRateControls": {
                    "type": "boolean",
                    "description": "Whether to enable prefetch requests for rate controls"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file extensions"
                }
            },
            "required": [
                "allExtensions",
                "configId",
                "enableAppLayer",
                "enableRateControls",
                "extensions"
            ],
            "inputProperties": {
                "allExtensions": {
                    "type": "boolean",
                    "description": "Whether to enable prefetch requests for all file extensions"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enableAppLayer": {
                    "type": "boolean",
                    "description": "Whether to enable or disable prefetch requests"
                },
                "enableRateControls": {
                    "type": "boolean",
                    "description": "Whether to enable prefetch requests for rate controls"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of file extensions"
                }
            },
            "requiredInputs": [
                "allExtensions",
                "configId",
                "enableAppLayer",
                "enableRateControls",
                "extensions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsPrefetch resources.\n",
                "properties": {
                    "allExtensions": {
                        "type": "boolean",
                        "description": "Whether to enable prefetch requests for all file extensions"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enableAppLayer": {
                        "type": "boolean",
                        "description": "Whether to enable or disable prefetch requests"
                    },
                    "enableRateControls": {
                        "type": "boolean",
                        "description": "Whether to enable prefetch requests for rate controls"
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of file extensions"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecApiConstraintsProtection:AppSecApiConstraintsProtection": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable API constraints protection"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text representation"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable API constraints protection"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecApiConstraintsProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable API constraints protection"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text representation"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecApiRequestConstraints:AppSecApiRequestConstraints": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to be taken when the API request constraint is triggered"
                },
                "apiEndpointId": {
                    "type": "integer",
                    "description": "Unique identifier of the API endpoint to which the constraint will be assigned"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "action",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Action to be taken when the API request constraint is triggered"
                },
                "apiEndpointId": {
                    "type": "integer",
                    "description": "Unique identifier of the API endpoint to which the constraint will be assigned"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "action",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecApiRequestConstraints resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Action to be taken when the API request constraint is triggered"
                    },
                    "apiEndpointId": {
                        "type": "integer",
                        "description": "Unique identifier of the API endpoint to which the constraint will be assigned"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAttackGroup:AppSecAttackGroup": {
            "properties": {
                "attackGroup": {
                    "type": "string",
                    "description": "Unique name of the attack group to be modified"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": "Action to be taken when the attack group is triggered"
                },
                "conditionException": {
                    "type": "string",
                    "description": "JSON-formatted condition and exception information for the attack group"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "attackGroup": {
                    "type": "string",
                    "description": "Unique name of the attack group to be modified"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": "Action to be taken when the attack group is triggered"
                },
                "conditionException": {
                    "type": "string",
                    "description": "JSON-formatted condition and exception information for the attack group"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAttackGroup resources.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string",
                        "description": "Unique name of the attack group to be modified"
                    },
                    "attackGroupAction": {
                        "type": "string",
                        "description": "Action to be taken when the attack group is triggered"
                    },
                    "conditionException": {
                        "type": "string",
                        "description": "JSON-formatted condition and exception information for the attack group"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecByPassNetworkList:AppSecByPassNetworkList": {
            "properties": {
                "bypassNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of network list IDs that compose the bypass list"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The unique identifier of the security policy governing the bypass network lists"
                }
            },
            "required": [
                "bypassNetworkLists",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "bypassNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of network list IDs that compose the bypass list"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The unique identifier of the security policy governing the bypass network lists"
                }
            },
            "requiredInputs": [
                "bypassNetworkLists",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecByPassNetworkList resources.\n",
                "properties": {
                    "bypassNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of network list IDs that compose the bypass list"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The unique identifier of the security policy governing the bypass network lists"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecConfiguration:AppSecConfiguration": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the new security configuration"
                },
                "contractId": {
                    "type": "string",
                    "description": "Unique identifier of the Akamai contract associated with the new configuration"
                },
                "createFromConfigId": {
                    "type": "integer",
                    "description": "Unique identifier of the existing configuration being cloned to create the new configuration"
                },
                "createFromVersion": {
                    "type": "integer",
                    "description": "Version number of the existing configuration being cloned to create the new configuration"
                },
                "description": {
                    "type": "string",
                    "description": "Brief description of the new configuration"
                },
                "groupId": {
                    "type": "string",
                    "description": "Unique identifier of the contract group associated with the new configuration"
                },
                "hostNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Hostnames to be protected by the new configuration"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the new configuration"
                }
            },
            "required": [
                "configId",
                "contractId",
                "description",
                "groupId",
                "hostNames",
                "name"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "Unique identifier of the Akamai contract associated with the new configuration"
                },
                "createFromConfigId": {
                    "type": "integer",
                    "description": "Unique identifier of the existing configuration being cloned to create the new configuration"
                },
                "createFromVersion": {
                    "type": "integer",
                    "description": "Version number of the existing configuration being cloned to create the new configuration"
                },
                "description": {
                    "type": "string",
                    "description": "Brief description of the new configuration"
                },
                "groupId": {
                    "type": "string",
                    "description": "Unique identifier of the contract group associated with the new configuration"
                },
                "hostNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Hostnames to be protected by the new configuration"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the new configuration"
                }
            },
            "requiredInputs": [
                "contractId",
                "description",
                "groupId",
                "hostNames"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecConfiguration resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the new security configuration"
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Unique identifier of the Akamai contract associated with the new configuration"
                    },
                    "createFromConfigId": {
                        "type": "integer",
                        "description": "Unique identifier of the existing configuration being cloned to create the new configuration"
                    },
                    "createFromVersion": {
                        "type": "integer",
                        "description": "Version number of the existing configuration being cloned to create the new configuration"
                    },
                    "description": {
                        "type": "string",
                        "description": "Brief description of the new configuration"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Unique identifier of the contract group associated with the new configuration"
                    },
                    "hostNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Hostnames to be protected by the new configuration"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the new configuration"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecConfigurationRename:AppSecConfigurationRename": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "description": {
                    "type": "string",
                    "description": "Brief description of the security configuration"
                },
                "name": {
                    "type": "string",
                    "description": "New name for the security configuration"
                }
            },
            "required": [
                "configId",
                "description",
                "name"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "description": {
                    "type": "string",
                    "description": "Brief description of the security configuration"
                },
                "name": {
                    "type": "string",
                    "description": "New name for the security configuration"
                }
            },
            "requiredInputs": [
                "configId",
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecConfigurationRename resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "description": {
                        "type": "string",
                        "description": "Brief description of the security configuration"
                    },
                    "name": {
                        "type": "string",
                        "description": "New name for the security configuration"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomDeny:AppSecCustomDeny": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "customDeny": {
                    "type": "string",
                    "description": "JSON-formatted information about the properties and property values for the custom deny"
                },
                "customDenyId": {
                    "type": "string",
                    "description": "custom_deny_id"
                }
            },
            "required": [
                "configId",
                "customDeny",
                "customDenyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "customDeny": {
                    "type": "string",
                    "description": "JSON-formatted information about the properties and property values for the custom deny"
                }
            },
            "requiredInputs": [
                "configId",
                "customDeny"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomDeny resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "customDeny": {
                        "type": "string",
                        "description": "JSON-formatted information about the properties and property values for the custom deny"
                    },
                    "customDenyId": {
                        "type": "string",
                        "description": "custom_deny_id"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomRule:AppSecCustomRule": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "customRule": {
                    "type": "string",
                    "description": "JSON-formatted definition of the custom rule"
                },
                "customRuleId": {
                    "type": "integer"
                }
            },
            "required": [
                "configId",
                "customRule",
                "customRuleId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "customRule": {
                    "type": "string",
                    "description": "JSON-formatted definition of the custom rule"
                }
            },
            "requiredInputs": [
                "configId",
                "customRule"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomRule resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "customRule": {
                        "type": "string",
                        "description": "JSON-formatted definition of the custom rule"
                    },
                    "customRuleId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomRuleAction:AppSecCustomRuleAction": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "customRuleAction": {
                    "type": "string",
                    "description": "Action to be taken when the custom rule is invoked"
                },
                "customRuleId": {
                    "type": "integer",
                    "description": "Unique identifier of the custom rule whose action is being modified"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "customRuleAction",
                "customRuleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "customRuleAction": {
                    "type": "string",
                    "description": "Action to be taken when the custom rule is invoked"
                },
                "customRuleId": {
                    "type": "integer",
                    "description": "Unique identifier of the custom rule whose action is being modified"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "customRuleAction",
                "customRuleId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomRuleAction resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "customRuleAction": {
                        "type": "string",
                        "description": "Action to be taken when the custom rule is invoked"
                    },
                    "customRuleId": {
                        "type": "integer",
                        "description": "Unique identifier of the custom rule whose action is being modified"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEval:AppSecEval": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "currentRuleset": {
                    "type": "string",
                    "description": "Versioning information for the Kona Rule Set currently in use in production"
                },
                "evalMode": {
                    "type": "string",
                    "description": "Evaluation mode (ASE_AUTO or ASE_MANUAL)"
                },
                "evalOperation": {
                    "type": "string",
                    "description": "Evaluation mode operation (START, STOP, RESTART, UPDATE or COMPLETE)"
                },
                "evalStatus": {
                    "type": "string",
                    "description": "Whether an evaluation is currently in progress"
                },
                "evaluatingRuleset": {
                    "type": "string",
                    "description": "Versioning information for the Kona Rule Set being evaluated"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "Date when the evaluation period ends"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "currentRuleset",
                "evalOperation",
                "evalStatus",
                "evaluatingRuleset",
                "expirationDate",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "evalMode": {
                    "type": "string",
                    "description": "Evaluation mode (ASE_AUTO or ASE_MANUAL)"
                },
                "evalOperation": {
                    "type": "string",
                    "description": "Evaluation mode operation (START, STOP, RESTART, UPDATE or COMPLETE)"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "evalOperation",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEval resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "currentRuleset": {
                        "type": "string",
                        "description": "Versioning information for the Kona Rule Set currently in use in production"
                    },
                    "evalMode": {
                        "type": "string",
                        "description": "Evaluation mode (ASE_AUTO or ASE_MANUAL)"
                    },
                    "evalOperation": {
                        "type": "string",
                        "description": "Evaluation mode operation (START, STOP, RESTART, UPDATE or COMPLETE)"
                    },
                    "evalStatus": {
                        "type": "string",
                        "description": "Whether an evaluation is currently in progress"
                    },
                    "evaluatingRuleset": {
                        "type": "string",
                        "description": "Versioning information for the Kona Rule Set being evaluated"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "Date when the evaluation period ends"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalGroup:AppSecEvalGroup": {
            "properties": {
                "attackGroup": {
                    "type": "string",
                    "description": "Unique identifier of the evaluation attack group being modified"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": "Action to be taken when the attack group is triggered"
                },
                "conditionException": {
                    "type": "string",
                    "description": "JSON-formatted condition and exception information for the evaluation attack group"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "attackGroup": {
                    "type": "string",
                    "description": "Unique identifier of the evaluation attack group being modified"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": "Action to be taken when the attack group is triggered"
                },
                "conditionException": {
                    "type": "string",
                    "description": "JSON-formatted condition and exception information for the evaluation attack group"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalGroup resources.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string",
                        "description": "Unique identifier of the evaluation attack group being modified"
                    },
                    "attackGroupAction": {
                        "type": "string",
                        "description": "Action to be taken when the attack group is triggered"
                    },
                    "conditionException": {
                        "type": "string",
                        "description": "JSON-formatted condition and exception information for the evaluation attack group"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalPenaltyBox:AppSecEvalPenaltyBox": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "penaltyBoxAction": {
                    "type": "string",
                    "description": "Action applied to requests from clients in the penalty box"
                },
                "penaltyBoxProtection": {
                    "type": "boolean",
                    "description": "Whether to enable the penalty box for the specified security policy"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "penaltyBoxAction",
                "penaltyBoxProtection",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "penaltyBoxAction": {
                    "type": "string",
                    "description": "Action applied to requests from clients in the penalty box"
                },
                "penaltyBoxProtection": {
                    "type": "boolean",
                    "description": "Whether to enable the penalty box for the specified security policy"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "penaltyBoxAction",
                "penaltyBoxProtection",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalPenaltyBox resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "penaltyBoxAction": {
                        "type": "string",
                        "description": "Action applied to requests from clients in the penalty box"
                    },
                    "penaltyBoxProtection": {
                        "type": "boolean",
                        "description": "Whether to enable the penalty box for the specified security policy"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalRule:AppSecEvalRule": {
            "properties": {
                "conditionException": {
                    "type": "string",
                    "description": "JSON-formatted condition and exception information for the evaluation rule"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "ruleAction": {
                    "type": "string",
                    "description": "Action to be taken when the evaluation rule is triggered"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Unique identifier of the evaluation rule being modified"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "ruleAction",
                "ruleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "conditionException": {
                    "type": "string",
                    "description": "JSON-formatted condition and exception information for the evaluation rule"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "ruleAction": {
                    "type": "string",
                    "description": "Action to be taken when the evaluation rule is triggered"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Unique identifier of the evaluation rule being modified"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "ruleAction",
                "ruleId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalRule resources.\n",
                "properties": {
                    "conditionException": {
                        "type": "string",
                        "description": "JSON-formatted condition and exception information for the evaluation rule"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "ruleAction": {
                        "type": "string",
                        "description": "Action to be taken when the evaluation rule is triggered"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": "Unique identifier of the evaluation rule being modified"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecIPGeo:AppSecIPGeo": {
            "properties": {
                "asnNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IDs of ASN network list to be blocked"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "exceptionIpNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IDs of network list that are always allowed"
                },
                "geoNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IDs of geographic network list to be blocked"
                },
                "ipNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IDs of IP network list to be blocked"
                },
                "mode": {
                    "type": "string",
                    "description": "Protection mode (block or allow)"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "ukraineGeoControlAction": {
                    "type": "string",
                    "description": "Action set for Ukraine geo control"
                }
            },
            "required": [
                "configId",
                "mode",
                "securityPolicyId"
            ],
            "inputProperties": {
                "asnNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IDs of ASN network list to be blocked"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "exceptionIpNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IDs of network list that are always allowed"
                },
                "geoNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IDs of geographic network list to be blocked"
                },
                "ipNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IDs of IP network list to be blocked"
                },
                "mode": {
                    "type": "string",
                    "description": "Protection mode (block or allow)"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "ukraineGeoControlAction": {
                    "type": "string",
                    "description": "Action set for Ukraine geo control"
                }
            },
            "requiredInputs": [
                "configId",
                "mode",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecIPGeo resources.\n",
                "properties": {
                    "asnNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs of ASN network list to be blocked"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "exceptionIpNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs of network list that are always allowed"
                    },
                    "geoNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs of geographic network list to be blocked"
                    },
                    "ipNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs of IP network list to be blocked"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Protection mode (block or allow)"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    },
                    "ukraineGeoControlAction": {
                        "type": "string",
                        "description": "Action set for Ukraine geo control"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecIPGeoProtection:AppSecIPGeoProtection": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable IP/Geo protection"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text representation"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable IP/Geo protection"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecIPGeoProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable IP/Geo protection"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text representation"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMalwarePolicy:AppSecMalwarePolicy": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "malwarePolicy": {
                    "type": "string",
                    "description": "JSON-formatted definition of the malware policy"
                },
                "malwarePolicyId": {
                    "type": "integer",
                    "description": "Unique identifier of the malware policy"
                }
            },
            "required": [
                "configId",
                "malwarePolicy",
                "malwarePolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "malwarePolicy": {
                    "type": "string",
                    "description": "JSON-formatted definition of the malware policy"
                }
            },
            "requiredInputs": [
                "configId",
                "malwarePolicy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMalwarePolicy resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "malwarePolicy": {
                        "type": "string",
                        "description": "JSON-formatted definition of the malware policy"
                    },
                    "malwarePolicyId": {
                        "type": "integer",
                        "description": "Unique identifier of the malware policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMalwarePolicyAction:AppSecMalwarePolicyAction": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to be taken for requests scanned according to the malware policy"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "malwarePolicyId": {
                    "type": "integer",
                    "description": "Unique identifier of the malware policy"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "unscannedAction": {
                    "type": "string",
                    "description": "Action to be taken for requests not scanned according to the malware policy"
                }
            },
            "required": [
                "action",
                "configId",
                "malwarePolicyId",
                "securityPolicyId",
                "unscannedAction"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Action to be taken for requests scanned according to the malware policy"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "malwarePolicyId": {
                    "type": "integer",
                    "description": "Unique identifier of the malware policy"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "unscannedAction": {
                    "type": "string",
                    "description": "Action to be taken for requests not scanned according to the malware policy"
                }
            },
            "requiredInputs": [
                "action",
                "configId",
                "malwarePolicyId",
                "securityPolicyId",
                "unscannedAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMalwarePolicyAction resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Action to be taken for requests scanned according to the malware policy"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "malwarePolicyId": {
                        "type": "integer",
                        "description": "Unique identifier of the malware policy"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    },
                    "unscannedAction": {
                        "type": "string",
                        "description": "Action to be taken for requests not scanned according to the malware policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMalwarePolicyActions:AppSecMalwarePolicyActions": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "malwarePolicyActions": {
                    "type": "string",
                    "description": "JSON-formatted list of malware policies and their associated actions"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "malwarePolicyActions",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "malwarePolicyActions": {
                    "type": "string",
                    "description": "JSON-formatted list of malware policies and their associated actions"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "malwarePolicyActions",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMalwarePolicyActions resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "malwarePolicyActions": {
                        "type": "string",
                        "description": "JSON-formatted list of malware policies and their associated actions"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMalwareProtection:AppSecMalwareProtection": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable malware protection"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text representation"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable malware protection"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMalwareProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable malware protection"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text representation"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMatchTarget:AppSecMatchTarget": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "matchTarget": {
                    "type": "string",
                    "description": "JSON-formatted definition of the match target"
                },
                "matchTargetId": {
                    "type": "integer",
                    "description": "Unique identifier of the match target"
                }
            },
            "required": [
                "configId",
                "matchTarget",
                "matchTargetId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "matchTarget": {
                    "type": "string",
                    "description": "JSON-formatted definition of the match target"
                }
            },
            "requiredInputs": [
                "configId",
                "matchTarget"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMatchTarget resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "matchTarget": {
                        "type": "string",
                        "description": "JSON-formatted definition of the match target"
                    },
                    "matchTargetId": {
                        "type": "integer",
                        "description": "Unique identifier of the match target"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMatchTargetSequence:AppSecMatchTargetSequence": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "matchTargetSequence": {
                    "type": "string",
                    "description": "JSON-formatted definition of the processing sequence for all defined match targets"
                }
            },
            "required": [
                "configId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "matchTargetSequence": {
                    "type": "string",
                    "description": "JSON-formatted definition of the processing sequence for all defined match targets"
                }
            },
            "requiredInputs": [
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMatchTargetSequence resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "matchTargetSequence": {
                        "type": "string",
                        "description": "JSON-formatted definition of the processing sequence for all defined match targets"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecPenaltyBox:AppSecPenaltyBox": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "penaltyBoxAction": {
                    "type": "string",
                    "description": "The action to be taken when the penalty box is triggered"
                },
                "penaltyBoxProtection": {
                    "type": "boolean",
                    "description": "Whether to enable the penalty box for the specified security policy"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "penaltyBoxAction",
                "penaltyBoxProtection",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "penaltyBoxAction": {
                    "type": "string",
                    "description": "The action to be taken when the penalty box is triggered"
                },
                "penaltyBoxProtection": {
                    "type": "boolean",
                    "description": "Whether to enable the penalty box for the specified security policy"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "penaltyBoxAction",
                "penaltyBoxProtection",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecPenaltyBox resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "penaltyBoxAction": {
                        "type": "string",
                        "description": "The action to be taken when the penalty box is triggered"
                    },
                    "penaltyBoxProtection": {
                        "type": "boolean",
                        "description": "Whether to enable the penalty box for the specified security policy"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRatePolicy:AppSecRatePolicy": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "ratePolicy": {
                    "type": "string",
                    "description": "JSON-formatted definition of the rate policy"
                },
                "ratePolicyId": {
                    "type": "integer",
                    "description": "Unique identifier of the rate policy"
                }
            },
            "required": [
                "configId",
                "ratePolicy",
                "ratePolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "ratePolicy": {
                    "type": "string",
                    "description": "JSON-formatted definition of the rate policy"
                }
            },
            "requiredInputs": [
                "configId",
                "ratePolicy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRatePolicy resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "ratePolicy": {
                        "type": "string",
                        "description": "JSON-formatted definition of the rate policy"
                    },
                    "ratePolicyId": {
                        "type": "integer",
                        "description": "Unique identifier of the rate policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRatePolicyAction:AppSecRatePolicyAction": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "ipv4Action": {
                    "type": "string",
                    "description": "Action to be taken for requests coming from an IPv4 address"
                },
                "ipv6Action": {
                    "type": "string",
                    "description": "Action to be taken for requests coming from an IPv6 address"
                },
                "ratePolicyId": {
                    "type": "integer",
                    "description": "Unique identifier of the rate policy"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "ipv4Action",
                "ipv6Action",
                "ratePolicyId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "ipv4Action": {
                    "type": "string",
                    "description": "Action to be taken for requests coming from an IPv4 address"
                },
                "ipv6Action": {
                    "type": "string",
                    "description": "Action to be taken for requests coming from an IPv6 address"
                },
                "ratePolicyId": {
                    "type": "integer",
                    "description": "Unique identifier of the rate policy",
                    "willReplaceOnChanges": true
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "ipv4Action",
                "ipv6Action",
                "ratePolicyId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRatePolicyAction resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "ipv4Action": {
                        "type": "string",
                        "description": "Action to be taken for requests coming from an IPv4 address"
                    },
                    "ipv6Action": {
                        "type": "string",
                        "description": "Action to be taken for requests coming from an IPv6 address"
                    },
                    "ratePolicyId": {
                        "type": "integer",
                        "description": "Unique identifier of the rate policy",
                        "willReplaceOnChanges": true
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRateProtection:AppSecRateProtection": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text representation"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRateProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text representation"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProfile:AppSecReputationProfile": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "reputationProfile": {
                    "type": "string",
                    "description": "JSON-formatted definition of the reputation profile"
                },
                "reputationProfileId": {
                    "type": "integer",
                    "description": "Unique identifier of the reputation profile"
                }
            },
            "required": [
                "configId",
                "reputationProfile",
                "reputationProfileId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "reputationProfile": {
                    "type": "string",
                    "description": "JSON-formatted definition of the reputation profile"
                }
            },
            "requiredInputs": [
                "configId",
                "reputationProfile"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProfile resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "reputationProfile": {
                        "type": "string",
                        "description": "JSON-formatted definition of the reputation profile"
                    },
                    "reputationProfileId": {
                        "type": "integer",
                        "description": "Unique identifier of the reputation profile"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProfileAction:AppSecReputationProfileAction": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to be taken when the reputation profile is triggered"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "reputationProfileId": {
                    "type": "integer",
                    "description": "Unique identifier of the reputation profile"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "action",
                "configId",
                "reputationProfileId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Action to be taken when the reputation profile is triggered"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "reputationProfileId": {
                    "type": "integer",
                    "description": "Unique identifier of the reputation profile"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "action",
                "configId",
                "reputationProfileId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProfileAction resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Action to be taken when the reputation profile is triggered"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "reputationProfileId": {
                        "type": "integer",
                        "description": "Unique identifier of the reputation profile"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProfileAnalysis:AppSecReputationProfileAnalysis": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "forwardSharedIpToHttpHeaderSiem": {
                    "type": "boolean",
                    "description": "Whether to add a value indicating that shared IPs are included in HTTP header and SIEM integration"
                },
                "forwardToHttpHeader": {
                    "type": "boolean",
                    "description": "Whether to add client reputation details to requests forwarded to the origin server"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "forwardSharedIpToHttpHeaderSiem",
                "forwardToHttpHeader",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "forwardSharedIpToHttpHeaderSiem": {
                    "type": "boolean",
                    "description": "Whether to add a value indicating that shared IPs are included in HTTP header and SIEM integration"
                },
                "forwardToHttpHeader": {
                    "type": "boolean",
                    "description": "Whether to add client reputation details to requests forwarded to the origin server"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "forwardSharedIpToHttpHeaderSiem",
                "forwardToHttpHeader",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProfileAnalysis resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "forwardSharedIpToHttpHeaderSiem": {
                        "type": "boolean",
                        "description": "Whether to add a value indicating that shared IPs are included in HTTP header and SIEM integration"
                    },
                    "forwardToHttpHeader": {
                        "type": "boolean",
                        "description": "Whether to add client reputation details to requests forwarded to the origin server"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProtection:AppSecReputationProtection": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable reputation protection"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text representation"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable reputation protection"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable reputation protection"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text representation"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRule:AppSecRule": {
            "properties": {
                "conditionException": {
                    "type": "string",
                    "description": "JSON-formatted condition and exception information for the rule"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "ruleAction": {
                    "type": "string",
                    "description": "Action to be taken when the rule is triggered"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Unique identifier of the rule"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "ruleAction",
                "ruleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "conditionException": {
                    "type": "string",
                    "description": "JSON-formatted condition and exception information for the rule"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "ruleAction": {
                    "type": "string",
                    "description": "Action to be taken when the rule is triggered"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Unique identifier of the rule"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "ruleId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRule resources.\n",
                "properties": {
                    "conditionException": {
                        "type": "string",
                        "description": "JSON-formatted condition and exception information for the rule"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "ruleAction": {
                        "type": "string",
                        "description": "Action to be taken when the rule is triggered"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": "Unique identifier of the rule"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRuleUpgrade:AppSecRuleUpgrade": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "currentRuleset": {
                    "type": "string",
                    "description": "Versioning information for the current KRS rule set"
                },
                "evalStatus": {
                    "type": "string",
                    "description": "Whether an evaluation is currently in progress"
                },
                "mode": {
                    "type": "string",
                    "description": "Upgrade mode (KRS, AAG, ASE_MANUAL or ASE_AUTO)"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "upgradeMode": {
                    "type": "string",
                    "description": "Modifies the upgrade type for organizations running the ASE beta (ASE_AUTO or ASE_MANUAL)"
                }
            },
            "required": [
                "configId",
                "currentRuleset",
                "evalStatus",
                "mode",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "upgradeMode": {
                    "type": "string",
                    "description": "Modifies the upgrade type for organizations running the ASE beta (ASE_AUTO or ASE_MANUAL)"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRuleUpgrade resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "currentRuleset": {
                        "type": "string",
                        "description": "Versioning information for the current KRS rule set"
                    },
                    "evalStatus": {
                        "type": "string",
                        "description": "Whether an evaluation is currently in progress"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Upgrade mode (KRS, AAG, ASE_MANUAL or ASE_AUTO)"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    },
                    "upgradeMode": {
                        "type": "string",
                        "description": "Modifies the upgrade type for organizations running the ASE beta (ASE_AUTO or ASE_MANUAL)"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSecurityPolicy:AppSecSecurityPolicy": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "createFromSecurityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the existing security policy being cloned"
                },
                "defaultSettings": {
                    "type": "boolean",
                    "description": "Whether to assign default settings to the new security policy"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the new security policy"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": "Name of the new security policy"
                },
                "securityPolicyPrefix": {
                    "type": "string",
                    "description": "Four-character alphanumeric string prefix used in creating the security policy ID"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "securityPolicyName",
                "securityPolicyPrefix"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "createFromSecurityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the existing security policy being cloned"
                },
                "defaultSettings": {
                    "type": "boolean",
                    "description": "Whether to assign default settings to the new security policy"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": "Name of the new security policy"
                },
                "securityPolicyPrefix": {
                    "type": "string",
                    "description": "Four-character alphanumeric string prefix used in creating the security policy ID"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyName",
                "securityPolicyPrefix"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSecurityPolicy resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "createFromSecurityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the existing security policy being cloned"
                    },
                    "defaultSettings": {
                        "type": "boolean",
                        "description": "Whether to assign default settings to the new security policy"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the new security policy"
                    },
                    "securityPolicyName": {
                        "type": "string",
                        "description": "Name of the new security policy"
                    },
                    "securityPolicyPrefix": {
                        "type": "string",
                        "description": "Four-character alphanumeric string prefix used in creating the security policy ID"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSecurityPolicyRename:AppSecSecurityPolicyRename": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": "New name to be given to the security policy"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "securityPolicyName"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": "New name to be given to the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId",
                "securityPolicyName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSecurityPolicyRename resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    },
                    "securityPolicyName": {
                        "type": "string",
                        "description": "New name to be given to the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSiemSettings:AppSecSiemSettings": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enableBotmanSiem": {
                    "type": "boolean",
                    "description": "Whether Bot Manager events should be included in SIEM events"
                },
                "enableForAllPolicies": {
                    "type": "boolean",
                    "description": "Whether to enable SIEM on all security policies in the security configuration"
                },
                "enableSiem": {
                    "type": "boolean",
                    "description": "Whether to enable SIEM"
                },
                "exceptions": {
                    "$ref": "#/types/akamai:index/AppSecSiemSettingsExceptions:AppSecSiemSettingsExceptions",
                    "description": "Describes all the protections and actions to be excluded from SIEM events"
                },
                "securityPolicyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IDs of security policy for which SIEM integration is to be enabled"
                },
                "siemId": {
                    "type": "integer",
                    "description": "Unique identifier of the SIEM settings being modified"
                }
            },
            "required": [
                "configId",
                "enableForAllPolicies",
                "enableSiem",
                "siemId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enableBotmanSiem": {
                    "type": "boolean",
                    "description": "Whether Bot Manager events should be included in SIEM events"
                },
                "enableForAllPolicies": {
                    "type": "boolean",
                    "description": "Whether to enable SIEM on all security policies in the security configuration"
                },
                "enableSiem": {
                    "type": "boolean",
                    "description": "Whether to enable SIEM"
                },
                "exceptions": {
                    "$ref": "#/types/akamai:index/AppSecSiemSettingsExceptions:AppSecSiemSettingsExceptions",
                    "description": "Describes all the protections and actions to be excluded from SIEM events"
                },
                "securityPolicyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IDs of security policy for which SIEM integration is to be enabled"
                },
                "siemId": {
                    "type": "integer",
                    "description": "Unique identifier of the SIEM settings being modified"
                }
            },
            "requiredInputs": [
                "configId",
                "enableForAllPolicies",
                "enableSiem",
                "siemId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSiemSettings resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enableBotmanSiem": {
                        "type": "boolean",
                        "description": "Whether Bot Manager events should be included in SIEM events"
                    },
                    "enableForAllPolicies": {
                        "type": "boolean",
                        "description": "Whether to enable SIEM on all security policies in the security configuration"
                    },
                    "enableSiem": {
                        "type": "boolean",
                        "description": "Whether to enable SIEM"
                    },
                    "exceptions": {
                        "$ref": "#/types/akamai:index/AppSecSiemSettingsExceptions:AppSecSiemSettingsExceptions",
                        "description": "Describes all the protections and actions to be excluded from SIEM events"
                    },
                    "securityPolicyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IDs of security policy for which SIEM integration is to be enabled"
                    },
                    "siemId": {
                        "type": "integer",
                        "description": "Unique identifier of the SIEM settings being modified"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSlowPost:AppSecSlowPost": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "durationThresholdTimeout": {
                    "type": "integer",
                    "description": "Maximum amount of time (in seconds) within which the first 8KB of the POST body must be received to avoid triggering the specified action"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "slowRateAction": {
                    "type": "string",
                    "description": "Action to be taken when slow POST protection is triggered"
                },
                "slowRateThresholdPeriod": {
                    "type": "integer",
                    "description": "Amount of time (in seconds) that the server should allow a request before marking the request as being too slow"
                },
                "slowRateThresholdRate": {
                    "type": "integer",
                    "description": "Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "slowRateAction"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "durationThresholdTimeout": {
                    "type": "integer",
                    "description": "Maximum amount of time (in seconds) within which the first 8KB of the POST body must be received to avoid triggering the specified action"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "slowRateAction": {
                    "type": "string",
                    "description": "Action to be taken when slow POST protection is triggered"
                },
                "slowRateThresholdPeriod": {
                    "type": "integer",
                    "description": "Amount of time (in seconds) that the server should allow a request before marking the request as being too slow"
                },
                "slowRateThresholdRate": {
                    "type": "integer",
                    "description": "Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId",
                "slowRateAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSlowPost resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "durationThresholdTimeout": {
                        "type": "integer",
                        "description": "Maximum amount of time (in seconds) within which the first 8KB of the POST body must be received to avoid triggering the specified action"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    },
                    "slowRateAction": {
                        "type": "string",
                        "description": "Action to be taken when slow POST protection is triggered"
                    },
                    "slowRateThresholdPeriod": {
                        "type": "integer",
                        "description": "Amount of time (in seconds) that the server should allow a request before marking the request as being too slow"
                    },
                    "slowRateThresholdRate": {
                        "type": "integer",
                        "description": "Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSlowPostProtection:AppSecSlowPostProtection": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable slow POST protection"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text representation"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable slow POST protection"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSlowPostProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable slow POST protection"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text representation"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecThreatIntel:AppSecThreatIntel": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "threatIntel": {
                    "type": "string",
                    "description": "Whether threat intelligence protection should be on or off"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "threatIntel"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                },
                "threatIntel": {
                    "type": "string",
                    "description": "Whether threat intelligence protection should be on or off"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId",
                "threatIntel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecThreatIntel resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    },
                    "threatIntel": {
                        "type": "string",
                        "description": "Whether threat intelligence protection should be on or off"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecVersionNodes:AppSecVersionNodes": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text representation"
                },
                "versionNotes": {
                    "type": "string",
                    "description": "Brief description of the security configuration version"
                }
            },
            "required": [
                "configId",
                "outputText",
                "versionNotes"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "versionNotes": {
                    "type": "string",
                    "description": "Brief description of the security configuration version"
                }
            },
            "requiredInputs": [
                "configId",
                "versionNotes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecVersionNodes resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text representation"
                    },
                    "versionNotes": {
                        "type": "string",
                        "description": "Brief description of the security configuration version"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecWafMode:AppSecWafMode": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "currentRuleset": {
                    "type": "string",
                    "description": "Versioning information for the current Kona Rule Set"
                },
                "evalExpirationDate": {
                    "type": "string",
                    "description": "Date on which the evaluation period ends, if applicable"
                },
                "evalRuleset": {
                    "type": "string",
                    "description": "Versioning information for the Kona Rule Set being evaluated, if applicable"
                },
                "evalStatus": {
                    "type": "string",
                    "description": "Whether an evaluation is currently in progress"
                },
                "mode": {
                    "type": "string",
                    "description": "How Kona Rule Set rules should be upgraded (KRS, AAG, ASE_MANUAL or ASE_AUTO)"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text representation"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "currentRuleset",
                "evalExpirationDate",
                "evalRuleset",
                "evalStatus",
                "mode",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "mode": {
                    "type": "string",
                    "description": "How Kona Rule Set rules should be upgraded (KRS, AAG, ASE_MANUAL or ASE_AUTO)"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "mode",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecWafMode resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "currentRuleset": {
                        "type": "string",
                        "description": "Versioning information for the current Kona Rule Set"
                    },
                    "evalExpirationDate": {
                        "type": "string",
                        "description": "Date on which the evaluation period ends, if applicable"
                    },
                    "evalRuleset": {
                        "type": "string",
                        "description": "Versioning information for the Kona Rule Set being evaluated, if applicable"
                    },
                    "evalStatus": {
                        "type": "string",
                        "description": "Whether an evaluation is currently in progress"
                    },
                    "mode": {
                        "type": "string",
                        "description": "How Kona Rule Set rules should be upgraded (KRS, AAG, ASE_MANUAL or ASE_AUTO)"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text representation"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecWafProtection:AppSecWafProtection": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable WAF protection"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text representation"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable WAF protection"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecWafProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable WAF protection"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text representation"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appsecAapSelectedHostnames:AppsecAapSelectedHostnames": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "evaluatedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of hostnames to be evaluated"
                },
                "protectedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of hostnames to be protected"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "evaluatedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of hostnames to be evaluated"
                },
                "protectedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of hostnames to be protected"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppsecAapSelectedHostnames resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "evaluatedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of hostnames to be evaluated"
                    },
                    "protectedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of hostnames to be protected"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appsecAdvancedSettingsAttackPayloadLogging:AppsecAdvancedSettingsAttackPayloadLogging": {
            "properties": {
                "attackPayloadLogging": {
                    "type": "string",
                    "description": "Whether to enable, disable, or update attack payload logging settings"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "attackPayloadLogging",
                "configId"
            ],
            "inputProperties": {
                "attackPayloadLogging": {
                    "type": "string",
                    "description": "Whether to enable, disable, or update attack payload logging settings"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "attackPayloadLogging",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppsecAdvancedSettingsAttackPayloadLogging resources.\n",
                "properties": {
                    "attackPayloadLogging": {
                        "type": "string",
                        "description": "Whether to enable, disable, or update attack payload logging settings"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appsecAdvancedSettingsPiiLearning:AppsecAdvancedSettingsPiiLearning": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enablePiiLearning": {
                    "type": "boolean",
                    "description": "Whether to enable the PII learning advanced setting"
                }
            },
            "required": [
                "configId",
                "enablePiiLearning"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "enablePiiLearning": {
                    "type": "boolean",
                    "description": "Whether to enable the PII learning advanced setting"
                }
            },
            "requiredInputs": [
                "configId",
                "enablePiiLearning"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppsecAdvancedSettingsPiiLearning resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "enablePiiLearning": {
                        "type": "boolean",
                        "description": "Whether to enable the PII learning advanced setting"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appsecAdvancedSettingsRequestBody:AppsecAdvancedSettingsRequestBody": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "requestBodyInspectionLimit": {
                    "type": "string",
                    "description": "Request body inspection size limit in KB allowed values are 'default', 8, 16, 32"
                },
                "requestBodyInspectionLimitOverride": {
                    "type": "boolean",
                    "description": "Indicates if the Request body inspection size should be overridden at policy"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "requestBodyInspectionLimit"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "requestBodyInspectionLimit": {
                    "type": "string",
                    "description": "Request body inspection size limit in KB allowed values are 'default', 8, 16, 32"
                },
                "requestBodyInspectionLimitOverride": {
                    "type": "boolean",
                    "description": "Indicates if the Request body inspection size should be overridden at policy"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "requestBodyInspectionLimit"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppsecAdvancedSettingsRequestBody resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "requestBodyInspectionLimit": {
                        "type": "string",
                        "description": "Request body inspection size limit in KB allowed values are 'default', 8, 16, 32"
                    },
                    "requestBodyInspectionLimitOverride": {
                        "type": "boolean",
                        "description": "Indicates if the Request body inspection size should be overridden at policy"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appsecEvalPenaltyBoxConditions:AppsecEvalPenaltyBoxConditions": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "penaltyBoxConditions": {
                    "type": "string",
                    "description": "Description of evaluation penalty box conditions"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "penaltyBoxConditions",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "penaltyBoxConditions": {
                    "type": "string",
                    "description": "Description of evaluation penalty box conditions"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "penaltyBoxConditions",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppsecEvalPenaltyBoxConditions resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "penaltyBoxConditions": {
                        "type": "string",
                        "description": "Description of evaluation penalty box conditions"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appsecPenaltyBoxConditions:AppsecPenaltyBoxConditions": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "penaltyBoxConditions": {
                    "type": "string",
                    "description": "Describes the conditions and the operator to be applied for penalty box"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "penaltyBoxConditions",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "penaltyBoxConditions": {
                    "type": "string",
                    "description": "Describes the conditions and the operator to be applied for penalty box"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "penaltyBoxConditions",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppsecPenaltyBoxConditions resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "penaltyBoxConditions": {
                        "type": "string",
                        "description": "Describes the conditions and the operator to be applied for penalty box"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appsecRapidRules:AppsecRapidRules": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "defaultAction": {
                    "type": "string",
                    "description": "Default action that applies to violations of all rapid rules"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Hidden attribute containing information about rapid rules status enabled/disabled"
                },
                "ruleDefinitions": {
                    "type": "string",
                    "description": "JSON-formatted list of rule definition (ID, action, action lock and exception)"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "defaultAction",
                "enabled",
                "ruleDefinitions",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "defaultAction": {
                    "type": "string",
                    "description": "Default action that applies to violations of all rapid rules"
                },
                "ruleDefinitions": {
                    "type": "string",
                    "description": "JSON-formatted list of rule definition (ID, action, action lock and exception)"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppsecRapidRules resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "defaultAction": {
                        "type": "string",
                        "description": "Default action that applies to violations of all rapid rules"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Hidden attribute containing information about rapid rules status enabled/disabled"
                    },
                    "ruleDefinitions": {
                        "type": "string",
                        "description": "JSON-formatted list of rule definition (ID, action, action lock and exception)"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appsecSecurityPolicyDefaultProtections:AppsecSecurityPolicyDefaultProtections": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the new security policy"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": "Name of the new security policy"
                },
                "securityPolicyPrefix": {
                    "type": "string",
                    "description": "Four-character alphanumeric string prefix used in creating the security policy ID"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "securityPolicyName",
                "securityPolicyPrefix"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": "Name of the new security policy"
                },
                "securityPolicyPrefix": {
                    "type": "string",
                    "description": "Four-character alphanumeric string prefix used in creating the security policy ID"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyName",
                "securityPolicyPrefix"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppsecSecurityPolicyDefaultProtections resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the new security policy"
                    },
                    "securityPolicyName": {
                        "type": "string",
                        "description": "Name of the new security policy"
                    },
                    "securityPolicyPrefix": {
                        "type": "string",
                        "description": "Four-character alphanumeric string prefix used in creating the security policy ID"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanAkamaiBotCategoryAction:BotmanAkamaiBotCategoryAction": {
            "properties": {
                "akamaiBotCategoryAction": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "akamaiBotCategoryAction",
                "categoryId",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "akamaiBotCategoryAction": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "akamaiBotCategoryAction",
                "categoryId",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanAkamaiBotCategoryAction resources.\n",
                "properties": {
                    "akamaiBotCategoryAction": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanBotAnalyticsCookie:BotmanBotAnalyticsCookie": {
            "properties": {
                "botAnalyticsCookie": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "required": [
                "botAnalyticsCookie",
                "configId"
            ],
            "inputProperties": {
                "botAnalyticsCookie": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "botAnalyticsCookie",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanBotAnalyticsCookie resources.\n",
                "properties": {
                    "botAnalyticsCookie": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanBotCategoryException:BotmanBotCategoryException": {
            "properties": {
                "botCategoryException": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "botCategoryException",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "botCategoryException": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "botCategoryException",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanBotCategoryException resources.\n",
                "properties": {
                    "botCategoryException": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanBotDetectionAction:BotmanBotDetectionAction": {
            "properties": {
                "botDetectionAction": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "detectionId": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "botDetectionAction",
                "configId",
                "detectionId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "botDetectionAction": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "detectionId": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "botDetectionAction",
                "configId",
                "detectionId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanBotDetectionAction resources.\n",
                "properties": {
                    "botDetectionAction": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "detectionId": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanBotManagementSettings:BotmanBotManagementSettings": {
            "properties": {
                "botManagementSettings": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "botManagementSettings",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "botManagementSettings": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "botManagementSettings",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanBotManagementSettings resources.\n",
                "properties": {
                    "botManagementSettings": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanChallengeAction:BotmanChallengeAction": {
            "properties": {
                "actionId": {
                    "type": "string"
                },
                "challengeAction": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "required": [
                "actionId",
                "challengeAction",
                "configId"
            ],
            "inputProperties": {
                "challengeAction": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "challengeAction",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanChallengeAction resources.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "challengeAction": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanChallengeInjectionRules:BotmanChallengeInjectionRules": {
            "properties": {
                "challengeInjectionRules": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "required": [
                "challengeInjectionRules",
                "configId"
            ],
            "inputProperties": {
                "challengeInjectionRules": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "challengeInjectionRules",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanChallengeInjectionRules resources.\n",
                "properties": {
                    "challengeInjectionRules": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanClientSideSecurity:BotmanClientSideSecurity": {
            "properties": {
                "clientSideSecurity": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "required": [
                "clientSideSecurity",
                "configId"
            ],
            "inputProperties": {
                "clientSideSecurity": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "clientSideSecurity",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanClientSideSecurity resources.\n",
                "properties": {
                    "clientSideSecurity": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanConditionalAction:BotmanConditionalAction": {
            "properties": {
                "actionId": {
                    "type": "string"
                },
                "conditionalAction": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "required": [
                "actionId",
                "conditionalAction",
                "configId"
            ],
            "inputProperties": {
                "conditionalAction": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "conditionalAction",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanConditionalAction resources.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "conditionalAction": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanContentProtectionJavascriptInjectionRule:BotmanContentProtectionJavascriptInjectionRule": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "contentProtectionJavascriptInjectionRule": {
                    "type": "string",
                    "description": "The content protection JavaScript injection rule"
                },
                "contentProtectionJavascriptInjectionRuleId": {
                    "type": "string",
                    "description": "Unique identifier of a content protection JavaScript injection rule"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "contentProtectionJavascriptInjectionRule",
                "contentProtectionJavascriptInjectionRuleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "contentProtectionJavascriptInjectionRule": {
                    "type": "string",
                    "description": "The content protection JavaScript injection rule"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "contentProtectionJavascriptInjectionRule",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanContentProtectionJavascriptInjectionRule resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "contentProtectionJavascriptInjectionRule": {
                        "type": "string",
                        "description": "The content protection JavaScript injection rule"
                    },
                    "contentProtectionJavascriptInjectionRuleId": {
                        "type": "string",
                        "description": "Unique identifier of a content protection JavaScript injection rule"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanContentProtectionRule:BotmanContentProtectionRule": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "contentProtectionRule": {
                    "type": "string",
                    "description": "The content protection rule"
                },
                "contentProtectionRuleId": {
                    "type": "string",
                    "description": "Unique identifier of a content protection rule"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "contentProtectionRule",
                "contentProtectionRuleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "contentProtectionRule": {
                    "type": "string",
                    "description": "The content protection rule"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "contentProtectionRule",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanContentProtectionRule resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "contentProtectionRule": {
                        "type": "string",
                        "description": "The content protection rule"
                    },
                    "contentProtectionRuleId": {
                        "type": "string",
                        "description": "Unique identifier of a content protection rule"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanContentProtectionRuleSequence:BotmanContentProtectionRuleSequence": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "contentProtectionRuleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Unique identifiers of content protection rules, listed in the order of their evaluation"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "required": [
                "configId",
                "contentProtectionRuleIds",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                },
                "contentProtectionRuleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Unique identifiers of content protection rules, listed in the order of their evaluation"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Unique identifier of the security policy"
                }
            },
            "requiredInputs": [
                "configId",
                "contentProtectionRuleIds",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanContentProtectionRuleSequence resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    },
                    "contentProtectionRuleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Unique identifiers of content protection rules, listed in the order of their evaluation"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Unique identifier of the security policy"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanCustomBotCategory:BotmanCustomBotCategory": {
            "properties": {
                "categoryId": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "customBotCategory": {
                    "type": "string"
                }
            },
            "required": [
                "categoryId",
                "configId",
                "customBotCategory"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "customBotCategory": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "customBotCategory"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanCustomBotCategory resources.\n",
                "properties": {
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "customBotCategory": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanCustomBotCategoryAction:BotmanCustomBotCategoryAction": {
            "properties": {
                "categoryId": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "customBotCategoryAction": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "categoryId",
                "configId",
                "customBotCategoryAction",
                "securityPolicyId"
            ],
            "inputProperties": {
                "categoryId": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "customBotCategoryAction": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "categoryId",
                "configId",
                "customBotCategoryAction",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanCustomBotCategoryAction resources.\n",
                "properties": {
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "customBotCategoryAction": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanCustomBotCategoryItemSequence:BotmanCustomBotCategoryItemSequence": {
            "properties": {
                "botIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Unique identifiers of bots in this category, sorted in preferred order"
                },
                "categoryId": {
                    "type": "string",
                    "description": "Unique identifier of the bot category"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                }
            },
            "required": [
                "botIds",
                "categoryId",
                "configId"
            ],
            "inputProperties": {
                "botIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Unique identifiers of bots in this category, sorted in preferred order"
                },
                "categoryId": {
                    "type": "string",
                    "description": "Unique identifier of the bot category"
                },
                "configId": {
                    "type": "integer",
                    "description": "Unique identifier of the security configuration"
                }
            },
            "requiredInputs": [
                "botIds",
                "categoryId",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanCustomBotCategoryItemSequence resources.\n",
                "properties": {
                    "botIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Unique identifiers of bots in this category, sorted in preferred order"
                    },
                    "categoryId": {
                        "type": "string",
                        "description": "Unique identifier of the bot category"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "Unique identifier of the security configuration"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanCustomBotCategorySequence:BotmanCustomBotCategorySequence": {
            "properties": {
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configId": {
                    "type": "integer"
                }
            },
            "required": [
                "categoryIds",
                "configId"
            ],
            "inputProperties": {
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configId": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "categoryIds",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanCustomBotCategorySequence resources.\n",
                "properties": {
                    "categoryIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanCustomClient:BotmanCustomClient": {
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "customClient": {
                    "type": "string"
                },
                "customClientId": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "customClient",
                "customClientId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "customClient": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "customClient"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanCustomClient resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customClient": {
                        "type": "string"
                    },
                    "customClientId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanCustomClientSequence:BotmanCustomClientSequence": {
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "customClientIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "configId",
                "customClientIds"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "customClientIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "configId",
                "customClientIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanCustomClientSequence resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customClientIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanCustomCode:BotmanCustomCode": {
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "customCode": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "customCode"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "customCode": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "customCode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanCustomCode resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customCode": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanCustomDefinedBot:BotmanCustomDefinedBot": {
            "properties": {
                "botId": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "customDefinedBot": {
                    "type": "string"
                }
            },
            "required": [
                "botId",
                "configId",
                "customDefinedBot"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "customDefinedBot": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "customDefinedBot"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanCustomDefinedBot resources.\n",
                "properties": {
                    "botId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "customDefinedBot": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanCustomDenyAction:BotmanCustomDenyAction": {
            "properties": {
                "actionId": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "customDenyAction": {
                    "type": "string"
                }
            },
            "required": [
                "actionId",
                "configId",
                "customDenyAction"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "customDenyAction": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "customDenyAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanCustomDenyAction resources.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "customDenyAction": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanJavascriptInjection:BotmanJavascriptInjection": {
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "javascriptInjection": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "javascriptInjection",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "javascriptInjection": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "javascriptInjection",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanJavascriptInjection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "javascriptInjection": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanRecategorizedAkamaiDefinedBot:BotmanRecategorizedAkamaiDefinedBot": {
            "properties": {
                "botId": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "required": [
                "botId",
                "categoryId",
                "configId"
            ],
            "inputProperties": {
                "botId": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "botId",
                "categoryId",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanRecategorizedAkamaiDefinedBot resources.\n",
                "properties": {
                    "botId": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanServeAlternateAction:BotmanServeAlternateAction": {
            "properties": {
                "actionId": {
                    "type": "string"
                },
                "configId": {
                    "type": "integer"
                },
                "serveAlternateAction": {
                    "type": "string"
                }
            },
            "required": [
                "actionId",
                "configId",
                "serveAlternateAction"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "serveAlternateAction": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "serveAlternateAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanServeAlternateAction resources.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "serveAlternateAction": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanTransactionalEndpoint:BotmanTransactionalEndpoint": {
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "operationId": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                },
                "transactionalEndpoint": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "operationId",
                "securityPolicyId",
                "transactionalEndpoint"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "operationId": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                },
                "transactionalEndpoint": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "operationId",
                "securityPolicyId",
                "transactionalEndpoint"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanTransactionalEndpoint resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "operationId": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "transactionalEndpoint": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/botmanTransactionalEndpointProtection:BotmanTransactionalEndpointProtection": {
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "transactionalEndpointProtection": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "transactionalEndpointProtection"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "transactionalEndpointProtection": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "transactionalEndpointProtection"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BotmanTransactionalEndpointProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "transactionalEndpointProtection": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/clientlistActivation:ClientlistActivation": {
            "properties": {
                "comments": {
                    "type": "string",
                    "description": "A brief description for the activation."
                },
                "listId": {
                    "type": "string",
                    "description": "The client list unique identifier."
                },
                "network": {
                    "type": "string",
                    "description": "The network environment where you activate your client list: either STAGING or PRODUCTION."
                },
                "notificationRecipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users to notify via email."
                },
                "siebelTicketId": {
                    "type": "string",
                    "description": "Identifies the Siebel ticket, if the activation is linked to one."
                },
                "status": {
                    "type": "string",
                    "description": "The current activation status, either ACTIVE, INACTIVE, MODIFIED, PENDING_ACTIVATION, PENDING_DEACTIVATION, or FAILED."
                },
                "version": {
                    "type": "integer",
                    "description": "The client list version."
                }
            },
            "required": [
                "listId",
                "network",
                "status",
                "version"
            ],
            "inputProperties": {
                "comments": {
                    "type": "string",
                    "description": "A brief description for the activation."
                },
                "listId": {
                    "type": "string",
                    "description": "The client list unique identifier."
                },
                "network": {
                    "type": "string",
                    "description": "The network environment where you activate your client list: either STAGING or PRODUCTION."
                },
                "notificationRecipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users to notify via email."
                },
                "siebelTicketId": {
                    "type": "string",
                    "description": "Identifies the Siebel ticket, if the activation is linked to one."
                },
                "version": {
                    "type": "integer",
                    "description": "The client list version."
                }
            },
            "requiredInputs": [
                "listId",
                "network",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClientlistActivation resources.\n",
                "properties": {
                    "comments": {
                        "type": "string",
                        "description": "A brief description for the activation."
                    },
                    "listId": {
                        "type": "string",
                        "description": "The client list unique identifier."
                    },
                    "network": {
                        "type": "string",
                        "description": "The network environment where you activate your client list: either STAGING or PRODUCTION."
                    },
                    "notificationRecipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Users to notify via email."
                    },
                    "siebelTicketId": {
                        "type": "string",
                        "description": "Identifies the Siebel ticket, if the activation is linked to one."
                    },
                    "status": {
                        "type": "string",
                        "description": "The current activation status, either ACTIVE, INACTIVE, MODIFIED, PENDING_ACTIVATION, PENDING_DEACTIVATION, or FAILED."
                    },
                    "version": {
                        "type": "integer",
                        "description": "The client list version."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/clientlistList:ClientlistList": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "description": "Contract ID for which client list is assigned."
                },
                "groupId": {
                    "type": "integer",
                    "description": "Group ID for which client list is assigned."
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/ClientlistListItem:ClientlistListItem"
                    },
                    "description": "Set of items containing item information."
                },
                "itemsCount": {
                    "type": "integer",
                    "description": "The number of items that a client list contains."
                },
                "listId": {
                    "type": "string",
                    "description": "The ID of the client list."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the client list."
                },
                "notes": {
                    "type": "string",
                    "description": "The client list notes."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The client list tags."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the client list. Valid types: [IP GEO ASN TLS_FINGERPRINT FILE_HASH]"
                },
                "version": {
                    "type": "integer",
                    "description": "The current version of the client list."
                }
            },
            "required": [
                "contractId",
                "groupId",
                "itemsCount",
                "listId",
                "name",
                "type",
                "version"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "Contract ID for which client list is assigned.",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "integer",
                    "description": "Group ID for which client list is assigned.",
                    "willReplaceOnChanges": true
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/ClientlistListItem:ClientlistListItem"
                    },
                    "description": "Set of items containing item information."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the client list."
                },
                "notes": {
                    "type": "string",
                    "description": "The client list notes."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The client list tags."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the client list. Valid types: [IP GEO ASN TLS_FINGERPRINT FILE_HASH]",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "contractId",
                "groupId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClientlistList resources.\n",
                "properties": {
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID for which client list is assigned.",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Group ID for which client list is assigned.",
                        "willReplaceOnChanges": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/ClientlistListItem:ClientlistListItem"
                        },
                        "description": "Set of items containing item information."
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "The number of items that a client list contains."
                    },
                    "listId": {
                        "type": "string",
                        "description": "The ID of the client list."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the client list."
                    },
                    "notes": {
                        "type": "string",
                        "description": "The client list notes."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The client list tags."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the client list. Valid types: [IP GEO ASN TLS_FINGERPRINT FILE_HASH]",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "integer",
                        "description": "The current version of the client list."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cloudAccessKey:CloudAccessKey": {
            "properties": {
                "accessKeyName": {
                    "type": "string",
                    "description": "Name of the access key."
                },
                "accessKeyUid": {
                    "type": "integer",
                    "description": "The unique identifier Akamai assigns to an access key."
                },
                "authenticationMethod": {
                    "type": "string",
                    "description": "The type of cloud provider signing process used to authenticate API requests. Two options are available: \"AWS4_HMAC_SHA256\" or \"GOOG4_HMAC_SHA256\"."
                },
                "contractId": {
                    "type": "string",
                    "description": "The unique identifier for the contract assigned to the access key"
                },
                "credentialsA": {
                    "$ref": "#/types/akamai:index/CloudAccessKeyCredentialsA:CloudAccessKeyCredentialsA",
                    "description": "The combination of a \u003cspan pulumi-lang-nodejs=\"`cloudAccessKeyId`\" pulumi-lang-dotnet=\"`CloudAccessKeyId`\" pulumi-lang-go=\"`cloudAccessKeyId`\" pulumi-lang-python=\"`cloud_access_key_id`\" pulumi-lang-yaml=\"`cloudAccessKeyId`\" pulumi-lang-java=\"`cloudAccessKeyId`\"\u003e`cloud_access_key_id`\u003c/span\u003e and a \u003cspan pulumi-lang-nodejs=\"`cloudSecretAccessKey`\" pulumi-lang-dotnet=\"`CloudSecretAccessKey`\" pulumi-lang-go=\"`cloudSecretAccessKey`\" pulumi-lang-python=\"`cloud_secret_access_key`\" pulumi-lang-yaml=\"`cloudSecretAccessKey`\" pulumi-lang-java=\"`cloudSecretAccessKey`\"\u003e`cloud_secret_access_key`\u003c/span\u003e used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB)."
                },
                "credentialsB": {
                    "$ref": "#/types/akamai:index/CloudAccessKeyCredentialsB:CloudAccessKeyCredentialsB",
                    "description": "The combination of a \u003cspan pulumi-lang-nodejs=\"`cloudAccessKeyId`\" pulumi-lang-dotnet=\"`CloudAccessKeyId`\" pulumi-lang-go=\"`cloudAccessKeyId`\" pulumi-lang-python=\"`cloud_access_key_id`\" pulumi-lang-yaml=\"`cloudAccessKeyId`\" pulumi-lang-java=\"`cloudAccessKeyId`\"\u003e`cloud_access_key_id`\u003c/span\u003e and a \u003cspan pulumi-lang-nodejs=\"`cloudSecretAccessKey`\" pulumi-lang-dotnet=\"`CloudSecretAccessKey`\" pulumi-lang-go=\"`cloudSecretAccessKey`\" pulumi-lang-python=\"`cloud_secret_access_key`\" pulumi-lang-yaml=\"`cloudSecretAccessKey`\" pulumi-lang-java=\"`cloudSecretAccessKey`\"\u003e`cloud_secret_access_key`\u003c/span\u003e used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB)."
                },
                "groupId": {
                    "type": "integer",
                    "description": "The unique identifier assigned to the access control group assigned to the access key"
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/CloudAccessKeyNetworkConfiguration:CloudAccessKeyNetworkConfiguration",
                    "description": "The secure networks that you assigned the access key to during creation"
                },
                "primaryGuid": {
                    "type": "string",
                    "description": "Value of \u003cspan pulumi-lang-nodejs=\"`versionGuid`\" pulumi-lang-dotnet=\"`VersionGuid`\" pulumi-lang-go=\"`versionGuid`\" pulumi-lang-python=\"`version_guid`\" pulumi-lang-yaml=\"`versionGuid`\" pulumi-lang-java=\"`versionGuid`\"\u003e`version_guid`\u003c/span\u003e field for credentials marked as primary"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudAccessKeyTimeouts:CloudAccessKeyTimeouts"
                }
            },
            "required": [
                "accessKeyName",
                "accessKeyUid",
                "authenticationMethod",
                "contractId",
                "groupId",
                "networkConfiguration",
                "primaryGuid"
            ],
            "inputProperties": {
                "accessKeyName": {
                    "type": "string",
                    "description": "Name of the access key."
                },
                "authenticationMethod": {
                    "type": "string",
                    "description": "The type of cloud provider signing process used to authenticate API requests. Two options are available: \"AWS4_HMAC_SHA256\" or \"GOOG4_HMAC_SHA256\"."
                },
                "contractId": {
                    "type": "string",
                    "description": "The unique identifier for the contract assigned to the access key"
                },
                "credentialsA": {
                    "$ref": "#/types/akamai:index/CloudAccessKeyCredentialsA:CloudAccessKeyCredentialsA",
                    "description": "The combination of a \u003cspan pulumi-lang-nodejs=\"`cloudAccessKeyId`\" pulumi-lang-dotnet=\"`CloudAccessKeyId`\" pulumi-lang-go=\"`cloudAccessKeyId`\" pulumi-lang-python=\"`cloud_access_key_id`\" pulumi-lang-yaml=\"`cloudAccessKeyId`\" pulumi-lang-java=\"`cloudAccessKeyId`\"\u003e`cloud_access_key_id`\u003c/span\u003e and a \u003cspan pulumi-lang-nodejs=\"`cloudSecretAccessKey`\" pulumi-lang-dotnet=\"`CloudSecretAccessKey`\" pulumi-lang-go=\"`cloudSecretAccessKey`\" pulumi-lang-python=\"`cloud_secret_access_key`\" pulumi-lang-yaml=\"`cloudSecretAccessKey`\" pulumi-lang-java=\"`cloudSecretAccessKey`\"\u003e`cloud_secret_access_key`\u003c/span\u003e used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB)."
                },
                "credentialsB": {
                    "$ref": "#/types/akamai:index/CloudAccessKeyCredentialsB:CloudAccessKeyCredentialsB",
                    "description": "The combination of a \u003cspan pulumi-lang-nodejs=\"`cloudAccessKeyId`\" pulumi-lang-dotnet=\"`CloudAccessKeyId`\" pulumi-lang-go=\"`cloudAccessKeyId`\" pulumi-lang-python=\"`cloud_access_key_id`\" pulumi-lang-yaml=\"`cloudAccessKeyId`\" pulumi-lang-java=\"`cloudAccessKeyId`\"\u003e`cloud_access_key_id`\u003c/span\u003e and a \u003cspan pulumi-lang-nodejs=\"`cloudSecretAccessKey`\" pulumi-lang-dotnet=\"`CloudSecretAccessKey`\" pulumi-lang-go=\"`cloudSecretAccessKey`\" pulumi-lang-python=\"`cloud_secret_access_key`\" pulumi-lang-yaml=\"`cloudSecretAccessKey`\" pulumi-lang-java=\"`cloudSecretAccessKey`\"\u003e`cloud_secret_access_key`\u003c/span\u003e used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB)."
                },
                "groupId": {
                    "type": "integer",
                    "description": "The unique identifier assigned to the access control group assigned to the access key"
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/CloudAccessKeyNetworkConfiguration:CloudAccessKeyNetworkConfiguration",
                    "description": "The secure networks that you assigned the access key to during creation"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudAccessKeyTimeouts:CloudAccessKeyTimeouts"
                }
            },
            "requiredInputs": [
                "accessKeyName",
                "authenticationMethod",
                "contractId",
                "groupId",
                "networkConfiguration"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudAccessKey resources.\n",
                "properties": {
                    "accessKeyName": {
                        "type": "string",
                        "description": "Name of the access key."
                    },
                    "accessKeyUid": {
                        "type": "integer",
                        "description": "The unique identifier Akamai assigns to an access key."
                    },
                    "authenticationMethod": {
                        "type": "string",
                        "description": "The type of cloud provider signing process used to authenticate API requests. Two options are available: \"AWS4_HMAC_SHA256\" or \"GOOG4_HMAC_SHA256\"."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "The unique identifier for the contract assigned to the access key"
                    },
                    "credentialsA": {
                        "$ref": "#/types/akamai:index/CloudAccessKeyCredentialsA:CloudAccessKeyCredentialsA",
                        "description": "The combination of a \u003cspan pulumi-lang-nodejs=\"`cloudAccessKeyId`\" pulumi-lang-dotnet=\"`CloudAccessKeyId`\" pulumi-lang-go=\"`cloudAccessKeyId`\" pulumi-lang-python=\"`cloud_access_key_id`\" pulumi-lang-yaml=\"`cloudAccessKeyId`\" pulumi-lang-java=\"`cloudAccessKeyId`\"\u003e`cloud_access_key_id`\u003c/span\u003e and a \u003cspan pulumi-lang-nodejs=\"`cloudSecretAccessKey`\" pulumi-lang-dotnet=\"`CloudSecretAccessKey`\" pulumi-lang-go=\"`cloudSecretAccessKey`\" pulumi-lang-python=\"`cloud_secret_access_key`\" pulumi-lang-yaml=\"`cloudSecretAccessKey`\" pulumi-lang-java=\"`cloudSecretAccessKey`\"\u003e`cloud_secret_access_key`\u003c/span\u003e used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB)."
                    },
                    "credentialsB": {
                        "$ref": "#/types/akamai:index/CloudAccessKeyCredentialsB:CloudAccessKeyCredentialsB",
                        "description": "The combination of a \u003cspan pulumi-lang-nodejs=\"`cloudAccessKeyId`\" pulumi-lang-dotnet=\"`CloudAccessKeyId`\" pulumi-lang-go=\"`cloudAccessKeyId`\" pulumi-lang-python=\"`cloud_access_key_id`\" pulumi-lang-yaml=\"`cloudAccessKeyId`\" pulumi-lang-java=\"`cloudAccessKeyId`\"\u003e`cloud_access_key_id`\u003c/span\u003e and a \u003cspan pulumi-lang-nodejs=\"`cloudSecretAccessKey`\" pulumi-lang-dotnet=\"`CloudSecretAccessKey`\" pulumi-lang-go=\"`cloudSecretAccessKey`\" pulumi-lang-python=\"`cloud_secret_access_key`\" pulumi-lang-yaml=\"`cloudSecretAccessKey`\" pulumi-lang-java=\"`cloudSecretAccessKey`\"\u003e`cloud_secret_access_key`\u003c/span\u003e used to sign API requests. This pair can be identified as access key version. Access key can contain only two access key versions at specific time (defined as credentialsA and credentialsB)."
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "The unique identifier assigned to the access control group assigned to the access key"
                    },
                    "networkConfiguration": {
                        "$ref": "#/types/akamai:index/CloudAccessKeyNetworkConfiguration:CloudAccessKeyNetworkConfiguration",
                        "description": "The secure networks that you assigned the access key to during creation"
                    },
                    "primaryGuid": {
                        "type": "string",
                        "description": "Value of \u003cspan pulumi-lang-nodejs=\"`versionGuid`\" pulumi-lang-dotnet=\"`VersionGuid`\" pulumi-lang-go=\"`versionGuid`\" pulumi-lang-python=\"`version_guid`\" pulumi-lang-yaml=\"`versionGuid`\" pulumi-lang-java=\"`versionGuid`\"\u003e`version_guid`\u003c/span\u003e field for credentials marked as primary"
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CloudAccessKeyTimeouts:CloudAccessKeyTimeouts"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cloudletsApplicationLoadBalancer:CloudletsApplicationLoadBalancer": {
            "properties": {
                "balancingType": {
                    "type": "string",
                    "description": "The type of load balancing being performed. Options include WEIGHTED and PERFORMANCE"
                },
                "dataCenters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerDataCenter:CloudletsApplicationLoadBalancerDataCenter"
                    },
                    "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer implementation. Only Conditional Origins with an originType of CUSTOMER or NETSTORAGE can be used as data centers in an application load balancer configuration."
                },
                "description": {
                    "type": "string",
                    "description": "The load balancer configuration version description"
                },
                "livenessSettings": {
                    "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerLivenessSettings:CloudletsApplicationLoadBalancerLivenessSettings"
                },
                "originDescription": {
                    "type": "string",
                    "description": "The load balancer configuration description"
                },
                "originId": {
                    "type": "string",
                    "description": "The conditional origin's unique identifier"
                },
                "version": {
                    "type": "integer",
                    "description": "The load balancer configuration version"
                },
                "warnings": {
                    "type": "string",
                    "description": "Describes warnings during activation of load balancer configuration"
                }
            },
            "required": [
                "dataCenters",
                "originId",
                "version",
                "warnings"
            ],
            "inputProperties": {
                "balancingType": {
                    "type": "string",
                    "description": "The type of load balancing being performed. Options include WEIGHTED and PERFORMANCE"
                },
                "dataCenters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerDataCenter:CloudletsApplicationLoadBalancerDataCenter"
                    },
                    "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer implementation. Only Conditional Origins with an originType of CUSTOMER or NETSTORAGE can be used as data centers in an application load balancer configuration."
                },
                "description": {
                    "type": "string",
                    "description": "The load balancer configuration version description"
                },
                "livenessSettings": {
                    "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerLivenessSettings:CloudletsApplicationLoadBalancerLivenessSettings"
                },
                "originDescription": {
                    "type": "string",
                    "description": "The load balancer configuration description"
                },
                "originId": {
                    "type": "string",
                    "description": "The conditional origin's unique identifier",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "dataCenters",
                "originId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudletsApplicationLoadBalancer resources.\n",
                "properties": {
                    "balancingType": {
                        "type": "string",
                        "description": "The type of load balancing being performed. Options include WEIGHTED and PERFORMANCE"
                    },
                    "dataCenters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerDataCenter:CloudletsApplicationLoadBalancerDataCenter"
                        },
                        "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer implementation. Only Conditional Origins with an originType of CUSTOMER or NETSTORAGE can be used as data centers in an application load balancer configuration."
                    },
                    "description": {
                        "type": "string",
                        "description": "The load balancer configuration version description"
                    },
                    "livenessSettings": {
                        "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerLivenessSettings:CloudletsApplicationLoadBalancerLivenessSettings"
                    },
                    "originDescription": {
                        "type": "string",
                        "description": "The load balancer configuration description"
                    },
                    "originId": {
                        "type": "string",
                        "description": "The conditional origin's unique identifier",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "integer",
                        "description": "The load balancer configuration version"
                    },
                    "warnings": {
                        "type": "string",
                        "description": "Describes warnings during activation of load balancer configuration"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cloudletsApplicationLoadBalancerActivation:CloudletsApplicationLoadBalancerActivation": {
            "properties": {
                "network": {
                    "type": "string",
                    "description": "The network you want to activate the application load balancer version on (options are Staging and Production)"
                },
                "originId": {
                    "type": "string",
                    "description": "The conditional origin’s unique identifier"
                },
                "status": {
                    "type": "string",
                    "description": "Activation status for this application load balancer"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerActivationTimeouts:CloudletsApplicationLoadBalancerActivationTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "version": {
                    "type": "integer",
                    "description": "Cloudlets application load balancer version you want to activate"
                }
            },
            "required": [
                "network",
                "originId",
                "status",
                "version"
            ],
            "inputProperties": {
                "network": {
                    "type": "string",
                    "description": "The network you want to activate the application load balancer version on (options are Staging and Production)"
                },
                "originId": {
                    "type": "string",
                    "description": "The conditional origin’s unique identifier",
                    "willReplaceOnChanges": true
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerActivationTimeouts:CloudletsApplicationLoadBalancerActivationTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "version": {
                    "type": "integer",
                    "description": "Cloudlets application load balancer version you want to activate"
                }
            },
            "requiredInputs": [
                "network",
                "originId",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudletsApplicationLoadBalancerActivation resources.\n",
                "properties": {
                    "network": {
                        "type": "string",
                        "description": "The network you want to activate the application load balancer version on (options are Staging and Production)"
                    },
                    "originId": {
                        "type": "string",
                        "description": "The conditional origin’s unique identifier",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Activation status for this application load balancer"
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CloudletsApplicationLoadBalancerActivationTimeouts:CloudletsApplicationLoadBalancerActivationTimeouts",
                        "description": "Enables to set timeout for processing"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Cloudlets application load balancer version you want to activate"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cloudletsPolicy:CloudletsPolicy": {
            "properties": {
                "cloudletCode": {
                    "type": "string",
                    "description": "Code for the type of Cloudlet (ALB, AP, AS, CD, ER, FR, IG, or VP)."
                },
                "cloudletId": {
                    "type": "integer",
                    "description": "An integer that corresponds to a non-shared Cloudlets policy type (0 to 9). Not used for shared policies."
                },
                "description": {
                    "type": "string",
                    "description": "The description of this specific policy."
                },
                "groupId": {
                    "type": "string",
                    "description": "Defines the group association for the policy. You must have edit privileges for the group."
                },
                "isShared": {
                    "type": "boolean",
                    "description": "The type of policy that you want to create."
                },
                "matchRuleFormat": {
                    "type": "string",
                    "description": "The version of the Cloudlet specific matchRules."
                },
                "matchRules": {
                    "type": "string",
                    "description": "A JSON structure that defines the rules for this policy."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the policy. The name must be unique."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudletsPolicyTimeouts:CloudletsPolicyTimeouts",
                    "description": "Enables to set timeout for processing."
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of the policy."
                },
                "warnings": {
                    "type": "string",
                    "description": "A JSON encoded list of warnings."
                }
            },
            "required": [
                "cloudletCode",
                "cloudletId",
                "description",
                "groupId",
                "name",
                "version",
                "warnings"
            ],
            "inputProperties": {
                "cloudletCode": {
                    "type": "string",
                    "description": "Code for the type of Cloudlet (ALB, AP, AS, CD, ER, FR, IG, or VP)."
                },
                "description": {
                    "type": "string",
                    "description": "The description of this specific policy."
                },
                "groupId": {
                    "type": "string",
                    "description": "Defines the group association for the policy. You must have edit privileges for the group."
                },
                "isShared": {
                    "type": "boolean",
                    "description": "The type of policy that you want to create."
                },
                "matchRuleFormat": {
                    "type": "string",
                    "description": "The version of the Cloudlet specific matchRules."
                },
                "matchRules": {
                    "type": "string",
                    "description": "A JSON structure that defines the rules for this policy."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the policy. The name must be unique."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudletsPolicyTimeouts:CloudletsPolicyTimeouts",
                    "description": "Enables to set timeout for processing."
                }
            },
            "requiredInputs": [
                "cloudletCode",
                "groupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudletsPolicy resources.\n",
                "properties": {
                    "cloudletCode": {
                        "type": "string",
                        "description": "Code for the type of Cloudlet (ALB, AP, AS, CD, ER, FR, IG, or VP)."
                    },
                    "cloudletId": {
                        "type": "integer",
                        "description": "An integer that corresponds to a non-shared Cloudlets policy type (0 to 9). Not used for shared policies."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this specific policy."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Defines the group association for the policy. You must have edit privileges for the group."
                    },
                    "isShared": {
                        "type": "boolean",
                        "description": "The type of policy that you want to create."
                    },
                    "matchRuleFormat": {
                        "type": "string",
                        "description": "The version of the Cloudlet specific matchRules."
                    },
                    "matchRules": {
                        "type": "string",
                        "description": "A JSON structure that defines the rules for this policy."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the policy. The name must be unique."
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CloudletsPolicyTimeouts:CloudletsPolicyTimeouts",
                        "description": "Enables to set timeout for processing."
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the policy."
                    },
                    "warnings": {
                        "type": "string",
                        "description": "A JSON encoded list of warnings."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cloudletsPolicyActivation:CloudletsPolicyActivation": {
            "properties": {
                "associatedProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of property IDs to link to this Cloudlets policy. It is required for non-shared policies"
                },
                "isShared": {
                    "type": "boolean",
                    "description": "Indicates if policy that is being activated is a shared policy"
                },
                "network": {
                    "type": "string",
                    "description": "The network you want to activate the policy version on (options are Staging and Production)"
                },
                "policyId": {
                    "type": "integer",
                    "description": "ID of the Cloudlets policy you want to activate"
                },
                "status": {
                    "type": "string",
                    "description": "Activation status for this Cloudlets policy"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudletsPolicyActivationTimeouts:CloudletsPolicyActivationTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "version": {
                    "type": "integer",
                    "description": "Cloudlets policy version you want to activate"
                }
            },
            "required": [
                "isShared",
                "network",
                "policyId",
                "status",
                "version"
            ],
            "inputProperties": {
                "associatedProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of property IDs to link to this Cloudlets policy. It is required for non-shared policies"
                },
                "network": {
                    "type": "string",
                    "description": "The network you want to activate the policy version on (options are Staging and Production)"
                },
                "policyId": {
                    "type": "integer",
                    "description": "ID of the Cloudlets policy you want to activate",
                    "willReplaceOnChanges": true
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudletsPolicyActivationTimeouts:CloudletsPolicyActivationTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "version": {
                    "type": "integer",
                    "description": "Cloudlets policy version you want to activate"
                }
            },
            "requiredInputs": [
                "network",
                "policyId",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudletsPolicyActivation resources.\n",
                "properties": {
                    "associatedProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of property IDs to link to this Cloudlets policy. It is required for non-shared policies"
                    },
                    "isShared": {
                        "type": "boolean",
                        "description": "Indicates if policy that is being activated is a shared policy"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network you want to activate the policy version on (options are Staging and Production)"
                    },
                    "policyId": {
                        "type": "integer",
                        "description": "ID of the Cloudlets policy you want to activate",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Activation status for this Cloudlets policy"
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CloudletsPolicyActivationTimeouts:CloudletsPolicyActivationTimeouts",
                        "description": "Enables to set timeout for processing"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Cloudlets policy version you want to activate"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cloudwrapperActivation:CloudwrapperActivation": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The configuration you want to activate."
                },
                "revision": {
                    "type": "string",
                    "description": "Unique hash value of the configuration."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudwrapperActivationTimeouts:CloudwrapperActivationTimeouts"
                }
            },
            "required": [
                "configId",
                "revision"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The configuration you want to activate."
                },
                "revision": {
                    "type": "string",
                    "description": "Unique hash value of the configuration."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudwrapperActivationTimeouts:CloudwrapperActivationTimeouts"
                }
            },
            "requiredInputs": [
                "configId",
                "revision"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudwrapperActivation resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration you want to activate."
                    },
                    "revision": {
                        "type": "string",
                        "description": "Unique hash value of the configuration."
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CloudwrapperActivationTimeouts:CloudwrapperActivationTimeouts"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cloudwrapperConfiguration:CloudwrapperConfiguration": {
            "properties": {
                "capacityAlertsThreshold": {
                    "type": "integer",
                    "description": "Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100."
                },
                "comments": {
                    "type": "string",
                    "description": "Additional information you provide to differentiate or track changes of the configuration."
                },
                "configName": {
                    "type": "string",
                    "description": "Name of the configuration."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID having Cloud Wrapper entitlement."
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/CloudwrapperConfigurationLocation:CloudwrapperConfigurationLocation"
                    },
                    "description": "List of locations to use with the configuration."
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email addresses to use for notifications."
                },
                "propertyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of properties belonging to eligible products."
                },
                "retainIdleObjects": {
                    "type": "boolean",
                    "description": "Retain idle objects beyond their max idle lifetime."
                },
                "revision": {
                    "type": "string",
                    "description": "Unique hash value of the configuration."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudwrapperConfigurationTimeouts:CloudwrapperConfigurationTimeouts"
                }
            },
            "required": [
                "comments",
                "configName",
                "contractId",
                "notificationEmails",
                "propertyIds",
                "retainIdleObjects",
                "revision"
            ],
            "inputProperties": {
                "capacityAlertsThreshold": {
                    "type": "integer",
                    "description": "Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100."
                },
                "comments": {
                    "type": "string",
                    "description": "Additional information you provide to differentiate or track changes of the configuration."
                },
                "configName": {
                    "type": "string",
                    "description": "Name of the configuration."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID having Cloud Wrapper entitlement."
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/CloudwrapperConfigurationLocation:CloudwrapperConfigurationLocation"
                    },
                    "description": "List of locations to use with the configuration."
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email addresses to use for notifications."
                },
                "propertyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of properties belonging to eligible products."
                },
                "retainIdleObjects": {
                    "type": "boolean",
                    "description": "Retain idle objects beyond their max idle lifetime."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CloudwrapperConfigurationTimeouts:CloudwrapperConfigurationTimeouts"
                }
            },
            "requiredInputs": [
                "comments",
                "configName",
                "contractId",
                "propertyIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudwrapperConfiguration resources.\n",
                "properties": {
                    "capacityAlertsThreshold": {
                        "type": "integer",
                        "description": "Capacity Alerts enablement information for the configuration. The Alert Threshold should be between 50 and 100."
                    },
                    "comments": {
                        "type": "string",
                        "description": "Additional information you provide to differentiate or track changes of the configuration."
                    },
                    "configName": {
                        "type": "string",
                        "description": "Name of the configuration."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID having Cloud Wrapper entitlement."
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/CloudwrapperConfigurationLocation:CloudwrapperConfigurationLocation"
                        },
                        "description": "List of locations to use with the configuration."
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Email addresses to use for notifications."
                    },
                    "propertyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of properties belonging to eligible products."
                    },
                    "retainIdleObjects": {
                        "type": "boolean",
                        "description": "Retain idle objects beyond their max idle lifetime."
                    },
                    "revision": {
                        "type": "string",
                        "description": "Unique hash value of the configuration."
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CloudwrapperConfigurationTimeouts:CloudwrapperConfigurationTimeouts"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cpCode:CpCode": {
            "properties": {
                "contractId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CpCodeTimeouts:CpCodeTimeouts",
                    "description": "Enables to set timeout for processing"
                }
            },
            "required": [
                "contractId",
                "groupId",
                "name",
                "productId"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CpCodeTimeouts:CpCodeTimeouts",
                    "description": "Enables to set timeout for processing"
                }
            },
            "requiredInputs": [
                "contractId",
                "groupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpCode resources.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CpCodeTimeouts:CpCodeTimeouts",
                        "description": "Enables to set timeout for processing"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/cpCode:CpCode"
                }
            ]
        },
        "akamai:index/cpsDvEnrollment:CpsDvEnrollment": {
            "properties": {
                "acknowledgePreVerificationWarnings": {
                    "type": "boolean",
                    "description": "Whether acknowledge warnings before certificate verification. Default is false"
                },
                "adminContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact",
                    "description": "Contact information for the certificate administrator to use at organization"
                },
                "allowDuplicateCommonName": {
                    "type": "boolean",
                    "description": "Allow to duplicate common name. Default is false"
                },
                "certificateChainType": {
                    "type": "string",
                    "description": "Certificate trust chain type. Default is 'default'"
                },
                "certificateType": {
                    "type": "string",
                    "description": "Certificate type of enrollment"
                },
                "commonName": {
                    "type": "string",
                    "description": "Common name used for enrollment"
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID for which enrollment is retrieved"
                },
                "csr": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr",
                    "description": "Certificate signing request generated during enrollment creation"
                },
                "dnsChallenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge"
                    },
                    "description": "DNS challenge information"
                },
                "httpChallenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge"
                    },
                    "description": "HTTP challenge information"
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration",
                    "description": "Settings containing network information and TLS Metadata used by CPS"
                },
                "organization": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization",
                    "description": "Organization information"
                },
                "registrationAuthority": {
                    "type": "string",
                    "description": "The registration authority or certificate authority (CA) used to obtain a certificate"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of SANs"
                },
                "secureNetwork": {
                    "type": "string",
                    "description": "Type of TLS deployment network"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "SHA algorithm type"
                },
                "sniOnly": {
                    "type": "boolean",
                    "description": "Whether Server Name Indication is used for enrollment"
                },
                "techContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact",
                    "description": "Contact information for an administrator at Akamai"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentTimeouts:CpsDvEnrollmentTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "validationType": {
                    "type": "string",
                    "description": "Enrolment validation type"
                }
            },
            "required": [
                "adminContact",
                "certificateType",
                "commonName",
                "contractId",
                "csr",
                "dnsChallenges",
                "httpChallenges",
                "networkConfiguration",
                "organization",
                "registrationAuthority",
                "secureNetwork",
                "signatureAlgorithm",
                "sniOnly",
                "techContact",
                "validationType"
            ],
            "inputProperties": {
                "acknowledgePreVerificationWarnings": {
                    "type": "boolean",
                    "description": "Whether acknowledge warnings before certificate verification. Default is false"
                },
                "adminContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact",
                    "description": "Contact information for the certificate administrator to use at organization"
                },
                "allowDuplicateCommonName": {
                    "type": "boolean",
                    "description": "Allow to duplicate common name. Default is false"
                },
                "certificateChainType": {
                    "type": "string",
                    "description": "Certificate trust chain type. Default is 'default'"
                },
                "commonName": {
                    "type": "string",
                    "description": "Common name used for enrollment",
                    "willReplaceOnChanges": true
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID for which enrollment is retrieved",
                    "willReplaceOnChanges": true
                },
                "csr": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr",
                    "description": "Certificate signing request generated during enrollment creation"
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration",
                    "description": "Settings containing network information and TLS Metadata used by CPS"
                },
                "organization": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization",
                    "description": "Organization information"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of SANs"
                },
                "secureNetwork": {
                    "type": "string",
                    "description": "Type of TLS deployment network",
                    "willReplaceOnChanges": true
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "SHA algorithm type"
                },
                "sniOnly": {
                    "type": "boolean",
                    "description": "Whether Server Name Indication is used for enrollment",
                    "willReplaceOnChanges": true
                },
                "techContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact",
                    "description": "Contact information for an administrator at Akamai"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentTimeouts:CpsDvEnrollmentTimeouts",
                    "description": "Enables to set timeout for processing"
                }
            },
            "requiredInputs": [
                "adminContact",
                "commonName",
                "contractId",
                "csr",
                "networkConfiguration",
                "organization",
                "secureNetwork",
                "signatureAlgorithm",
                "sniOnly",
                "techContact"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpsDvEnrollment resources.\n",
                "properties": {
                    "acknowledgePreVerificationWarnings": {
                        "type": "boolean",
                        "description": "Whether acknowledge warnings before certificate verification. Default is false"
                    },
                    "adminContact": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact",
                        "description": "Contact information for the certificate administrator to use at organization"
                    },
                    "allowDuplicateCommonName": {
                        "type": "boolean",
                        "description": "Allow to duplicate common name. Default is false"
                    },
                    "certificateChainType": {
                        "type": "string",
                        "description": "Certificate trust chain type. Default is 'default'"
                    },
                    "certificateType": {
                        "type": "string",
                        "description": "Certificate type of enrollment"
                    },
                    "commonName": {
                        "type": "string",
                        "description": "Common name used for enrollment",
                        "willReplaceOnChanges": true
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID for which enrollment is retrieved",
                        "willReplaceOnChanges": true
                    },
                    "csr": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr",
                        "description": "Certificate signing request generated during enrollment creation"
                    },
                    "dnsChallenges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge"
                        },
                        "description": "DNS challenge information"
                    },
                    "httpChallenges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge"
                        },
                        "description": "HTTP challenge information"
                    },
                    "networkConfiguration": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration",
                        "description": "Settings containing network information and TLS Metadata used by CPS"
                    },
                    "organization": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization",
                        "description": "Organization information"
                    },
                    "registrationAuthority": {
                        "type": "string",
                        "description": "The registration authority or certificate authority (CA) used to obtain a certificate"
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of SANs"
                    },
                    "secureNetwork": {
                        "type": "string",
                        "description": "Type of TLS deployment network",
                        "willReplaceOnChanges": true
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "SHA algorithm type"
                    },
                    "sniOnly": {
                        "type": "boolean",
                        "description": "Whether Server Name Indication is used for enrollment",
                        "willReplaceOnChanges": true
                    },
                    "techContact": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact",
                        "description": "Contact information for an administrator at Akamai"
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentTimeouts:CpsDvEnrollmentTimeouts",
                        "description": "Enables to set timeout for processing"
                    },
                    "validationType": {
                        "type": "string",
                        "description": "Enrolment validation type"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cpsDvValidation:CpsDvValidation": {
            "properties": {
                "acknowledgePostVerificationWarnings": {
                    "type": "boolean",
                    "description": "Whether to acknowledge all post-verification warnings"
                },
                "enrollmentId": {
                    "type": "integer",
                    "description": "The unique identifier of enrollment"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of SANs"
                },
                "status": {
                    "type": "string",
                    "description": "Status of validation"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CpsDvValidationTimeouts:CpsDvValidationTimeouts",
                    "description": "Enables to set timeout for processing"
                }
            },
            "required": [
                "enrollmentId",
                "status"
            ],
            "inputProperties": {
                "acknowledgePostVerificationWarnings": {
                    "type": "boolean",
                    "description": "Whether to acknowledge all post-verification warnings"
                },
                "enrollmentId": {
                    "type": "integer",
                    "description": "The unique identifier of enrollment",
                    "willReplaceOnChanges": true
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of SANs",
                    "willReplaceOnChanges": true
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CpsDvValidationTimeouts:CpsDvValidationTimeouts",
                    "description": "Enables to set timeout for processing"
                }
            },
            "requiredInputs": [
                "enrollmentId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpsDvValidation resources.\n",
                "properties": {
                    "acknowledgePostVerificationWarnings": {
                        "type": "boolean",
                        "description": "Whether to acknowledge all post-verification warnings"
                    },
                    "enrollmentId": {
                        "type": "integer",
                        "description": "The unique identifier of enrollment",
                        "willReplaceOnChanges": true
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of SANs",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of validation"
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CpsDvValidationTimeouts:CpsDvValidationTimeouts",
                        "description": "Enables to set timeout for processing"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cpsThirdPartyEnrollment:CpsThirdPartyEnrollment": {
            "properties": {
                "acknowledgePreVerificationWarnings": {
                    "type": "boolean",
                    "description": "Whether acknowledge warnings before certificate verification. Default is false"
                },
                "adminContact": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentAdminContact:CpsThirdPartyEnrollmentAdminContact",
                    "description": "Contact information for the certificate administrator to use at organization"
                },
                "allowDuplicateCommonName": {
                    "type": "boolean",
                    "description": "Allow to duplicate common name. Default is false"
                },
                "autoApproveWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of warnings to be automatically approved"
                },
                "certificateChainType": {
                    "type": "string",
                    "description": "Certificate trust chain type. Default is 'default'"
                },
                "changeManagement": {
                    "type": "boolean",
                    "description": "When set to false, the certificate will be deployed to both staging and production networks"
                },
                "commonName": {
                    "type": "string",
                    "description": "Common name used for enrollment"
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID for which enrollment is retrieved"
                },
                "csr": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentCsr:CpsThirdPartyEnrollmentCsr",
                    "description": "Data used for generation of Certificate Signing Request"
                },
                "excludeSans": {
                    "type": "boolean",
                    "description": "When true, SANs are excluded from the CSR"
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentNetworkConfiguration:CpsThirdPartyEnrollmentNetworkConfiguration",
                    "description": "Settings containing network information and TLS metadata used by CPS"
                },
                "organization": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentOrganization:CpsThirdPartyEnrollmentOrganization",
                    "description": "Organization information"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of SANs"
                },
                "secureNetwork": {
                    "type": "string",
                    "description": "Type of TLS deployment network"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "sniOnly": {
                    "type": "boolean",
                    "description": "Whether Server Name Indication is used for enrollment"
                },
                "techContact": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentTechContact:CpsThirdPartyEnrollmentTechContact",
                    "description": "Contact information for an administrator at Akamai"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentTimeouts:CpsThirdPartyEnrollmentTimeouts",
                    "description": "Enables to set timeout for processing"
                }
            },
            "required": [
                "adminContact",
                "commonName",
                "contractId",
                "csr",
                "networkConfiguration",
                "organization",
                "secureNetwork",
                "sniOnly",
                "techContact"
            ],
            "inputProperties": {
                "acknowledgePreVerificationWarnings": {
                    "type": "boolean",
                    "description": "Whether acknowledge warnings before certificate verification. Default is false"
                },
                "adminContact": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentAdminContact:CpsThirdPartyEnrollmentAdminContact",
                    "description": "Contact information for the certificate administrator to use at organization"
                },
                "allowDuplicateCommonName": {
                    "type": "boolean",
                    "description": "Allow to duplicate common name. Default is false"
                },
                "autoApproveWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of warnings to be automatically approved"
                },
                "certificateChainType": {
                    "type": "string",
                    "description": "Certificate trust chain type. Default is 'default'"
                },
                "changeManagement": {
                    "type": "boolean",
                    "description": "When set to false, the certificate will be deployed to both staging and production networks"
                },
                "commonName": {
                    "type": "string",
                    "description": "Common name used for enrollment",
                    "willReplaceOnChanges": true
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID for which enrollment is retrieved",
                    "willReplaceOnChanges": true
                },
                "csr": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentCsr:CpsThirdPartyEnrollmentCsr",
                    "description": "Data used for generation of Certificate Signing Request"
                },
                "excludeSans": {
                    "type": "boolean",
                    "description": "When true, SANs are excluded from the CSR"
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentNetworkConfiguration:CpsThirdPartyEnrollmentNetworkConfiguration",
                    "description": "Settings containing network information and TLS metadata used by CPS"
                },
                "organization": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentOrganization:CpsThirdPartyEnrollmentOrganization",
                    "description": "Organization information"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of SANs"
                },
                "secureNetwork": {
                    "type": "string",
                    "description": "Type of TLS deployment network",
                    "willReplaceOnChanges": true
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "sniOnly": {
                    "type": "boolean",
                    "description": "Whether Server Name Indication is used for enrollment",
                    "willReplaceOnChanges": true
                },
                "techContact": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentTechContact:CpsThirdPartyEnrollmentTechContact",
                    "description": "Contact information for an administrator at Akamai"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentTimeouts:CpsThirdPartyEnrollmentTimeouts",
                    "description": "Enables to set timeout for processing"
                }
            },
            "requiredInputs": [
                "adminContact",
                "commonName",
                "contractId",
                "csr",
                "networkConfiguration",
                "organization",
                "secureNetwork",
                "sniOnly",
                "techContact"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpsThirdPartyEnrollment resources.\n",
                "properties": {
                    "acknowledgePreVerificationWarnings": {
                        "type": "boolean",
                        "description": "Whether acknowledge warnings before certificate verification. Default is false"
                    },
                    "adminContact": {
                        "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentAdminContact:CpsThirdPartyEnrollmentAdminContact",
                        "description": "Contact information for the certificate administrator to use at organization"
                    },
                    "allowDuplicateCommonName": {
                        "type": "boolean",
                        "description": "Allow to duplicate common name. Default is false"
                    },
                    "autoApproveWarnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of warnings to be automatically approved"
                    },
                    "certificateChainType": {
                        "type": "string",
                        "description": "Certificate trust chain type. Default is 'default'"
                    },
                    "changeManagement": {
                        "type": "boolean",
                        "description": "When set to false, the certificate will be deployed to both staging and production networks"
                    },
                    "commonName": {
                        "type": "string",
                        "description": "Common name used for enrollment",
                        "willReplaceOnChanges": true
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID for which enrollment is retrieved",
                        "willReplaceOnChanges": true
                    },
                    "csr": {
                        "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentCsr:CpsThirdPartyEnrollmentCsr",
                        "description": "Data used for generation of Certificate Signing Request"
                    },
                    "excludeSans": {
                        "type": "boolean",
                        "description": "When true, SANs are excluded from the CSR"
                    },
                    "networkConfiguration": {
                        "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentNetworkConfiguration:CpsThirdPartyEnrollmentNetworkConfiguration",
                        "description": "Settings containing network information and TLS metadata used by CPS"
                    },
                    "organization": {
                        "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentOrganization:CpsThirdPartyEnrollmentOrganization",
                        "description": "Organization information"
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of SANs"
                    },
                    "secureNetwork": {
                        "type": "string",
                        "description": "Type of TLS deployment network",
                        "willReplaceOnChanges": true
                    },
                    "signatureAlgorithm": {
                        "type": "string"
                    },
                    "sniOnly": {
                        "type": "boolean",
                        "description": "Whether Server Name Indication is used for enrollment",
                        "willReplaceOnChanges": true
                    },
                    "techContact": {
                        "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentTechContact:CpsThirdPartyEnrollmentTechContact",
                        "description": "Contact information for an administrator at Akamai"
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CpsThirdPartyEnrollmentTimeouts:CpsThirdPartyEnrollmentTimeouts",
                        "description": "Enables to set timeout for processing"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cpsUploadCertificate:CpsUploadCertificate": {
            "properties": {
                "acknowledgeChangeManagement": {
                    "type": "boolean",
                    "description": "Whether to acknowledge change management"
                },
                "acknowledgePostVerificationWarnings": {
                    "type": "boolean",
                    "description": "Whether to acknowledge post-verification warnings"
                },
                "autoApproveWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of post-verification warnings to be automatically acknowledged"
                },
                "certificateEcdsaPem": {
                    "type": "string",
                    "description": "ECDSA certificate in pem format to be uploaded"
                },
                "certificateRsaPem": {
                    "type": "string",
                    "description": "RSA certificate in pem format to be uploaded"
                },
                "enrollmentId": {
                    "type": "integer",
                    "description": "The unique identifier of the enrollment"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CpsUploadCertificateTimeouts:CpsUploadCertificateTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "trustChainEcdsaPem": {
                    "type": "string",
                    "description": "Trust chain in pem format for provided ECDSA certificate"
                },
                "trustChainRsaPem": {
                    "type": "string",
                    "description": "Trust chain in pem format for provided RSA certificate"
                },
                "waitForDeployment": {
                    "type": "boolean",
                    "description": "Whether to wait for certificate to be deployed"
                }
            },
            "required": [
                "enrollmentId"
            ],
            "inputProperties": {
                "acknowledgeChangeManagement": {
                    "type": "boolean",
                    "description": "Whether to acknowledge change management"
                },
                "acknowledgePostVerificationWarnings": {
                    "type": "boolean",
                    "description": "Whether to acknowledge post-verification warnings"
                },
                "autoApproveWarnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of post-verification warnings to be automatically acknowledged"
                },
                "certificateEcdsaPem": {
                    "type": "string",
                    "description": "ECDSA certificate in pem format to be uploaded"
                },
                "certificateRsaPem": {
                    "type": "string",
                    "description": "RSA certificate in pem format to be uploaded"
                },
                "enrollmentId": {
                    "type": "integer",
                    "description": "The unique identifier of the enrollment",
                    "willReplaceOnChanges": true
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/CpsUploadCertificateTimeouts:CpsUploadCertificateTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "trustChainEcdsaPem": {
                    "type": "string",
                    "description": "Trust chain in pem format for provided ECDSA certificate"
                },
                "trustChainRsaPem": {
                    "type": "string",
                    "description": "Trust chain in pem format for provided RSA certificate"
                },
                "waitForDeployment": {
                    "type": "boolean",
                    "description": "Whether to wait for certificate to be deployed"
                }
            },
            "requiredInputs": [
                "enrollmentId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpsUploadCertificate resources.\n",
                "properties": {
                    "acknowledgeChangeManagement": {
                        "type": "boolean",
                        "description": "Whether to acknowledge change management"
                    },
                    "acknowledgePostVerificationWarnings": {
                        "type": "boolean",
                        "description": "Whether to acknowledge post-verification warnings"
                    },
                    "autoApproveWarnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of post-verification warnings to be automatically acknowledged"
                    },
                    "certificateEcdsaPem": {
                        "type": "string",
                        "description": "ECDSA certificate in pem format to be uploaded"
                    },
                    "certificateRsaPem": {
                        "type": "string",
                        "description": "RSA certificate in pem format to be uploaded"
                    },
                    "enrollmentId": {
                        "type": "integer",
                        "description": "The unique identifier of the enrollment",
                        "willReplaceOnChanges": true
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/CpsUploadCertificateTimeouts:CpsUploadCertificateTimeouts",
                        "description": "Enables to set timeout for processing"
                    },
                    "trustChainEcdsaPem": {
                        "type": "string",
                        "description": "Trust chain in pem format for provided ECDSA certificate"
                    },
                    "trustChainRsaPem": {
                        "type": "string",
                        "description": "Trust chain in pem format for provided RSA certificate"
                    },
                    "waitForDeployment": {
                        "type": "boolean",
                        "description": "Whether to wait for certificate to be deployed"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/datastream:Datastream": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defining if stream should be active or not"
                },
                "azureConnector": {
                    "$ref": "#/types/akamai:index/DatastreamAzureConnector:DatastreamAzureConnector"
                },
                "collectMidgress": {
                    "type": "boolean",
                    "description": "Identifies if stream needs to collect midgress data"
                },
                "contractId": {
                    "type": "string",
                    "description": "Identifies the contract that has access to the product"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The username who created the stream"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the stream was created"
                },
                "datadogConnector": {
                    "$ref": "#/types/akamai:index/DatastreamDatadogConnector:DatastreamDatadogConnector"
                },
                "datasetFields": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of data set fields selected from the associated template that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines"
                },
                "deliveryConfiguration": {
                    "$ref": "#/types/akamai:index/DatastreamDeliveryConfiguration:DatastreamDeliveryConfiguration",
                    "description": "Provides information about the configuration related to logs (format, file names, delivery frequency)"
                },
                "elasticsearchConnector": {
                    "$ref": "#/types/akamai:index/DatastreamElasticsearchConnector:DatastreamElasticsearchConnector"
                },
                "gcsConnector": {
                    "$ref": "#/types/akamai:index/DatastreamGcsConnector:DatastreamGcsConnector"
                },
                "groupId": {
                    "type": "string",
                    "description": "Identifies the group that has access to the product and for which the stream configuration was created"
                },
                "httpsConnector": {
                    "$ref": "#/types/akamai:index/DatastreamHttpsConnector:DatastreamHttpsConnector"
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Identifies the latest active configuration version of the stream"
                },
                "logglyConnector": {
                    "$ref": "#/types/akamai:index/DatastreamLogglyConnector:DatastreamLogglyConnector"
                },
                "modifiedBy": {
                    "type": "string",
                    "description": "The username who modified the stream"
                },
                "modifiedDate": {
                    "type": "string",
                    "description": "The date and time when the stream was modified"
                },
                "newRelicConnector": {
                    "$ref": "#/types/akamai:index/DatastreamNewRelicConnector:DatastreamNewRelicConnector"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of email addresses where the system sends notifications about activations and deactivations of the stream"
                },
                "oracleConnector": {
                    "$ref": "#/types/akamai:index/DatastreamOracleConnector:DatastreamOracleConnector"
                },
                "papiJson": {
                    "type": "string",
                    "description": "The configuration in JSON format that can be copy-pasted into PAPI configuration to enable datastream behavior"
                },
                "productId": {
                    "type": "string",
                    "description": "The ID of the product for which the stream was created"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Identifies the properties monitored in the stream"
                },
                "s3Connector": {
                    "$ref": "#/types/akamai:index/DatastreamS3Connector:DatastreamS3Connector"
                },
                "splunkConnector": {
                    "$ref": "#/types/akamai:index/DatastreamSplunkConnector:DatastreamSplunkConnector"
                },
                "streamName": {
                    "type": "string",
                    "description": "The name of the stream"
                },
                "streamVersion": {
                    "type": "integer",
                    "description": "Identifies the configuration version of the stream"
                },
                "sumologicConnector": {
                    "$ref": "#/types/akamai:index/DatastreamSumologicConnector:DatastreamSumologicConnector"
                }
            },
            "required": [
                "active",
                "contractId",
                "createdBy",
                "createdDate",
                "datasetFields",
                "deliveryConfiguration",
                "groupId",
                "latestVersion",
                "modifiedBy",
                "modifiedDate",
                "papiJson",
                "productId",
                "properties",
                "streamName",
                "streamVersion"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Defining if stream should be active or not"
                },
                "azureConnector": {
                    "$ref": "#/types/akamai:index/DatastreamAzureConnector:DatastreamAzureConnector"
                },
                "collectMidgress": {
                    "type": "boolean",
                    "description": "Identifies if stream needs to collect midgress data"
                },
                "contractId": {
                    "type": "string",
                    "description": "Identifies the contract that has access to the product"
                },
                "datadogConnector": {
                    "$ref": "#/types/akamai:index/DatastreamDatadogConnector:DatastreamDatadogConnector"
                },
                "datasetFields": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of data set fields selected from the associated template that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines"
                },
                "deliveryConfiguration": {
                    "$ref": "#/types/akamai:index/DatastreamDeliveryConfiguration:DatastreamDeliveryConfiguration",
                    "description": "Provides information about the configuration related to logs (format, file names, delivery frequency)"
                },
                "elasticsearchConnector": {
                    "$ref": "#/types/akamai:index/DatastreamElasticsearchConnector:DatastreamElasticsearchConnector"
                },
                "gcsConnector": {
                    "$ref": "#/types/akamai:index/DatastreamGcsConnector:DatastreamGcsConnector"
                },
                "groupId": {
                    "type": "string",
                    "description": "Identifies the group that has access to the product and for which the stream configuration was created"
                },
                "httpsConnector": {
                    "$ref": "#/types/akamai:index/DatastreamHttpsConnector:DatastreamHttpsConnector"
                },
                "logglyConnector": {
                    "$ref": "#/types/akamai:index/DatastreamLogglyConnector:DatastreamLogglyConnector"
                },
                "newRelicConnector": {
                    "$ref": "#/types/akamai:index/DatastreamNewRelicConnector:DatastreamNewRelicConnector"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of email addresses where the system sends notifications about activations and deactivations of the stream"
                },
                "oracleConnector": {
                    "$ref": "#/types/akamai:index/DatastreamOracleConnector:DatastreamOracleConnector"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Identifies the properties monitored in the stream"
                },
                "s3Connector": {
                    "$ref": "#/types/akamai:index/DatastreamS3Connector:DatastreamS3Connector"
                },
                "splunkConnector": {
                    "$ref": "#/types/akamai:index/DatastreamSplunkConnector:DatastreamSplunkConnector"
                },
                "streamName": {
                    "type": "string",
                    "description": "The name of the stream"
                },
                "sumologicConnector": {
                    "$ref": "#/types/akamai:index/DatastreamSumologicConnector:DatastreamSumologicConnector"
                }
            },
            "requiredInputs": [
                "active",
                "contractId",
                "datasetFields",
                "deliveryConfiguration",
                "groupId",
                "properties",
                "streamName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Datastream resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Defining if stream should be active or not"
                    },
                    "azureConnector": {
                        "$ref": "#/types/akamai:index/DatastreamAzureConnector:DatastreamAzureConnector"
                    },
                    "collectMidgress": {
                        "type": "boolean",
                        "description": "Identifies if stream needs to collect midgress data"
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Identifies the contract that has access to the product"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The username who created the stream"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the stream was created"
                    },
                    "datadogConnector": {
                        "$ref": "#/types/akamai:index/DatastreamDatadogConnector:DatastreamDatadogConnector"
                    },
                    "datasetFields": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of data set fields selected from the associated template that the stream monitors in logs. The order of the identifiers define how the value for these fields appear in the log lines"
                    },
                    "deliveryConfiguration": {
                        "$ref": "#/types/akamai:index/DatastreamDeliveryConfiguration:DatastreamDeliveryConfiguration",
                        "description": "Provides information about the configuration related to logs (format, file names, delivery frequency)"
                    },
                    "elasticsearchConnector": {
                        "$ref": "#/types/akamai:index/DatastreamElasticsearchConnector:DatastreamElasticsearchConnector"
                    },
                    "gcsConnector": {
                        "$ref": "#/types/akamai:index/DatastreamGcsConnector:DatastreamGcsConnector"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Identifies the group that has access to the product and for which the stream configuration was created"
                    },
                    "httpsConnector": {
                        "$ref": "#/types/akamai:index/DatastreamHttpsConnector:DatastreamHttpsConnector"
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "Identifies the latest active configuration version of the stream"
                    },
                    "logglyConnector": {
                        "$ref": "#/types/akamai:index/DatastreamLogglyConnector:DatastreamLogglyConnector"
                    },
                    "modifiedBy": {
                        "type": "string",
                        "description": "The username who modified the stream"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "description": "The date and time when the stream was modified"
                    },
                    "newRelicConnector": {
                        "$ref": "#/types/akamai:index/DatastreamNewRelicConnector:DatastreamNewRelicConnector"
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of email addresses where the system sends notifications about activations and deactivations of the stream"
                    },
                    "oracleConnector": {
                        "$ref": "#/types/akamai:index/DatastreamOracleConnector:DatastreamOracleConnector"
                    },
                    "papiJson": {
                        "type": "string",
                        "description": "The configuration in JSON format that can be copy-pasted into PAPI configuration to enable datastream behavior"
                    },
                    "productId": {
                        "type": "string",
                        "description": "The ID of the product for which the stream was created"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Identifies the properties monitored in the stream"
                    },
                    "s3Connector": {
                        "$ref": "#/types/akamai:index/DatastreamS3Connector:DatastreamS3Connector"
                    },
                    "splunkConnector": {
                        "$ref": "#/types/akamai:index/DatastreamSplunkConnector:DatastreamSplunkConnector"
                    },
                    "streamName": {
                        "type": "string",
                        "description": "The name of the stream"
                    },
                    "streamVersion": {
                        "type": "integer",
                        "description": "Identifies the configuration version of the stream"
                    },
                    "sumologicConnector": {
                        "$ref": "#/types/akamai:index/DatastreamSumologicConnector:DatastreamSumologicConnector"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/dnsRecord:DnsRecord": {
            "properties": {
                "algorithm": {
                    "type": "integer"
                },
                "answerType": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "dnsName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordSha": {
                    "type": "string"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "serial": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "svcParams": {
                    "type": "string"
                },
                "svcPriority": {
                    "type": "integer"
                },
                "targetName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "answerType",
                "dnsName",
                "name",
                "recordSha",
                "recordtype",
                "serial",
                "ttl",
                "zone"
            ],
            "inputProperties": {
                "algorithm": {
                    "type": "integer"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordtype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "svcParams": {
                    "type": "string"
                },
                "svcPriority": {
                    "type": "integer"
                },
                "targetName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "recordtype",
                "ttl",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
                "properties": {
                    "algorithm": {
                        "type": "integer"
                    },
                    "answerType": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "digestType": {
                        "type": "integer"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "emailAddress": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "integer"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "fingerprintType": {
                        "type": "integer"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "flagsnaptr": {
                        "type": "string"
                    },
                    "hardware": {
                        "type": "string"
                    },
                    "inception": {
                        "type": "string"
                    },
                    "iterations": {
                        "type": "integer"
                    },
                    "key": {
                        "type": "string"
                    },
                    "keytag": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "integer"
                    },
                    "mailbox": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "nameServer": {
                        "type": "string"
                    },
                    "nextHashedOwnerName": {
                        "type": "string"
                    },
                    "nxdomainTtl": {
                        "type": "integer"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "originalTtl": {
                        "type": "integer"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "preference": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "priorityIncrement": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "recordSha": {
                        "type": "string"
                    },
                    "recordtype": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "refresh": {
                        "type": "integer"
                    },
                    "regexp": {
                        "type": "string"
                    },
                    "replacement": {
                        "type": "string"
                    },
                    "retry": {
                        "type": "integer"
                    },
                    "salt": {
                        "type": "string"
                    },
                    "selector": {
                        "type": "integer"
                    },
                    "serial": {
                        "type": "integer"
                    },
                    "service": {
                        "type": "string"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "signer": {
                        "type": "string"
                    },
                    "software": {
                        "type": "string"
                    },
                    "subtype": {
                        "type": "integer"
                    },
                    "svcParams": {
                        "type": "string"
                    },
                    "svcPriority": {
                        "type": "integer"
                    },
                    "targetName": {
                        "type": "string"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "txt": {
                        "type": "string"
                    },
                    "typeBitmaps": {
                        "type": "string"
                    },
                    "typeCovered": {
                        "type": "string"
                    },
                    "typeMnemonic": {
                        "type": "string"
                    },
                    "typeValue": {
                        "type": "integer"
                    },
                    "usage": {
                        "type": "integer"
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:edgedns/dnsRecord:DnsRecord"
                }
            ]
        },
        "akamai:index/dnsZone:DnsZone": {
            "properties": {
                "activationState": {
                    "type": "string"
                },
                "aliasCount": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "outboundZoneTransfer": {
                    "$ref": "#/types/akamai:index/DnsZoneOutboundZoneTransfer:DnsZoneOutboundZoneTransfer",
                    "description": "Outbound zone transfer properties."
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "activationState",
                "aliasCount",
                "contract",
                "type",
                "versionId",
                "zone"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "outboundZoneTransfer": {
                    "$ref": "#/types/akamai:index/DnsZoneOutboundZoneTransfer:DnsZoneOutboundZoneTransfer",
                    "description": "Outbound zone transfer properties."
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "contract",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZone resources.\n",
                "properties": {
                    "activationState": {
                        "type": "string"
                    },
                    "aliasCount": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "endCustomerId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "outboundZoneTransfer": {
                        "$ref": "#/types/akamai:index/DnsZoneOutboundZoneTransfer:DnsZoneOutboundZoneTransfer",
                        "description": "Outbound zone transfer properties."
                    },
                    "signAndServe": {
                        "type": "boolean"
                    },
                    "signAndServeAlgorithm": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "tsigKey": {
                        "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "versionId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:edgedns/dnsZone:DnsZone"
                }
            ]
        },
        "akamai:index/edgeHostName:EdgeHostName": {
            "properties": {
                "certificate": {
                    "type": "integer"
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "statusUpdateEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email address that should receive updates on the IP behavior update request."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/EdgeHostNameTimeouts:EdgeHostNameTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live, or number of seconds to keep an edge hostname assigned to a map or target. If not provided default value for product is used."
                },
                "useCases": {
                    "type": "string",
                    "description": "A JSON encoded list of use cases"
                }
            },
            "required": [
                "contractId",
                "edgeHostname",
                "groupId",
                "ipBehavior",
                "productId"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "statusUpdateEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email address that should receive updates on the IP behavior update request."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/EdgeHostNameTimeouts:EdgeHostNameTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live, or number of seconds to keep an edge hostname assigned to a map or target. If not provided default value for product is used."
                },
                "useCases": {
                    "type": "string",
                    "description": "A JSON encoded list of use cases",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "contractId",
                "edgeHostname",
                "groupId",
                "ipBehavior"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeHostName resources.\n",
                "properties": {
                    "certificate": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "edgeHostname": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "ipBehavior": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "statusUpdateEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Email address that should receive updates on the IP behavior update request."
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/EdgeHostNameTimeouts:EdgeHostNameTimeouts",
                        "description": "Enables to set timeout for processing"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The time to live, or number of seconds to keep an edge hostname assigned to a map or target. If not provided default value for product is used."
                    },
                    "useCases": {
                        "type": "string",
                        "description": "A JSON encoded list of use cases",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/edgeHostName:EdgeHostName"
                }
            ]
        },
        "akamai:index/edgeKv:EdgeKv": {
            "properties": {
                "geoLocation": {
                    "type": "string",
                    "description": "Storage location for data"
                },
                "groupId": {
                    "type": "integer",
                    "description": "Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable."
                },
                "namespaceName": {
                    "type": "string",
                    "description": "Name for the EKV namespace"
                },
                "network": {
                    "type": "string",
                    "description": "The network on which the namespace will be activated"
                },
                "retentionInSeconds": {
                    "type": "integer",
                    "description": "Retention period for data in this namespace. An update of this value will just affect new EKV items."
                }
            },
            "required": [
                "groupId",
                "namespaceName",
                "network",
                "retentionInSeconds"
            ],
            "inputProperties": {
                "geoLocation": {
                    "type": "string",
                    "description": "Storage location for data",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "integer",
                    "description": "Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.",
                    "willReplaceOnChanges": true
                },
                "namespaceName": {
                    "type": "string",
                    "description": "Name for the EKV namespace",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "description": "The network on which the namespace will be activated",
                    "willReplaceOnChanges": true
                },
                "retentionInSeconds": {
                    "type": "integer",
                    "description": "Retention period for data in this namespace. An update of this value will just affect new EKV items."
                }
            },
            "requiredInputs": [
                "groupId",
                "namespaceName",
                "network",
                "retentionInSeconds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeKv resources.\n",
                "properties": {
                    "geoLocation": {
                        "type": "string",
                        "description": "Storage location for data",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Namespace ACC group ID. It will be used in EdgeKV API v2. Not updatable.",
                        "willReplaceOnChanges": true
                    },
                    "namespaceName": {
                        "type": "string",
                        "description": "Name for the EKV namespace",
                        "willReplaceOnChanges": true
                    },
                    "network": {
                        "type": "string",
                        "description": "The network on which the namespace will be activated",
                        "willReplaceOnChanges": true
                    },
                    "retentionInSeconds": {
                        "type": "integer",
                        "description": "Retention period for data in this namespace. An update of this value will just affect new EKV items."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/edgeWorker:EdgeWorker": {
            "properties": {
                "edgeworkerId": {
                    "type": "integer",
                    "description": "The unique identifier of the EdgeWorker"
                },
                "groupId": {
                    "type": "integer",
                    "description": "Defines the group association for the EdgeWorker"
                },
                "localBundle": {
                    "type": "string",
                    "description": "The path to the EdgeWorkers tgz code bundle"
                },
                "localBundleHash": {
                    "type": "string",
                    "description": "The local bundle hash for the EdgeWorker"
                },
                "name": {
                    "type": "string",
                    "description": "The EdgeWorker name"
                },
                "resourceTierId": {
                    "type": "integer",
                    "description": "The unique identifier of a resource tier"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/EdgeWorkerTimeouts:EdgeWorkerTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "version": {
                    "type": "string",
                    "description": "The bundle version"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of warnings returned by EdgeWorker validation"
                }
            },
            "required": [
                "edgeworkerId",
                "groupId",
                "localBundleHash",
                "name",
                "resourceTierId",
                "version",
                "warnings"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "integer",
                    "description": "Defines the group association for the EdgeWorker"
                },
                "localBundle": {
                    "type": "string",
                    "description": "The path to the EdgeWorkers tgz code bundle"
                },
                "name": {
                    "type": "string",
                    "description": "The EdgeWorker name"
                },
                "resourceTierId": {
                    "type": "integer",
                    "description": "The unique identifier of a resource tier",
                    "willReplaceOnChanges": true
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/EdgeWorkerTimeouts:EdgeWorkerTimeouts",
                    "description": "Enables to set timeout for processing"
                }
            },
            "requiredInputs": [
                "groupId",
                "resourceTierId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeWorker resources.\n",
                "properties": {
                    "edgeworkerId": {
                        "type": "integer",
                        "description": "The unique identifier of the EdgeWorker"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "Defines the group association for the EdgeWorker"
                    },
                    "localBundle": {
                        "type": "string",
                        "description": "The path to the EdgeWorkers tgz code bundle"
                    },
                    "localBundleHash": {
                        "type": "string",
                        "description": "The local bundle hash for the EdgeWorker"
                    },
                    "name": {
                        "type": "string",
                        "description": "The EdgeWorker name"
                    },
                    "resourceTierId": {
                        "type": "integer",
                        "description": "The unique identifier of a resource tier",
                        "willReplaceOnChanges": true
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/EdgeWorkerTimeouts:EdgeWorkerTimeouts",
                        "description": "Enables to set timeout for processing"
                    },
                    "version": {
                        "type": "string",
                        "description": "The bundle version"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of warnings returned by EdgeWorker validation"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/edgeWorkersActivation:EdgeWorkersActivation": {
            "properties": {
                "activationId": {
                    "type": "integer",
                    "description": "A unique identifier of the activation"
                },
                "edgeworkerId": {
                    "type": "integer",
                    "description": "Id of the EdgeWorker to activate"
                },
                "network": {
                    "type": "string",
                    "description": "The network on which the version will be activated"
                },
                "note": {
                    "type": "string",
                    "description": "Assigns a log message to the activation request"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/EdgeWorkersActivationTimeouts:EdgeWorkersActivationTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "version": {
                    "type": "string",
                    "description": "The version of EdgeWorker to activate"
                }
            },
            "required": [
                "activationId",
                "edgeworkerId",
                "network",
                "version"
            ],
            "inputProperties": {
                "edgeworkerId": {
                    "type": "integer",
                    "description": "Id of the EdgeWorker to activate",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "description": "The network on which the version will be activated"
                },
                "note": {
                    "type": "string",
                    "description": "Assigns a log message to the activation request"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/EdgeWorkersActivationTimeouts:EdgeWorkersActivationTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "version": {
                    "type": "string",
                    "description": "The version of EdgeWorker to activate"
                }
            },
            "requiredInputs": [
                "edgeworkerId",
                "network",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeWorkersActivation resources.\n",
                "properties": {
                    "activationId": {
                        "type": "integer",
                        "description": "A unique identifier of the activation"
                    },
                    "edgeworkerId": {
                        "type": "integer",
                        "description": "Id of the EdgeWorker to activate",
                        "willReplaceOnChanges": true
                    },
                    "network": {
                        "type": "string",
                        "description": "The network on which the version will be activated"
                    },
                    "note": {
                        "type": "string",
                        "description": "Assigns a log message to the activation request"
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/EdgeWorkersActivationTimeouts:EdgeWorkersActivationTimeouts",
                        "description": "Enables to set timeout for processing"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of EdgeWorker to activate"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/edgekvGroupItems:EdgekvGroupItems": {
            "properties": {
                "groupName": {
                    "type": "string",
                    "description": "The name of the EdgeKV group."
                },
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of items within the specified group. Each item consists of an item key and a value."
                },
                "namespaceName": {
                    "type": "string",
                    "description": "The name for the EdgeKV namespace."
                },
                "network": {
                    "type": "string",
                    "description": "The network against which to execute the API request."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/EdgekvGroupItemsTimeouts:EdgekvGroupItemsTimeouts",
                    "description": "Enables to set timeout for processing"
                }
            },
            "required": [
                "groupName",
                "items",
                "namespaceName",
                "network"
            ],
            "inputProperties": {
                "groupName": {
                    "type": "string",
                    "description": "The name of the EdgeKV group.",
                    "willReplaceOnChanges": true
                },
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of items within the specified group. Each item consists of an item key and a value."
                },
                "namespaceName": {
                    "type": "string",
                    "description": "The name for the EdgeKV namespace.",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "description": "The network against which to execute the API request.",
                    "willReplaceOnChanges": true
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/EdgekvGroupItemsTimeouts:EdgekvGroupItemsTimeouts",
                    "description": "Enables to set timeout for processing"
                }
            },
            "requiredInputs": [
                "groupName",
                "items",
                "namespaceName",
                "network"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgekvGroupItems resources.\n",
                "properties": {
                    "groupName": {
                        "type": "string",
                        "description": "The name of the EdgeKV group.",
                        "willReplaceOnChanges": true
                    },
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of items within the specified group. Each item consists of an item key and a value."
                    },
                    "namespaceName": {
                        "type": "string",
                        "description": "The name for the EdgeKV namespace.",
                        "willReplaceOnChanges": true
                    },
                    "network": {
                        "type": "string",
                        "description": "The network against which to execute the API request.",
                        "willReplaceOnChanges": true
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/EdgekvGroupItemsTimeouts:EdgekvGroupItemsTimeouts",
                        "description": "Enables to set timeout for processing"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/gtmAsmap:GtmAsmap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmAsmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmASmap:GtmASmap"
                }
            ]
        },
        "akamai:index/gtmCidrmap:GtmCidrmap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmCidrmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmCidrmap:GtmCidrmap"
                }
            ]
        },
        "akamai:index/gtmDatacenter:GtmDatacenter": {
            "properties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "integer"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "scorePenalty": {
                    "type": "integer"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "virtual": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "datacenterId",
                "domain",
                "pingInterval",
                "pingPacketSize",
                "scorePenalty",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "virtual"
            ],
            "inputProperties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDatacenter resources.\n",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "cloneOf": {
                        "type": "integer"
                    },
                    "cloudServerHostHeaderOverride": {
                        "type": "boolean"
                    },
                    "cloudServerTargeting": {
                        "type": "boolean"
                    },
                    "continent": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "defaultLoadObject": {
                        "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "scorePenalty": {
                        "type": "integer"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "stateOrProvince": {
                        "type": "string"
                    },
                    "virtual": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmDatacenter:GtmDatacenter"
                }
            ]
        },
        "akamai:index/gtmDomain:GtmDomain": {
            "properties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultHealthMax": {
                    "type": "number"
                },
                "defaultHealthMultiplier": {
                    "type": "number"
                },
                "defaultHealthThreshold": {
                    "type": "number"
                },
                "defaultMaxUnreachablePenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "defaultUnreachableThreshold": {
                    "type": "number"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapUpdateInterval": {
                    "type": "integer"
                },
                "maxProperties": {
                    "type": "integer"
                },
                "maxResources": {
                    "type": "integer"
                },
                "maxTestTimeout": {
                    "type": "number"
                },
                "maxTtl": {
                    "type": "integer"
                },
                "minPingableRegionFraction": {
                    "type": "number"
                },
                "minTestInterval": {
                    "type": "integer"
                },
                "minTtl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "roundRobinPrefix": {
                    "type": "string"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "signAndServe": {
                    "type": "boolean",
                    "description": "If set (true) we will sign the domain's resource records so that they can be validated by a validating resolver."
                },
                "signAndServeAlgorithm": {
                    "type": "string",
                    "description": "The signing algorithm to use for signAndServe. One of the following values: RSA_SHA1, RSA_SHA256, RSA_SHA512, ECDSA_P256_SHA256, ECDSA_P384_SHA384, ED25519, ED448."
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultHealthMax",
                "defaultHealthMultiplier",
                "defaultHealthThreshold",
                "defaultMaxUnreachablePenalty",
                "defaultUnreachableThreshold",
                "mapUpdateInterval",
                "maxProperties",
                "maxResources",
                "maxTestTimeout",
                "maxTtl",
                "minPingableRegionFraction",
                "minTestInterval",
                "minTtl",
                "name",
                "pingInterval",
                "pingPacketSize",
                "roundRobinPrefix",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "type"
            ],
            "inputProperties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "signAndServe": {
                    "type": "boolean",
                    "description": "If set (true) we will sign the domain's resource records so that they can be validated by a validating resolver."
                },
                "signAndServeAlgorithm": {
                    "type": "string",
                    "description": "The signing algorithm to use for signAndServe. One of the following values: RSA_SHA1, RSA_SHA256, RSA_SHA512, ECDSA_P256_SHA256, ECDSA_P384_SHA384, ED25519, ED448."
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDomain resources.\n",
                "properties": {
                    "cnameCoalescingEnabled": {
                        "type": "boolean"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "defaultErrorPenalty": {
                        "type": "integer"
                    },
                    "defaultHealthMax": {
                        "type": "number"
                    },
                    "defaultHealthMultiplier": {
                        "type": "number"
                    },
                    "defaultHealthThreshold": {
                        "type": "number"
                    },
                    "defaultMaxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "defaultSslClientCertificate": {
                        "type": "string"
                    },
                    "defaultSslClientPrivateKey": {
                        "type": "string"
                    },
                    "defaultTimeoutPenalty": {
                        "type": "integer"
                    },
                    "defaultUnreachableThreshold": {
                        "type": "number"
                    },
                    "emailNotificationLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "endUserMappingEnabled": {
                        "type": "boolean"
                    },
                    "group": {
                        "type": "string"
                    },
                    "loadFeedback": {
                        "type": "boolean"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapUpdateInterval": {
                        "type": "integer"
                    },
                    "maxProperties": {
                        "type": "integer"
                    },
                    "maxResources": {
                        "type": "integer"
                    },
                    "maxTestTimeout": {
                        "type": "number"
                    },
                    "maxTtl": {
                        "type": "integer"
                    },
                    "minPingableRegionFraction": {
                        "type": "number"
                    },
                    "minTestInterval": {
                        "type": "integer"
                    },
                    "minTtl": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "roundRobinPrefix": {
                        "type": "string"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "signAndServe": {
                        "type": "boolean",
                        "description": "If set (true) we will sign the domain's resource records so that they can be validated by a validating resolver."
                    },
                    "signAndServeAlgorithm": {
                        "type": "string",
                        "description": "The signing algorithm to use for signAndServe. One of the following values: RSA_SHA1, RSA_SHA256, RSA_SHA512, ECDSA_P256_SHA256, ECDSA_P384_SHA384, ED25519, ED448."
                    },
                    "type": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmDomain:GtmDomain"
                }
            ]
        },
        "akamai:index/gtmGeomap:GtmGeomap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmGeomap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmGeomap:GtmGeomap"
                }
            ]
        },
        "akamai:index/gtmProperty:GtmProperty": {
            "properties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                },
                "weightedHashBitsForIpv4": {
                    "type": "integer"
                },
                "weightedHashBitsForIpv6": {
                    "type": "integer"
                }
            },
            "required": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "name",
                "scoreAggregationType",
                "type",
                "weightedHashBitsForIpv4",
                "weightedHashBitsForIpv6"
            ],
            "inputProperties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "scoreAggregationType",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmProperty resources.\n",
                "properties": {
                    "backupCname": {
                        "type": "string"
                    },
                    "backupIp": {
                        "type": "string"
                    },
                    "balanceByDownloadScore": {
                        "type": "boolean"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "dynamicTtl": {
                        "type": "integer"
                    },
                    "failbackDelay": {
                        "type": "integer"
                    },
                    "failoverDelay": {
                        "type": "integer"
                    },
                    "ghostDemandReporting": {
                        "type": "boolean"
                    },
                    "handoutLimit": {
                        "type": "integer"
                    },
                    "handoutMode": {
                        "type": "string"
                    },
                    "healthMax": {
                        "type": "number"
                    },
                    "healthMultiplier": {
                        "type": "number"
                    },
                    "healthThreshold": {
                        "type": "number"
                    },
                    "ipv6": {
                        "type": "boolean"
                    },
                    "livenessTests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                        }
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapName": {
                        "type": "string"
                    },
                    "maxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "minLiveFraction": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scoreAggregationType": {
                        "type": "string"
                    },
                    "staticRrSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                        }
                    },
                    "stickinessBonusConstant": {
                        "type": "integer"
                    },
                    "stickinessBonusPercentage": {
                        "type": "integer"
                    },
                    "trafficTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "unreachableThreshold": {
                        "type": "number"
                    },
                    "useComputedTargets": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    },
                    "weightedHashBitsForIpv4": {
                        "type": "integer"
                    },
                    "weightedHashBitsForIpv6": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmProperty:GtmProperty"
                }
            ]
        },
        "akamai:index/gtmResource:GtmResource": {
            "properties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "aggregationType",
                "domain",
                "name",
                "type"
            ],
            "inputProperties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "aggregationType",
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmResource resources.\n",
                "properties": {
                    "aggregationType": {
                        "type": "string"
                    },
                    "constrainedProperty": {
                        "type": "string"
                    },
                    "decayRate": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "hostHeader": {
                        "type": "string"
                    },
                    "leaderString": {
                        "type": "string"
                    },
                    "leastSquaresDecay": {
                        "type": "number"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "maxUMultiplicativeIncrement": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resourceInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "upperBound": {
                        "type": "integer"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmResource:GtmResource"
                }
            ]
        },
        "akamai:index/iamApiClient:IamApiClient": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The part of the client secret that identifies your API client and lets you access applications and resources.",
                    "secret": true
                },
                "actions": {
                    "$ref": "#/types/akamai:index/IamApiClientActions:IamApiClientActions",
                    "description": "Specifies activities available for the API client."
                },
                "activeCredentialCount": {
                    "type": "integer",
                    "description": "The number of credentials active for the API client. When the count is zero, you can delete the API client without interruption."
                },
                "allowAccountSwitch": {
                    "type": "boolean",
                    "description": "Enables the API client to manage more than one account."
                },
                "apiAccess": {
                    "$ref": "#/types/akamai:index/IamApiClientApiAccess:IamApiClientApiAccess",
                    "description": "The APIs the API client can access."
                },
                "authorizedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single username in an array."
                },
                "baseUrl": {
                    "type": "string",
                    "description": "The base URL for the service.",
                    "secret": true
                },
                "canAutoCreateCredential": {
                    "type": "boolean",
                    "description": "Whether the API client can create a credential for a new API client. The default is false."
                },
                "clientDescription": {
                    "type": "string",
                    "description": "A human-readable description of the API client."
                },
                "clientId": {
                    "type": "string",
                    "description": "A unique identifier for the API client."
                },
                "clientName": {
                    "type": "string",
                    "description": "A human-readable name for the API client."
                },
                "clientType": {
                    "type": "string",
                    "description": "Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials."
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the API client."
                },
                "createdDate": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp indicating when the API client was created."
                },
                "credential": {
                    "$ref": "#/types/akamai:index/IamApiClientCredential:IamApiClientCredential"
                },
                "groupAccess": {
                    "$ref": "#/types/akamai:index/IamApiClientGroupAccess:IamApiClientGroupAccess",
                    "description": "Specifies the API client's group access."
                },
                "ipAcl": {
                    "$ref": "#/types/akamai:index/IamApiClientIpAcl:IamApiClientIpAcl",
                    "description": "Specifies the API client's IP list restriction."
                },
                "lock": {
                    "type": "boolean",
                    "description": "Whether to lock or unlock the API client."
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email addresses to notify users when credentials expire."
                },
                "purgeOptions": {
                    "$ref": "#/types/akamai:index/IamApiClientPurgeOptions:IamApiClientPurgeOptions",
                    "description": "Configures the API client to access the Fast Purge API. Provide it only if the \u003cspan pulumi-lang-nodejs=\"`apis`\" pulumi-lang-dotnet=\"`Apis`\" pulumi-lang-go=\"`apis`\" pulumi-lang-python=\"`apis`\" pulumi-lang-yaml=\"`apis`\" pulumi-lang-java=\"`apis`\"\u003e`apis`\u003c/span\u003e attribute includes an \u003cspan pulumi-lang-nodejs=\"`apiName`\" pulumi-lang-dotnet=\"`ApiName`\" pulumi-lang-go=\"`apiName`\" pulumi-lang-python=\"`api_name`\" pulumi-lang-yaml=\"`apiName`\" pulumi-lang-java=\"`apiName`\"\u003e`api_name`\u003c/span\u003e of `CCU API`."
                }
            },
            "required": [
                "accessToken",
                "actions",
                "activeCredentialCount",
                "allowAccountSwitch",
                "apiAccess",
                "authorizedUsers",
                "baseUrl",
                "canAutoCreateCredential",
                "clientDescription",
                "clientId",
                "clientName",
                "clientType",
                "createdBy",
                "createdDate",
                "credential",
                "groupAccess",
                "lock",
                "notificationEmails"
            ],
            "inputProperties": {
                "allowAccountSwitch": {
                    "type": "boolean",
                    "description": "Enables the API client to manage more than one account."
                },
                "apiAccess": {
                    "$ref": "#/types/akamai:index/IamApiClientApiAccess:IamApiClientApiAccess",
                    "description": "The APIs the API client can access."
                },
                "authorizedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single username in an array."
                },
                "canAutoCreateCredential": {
                    "type": "boolean",
                    "description": "Whether the API client can create a credential for a new API client. The default is false."
                },
                "clientDescription": {
                    "type": "string",
                    "description": "A human-readable description of the API client."
                },
                "clientName": {
                    "type": "string",
                    "description": "A human-readable name for the API client."
                },
                "clientType": {
                    "type": "string",
                    "description": "Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials."
                },
                "credential": {
                    "$ref": "#/types/akamai:index/IamApiClientCredential:IamApiClientCredential"
                },
                "groupAccess": {
                    "$ref": "#/types/akamai:index/IamApiClientGroupAccess:IamApiClientGroupAccess",
                    "description": "Specifies the API client's group access."
                },
                "ipAcl": {
                    "$ref": "#/types/akamai:index/IamApiClientIpAcl:IamApiClientIpAcl",
                    "description": "Specifies the API client's IP list restriction."
                },
                "lock": {
                    "type": "boolean",
                    "description": "Whether to lock or unlock the API client."
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email addresses to notify users when credentials expire."
                },
                "purgeOptions": {
                    "$ref": "#/types/akamai:index/IamApiClientPurgeOptions:IamApiClientPurgeOptions",
                    "description": "Configures the API client to access the Fast Purge API. Provide it only if the \u003cspan pulumi-lang-nodejs=\"`apis`\" pulumi-lang-dotnet=\"`Apis`\" pulumi-lang-go=\"`apis`\" pulumi-lang-python=\"`apis`\" pulumi-lang-yaml=\"`apis`\" pulumi-lang-java=\"`apis`\"\u003e`apis`\u003c/span\u003e attribute includes an \u003cspan pulumi-lang-nodejs=\"`apiName`\" pulumi-lang-dotnet=\"`ApiName`\" pulumi-lang-go=\"`apiName`\" pulumi-lang-python=\"`api_name`\" pulumi-lang-yaml=\"`apiName`\" pulumi-lang-java=\"`apiName`\"\u003e`api_name`\u003c/span\u003e of `CCU API`."
                }
            },
            "requiredInputs": [
                "apiAccess",
                "authorizedUsers",
                "clientName",
                "clientType",
                "credential",
                "groupAccess"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamApiClient resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "The part of the client secret that identifies your API client and lets you access applications and resources.",
                        "secret": true
                    },
                    "actions": {
                        "$ref": "#/types/akamai:index/IamApiClientActions:IamApiClientActions",
                        "description": "Specifies activities available for the API client."
                    },
                    "activeCredentialCount": {
                        "type": "integer",
                        "description": "The number of credentials active for the API client. When the count is zero, you can delete the API client without interruption."
                    },
                    "allowAccountSwitch": {
                        "type": "boolean",
                        "description": "Enables the API client to manage more than one account."
                    },
                    "apiAccess": {
                        "$ref": "#/types/akamai:index/IamApiClientApiAccess:IamApiClientApiAccess",
                        "description": "The APIs the API client can access."
                    },
                    "authorizedUsers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The API client's valid users. When the 'client_type' is either 'CLIENT' or 'USER_CLIENT', you need to specify a single username in an array."
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "The base URL for the service.",
                        "secret": true
                    },
                    "canAutoCreateCredential": {
                        "type": "boolean",
                        "description": "Whether the API client can create a credential for a new API client. The default is false."
                    },
                    "clientDescription": {
                        "type": "string",
                        "description": "A human-readable description of the API client."
                    },
                    "clientId": {
                        "type": "string",
                        "description": "A unique identifier for the API client."
                    },
                    "clientName": {
                        "type": "string",
                        "description": "A human-readable name for the API client."
                    },
                    "clientType": {
                        "type": "string",
                        "description": "Specifies the API client's ownership and credential management. 'CLIENT' indicates the creator owns and manages the credentials. 'USER_CLIENT' indicates another user owns the client and manages the credentials."
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The user who created the API client."
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The ISO 8601 timestamp indicating when the API client was created."
                    },
                    "credential": {
                        "$ref": "#/types/akamai:index/IamApiClientCredential:IamApiClientCredential"
                    },
                    "groupAccess": {
                        "$ref": "#/types/akamai:index/IamApiClientGroupAccess:IamApiClientGroupAccess",
                        "description": "Specifies the API client's group access."
                    },
                    "ipAcl": {
                        "$ref": "#/types/akamai:index/IamApiClientIpAcl:IamApiClientIpAcl",
                        "description": "Specifies the API client's IP list restriction."
                    },
                    "lock": {
                        "type": "boolean",
                        "description": "Whether to lock or unlock the API client."
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Email addresses to notify users when credentials expire."
                    },
                    "purgeOptions": {
                        "$ref": "#/types/akamai:index/IamApiClientPurgeOptions:IamApiClientPurgeOptions",
                        "description": "Configures the API client to access the Fast Purge API. Provide it only if the \u003cspan pulumi-lang-nodejs=\"`apis`\" pulumi-lang-dotnet=\"`Apis`\" pulumi-lang-go=\"`apis`\" pulumi-lang-python=\"`apis`\" pulumi-lang-yaml=\"`apis`\" pulumi-lang-java=\"`apis`\"\u003e`apis`\u003c/span\u003e attribute includes an \u003cspan pulumi-lang-nodejs=\"`apiName`\" pulumi-lang-dotnet=\"`ApiName`\" pulumi-lang-go=\"`apiName`\" pulumi-lang-python=\"`api_name`\" pulumi-lang-yaml=\"`apiName`\" pulumi-lang-java=\"`apiName`\"\u003e`api_name`\u003c/span\u003e of `CCU API`."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/iamBlockedUserProperties:IamBlockedUserProperties": {
            "properties": {
                "blockedProperties": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of properties to block for a user."
                },
                "groupId": {
                    "type": "integer",
                    "description": "A unique identifier for a group."
                },
                "identityId": {
                    "type": "string",
                    "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID."
                }
            },
            "required": [
                "blockedProperties",
                "groupId",
                "identityId"
            ],
            "inputProperties": {
                "blockedProperties": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of properties to block for a user."
                },
                "groupId": {
                    "type": "integer",
                    "description": "A unique identifier for a group.",
                    "willReplaceOnChanges": true
                },
                "identityId": {
                    "type": "string",
                    "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID."
                }
            },
            "requiredInputs": [
                "blockedProperties",
                "groupId",
                "identityId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamBlockedUserProperties resources.\n",
                "properties": {
                    "blockedProperties": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of properties to block for a user."
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "A unique identifier for a group.",
                        "willReplaceOnChanges": true
                    },
                    "identityId": {
                        "type": "string",
                        "description": "A unique identifier for a user's profile, which corresponds to a user's actual profile or client ID."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/iamCidrBlock:IamCidrBlock": {
            "properties": {
                "actions": {
                    "$ref": "#/types/akamai:index/IamCidrBlockActions:IamCidrBlockActions",
                    "description": "Specifies activities available for the CIDR block."
                },
                "cidrBlock": {
                    "type": "string",
                    "description": "The value of an IP address or IP address range."
                },
                "cidrBlockId": {
                    "type": "integer",
                    "description": "Unique identifier for each CIDR block."
                },
                "comments": {
                    "type": "string",
                    "description": "Descriptive label you provide for the CIDR block."
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the CIDR block."
                },
                "createdDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the CIDR block was created."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables the CIDR block on the account."
                },
                "modifiedBy": {
                    "type": "string",
                    "description": "The user who last edited the CIDR block."
                },
                "modifiedDate": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the CIDR block was last modified."
                }
            },
            "required": [
                "actions",
                "cidrBlock",
                "cidrBlockId",
                "createdBy",
                "createdDate",
                "enabled",
                "modifiedBy",
                "modifiedDate"
            ],
            "inputProperties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "The value of an IP address or IP address range."
                },
                "comments": {
                    "type": "string",
                    "description": "Descriptive label you provide for the CIDR block."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enables the CIDR block on the account."
                }
            },
            "requiredInputs": [
                "cidrBlock",
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamCidrBlock resources.\n",
                "properties": {
                    "actions": {
                        "$ref": "#/types/akamai:index/IamCidrBlockActions:IamCidrBlockActions",
                        "description": "Specifies activities available for the CIDR block."
                    },
                    "cidrBlock": {
                        "type": "string",
                        "description": "The value of an IP address or IP address range."
                    },
                    "cidrBlockId": {
                        "type": "integer",
                        "description": "Unique identifier for each CIDR block."
                    },
                    "comments": {
                        "type": "string",
                        "description": "Descriptive label you provide for the CIDR block."
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The user who created the CIDR block."
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "ISO 8601 timestamp indicating when the CIDR block was created."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enables the CIDR block on the account."
                    },
                    "modifiedBy": {
                        "type": "string",
                        "description": "The user who last edited the CIDR block."
                    },
                    "modifiedDate": {
                        "type": "string",
                        "description": "ISO 8601 timestamp indicating when the CIDR block was last modified."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/iamGroup:IamGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Human readable name for a group."
                },
                "parentGroupId": {
                    "type": "integer",
                    "description": "Unique identifier for the parent group."
                },
                "subGroups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Subgroups IDs."
                }
            },
            "required": [
                "name",
                "parentGroupId",
                "subGroups"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Human readable name for a group."
                },
                "parentGroupId": {
                    "type": "integer",
                    "description": "Unique identifier for the parent group."
                }
            },
            "requiredInputs": [
                "parentGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamGroup resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Human readable name for a group."
                    },
                    "parentGroupId": {
                        "type": "integer",
                        "description": "Unique identifier for the parent group."
                    },
                    "subGroups": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Subgroups IDs."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/iamIpAllowlist:IamIpAllowlist": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Whether to enable or disable the allowlist."
                }
            },
            "required": [
                "enable"
            ],
            "inputProperties": {
                "enable": {
                    "type": "boolean",
                    "description": "Whether to enable or disable the allowlist."
                }
            },
            "requiredInputs": [
                "enable"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamIpAllowlist resources.\n",
                "properties": {
                    "enable": {
                        "type": "boolean",
                        "description": "Whether to enable or disable the allowlist."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/iamRole:IamRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description for a role."
                },
                "grantedRoles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of existing unique identifiers for the granted roles."
                },
                "name": {
                    "type": "string",
                    "description": "The name you supply for a role."
                },
                "type": {
                    "type": "string",
                    "description": "The role type which indicates whether it's a standard role provided by Akamai or a custom role for the account."
                }
            },
            "required": [
                "description",
                "grantedRoles",
                "name",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description for a role."
                },
                "grantedRoles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of existing unique identifiers for the granted roles."
                },
                "name": {
                    "type": "string",
                    "description": "The name you supply for a role."
                },
                "type": {
                    "type": "string",
                    "description": "The role type which indicates whether it's a standard role provided by Akamai or a custom role for the account."
                }
            },
            "requiredInputs": [
                "description",
                "grantedRoles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamRole resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description for a role."
                    },
                    "grantedRoles": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of existing unique identifiers for the granted roles."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name you supply for a role."
                    },
                    "type": {
                        "type": "string",
                        "description": "The role type which indicates whether it's a standard role provided by Akamai or a custom role for the account."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/iamUser:IamUser": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The user's street address."
                },
                "authGrantsJson": {
                    "type": "string",
                    "description": "A user's per-group role assignments, in JSON form."
                },
                "city": {
                    "type": "string",
                    "description": "The user's city."
                },
                "contactType": {
                    "type": "string",
                    "description": "To help characterize the user, the value can be any that are available from the view-contact-types operation."
                },
                "country": {
                    "type": "string",
                    "description": "As part of the user's location, the value can be any that are available from the view-supported-countries operation."
                },
                "email": {
                    "type": "string",
                    "description": "The user's email address."
                },
                "emailUpdatePending": {
                    "type": "boolean",
                    "description": "Indicates whether email update is pending."
                },
                "enableMfa": {
                    "type": "boolean",
                    "description": "Indicates whether multi-factor authentication is allowed."
                },
                "enableTfa": {
                    "type": "boolean",
                    "description": "Indicates whether two-factor authentication is allowed."
                },
                "firstName": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "jobTitle": {
                    "type": "string",
                    "description": "The user's position at your company."
                },
                "lastLogin": {
                    "type": "string",
                    "description": "ISO 8601 timestamp indicating when the user last logged in."
                },
                "lastName": {
                    "type": "string",
                    "description": "The user's surname."
                },
                "lock": {
                    "type": "boolean",
                    "description": "Flag to block a user account."
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "The user's mobile phone number."
                },
                "password": {
                    "type": "string",
                    "description": "New password for a user.",
                    "secret": true
                },
                "passwordExpiredAfter": {
                    "type": "string",
                    "description": "The date a user's password expires."
                },
                "phone": {
                    "type": "string",
                    "description": "The user's main phone number."
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "The value can be any that are available from the view-languages operation."
                },
                "secondaryEmail": {
                    "type": "string",
                    "description": "The user's secondary email address."
                },
                "sessionTimeout": {
                    "type": "integer",
                    "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity."
                },
                "state": {
                    "type": "string",
                    "description": "The user's state."
                },
                "tfaConfigured": {
                    "type": "boolean",
                    "description": "Indicates whether two-factor authentication is configured."
                },
                "timeZone": {
                    "type": "string",
                    "description": "The user's time zone. The value can be any that are available from the view-time-zones operation."
                },
                "userName": {
                    "type": "string",
                    "description": "A user's `loginId`. Typically, a user's email address."
                },
                "userNotifications": {
                    "$ref": "#/types/akamai:index/IamUserUserNotifications:IamUserUserNotifications",
                    "description": "Specifies email notifications the user receives for products."
                },
                "zipCode": {
                    "type": "string",
                    "description": "The user's five-digit ZIP code."
                }
            },
            "required": [
                "address",
                "authGrantsJson",
                "contactType",
                "country",
                "email",
                "emailUpdatePending",
                "firstName",
                "lastLogin",
                "lastName",
                "passwordExpiredAfter",
                "preferredLanguage",
                "sessionTimeout",
                "tfaConfigured",
                "timeZone",
                "userName",
                "userNotifications"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The user's street address."
                },
                "authGrantsJson": {
                    "type": "string",
                    "description": "A user's per-group role assignments, in JSON form."
                },
                "city": {
                    "type": "string",
                    "description": "The user's city."
                },
                "contactType": {
                    "type": "string",
                    "description": "To help characterize the user, the value can be any that are available from the view-contact-types operation."
                },
                "country": {
                    "type": "string",
                    "description": "As part of the user's location, the value can be any that are available from the view-supported-countries operation."
                },
                "email": {
                    "type": "string",
                    "description": "The user's email address."
                },
                "enableMfa": {
                    "type": "boolean",
                    "description": "Indicates whether multi-factor authentication is allowed."
                },
                "enableTfa": {
                    "type": "boolean",
                    "description": "Indicates whether two-factor authentication is allowed."
                },
                "firstName": {
                    "type": "string",
                    "description": "The user's first name."
                },
                "jobTitle": {
                    "type": "string",
                    "description": "The user's position at your company."
                },
                "lastName": {
                    "type": "string",
                    "description": "The user's surname."
                },
                "lock": {
                    "type": "boolean",
                    "description": "Flag to block a user account."
                },
                "mobilePhone": {
                    "type": "string",
                    "description": "The user's mobile phone number."
                },
                "password": {
                    "type": "string",
                    "description": "New password for a user.",
                    "secret": true
                },
                "phone": {
                    "type": "string",
                    "description": "The user's main phone number."
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "The value can be any that are available from the view-languages operation."
                },
                "secondaryEmail": {
                    "type": "string",
                    "description": "The user's secondary email address."
                },
                "sessionTimeout": {
                    "type": "integer",
                    "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity."
                },
                "state": {
                    "type": "string",
                    "description": "The user's state."
                },
                "timeZone": {
                    "type": "string",
                    "description": "The user's time zone. The value can be any that are available from the view-time-zones operation."
                },
                "userNotifications": {
                    "$ref": "#/types/akamai:index/IamUserUserNotifications:IamUserUserNotifications",
                    "description": "Specifies email notifications the user receives for products."
                },
                "zipCode": {
                    "type": "string",
                    "description": "The user's five-digit ZIP code."
                }
            },
            "requiredInputs": [
                "authGrantsJson",
                "country",
                "email",
                "firstName",
                "lastName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IamUser resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The user's street address."
                    },
                    "authGrantsJson": {
                        "type": "string",
                        "description": "A user's per-group role assignments, in JSON form."
                    },
                    "city": {
                        "type": "string",
                        "description": "The user's city."
                    },
                    "contactType": {
                        "type": "string",
                        "description": "To help characterize the user, the value can be any that are available from the view-contact-types operation."
                    },
                    "country": {
                        "type": "string",
                        "description": "As part of the user's location, the value can be any that are available from the view-supported-countries operation."
                    },
                    "email": {
                        "type": "string",
                        "description": "The user's email address."
                    },
                    "emailUpdatePending": {
                        "type": "boolean",
                        "description": "Indicates whether email update is pending."
                    },
                    "enableMfa": {
                        "type": "boolean",
                        "description": "Indicates whether multi-factor authentication is allowed."
                    },
                    "enableTfa": {
                        "type": "boolean",
                        "description": "Indicates whether two-factor authentication is allowed."
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The user's first name."
                    },
                    "jobTitle": {
                        "type": "string",
                        "description": "The user's position at your company."
                    },
                    "lastLogin": {
                        "type": "string",
                        "description": "ISO 8601 timestamp indicating when the user last logged in."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The user's surname."
                    },
                    "lock": {
                        "type": "boolean",
                        "description": "Flag to block a user account."
                    },
                    "mobilePhone": {
                        "type": "string",
                        "description": "The user's mobile phone number."
                    },
                    "password": {
                        "type": "string",
                        "description": "New password for a user.",
                        "secret": true
                    },
                    "passwordExpiredAfter": {
                        "type": "string",
                        "description": "The date a user's password expires."
                    },
                    "phone": {
                        "type": "string",
                        "description": "The user's main phone number."
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "The value can be any that are available from the view-languages operation."
                    },
                    "secondaryEmail": {
                        "type": "string",
                        "description": "The user's secondary email address."
                    },
                    "sessionTimeout": {
                        "type": "integer",
                        "description": "The number of seconds it takes for the user's Control Center session to time out if there hasn't been any activity."
                    },
                    "state": {
                        "type": "string",
                        "description": "The user's state."
                    },
                    "tfaConfigured": {
                        "type": "boolean",
                        "description": "Indicates whether two-factor authentication is configured."
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "The user's time zone. The value can be any that are available from the view-time-zones operation."
                    },
                    "userName": {
                        "type": "string",
                        "description": "A user's `loginId`. Typically, a user's email address."
                    },
                    "userNotifications": {
                        "$ref": "#/types/akamai:index/IamUserUserNotifications:IamUserUserNotifications",
                        "description": "Specifies email notifications the user receives for products."
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "The user's five-digit ZIP code."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/imagingPolicyImage:ImagingPolicyImage": {
            "properties": {
                "activateOnProduction": {
                    "type": "boolean",
                    "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved to production. With this flag set to true, the policy will be saved on the production network. It is possible to change it back to false only when there are any changes to the policy qualifying it for the new version."
                },
                "contractId": {
                    "type": "string",
                    "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)"
                },
                "json": {
                    "type": "string",
                    "description": "A JSON encoded policy"
                },
                "policyId": {
                    "type": "string",
                    "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy."
                },
                "policysetId": {
                    "type": "string",
                    "description": "Unique identifier for the Image \u0026 Video Manager Policy Set."
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this policy version"
                }
            },
            "required": [
                "contractId",
                "json",
                "policyId",
                "policysetId",
                "version"
            ],
            "inputProperties": {
                "activateOnProduction": {
                    "type": "boolean",
                    "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved to production. With this flag set to true, the policy will be saved on the production network. It is possible to change it back to false only when there are any changes to the policy qualifying it for the new version."
                },
                "contractId": {
                    "type": "string",
                    "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)",
                    "willReplaceOnChanges": true
                },
                "json": {
                    "type": "string",
                    "description": "A JSON encoded policy"
                },
                "policyId": {
                    "type": "string",
                    "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy.",
                    "willReplaceOnChanges": true
                },
                "policysetId": {
                    "type": "string",
                    "description": "Unique identifier for the Image \u0026 Video Manager Policy Set.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "contractId",
                "json",
                "policyId",
                "policysetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ImagingPolicyImage resources.\n",
                "properties": {
                    "activateOnProduction": {
                        "type": "boolean",
                        "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved to production. With this flag set to true, the policy will be saved on the production network. It is possible to change it back to false only when there are any changes to the policy qualifying it for the new version."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)",
                        "willReplaceOnChanges": true
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON encoded policy"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy.",
                        "willReplaceOnChanges": true
                    },
                    "policysetId": {
                        "type": "string",
                        "description": "Unique identifier for the Image \u0026 Video Manager Policy Set.",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of this policy version"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/imagingPolicySet:ImagingPolicySet": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "description": "The unique identifier for the Akamai Contract containing the Policy Set(s)"
                },
                "name": {
                    "type": "string",
                    "description": "A friendly name for the Policy Set"
                },
                "region": {
                    "type": "string",
                    "description": "The geographic region which media using this Policy Set is optimized for"
                },
                "type": {
                    "type": "string",
                    "description": "The type of media this Policy Set manages"
                }
            },
            "required": [
                "contractId",
                "name",
                "region",
                "type"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "The unique identifier for the Akamai Contract containing the Policy Set(s)",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "A friendly name for the Policy Set"
                },
                "region": {
                    "type": "string",
                    "description": "The geographic region which media using this Policy Set is optimized for"
                },
                "type": {
                    "type": "string",
                    "description": "The type of media this Policy Set manages",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "contractId",
                "region",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ImagingPolicySet resources.\n",
                "properties": {
                    "contractId": {
                        "type": "string",
                        "description": "The unique identifier for the Akamai Contract containing the Policy Set(s)",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A friendly name for the Policy Set"
                    },
                    "region": {
                        "type": "string",
                        "description": "The geographic region which media using this Policy Set is optimized for"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of media this Policy Set manages",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/imagingPolicyVideo:ImagingPolicyVideo": {
            "properties": {
                "activateOnProduction": {
                    "type": "boolean",
                    "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved to production. With this flag set to true, the policy will be saved on the production network. It is possible to change it back to false only when there are any changes to the policy qualifying it for the new version."
                },
                "contractId": {
                    "type": "string",
                    "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)"
                },
                "json": {
                    "type": "string",
                    "description": "A JSON encoded policy"
                },
                "policyId": {
                    "type": "string",
                    "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy."
                },
                "policysetId": {
                    "type": "string",
                    "description": "Unique identifier for the Image \u0026 Video Manager Policy Set."
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of this policy version"
                }
            },
            "required": [
                "contractId",
                "json",
                "policyId",
                "policysetId",
                "version"
            ],
            "inputProperties": {
                "activateOnProduction": {
                    "type": "boolean",
                    "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved to production. With this flag set to true, the policy will be saved on the production network. It is possible to change it back to false only when there are any changes to the policy qualifying it for the new version."
                },
                "contractId": {
                    "type": "string",
                    "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)",
                    "willReplaceOnChanges": true
                },
                "json": {
                    "type": "string",
                    "description": "A JSON encoded policy"
                },
                "policyId": {
                    "type": "string",
                    "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy.",
                    "willReplaceOnChanges": true
                },
                "policysetId": {
                    "type": "string",
                    "description": "Unique identifier for the Image \u0026 Video Manager Policy Set.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "contractId",
                "json",
                "policyId",
                "policysetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ImagingPolicyVideo resources.\n",
                "properties": {
                    "activateOnProduction": {
                        "type": "boolean",
                        "description": "With this flag set to false, the user can perform modifications on staging without affecting the version already saved to production. With this flag set to true, the policy will be saved on the production network. It is possible to change it back to false only when there are any changes to the policy qualifying it for the new version."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Unique identifier for the Akamai Contract containing the Policy Set(s)",
                        "willReplaceOnChanges": true
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON encoded policy"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "Unique identifier for a Policy. It is not possible to modify the id of the policy.",
                        "willReplaceOnChanges": true
                    },
                    "policysetId": {
                        "type": "string",
                        "description": "Unique identifier for the Image \u0026 Video Manager Policy Set.",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of this policy version"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/mtlskeystoreClientCertificateAkamai:MtlskeystoreClientCertificateAkamai": {
            "properties": {
                "certificateId": {
                    "type": "integer",
                    "description": "The unique identifier of the client certificate."
                },
                "certificateName": {
                    "type": "string",
                    "description": "The name of the client certificate. Must be between 1 and 64 characters."
                },
                "contractId": {
                    "type": "string",
                    "description": "The contract assigned to the client certificate. Must have a length of at least 1."
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user who created the client certificate. Read-only."
                },
                "createdDate": {
                    "type": "string",
                    "description": "An ISO 8601 timestamp indicating the client certificate's creation. Read-only."
                },
                "currentGuid": {
                    "type": "string",
                    "description": "Unique identifier for the \u003cspan pulumi-lang-nodejs=\"`current`\" pulumi-lang-dotnet=\"`Current`\" pulumi-lang-go=\"`current`\" pulumi-lang-python=\"`current`\" pulumi-lang-yaml=\"`current`\" pulumi-lang-java=\"`current`\"\u003e`current`\u003c/span\u003e client certificate version."
                },
                "geography": {
                    "type": "string",
                    "description": "Specifies the type of network to deploy the client certificate. Possible values: `CORE`, `RUSSIA_AND_CORE`, or `CHINA_AND_CORE`."
                },
                "groupId": {
                    "type": "integer",
                    "description": "The group assigned to the client certificate. Must be greater than or equal to 0."
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "The cryptographic algorithm used for key generation. Possible values: `RSA` or `ECDSA`."
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The email addresses to notify for client certificate-related issues. Must have at least one email address."
                },
                "previousGuid": {
                    "type": "string",
                    "description": "Unique identifier for the \u003cspan pulumi-lang-nodejs=\"`previous`\" pulumi-lang-dotnet=\"`Previous`\" pulumi-lang-go=\"`previous`\" pulumi-lang-python=\"`previous`\" pulumi-lang-yaml=\"`previous`\" pulumi-lang-java=\"`previous`\"\u003e`previous`\u003c/span\u003e client certificate version."
                },
                "secureNetwork": {
                    "type": "string",
                    "description": "Identifies the network deployment type. Possible values: `STANDARD_TLS` or `ENHANCED_TLS`."
                },
                "subject": {
                    "type": "string",
                    "description": "The CA certificate’s key value details. The `CN` attribute is required and included in the subject. When not specified, the subject is constructed in this format: `/C=US/O=Akamai Technologies, Inc./OU={vcd_id} {contract_id} {group_id}/CN={certificate_name}/`."
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateAkamaiVersion:MtlskeystoreClientCertificateAkamaiVersion"
                    },
                    "description": "A list of client certificate versions. Each version represents a specific iteration of the client certificate."
                }
            },
            "required": [
                "certificateId",
                "certificateName",
                "contractId",
                "createdBy",
                "createdDate",
                "currentGuid",
                "geography",
                "groupId",
                "keyAlgorithm",
                "notificationEmails",
                "previousGuid",
                "secureNetwork",
                "subject",
                "versions"
            ],
            "inputProperties": {
                "certificateName": {
                    "type": "string",
                    "description": "The name of the client certificate. Must be between 1 and 64 characters."
                },
                "contractId": {
                    "type": "string",
                    "description": "The contract assigned to the client certificate. Must have a length of at least 1."
                },
                "geography": {
                    "type": "string",
                    "description": "Specifies the type of network to deploy the client certificate. Possible values: `CORE`, `RUSSIA_AND_CORE`, or `CHINA_AND_CORE`."
                },
                "groupId": {
                    "type": "integer",
                    "description": "The group assigned to the client certificate. Must be greater than or equal to 0."
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "The cryptographic algorithm used for key generation. Possible values: `RSA` or `ECDSA`."
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The email addresses to notify for client certificate-related issues. Must have at least one email address."
                },
                "secureNetwork": {
                    "type": "string",
                    "description": "Identifies the network deployment type. Possible values: `STANDARD_TLS` or `ENHANCED_TLS`."
                },
                "subject": {
                    "type": "string",
                    "description": "The CA certificate’s key value details. The `CN` attribute is required and included in the subject. When not specified, the subject is constructed in this format: `/C=US/O=Akamai Technologies, Inc./OU={vcd_id} {contract_id} {group_id}/CN={certificate_name}/`."
                }
            },
            "requiredInputs": [
                "certificateName",
                "contractId",
                "geography",
                "groupId",
                "notificationEmails",
                "secureNetwork"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MtlskeystoreClientCertificateAkamai resources.\n",
                "properties": {
                    "certificateId": {
                        "type": "integer",
                        "description": "The unique identifier of the client certificate."
                    },
                    "certificateName": {
                        "type": "string",
                        "description": "The name of the client certificate. Must be between 1 and 64 characters."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "The contract assigned to the client certificate. Must have a length of at least 1."
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The user who created the client certificate. Read-only."
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "An ISO 8601 timestamp indicating the client certificate's creation. Read-only."
                    },
                    "currentGuid": {
                        "type": "string",
                        "description": "Unique identifier for the \u003cspan pulumi-lang-nodejs=\"`current`\" pulumi-lang-dotnet=\"`Current`\" pulumi-lang-go=\"`current`\" pulumi-lang-python=\"`current`\" pulumi-lang-yaml=\"`current`\" pulumi-lang-java=\"`current`\"\u003e`current`\u003c/span\u003e client certificate version."
                    },
                    "geography": {
                        "type": "string",
                        "description": "Specifies the type of network to deploy the client certificate. Possible values: `CORE`, `RUSSIA_AND_CORE`, or `CHINA_AND_CORE`."
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "The group assigned to the client certificate. Must be greater than or equal to 0."
                    },
                    "keyAlgorithm": {
                        "type": "string",
                        "description": "The cryptographic algorithm used for key generation. Possible values: `RSA` or `ECDSA`."
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The email addresses to notify for client certificate-related issues. Must have at least one email address."
                    },
                    "previousGuid": {
                        "type": "string",
                        "description": "Unique identifier for the \u003cspan pulumi-lang-nodejs=\"`previous`\" pulumi-lang-dotnet=\"`Previous`\" pulumi-lang-go=\"`previous`\" pulumi-lang-python=\"`previous`\" pulumi-lang-yaml=\"`previous`\" pulumi-lang-java=\"`previous`\"\u003e`previous`\u003c/span\u003e client certificate version."
                    },
                    "secureNetwork": {
                        "type": "string",
                        "description": "Identifies the network deployment type. Possible values: `STANDARD_TLS` or `ENHANCED_TLS`."
                    },
                    "subject": {
                        "type": "string",
                        "description": "The CA certificate’s key value details. The `CN` attribute is required and included in the subject. When not specified, the subject is constructed in this format: `/C=US/O=Akamai Technologies, Inc./OU={vcd_id} {contract_id} {group_id}/CN={certificate_name}/`."
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateAkamaiVersion:MtlskeystoreClientCertificateAkamaiVersion"
                        },
                        "description": "A list of client certificate versions. Each version represents a specific iteration of the client certificate."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/mtlskeystoreClientCertificateThirdParty:MtlskeystoreClientCertificateThirdParty": {
            "properties": {
                "certificateId": {
                    "type": "integer",
                    "description": "The unique identifier of the client certificate."
                },
                "certificateName": {
                    "type": "string",
                    "description": "The name of the client certificate. Must be between 1 and 64 characters."
                },
                "contractId": {
                    "type": "string",
                    "description": "The contract assigned to the client certificate. Must have a length of at least 1."
                },
                "geography": {
                    "type": "string",
                    "description": "Specifies the type of network to deploy the client certificate. Possible values: `CORE`, `RUSSIA_AND_CORE`, or `CHINA_AND_CORE`."
                },
                "groupId": {
                    "type": "integer",
                    "description": "The group assigned to the client certificate. Must be greater than or equal to 0."
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "The cryptographic algorithm used for key generation. Possible values: `RSA` or `ECDSA`. The default is `RSA`."
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The email addresses to notify for client certificate-related issues. Must have at least one email address."
                },
                "secureNetwork": {
                    "type": "string",
                    "description": "Identifies the network deployment type. Possible values: `STANDARD_TLS` or `ENHANCED_TLS`."
                },
                "subject": {
                    "type": "string",
                    "description": "The CA certificate’s key value details. The `CN` attribute is required and included in the subject. When not specified, the subject is constructed in this format: `/C=US/O=Akamai Technologies, Inc./OU={vcd_id} {contract_id} {group_id}/CN={certificate_name}/`."
                },
                "versions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateThirdPartyVersions:MtlskeystoreClientCertificateThirdPartyVersions"
                    },
                    "description": "A map of client certificate versions as a value and user defined identifier as a key. Each version represents a specific iteration of the client certificate."
                }
            },
            "required": [
                "certificateId",
                "certificateName",
                "contractId",
                "geography",
                "groupId",
                "keyAlgorithm",
                "notificationEmails",
                "secureNetwork",
                "subject",
                "versions"
            ],
            "inputProperties": {
                "certificateName": {
                    "type": "string",
                    "description": "The name of the client certificate. Must be between 1 and 64 characters."
                },
                "contractId": {
                    "type": "string",
                    "description": "The contract assigned to the client certificate. Must have a length of at least 1."
                },
                "geography": {
                    "type": "string",
                    "description": "Specifies the type of network to deploy the client certificate. Possible values: `CORE`, `RUSSIA_AND_CORE`, or `CHINA_AND_CORE`."
                },
                "groupId": {
                    "type": "integer",
                    "description": "The group assigned to the client certificate. Must be greater than or equal to 0."
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "The cryptographic algorithm used for key generation. Possible values: `RSA` or `ECDSA`. The default is `RSA`."
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The email addresses to notify for client certificate-related issues. Must have at least one email address."
                },
                "secureNetwork": {
                    "type": "string",
                    "description": "Identifies the network deployment type. Possible values: `STANDARD_TLS` or `ENHANCED_TLS`."
                },
                "subject": {
                    "type": "string",
                    "description": "The CA certificate’s key value details. The `CN` attribute is required and included in the subject. When not specified, the subject is constructed in this format: `/C=US/O=Akamai Technologies, Inc./OU={vcd_id} {contract_id} {group_id}/CN={certificate_name}/`."
                },
                "versions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateThirdPartyVersions:MtlskeystoreClientCertificateThirdPartyVersions"
                    },
                    "description": "A map of client certificate versions as a value and user defined identifier as a key. Each version represents a specific iteration of the client certificate."
                }
            },
            "requiredInputs": [
                "certificateName",
                "contractId",
                "geography",
                "groupId",
                "notificationEmails",
                "secureNetwork",
                "versions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MtlskeystoreClientCertificateThirdParty resources.\n",
                "properties": {
                    "certificateId": {
                        "type": "integer",
                        "description": "The unique identifier of the client certificate."
                    },
                    "certificateName": {
                        "type": "string",
                        "description": "The name of the client certificate. Must be between 1 and 64 characters."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "The contract assigned to the client certificate. Must have a length of at least 1."
                    },
                    "geography": {
                        "type": "string",
                        "description": "Specifies the type of network to deploy the client certificate. Possible values: `CORE`, `RUSSIA_AND_CORE`, or `CHINA_AND_CORE`."
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "The group assigned to the client certificate. Must be greater than or equal to 0."
                    },
                    "keyAlgorithm": {
                        "type": "string",
                        "description": "The cryptographic algorithm used for key generation. Possible values: `RSA` or `ECDSA`. The default is `RSA`."
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The email addresses to notify for client certificate-related issues. Must have at least one email address."
                    },
                    "secureNetwork": {
                        "type": "string",
                        "description": "Identifies the network deployment type. Possible values: `STANDARD_TLS` or `ENHANCED_TLS`."
                    },
                    "subject": {
                        "type": "string",
                        "description": "The CA certificate’s key value details. The `CN` attribute is required and included in the subject. When not specified, the subject is constructed in this format: `/C=US/O=Akamai Technologies, Inc./OU={vcd_id} {contract_id} {group_id}/CN={certificate_name}/`."
                    },
                    "versions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateThirdPartyVersions:MtlskeystoreClientCertificateThirdPartyVersions"
                        },
                        "description": "A map of client certificate versions as a value and user defined identifier as a key. Each version represents a specific iteration of the client certificate."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/mtlskeystoreClientCertificateUpload:MtlskeystoreClientCertificateUpload": {
            "properties": {
                "autoAcknowledgeWarnings": {
                    "type": "boolean",
                    "description": "If set to true, all warnings will be acknowledged automatically. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e."
                },
                "clientCertificateId": {
                    "type": "integer",
                    "description": "The ID of the client certificate to which the signed certificate will be uploaded."
                },
                "signedCertificate": {
                    "type": "string",
                    "description": "The signed certificate to upload."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateUploadTimeouts:MtlskeystoreClientCertificateUploadTimeouts"
                },
                "trustChain": {
                    "type": "string",
                    "description": "The optional trust chain associated with the signed certificate."
                },
                "versionGuid": {
                    "type": "string",
                    "description": "A unique identifier for the client certificate version."
                },
                "versionNumber": {
                    "type": "integer",
                    "description": "The version number of the client certificate to upload the signed certificate to."
                },
                "waitForDeployment": {
                    "type": "boolean",
                    "description": "Indicates whether to wait for the deployment of the uploaded certificate. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e."
                }
            },
            "required": [
                "autoAcknowledgeWarnings",
                "clientCertificateId",
                "signedCertificate",
                "versionGuid",
                "versionNumber",
                "waitForDeployment"
            ],
            "inputProperties": {
                "autoAcknowledgeWarnings": {
                    "type": "boolean",
                    "description": "If set to true, all warnings will be acknowledged automatically. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e."
                },
                "clientCertificateId": {
                    "type": "integer",
                    "description": "The ID of the client certificate to which the signed certificate will be uploaded."
                },
                "signedCertificate": {
                    "type": "string",
                    "description": "The signed certificate to upload."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateUploadTimeouts:MtlskeystoreClientCertificateUploadTimeouts"
                },
                "trustChain": {
                    "type": "string",
                    "description": "The optional trust chain associated with the signed certificate."
                },
                "versionNumber": {
                    "type": "integer",
                    "description": "The version number of the client certificate to upload the signed certificate to."
                },
                "waitForDeployment": {
                    "type": "boolean",
                    "description": "Indicates whether to wait for the deployment of the uploaded certificate. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e."
                }
            },
            "requiredInputs": [
                "clientCertificateId",
                "signedCertificate",
                "versionNumber"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MtlskeystoreClientCertificateUpload resources.\n",
                "properties": {
                    "autoAcknowledgeWarnings": {
                        "type": "boolean",
                        "description": "If set to true, all warnings will be acknowledged automatically. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e."
                    },
                    "clientCertificateId": {
                        "type": "integer",
                        "description": "The ID of the client certificate to which the signed certificate will be uploaded."
                    },
                    "signedCertificate": {
                        "type": "string",
                        "description": "The signed certificate to upload."
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/MtlskeystoreClientCertificateUploadTimeouts:MtlskeystoreClientCertificateUploadTimeouts"
                    },
                    "trustChain": {
                        "type": "string",
                        "description": "The optional trust chain associated with the signed certificate."
                    },
                    "versionGuid": {
                        "type": "string",
                        "description": "A unique identifier for the client certificate version."
                    },
                    "versionNumber": {
                        "type": "integer",
                        "description": "The version number of the client certificate to upload the signed certificate to."
                    },
                    "waitForDeployment": {
                        "type": "boolean",
                        "description": "Indicates whether to wait for the deployment of the uploaded certificate. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/networkList:NetworkList": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "description": "contract ID"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the network list"
                },
                "groupId": {
                    "type": "integer",
                    "description": "group ID"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IP addresses or locations to be included in the list, added to an existing list, or removed from an existing list"
                },
                "mode": {
                    "type": "string",
                    "description": "A string specifying the interpretation of the \u003cspan pulumi-lang-nodejs=\"`list`\" pulumi-lang-dotnet=\"`List`\" pulumi-lang-go=\"`list`\" pulumi-lang-python=\"`list`\" pulumi-lang-yaml=\"`list`\" pulumi-lang-java=\"`list`\"\u003e`list`\u003c/span\u003e parameter. Must be 'APPEND', 'REPLACE', or 'REMOVE'"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the network list"
                },
                "networkListId": {
                    "type": "string",
                    "description": "network list ID"
                },
                "syncPoint": {
                    "type": "integer",
                    "description": "sync point"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the network list; must be either 'IP' or 'GEO'"
                },
                "uniqueid": {
                    "type": "string",
                    "description": "unique ID"
                }
            },
            "required": [
                "description",
                "mode",
                "name",
                "networkListId",
                "syncPoint",
                "type",
                "uniqueid"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "contract ID"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the network list"
                },
                "groupId": {
                    "type": "integer",
                    "description": "group ID"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IP addresses or locations to be included in the list, added to an existing list, or removed from an existing list"
                },
                "mode": {
                    "type": "string",
                    "description": "A string specifying the interpretation of the \u003cspan pulumi-lang-nodejs=\"`list`\" pulumi-lang-dotnet=\"`List`\" pulumi-lang-go=\"`list`\" pulumi-lang-python=\"`list`\" pulumi-lang-yaml=\"`list`\" pulumi-lang-java=\"`list`\"\u003e`list`\u003c/span\u003e parameter. Must be 'APPEND', 'REPLACE', or 'REMOVE'"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the network list"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the network list; must be either 'IP' or 'GEO'"
                }
            },
            "requiredInputs": [
                "description",
                "mode",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkList resources.\n",
                "properties": {
                    "contractId": {
                        "type": "string",
                        "description": "contract ID"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the network list"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "group ID"
                    },
                    "lists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of IP addresses or locations to be included in the list, added to an existing list, or removed from an existing list"
                    },
                    "mode": {
                        "type": "string",
                        "description": "A string specifying the interpretation of the \u003cspan pulumi-lang-nodejs=\"`list`\" pulumi-lang-dotnet=\"`List`\" pulumi-lang-go=\"`list`\" pulumi-lang-python=\"`list`\" pulumi-lang-yaml=\"`list`\" pulumi-lang-java=\"`list`\"\u003e`list`\u003c/span\u003e parameter. Must be 'APPEND', 'REPLACE', or 'REMOVE'"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name to be assigned to the network list"
                    },
                    "networkListId": {
                        "type": "string",
                        "description": "network list ID"
                    },
                    "syncPoint": {
                        "type": "integer",
                        "description": "sync point"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the network list; must be either 'IP' or 'GEO'"
                    },
                    "uniqueid": {
                        "type": "string",
                        "description": "unique ID"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/networkListActivations:NetworkListActivations": {
            "properties": {
                "network": {
                    "type": "string",
                    "description": "The Akamai network on which the list is activated: STAGING or PRODUCTION"
                },
                "networkListId": {
                    "type": "string",
                    "description": "Unique identifier of the network list"
                },
                "notes": {
                    "type": "string",
                    "description": "Descriptive text to accompany the activation"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of email addresses of Control Center users who receive an email when activation of this list is complete"
                },
                "status": {
                    "type": "string",
                    "description": "This network list's current activation status in the environment specified by the \"network\" attribute"
                },
                "syncPoint": {
                    "type": "integer",
                    "description": "Identifies the sync point of the network list to be activated"
                }
            },
            "required": [
                "networkListId",
                "notificationEmails",
                "status",
                "syncPoint"
            ],
            "inputProperties": {
                "network": {
                    "type": "string",
                    "description": "The Akamai network on which the list is activated: STAGING or PRODUCTION"
                },
                "networkListId": {
                    "type": "string",
                    "description": "Unique identifier of the network list",
                    "willReplaceOnChanges": true
                },
                "notes": {
                    "type": "string",
                    "description": "Descriptive text to accompany the activation"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of email addresses of Control Center users who receive an email when activation of this list is complete"
                },
                "syncPoint": {
                    "type": "integer",
                    "description": "Identifies the sync point of the network list to be activated"
                }
            },
            "requiredInputs": [
                "networkListId",
                "notificationEmails",
                "syncPoint"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkListActivations resources.\n",
                "properties": {
                    "network": {
                        "type": "string",
                        "description": "The Akamai network on which the list is activated: STAGING or PRODUCTION"
                    },
                    "networkListId": {
                        "type": "string",
                        "description": "Unique identifier of the network list",
                        "willReplaceOnChanges": true
                    },
                    "notes": {
                        "type": "string",
                        "description": "Descriptive text to accompany the activation"
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of email addresses of Control Center users who receive an email when activation of this list is complete"
                    },
                    "status": {
                        "type": "string",
                        "description": "This network list's current activation status in the environment specified by the \"network\" attribute"
                    },
                    "syncPoint": {
                        "type": "integer",
                        "description": "Identifies the sync point of the network list to be activated"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/networkListDescription:NetworkListDescription": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkListId": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name",
                "networkListId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkListId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "description",
                "networkListId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkListDescription resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkListId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/networkListSubscription:NetworkListSubscription": {
            "properties": {
                "networkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "networkLists",
                "recipients"
            ],
            "inputProperties": {
                "networkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "networkLists",
                "recipients"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkListSubscription resources.\n",
                "properties": {
                    "networkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/property:Property": {
            "properties": {
                "assetId": {
                    "type": "string",
                    "description": "ID of the property in the Identity and Access Management API."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property"
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
                    }
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Property's current latest version number"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)"
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property"
                },
                "productionVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in production (zero when not active in production)"
                },
                "propertyId": {
                    "type": "string",
                    "description": "Property ID"
                },
                "readVersion": {
                    "type": "integer",
                    "description": "Required property's version to be read"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyRuleError:PropertyRuleError"
                    }
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyRuleWarning:PropertyRuleWarning"
                    },
                    "description": "Rule validation warnings"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON"
                },
                "stagingVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in staging (zero when not active in staging)"
                },
                "useHostnameBucket": {
                    "type": "boolean",
                    "description": "Specifies whether hostname bucket is used with this property. It allows you to add or remove property hostnames without incrementing property versions."
                },
                "versionNotes": {
                    "type": "string",
                    "description": "Property version notes"
                }
            },
            "required": [
                "assetId",
                "contractId",
                "groupId",
                "latestVersion",
                "name",
                "productId",
                "productionVersion",
                "readVersion",
                "ruleErrors",
                "ruleFormat",
                "ruleWarnings",
                "rules",
                "stagingVersion",
                "versionNotes"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property"
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)",
                    "willReplaceOnChanges": true
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property"
                },
                "propertyId": {
                    "type": "string",
                    "description": "Property ID"
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON"
                },
                "useHostnameBucket": {
                    "type": "boolean",
                    "description": "Specifies whether hostname bucket is used with this property. It allows you to add or remove property hostnames without incrementing property versions."
                },
                "versionNotes": {
                    "type": "string",
                    "description": "Property version notes"
                }
            },
            "requiredInputs": [
                "contractId",
                "groupId",
                "productId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Property resources.\n",
                "properties": {
                    "assetId": {
                        "type": "string",
                        "description": "ID of the property in the Identity and Access Management API."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID to be assigned to the Property"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Group ID to be assigned to the Property"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
                        }
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "Property's current latest version number"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name to give to the Property (must be unique)",
                        "willReplaceOnChanges": true
                    },
                    "productId": {
                        "type": "string",
                        "description": "Product ID to be assigned to the Property"
                    },
                    "productionVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in production (zero when not active in production)"
                    },
                    "propertyId": {
                        "type": "string",
                        "description": "Property ID"
                    },
                    "readVersion": {
                        "type": "integer",
                        "description": "Required property's version to be read"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyRuleError:PropertyRuleError"
                        }
                    },
                    "ruleFormat": {
                        "type": "string",
                        "description": "Specify the rule format version (defaults to latest version available when created)"
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyRuleWarning:PropertyRuleWarning"
                        },
                        "description": "Rule validation warnings"
                    },
                    "rules": {
                        "type": "string",
                        "description": "Property Rules as JSON"
                    },
                    "stagingVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in staging (zero when not active in staging)"
                    },
                    "useHostnameBucket": {
                        "type": "boolean",
                        "description": "Specifies whether hostname bucket is used with this property. It allows you to add or remove property hostnames without incrementing property versions."
                    },
                    "versionNotes": {
                        "type": "string",
                        "description": "Property version notes"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/property:Property"
                }
            ]
        },
        "akamai:index/propertyActivation:PropertyActivation": {
            "properties": {
                "activationId": {
                    "type": "string",
                    "description": "The ID given to the activation event while it's in progress."
                },
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "Automatically acknowledge all rule warnings for activation to continue. Default is false"
                },
                "complianceRecord": {
                    "$ref": "#/types/akamai:index/PropertyActivationComplianceRecord:PropertyActivationComplianceRecord",
                    "description": "Provides an audit record when activating on a production network."
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more email addresses to which to send activation status changes."
                },
                "errors": {
                    "type": "string",
                    "description": "Errors returned during activation."
                },
                "network": {
                    "type": "string",
                    "description": "Akamai network in which to activate your property, either STAGING or PRODUCTION. The default is STAGING."
                },
                "note": {
                    "type": "string",
                    "description": "Assigns a log message to the activation request."
                },
                "propertyId": {
                    "type": "string",
                    "description": "Your property's ID, including the prp_ prefix."
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
                    },
                    "description": "Any errors returned by the API about rules."
                },
                "status": {
                    "type": "string",
                    "description": "The property version's activation status on the given network."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/PropertyActivationTimeouts:PropertyActivationTimeouts",
                    "description": "Enables to set timeout for processing."
                },
                "version": {
                    "type": "integer",
                    "description": "Your property's version number."
                },
                "warnings": {
                    "type": "string",
                    "description": "Warnings returned during activation."
                }
            },
            "required": [
                "activationId",
                "contacts",
                "errors",
                "propertyId",
                "ruleErrors",
                "status",
                "version",
                "warnings"
            ],
            "inputProperties": {
                "activationId": {
                    "type": "string",
                    "description": "The ID given to the activation event while it's in progress."
                },
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "Automatically acknowledge all rule warnings for activation to continue. Default is false"
                },
                "complianceRecord": {
                    "$ref": "#/types/akamai:index/PropertyActivationComplianceRecord:PropertyActivationComplianceRecord",
                    "description": "Provides an audit record when activating on a production network."
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "One or more email addresses to which to send activation status changes."
                },
                "network": {
                    "type": "string",
                    "description": "Akamai network in which to activate your property, either STAGING or PRODUCTION. The default is STAGING."
                },
                "note": {
                    "type": "string",
                    "description": "Assigns a log message to the activation request."
                },
                "propertyId": {
                    "type": "string",
                    "description": "Your property's ID, including the prp_ prefix."
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/PropertyActivationTimeouts:PropertyActivationTimeouts",
                    "description": "Enables to set timeout for processing."
                },
                "version": {
                    "type": "integer",
                    "description": "Your property's version number."
                }
            },
            "requiredInputs": [
                "contacts",
                "propertyId",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyActivation resources.\n",
                "properties": {
                    "activationId": {
                        "type": "string",
                        "description": "The ID given to the activation event while it's in progress."
                    },
                    "autoAcknowledgeRuleWarnings": {
                        "type": "boolean",
                        "description": "Automatically acknowledge all rule warnings for activation to continue. Default is false"
                    },
                    "complianceRecord": {
                        "$ref": "#/types/akamai:index/PropertyActivationComplianceRecord:PropertyActivationComplianceRecord",
                        "description": "Provides an audit record when activating on a production network."
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "One or more email addresses to which to send activation status changes."
                    },
                    "errors": {
                        "type": "string",
                        "description": "Errors returned during activation."
                    },
                    "network": {
                        "type": "string",
                        "description": "Akamai network in which to activate your property, either STAGING or PRODUCTION. The default is STAGING."
                    },
                    "note": {
                        "type": "string",
                        "description": "Assigns a log message to the activation request."
                    },
                    "propertyId": {
                        "type": "string",
                        "description": "Your property's ID, including the prp_ prefix."
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
                        },
                        "description": "Any errors returned by the API about rules."
                    },
                    "status": {
                        "type": "string",
                        "description": "The property version's activation status on the given network."
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/PropertyActivationTimeouts:PropertyActivationTimeouts",
                        "description": "Enables to set timeout for processing."
                    },
                    "version": {
                        "type": "integer",
                        "description": "Your property's version number."
                    },
                    "warnings": {
                        "type": "string",
                        "description": "Warnings returned during activation."
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/propertyActivation:PropertyActivation"
                }
            ]
        },
        "akamai:index/propertyBootstrap:PropertyBootstrap": {
            "properties": {
                "assetId": {
                    "type": "string",
                    "description": "ID of the property in the Identity and Access Management API."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property"
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)"
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property"
                },
                "useHostnameBucket": {
                    "type": "boolean",
                    "description": "Specifies whether hostname bucket is used with this property. It allows you to add or remove property hostnames without incrementing property versions."
                }
            },
            "required": [
                "assetId",
                "contractId",
                "groupId",
                "name",
                "productId",
                "useHostnameBucket"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property"
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)"
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property"
                },
                "useHostnameBucket": {
                    "type": "boolean",
                    "description": "Specifies whether hostname bucket is used with this property. It allows you to add or remove property hostnames without incrementing property versions."
                }
            },
            "requiredInputs": [
                "contractId",
                "groupId",
                "productId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyBootstrap resources.\n",
                "properties": {
                    "assetId": {
                        "type": "string",
                        "description": "ID of the property in the Identity and Access Management API."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID to be assigned to the Property"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Group ID to be assigned to the Property"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name to give to the Property (must be unique)"
                    },
                    "productId": {
                        "type": "string",
                        "description": "Product ID to be assigned to the Property"
                    },
                    "useHostnameBucket": {
                        "type": "boolean",
                        "description": "Specifies whether hostname bucket is used with this property. It allows you to add or remove property hostnames without incrementing property versions."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/propertyHostnameBucket:PropertyHostnameBucket": {
            "properties": {
                "activationId": {
                    "type": "string",
                    "description": "The ID of the latest hostname bucket activation."
                },
                "contractId": {
                    "type": "string",
                    "description": "The unique identifier for the contract. Provide it if resolving the property without 'contract_id' and 'group_id' is not possible"
                },
                "groupId": {
                    "type": "string",
                    "description": "The unique identifier for the group. Provide it if resolving the property without 'contract_id' and 'group_id' is not possible"
                },
                "hostnameCount": {
                    "type": "integer",
                    "description": "The computed number of hostnames after applying desired modifications. Used only to informduring the plan phase about the number of hostnames that will be active after making the changes."
                },
                "hostnames": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/akamai:index/PropertyHostnameBucketHostnames:PropertyHostnameBucketHostnames"
                    },
                    "description": "The hostnames mapping. The key represents 'cname_from' and the value contains hostnames details, consisting of certificate provisioning type and edge hostname."
                },
                "network": {
                    "type": "string",
                    "description": "The network to activate on, either `STAGING` or `PRODUCTION`."
                },
                "note": {
                    "type": "string",
                    "description": "Assigns a log message to the request."
                },
                "notifyEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email addresses to notify when the activation status changes."
                },
                "pendingDefaultCerts": {
                    "type": "integer",
                    "description": "The number of hostnames with a `DEFAULT` certificate type that are still in the `PENDING` state."
                },
                "propertyId": {
                    "type": "string",
                    "description": "The unique identifier for the property."
                },
                "timeoutForActivation": {
                    "type": "integer",
                    "description": "The timeout value in minutes after which a single hostname activation will be canceled. Defaults to 50 minutes."
                }
            },
            "required": [
                "activationId",
                "contractId",
                "groupId",
                "hostnameCount",
                "hostnames",
                "network",
                "note",
                "notifyEmails",
                "pendingDefaultCerts",
                "propertyId",
                "timeoutForActivation"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "The unique identifier for the contract. Provide it if resolving the property without 'contract_id' and 'group_id' is not possible"
                },
                "groupId": {
                    "type": "string",
                    "description": "The unique identifier for the group. Provide it if resolving the property without 'contract_id' and 'group_id' is not possible"
                },
                "hostnameCount": {
                    "type": "integer",
                    "description": "The computed number of hostnames after applying desired modifications. Used only to informduring the plan phase about the number of hostnames that will be active after making the changes."
                },
                "hostnames": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/akamai:index/PropertyHostnameBucketHostnames:PropertyHostnameBucketHostnames"
                    },
                    "description": "The hostnames mapping. The key represents 'cname_from' and the value contains hostnames details, consisting of certificate provisioning type and edge hostname."
                },
                "network": {
                    "type": "string",
                    "description": "The network to activate on, either `STAGING` or `PRODUCTION`."
                },
                "note": {
                    "type": "string",
                    "description": "Assigns a log message to the request."
                },
                "notifyEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Email addresses to notify when the activation status changes."
                },
                "propertyId": {
                    "type": "string",
                    "description": "The unique identifier for the property."
                },
                "timeoutForActivation": {
                    "type": "integer",
                    "description": "The timeout value in minutes after which a single hostname activation will be canceled. Defaults to 50 minutes."
                }
            },
            "requiredInputs": [
                "hostnames",
                "network",
                "propertyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyHostnameBucket resources.\n",
                "properties": {
                    "activationId": {
                        "type": "string",
                        "description": "The ID of the latest hostname bucket activation."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "The unique identifier for the contract. Provide it if resolving the property without 'contract_id' and 'group_id' is not possible"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The unique identifier for the group. Provide it if resolving the property without 'contract_id' and 'group_id' is not possible"
                    },
                    "hostnameCount": {
                        "type": "integer",
                        "description": "The computed number of hostnames after applying desired modifications. Used only to informduring the plan phase about the number of hostnames that will be active after making the changes."
                    },
                    "hostnames": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/akamai:index/PropertyHostnameBucketHostnames:PropertyHostnameBucketHostnames"
                        },
                        "description": "The hostnames mapping. The key represents 'cname_from' and the value contains hostnames details, consisting of certificate provisioning type and edge hostname."
                    },
                    "network": {
                        "type": "string",
                        "description": "The network to activate on, either `STAGING` or `PRODUCTION`."
                    },
                    "note": {
                        "type": "string",
                        "description": "Assigns a log message to the request."
                    },
                    "notifyEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Email addresses to notify when the activation status changes."
                    },
                    "pendingDefaultCerts": {
                        "type": "integer",
                        "description": "The number of hostnames with a `DEFAULT` certificate type that are still in the `PENDING` state."
                    },
                    "propertyId": {
                        "type": "string",
                        "description": "The unique identifier for the property."
                    },
                    "timeoutForActivation": {
                        "type": "integer",
                        "description": "The timeout value in minutes after which a single hostname activation will be canceled. Defaults to 50 minutes."
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/propertyInclude:PropertyInclude": {
            "properties": {
                "assetId": {
                    "type": "string",
                    "description": "ID of the include in the Identity and Access Management API."
                },
                "contractId": {
                    "type": "string",
                    "description": "Identifies the contract to which the include is assigned"
                },
                "groupId": {
                    "type": "string",
                    "description": "Identifies the group to which the include is assigned"
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Specifies the most recent version of the include"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name for the include"
                },
                "productId": {
                    "type": "string",
                    "description": "The product assigned to the include"
                },
                "productionVersion": {
                    "type": "string",
                    "description": "The most recent version to be activated to the production network"
                },
                "ruleErrors": {
                    "type": "string",
                    "description": "Rule validation errors"
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Indicates the versioned set of features and criteria"
                },
                "ruleWarnings": {
                    "type": "string",
                    "description": "Rule validation warnings"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON"
                },
                "stagingVersion": {
                    "type": "string",
                    "description": "The most recent version to be activated to the staging network"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the type of the include, either 'MICROSERVICES' or 'COMMON_SETTINGS'"
                }
            },
            "required": [
                "assetId",
                "contractId",
                "groupId",
                "latestVersion",
                "name",
                "productionVersion",
                "ruleErrors",
                "ruleFormat",
                "ruleWarnings",
                "rules",
                "stagingVersion",
                "type"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "Identifies the contract to which the include is assigned",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "description": "Identifies the group to which the include is assigned",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name for the include",
                    "willReplaceOnChanges": true
                },
                "productId": {
                    "type": "string",
                    "description": "The product assigned to the include",
                    "willReplaceOnChanges": true
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Indicates the versioned set of features and criteria"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the type of the include, either 'MICROSERVICES' or 'COMMON_SETTINGS'",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "contractId",
                "groupId",
                "ruleFormat",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyInclude resources.\n",
                "properties": {
                    "assetId": {
                        "type": "string",
                        "description": "ID of the include in the Identity and Access Management API."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Identifies the contract to which the include is assigned",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Identifies the group to which the include is assigned",
                        "willReplaceOnChanges": true
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "Specifies the most recent version of the include"
                    },
                    "name": {
                        "type": "string",
                        "description": "A descriptive name for the include",
                        "willReplaceOnChanges": true
                    },
                    "productId": {
                        "type": "string",
                        "description": "The product assigned to the include",
                        "willReplaceOnChanges": true
                    },
                    "productionVersion": {
                        "type": "string",
                        "description": "The most recent version to be activated to the production network"
                    },
                    "ruleErrors": {
                        "type": "string",
                        "description": "Rule validation errors"
                    },
                    "ruleFormat": {
                        "type": "string",
                        "description": "Indicates the versioned set of features and criteria"
                    },
                    "ruleWarnings": {
                        "type": "string",
                        "description": "Rule validation warnings"
                    },
                    "rules": {
                        "type": "string",
                        "description": "Property Rules as JSON"
                    },
                    "stagingVersion": {
                        "type": "string",
                        "description": "The most recent version to be activated to the staging network"
                    },
                    "type": {
                        "type": "string",
                        "description": "Specifies the type of the include, either 'MICROSERVICES' or 'COMMON_SETTINGS'",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/propertyIncludeActivation:PropertyIncludeActivation": {
            "properties": {
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "Automatically acknowledge all rule warnings for activation and continue"
                },
                "complianceRecord": {
                    "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecord:PropertyIncludeActivationComplianceRecord",
                    "description": "Provides an audit record when activating on a production network"
                },
                "contractId": {
                    "type": "string",
                    "description": "The contract under which the include is activated"
                },
                "groupId": {
                    "type": "string",
                    "description": "The group under which the include is activated"
                },
                "includeId": {
                    "type": "string",
                    "description": "The unique identifier of the include"
                },
                "network": {
                    "type": "string",
                    "description": "The network for which the activation will be performed"
                },
                "note": {
                    "type": "string",
                    "description": "The note to assign to a log message of the activation request"
                },
                "notifyEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of email addresses to notify about an activation status"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/PropertyIncludeActivationTimeouts:PropertyIncludeActivationTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "validations": {
                    "type": "string",
                    "description": "The validation information in JSON format"
                },
                "version": {
                    "type": "integer",
                    "description": "The unique identifier of the include"
                }
            },
            "required": [
                "contractId",
                "groupId",
                "includeId",
                "network",
                "notifyEmails",
                "validations",
                "version"
            ],
            "inputProperties": {
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "Automatically acknowledge all rule warnings for activation and continue"
                },
                "complianceRecord": {
                    "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecord:PropertyIncludeActivationComplianceRecord",
                    "description": "Provides an audit record when activating on a production network"
                },
                "contractId": {
                    "type": "string",
                    "description": "The contract under which the include is activated",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "description": "The group under which the include is activated",
                    "willReplaceOnChanges": true
                },
                "includeId": {
                    "type": "string",
                    "description": "The unique identifier of the include",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "description": "The network for which the activation will be performed",
                    "willReplaceOnChanges": true
                },
                "note": {
                    "type": "string",
                    "description": "The note to assign to a log message of the activation request"
                },
                "notifyEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of email addresses to notify about an activation status"
                },
                "timeouts": {
                    "$ref": "#/types/akamai:index/PropertyIncludeActivationTimeouts:PropertyIncludeActivationTimeouts",
                    "description": "Enables to set timeout for processing"
                },
                "version": {
                    "type": "integer",
                    "description": "The unique identifier of the include"
                }
            },
            "requiredInputs": [
                "contractId",
                "groupId",
                "includeId",
                "network",
                "notifyEmails",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyIncludeActivation resources.\n",
                "properties": {
                    "autoAcknowledgeRuleWarnings": {
                        "type": "boolean",
                        "description": "Automatically acknowledge all rule warnings for activation and continue"
                    },
                    "complianceRecord": {
                        "$ref": "#/types/akamai:index/PropertyIncludeActivationComplianceRecord:PropertyIncludeActivationComplianceRecord",
                        "description": "Provides an audit record when activating on a production network"
                    },
                    "contractId": {
                        "type": "string",
                        "description": "The contract under which the include is activated",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The group under which the include is activated",
                        "willReplaceOnChanges": true
                    },
                    "includeId": {
                        "type": "string",
                        "description": "The unique identifier of the include",
                        "willReplaceOnChanges": true
                    },
                    "network": {
                        "type": "string",
                        "description": "The network for which the activation will be performed",
                        "willReplaceOnChanges": true
                    },
                    "note": {
                        "type": "string",
                        "description": "The note to assign to a log message of the activation request"
                    },
                    "notifyEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of email addresses to notify about an activation status"
                    },
                    "timeouts": {
                        "$ref": "#/types/akamai:index/PropertyIncludeActivationTimeouts:PropertyIncludeActivationTimeouts",
                        "description": "Enables to set timeout for processing"
                    },
                    "validations": {
                        "type": "string",
                        "description": "The validation information in JSON format"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The unique identifier of the include"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "akamai:index/getAppSecAdvancedSettingsEvasivePathMatch:getAppSecAdvancedSettingsEvasivePathMatch": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAdvancedSettingsEvasivePathMatch.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAdvancedSettingsEvasivePathMatch.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecAdvancedSettingsLogging:getAppSecAdvancedSettingsLogging": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAdvancedSettingsLogging.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAdvancedSettingsLogging.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecAdvancedSettingsPragmaHeader:getAppSecAdvancedSettingsPragmaHeader": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAdvancedSettingsPragmaHeader.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAdvancedSettingsPragmaHeader.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecAdvancedSettingsPrefetch:getAppSecAdvancedSettingsPrefetch": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAdvancedSettingsPrefetch.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAdvancedSettingsPrefetch.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecApiEndpoints:getAppSecApiEndpoints": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecApiEndpoints.\n",
                "properties": {
                    "apiName": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecApiEndpoints.\n",
                "properties": {
                    "apiName": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "idLists": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "idLists",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecApiRequestConstraints:getAppSecApiRequestConstraints": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecApiRequestConstraints.\n",
                "properties": {
                    "apiId": {
                        "type": "integer"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecApiRequestConstraints.\n",
                "properties": {
                    "apiId": {
                        "type": "integer"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecAttackGroups:getAppSecAttackGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAttackGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAttackGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string"
                    },
                    "attackGroupAction": {
                        "type": "string"
                    },
                    "conditionException": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "attackGroupAction",
                    "conditionException",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecBypassNetworkLists:getAppSecBypassNetworkLists": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecBypassNetworkLists.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecBypassNetworkLists.\n",
                "properties": {
                    "bypassNetworkLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "bypassNetworkLists",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecConfiguration:getAppSecConfiguration": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecConfiguration.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostNames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "latestVersion": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "productionVersion": {
                        "type": "integer"
                    },
                    "stagingVersion": {
                        "type": "integer"
                    }
                },
                "required": [
                    "configId",
                    "hostNames",
                    "latestVersion",
                    "outputText",
                    "productionVersion",
                    "stagingVersion",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecConfigurationVersion:getAppSecConfigurationVersion": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecConfigurationVersion.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecConfigurationVersion.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "latestVersion": {
                        "type": "integer"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "productionStatus": {
                        "type": "string"
                    },
                    "stagingStatus": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "configId",
                    "latestVersion",
                    "outputText",
                    "productionStatus",
                    "stagingStatus",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecContractsGroups:getAppSecContractsGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecContractsGroups.\n",
                "properties": {
                    "contractid": {
                        "type": "string"
                    },
                    "groupid": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecContractsGroups.\n",
                "properties": {
                    "contractid": {
                        "type": "string"
                    },
                    "defaultContractid": {
                        "type": "string"
                    },
                    "defaultGroupid": {
                        "type": "integer"
                    },
                    "groupid": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "defaultContractid",
                    "defaultGroupid",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecCustomDeny:getAppSecCustomDeny": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomDeny.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customDenyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomDeny.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customDenyId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecCustomRuleActions:getAppSecCustomRuleActions": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomRuleActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customRuleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomRuleActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customRuleId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecCustomRules:getAppSecCustomRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customRuleId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customRuleId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecEval:getAppSecEval": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEval.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEval.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecEvalGroups:getAppSecEvalGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEvalGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEvalGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string"
                    },
                    "attackGroupAction": {
                        "type": "string"
                    },
                    "conditionException": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "attackGroupAction",
                    "conditionException",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecEvalPenaltyBox:getAppSecEvalPenaltyBox": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEvalPenaltyBox.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEvalPenaltyBox.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "action",
                    "configId",
                    "enabled",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecEvalRules:getAppSecEvalRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEvalRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEvalRules.\n",
                "properties": {
                    "conditionException": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "evalRuleAction": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "conditionException",
                    "configId",
                    "evalRuleAction",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecExportConfiguration:getAppSecExportConfiguration": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecExportConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecExportConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "searches": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecFailoverHostnames:getAppSecFailoverHostnames": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecFailoverHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecFailoverHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "hostnames",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecHostnameCoverage:getAppSecHostnameCoverage": {
            "outputs": {
                "description": "A collection of values returned by getAppSecHostnameCoverage.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecHostnameCoverageMatchTargets:getAppSecHostnameCoverageMatchTargets": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecHostnameCoverageMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostname": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostname"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecHostnameCoverageMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "hostname",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecHostnameCoverageOverlapping:getAppSecHostnameCoverageOverlapping": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecHostnameCoverageOverlapping.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostname": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostname"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecHostnameCoverageOverlapping.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "hostname",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecIPGeo:getAppSecIPGeo": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecIPGeo.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecIPGeo.\n",
                "properties": {
                    "asnNetworkLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "exceptionIpNetworkLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "geoNetworkLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ipNetworkLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "ukraineGeoControlAction": {
                        "type": "string"
                    }
                },
                "required": [
                    "asnNetworkLists",
                    "configId",
                    "exceptionIpNetworkLists",
                    "geoNetworkLists",
                    "ipNetworkLists",
                    "mode",
                    "outputText",
                    "securityPolicyId",
                    "ukraineGeoControlAction",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecMalwareContentTypes:getAppSecMalwareContentTypes": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecMalwareContentTypes.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecMalwareContentTypes.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecMalwarePolicies:getAppSecMalwarePolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecMalwarePolicies.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "malwarePolicyId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecMalwarePolicies.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "malwarePolicyId": {
                        "type": "integer"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecMalwarePolicyActions:getAppSecMalwarePolicyActions": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecMalwarePolicyActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "malwarePolicyId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecMalwarePolicyActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "malwarePolicyId": {
                        "type": "integer"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecMatchTargets:getAppSecMatchTargets": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "matchTargetId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchTargetId": {
                        "type": "integer"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecPenaltyBox:getAppSecPenaltyBox": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecPenaltyBox.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecPenaltyBox.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "action",
                    "configId",
                    "enabled",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecRatePolicies:getAppSecRatePolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRatePolicies.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "ratePolicyId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRatePolicies.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "ratePolicyId": {
                        "type": "integer"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecRatePolicyActions:getAppSecRatePolicyActions": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRatePolicyActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "ratePolicyId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRatePolicyActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "ratePolicyId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecReputationProfileActions:getAppSecReputationProfileActions": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecReputationProfileActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "reputationProfileId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecReputationProfileActions.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "reputationProfileId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "action",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecReputationProfileAnalysis:getAppSecReputationProfileAnalysis": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecReputationProfileAnalysis.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecReputationProfileAnalysis.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecReputationProfiles:getAppSecReputationProfiles": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecReputationProfiles.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "reputationProfileId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecReputationProfiles.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "reputationProfileId": {
                        "type": "integer"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecRuleUpgradeDetails:getAppSecRuleUpgradeDetails": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRuleUpgradeDetails.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRuleUpgradeDetails.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecRules:getAppSecRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRules.\n",
                "properties": {
                    "conditionException": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "ruleAction": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "conditionException",
                    "configId",
                    "json",
                    "outputText",
                    "ruleAction",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecSecurityPolicy:getAppSecSecurityPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSecurityPolicy.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSecurityPolicy.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "securityPolicyIdLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "securityPolicyName": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "securityPolicyIdLists",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecSecurityPolicyProtections:getAppSecSecurityPolicyProtections": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSecurityPolicyProtections.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSecurityPolicyProtections.\n",
                "properties": {
                    "applyApiConstraints": {
                        "type": "boolean"
                    },
                    "applyApplicationLayerControls": {
                        "type": "boolean"
                    },
                    "applyBotmanControls": {
                        "type": "boolean"
                    },
                    "applyMalwareControls": {
                        "type": "boolean"
                    },
                    "applyNetworkLayerControls": {
                        "type": "boolean"
                    },
                    "applyRateControls": {
                        "type": "boolean"
                    },
                    "applyReputationControls": {
                        "type": "boolean"
                    },
                    "applySlowPostControls": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "applyApiConstraints",
                    "applyApplicationLayerControls",
                    "applyBotmanControls",
                    "applyMalwareControls",
                    "applyNetworkLayerControls",
                    "applyRateControls",
                    "applyReputationControls",
                    "applySlowPostControls",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecSelectableHostnames:getAppSecSelectableHostnames": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSelectableHostnames.\n",
                "properties": {
                    "activeInProduction": {
                        "type": "boolean"
                    },
                    "activeInStaging": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "contractid": {
                        "type": "string"
                    },
                    "groupid": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSelectableHostnames.\n",
                "properties": {
                    "activeInProduction": {
                        "type": "boolean"
                    },
                    "activeInStaging": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "contractid": {
                        "type": "string"
                    },
                    "groupid": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "hostnamesJson": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "hostnames",
                    "hostnamesJson",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecSiemDefinitions:getAppSecSiemDefinitions": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSiemDefinitions.\n",
                "properties": {
                    "siemDefinitionName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSiemDefinitions.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "siemDefinitionName": {
                        "type": "string"
                    }
                },
                "required": [
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecSiemSettings:getAppSecSiemSettings": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSiemSettings.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSiemSettings.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecSlowPost:getAppSecSlowPost": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSlowPost.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSlowPost.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecThreatIntel:getAppSecThreatIntel": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecThreatIntel.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecThreatIntel.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "threatIntel": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "threatIntel",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecTuningRecommendations:getAppSecTuningRecommendations": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecTuningRecommendations.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "rulesetType": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecTuningRecommendations.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "rulesetType": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecVersionNotes:getAppSecVersionNotes": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecVersionNotes.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecVersionNotes.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppSecWafMode:getAppSecWafMode": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecWafMode.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecWafMode.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "currentRuleset": {
                        "type": "string"
                    },
                    "evalExpirationDate": {
                        "type": "string"
                    },
                    "evalRuleset": {
                        "type": "string"
                    },
                    "evalStatus": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "currentRuleset",
                    "evalExpirationDate",
                    "evalRuleset",
                    "evalStatus",
                    "json",
                    "mode",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppsecAapSelectedHostnames:getAppsecAapSelectedHostnames": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppsecAapSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppsecAapSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "evaluatedHosts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchTargets": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "protectedHosts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "selectedHosts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "configId",
                    "evaluatedHosts",
                    "json",
                    "matchTargets",
                    "outputText",
                    "protectedHosts",
                    "securityPolicyId",
                    "selectedHosts",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppsecAdvancedSettingsAttackPayloadLogging:getAppsecAdvancedSettingsAttackPayloadLogging": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppsecAdvancedSettingsAttackPayloadLogging.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppsecAdvancedSettingsAttackPayloadLogging.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppsecAdvancedSettingsPiiLearning:getAppsecAdvancedSettingsPiiLearning": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppsecAdvancedSettingsPiiLearning.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppsecAdvancedSettingsPiiLearning.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppsecAdvancedSettingsRequestBody:getAppsecAdvancedSettingsRequestBody": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppsecAdvancedSettingsRequestBody.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppsecAdvancedSettingsRequestBody.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppsecEvalPenaltyBoxConditions:getAppsecEvalPenaltyBoxConditions": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppsecEvalPenaltyBoxConditions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppsecEvalPenaltyBoxConditions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppsecPenaltyBoxConditions:getAppsecPenaltyBoxConditions": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppsecPenaltyBoxConditions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppsecPenaltyBoxConditions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAppsecRapidRules:getAppsecRapidRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppsecRapidRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppsecRapidRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "defaultAction": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "rapidRules": {
                        "items": {
                            "$ref": "#/types/akamai:index/getAppsecRapidRulesRapidRule:getAppsecRapidRulesRapidRule"
                        },
                        "type": "array"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "defaultAction",
                    "enabled",
                    "id",
                    "outputText",
                    "rapidRules",
                    "securityPolicyId"
                ],
                "type": "object"
            }
        },
        "akamai:index/getAuthoritiesSet:getAuthoritiesSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getAuthoritiesSet.\n",
                "properties": {
                    "contract": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contract"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthoritiesSet.\n",
                "properties": {
                    "authorities": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "authorities",
                    "contract",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanAkamaiBotCategory:getBotmanAkamaiBotCategory": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanAkamaiBotCategory.\n",
                "properties": {
                    "categoryName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanAkamaiBotCategory.\n",
                "properties": {
                    "categoryName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanAkamaiBotCategoryAction:getBotmanAkamaiBotCategoryAction": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanAkamaiBotCategoryAction.\n",
                "properties": {
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanAkamaiBotCategoryAction.\n",
                "properties": {
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanAkamaiDefinedBot:getBotmanAkamaiDefinedBot": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanAkamaiDefinedBot.\n",
                "properties": {
                    "botName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanAkamaiDefinedBot.\n",
                "properties": {
                    "botName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanBotAnalyticsCookie:getBotmanBotAnalyticsCookie": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanBotAnalyticsCookie.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanBotAnalyticsCookie.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanBotAnalyticsCookieValues:getBotmanBotAnalyticsCookieValues": {
            "outputs": {
                "description": "A collection of values returned by getBotmanBotAnalyticsCookieValues.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanBotCategoryException:getBotmanBotCategoryException": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanBotCategoryException.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanBotCategoryException.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanBotDetection:getBotmanBotDetection": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanBotDetection.\n",
                "properties": {
                    "detectionName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanBotDetection.\n",
                "properties": {
                    "detectionName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanBotDetectionAction:getBotmanBotDetectionAction": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanBotDetectionAction.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "detectionId": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanBotDetectionAction.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "detectionId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanBotEndpointCoverageReport:getBotmanBotEndpointCoverageReport": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanBotEndpointCoverageReport.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "operationId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanBotEndpointCoverageReport.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "operationId": {
                        "type": "string"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanBotManagementSettings:getBotmanBotManagementSettings": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanBotManagementSettings.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanBotManagementSettings.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanChallengeAction:getBotmanChallengeAction": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanChallengeAction.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanChallengeAction.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanChallengeInjectionRules:getBotmanChallengeInjectionRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanChallengeInjectionRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanChallengeInjectionRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanClientSideSecurity:getBotmanClientSideSecurity": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanClientSideSecurity.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanClientSideSecurity.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanConditionalAction:getBotmanConditionalAction": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanConditionalAction.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanConditionalAction.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanContentProtectionJavascriptInjectionRule:getBotmanContentProtectionJavascriptInjectionRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanContentProtectionJavascriptInjectionRule.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "contentProtectionJavascriptInjectionRuleId": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanContentProtectionJavascriptInjectionRule.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "contentProtectionJavascriptInjectionRuleId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanContentProtectionRule:getBotmanContentProtectionRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanContentProtectionRule.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "contentProtectionRuleId": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanContentProtectionRule.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "contentProtectionRuleId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanContentProtectionRuleSequence:getBotmanContentProtectionRuleSequence": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanContentProtectionRuleSequence.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanContentProtectionRuleSequence.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "contentProtectionRuleIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "contentProtectionRuleIds",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanCustomBotCategory:getBotmanCustomBotCategory": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanCustomBotCategory.\n",
                "properties": {
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanCustomBotCategory.\n",
                "properties": {
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanCustomBotCategoryAction:getBotmanCustomBotCategoryAction": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanCustomBotCategoryAction.\n",
                "properties": {
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanCustomBotCategoryAction.\n",
                "properties": {
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanCustomBotCategoryItemSequence:getBotmanCustomBotCategoryItemSequence": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanCustomBotCategoryItemSequence.\n",
                "properties": {
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "categoryId",
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanCustomBotCategoryItemSequence.\n",
                "properties": {
                    "botIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "categoryId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "botIds",
                    "categoryId",
                    "configId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanCustomBotCategorySequence:getBotmanCustomBotCategorySequence": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanCustomBotCategorySequence.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanCustomBotCategorySequence.\n",
                "properties": {
                    "categoryIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "categoryIds",
                    "configId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanCustomClient:getBotmanCustomClient": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanCustomClient.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customClientId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanCustomClient.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customClientId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanCustomClientSequence:getBotmanCustomClientSequence": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanCustomClientSequence.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanCustomClientSequence.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customClientIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "customClientIds",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanCustomCode:getBotmanCustomCode": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanCustomCode.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanCustomCode.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanCustomDefinedBot:getBotmanCustomDefinedBot": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanCustomDefinedBot.\n",
                "properties": {
                    "botId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanCustomDefinedBot.\n",
                "properties": {
                    "botId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanCustomDenyAction:getBotmanCustomDenyAction": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanCustomDenyAction.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanCustomDenyAction.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanJavascriptInjection:getBotmanJavascriptInjection": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanJavascriptInjection.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanJavascriptInjection.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanRecategorizedAkamaiDefinedBot:getBotmanRecategorizedAkamaiDefinedBot": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanRecategorizedAkamaiDefinedBot.\n",
                "properties": {
                    "botId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanRecategorizedAkamaiDefinedBot.\n",
                "properties": {
                    "botId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanResponseAction:getBotmanResponseAction": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanResponseAction.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanResponseAction.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanServeAlternateAction:getBotmanServeAlternateAction": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanServeAlternateAction.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanServeAlternateAction.\n",
                "properties": {
                    "actionId": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanTransactionalEndpoint:getBotmanTransactionalEndpoint": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanTransactionalEndpoint.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "operationId": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanTransactionalEndpoint.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "operationId": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "securityPolicyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getBotmanTransactionalEndpointProtection:getBotmanTransactionalEndpointProtection": {
            "inputs": {
                "description": "A collection of arguments for invoking getBotmanTransactionalEndpointProtection.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBotmanTransactionalEndpointProtection.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "configId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCPSEnrollment:getCPSEnrollment": {
            "inputs": {
                "description": "A collection of arguments for invoking getCPSEnrollment.\n",
                "properties": {
                    "enrollmentId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "enrollmentId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCPSEnrollment.\n",
                "properties": {
                    "adminContacts": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCPSEnrollmentAdminContact:getCPSEnrollmentAdminContact"
                        },
                        "type": "array"
                    },
                    "assignedSlots": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "certificateChainType": {
                        "type": "string"
                    },
                    "certificateType": {
                        "type": "string"
                    },
                    "commonName": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "csrs": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCPSEnrollmentCsr:getCPSEnrollmentCsr"
                        },
                        "type": "array"
                    },
                    "dnsChallenges": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCPSEnrollmentDnsChallenge:getCPSEnrollmentDnsChallenge"
                        },
                        "type": "array"
                    },
                    "enableMultiStackedCertificates": {
                        "type": "boolean"
                    },
                    "enrollmentId": {
                        "type": "integer"
                    },
                    "httpChallenges": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCPSEnrollmentHttpChallenge:getCPSEnrollmentHttpChallenge"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "networkConfigurations": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCPSEnrollmentNetworkConfiguration:getCPSEnrollmentNetworkConfiguration"
                        },
                        "type": "array"
                    },
                    "orgId": {
                        "type": "integer"
                    },
                    "organizations": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCPSEnrollmentOrganization:getCPSEnrollmentOrganization"
                        },
                        "type": "array"
                    },
                    "pendingChanges": {
                        "type": "boolean"
                    },
                    "productionSlots": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "registrationAuthority": {
                        "type": "string"
                    },
                    "sans": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "secureNetwork": {
                        "type": "string"
                    },
                    "signatureAlgorithm": {
                        "type": "string"
                    },
                    "sniOnly": {
                        "type": "boolean"
                    },
                    "stagingSlots": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "techContacts": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCPSEnrollmentTechContact:getCPSEnrollmentTechContact"
                        },
                        "type": "array"
                    },
                    "validationType": {
                        "type": "string"
                    }
                },
                "required": [
                    "adminContacts",
                    "assignedSlots",
                    "certificateChainType",
                    "certificateType",
                    "commonName",
                    "contractId",
                    "csrs",
                    "dnsChallenges",
                    "enableMultiStackedCertificates",
                    "enrollmentId",
                    "httpChallenges",
                    "networkConfigurations",
                    "orgId",
                    "organizations",
                    "pendingChanges",
                    "productionSlots",
                    "registrationAuthority",
                    "sans",
                    "secureNetwork",
                    "signatureAlgorithm",
                    "sniOnly",
                    "stagingSlots",
                    "techContacts",
                    "validationType",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCPSEnrollments:getCPSEnrollments": {
            "inputs": {
                "description": "A collection of arguments for invoking getCPSEnrollments.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCPSEnrollments.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "enrollments": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCPSEnrollmentsEnrollment:getCPSEnrollmentsEnrollment"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "contractId",
                    "enrollments",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getClientlistLists:getClientlistLists": {
            "inputs": {
                "description": "A collection of arguments for invoking getClientlistLists.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getClientlistLists.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "listIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "lists": {
                        "items": {
                            "$ref": "#/types/akamai:index/getClientlistListsList:getClientlistListsList"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "types": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "json",
                    "listIds",
                    "lists",
                    "outputText"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudaccessKey:getCloudaccessKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudaccessKey.\n",
                "properties": {
                    "accessKeyName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudaccessKey.\n",
                "properties": {
                    "accessKeyName": {
                        "type": "string"
                    },
                    "accessKeyUid": {
                        "type": "integer"
                    },
                    "authenticationMethod": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "createdTime": {
                        "type": "string"
                    },
                    "groups": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudaccessKeyGroup:getCloudaccessKeyGroup"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "latestVersion": {
                        "type": "integer"
                    },
                    "networkConfiguration": {
                        "$ref": "#/types/akamai:index/getCloudaccessKeyNetworkConfiguration:getCloudaccessKeyNetworkConfiguration"
                    }
                },
                "required": [
                    "accessKeyName",
                    "accessKeyUid",
                    "authenticationMethod",
                    "createdBy",
                    "createdTime",
                    "groups",
                    "latestVersion",
                    "networkConfiguration",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudaccessKeyProperties:getCloudaccessKeyProperties": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudaccessKeyProperties.\n",
                "properties": {
                    "accessKeyName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudaccessKeyProperties.\n",
                "properties": {
                    "accessKeyName": {
                        "type": "string"
                    },
                    "accessKeyUid": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "properties": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudaccessKeyPropertiesProperty:getCloudaccessKeyPropertiesProperty"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "accessKeyName",
                    "accessKeyUid",
                    "properties",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudaccessKeyVersions:getCloudaccessKeyVersions": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudaccessKeyVersions.\n",
                "properties": {
                    "accessKeyName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudaccessKeyVersions.\n",
                "properties": {
                    "accessKeyName": {
                        "type": "string"
                    },
                    "accessKeyUid": {
                        "type": "integer"
                    },
                    "accessKeyVersions": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudaccessKeyVersionsAccessKeyVersion:getCloudaccessKeyVersionsAccessKeyVersion"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "accessKeyName",
                    "accessKeyUid",
                    "accessKeyVersions",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudaccessKeys:getCloudaccessKeys": {
            "outputs": {
                "description": "A collection of values returned by getCloudaccessKeys.\n",
                "properties": {
                    "accessKeys": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudaccessKeysAccessKey:getCloudaccessKeysAccessKey"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "accessKeys",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsApiPrioritizationMatchRule:getCloudletsApiPrioritizationMatchRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsApiPrioritizationMatchRule.\n",
                "properties": {
                    "matchRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRule:getCloudletsApiPrioritizationMatchRuleMatchRule"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsApiPrioritizationMatchRule.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchRules": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsApiPrioritizationMatchRuleMatchRule:getCloudletsApiPrioritizationMatchRuleMatchRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsApplicationLoadBalancer:getCloudletsApplicationLoadBalancer": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsApplicationLoadBalancer.\n",
                "properties": {
                    "originId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "originId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsApplicationLoadBalancer.\n",
                "properties": {
                    "balancingType": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string"
                    },
                    "dataCenters": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerDataCenter:getCloudletsApplicationLoadBalancerDataCenter"
                        },
                        "type": "array"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "immutable": {
                        "type": "boolean"
                    },
                    "lastModifiedBy": {
                        "type": "string"
                    },
                    "lastModifiedDate": {
                        "type": "string"
                    },
                    "livenessSettings": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerLivenessSetting:getCloudletsApplicationLoadBalancerLivenessSetting"
                        },
                        "type": "array"
                    },
                    "originId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "warnings": {
                        "type": "string"
                    }
                },
                "required": [
                    "balancingType",
                    "createdBy",
                    "createdDate",
                    "dataCenters",
                    "deleted",
                    "description",
                    "immutable",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "livenessSettings",
                    "originId",
                    "type",
                    "warnings",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsApplicationLoadBalancerMatchRule:getCloudletsApplicationLoadBalancerMatchRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsApplicationLoadBalancerMatchRule.\n",
                "properties": {
                    "matchRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRule:getCloudletsApplicationLoadBalancerMatchRuleMatchRule"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsApplicationLoadBalancerMatchRule.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchRules": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsApplicationLoadBalancerMatchRuleMatchRule:getCloudletsApplicationLoadBalancerMatchRuleMatchRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsAudienceSegmentationMatchRule:getCloudletsAudienceSegmentationMatchRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsAudienceSegmentationMatchRule.\n",
                "properties": {
                    "matchRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRule:getCloudletsAudienceSegmentationMatchRuleMatchRule"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsAudienceSegmentationMatchRule.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchRules": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsAudienceSegmentationMatchRuleMatchRule:getCloudletsAudienceSegmentationMatchRuleMatchRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsEdgeRedirectorMatchRule:getCloudletsEdgeRedirectorMatchRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsEdgeRedirectorMatchRule.\n",
                "properties": {
                    "matchRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRule:getCloudletsEdgeRedirectorMatchRuleMatchRule"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsEdgeRedirectorMatchRule.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchRules": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsEdgeRedirectorMatchRuleMatchRule:getCloudletsEdgeRedirectorMatchRuleMatchRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsForwardRewriteMatchRule:getCloudletsForwardRewriteMatchRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsForwardRewriteMatchRule.\n",
                "properties": {
                    "matchRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRule:getCloudletsForwardRewriteMatchRuleMatchRule"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsForwardRewriteMatchRule.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchRules": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsForwardRewriteMatchRuleMatchRule:getCloudletsForwardRewriteMatchRuleMatchRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsPhasedReleaseMatchRule:getCloudletsPhasedReleaseMatchRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsPhasedReleaseMatchRule.\n",
                "properties": {
                    "matchRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRule:getCloudletsPhasedReleaseMatchRuleMatchRule"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsPhasedReleaseMatchRule.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchRules": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsPhasedReleaseMatchRuleMatchRule:getCloudletsPhasedReleaseMatchRuleMatchRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsPolicy:getCloudletsPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsPolicy.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsPolicy.\n",
                "properties": {
                    "activations": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsPolicyActivation:getCloudletsPolicyActivation"
                        },
                        "type": "array"
                    },
                    "apiVersion": {
                        "type": "string"
                    },
                    "cloudletCode": {
                        "type": "string"
                    },
                    "cloudletId": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "matchRuleFormat": {
                        "type": "string"
                    },
                    "matchRules": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "integer"
                    },
                    "revisionId": {
                        "type": "integer"
                    },
                    "rulesLocked": {
                        "type": "boolean"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "versionDescription": {
                        "type": "string"
                    },
                    "warnings": {
                        "type": "string"
                    }
                },
                "required": [
                    "activations",
                    "apiVersion",
                    "cloudletCode",
                    "cloudletId",
                    "description",
                    "groupId",
                    "matchRuleFormat",
                    "matchRules",
                    "name",
                    "policyId",
                    "revisionId",
                    "rulesLocked",
                    "versionDescription",
                    "warnings",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsPolicyActivation:getCloudletsPolicyActivation": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsPolicyActivation.\n",
                "properties": {
                    "associatedProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "network": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "network",
                    "policyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsPolicyActivation.\n",
                "properties": {
                    "associatedProperties": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "network",
                    "policyId",
                    "status",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsRequestControlMatchRule:getCloudletsRequestControlMatchRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsRequestControlMatchRule.\n",
                "properties": {
                    "matchRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsRequestControlMatchRuleMatchRule:getCloudletsRequestControlMatchRuleMatchRule"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsRequestControlMatchRule.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchRules": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsRequestControlMatchRuleMatchRule:getCloudletsRequestControlMatchRuleMatchRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsSharedPolicy:getCloudletsSharedPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsSharedPolicy.\n",
                "properties": {
                    "activations": {
                        "$ref": "#/types/akamai:index/getCloudletsSharedPolicyActivations:getCloudletsSharedPolicyActivations"
                    },
                    "policyId": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "policyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsSharedPolicy.\n",
                "properties": {
                    "activations": {
                        "$ref": "#/types/akamai:index/getCloudletsSharedPolicyActivations:getCloudletsSharedPolicyActivations"
                    },
                    "cloudletType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "matchRules": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "versionDescription": {
                        "type": "string"
                    },
                    "warnings": {
                        "type": "string"
                    }
                },
                "required": [
                    "cloudletType",
                    "description",
                    "groupId",
                    "matchRules",
                    "name",
                    "policyId",
                    "versionDescription",
                    "warnings",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudletsVisitorPrioritizationMatchRule:getCloudletsVisitorPrioritizationMatchRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudletsVisitorPrioritizationMatchRule.\n",
                "properties": {
                    "matchRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRule:getCloudletsVisitorPrioritizationMatchRuleMatchRule"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudletsVisitorPrioritizationMatchRule.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchRules": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudletsVisitorPrioritizationMatchRuleMatchRule:getCloudletsVisitorPrioritizationMatchRuleMatchRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudwrapperCapacities:getCloudwrapperCapacities": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudwrapperCapacities.\n",
                "properties": {
                    "capacities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudwrapperCapacitiesCapacity:getCloudwrapperCapacitiesCapacity"
                        }
                    },
                    "contractIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudwrapperCapacities.\n",
                "properties": {
                    "capacities": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudwrapperCapacitiesCapacity:getCloudwrapperCapacitiesCapacity"
                        },
                        "type": "array"
                    },
                    "contractIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudwrapperConfiguration:getCloudwrapperConfiguration": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudwrapperConfiguration.\n",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationLocation:getCloudwrapperConfigurationLocation"
                        }
                    },
                    "multiCdnSettings": {
                        "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettings:getCloudwrapperConfigurationMultiCdnSettings"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudwrapperConfiguration.\n",
                "properties": {
                    "capacityAlertsThreshold": {
                        "type": "integer"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "configName": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "lastActivatedBy": {
                        "type": "string"
                    },
                    "lastActivatedDate": {
                        "type": "string"
                    },
                    "lastUpdatedBy": {
                        "type": "string"
                    },
                    "lastUpdatedDate": {
                        "type": "string"
                    },
                    "locations": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationLocation:getCloudwrapperConfigurationLocation"
                        },
                        "type": "array"
                    },
                    "multiCdnSettings": {
                        "$ref": "#/types/akamai:index/getCloudwrapperConfigurationMultiCdnSettings:getCloudwrapperConfigurationMultiCdnSettings"
                    },
                    "notificationEmails": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "propertyIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "retainIdleObjects": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "capacityAlertsThreshold",
                    "comments",
                    "configName",
                    "contractId",
                    "id",
                    "lastActivatedBy",
                    "lastActivatedDate",
                    "lastUpdatedBy",
                    "lastUpdatedDate",
                    "notificationEmails",
                    "propertyIds",
                    "retainIdleObjects",
                    "status"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudwrapperConfigurations:getCloudwrapperConfigurations": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudwrapperConfigurations.\n",
                "properties": {
                    "configurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfiguration:getCloudwrapperConfigurationsConfiguration"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudwrapperConfigurations.\n",
                "properties": {
                    "configurations": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudwrapperConfigurationsConfiguration:getCloudwrapperConfigurationsConfiguration"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudwrapperLocation:getCloudwrapperLocation": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudwrapperLocation.\n",
                "properties": {
                    "locationName": {
                        "type": "string"
                    },
                    "trafficType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "locationName",
                    "trafficType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudwrapperLocation.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "locationName": {
                        "type": "string"
                    },
                    "trafficType": {
                        "type": "string"
                    },
                    "trafficTypeId": {
                        "type": "integer"
                    }
                },
                "required": [
                    "locationId",
                    "locationName",
                    "trafficType",
                    "trafficTypeId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudwrapperLocations:getCloudwrapperLocations": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudwrapperLocations.\n",
                "properties": {
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudwrapperLocationsLocation:getCloudwrapperLocationsLocation"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudwrapperLocations.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "locations": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudwrapperLocationsLocation:getCloudwrapperLocationsLocation"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCloudwrapperProperties:getCloudwrapperProperties": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudwrapperProperties.\n",
                "properties": {
                    "contractIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudwrapperPropertiesProperty:getCloudwrapperPropertiesProperty"
                        }
                    },
                    "unused": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCloudwrapperProperties.\n",
                "properties": {
                    "contractIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "properties": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCloudwrapperPropertiesProperty:getCloudwrapperPropertiesProperty"
                        },
                        "type": "array"
                    },
                    "unused": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getContract:getContract": {
            "inputs": {
                "description": "A collection of arguments for invoking getContract.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getContract.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "groupId",
                    "groupName",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getContracts:getContracts": {
            "outputs": {
                "description": "A collection of values returned by getContracts.\n",
                "properties": {
                    "contracts": {
                        "items": {
                            "$ref": "#/types/akamai:index/getContractsContract:getContractsContract"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "contracts",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCpCode:getCpCode": {
            "inputs": {
                "description": "A collection of arguments for invoking getCpCode.\n",
                "properties": {
                    "contractId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCpCode.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "contractId",
                    "createdDate",
                    "groupId",
                    "name",
                    "productIds",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCpCodes:getCpCodes": {
            "inputs": {
                "description": "A collection of arguments for invoking getCpCodes.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "filterByName": {
                        "type": "string"
                    },
                    "filterByProductId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCpCodes.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "cpCodes": {
                        "items": {
                            "$ref": "#/types/akamai:index/getCpCodesCpCode:getCpCodesCpCode"
                        },
                        "type": "array"
                    },
                    "filterByName": {
                        "type": "string"
                    },
                    "filterByProductId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "accountId",
                    "contractId",
                    "cpCodes",
                    "groupId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCpsCsr:getCpsCsr": {
            "inputs": {
                "description": "A collection of arguments for invoking getCpsCsr.\n",
                "properties": {
                    "enrollmentId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "enrollmentId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCpsCsr.\n",
                "properties": {
                    "csrEcdsa": {
                        "type": "string"
                    },
                    "csrRsa": {
                        "type": "string"
                    },
                    "enrollmentId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "csrEcdsa",
                    "csrRsa",
                    "enrollmentId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCpsDeployments:getCpsDeployments": {
            "inputs": {
                "description": "A collection of arguments for invoking getCpsDeployments.\n",
                "properties": {
                    "enrollmentId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "enrollmentId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCpsDeployments.\n",
                "properties": {
                    "autoRenewalStartTime": {
                        "type": "string"
                    },
                    "enrollmentId": {
                        "type": "integer"
                    },
                    "expiryDate": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "productionCertificateEcdsa": {
                        "type": "string"
                    },
                    "productionCertificateRsa": {
                        "type": "string"
                    },
                    "stagingCertificateEcdsa": {
                        "type": "string"
                    },
                    "stagingCertificateRsa": {
                        "type": "string"
                    }
                },
                "required": [
                    "autoRenewalStartTime",
                    "enrollmentId",
                    "expiryDate",
                    "productionCertificateEcdsa",
                    "productionCertificateRsa",
                    "stagingCertificateEcdsa",
                    "stagingCertificateRsa",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getCpsWarnings:getCpsWarnings": {
            "outputs": {
                "description": "A collection of values returned by getCpsWarnings.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "warnings": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "warnings",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getDatastreamActivationHistory:getDatastreamActivationHistory": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatastreamActivationHistory.\n",
                "properties": {
                    "streamId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "streamId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatastreamActivationHistory.\n",
                "properties": {
                    "activations": {
                        "items": {
                            "$ref": "#/types/akamai:index/getDatastreamActivationHistoryActivation:getDatastreamActivationHistoryActivation"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "streamId": {
                        "type": "integer"
                    }
                },
                "required": [
                    "activations",
                    "streamId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getDatastreamDatasetFields:getDatastreamDatasetFields": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatastreamDatasetFields.\n",
                "properties": {
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDatastreamDatasetFields.\n",
                "properties": {
                    "datasetFields": {
                        "items": {
                            "$ref": "#/types/akamai:index/getDatastreamDatasetFieldsDatasetField:getDatastreamDatasetFieldsDatasetField"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "required": [
                    "datasetFields",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getDatastreams:getDatastreams": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatastreams.\n",
                "properties": {
                    "groupId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDatastreams.\n",
                "properties": {
                    "groupId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "streamsDetails": {
                        "items": {
                            "$ref": "#/types/akamai:index/getDatastreamsStreamsDetail:getDatastreamsStreamsDetail"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "streamsDetails",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getDnsRecordSet:getDnsRecordSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "recordType",
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "rdatas": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "host",
                    "rdatas",
                    "recordType",
                    "zone",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getEdgeWorker:getEdgeWorker": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgeWorker.\n",
                "properties": {
                    "edgeworkerId": {
                        "type": "integer"
                    },
                    "localBundle": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "edgeworkerId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEdgeWorker.\n",
                "properties": {
                    "edgeworkerId": {
                        "type": "integer"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "localBundle": {
                        "type": "string"
                    },
                    "localBundleHash": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resourceTierId": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    },
                    "warnings": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "edgeworkerId",
                    "groupId",
                    "localBundleHash",
                    "name",
                    "resourceTierId",
                    "version",
                    "warnings",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getEdgeWorkerActivation:getEdgeWorkerActivation": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgeWorkerActivation.\n",
                "properties": {
                    "edgeworkerId": {
                        "type": "integer"
                    },
                    "network": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "edgeworkerId",
                    "network"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEdgeWorkerActivation.\n",
                "properties": {
                    "activationId": {
                        "type": "integer"
                    },
                    "edgeworkerId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "activationId",
                    "edgeworkerId",
                    "network",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getEdgeWorkersPropertyRules:getEdgeWorkersPropertyRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgeWorkersPropertyRules.\n",
                "properties": {
                    "edgeworkerId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "edgeworkerId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEdgeWorkersPropertyRules.\n",
                "properties": {
                    "edgeworkerId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    }
                },
                "required": [
                    "edgeworkerId",
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getEdgeWorkersResourceTier:getEdgeWorkersResourceTier": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgeWorkersResourceTier.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "resourceTierName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "resourceTierName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEdgeWorkersResourceTier.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "resourceTierId": {
                        "type": "integer"
                    },
                    "resourceTierName": {
                        "type": "string"
                    }
                },
                "required": [
                    "contractId",
                    "resourceTierId",
                    "resourceTierName",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getEdgekvGroupItems:getEdgekvGroupItems": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgekvGroupItems.\n",
                "properties": {
                    "groupName": {
                        "type": "string"
                    },
                    "namespaceName": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groupName",
                    "namespaceName",
                    "network"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEdgekvGroupItems.\n",
                "properties": {
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "items": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "namespaceName": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    }
                },
                "required": [
                    "groupName",
                    "items",
                    "namespaceName",
                    "network",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getEdgekvGroups:getEdgekvGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgekvGroups.\n",
                "properties": {
                    "namespaceName": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "namespaceName",
                    "network"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEdgekvGroups.\n",
                "properties": {
                    "groups": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "namespaceName": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    }
                },
                "required": [
                    "groups",
                    "namespaceName",
                    "network",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGroup:getGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "contractId",
                    "groupName",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGroups:getGroups": {
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "groups": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGroupsGroup:getGroupsGroup"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "groups",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmAsmap:getGtmAsmap": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmAsmap.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmAsmapAssignment:getGtmAsmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/getGtmAsmapDefaultDatacenter:getGtmAsmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmAsmapLink:getGtmAsmapLink"
                        }
                    },
                    "mapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "mapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmAsmap.\n",
                "properties": {
                    "assignments": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmAsmapAssignment:getGtmAsmapAssignment"
                        },
                        "type": "array"
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/getGtmAsmapDefaultDatacenter:getGtmAsmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmAsmapLink:getGtmAsmapLink"
                        },
                        "type": "array"
                    },
                    "mapName": {
                        "type": "string"
                    }
                },
                "required": [
                    "domain",
                    "mapName",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmCidrmap:getGtmCidrmap": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmCidrmap.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmCidrmapAssignment:getGtmCidrmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/getGtmCidrmapDefaultDatacenter:getGtmCidrmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmCidrmapLink:getGtmCidrmapLink"
                        }
                    },
                    "mapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "mapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmCidrmap.\n",
                "properties": {
                    "assignments": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmCidrmapAssignment:getGtmCidrmapAssignment"
                        },
                        "type": "array"
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/getGtmCidrmapDefaultDatacenter:getGtmCidrmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmCidrmapLink:getGtmCidrmapLink"
                        },
                        "type": "array"
                    },
                    "mapName": {
                        "type": "string"
                    }
                },
                "required": [
                    "domain",
                    "mapName",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmDatacenter:getGtmDatacenter": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDatacenter.\n",
                "properties": {
                    "datacenterId": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDatacenter.\n",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "cloneOf": {
                        "type": "integer"
                    },
                    "cloudServerHostHeaderOverride": {
                        "type": "boolean"
                    },
                    "cloudServerTargeting": {
                        "type": "boolean"
                    },
                    "continent": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "defaultLoadObjects": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDatacenterDefaultLoadObject:getGtmDatacenterDefaultLoadObject"
                        },
                        "type": "array"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "links": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDatacenterLink:getGtmDatacenterLink"
                        },
                        "type": "array"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "scorePenalty": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "stateOrProvince": {
                        "type": "string"
                    },
                    "virtual": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "city",
                    "cloneOf",
                    "cloudServerHostHeaderOverride",
                    "cloudServerTargeting",
                    "continent",
                    "country",
                    "datacenterId",
                    "defaultLoadObjects",
                    "domain",
                    "latitude",
                    "links",
                    "longitude",
                    "nickname",
                    "scorePenalty",
                    "servermonitorPool",
                    "stateOrProvince",
                    "virtual",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmDatacenters:getGtmDatacenters": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDatacenters.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDatacenters.\n",
                "properties": {
                    "datacenters": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDatacentersDatacenter:getGtmDatacentersDatacenter"
                        },
                        "type": "array"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "datacenters",
                    "domain",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmDefaultDatacenter:getGtmDefaultDatacenter": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    }
                },
                "required": [
                    "datacenterId",
                    "domain",
                    "nickname",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmDomain:getGtmDomain": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDomain.\n",
                "properties": {
                    "asMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainAsMap:getGtmDomainAsMap"
                        }
                    },
                    "cidrMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainCidrMap:getGtmDomainCidrMap"
                        }
                    },
                    "datacenters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainDatacenter:getGtmDomainDatacenter"
                        }
                    },
                    "geographicMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainGeographicMap:getGtmDomainGeographicMap"
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainLink:getGtmDomainLink"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainProperty:getGtmDomainProperty"
                        }
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainResource:getGtmDomainResource"
                        }
                    },
                    "status": {
                        "$ref": "#/types/akamai:index/getGtmDomainStatus:getGtmDomainStatus"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDomain.\n",
                "properties": {
                    "asMaps": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainAsMap:getGtmDomainAsMap"
                        },
                        "type": "array"
                    },
                    "cidrMaps": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainCidrMap:getGtmDomainCidrMap"
                        },
                        "type": "array"
                    },
                    "cnameCoalescingEnabled": {
                        "type": "boolean"
                    },
                    "datacenters": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainDatacenter:getGtmDomainDatacenter"
                        },
                        "type": "array"
                    },
                    "defaultErrorPenalty": {
                        "type": "integer"
                    },
                    "defaultHealthMax": {
                        "type": "number"
                    },
                    "defaultHealthMultiplier": {
                        "type": "number"
                    },
                    "defaultHealthThreshold": {
                        "type": "number"
                    },
                    "defaultMaxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "defaultSslClientCertificate": {
                        "type": "string"
                    },
                    "defaultSslClientPrivateKey": {
                        "type": "string"
                    },
                    "defaultTimeoutPenalty": {
                        "type": "integer"
                    },
                    "defaultUnreachableThreshold": {
                        "type": "number"
                    },
                    "emailNotificationLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "endUserMappingEnabled": {
                        "type": "boolean"
                    },
                    "geographicMaps": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainGeographicMap:getGtmDomainGeographicMap"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "lastModified": {
                        "type": "string"
                    },
                    "lastModifiedBy": {
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainLink:getGtmDomainLink"
                        },
                        "type": "array"
                    },
                    "loadFeedback": {
                        "type": "boolean"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapUpdateInterval": {
                        "type": "integer"
                    },
                    "maxProperties": {
                        "type": "integer"
                    },
                    "maxResources": {
                        "type": "integer"
                    },
                    "maxTestTimeout": {
                        "type": "number"
                    },
                    "maxTtl": {
                        "type": "integer"
                    },
                    "minPingableRegionFraction": {
                        "type": "number"
                    },
                    "minTestInterval": {
                        "type": "integer"
                    },
                    "minTtl": {
                        "type": "integer"
                    },
                    "modificationComments": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "properties": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainProperty:getGtmDomainProperty"
                        },
                        "type": "array"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainResource:getGtmDomainResource"
                        },
                        "type": "array"
                    },
                    "roundRobinPrefix": {
                        "type": "string"
                    },
                    "serverMonitorPool": {
                        "type": "string"
                    },
                    "signAndServe": {
                        "type": "boolean"
                    },
                    "signAndServeAlgorithm": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/types/akamai:index/getGtmDomainStatus:getGtmDomainStatus"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "cnameCoalescingEnabled",
                    "defaultErrorPenalty",
                    "defaultHealthMax",
                    "defaultHealthMultiplier",
                    "defaultHealthThreshold",
                    "defaultMaxUnreachablePenalty",
                    "defaultSslClientCertificate",
                    "defaultSslClientPrivateKey",
                    "defaultTimeoutPenalty",
                    "defaultUnreachableThreshold",
                    "emailNotificationLists",
                    "endUserMappingEnabled",
                    "id",
                    "lastModified",
                    "lastModifiedBy",
                    "loadFeedback",
                    "loadImbalancePercentage",
                    "mapUpdateInterval",
                    "maxProperties",
                    "maxResources",
                    "maxTestTimeout",
                    "maxTtl",
                    "minPingableRegionFraction",
                    "minTestInterval",
                    "minTtl",
                    "modificationComments",
                    "name",
                    "roundRobinPrefix",
                    "serverMonitorPool",
                    "signAndServe",
                    "signAndServeAlgorithm",
                    "type"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmDomains:getGtmDomains": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDomains.\n",
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainsDomain:getGtmDomainsDomain"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDomains.\n",
                "properties": {
                    "domains": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmDomainsDomain:getGtmDomainsDomain"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmGeomap:getGtmGeomap": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmGeomap.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "mapName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "mapName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmGeomap.\n",
                "properties": {
                    "assignments": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmGeomapAssignment:getGtmGeomapAssignment"
                        },
                        "type": "array"
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/getGtmGeomapDefaultDatacenter:getGtmGeomapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmGeomapLink:getGtmGeomapLink"
                        },
                        "type": "array"
                    },
                    "mapName": {
                        "type": "string"
                    }
                },
                "required": [
                    "assignments",
                    "defaultDatacenter",
                    "domain",
                    "links",
                    "mapName",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmGeomaps:getGtmGeomaps": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmGeomaps.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmGeomaps.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "geoMaps": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmGeomapsGeoMap:getGtmGeomapsGeoMap"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "domain",
                    "geoMaps",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmResource:getGtmResource": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmResource.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmResourceLink:getGtmResourceLink"
                        }
                    },
                    "resourceInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmResourceResourceInstance:getGtmResourceResourceInstance"
                        }
                    },
                    "resourceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "resourceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmResource.\n",
                "properties": {
                    "aggregationType": {
                        "type": "string"
                    },
                    "constrainedProperty": {
                        "type": "string"
                    },
                    "decayRate": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "hostHeader": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "leaderString": {
                        "type": "string"
                    },
                    "leastSquaresDecay": {
                        "type": "number"
                    },
                    "links": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmResourceLink:getGtmResourceLink"
                        },
                        "type": "array"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "maxUMultiplicativeIncrement": {
                        "type": "number"
                    },
                    "resourceInstances": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmResourceResourceInstance:getGtmResourceResourceInstance"
                        },
                        "type": "array"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "upperBound": {
                        "type": "integer"
                    }
                },
                "required": [
                    "aggregationType",
                    "constrainedProperty",
                    "decayRate",
                    "description",
                    "domain",
                    "hostHeader",
                    "id",
                    "leaderString",
                    "leastSquaresDecay",
                    "loadImbalancePercentage",
                    "maxUMultiplicativeIncrement",
                    "resourceName",
                    "type",
                    "upperBound"
                ],
                "type": "object"
            }
        },
        "akamai:index/getGtmResources:getGtmResources": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmResources.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmResourcesResource:getGtmResourcesResource"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmResources.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/types/akamai:index/getGtmResourcesResource:getGtmResourcesResource"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "domain",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamAccountSwitchKeys:getIamAccountSwitchKeys": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamAccountSwitchKeys.\n",
                "properties": {
                    "clientId": {
                        "type": "string"
                    },
                    "filter": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIamAccountSwitchKeys.\n",
                "properties": {
                    "accountSwitchKeys": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamAccountSwitchKeysAccountSwitchKey:getIamAccountSwitchKeysAccountSwitchKey"
                        },
                        "type": "array"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "filter": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "accountSwitchKeys",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamAllowedApis:getIamAllowedApis": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamAllowedApis.\n",
                "properties": {
                    "allowAccountSwitch": {
                        "type": "boolean"
                    },
                    "clientType": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamAllowedApis.\n",
                "properties": {
                    "allowAccountSwitch": {
                        "type": "boolean"
                    },
                    "allowedApis": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamAllowedApisAllowedApi:getIamAllowedApisAllowedApi"
                        },
                        "type": "array"
                    },
                    "clientType": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "allowedApis",
                    "username",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamApiClient:getIamApiClient": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamApiClient.\n",
                "properties": {
                    "clientId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIamApiClient.\n",
                "properties": {
                    "accessToken": {
                        "secret": true,
                        "type": "string"
                    },
                    "actions": {
                        "$ref": "#/types/akamai:index/getIamApiClientActions:getIamApiClientActions"
                    },
                    "activeCredentialCount": {
                        "type": "integer"
                    },
                    "allowAccountSwitch": {
                        "type": "boolean"
                    },
                    "apiAccess": {
                        "$ref": "#/types/akamai:index/getIamApiClientApiAccess:getIamApiClientApiAccess"
                    },
                    "authorizedUsers": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "baseUrl": {
                        "secret": true,
                        "type": "string"
                    },
                    "canAutoCreateCredential": {
                        "type": "boolean"
                    },
                    "clientDescription": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "clientName": {
                        "type": "string"
                    },
                    "clientType": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string"
                    },
                    "credentials": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamApiClientCredential:getIamApiClientCredential"
                        },
                        "type": "array"
                    },
                    "groupAccess": {
                        "$ref": "#/types/akamai:index/getIamApiClientGroupAccess:getIamApiClientGroupAccess"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ipAcl": {
                        "$ref": "#/types/akamai:index/getIamApiClientIpAcl:getIamApiClientIpAcl"
                    },
                    "isLocked": {
                        "type": "boolean"
                    },
                    "notificationEmails": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "purgeOptions": {
                        "$ref": "#/types/akamai:index/getIamApiClientPurgeOptions:getIamApiClientPurgeOptions"
                    }
                },
                "required": [
                    "accessToken",
                    "actions",
                    "activeCredentialCount",
                    "allowAccountSwitch",
                    "apiAccess",
                    "authorizedUsers",
                    "baseUrl",
                    "canAutoCreateCredential",
                    "clientDescription",
                    "clientName",
                    "clientType",
                    "createdBy",
                    "createdDate",
                    "credentials",
                    "groupAccess",
                    "ipAcl",
                    "isLocked",
                    "notificationEmails",
                    "purgeOptions",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamApiClients:getIamApiClients": {
            "outputs": {
                "description": "A collection of values returned by getIamApiClients.\n",
                "properties": {
                    "apiClients": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamApiClientsApiClient:getIamApiClientsApiClient"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "apiClients",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamBlockedProperties:getIamBlockedProperties": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamBlockedProperties.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer"
                    },
                    "uiIdentityId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "uiIdentityId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamBlockedProperties.\n",
                "properties": {
                    "blockedProperties": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamBlockedPropertiesBlockedProperty:getIamBlockedPropertiesBlockedProperty"
                        },
                        "type": "array"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "uiIdentityId": {
                        "type": "string"
                    }
                },
                "required": [
                    "blockedProperties",
                    "contractId",
                    "groupId",
                    "uiIdentityId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamCidrBlock:getIamCidrBlock": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamCidrBlock.\n",
                "properties": {
                    "cidrBlockId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "cidrBlockId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamCidrBlock.\n",
                "properties": {
                    "actions": {
                        "$ref": "#/types/akamai:index/getIamCidrBlockActions:getIamCidrBlockActions"
                    },
                    "cidrBlock": {
                        "type": "string"
                    },
                    "cidrBlockId": {
                        "type": "integer"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "modifiedBy": {
                        "type": "string"
                    },
                    "modifiedDate": {
                        "type": "string"
                    }
                },
                "required": [
                    "actions",
                    "cidrBlock",
                    "cidrBlockId",
                    "comments",
                    "createdBy",
                    "createdDate",
                    "enabled",
                    "modifiedBy",
                    "modifiedDate",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamCidrBlocks:getIamCidrBlocks": {
            "outputs": {
                "description": "A collection of values returned by getIamCidrBlocks.\n",
                "properties": {
                    "cidrBlocks": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamCidrBlocksCidrBlock:getIamCidrBlocksCidrBlock"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "cidrBlocks",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamContactTypes:getIamContactTypes": {
            "outputs": {
                "description": "A collection of values returned by getIamContactTypes.\n",
                "properties": {
                    "contactTypes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "contactTypes",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamCountries:getIamCountries": {
            "outputs": {
                "description": "A collection of values returned by getIamCountries.\n",
                "properties": {
                    "countries": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "countries",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamGrantableRoles:getIamGrantableRoles": {
            "outputs": {
                "description": "A collection of values returned by getIamGrantableRoles.\n",
                "properties": {
                    "grantableRoles": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamGrantableRolesGrantableRole:getIamGrantableRolesGrantableRole"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "grantableRoles",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamPasswordPolicy:getIamPasswordPolicy": {
            "outputs": {
                "description": "A collection of values returned by getIamPasswordPolicy.\n",
                "properties": {
                    "caseDif": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "maxRepeating": {
                        "type": "integer"
                    },
                    "minDigits": {
                        "type": "integer"
                    },
                    "minLength": {
                        "type": "integer"
                    },
                    "minLetters": {
                        "type": "integer"
                    },
                    "minNonAlpha": {
                        "type": "integer"
                    },
                    "minReuse": {
                        "type": "integer"
                    },
                    "pwClass": {
                        "type": "string"
                    },
                    "rotateFrequency": {
                        "type": "integer"
                    }
                },
                "required": [
                    "caseDif",
                    "maxRepeating",
                    "minDigits",
                    "minLength",
                    "minLetters",
                    "minNonAlpha",
                    "minReuse",
                    "pwClass",
                    "rotateFrequency",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamPropertyUsers:getIamPropertyUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamPropertyUsers.\n",
                "properties": {
                    "assetId": {
                        "type": "string"
                    },
                    "userType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "assetId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamPropertyUsers.\n",
                "properties": {
                    "assetId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "userType": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamPropertyUsersUser:getIamPropertyUsersUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "assetId",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamRole:getIamRole": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamRole.\n",
                "properties": {
                    "roleId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "roleId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamRole.\n",
                "properties": {
                    "actions": {
                        "$ref": "#/types/akamai:index/getIamRoleActions:getIamRoleActions"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string"
                    },
                    "grantedRoles": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamRoleGrantedRole:getIamRoleGrantedRole"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "modifiedBy": {
                        "type": "string"
                    },
                    "modifiedDate": {
                        "type": "string"
                    },
                    "roleDescription": {
                        "type": "string"
                    },
                    "roleId": {
                        "type": "integer"
                    },
                    "roleName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamRoleUser:getIamRoleUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "actions",
                    "createdBy",
                    "createdDate",
                    "grantedRoles",
                    "modifiedBy",
                    "modifiedDate",
                    "roleDescription",
                    "roleId",
                    "roleName",
                    "type",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamRoles:getIamRoles": {
            "outputs": {
                "description": "A collection of values returned by getIamRoles.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "roles": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamRolesRole:getIamRolesRole"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "roles",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamStates:getIamStates": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamStates.\n",
                "properties": {
                    "country": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "country"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamStates.\n",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "states": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "country",
                    "states",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamSupportedLangs:getIamSupportedLangs": {
            "outputs": {
                "description": "A collection of values returned by getIamSupportedLangs.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "languages": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "languages",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamTimeoutPolicies:getIamTimeoutPolicies": {
            "outputs": {
                "description": "A collection of values returned by getIamTimeoutPolicies.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "policies": {
                        "additionalProperties": {
                            "type": "integer"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "policies",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamTimezones:getIamTimezones": {
            "outputs": {
                "description": "A collection of values returned by getIamTimezones.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "timezones": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamTimezonesTimezone:getIamTimezonesTimezone"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "timezones",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getIamUsersAffectedByMovingGroup:getIamUsersAffectedByMovingGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getIamUsersAffectedByMovingGroup.\n",
                "properties": {
                    "destinationGroupId": {
                        "type": "integer"
                    },
                    "sourceGroupId": {
                        "type": "integer"
                    },
                    "userType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationGroupId",
                    "sourceGroupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIamUsersAffectedByMovingGroup.\n",
                "properties": {
                    "destinationGroupId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "sourceGroupId": {
                        "type": "integer"
                    },
                    "userType": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/akamai:index/getIamUsersAffectedByMovingGroupUser:getIamUsersAffectedByMovingGroupUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "destinationGroupId",
                    "sourceGroupId",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getImagingPolicyImage:getImagingPolicyImage": {
            "inputs": {
                "description": "A collection of arguments for invoking getImagingPolicyImage.\n",
                "properties": {
                    "policy": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicy:getImagingPolicyImagePolicy"
                    }
                },
                "type": "object",
                "required": [
                    "policy"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getImagingPolicyImage.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "policy": {
                        "$ref": "#/types/akamai:index/getImagingPolicyImagePolicy:getImagingPolicyImagePolicy"
                    }
                },
                "required": [
                    "json",
                    "policy",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getImagingPolicyVideo:getImagingPolicyVideo": {
            "inputs": {
                "description": "A collection of arguments for invoking getImagingPolicyVideo.\n",
                "properties": {
                    "policy": {
                        "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicy:getImagingPolicyVideoPolicy"
                    }
                },
                "type": "object",
                "required": [
                    "policy"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getImagingPolicyVideo.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "policy": {
                        "$ref": "#/types/akamai:index/getImagingPolicyVideoPolicy:getImagingPolicyVideoPolicy"
                    }
                },
                "required": [
                    "json",
                    "policy",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getMtlskeystoreAccountCaCertificates:getMtlskeystoreAccountCaCertificates": {
            "inputs": {
                "description": "A collection of arguments for invoking getMtlskeystoreAccountCaCertificates.\n",
                "properties": {
                    "statuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMtlskeystoreAccountCaCertificates.\n",
                "properties": {
                    "certificates": {
                        "items": {
                            "$ref": "#/types/akamai:index/getMtlskeystoreAccountCaCertificatesCertificate:getMtlskeystoreAccountCaCertificatesCertificate"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "statuses": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "certificates",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getMtlskeystoreClientCertificate:getMtlskeystoreClientCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getMtlskeystoreClientCertificate.\n",
                "properties": {
                    "certificateId": {
                        "type": "integer"
                    },
                    "includeAssociatedProperties": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "certificateId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMtlskeystoreClientCertificate.\n",
                "properties": {
                    "certificateId": {
                        "type": "integer"
                    },
                    "certificateName": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string"
                    },
                    "current": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateCurrent:getMtlskeystoreClientCertificateCurrent"
                    },
                    "geography": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "includeAssociatedProperties": {
                        "type": "boolean"
                    },
                    "keyAlgorithm": {
                        "type": "string"
                    },
                    "notificationEmails": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "previous": {
                        "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificatePrevious:getMtlskeystoreClientCertificatePrevious"
                    },
                    "secureNetwork": {
                        "type": "string"
                    },
                    "signer": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificateVersion:getMtlskeystoreClientCertificateVersion"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "certificateId",
                    "certificateName",
                    "createdBy",
                    "createdDate",
                    "current",
                    "geography",
                    "keyAlgorithm",
                    "notificationEmails",
                    "previous",
                    "secureNetwork",
                    "signer",
                    "subject",
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getMtlskeystoreClientCertificates:getMtlskeystoreClientCertificates": {
            "outputs": {
                "description": "A collection of values returned by getMtlskeystoreClientCertificates.\n",
                "properties": {
                    "certificates": {
                        "items": {
                            "$ref": "#/types/akamai:index/getMtlskeystoreClientCertificatesCertificate:getMtlskeystoreClientCertificatesCertificate"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "certificates",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getNetworkLists:getNetworkLists": {
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkLists.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "networkListId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkLists.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "lists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkListId": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "syncPoint": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "contractId",
                    "groupId",
                    "json",
                    "lists",
                    "networkListId",
                    "outputText",
                    "syncPoint",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getProperties:getProperties": {
            "inputs": {
                "description": "A collection of arguments for invoking getProperties.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperties.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "properties": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertiesProperty:getPropertiesProperty"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "contractId",
                    "groupId",
                    "properties",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertiesSearch:getPropertiesSearch": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertiesSearch.\n",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "value"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertiesSearch.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "properties": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertiesSearchProperty:getPropertiesSearchProperty"
                        },
                        "type": "array"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "key",
                    "properties",
                    "value",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getProperty:getProperty": {
            "inputs": {
                "description": "A collection of arguments for invoking getProperty.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperty.\n",
                "properties": {
                    "assetId": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "latestVersion": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "productionVersion": {
                        "type": "integer"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "propertyType": {
                        "type": "string"
                    },
                    "ruleFormat": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "stagingVersion": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "assetId",
                    "contractId",
                    "groupId",
                    "latestVersion",
                    "name",
                    "note",
                    "productId",
                    "productionVersion",
                    "propertyId",
                    "propertyType",
                    "ruleFormat",
                    "rules",
                    "stagingVersion",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyActivation:getPropertyActivation": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyActivation.\n",
                "properties": {
                    "network": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyActivation.\n",
                "properties": {
                    "activationId": {
                        "type": "string"
                    },
                    "contacts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "errors": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "warnings": {
                        "type": "string"
                    }
                },
                "required": [
                    "activationId",
                    "contacts",
                    "errors",
                    "note",
                    "propertyId",
                    "status",
                    "warnings",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyHostnameActivation:getPropertyHostnameActivation": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyHostnameActivation.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "hostnameActivationId": {
                        "type": "string"
                    },
                    "includeHostnames": {
                        "type": "boolean"
                    },
                    "propertyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "hostnameActivationId",
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyHostnameActivation.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "activationType": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "hostnameActivationId": {
                        "type": "string"
                    },
                    "hostnames": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyHostnameActivationHostname:getPropertyHostnameActivationHostname"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "includeHostnames": {
                        "type": "boolean"
                    },
                    "network": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "notifyEmails": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "propertyName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "submitDate": {
                        "type": "string"
                    },
                    "updateDate": {
                        "type": "string"
                    }
                },
                "required": [
                    "accountId",
                    "activationType",
                    "contractId",
                    "groupId",
                    "hostnameActivationId",
                    "hostnames",
                    "network",
                    "note",
                    "notifyEmails",
                    "propertyId",
                    "propertyName",
                    "status",
                    "submitDate",
                    "updateDate",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyHostnameActivations:getPropertyHostnameActivations": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyHostnameActivations.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyHostnameActivations.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "hostnameActivations": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyHostnameActivationsHostnameActivation:getPropertyHostnameActivationsHostnameActivation"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "propertyName": {
                        "type": "string"
                    }
                },
                "required": [
                    "accountId",
                    "contractId",
                    "groupId",
                    "hostnameActivations",
                    "propertyId",
                    "propertyName",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyHostnames:getPropertyHostnames": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyHostnames.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "filterPendingDefaultCerts": {
                        "type": "boolean"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyHostnames.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "filterPendingDefaultCerts": {
                        "type": "boolean"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "hostnameBuckets": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyHostnamesHostnameBucket:getPropertyHostnamesHostnameBucket"
                        },
                        "type": "array"
                    },
                    "hostnames": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyHostnamesHostname:getPropertyHostnamesHostname"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "contractId",
                    "groupId",
                    "hostnameBuckets",
                    "hostnames",
                    "propertyId",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyHostnamesDiff:getPropertyHostnamesDiff": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyHostnamesDiff.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyHostnamesDiff.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "hostnames": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyHostnamesDiffHostname:getPropertyHostnamesDiffHostname"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    }
                },
                "required": [
                    "accountId",
                    "contractId",
                    "groupId",
                    "hostnames",
                    "propertyId",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyInclude:getPropertyInclude": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyInclude.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "includeId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "includeId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyInclude.\n",
                "properties": {
                    "assetId": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "includeId": {
                        "type": "string"
                    },
                    "latestVersion": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productionVersion": {
                        "type": "integer"
                    },
                    "stagingVersion": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "assetId",
                    "contractId",
                    "groupId",
                    "id",
                    "includeId",
                    "latestVersion",
                    "name",
                    "productionVersion",
                    "stagingVersion",
                    "type"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyIncludeActivation:getPropertyIncludeActivation": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyIncludeActivation.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "includeId": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "includeId",
                    "network"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyIncludeActivation.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "includeId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string"
                    },
                    "notifyEmails": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "contractId",
                    "groupId",
                    "includeId",
                    "name",
                    "network",
                    "note",
                    "notifyEmails",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyIncludeParents:getPropertyIncludeParents": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyIncludeParents.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "includeId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "includeId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyIncludeParents.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "includeId": {
                        "type": "string"
                    },
                    "parents": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyIncludeParentsParent:getPropertyIncludeParentsParent"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "contractId",
                    "groupId",
                    "includeId",
                    "parents",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyIncludeRules:getPropertyIncludeRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyIncludeRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "includeId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "includeId",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyIncludeRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "includeId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ruleErrors": {
                        "type": "string"
                    },
                    "ruleFormat": {
                        "type": "string"
                    },
                    "ruleWarnings": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "contractId",
                    "groupId",
                    "includeId",
                    "name",
                    "ruleErrors",
                    "ruleFormat",
                    "ruleWarnings",
                    "rules",
                    "type",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyIncludes:getPropertyIncludes": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyIncludes.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "parentProperty": {
                        "$ref": "#/types/akamai:index/getPropertyIncludesParentProperty:getPropertyIncludesParentProperty"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyIncludes.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "includes": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyIncludesInclude:getPropertyIncludesInclude"
                        },
                        "type": "array"
                    },
                    "parentProperty": {
                        "$ref": "#/types/akamai:index/getPropertyIncludesParentProperty:getPropertyIncludesParentProperty"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "contractId",
                    "groupId",
                    "includes",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyProducts:getPropertyProducts": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyProducts.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyProducts.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "products": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyProductsProduct:getPropertyProductsProduct"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "contractId",
                    "products",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyRuleFormats:getPropertyRuleFormats": {
            "outputs": {
                "description": "A collection of values returned by getPropertyRuleFormats.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ruleFormats": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ruleFormats",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyRules:getPropertyRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "ruleFormat": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "ruleFormat": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "contractId",
                    "errors",
                    "groupId",
                    "propertyId",
                    "rules",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getPropertyRulesTemplate:getPropertyRulesTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRulesTemplate.\n",
                "properties": {
                    "followLinks": {
                        "type": "boolean"
                    },
                    "templateFile": {
                        "type": "string"
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyRulesTemplateTemplate:getPropertyRulesTemplateTemplate"
                        }
                    },
                    "varDefinitionFile": {
                        "type": "string"
                    },
                    "varValuesFile": {
                        "type": "string"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRulesTemplate.\n",
                "properties": {
                    "followLinks": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "json": {
                        "type": "string"
                    },
                    "templateFile": {
                        "type": "string"
                    },
                    "templates": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyRulesTemplateTemplate:getPropertyRulesTemplateTemplate"
                        },
                        "type": "array"
                    },
                    "varDefinitionFile": {
                        "type": "string"
                    },
                    "varValuesFile": {
                        "type": "string"
                    },
                    "variables": {
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "json",
                    "id"
                ],
                "type": "object"
            }
        },
        "akamai:index/getZoneDnssecStatus:getZoneDnssecStatus": {
            "inputs": {
                "description": "A collection of arguments for invoking getZoneDnssecStatus.\n",
                "properties": {
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZoneDnssecStatus.\n",
                "properties": {
                    "alerts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "currentRecords": {
                        "$ref": "#/types/akamai:index/getZoneDnssecStatusCurrentRecords:getZoneDnssecStatusCurrentRecords"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "newRecords": {
                        "$ref": "#/types/akamai:index/getZoneDnssecStatusNewRecords:getZoneDnssecStatusNewRecords"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "required": [
                    "alerts",
                    "currentRecords",
                    "newRecords",
                    "zone",
                    "id"
                ],
                "type": "object"
            }
        },
        "pulumi:providers:akamai/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/provider"
                    }
                },
                "type": "pulumi:providers:akamai/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        }
    }
}