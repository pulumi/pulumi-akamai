{
    "name": "akamai",
    "description": "A Pulumi package for creating and managing akamai cloud resources.",
    "keywords": [
        "pulumi",
        "akamai"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`akamai` Terraform Provider](https://github.com/akamai/terraform-provider-akamai).",
    "repository": "https://github.com/pulumi/pulumi-akamai",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "appsecSection": {
                "type": "string",
                "deprecationMessage": "The setting \"appsec_section\" has been deprecated."
            },
            "appsecs": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:config/appsecs:appsecs"
                },
                "deprecationMessage": "The setting \"appsec\" has been deprecated."
            },
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:config/config:config",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration\n"
            },
            "dns": {
                "$ref": "#/types/akamai:config/dns:dns",
                "deprecationMessage": "The setting \"dns\" has been deprecated."
            },
            "dnsSection": {
                "type": "string",
                "deprecationMessage": "The setting \"dns_section\" has been deprecated."
            },
            "edgerc": {
                "type": "string"
            },
            "gtm": {
                "$ref": "#/types/akamai:config/gtm:gtm",
                "deprecationMessage": "The setting \"gtm\" has been deprecated."
            },
            "gtmSection": {
                "type": "string",
                "deprecationMessage": "The setting \"gtm_section\" has been deprecated."
            },
            "networklistSection": {
                "type": "string",
                "deprecationMessage": "The setting \"networklist_section\" has been deprecated."
            },
            "networks": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:config/networks:networks"
                }
            },
            "papiSection": {
                "type": "string",
                "deprecationMessage": "The setting \"papi_section\" has been deprecated."
            },
            "property": {
                "$ref": "#/types/akamai:config/property:property",
                "deprecationMessage": "The setting \"property\" has been deprecated."
            },
            "propertySection": {
                "type": "string",
                "deprecationMessage": "The setting \"property_section\" has been deprecated."
            }
        }
    },
    "types": {
        "akamai:config/appsecs:appsecs": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/config:config": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/dns:dns": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/gtm:gtm": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/networks:networks": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/property:property": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "name",
                "secret"
            ]
        },
        "akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "addressLineTwo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "city": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "organization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postalCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addressLineOne",
                "city",
                "countryCode",
                "email",
                "firstName",
                "lastName",
                "organization",
                "phone",
                "postalCode",
                "region"
            ]
        },
        "akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr": {
            "properties": {
                "city": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "organization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "organizationalUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "city",
                "countryCode",
                "organization",
                "organizationalUnit",
                "state"
            ]
        },
        "akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge": {
            "properties": {
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseBody": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domain",
                        "fullPath",
                        "responseBody"
                    ]
                }
            }
        },
        "akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge": {
            "properties": {
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseBody": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domain",
                        "fullPath",
                        "responseBody"
                    ]
                }
            }
        },
        "akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration": {
            "properties": {
                "clientMutualAuthentication": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication:CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloneDnsNames": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disallowedTlsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geography": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustHaveCiphers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ocspStapling": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preferredCiphers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quicEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "geography"
            ]
        },
        "akamai:index/CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication:CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication": {
            "properties": {
                "ocspEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendCaListToClient": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "setId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "addressLineTwo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "city": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postalCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addressLineOne",
                "city",
                "countryCode",
                "name",
                "phone",
                "postalCode",
                "region"
            ]
        },
        "akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "addressLineTwo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "city": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "organization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postalCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addressLineOne",
                "city",
                "countryCode",
                "email",
                "firstName",
                "lastName",
                "organization",
                "phone",
                "postalCode",
                "region"
            ]
        },
        "akamai:index/DnsZoneTsigKey:DnsZoneTsigKey": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "name",
                "secret"
            ]
        },
        "akamai:index/GtmAsmapAssignment:GtmAsmapAssignment": {
            "properties": {
                "asNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "asNumbers",
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment": {
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject": {
            "properties": {
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmGeomapAssignment:GtmGeomapAssignment": {
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest": {
            "properties": {
                "answersRequired": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableNonstandardPortWarning": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError3xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError4xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError5xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "peerCertificateVerification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recursionRequested": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientPrivateKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testInterval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testTimeout": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "testInterval",
                "testObject",
                "testObjectProtocol",
                "testTimeout"
            ]
        },
        "akamai:index/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet": {
            "properties": {
                "rdatas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "handoutCname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDefaultLoadObject": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/PropertyActivationRuleError:PropertyActivationRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyActivationRuleWarning:PropertyActivationRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyHostname:PropertyHostname": {
            "properties": {
                "certProvisioningType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyHostnameCertStatus:PropertyHostnameCertStatus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "edgeHostnameId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certProvisioningType",
                "cnameFrom",
                "cnameTo"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certProvisioningType",
                        "certStatuses",
                        "cnameFrom",
                        "cnameTo",
                        "cnameType",
                        "edgeHostnameId"
                    ]
                }
            }
        },
        "akamai:index/PropertyHostnameCertStatus:PropertyHostnameCertStatus": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stagingStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostname",
                        "productionStatus",
                        "stagingStatus",
                        "target"
                    ]
                }
            }
        },
        "akamai:index/PropertyOrigin:PropertyOrigin": {
            "properties": {
                "cacheKeyHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableTrueClientIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forwardHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyRuleError:PropertyRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyRuleWarning:PropertyRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyVariablesVariable:PropertyVariablesVariable": {
            "properties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hidden": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hidden",
                "name",
                "sensitive"
            ]
        },
        "akamai:index/ProviderAppsec:ProviderAppsec": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderConfig:ProviderConfig": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderDns:ProviderDns": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderGtm:ProviderGtm": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderNetwork:ProviderNetwork": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderProperty:ProviderProperty": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/getContractsContract:getContractsContract": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contractTypeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contractId",
                "contractTypeName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGroupsGroup:getGroupsGroup": {
            "properties": {
                "contractIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentGroupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contractIds",
                "groupId",
                "groupName",
                "parentGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertiesProperty:getPropertiesProperty": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latestVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "note": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productionVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stagingVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contractId",
                "groupId",
                "latestVersion",
                "note",
                "productId",
                "productionVersion",
                "propertyId",
                "propertyName",
                "ruleFormat",
                "stagingVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnamesHostname:getPropertyHostnamesHostname": {
            "properties": {
                "certProvisioningType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getPropertyHostnamesHostnameCertStatus:getPropertyHostnamesHostnameCertStatus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "edgeHostnameId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certProvisioningType",
                "certStatuses",
                "cnameFrom",
                "cnameTo",
                "cnameType",
                "edgeHostnameId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnamesHostnameCertStatus:getPropertyHostnamesHostnameCertStatus": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stagingStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hostname",
                "productionStatus",
                "stagingStatus",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyProductsProduct:getPropertyProductsProduct": {
            "properties": {
                "productId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "productId",
                "productName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "akamai:properties/PropertyActivationRuleError:PropertyActivationRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyActivationRuleWarning:PropertyActivationRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyHostname:PropertyHostname": {
            "properties": {
                "certProvisioningType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyHostnameCertStatus:PropertyHostnameCertStatus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "edgeHostnameId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certProvisioningType",
                "cnameFrom",
                "cnameTo"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certProvisioningType",
                        "certStatuses",
                        "cnameFrom",
                        "cnameTo",
                        "cnameType",
                        "edgeHostnameId"
                    ]
                }
            }
        },
        "akamai:properties/PropertyHostnameCertStatus:PropertyHostnameCertStatus": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stagingStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostname",
                        "productionStatus",
                        "stagingStatus",
                        "target"
                    ]
                }
            }
        },
        "akamai:properties/PropertyOrigin:PropertyOrigin": {
            "properties": {
                "cacheKeyHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableTrueClientIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forwardHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyRuleError:PropertyRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyRuleWarning:PropertyRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable": {
            "properties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hidden": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hidden",
                "name",
                "sensitive"
            ]
        },
        "akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment": {
            "properties": {
                "asNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "asNumbers",
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment": {
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject": {
            "properties": {
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment": {
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest": {
            "properties": {
                "answersRequired": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableNonstandardPortWarning": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError3xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError4xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError5xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "peerCertificateVerification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recursionRequested": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientPrivateKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testInterval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testTimeout": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "testInterval",
                "testObject",
                "testObjectProtocol",
                "testTimeout"
            ]
        },
        "akamai:trafficmanagement/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet": {
            "properties": {
                "rdatas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "handoutCname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDefaultLoadObject": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the akamai package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "appsecSection": {
                "type": "string",
                "deprecationMessage": "The setting \"appsec_section\" has been deprecated."
            },
            "appsecs": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:index/ProviderAppsec:ProviderAppsec"
                },
                "deprecationMessage": "The setting \"appsec\" has been deprecated."
            },
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:index/ProviderConfig:ProviderConfig",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration\n"
            },
            "dns": {
                "$ref": "#/types/akamai:index/ProviderDns:ProviderDns",
                "deprecationMessage": "The setting \"dns\" has been deprecated."
            },
            "dnsSection": {
                "type": "string",
                "deprecationMessage": "The setting \"dns_section\" has been deprecated."
            },
            "edgerc": {
                "type": "string"
            },
            "gtm": {
                "$ref": "#/types/akamai:index/ProviderGtm:ProviderGtm",
                "deprecationMessage": "The setting \"gtm\" has been deprecated."
            },
            "gtmSection": {
                "type": "string",
                "deprecationMessage": "The setting \"gtm_section\" has been deprecated."
            },
            "networklistSection": {
                "type": "string",
                "deprecationMessage": "The setting \"networklist_section\" has been deprecated."
            },
            "networks": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:index/ProviderNetwork:ProviderNetwork"
                }
            },
            "papiSection": {
                "type": "string",
                "deprecationMessage": "The setting \"papi_section\" has been deprecated."
            },
            "property": {
                "$ref": "#/types/akamai:index/ProviderProperty:ProviderProperty",
                "deprecationMessage": "The setting \"property\" has been deprecated."
            },
            "propertySection": {
                "type": "string",
                "deprecationMessage": "The setting \"property_section\" has been deprecated."
            }
        },
        "inputProperties": {
            "appsecSection": {
                "type": "string",
                "deprecationMessage": "The setting \"appsec_section\" has been deprecated."
            },
            "appsecs": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:index/ProviderAppsec:ProviderAppsec"
                },
                "deprecationMessage": "The setting \"appsec\" has been deprecated."
            },
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:index/ProviderConfig:ProviderConfig",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration\n"
            },
            "dns": {
                "$ref": "#/types/akamai:index/ProviderDns:ProviderDns",
                "deprecationMessage": "The setting \"dns\" has been deprecated."
            },
            "dnsSection": {
                "type": "string",
                "deprecationMessage": "The setting \"dns_section\" has been deprecated."
            },
            "edgerc": {
                "type": "string"
            },
            "gtm": {
                "$ref": "#/types/akamai:index/ProviderGtm:ProviderGtm",
                "deprecationMessage": "The setting \"gtm\" has been deprecated."
            },
            "gtmSection": {
                "type": "string",
                "deprecationMessage": "The setting \"gtm_section\" has been deprecated."
            },
            "networklistSection": {
                "type": "string",
                "deprecationMessage": "The setting \"networklist_section\" has been deprecated."
            },
            "networks": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:index/ProviderNetwork:ProviderNetwork"
                }
            },
            "papiSection": {
                "type": "string",
                "deprecationMessage": "The setting \"papi_section\" has been deprecated."
            },
            "property": {
                "$ref": "#/types/akamai:index/ProviderProperty:ProviderProperty",
                "deprecationMessage": "The setting \"property\" has been deprecated."
            },
            "propertySection": {
                "type": "string",
                "deprecationMessage": "The setting \"property_section\" has been deprecated."
            }
        }
    },
    "resources": {
        "akamai:edgedns/dnsRecord:DnsRecord": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "algorithm": {
                    "type": "integer"
                },
                "answerType": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "dnsName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordSha": {
                    "type": "string"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "serial": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "svcParams": {
                    "type": "string"
                },
                "svcPriority": {
                    "type": "integer"
                },
                "targetName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "answerType",
                "dnsName",
                "name",
                "recordSha",
                "recordtype",
                "serial",
                "ttl",
                "zone"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean"
                },
                "algorithm": {
                    "type": "integer"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "svcParams": {
                    "type": "string"
                },
                "svcPriority": {
                    "type": "integer"
                },
                "targetName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "recordtype",
                "ttl",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "algorithm": {
                        "type": "integer"
                    },
                    "answerType": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "digestType": {
                        "type": "integer"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "emailAddress": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "integer"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "fingerprintType": {
                        "type": "integer"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "flagsnaptr": {
                        "type": "string"
                    },
                    "hardware": {
                        "type": "string"
                    },
                    "inception": {
                        "type": "string"
                    },
                    "iterations": {
                        "type": "integer"
                    },
                    "key": {
                        "type": "string"
                    },
                    "keytag": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "integer"
                    },
                    "mailbox": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameServer": {
                        "type": "string"
                    },
                    "nextHashedOwnerName": {
                        "type": "string"
                    },
                    "nxdomainTtl": {
                        "type": "integer"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "originalTtl": {
                        "type": "integer"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "preference": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "priorityIncrement": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "recordSha": {
                        "type": "string"
                    },
                    "recordtype": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "integer"
                    },
                    "regexp": {
                        "type": "string"
                    },
                    "replacement": {
                        "type": "string"
                    },
                    "retry": {
                        "type": "integer"
                    },
                    "salt": {
                        "type": "string"
                    },
                    "selector": {
                        "type": "integer"
                    },
                    "serial": {
                        "type": "integer"
                    },
                    "service": {
                        "type": "string"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "signer": {
                        "type": "string"
                    },
                    "software": {
                        "type": "string"
                    },
                    "subtype": {
                        "type": "integer"
                    },
                    "svcParams": {
                        "type": "string"
                    },
                    "svcPriority": {
                        "type": "integer"
                    },
                    "targetName": {
                        "type": "string"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "txt": {
                        "type": "string"
                    },
                    "typeBitmaps": {
                        "type": "string"
                    },
                    "typeCovered": {
                        "type": "string"
                    },
                    "typeMnemonic": {
                        "type": "string"
                    },
                    "typeValue": {
                        "type": "integer"
                    },
                    "usage": {
                        "type": "integer"
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.edgedns.DnsRecord has been deprecated in favor of akamai.DnsRecord"
        },
        "akamai:edgedns/dnsZone:DnsZone": {
            "properties": {
                "activationState": {
                    "type": "string"
                },
                "aliasCount": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "activationState",
                "aliasCount",
                "contract",
                "type",
                "versionId",
                "zone"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "contract",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZone resources.\n",
                "properties": {
                    "activationState": {
                        "type": "string"
                    },
                    "aliasCount": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "endCustomerId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "signAndServe": {
                        "type": "boolean"
                    },
                    "signAndServeAlgorithm": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "tsigKey": {
                        "$ref": "#/types/akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.edgedns.DnsZone has been deprecated in favor of akamai.DnsZone"
        },
        "akamai:index/appSecActivations:AppSecActivations": {
            "description": "**Scopes**: Security configuration\n\nActivates or deactivates a security configuration. Security configurations activated on the staging network can be used for testing and fine-tuning; security configurations activated on the production network are used to protect your actual websites.\n\n**Related API Endpoint**: [/appsec/v1/activations](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postactivations)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst activation = new akamai.AppSecActivations(\"activation\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    network: \"STAGING\",\n    notes: \"This configuration was activated for testing purposes only.\",\n    notificationEmails: [\"user@example.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nactivation = akamai.AppSecActivations(\"activation\",\n    config_id=configuration.config_id,\n    network=\"STAGING\",\n    notes=\"This configuration was activated for testing purposes only.\",\n    notification_emails=[\"user@example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var activation = new Akamai.AppSecActivations(\"activation\", new Akamai.AppSecActivationsArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Network = \"STAGING\",\n            Notes = \"This configuration was activated for testing purposes only.\",\n            NotificationEmails = \n            {\n                \"user@example.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecActivations(ctx, \"activation\", \u0026akamai.AppSecActivationsArgs{\n\t\t\tConfigId: pulumi.Int(configuration.ConfigId),\n\t\t\tNetwork:  pulumi.String(\"STAGING\"),\n\t\t\tNotes:    pulumi.String(\"This configuration was activated for testing purposes only.\"),\n\t\t\tNotificationEmails: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user@example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `status`. Status of the operation. Valid values are:\n\n  *\t**ACTIVATED**\n  *\t**DEACTIVATED**\n  *\t**FAILED**\n",
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": ". Set to **true** to activate the specified security configuration; set to **false** to deactivate the configuration. If not included, the security configuration will be activated.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration being activated.\n"
                },
                "network": {
                    "type": "string",
                    "description": ". Network on which activation will occur; allowed values are:\n"
                },
                "notes": {
                    "type": "string",
                    "description": ". Brief description of the activation/deactivation process. Note that, if no attributes have changed since the last time you called the akamai.AppSecActivations resource, neither activation nor deactivation takes place: that's because *something* must be different in order to trigger the activation/deactivation process. With that in mind, it's recommended that you always update the `notes` argument. That ensures that the resource will be called and that activation or deactivation will occur.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array containing the email addresses of the people to be notified when activation is complete.\n"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "notes",
                "notificationEmails",
                "status"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": ". Set to **true** to activate the specified security configuration; set to **false** to deactivate the configuration. If not included, the security configuration will be activated.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration being activated.\n"
                },
                "network": {
                    "type": "string",
                    "description": ". Network on which activation will occur; allowed values are:\n"
                },
                "notes": {
                    "type": "string",
                    "description": ". Brief description of the activation/deactivation process. Note that, if no attributes have changed since the last time you called the akamai.AppSecActivations resource, neither activation nor deactivation takes place: that's because *something* must be different in order to trigger the activation/deactivation process. With that in mind, it's recommended that you always update the `notes` argument. That ensures that the resource will be called and that activation or deactivation will occur.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array containing the email addresses of the people to be notified when activation is complete.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "notes",
                "notificationEmails"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecActivations resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": ". Set to **true** to activate the specified security configuration; set to **false** to deactivate the configuration. If not included, the security configuration will be activated.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration being activated.\n"
                    },
                    "network": {
                        "type": "string",
                        "description": ". Network on which activation will occur; allowed values are:\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": ". Brief description of the activation/deactivation process. Note that, if no attributes have changed since the last time you called the akamai.AppSecActivations resource, neither activation nor deactivation takes place: that's because *something* must be different in order to trigger the activation/deactivation process. With that in mind, it's recommended that you always update the `notes` argument. That ensures that the resource will be called and that activation or deactivation will occur.\n"
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". JSON array containing the email addresses of the people to be notified when activation is complete.\n"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAdvancedSettingsLogging:AppSecAdvancedSettingsLogging": {
            "description": "**Scopes**: Security configuration; security policy\n\nEnables, disables, or updates HTTP header logging settings. By default, this operation applies at the configuration level, which means that it applies to all the security policies within that configuration. However, by using the `security_policy_id` parameter you can specify custom settings for an individual security policy.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/advanced-settings/logging](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderlogging)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst logging = new akamai.AppSecAdvancedSettingsLogging(\"logging\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    logging: fs.readFileSync(`${path.module}/logging.json`),\n});\n// USE CASE: User wants to configure logging settings for a security policy.\nconst policyLogging = new akamai.AppSecAdvancedSettingsLogging(\"policyLogging\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    logging: fs.readFileSync(`${path.module}/logging.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nlogging = akamai.AppSecAdvancedSettingsLogging(\"logging\",\n    config_id=configuration.config_id,\n    logging=(lambda path: open(path).read())(f\"{path['module']}/logging.json\"))\n# USE CASE: User wants to configure logging settings for a security policy.\npolicy_logging = akamai.AppSecAdvancedSettingsLogging(\"policyLogging\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    logging=(lambda path: open(path).read())(f\"{path['module']}/logging.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var logging = new Akamai.AppSecAdvancedSettingsLogging(\"logging\", new Akamai.AppSecAdvancedSettingsLoggingArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Logging = File.ReadAllText($\"{path.Module}/logging.json\"),\n        });\n        // USE CASE: User wants to configure logging settings for a security policy.\n        var policyLogging = new Akamai.AppSecAdvancedSettingsLogging(\"policyLogging\", new Akamai.AppSecAdvancedSettingsLoggingArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            Logging = File.ReadAllText($\"{path.Module}/logging.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecAdvancedSettingsLogging(ctx, \"logging\", \u0026akamai.AppSecAdvancedSettingsLoggingArgs{\n\t\t\tConfigId: pulumi.Int(configuration.ConfigId),\n\t\t\tLogging:  readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/logging.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecAdvancedSettingsLogging(ctx, \"policyLogging\", \u0026akamai.AppSecAdvancedSettingsLoggingArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tLogging:          readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/logging.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration containing the logging settings being modified.\n"
                },
                "logging": {
                    "type": "string",
                    "description": ". Path to a JSON file containing the logging settings to be configured. A sample JSON file can be found in the [Modify HTTP header log settings for a configuration](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration) section of the Application Security API documentation.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policies whose settings are being modified. If not included, the logging settings are modified at the configuration scope and, as a result, apply to all the security policies associated with the configuration.\n"
                }
            },
            "required": [
                "configId",
                "logging"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration containing the logging settings being modified.\n"
                },
                "logging": {
                    "type": "string",
                    "description": ". Path to a JSON file containing the logging settings to be configured. A sample JSON file can be found in the [Modify HTTP header log settings for a configuration](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration) section of the Application Security API documentation.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policies whose settings are being modified. If not included, the logging settings are modified at the configuration scope and, as a result, apply to all the security policies associated with the configuration.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "logging"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsLogging resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration containing the logging settings being modified.\n"
                    },
                    "logging": {
                        "type": "string",
                        "description": ". Path to a JSON file containing the logging settings to be configured. A sample JSON file can be found in the [Modify HTTP header log settings for a configuration](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration) section of the Application Security API documentation.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policies whose settings are being modified. If not included, the logging settings are modified at the configuration scope and, as a result, apply to all the security policies associated with the configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAdvancedSettingsPragmaHeader:AppSecAdvancedSettingsPragmaHeader": {
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "pragmaHeader": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "pragmaHeader"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "pragmaHeader": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "pragmaHeader"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsPragmaHeader resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "pragmaHeader": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAdvancedSettingsPrefetch:AppSecAdvancedSettingsPrefetch": {
            "description": "**Scopes**: Security configuration\n\nEnables inspection of internal requests (that is, requests between your origin servers and Akamai's edge servers).\nYou can also use this resource to apply rate controls to prefetch requests.\nWhen prefetch is enabled, internal requests are inspected by your firewall the same way that external requests (requests that originate outside the firewall and outside Akamai's edge servers) are inspected.\n\nThis operation applies at the security configuration level, meaning that the settings affect all the security policies in that configuration.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/advanced-settings/prefetch](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putprefetchrequestsforaconfiguration)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst prefetch = new akamai.AppSecAdvancedSettingsPrefetch(\"prefetch\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    enableAppLayer: false,\n    allExtensions: true,\n    enableRateControls: false,\n    extensions: [\n        \".tiff\",\n        \".bmp\",\n        \".jpg\",\n        \".gif\",\n        \".png\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nprefetch = akamai.AppSecAdvancedSettingsPrefetch(\"prefetch\",\n    config_id=configuration.config_id,\n    enable_app_layer=False,\n    all_extensions=True,\n    enable_rate_controls=False,\n    extensions=[\n        \".tiff\",\n        \".bmp\",\n        \".jpg\",\n        \".gif\",\n        \".png\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var prefetch = new Akamai.AppSecAdvancedSettingsPrefetch(\"prefetch\", new Akamai.AppSecAdvancedSettingsPrefetchArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            EnableAppLayer = false,\n            AllExtensions = true,\n            EnableRateControls = false,\n            Extensions = \n            {\n                \".tiff\",\n                \".bmp\",\n                \".jpg\",\n                \".gif\",\n                \".png\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecAdvancedSettingsPrefetch(ctx, \"prefetch\", \u0026akamai.AppSecAdvancedSettingsPrefetchArgs{\n\t\t\tConfigId:           pulumi.Int(configuration.ConfigId),\n\t\t\tEnableAppLayer:     pulumi.Bool(false),\n\t\t\tAllExtensions:      pulumi.Bool(true),\n\t\t\tEnableRateControls: pulumi.Bool(false),\n\t\t\tExtensions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\".tiff\"),\n\t\t\t\tpulumi.String(\".bmp\"),\n\t\t\t\tpulumi.String(\".jpg\"),\n\t\t\t\tpulumi.String(\".gif\"),\n\t\t\t\tpulumi.String(\".png\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allExtensions": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable prefetch requests for all file extensions; set to **false** to enable prefetch requests on only a specified set of file extensions. If set to false you must include the `extensions` argument.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the prefetch settings being modified.\n"
                },
                "enableAppLayer": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable prefetch requests; set to **false** to disable prefetch requests.\n"
                },
                "enableRateControls": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable prefetch requests for rate controls; set to **false** to disable prefetch requests for rate controls.\n"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". If `all_extensions` is **false**, this must be a JSON array of all the file extensions for which prefetch requests are enabled: prefetch requests won't be used with any file extensions not included in the array. If `all_extensions` is **true**, then this argument must be set to an empty array: **[]**.\n"
                }
            },
            "required": [
                "allExtensions",
                "configId",
                "enableAppLayer",
                "enableRateControls",
                "extensions"
            ],
            "inputProperties": {
                "allExtensions": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable prefetch requests for all file extensions; set to **false** to enable prefetch requests on only a specified set of file extensions. If set to false you must include the `extensions` argument.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the prefetch settings being modified.\n"
                },
                "enableAppLayer": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable prefetch requests; set to **false** to disable prefetch requests.\n"
                },
                "enableRateControls": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable prefetch requests for rate controls; set to **false** to disable prefetch requests for rate controls.\n"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". If `all_extensions` is **false**, this must be a JSON array of all the file extensions for which prefetch requests are enabled: prefetch requests won't be used with any file extensions not included in the array. If `all_extensions` is **true**, then this argument must be set to an empty array: **[]**.\n"
                }
            },
            "requiredInputs": [
                "allExtensions",
                "configId",
                "enableAppLayer",
                "enableRateControls",
                "extensions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsPrefetch resources.\n",
                "properties": {
                    "allExtensions": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable prefetch requests for all file extensions; set to **false** to enable prefetch requests on only a specified set of file extensions. If set to false you must include the `extensions` argument.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the prefetch settings being modified.\n"
                    },
                    "enableAppLayer": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable prefetch requests; set to **false** to disable prefetch requests.\n"
                    },
                    "enableRateControls": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable prefetch requests for rate controls; set to **false** to disable prefetch requests for rate controls.\n"
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". If `all_extensions` is **false**, this must be a JSON array of all the file extensions for which prefetch requests are enabled: prefetch requests won't be used with any file extensions not included in the array. If `all_extensions` is **true**, then this argument must be set to an empty array: **[]**.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecApiConstraintsProtection:AppSecApiConstraintsProtection": {
            "description": "**Scopes**: Security policy\n\nEnables or disables API constraints protection. These constraints specify the action to be taken when designated API endpoints are invoked.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/protections](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putprotections)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst protection = new akamai.AppSecApiConstraintsProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    enabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nprotection = akamai.AppSecApiConstraintsProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    enabled=True)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var protection = new Akamai.AppSecApiConstraintsProtection(\"protection\", new Akamai.AppSecApiConstraintsProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            Enabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecApiConstraintsProtection(ctx, \"protection\", \u0026akamai.AppSecApiConstraintsProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tEnabled:          pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the current protection settings.\n",
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text Export representation\n"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "enabled": {
                    "type": "boolean"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecApiConstraintsProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text Export representation\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecApiRequestConstraints:AppSecApiRequestConstraints": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": ". Action to assign to the API request constraint. Allowed values are:\n- **alert**, Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "apiEndpointId": {
                    "type": "integer",
                    "description": ". ID of the API endpoint the constraint will be assigned to.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the API request constraint settings being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the API request constraint settings being modified.\n"
                }
            },
            "required": [
                "action",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": ". Action to assign to the API request constraint. Allowed values are:\n- **alert**, Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "apiEndpointId": {
                    "type": "integer",
                    "description": ". ID of the API endpoint the constraint will be assigned to.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the API request constraint settings being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the API request constraint settings being modified.\n"
                }
            },
            "requiredInputs": [
                "action",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecApiRequestConstraints resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": ". Action to assign to the API request constraint. Allowed values are:\n- **alert**, Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                    },
                    "apiEndpointId": {
                        "type": "integer",
                        "description": ". ID of the API endpoint the constraint will be assigned to.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the API request constraint settings being modified.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the API request constraint settings being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAttackGroup:AppSecAttackGroup": {
            "description": "**Scopes**: Attack group\n\nModify an attack group's action, conditions, and exceptions. Attack groups are collections of Kona Rule Set rules used to streamline the management of website protections.\n\n**Related API Endpoints**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/attack-groups/{attackGroupId}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroup) *and* [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/attack-groups/{attackGroupId}/condition-exception](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst attackGroup = new akamai.AppSecAttackGroup(\"attackGroup\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    attackGroup: \"SQL\",\n    attackGroupAction: \"deny\",\n    conditionException: fs.readFileSync(`${path.module}/condition_exception.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nattack_group = akamai.AppSecAttackGroup(\"attackGroup\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    attack_group=\"SQL\",\n    attack_group_action=\"deny\",\n    condition_exception=(lambda path: open(path).read())(f\"{path['module']}/condition_exception.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var attackGroup = new Akamai.AppSecAttackGroup(\"attackGroup\", new Akamai.AppSecAttackGroupArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            AttackGroup = \"SQL\",\n            AttackGroupAction = \"deny\",\n            ConditionException = File.ReadAllText($\"{path.Module}/condition_exception.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecAttackGroup(ctx, \"attackGroup\", \u0026akamai.AppSecAttackGroupArgs{\n\t\t\tConfigId:           pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:   pulumi.String(\"gms1_134637\"),\n\t\t\tAttackGroup:        pulumi.String(\"SQL\"),\n\t\t\tAttackGroupAction:  pulumi.String(\"deny\"),\n\t\t\tConditionException: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/condition_exception.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attackGroup": {
                    "type": "string",
                    "description": ". Unique name of the attack group being modified.\n"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": ". Action taken any time the attack group is triggered. Allowed values are:\n- **alert**. Record information about the request.\n- **deny**. Block the request,\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "conditionException": {
                    "type": "string",
                    "description": ". Path to a JSON file containing the conditions and exceptions to be assigned to the attack group. You can view a sample JSON file in the [Modify the exceptions of an attack group](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception) section of the Application Security API documentation.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the attack group being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the attack group being modified.\n"
                }
            },
            "required": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "attackGroup": {
                    "type": "string",
                    "description": ". Unique name of the attack group being modified.\n"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": ". Action taken any time the attack group is triggered. Allowed values are:\n- **alert**. Record information about the request.\n- **deny**. Block the request,\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "conditionException": {
                    "type": "string",
                    "description": ". Path to a JSON file containing the conditions and exceptions to be assigned to the attack group. You can view a sample JSON file in the [Modify the exceptions of an attack group](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception) section of the Application Security API documentation.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the attack group being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the attack group being modified.\n"
                }
            },
            "requiredInputs": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAttackGroup resources.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string",
                        "description": ". Unique name of the attack group being modified.\n"
                    },
                    "attackGroupAction": {
                        "type": "string",
                        "description": ". Action taken any time the attack group is triggered. Allowed values are:\n- **alert**. Record information about the request.\n- **deny**. Block the request,\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                    },
                    "conditionException": {
                        "type": "string",
                        "description": ". Path to a JSON file containing the conditions and exceptions to be assigned to the attack group. You can view a sample JSON file in the [Modify the exceptions of an attack group](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception) section of the Application Security API documentation.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the attack group being modified.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the attack group being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecByPassNetworkList:AppSecByPassNetworkList": {
            "description": "**Scopes**: Security configuration\n\nSpecifies the networks that appear on the bypass network list. Networks on this list are allowed to bypass the Web Application Firewall.\n\nNote that this resource is only applicable to WAP (Web Application Protector) configurations.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/bypass-network-lists](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putbypassnetworklistsforawapconfigversion)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst bypassNetworkLists = new akamai.AppSecByPassNetworkList(\"bypassNetworkLists\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    bypassNetworkLists: [\n        \"DocumentationNetworkList\",\n        \"TrainingNetworkList\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nbypass_network_lists = akamai.AppSecByPassNetworkList(\"bypassNetworkLists\",\n    config_id=configuration.config_id,\n    bypass_network_lists=[\n        \"DocumentationNetworkList\",\n        \"TrainingNetworkList\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var bypassNetworkLists = new Akamai.AppSecByPassNetworkList(\"bypassNetworkLists\", new Akamai.AppSecByPassNetworkListArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            BypassNetworkLists = \n            {\n                \"DocumentationNetworkList\",\n                \"TrainingNetworkList\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecByPassNetworkList(ctx, \"bypassNetworkLists\", \u0026akamai.AppSecByPassNetworkListArgs{\n\t\t\tConfigId: pulumi.Int(configuration.ConfigId),\n\t\t\tBypassNetworkLists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"DocumentationNetworkList\"),\n\t\t\t\tpulumi.String(\"TrainingNetworkList\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the updated list of bypass network IDs.\n",
            "properties": {
                "bypassNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of network IDs that comprise the bypass list.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the network bypass lists being modified.\n"
                }
            },
            "required": [
                "bypassNetworkLists",
                "configId"
            ],
            "inputProperties": {
                "bypassNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of network IDs that comprise the bypass list.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the network bypass lists being modified.\n"
                }
            },
            "requiredInputs": [
                "bypassNetworkLists",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecByPassNetworkList resources.\n",
                "properties": {
                    "bypassNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". JSON array of network IDs that comprise the bypass list.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the network bypass lists being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecConfiguration:AppSecConfiguration": {
            "description": "**Scopes**: Contract and group\n\nCreates a new WAP (Web Application Protector) or KSD (Kona Site Defender) security configuration. KSD security configurations start out empty (i.e., unconfigured), while WAP configurations are created using preset values. The contract referenced in the request body determines the type of configuration you can create.\n\nIn addition to manually creating a new configuration, you can use the `create_from_config_id` argument to clone an existing configuration.\n\n**Related API Endpoint**: [/appsec/v1/configs](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postconfigurations)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst selectableHostnames = akamai.getAppSecSelectableHostnames({\n    configId: \"Documentation\",\n});\nconst createConfig = new akamai.AppSecConfiguration(\"createConfig\", {\n    description: \"This configuration is used as a testing environment for the documentation team.\",\n    contractId: \"5-2WA382\",\n    groupId: 12198,\n    hostNames: [\n        \"documentation.akamai.com\",\n        \"training.akamai.com\",\n    ],\n});\nexport const createConfigId = createConfig.configId;\nconst cloneConfig = new akamai.AppSecConfiguration(\"cloneConfig\", {\n    description: \"This configuration is used as a testing environment for the documentation team.\",\n    createFromConfigId: data.akamai_appsec_configuration.configuration.config_id,\n    createFromVersion: data.akamai_appsec_configuration.configuration.latest_version,\n    contractId: \"5-2WA382\",\n    groupId: 12198,\n    hostNames: selectableHostnames.then(selectableHostnames =\u003e selectableHostnames.hostnames),\n});\nexport const cloneConfigId = cloneConfig.configId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nselectable_hostnames = akamai.get_app_sec_selectable_hostnames(config_id=\"Documentation\")\ncreate_config = akamai.AppSecConfiguration(\"createConfig\",\n    description=\"This configuration is used as a testing environment for the documentation team.\",\n    contract_id=\"5-2WA382\",\n    group_id=12198,\n    host_names=[\n        \"documentation.akamai.com\",\n        \"training.akamai.com\",\n    ])\npulumi.export(\"createConfigId\", create_config.config_id)\nclone_config = akamai.AppSecConfiguration(\"cloneConfig\",\n    description=\"This configuration is used as a testing environment for the documentation team.\",\n    create_from_config_id=data[\"akamai_appsec_configuration\"][\"configuration\"][\"config_id\"],\n    create_from_version=data[\"akamai_appsec_configuration\"][\"configuration\"][\"latest_version\"],\n    contract_id=\"5-2WA382\",\n    group_id=12198,\n    host_names=selectable_hostnames.hostnames)\npulumi.export(\"cloneConfigId\", clone_config.config_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var selectableHostnames = Output.Create(Akamai.GetAppSecSelectableHostnames.InvokeAsync(new Akamai.GetAppSecSelectableHostnamesArgs\n        {\n            ConfigId = \"Documentation\",\n        }));\n        var createConfig = new Akamai.AppSecConfiguration(\"createConfig\", new Akamai.AppSecConfigurationArgs\n        {\n            Description = \"This configuration is used as a testing environment for the documentation team.\",\n            ContractId = \"5-2WA382\",\n            GroupId = 12198,\n            HostNames = \n            {\n                \"documentation.akamai.com\",\n                \"training.akamai.com\",\n            },\n        });\n        this.CreateConfigId = createConfig.ConfigId;\n        var cloneConfig = new Akamai.AppSecConfiguration(\"cloneConfig\", new Akamai.AppSecConfigurationArgs\n        {\n            Description = \"This configuration is used as a testing environment for the documentation team.\",\n            CreateFromConfigId = data.Akamai_appsec_configuration.Configuration.Config_id,\n            CreateFromVersion = data.Akamai_appsec_configuration.Configuration.Latest_version,\n            ContractId = \"5-2WA382\",\n            GroupId = 12198,\n            HostNames = selectableHostnames.Apply(selectableHostnames =\u003e selectableHostnames.Hostnames),\n        });\n        this.CloneConfigId = cloneConfig.ConfigId;\n    }\n\n    [Output(\"createConfigId\")]\n    public Output\u003cstring\u003e CreateConfigId { get; set; }\n    [Output(\"cloneConfigId\")]\n    public Output\u003cstring\u003e CloneConfigId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tselectableHostnames, err := akamai.GetAppSecSelectableHostnames(ctx, \u0026GetAppSecSelectableHostnamesArgs{\n\t\t\tConfigId: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcreateConfig, err := akamai.NewAppSecConfiguration(ctx, \"createConfig\", \u0026akamai.AppSecConfigurationArgs{\n\t\t\tDescription: pulumi.String(\"This configuration is used as a testing environment for the documentation team.\"),\n\t\t\tContractId:  pulumi.String(\"5-2WA382\"),\n\t\t\tGroupId:     pulumi.Int(12198),\n\t\t\tHostNames: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"documentation.akamai.com\"),\n\t\t\t\tpulumi.String(\"training.akamai.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"createConfigId\", createConfig.ConfigId)\n\t\tcloneConfig, err := akamai.NewAppSecConfiguration(ctx, \"cloneConfig\", \u0026akamai.AppSecConfigurationArgs{\n\t\t\tDescription:        pulumi.String(\"This configuration is used as a testing environment for the documentation team.\"),\n\t\t\tCreateFromConfigId: pulumi.Any(data.Akamai_appsec_configuration.Configuration.Config_id),\n\t\t\tCreateFromVersion:  pulumi.Any(data.Akamai_appsec_configuration.Configuration.Latest_version),\n\t\t\tContractId:         pulumi.String(\"5-2WA382\"),\n\t\t\tGroupId:            pulumi.Int(12198),\n\t\t\tHostNames:          interface{}(selectableHostnames.Hostnames),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"cloneConfigId\", cloneConfig.ConfigId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `config_id`. ID of the new security configuration.\n",
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "contractId": {
                    "type": "string",
                    "description": ". Unique identifier of the Akamai contract t associated with the new configuration.\n"
                },
                "createFromConfigId": {
                    "type": "integer",
                    "description": ". Unique identifier of the existing configuration being cloned in order to create the new configuration.\n"
                },
                "createFromVersion": {
                    "type": "integer",
                    "description": ". Version number of the security configuration being cloned.\n"
                },
                "description": {
                    "type": "string",
                    "description": ". Brief description of the new configuration.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": ". Unique identifier of the contract group associated with the new configuration.\n"
                },
                "hostNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array containing the hostnames to be protected by the new configuration. You must specify at least one hostname in order to create a new configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": ". Name of the new configuration.\n"
                }
            },
            "required": [
                "configId",
                "contractId",
                "description",
                "groupId",
                "hostNames",
                "name"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": ". Unique identifier of the Akamai contract t associated with the new configuration.\n"
                },
                "createFromConfigId": {
                    "type": "integer",
                    "description": ". Unique identifier of the existing configuration being cloned in order to create the new configuration.\n"
                },
                "createFromVersion": {
                    "type": "integer",
                    "description": ". Version number of the security configuration being cloned.\n"
                },
                "description": {
                    "type": "string",
                    "description": ". Brief description of the new configuration.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": ". Unique identifier of the contract group associated with the new configuration.\n"
                },
                "hostNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array containing the hostnames to be protected by the new configuration. You must specify at least one hostname in order to create a new configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": ". Name of the new configuration.\n"
                }
            },
            "requiredInputs": [
                "contractId",
                "description",
                "groupId",
                "hostNames"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecConfiguration resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "contractId": {
                        "type": "string",
                        "description": ". Unique identifier of the Akamai contract t associated with the new configuration.\n"
                    },
                    "createFromConfigId": {
                        "type": "integer",
                        "description": ". Unique identifier of the existing configuration being cloned in order to create the new configuration.\n"
                    },
                    "createFromVersion": {
                        "type": "integer",
                        "description": ". Version number of the security configuration being cloned.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": ". Brief description of the new configuration.\n"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": ". Unique identifier of the contract group associated with the new configuration.\n"
                    },
                    "hostNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". JSON array containing the hostnames to be protected by the new configuration. You must specify at least one hostname in order to create a new configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": ". Name of the new configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecConfigurationRename:AppSecConfigurationRename": {
            "description": "**Scopes**: Security configuration\n\nRenames an existing security configuration. \nNote that you can only change the configuration name.\nThe ID assigned to a security configuration can not be modified.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putrenameconfiguration)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configurationAppSecConfiguration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst configurationAppSecConfigurationRename = new akamai.AppSecConfigurationRename(\"configurationAppSecConfigurationRename\", {\n    configId: configurationAppSecConfiguration.then(configurationAppSecConfiguration =\u003e configurationAppSecConfiguration.configId),\n    description: \"This configuration is by both the documentation team and the training team.\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration_app_sec_configuration = akamai.get_app_sec_configuration(name=\"Documentation\")\nconfiguration_app_sec_configuration_rename = akamai.AppSecConfigurationRename(\"configurationAppSecConfigurationRename\",\n    config_id=configuration_app_sec_configuration.config_id,\n    description=\"This configuration is by both the documentation team and the training team.\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configurationAppSecConfiguration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var configurationAppSecConfigurationRename = new Akamai.AppSecConfigurationRename(\"configurationAppSecConfigurationRename\", new Akamai.AppSecConfigurationRenameArgs\n        {\n            ConfigId = configurationAppSecConfiguration.Apply(configurationAppSecConfiguration =\u003e configurationAppSecConfiguration.ConfigId),\n            Description = \"This configuration is by both the documentation team and the training team.\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfigurationAppSecConfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecConfigurationRename(ctx, \"configurationAppSecConfigurationRename\", \u0026akamai.AppSecConfigurationRenameArgs{\n\t\t\tConfigId:    pulumi.Int(configurationAppSecConfiguration.ConfigId),\n\t\t\tDescription: pulumi.String(\"This configuration is by both the documentation team and the training team.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configurating being renamed.\n"
                },
                "description": {
                    "type": "string",
                    "description": ". Brief description of the security configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": ". New name for the security configuration.\n"
                }
            },
            "required": [
                "configId",
                "description",
                "name"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configurating being renamed.\n"
                },
                "description": {
                    "type": "string",
                    "description": ". Brief description of the security configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": ". New name for the security configuration.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecConfigurationRename resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configurating being renamed.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": ". Brief description of the security configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": ". New name for the security configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomDeny:AppSecCustomDeny": {
            "description": "**Scopes**: Custom deny\n\nModifies a custom deny action. Custom denies enable you to craft your own error message or redirect pages for use when HTTP requests are denied.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/custom-deny](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putcustomdenyaction)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst customDeny = new akamai.AppSecCustomDeny(\"customDeny\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    customDeny: fs.readFileSync(`${path.module}/custom_deny.json`),\n});\nexport const customDenyId = customDeny.customDenyId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\ncustom_deny = akamai.AppSecCustomDeny(\"customDeny\",\n    config_id=configuration.config_id,\n    custom_deny=(lambda path: open(path).read())(f\"{path['module']}/custom_deny.json\"))\npulumi.export(\"customDenyId\", custom_deny.custom_deny_id)\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var customDeny = new Akamai.AppSecCustomDeny(\"customDeny\", new Akamai.AppSecCustomDenyArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            CustomDeny = File.ReadAllText($\"{path.Module}/custom_deny.json\"),\n        });\n        this.CustomDenyId = customDeny.CustomDenyId;\n    }\n\n    [Output(\"customDenyId\")]\n    public Output\u003cstring\u003e CustomDenyId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomDeny, err := akamai.NewAppSecCustomDeny(ctx, \"customDeny\", \u0026akamai.AppSecCustomDenyArgs{\n\t\t\tConfigId:   pulumi.Int(configuration.ConfigId),\n\t\t\tCustomDeny: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/custom_deny.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customDenyId\", customDeny.CustomDenyId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `custom_deny_id`. ID of the new custom deny action.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the custom deny.\n"
                },
                "customDeny": {
                    "type": "string",
                    "description": ". Path to a JSON file containing properties and property values for the custom deny. For more information, see the [CustomDeny members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#63df3de3) section of the Application Security API documentation.\n"
                },
                "customDenyId": {
                    "type": "string",
                    "description": "custom_deny_id\n"
                }
            },
            "required": [
                "configId",
                "customDeny",
                "customDenyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the custom deny.\n"
                },
                "customDeny": {
                    "type": "string",
                    "description": ". Path to a JSON file containing properties and property values for the custom deny. For more information, see the [CustomDeny members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#63df3de3) section of the Application Security API documentation.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "customDeny"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomDeny resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the custom deny.\n"
                    },
                    "customDeny": {
                        "type": "string",
                        "description": ". Path to a JSON file containing properties and property values for the custom deny. For more information, see the [CustomDeny members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#63df3de3) section of the Application Security API documentation.\n"
                    },
                    "customDenyId": {
                        "type": "string",
                        "description": "custom_deny_id\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomRule:AppSecCustomRule": {
            "description": "**Scopes**: Security configuration\n\nCreates a custom rule associated with a security configuration. Custom rules are rules that you define yourself and are not part of the Kona Rule Set.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/custom-rules](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postcustomrules)\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the custom rule being modified.\n"
                },
                "customRule": {
                    "type": "string",
                    "description": ". Path to a JSON file containing the custom rule definition. To view a sample JSON file, see the [Create a custom rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postcustomrules) section of the Application Security API documentation.\n"
                },
                "customRuleId": {
                    "type": "integer"
                }
            },
            "required": [
                "configId",
                "customRule",
                "customRuleId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the custom rule being modified.\n"
                },
                "customRule": {
                    "type": "string",
                    "description": ". Path to a JSON file containing the custom rule definition. To view a sample JSON file, see the [Create a custom rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postcustomrules) section of the Application Security API documentation.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "customRule"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomRule resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the custom rule being modified.\n"
                    },
                    "customRule": {
                        "type": "string",
                        "description": ". Path to a JSON file containing the custom rule definition. To view a sample JSON file, see the [Create a custom rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postcustomrules) section of the Application Security API documentation.\n"
                    },
                    "customRuleId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomRuleAction:AppSecCustomRuleAction": {
            "description": "**Scopes**: Custom rule\n\nAssociates an action with a custom rule. Custom rules are rules that you define yourself and are not part of the Kona Rule Set.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/custom-rules](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putactionruleid)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst createCustomRuleAction = new akamai.AppSecCustomRuleAction(\"createCustomRuleAction\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    customRuleId: 12345,\n    customRuleAction: \"alert\",\n});\nexport const customRuleId = createCustomRuleAction.customRuleId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\ncreate_custom_rule_action = akamai.AppSecCustomRuleAction(\"createCustomRuleAction\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    custom_rule_id=12345,\n    custom_rule_action=\"alert\")\npulumi.export(\"customRuleId\", create_custom_rule_action.custom_rule_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var createCustomRuleAction = new Akamai.AppSecCustomRuleAction(\"createCustomRuleAction\", new Akamai.AppSecCustomRuleActionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            CustomRuleId = 12345,\n            CustomRuleAction = \"alert\",\n        });\n        this.CustomRuleId = createCustomRuleAction.CustomRuleId;\n    }\n\n    [Output(\"customRuleId\")]\n    public Output\u003cstring\u003e CustomRuleId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcreateCustomRuleAction, err := akamai.NewAppSecCustomRuleAction(ctx, \"createCustomRuleAction\", \u0026akamai.AppSecCustomRuleActionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tCustomRuleId:     pulumi.Int(12345),\n\t\t\tCustomRuleAction: pulumi.String(\"alert\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customRuleId\", createCustomRuleAction.CustomRuleId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the custom rule action being modified.\n"
                },
                "customRuleAction": {
                    "type": "string",
                    "description": ". Action to be taken when the custom rule is invoked. Allowed values are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "customRuleId": {
                    "type": "integer",
                    "description": ". Unique identifier of the custom rule whose action is being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the custom rule action being modified d.\n"
                }
            },
            "required": [
                "configId",
                "customRuleAction",
                "customRuleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the custom rule action being modified.\n"
                },
                "customRuleAction": {
                    "type": "string",
                    "description": ". Action to be taken when the custom rule is invoked. Allowed values are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "customRuleId": {
                    "type": "integer",
                    "description": ". Unique identifier of the custom rule whose action is being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the custom rule action being modified d.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "customRuleAction",
                "customRuleId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomRuleAction resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the custom rule action being modified.\n"
                    },
                    "customRuleAction": {
                        "type": "string",
                        "description": ". Action to be taken when the custom rule is invoked. Allowed values are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                    },
                    "customRuleId": {
                        "type": "integer",
                        "description": ". Unique identifier of the custom rule whose action is being modified.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the custom rule action being modified d.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEval:AppSecEval": {
            "description": "**Scopes**: Security policy\n\nIssues an evaluation mode command (`Start`, `Stop`, `Restart`, `Update`, or `Complete`) to a security configuration.\nEvaluation mode is used for testing and fine-tuning your Kona Rule Set rules and configuration settings.\nIn evaluation mode rules are triggered by events, but the only thing those rules do is record the actions they *would* have taken had the event occurred on the production network.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/eval](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postevaluationmode)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst evalOperation = new akamai.AppSecEval(\"evalOperation\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    evalOperation: \"START\",\n});\nexport const evalModeEvaluatingRuleset = evalOperation.evaluatingRuleset;\nexport const evalModeExpirationDate = evalOperation.expirationDate;\nexport const evalModeCurrentRuleset = evalOperation.currentRuleset;\nexport const evalModeStatus = evalOperation.evalStatus;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\neval_operation = akamai.AppSecEval(\"evalOperation\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    eval_operation=\"START\")\npulumi.export(\"evalModeEvaluatingRuleset\", eval_operation.evaluating_ruleset)\npulumi.export(\"evalModeExpirationDate\", eval_operation.expiration_date)\npulumi.export(\"evalModeCurrentRuleset\", eval_operation.current_ruleset)\npulumi.export(\"evalModeStatus\", eval_operation.eval_status)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var evalOperation = new Akamai.AppSecEval(\"evalOperation\", new Akamai.AppSecEvalArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            EvalOperation = \"START\",\n        });\n        this.EvalModeEvaluatingRuleset = evalOperation.EvaluatingRuleset;\n        this.EvalModeExpirationDate = evalOperation.ExpirationDate;\n        this.EvalModeCurrentRuleset = evalOperation.CurrentRuleset;\n        this.EvalModeStatus = evalOperation.EvalStatus;\n    }\n\n    [Output(\"evalModeEvaluatingRuleset\")]\n    public Output\u003cstring\u003e EvalModeEvaluatingRuleset { get; set; }\n    [Output(\"evalModeExpirationDate\")]\n    public Output\u003cstring\u003e EvalModeExpirationDate { get; set; }\n    [Output(\"evalModeCurrentRuleset\")]\n    public Output\u003cstring\u003e EvalModeCurrentRuleset { get; set; }\n    [Output(\"evalModeStatus\")]\n    public Output\u003cstring\u003e EvalModeStatus { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tevalOperation, err := akamai.NewAppSecEval(ctx, \"evalOperation\", \u0026akamai.AppSecEvalArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tEvalOperation:    pulumi.String(\"START\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"evalModeEvaluatingRuleset\", evalOperation.EvaluatingRuleset)\n\t\tctx.Export(\"evalModeExpirationDate\", evalOperation.ExpirationDate)\n\t\tctx.Export(\"evalModeCurrentRuleset\", evalOperation.CurrentRuleset)\n\t\tctx.Export(\"evalModeStatus\", evalOperation.EvalStatus)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `evaluation_ruleset`. Versioning information for the Kona Rule Set being evaluated.\n- `expiration_date`. Date when the evaluation period ends.\n- `current_ruleset`. Versioning information for the Kona Rule Set currently in use on the production network.\n- `eval_status`. If **true**, an evaluation is currently in progress; if **false**, evaluation is either paused or is not running.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration where evaluation mode will take place (or is currently taking place).\n"
                },
                "currentRuleset": {
                    "type": "string"
                },
                "evalMode": {
                    "type": "string",
                    "description": ". Set to **ASE_AUTO** to have your Kona Rule Set rules automatically updated during the evaluation period; set to **ASE_MANUAL** if you want to manually update your evaluation rules. Note that this option is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.\n"
                },
                "evalOperation": {
                    "type": "string",
                    "description": ". Evaluation mode operation. Allowed values are:\n- **START**. Starts evaluation mode. By default, evaluation mode runs for four weeks.\n- **STOP**, Pauses evaluation mode without upgrading the Kona Rule Set on your production network.\n- **RESTART**. Resumes an evaluation trial that was paused by using the **STOP** command.\n- **UPDATE**. Upgrades the Kona Rule Set rules in the evaluation ruleset to their latest versions.\n- **COMPLETE**. Concludes the evaluation period (even if the four-week trial mode is not over) and automatically upgrades the Kona Rule Set on your production network to the same rule set you just finished evaluating.\n"
                },
                "evalStatus": {
                    "type": "string"
                },
                "evaluatingRuleset": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the evaluation process.\n"
                }
            },
            "required": [
                "configId",
                "currentRuleset",
                "evalOperation",
                "evalStatus",
                "evaluatingRuleset",
                "expirationDate",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration where evaluation mode will take place (or is currently taking place).\n"
                },
                "evalMode": {
                    "type": "string",
                    "description": ". Set to **ASE_AUTO** to have your Kona Rule Set rules automatically updated during the evaluation period; set to **ASE_MANUAL** if you want to manually update your evaluation rules. Note that this option is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.\n"
                },
                "evalOperation": {
                    "type": "string",
                    "description": ". Evaluation mode operation. Allowed values are:\n- **START**. Starts evaluation mode. By default, evaluation mode runs for four weeks.\n- **STOP**, Pauses evaluation mode without upgrading the Kona Rule Set on your production network.\n- **RESTART**. Resumes an evaluation trial that was paused by using the **STOP** command.\n- **UPDATE**. Upgrades the Kona Rule Set rules in the evaluation ruleset to their latest versions.\n- **COMPLETE**. Concludes the evaluation period (even if the four-week trial mode is not over) and automatically upgrades the Kona Rule Set on your production network to the same rule set you just finished evaluating.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the evaluation process.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "evalOperation",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEval resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration where evaluation mode will take place (or is currently taking place).\n"
                    },
                    "currentRuleset": {
                        "type": "string"
                    },
                    "evalMode": {
                        "type": "string",
                        "description": ". Set to **ASE_AUTO** to have your Kona Rule Set rules automatically updated during the evaluation period; set to **ASE_MANUAL** if you want to manually update your evaluation rules. Note that this option is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.\n"
                    },
                    "evalOperation": {
                        "type": "string",
                        "description": ". Evaluation mode operation. Allowed values are:\n- **START**. Starts evaluation mode. By default, evaluation mode runs for four weeks.\n- **STOP**, Pauses evaluation mode without upgrading the Kona Rule Set on your production network.\n- **RESTART**. Resumes an evaluation trial that was paused by using the **STOP** command.\n- **UPDATE**. Upgrades the Kona Rule Set rules in the evaluation ruleset to their latest versions.\n- **COMPLETE**. Concludes the evaluation period (even if the four-week trial mode is not over) and automatically upgrades the Kona Rule Set on your production network to the same rule set you just finished evaluating.\n"
                    },
                    "evalStatus": {
                        "type": "string"
                    },
                    "evaluatingRuleset": {
                        "type": "string"
                    },
                    "expirationDate": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the evaluation process.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalGroup:AppSecEvalGroup": {
            "description": "**Scopes**: Evaluation attack group\n\nModifies the action and the conditions and exceptions for an evaluation mode attack group.\n\nNote that this resource is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information about ASE, please contact your Akamai representative.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst evalAttackGroup = new akamai.AppSecEvalGroup(\"evalAttackGroup\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    attackGroup: \"SQL\",\n    attackGroupAction: \"deny\",\n    conditionException: fs.readFileSync(`${path.module}/condition_exception.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\neval_attack_group = akamai.AppSecEvalGroup(\"evalAttackGroup\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    attack_group=\"SQL\",\n    attack_group_action=\"deny\",\n    condition_exception=(lambda path: open(path).read())(f\"{path['module']}/condition_exception.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var evalAttackGroup = new Akamai.AppSecEvalGroup(\"evalAttackGroup\", new Akamai.AppSecEvalGroupArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            AttackGroup = \"SQL\",\n            AttackGroupAction = \"deny\",\n            ConditionException = File.ReadAllText($\"{path.Module}/condition_exception.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecEvalGroup(ctx, \"evalAttackGroup\", \u0026akamai.AppSecEvalGroupArgs{\n\t\t\tConfigId:           pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:   pulumi.String(\"gms1_134637\"),\n\t\t\tAttackGroup:        pulumi.String(\"SQL\"),\n\t\t\tAttackGroupAction:  pulumi.String(\"deny\"),\n\t\t\tConditionException: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/condition_exception.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attackGroup": {
                    "type": "string",
                    "description": ". Unique identifier of the evaluation attack group being modified.\n"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": ". Action to be taken any time the attack group is triggered. Allowed values are:\n- **alert**. Record the event.\n- **deny**. Block the request\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "conditionException": {
                    "type": "string",
                    "description": ". Path to a JSON file containing properties and property values for the attack group. For more information, the [Modify the exceptions of an attack group](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception) section of the Application Security API documentation.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration where evaluation is taking place.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the evaluation process.\n"
                }
            },
            "required": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "attackGroup": {
                    "type": "string",
                    "description": ". Unique identifier of the evaluation attack group being modified.\n"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": ". Action to be taken any time the attack group is triggered. Allowed values are:\n- **alert**. Record the event.\n- **deny**. Block the request\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "conditionException": {
                    "type": "string",
                    "description": ". Path to a JSON file containing properties and property values for the attack group. For more information, the [Modify the exceptions of an attack group](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception) section of the Application Security API documentation.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration where evaluation is taking place.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the evaluation process.\n"
                }
            },
            "requiredInputs": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalGroup resources.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string",
                        "description": ". Unique identifier of the evaluation attack group being modified.\n"
                    },
                    "attackGroupAction": {
                        "type": "string",
                        "description": ". Action to be taken any time the attack group is triggered. Allowed values are:\n- **alert**. Record the event.\n- **deny**. Block the request\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                    },
                    "conditionException": {
                        "type": "string",
                        "description": ". Path to a JSON file containing properties and property values for the attack group. For more information, the [Modify the exceptions of an attack group](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception) section of the Application Security API documentation.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration where evaluation is taking place.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the evaluation process.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalHostnames:AppSecEvalHostnames": {
            "description": "**Scopes**: Security configuration\n\nModifies the list of hostnames evaluated while a security configuration is in evaluation mode.\nDuring evaluation mode, hosts take no action of any kind when responding to traffic.\nInstead, these hosts simply maintain a record of the actions they *would* have taken if they had been responding to live traffic in your production network.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/selected-hostnames/eval-hostnames](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevaluationhostnames)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst evalHostnames = new akamai.AppSecEvalHostnames(\"evalHostnames\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    hostnames: [\n        \"documentation.akamai.com\",\n        \"training.akamai.com\",\n        \"videos.akamai.com\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\neval_hostnames = akamai.AppSecEvalHostnames(\"evalHostnames\",\n    config_id=configuration.config_id,\n    hostnames=[\n        \"documentation.akamai.com\",\n        \"training.akamai.com\",\n        \"videos.akamai.com\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var evalHostnames = new Akamai.AppSecEvalHostnames(\"evalHostnames\", new Akamai.AppSecEvalHostnamesArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Hostnames = \n            {\n                \"documentation.akamai.com\",\n                \"training.akamai.com\",\n                \"videos.akamai.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecEvalHostnames(ctx, \"evalHostnames\", \u0026akamai.AppSecEvalHostnamesArgs{\n\t\t\tConfigId: pulumi.Int(configuration.ConfigId),\n\t\t\tHostnames: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"documentation.akamai.com\"),\n\t\t\t\tpulumi.String(\"training.akamai.com\"),\n\t\t\t\tpulumi.String(\"videos.akamai.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration in evaluation mode.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of hostnames to be used in the evaluation process. Note that this list replaces your existing list of evaluation hosts.\n"
                }
            },
            "required": [
                "configId",
                "hostnames"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration in evaluation mode.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of hostnames to be used in the evaluation process. Note that this list replaces your existing list of evaluation hosts.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "hostnames"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalHostnames resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration in evaluation mode.\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". JSON array of hostnames to be used in the evaluation process. Note that this list replaces your existing list of evaluation hosts.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalProtectHost:AppSecEvalProtectHost": {
            "description": "**Scopes**: Security configuration\n\nMoves hostnames being evaluated to active protection. When you move a hostname from the evaluation hostnames list that host is added to your security policy as a protected hostname and is removed from the collection of hosts being evaluated.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/protect-eval-hostnames](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putmoveevaluationhostnamestoprotection)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst evalHostnames = configuration.then(configuration =\u003e akamai.getAppSecEvalHostnames({\n    configId: configuration.configId,\n}));\nconst protectHost = new akamai.AppSecEvalProtectHost(\"protectHost\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    hostnames: evalHostnames.then(evalHostnames =\u003e evalHostnames.hostnames),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\neval_hostnames = akamai.get_app_sec_eval_hostnames(config_id=configuration.config_id)\nprotect_host = akamai.AppSecEvalProtectHost(\"protectHost\",\n    config_id=configuration.config_id,\n    hostnames=eval_hostnames.hostnames)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var evalHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecEvalHostnames.InvokeAsync(new Akamai.GetAppSecEvalHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        var protectHost = new Akamai.AppSecEvalProtectHost(\"protectHost\", new Akamai.AppSecEvalProtectHostArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Hostnames = evalHostnames.Apply(evalHostnames =\u003e evalHostnames.Hostnames),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tevalHostnames, err := akamai.LookupAppSecEvalHostnames(ctx, \u0026GetAppSecEvalHostnamesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecEvalProtectHost(ctx, \"protectHost\", \u0026akamai.AppSecEvalProtectHostArgs{\n\t\t\tConfigId:  pulumi.Int(configuration.ConfigId),\n\t\t\tHostnames: interface{}(evalHostnames.Hostnames),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration in evaluation mode.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of the hostnames to be moved from the evaluation hostname list to the protected hostname list.\n"
                }
            },
            "required": [
                "configId",
                "hostnames"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration in evaluation mode.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of the hostnames to be moved from the evaluation hostname list to the protected hostname list.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "hostnames"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalProtectHost resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration in evaluation mode.\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". JSON array of the hostnames to be moved from the evaluation hostname list to the protected hostname list.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalRule:AppSecEvalRule": {
            "description": "**Scopes**: Evaluation rule\n\nCreates or modifies an evaluation rule's action, conditions, and exceptions.\nEvaluation rules are Kona Rule Set rules used when running a security configuration in evaluation mode.\nChanges to these rules do not affect the rules used on your production network.\n\n**Related API Endpoints**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/eval-rules/{ruleId}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalrule) *and* [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/eval-rules/{ruleId}/condition-exception](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst evalRule = new akamai.AppSecEvalRule(\"evalRule\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    ruleId: 60029316,\n    ruleAction: \"deny\",\n    conditionException: fs.readFileSync(`${path.module}/condition_exception.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\neval_rule = akamai.AppSecEvalRule(\"evalRule\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    rule_id=60029316,\n    rule_action=\"deny\",\n    condition_exception=(lambda path: open(path).read())(f\"{path['module']}/condition_exception.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var evalRule = new Akamai.AppSecEvalRule(\"evalRule\", new Akamai.AppSecEvalRuleArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            RuleId = 60029316,\n            RuleAction = \"deny\",\n            ConditionException = File.ReadAllText($\"{path.Module}/condition_exception.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecEvalRule(ctx, \"evalRule\", \u0026akamai.AppSecEvalRuleArgs{\n\t\t\tConfigId:           pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:   pulumi.String(\"gms1_134637\"),\n\t\t\tRuleId:             pulumi.Int(60029316),\n\t\t\tRuleAction:         pulumi.String(\"deny\"),\n\t\t\tConditionException: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/condition_exception.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "conditionException": {
                    "type": "string",
                    "description": ". Path to a JSON file containing the conditions and exceptions to be applied to the evaluation rule. To view a sample JSON file, see the [Modify the conditions and exceptions for an evaluation rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions) section of the Application Security API documentation.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration in evaluation mode.\n"
                },
                "ruleAction": {
                    "type": "string",
                    "description": ". Action to be taken any time the evaluation rule is triggered, Allowed actions are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": ". Unique identifier of the evaluation rule being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the evaluation process.\n"
                }
            },
            "required": [
                "configId",
                "ruleAction",
                "ruleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "conditionException": {
                    "type": "string",
                    "description": ". Path to a JSON file containing the conditions and exceptions to be applied to the evaluation rule. To view a sample JSON file, see the [Modify the conditions and exceptions for an evaluation rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions) section of the Application Security API documentation.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration in evaluation mode.\n"
                },
                "ruleAction": {
                    "type": "string",
                    "description": ". Action to be taken any time the evaluation rule is triggered, Allowed actions are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": ". Unique identifier of the evaluation rule being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the evaluation process.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "ruleAction",
                "ruleId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalRule resources.\n",
                "properties": {
                    "conditionException": {
                        "type": "string",
                        "description": ". Path to a JSON file containing the conditions and exceptions to be applied to the evaluation rule. To view a sample JSON file, see the [Modify the conditions and exceptions for an evaluation rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions) section of the Application Security API documentation.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration in evaluation mode.\n"
                    },
                    "ruleAction": {
                        "type": "string",
                        "description": ". Action to be taken any time the evaluation rule is triggered, Allowed actions are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": ". Unique identifier of the evaluation rule being modified.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the evaluation process.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecIPGeo:AppSecIPGeo": {
            "description": "**Scopes**: Security policy\n\nModifies the method used for firewall blocking, and manages the network lists used for IP/Geo firewall blocking.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/ip-geo-firewall](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putipgeofirewall)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst ipGeoBlock = new akamai.AppSecIPGeo(\"ipGeoBlock\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    mode: \"block\",\n    geoNetworkLists: [\"06038_GEO_TEST\"],\n    ipNetworkLists: [\"56921_TEST\"],\n    exceptionIpNetworkLists: [\"07126_EXCEPTION_TEST\"],\n});\n// USE CASE: User wants to update the IP/Geo firewall mode and update the exception list.\nconst ipGeoAllow = new akamai.AppSecIPGeo(\"ipGeoAllow\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1-090334\",\n    mode: \"allow\",\n    exceptionIpNetworkLists: [\"07126_EXCEPTION_TEST\"],\n});\nexport const ipGeoModeBlock = ipGeoBlock.mode;\nexport const blockGeoNetworkLists = ipGeoBlock.geoNetworkLists;\nexport const blockIpNetworkLists = ipGeoBlock.ipNetworkLists;\nexport const blockExceptionIpNetworkLists = ipGeoBlock.exceptionIpNetworkLists;\nexport const ipGeoModeAllow = ipGeoAllow.mode;\nexport const allowExceptionIpNetworkLists = ipGeoAllow.exceptionIpNetworkLists;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nip_geo_block = akamai.AppSecIPGeo(\"ipGeoBlock\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    mode=\"block\",\n    geo_network_lists=[\"06038_GEO_TEST\"],\n    ip_network_lists=[\"56921_TEST\"],\n    exception_ip_network_lists=[\"07126_EXCEPTION_TEST\"])\n# USE CASE: User wants to update the IP/Geo firewall mode and update the exception list.\nip_geo_allow = akamai.AppSecIPGeo(\"ipGeoAllow\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1-090334\",\n    mode=\"allow\",\n    exception_ip_network_lists=[\"07126_EXCEPTION_TEST\"])\npulumi.export(\"ipGeoModeBlock\", ip_geo_block.mode)\npulumi.export(\"blockGeoNetworkLists\", ip_geo_block.geo_network_lists)\npulumi.export(\"blockIpNetworkLists\", ip_geo_block.ip_network_lists)\npulumi.export(\"blockExceptionIpNetworkLists\", ip_geo_block.exception_ip_network_lists)\npulumi.export(\"ipGeoModeAllow\", ip_geo_allow.mode)\npulumi.export(\"allowExceptionIpNetworkLists\", ip_geo_allow.exception_ip_network_lists)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var ipGeoBlock = new Akamai.AppSecIPGeo(\"ipGeoBlock\", new Akamai.AppSecIPGeoArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            Mode = \"block\",\n            GeoNetworkLists = \n            {\n                \"06038_GEO_TEST\",\n            },\n            IpNetworkLists = \n            {\n                \"56921_TEST\",\n            },\n            ExceptionIpNetworkLists = \n            {\n                \"07126_EXCEPTION_TEST\",\n            },\n        });\n        // USE CASE: User wants to update the IP/Geo firewall mode and update the exception list.\n        var ipGeoAllow = new Akamai.AppSecIPGeo(\"ipGeoAllow\", new Akamai.AppSecIPGeoArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1-090334\",\n            Mode = \"allow\",\n            ExceptionIpNetworkLists = \n            {\n                \"07126_EXCEPTION_TEST\",\n            },\n        });\n        this.IpGeoModeBlock = ipGeoBlock.Mode;\n        this.BlockGeoNetworkLists = ipGeoBlock.GeoNetworkLists;\n        this.BlockIpNetworkLists = ipGeoBlock.IpNetworkLists;\n        this.BlockExceptionIpNetworkLists = ipGeoBlock.ExceptionIpNetworkLists;\n        this.IpGeoModeAllow = ipGeoAllow.Mode;\n        this.AllowExceptionIpNetworkLists = ipGeoAllow.ExceptionIpNetworkLists;\n    }\n\n    [Output(\"ipGeoModeBlock\")]\n    public Output\u003cstring\u003e IpGeoModeBlock { get; set; }\n    [Output(\"blockGeoNetworkLists\")]\n    public Output\u003cstring\u003e BlockGeoNetworkLists { get; set; }\n    [Output(\"blockIpNetworkLists\")]\n    public Output\u003cstring\u003e BlockIpNetworkLists { get; set; }\n    [Output(\"blockExceptionIpNetworkLists\")]\n    public Output\u003cstring\u003e BlockExceptionIpNetworkLists { get; set; }\n    [Output(\"ipGeoModeAllow\")]\n    public Output\u003cstring\u003e IpGeoModeAllow { get; set; }\n    [Output(\"allowExceptionIpNetworkLists\")]\n    public Output\u003cstring\u003e AllowExceptionIpNetworkLists { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipGeoBlock, err := akamai.NewAppSecIPGeo(ctx, \"ipGeoBlock\", \u0026akamai.AppSecIPGeoArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tMode:             pulumi.String(\"block\"),\n\t\t\tGeoNetworkLists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"06038_GEO_TEST\"),\n\t\t\t},\n\t\t\tIpNetworkLists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"56921_TEST\"),\n\t\t\t},\n\t\t\tExceptionIpNetworkLists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"07126_EXCEPTION_TEST\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipGeoAllow, err := akamai.NewAppSecIPGeo(ctx, \"ipGeoAllow\", \u0026akamai.AppSecIPGeoArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1-090334\"),\n\t\t\tMode:             pulumi.String(\"allow\"),\n\t\t\tExceptionIpNetworkLists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"07126_EXCEPTION_TEST\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ipGeoModeBlock\", ipGeoBlock.Mode)\n\t\tctx.Export(\"blockGeoNetworkLists\", ipGeoBlock.GeoNetworkLists)\n\t\tctx.Export(\"blockIpNetworkLists\", ipGeoBlock.IpNetworkLists)\n\t\tctx.Export(\"blockExceptionIpNetworkLists\", ipGeoBlock.ExceptionIpNetworkLists)\n\t\tctx.Export(\"ipGeoModeAllow\", ipGeoAllow.Mode)\n\t\tctx.Export(\"allowExceptionIpNetworkLists\", ipGeoAllow.ExceptionIpNetworkLists)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the IP/Geo lists being modified.\n"
                },
                "exceptionIpNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of network lists that are always allowed to pass through the firewall, regardless of the value of any other setting.\n"
                },
                "geoNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of geographic network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.\n"
                },
                "ipNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of IP network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall..\n"
                },
                "mode": {
                    "type": "string",
                    "description": ". Set to **block** to prevent the specified network lists from being allowed through the firewall: all other entities will be allowed to pass through the firewall. Set to **allow** to allow the specified network lists to pass through the firewall; all other entities will be prevented from passing through the firewall.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the IP/Geo lists being modified.\n"
                }
            },
            "required": [
                "configId",
                "mode",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the IP/Geo lists being modified.\n"
                },
                "exceptionIpNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of network lists that are always allowed to pass through the firewall, regardless of the value of any other setting.\n"
                },
                "geoNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of geographic network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.\n"
                },
                "ipNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of IP network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall..\n"
                },
                "mode": {
                    "type": "string",
                    "description": ". Set to **block** to prevent the specified network lists from being allowed through the firewall: all other entities will be allowed to pass through the firewall. Set to **allow** to allow the specified network lists to pass through the firewall; all other entities will be prevented from passing through the firewall.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the IP/Geo lists being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "mode",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecIPGeo resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the IP/Geo lists being modified.\n"
                    },
                    "exceptionIpNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". JSON array of network lists that are always allowed to pass through the firewall, regardless of the value of any other setting.\n"
                    },
                    "geoNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". JSON array of geographic network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall.\n"
                    },
                    "ipNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". JSON array of IP network lists that, depending on the value of the `mode` argument, will be blocked or allowed through the firewall..\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": ". Set to **block** to prevent the specified network lists from being allowed through the firewall: all other entities will be allowed to pass through the firewall. Set to **allow** to allow the specified network lists to pass through the firewall; all other entities will be prevented from passing through the firewall.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the IP/Geo lists being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecIPGeoProtection:AppSecIPGeoProtection": {
            "description": "**Scopes**: Security policy\n\nEnables or disables IP/Geo protection for the specified configuration and security policy. When enabled, this allows your firewall to allow (or to block) clients based on their IP address or their geographic location.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/ip-geo-firewall](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putprotections)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst protection = new akamai.AppSecIPGeoProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    enabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nprotection = akamai.AppSecIPGeoProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    enabled=True)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var protection = new Akamai.AppSecIPGeoProtection(\"protection\", new Akamai.AppSecIPGeoProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            Enabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecIPGeoProtection(ctx, \"protection\", \u0026akamai.AppSecIPGeoProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tEnabled:          pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the current protection settings.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the IP/Geo protection settings being modified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable IP/Geo protection; set to **false** to disable IP/Geo protection.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text Export representation\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the IP/Geo protection settings being modified.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the IP/Geo protection settings being modified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable IP/Geo protection; set to **false** to disable IP/Geo protection.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the IP/Geo protection settings being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecIPGeoProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the IP/Geo protection settings being modified.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable IP/Geo protection; set to **false** to disable IP/Geo protection.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text Export representation\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the IP/Geo protection settings being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMatchTarget:AppSecMatchTarget": {
            "description": "**Scopes**: Security configuration\n\nCreates a match target associated with a security configuration. Match targets determine which security policy should apply to an API, hostname or path.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/match-targets](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postmatchtargets)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst matchTarget = new akamai.AppSecMatchTarget(\"matchTarget\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    matchTarget: fs.readFileSync(`${path.module}/match_targets.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nmatch_target = akamai.AppSecMatchTarget(\"matchTarget\",\n    config_id=configuration.config_id,\n    match_target=(lambda path: open(path).read())(f\"{path['module']}/match_targets.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var matchTarget = new Akamai.AppSecMatchTarget(\"matchTarget\", new Akamai.AppSecMatchTargetArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            MatchTarget = File.ReadAllText($\"{path.Module}/match_targets.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecMatchTarget(ctx, \"matchTarget\", \u0026akamai.AppSecMatchTargetArgs{\n\t\t\tConfigId:    pulumi.Int(configuration.ConfigId),\n\t\t\tMatchTarget: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/match_targets.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nIn addition to the arguments above, the following attribute is exported:\n\n- `match_target_id`. ID of the match target.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the match target being modified.\n"
                },
                "matchTarget": {
                    "type": "string",
                    "description": ". Path to a JSON file containing one or more match target definitions. You can find a sample match target JSON file in the [Create a match target section](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postmatchtargets) of the Application Security API documentation.\n"
                },
                "matchTargetId": {
                    "type": "integer"
                }
            },
            "required": [
                "configId",
                "matchTarget",
                "matchTargetId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the match target being modified.\n"
                },
                "matchTarget": {
                    "type": "string",
                    "description": ". Path to a JSON file containing one or more match target definitions. You can find a sample match target JSON file in the [Create a match target section](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postmatchtargets) of the Application Security API documentation.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "matchTarget"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMatchTarget resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the match target being modified.\n"
                    },
                    "matchTarget": {
                        "type": "string",
                        "description": ". Path to a JSON file containing one or more match target definitions. You can find a sample match target JSON file in the [Create a match target section](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postmatchtargets) of the Application Security API documentation.\n"
                    },
                    "matchTargetId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMatchTargetSequence:AppSecMatchTargetSequence": {
            "description": "**Scopes**: Security configuration\n\nSpecifies the order in which match targets are applied within a security configuration. As a general rule, you should process broader and more-general match targets first, gradually working your way down to more granular and highly-specific targets.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/match-targets/sequence](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst matchTargetSequence = new akamai.AppSecMatchTargetSequence(\"matchTargetSequence\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    matchTargetSequence: fs.readFileSync(`${path.module}/match_targets_sequence.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nmatch_target_sequence = akamai.AppSecMatchTargetSequence(\"matchTargetSequence\",\n    config_id=configuration.config_id,\n    match_target_sequence=(lambda path: open(path).read())(f\"{path['module']}/match_targets_sequence.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var matchTargetSequence = new Akamai.AppSecMatchTargetSequence(\"matchTargetSequence\", new Akamai.AppSecMatchTargetSequenceArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            MatchTargetSequence = File.ReadAllText($\"{path.Module}/match_targets_sequence.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecMatchTargetSequence(ctx, \"matchTargetSequence\", \u0026akamai.AppSecMatchTargetSequenceArgs{\n\t\t\tConfigId:            pulumi.Int(configuration.ConfigId),\n\t\t\tMatchTargetSequence: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/match_targets_sequence.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the match target sequence being modified.\n"
                },
                "matchTargetSequence": {
                    "type": "string",
                    "description": ". Path to a JSON file containing the processing sequence for all the match targets defined for the security configuration. You can find a sample match target sequence JSON file in the [Modify match target order](https://developer.akamai.com/api/cloud_security/application_security/v1.html#matchtargetorder) section of the Application Security API documentation.\n"
                }
            },
            "required": [
                "configId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the match target sequence being modified.\n"
                },
                "matchTargetSequence": {
                    "type": "string",
                    "description": ". Path to a JSON file containing the processing sequence for all the match targets defined for the security configuration. You can find a sample match target sequence JSON file in the [Modify match target order](https://developer.akamai.com/api/cloud_security/application_security/v1.html#matchtargetorder) section of the Application Security API documentation.\n"
                }
            },
            "requiredInputs": [
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMatchTargetSequence resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the match target sequence being modified.\n"
                    },
                    "matchTargetSequence": {
                        "type": "string",
                        "description": ". Path to a JSON file containing the processing sequence for all the match targets defined for the security configuration. You can find a sample match target sequence JSON file in the [Modify match target order](https://developer.akamai.com/api/cloud_security/application_security/v1.html#matchtargetorder) section of the Application Security API documentation.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecPenaltyBox:AppSecPenaltyBox": {
            "description": "**Scopes**: Security policy\n\nModifies the penalty box settings for a security policy. When using automated attack groups, and when the penalty box is enabled, clients that trigger an attack group  are placed in the “penalty box.” That means that, for the next 10 minutes, all requests from that client are ignored.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/match-targets/sequence](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putpenaltybox)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst penaltyBox = new akamai.AppSecPenaltyBox(\"penaltyBox\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    penaltyBoxProtection: true,\n    penaltyBoxAction: \"deny\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\npenalty_box = akamai.AppSecPenaltyBox(\"penaltyBox\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    penalty_box_protection=True,\n    penalty_box_action=\"deny\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var penaltyBox = new Akamai.AppSecPenaltyBox(\"penaltyBox\", new Akamai.AppSecPenaltyBoxArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            PenaltyBoxProtection = true,\n            PenaltyBoxAction = \"deny\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecPenaltyBox(ctx, \"penaltyBox\", \u0026akamai.AppSecPenaltyBoxArgs{\n\t\t\tConfigId:             pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:     pulumi.String(\"gms1_134637\"),\n\t\t\tPenaltyBoxProtection: pulumi.Bool(true),\n\t\t\tPenaltyBoxAction:     pulumi.String(\"deny\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the penalty box settings being modified.\n"
                },
                "penaltyBoxAction": {
                    "type": "string",
                    "description": ". Action taken any time penalty box protection is triggered. Allowed values are:\n- **alert**. Record the event,\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "penaltyBoxProtection": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the penalty box settings being modified.\n"
                }
            },
            "required": [
                "configId",
                "penaltyBoxAction",
                "penaltyBoxProtection",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the penalty box settings being modified.\n"
                },
                "penaltyBoxAction": {
                    "type": "string",
                    "description": ". Action taken any time penalty box protection is triggered. Allowed values are:\n- **alert**. Record the event,\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "penaltyBoxProtection": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the penalty box settings being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "penaltyBoxAction",
                "penaltyBoxProtection",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecPenaltyBox resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the penalty box settings being modified.\n"
                    },
                    "penaltyBoxAction": {
                        "type": "string",
                        "description": ". Action taken any time penalty box protection is triggered. Allowed values are:\n- **alert**. Record the event,\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                    },
                    "penaltyBoxProtection": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable penalty box protection; set to **false** to disable penalty box protection.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the penalty box settings being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRatePolicy:AppSecRatePolicy": {
            "description": "**Scopes**: Security configuration; rate policy\n\nCreates, modifies or deletes rate policies.\nRate polices help you monitor and moderate the number and  rate of all the requests you receive.\nIn turn, this helps you prevent your website from being overwhelmed by a dramatic and unexpected surge in traffic.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/rate-policies](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postratepolicies)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst ratePolicy = new akamai.AppSecRatePolicy(\"ratePolicy\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    ratePolicy: fs.readFileSync(`${path.module}/rate_policy.json`),\n});\nexport const ratePolicyId = ratePolicy.ratePolicyId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nrate_policy = akamai.AppSecRatePolicy(\"ratePolicy\",\n    config_id=configuration.config_id,\n    rate_policy=(lambda path: open(path).read())(f\"{path['module']}/rate_policy.json\"))\npulumi.export(\"ratePolicyId\", rate_policy.rate_policy_id)\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var ratePolicy = new Akamai.AppSecRatePolicy(\"ratePolicy\", new Akamai.AppSecRatePolicyArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            RatePolicy = File.ReadAllText($\"{path.Module}/rate_policy.json\"),\n        });\n        this.RatePolicyId = ratePolicy.RatePolicyId;\n    }\n\n    [Output(\"ratePolicyId\")]\n    public Output\u003cstring\u003e RatePolicyId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tratePolicy, err := akamai.NewAppSecRatePolicy(ctx, \"ratePolicy\", \u0026akamai.AppSecRatePolicyArgs{\n\t\t\tConfigId:   pulumi.Int(configuration.ConfigId),\n\t\t\tRatePolicy: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/rate_policy.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ratePolicyId\", ratePolicy.RatePolicyId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `rate_policy_id`. ID of the modified or newly-created rate policy.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the rate policy being modified.\n"
                },
                "ratePolicy": {
                    "type": "string",
                    "description": ". Path to a JSON file containing a rate policy definition. You can view a sample rate policy JSON file in the [RatePolicy](https://developer.akamai.com/api/cloud_security/application_security/v1.html#ratepolicy) section of the Application Security API documentation.\n"
                },
                "ratePolicyId": {
                    "type": "integer",
                    "description": ". Unique identifier of an existing rate policy.\n"
                }
            },
            "required": [
                "configId",
                "ratePolicy",
                "ratePolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the rate policy being modified.\n"
                },
                "ratePolicy": {
                    "type": "string",
                    "description": ". Path to a JSON file containing a rate policy definition. You can view a sample rate policy JSON file in the [RatePolicy](https://developer.akamai.com/api/cloud_security/application_security/v1.html#ratepolicy) section of the Application Security API documentation.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "ratePolicy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRatePolicy resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the rate policy being modified.\n"
                    },
                    "ratePolicy": {
                        "type": "string",
                        "description": ". Path to a JSON file containing a rate policy definition. You can view a sample rate policy JSON file in the [RatePolicy](https://developer.akamai.com/api/cloud_security/application_security/v1.html#ratepolicy) section of the Application Security API documentation.\n"
                    },
                    "ratePolicyId": {
                        "type": "integer",
                        "description": ". Unique identifier of an existing rate policy.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRatePolicyAction:AppSecRatePolicyAction": {
            "description": "**Scopes**: Rate policy\n\nCreates, modifies or deletes the actions associated with a rate policy.\nBy default, rate policies take no action when triggered.\nNote that you must set separate actions for requests originating from an IPv4 IP address and for requests originating from an IPv6 address.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rate-policies/{ratePolicyId}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putactionsperratepolicy)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst appsecRatePolicy = new akamai.AppSecRatePolicy(\"appsecRatePolicy\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    ratePolicy: fs.readFileSync(`${path.module}/rate_policy.json`),\n});\nconst appsecRatePolicyAction = new akamai.AppSecRatePolicyAction(\"appsecRatePolicyAction\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    ratePolicyId: appsecRatePolicy.ratePolicyId,\n    ipv4Action: \"deny\",\n    ipv6Action: \"deny\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nappsec_rate_policy = akamai.AppSecRatePolicy(\"appsecRatePolicy\",\n    config_id=configuration.config_id,\n    rate_policy=(lambda path: open(path).read())(f\"{path['module']}/rate_policy.json\"))\nappsec_rate_policy_action = akamai.AppSecRatePolicyAction(\"appsecRatePolicyAction\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    rate_policy_id=appsec_rate_policy.rate_policy_id,\n    ipv4_action=\"deny\",\n    ipv6_action=\"deny\")\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var appsecRatePolicy = new Akamai.AppSecRatePolicy(\"appsecRatePolicy\", new Akamai.AppSecRatePolicyArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            RatePolicy = File.ReadAllText($\"{path.Module}/rate_policy.json\"),\n        });\n        var appsecRatePolicyAction = new Akamai.AppSecRatePolicyAction(\"appsecRatePolicyAction\", new Akamai.AppSecRatePolicyActionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            RatePolicyId = appsecRatePolicy.RatePolicyId,\n            Ipv4Action = \"deny\",\n            Ipv6Action = \"deny\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tappsecRatePolicy, err := akamai.NewAppSecRatePolicy(ctx, \"appsecRatePolicy\", \u0026akamai.AppSecRatePolicyArgs{\n\t\t\tConfigId:   pulumi.Int(configuration.ConfigId),\n\t\t\tRatePolicy: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/rate_policy.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecRatePolicyAction(ctx, \"appsecRatePolicyAction\", \u0026akamai.AppSecRatePolicyActionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tRatePolicyId:     appsecRatePolicy.RatePolicyId,\n\t\t\tIpv4Action:       pulumi.String(\"deny\"),\n\t\t\tIpv6Action:       pulumi.String(\"deny\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the rate policy action  being modified.\n"
                },
                "ipv4Action": {
                    "type": "string",
                    "description": ". Rate policy action for requests coming from an IPv4 IP address. Allowed actions are:\n- **alert**. Record the event,\n- **deny**. Block the request.\n- **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "ipv6Action": {
                    "type": "string",
                    "description": ". Rate policy action for requests coming from an IPv6 IP address. Allowed actions are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.\n"
                },
                "ratePolicyId": {
                    "type": "integer",
                    "description": ". Unique identifier of the rate policy whose action is being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "ipv4Action",
                "ipv6Action",
                "ratePolicyId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the rate policy action  being modified.\n"
                },
                "ipv4Action": {
                    "type": "string",
                    "description": ". Rate policy action for requests coming from an IPv4 IP address. Allowed actions are:\n- **alert**. Record the event,\n- **deny**. Block the request.\n- **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "ipv6Action": {
                    "type": "string",
                    "description": ". Rate policy action for requests coming from an IPv6 IP address. Allowed actions are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.\n"
                },
                "ratePolicyId": {
                    "type": "integer",
                    "description": ". Unique identifier of the rate policy whose action is being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "ipv4Action",
                "ipv6Action",
                "ratePolicyId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRatePolicyAction resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the rate policy action  being modified.\n"
                    },
                    "ipv4Action": {
                        "type": "string",
                        "description": ". Rate policy action for requests coming from an IPv4 IP address. Allowed actions are:\n- **alert**. Record the event,\n- **deny**. Block the request.\n- **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                    },
                    "ipv6Action": {
                        "type": "string",
                        "description": ". Rate policy action for requests coming from an IPv6 IP address. Allowed actions are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.\n"
                    },
                    "ratePolicyId": {
                        "type": "integer",
                        "description": ". Unique identifier of the rate policy whose action is being modified.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRateProtection:AppSecRateProtection": {
            "description": "**Scopes**: Security policy\n\nEnables or disables rate protection for a security policy.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/protections](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putprotections)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst protection = new akamai.AppSecRateProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    enabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nprotection = akamai.AppSecRateProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    enabled=True)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var protection = new Akamai.AppSecRateProtection(\"protection\", new Akamai.AppSecRateProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            Enabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecRateProtection(ctx, \"protection\", \u0026akamai.AppSecRateProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tEnabled:          pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the current protection settings.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the rate protection settings being modified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable rate protection; set to **false** to disable rate protection.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text Export representation\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the rate protection settings being modified.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the rate protection settings being modified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable rate protection; set to **false** to disable rate protection.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the rate protection settings being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRateProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the rate protection settings being modified.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable rate protection; set to **false** to disable rate protection.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text Export representation\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the rate protection settings being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProfile:AppSecReputationProfile": {
            "description": "**Scopes**: Security policy\n\nCreates or modifies a reputation profile.\nReputation profiles grade the security risk of an IP address based on previous activities associated with that address.\nDepending on the reputation score and how your configuration has been set up, requests from a specific IP address can trigger an alert or even be blocked.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/reputation-profiles](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postreputationprofiles)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst reputationProfile = new akamai.AppSecReputationProfile(\"reputationProfile\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    reputationProfile: fs.readFileSync(`${path.module}/reputation_profile.json`),\n});\nexport const reputationProfileId = reputationProfile.reputationProfileId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nreputation_profile = akamai.AppSecReputationProfile(\"reputationProfile\",\n    config_id=configuration.config_id,\n    reputation_profile=(lambda path: open(path).read())(f\"{path['module']}/reputation_profile.json\"))\npulumi.export(\"reputationProfileId\", reputation_profile.reputation_profile_id)\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var reputationProfile = new Akamai.AppSecReputationProfile(\"reputationProfile\", new Akamai.AppSecReputationProfileArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            ReputationProfile = File.ReadAllText($\"{path.Module}/reputation_profile.json\"),\n        });\n        this.ReputationProfileId = reputationProfile.ReputationProfileId;\n    }\n\n    [Output(\"reputationProfileId\")]\n    public Output\u003cstring\u003e ReputationProfileId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treputationProfile, err := akamai.NewAppSecReputationProfile(ctx, \"reputationProfile\", \u0026akamai.AppSecReputationProfileArgs{\n\t\t\tConfigId:          pulumi.Int(configuration.ConfigId),\n\t\t\tReputationProfile: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/reputation_profile.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationProfileId\", reputationProfile.ReputationProfileId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `reputation_profile_id`. ID of the newly-created or newly-modified reputation profile.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the reputation profile being modified.\n"
                },
                "reputationProfile": {
                    "type": "string",
                    "description": ". Path to a JSON file containing a definition of the reputation profile. You can view a sample JSON file in the [Create a reputation profile](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postreputationprofiles) section of the Application Security API documentation.\n"
                },
                "reputationProfileId": {
                    "type": "integer"
                }
            },
            "required": [
                "configId",
                "reputationProfile",
                "reputationProfileId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the reputation profile being modified.\n"
                },
                "reputationProfile": {
                    "type": "string",
                    "description": ". Path to a JSON file containing a definition of the reputation profile. You can view a sample JSON file in the [Create a reputation profile](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postreputationprofiles) section of the Application Security API documentation.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "reputationProfile"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProfile resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the reputation profile being modified.\n"
                    },
                    "reputationProfile": {
                        "type": "string",
                        "description": ". Path to a JSON file containing a definition of the reputation profile. You can view a sample JSON file in the [Create a reputation profile](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postreputationprofiles) section of the Application Security API documentation.\n"
                    },
                    "reputationProfileId": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProfileAction:AppSecReputationProfileAction": {
            "description": "**Scopes**: Reputation profile\n\nModifies the action taken when a reputation profile is triggered.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/reputation-profiles/{reputationProfileId}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putreputationprofileaction)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst appsecReputationProfileAction = new akamai.AppSecReputationProfileAction(\"appsecReputationProfileAction\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    reputationProfileId: 130713,\n    action: \"alert\",\n});\nexport const reputationProfileId = appsecReputationProfileAction.reputationProfileId;\nexport const reputationProfileAction = appsecReputationProfileAction.action;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nappsec_reputation_profile_action = akamai.AppSecReputationProfileAction(\"appsecReputationProfileAction\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    reputation_profile_id=130713,\n    action=\"alert\")\npulumi.export(\"reputationProfileId\", appsec_reputation_profile_action.reputation_profile_id)\npulumi.export(\"reputationProfileAction\", appsec_reputation_profile_action.action)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var appsecReputationProfileAction = new Akamai.AppSecReputationProfileAction(\"appsecReputationProfileAction\", new Akamai.AppSecReputationProfileActionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            ReputationProfileId = 130713,\n            Action = \"alert\",\n        });\n        this.ReputationProfileId = appsecReputationProfileAction.ReputationProfileId;\n        this.ReputationProfileAction = appsecReputationProfileAction.Action;\n    }\n\n    [Output(\"reputationProfileId\")]\n    public Output\u003cstring\u003e ReputationProfileId { get; set; }\n    [Output(\"reputationProfileAction\")]\n    public Output\u003cstring\u003e ReputationProfileAction { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tappsecReputationProfileAction, err := akamai.NewAppSecReputationProfileAction(ctx, \"appsecReputationProfileAction\", \u0026akamai.AppSecReputationProfileActionArgs{\n\t\t\tConfigId:            pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:    pulumi.String(\"gms1_134637\"),\n\t\t\tReputationProfileId: pulumi.Int(130713),\n\t\t\tAction:              pulumi.String(\"alert\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationProfileId\", appsecReputationProfileAction.ReputationProfileId)\n\t\tctx.Export(\"reputationProfileAction\", appsecReputationProfileAction.Action)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "action": {
                    "type": "string",
                    "description": ". Action taken any time the reputation profile is triggered. Allows values are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the reputation profile action being modified.\n"
                },
                "reputationProfileId": {
                    "type": "integer",
                    "description": ". Unique identifier of the reputation profile whose action is being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the reputation profile action being modified.\n"
                }
            },
            "required": [
                "action",
                "configId",
                "reputationProfileId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": ". Action taken any time the reputation profile is triggered. Allows values are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the reputation profile action being modified.\n"
                },
                "reputationProfileId": {
                    "type": "integer",
                    "description": ". Unique identifier of the reputation profile whose action is being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the reputation profile action being modified.\n"
                }
            },
            "requiredInputs": [
                "action",
                "configId",
                "reputationProfileId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProfileAction resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": ". Action taken any time the reputation profile is triggered. Allows values are:\n- **alert**. Record the event.\n- **deny**. Block the request.\n- **deny_custom_{custom_deny_id}**. Take the action specified by the custom deny.\n- **none**. Take no action.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the reputation profile action being modified.\n"
                    },
                    "reputationProfileId": {
                        "type": "integer",
                        "description": ". Unique identifier of the reputation profile whose action is being modified.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the reputation profile action being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProfileAnalysis:AppSecReputationProfileAnalysis": {
            "description": "**Scopes**: Security policy\n\nModifies the reputation analysis settings for a security policy. These settings include the following:\n\n- The `forward_to_http_header` parameter, which indicates whether client reputation details are added to requests forwarded to origin in an HTTP header.\n- The `forward_shared_ip_to_http_header_siem` parameter, which specifies whether a value is added indicating that shared IPs addresses are included in HTTP headers and in SIEM integration events.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/reputation-analysis](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putreputationanalysis)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst reputationAnalysis = configuration.then(configuration =\u003e akamai.getAppSecReputationProfileAnalysis({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n    forwardToHttpHeader: true,\n}));\nexport const reputationAnalysisText = reputationAnalysis.then(reputationAnalysis =\u003e reputationAnalysis.outputText);\nexport const reputationAnalysisJson = reputationAnalysis.then(reputationAnalysis =\u003e reputationAnalysis.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nreputation_analysis = akamai.get_app_sec_reputation_profile_analysis(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    forward_to_http_header=True)\npulumi.export(\"reputationAnalysisText\", reputation_analysis.output_text)\npulumi.export(\"reputationAnalysisJson\", reputation_analysis.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var reputationAnalysis = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecReputationProfileAnalysis.InvokeAsync(new Akamai.GetAppSecReputationProfileAnalysisArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n            ForwardToHttpHeader = true,\n        })));\n        this.ReputationAnalysisText = reputationAnalysis.Apply(reputationAnalysis =\u003e reputationAnalysis.OutputText);\n        this.ReputationAnalysisJson = reputationAnalysis.Apply(reputationAnalysis =\u003e reputationAnalysis.Json);\n    }\n\n    [Output(\"reputationAnalysisText\")]\n    public Output\u003cstring\u003e ReputationAnalysisText { get; set; }\n    [Output(\"reputationAnalysisJson\")]\n    public Output\u003cstring\u003e ReputationAnalysisJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treputationAnalysis, err := akamai.LookupAppSecReputationProfileAnalysis(ctx, \u0026GetAppSecReputationProfileAnalysisArgs{\n\t\t\tConfigId:            configuration.ConfigId,\n\t\t\tSecurityPolicyId:    \"gms1_134637\",\n\t\t\tForwardToHttpHeader: true,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationAnalysisText\", reputationAnalysis.OutputText)\n\t\tctx.Export(\"reputationAnalysisJson\", reputationAnalysis.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the reputation profile analysis settings being modified.\n"
                },
                "forwardSharedIpToHttpHeaderSiem": {
                    "type": "boolean",
                    "description": ". Set to **true** to add a value indicating that shared IPs are included in HTTP header and SIEM integration; set to **false** to omit this value.\n"
                },
                "forwardToHttpHeader": {
                    "type": "boolean",
                    "description": ". Set to **true** to add client reputation details to requests forwarded to the origin server in an HTTP header; set to `false` to leave reputation details out of these requests.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the reputation profile analysis settings being modified.\n"
                }
            },
            "required": [
                "configId",
                "forwardSharedIpToHttpHeaderSiem",
                "forwardToHttpHeader",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the reputation profile analysis settings being modified.\n"
                },
                "forwardSharedIpToHttpHeaderSiem": {
                    "type": "boolean",
                    "description": ". Set to **true** to add a value indicating that shared IPs are included in HTTP header and SIEM integration; set to **false** to omit this value.\n"
                },
                "forwardToHttpHeader": {
                    "type": "boolean",
                    "description": ". Set to **true** to add client reputation details to requests forwarded to the origin server in an HTTP header; set to `false` to leave reputation details out of these requests.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the reputation profile analysis settings being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "forwardSharedIpToHttpHeaderSiem",
                "forwardToHttpHeader",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProfileAnalysis resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the reputation profile analysis settings being modified.\n"
                    },
                    "forwardSharedIpToHttpHeaderSiem": {
                        "type": "boolean",
                        "description": ". Set to **true** to add a value indicating that shared IPs are included in HTTP header and SIEM integration; set to **false** to omit this value.\n"
                    },
                    "forwardToHttpHeader": {
                        "type": "boolean",
                        "description": ". Set to **true** to add client reputation details to requests forwarded to the origin server in an HTTP header; set to `false` to leave reputation details out of these requests.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the reputation profile analysis settings being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProtection:AppSecReputationProtection": {
            "description": "**Scopes**: Security policy\n\nEnables or disables reputation protection for a security configuration and security policy.\nReputation profiles grade the security risk of an IP address based on previous activities associated with that address.\nDepending on the reputation score and how your configuration has been set up, requests from a specific IP address can trigger an alert or even be blocked.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/protections](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putprotections)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst protection = new akamai.AppSecReputationProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    enabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nprotection = akamai.AppSecReputationProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    enabled=True)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var protection = new Akamai.AppSecReputationProtection(\"protection\", new Akamai.AppSecReputationProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            Enabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecReputationProtection(ctx, \"protection\", \u0026akamai.AppSecReputationProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tEnabled:          pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the current protection settings.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the reputation protection settings being modified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable reputation protection; set to **false** to disable reputation protection.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text Export representation\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the reputation protection settings being modified.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the reputation protection settings being modified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable reputation protection; set to **false** to disable reputation protection.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the reputation protection settings being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the reputation protection settings being modified.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable reputation protection; set to **false** to disable reputation protection.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text Export representation\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the reputation protection settings being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRule:AppSecRule": {
            "description": "**Scopes**: Rule\n\nModifies a Kona Rule Set rule's action, conditions, and exceptions.\n\n**Related API Endpoints**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rules/{ruleId}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleaction) *and* [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rules/{ruleId}/condition-exception](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst rule = new akamai.AppSecRule(\"rule\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    ruleId: 60029316,\n    ruleAction: \"deny\",\n    conditionException: fs.readFileSync(`${path.module}/condition_exception.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nrule = akamai.AppSecRule(\"rule\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    rule_id=60029316,\n    rule_action=\"deny\",\n    condition_exception=(lambda path: open(path).read())(f\"{path['module']}/condition_exception.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var rule = new Akamai.AppSecRule(\"rule\", new Akamai.AppSecRuleArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            RuleId = 60029316,\n            RuleAction = \"deny\",\n            ConditionException = File.ReadAllText($\"{path.Module}/condition_exception.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecRule(ctx, \"rule\", \u0026akamai.AppSecRuleArgs{\n\t\t\tConfigId:           pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:   pulumi.String(\"gms1_134637\"),\n\t\t\tRuleId:             pulumi.Int(60029316),\n\t\t\tRuleAction:         pulumi.String(\"deny\"),\n\t\t\tConditionException: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/condition_exception.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "conditionException": {
                    "type": "string",
                    "description": ". Path to a JSON file containing a description of the conditions and exceptions to be associated with a rule. You can view a sample JSON file in the [Modify the conditions and exceptions of a rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception) section of the Application Security API documentation.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the Kona Rule Set rule being modified.\n"
                },
                "ruleAction": {
                    "type": "string",
                    "description": ". Action to be taken anytime the rule is triggered. Allowed values are:\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": ". Unique identifier of the rule being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the Kona Rule Set rule being modified.\n"
                }
            },
            "required": [
                "configId",
                "ruleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "conditionException": {
                    "type": "string",
                    "description": ". Path to a JSON file containing a description of the conditions and exceptions to be associated with a rule. You can view a sample JSON file in the [Modify the conditions and exceptions of a rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception) section of the Application Security API documentation.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the Kona Rule Set rule being modified.\n"
                },
                "ruleAction": {
                    "type": "string",
                    "description": ". Action to be taken anytime the rule is triggered. Allowed values are:\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": ". Unique identifier of the rule being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the Kona Rule Set rule being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "ruleId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRule resources.\n",
                "properties": {
                    "conditionException": {
                        "type": "string",
                        "description": ". Path to a JSON file containing a description of the conditions and exceptions to be associated with a rule. You can view a sample JSON file in the [Modify the conditions and exceptions of a rule](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putruleconditionexception) section of the Application Security API documentation.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the Kona Rule Set rule being modified.\n"
                    },
                    "ruleAction": {
                        "type": "string",
                        "description": ". Action to be taken anytime the rule is triggered. Allowed values are:\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": ". Unique identifier of the rule being modified.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the Kona Rule Set rule being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRuleUpgrade:AppSecRuleUpgrade": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the ruleset being upgraded.\n"
                },
                "currentRuleset": {
                    "type": "string"
                },
                "evalStatus": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the ruleset being upgraded.\n- `upgrade_mode`. (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:\n- **ASE_AUTO**. Akamai automatically updates your rulesets.\n- **ASE_MANUAL**. Manually updates your rulesets.\n"
                },
                "upgradeMode": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "currentRuleset",
                "evalStatus",
                "mode",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the ruleset being upgraded.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the ruleset being upgraded.\n- `upgrade_mode`. (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:\n- **ASE_AUTO**. Akamai automatically updates your rulesets.\n- **ASE_MANUAL**. Manually updates your rulesets.\n"
                },
                "upgradeMode": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRuleUpgrade resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the ruleset being upgraded.\n"
                    },
                    "currentRuleset": {
                        "type": "string"
                    },
                    "evalStatus": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the ruleset being upgraded.\n- `upgrade_mode`. (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:\n- **ASE_AUTO**. Akamai automatically updates your rulesets.\n- **ASE_MANUAL**. Manually updates your rulesets.\n"
                    },
                    "upgradeMode": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSecurityPolicy:AppSecSecurityPolicy": {
            "description": "**Scopes**: Security configuration\n\nCreates a new security policy. The resource enables you to:\n\n- Create a new, “blank” security policy.\n- Create a new policy preconfigured with the default security policy settings.\n- Clone an existing security policy.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postsecuritypolicies)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst securityPolicyCreateAppSecSecurityPolicy = new akamai.AppSecSecurityPolicy(\"securityPolicyCreateAppSecSecurityPolicy\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    defaultSettings: true,\n    securityPolicyName: \"Documentation Policy\",\n    securityPolicyPrefix: \"gms1\",\n});\nexport const securityPolicyCreate = securityPolicyCreateAppSecSecurityPolicy.securityPolicyId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nsecurity_policy_create_app_sec_security_policy = akamai.AppSecSecurityPolicy(\"securityPolicyCreateAppSecSecurityPolicy\",\n    config_id=configuration.config_id,\n    default_settings=True,\n    security_policy_name=\"Documentation Policy\",\n    security_policy_prefix=\"gms1\")\npulumi.export(\"securityPolicyCreate\", security_policy_create_app_sec_security_policy.security_policy_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var securityPolicyCreateAppSecSecurityPolicy = new Akamai.AppSecSecurityPolicy(\"securityPolicyCreateAppSecSecurityPolicy\", new Akamai.AppSecSecurityPolicyArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            DefaultSettings = true,\n            SecurityPolicyName = \"Documentation Policy\",\n            SecurityPolicyPrefix = \"gms1\",\n        });\n        this.SecurityPolicyCreate = securityPolicyCreateAppSecSecurityPolicy.SecurityPolicyId;\n    }\n\n    [Output(\"securityPolicyCreate\")]\n    public Output\u003cstring\u003e SecurityPolicyCreate { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsecurityPolicyCreateAppSecSecurityPolicy, err := akamai.NewAppSecSecurityPolicy(ctx, \"securityPolicyCreateAppSecSecurityPolicy\", \u0026akamai.AppSecSecurityPolicyArgs{\n\t\t\tConfigId:             pulumi.Int(configuration.ConfigId),\n\t\t\tDefaultSettings:      pulumi.Bool(true),\n\t\t\tSecurityPolicyName:   pulumi.String(\"Documentation Policy\"),\n\t\t\tSecurityPolicyPrefix: pulumi.String(\"gms1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"securityPolicyCreate\", securityPolicyCreateAppSecSecurityPolicy.SecurityPolicyId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `security_policy_id`. ID of the newly-created security policy.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration to be associated with the new security policy.\n"
                },
                "createFromSecurityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the existing security policy that the new policy will be cloned from.\n"
                },
                "defaultSettings": {
                    "type": "boolean",
                    "description": ". Set to **true** to assign default setting values to the new policy; set to **false** to create a “blank” security policy. If not included, the new policy will be created using the default settings.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Policy ID for new policy\n"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": ". Name of the new security policy.\n"
                },
                "securityPolicyPrefix": {
                    "type": "string",
                    "description": ". Four-character alphanumeric string prefix used in creating the security policy ID.\n"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "securityPolicyName",
                "securityPolicyPrefix"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration to be associated with the new security policy.\n"
                },
                "createFromSecurityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the existing security policy that the new policy will be cloned from.\n"
                },
                "defaultSettings": {
                    "type": "boolean",
                    "description": ". Set to **true** to assign default setting values to the new policy; set to **false** to create a “blank” security policy. If not included, the new policy will be created using the default settings.\n"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": ". Name of the new security policy.\n"
                },
                "securityPolicyPrefix": {
                    "type": "string",
                    "description": ". Four-character alphanumeric string prefix used in creating the security policy ID.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyName",
                "securityPolicyPrefix"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSecurityPolicy resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration to be associated with the new security policy.\n"
                    },
                    "createFromSecurityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the existing security policy that the new policy will be cloned from.\n"
                    },
                    "defaultSettings": {
                        "type": "boolean",
                        "description": ". Set to **true** to assign default setting values to the new policy; set to **false** to create a “blank” security policy. If not included, the new policy will be created using the default settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Policy ID for new policy\n"
                    },
                    "securityPolicyName": {
                        "type": "string",
                        "description": ". Name of the new security policy.\n"
                    },
                    "securityPolicyPrefix": {
                        "type": "string",
                        "description": ". Four-character alphanumeric string prefix used in creating the security policy ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSecurityPolicyRename:AppSecSecurityPolicyRename": {
            "description": "**Scopes**: Security policy\n\nRenames an existing security policy. Note that you can only change the name of the policy: once issued, the security policy ID can't be modified.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsecuritypolicy)\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the security policy being renamed.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy being renamed.\n"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": ". New name to be given to the security policy.\n"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "securityPolicyName"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the security policy being renamed.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy being renamed.\n"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": ". New name to be given to the security policy.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId",
                "securityPolicyName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSecurityPolicyRename resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the security policy being renamed.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy being renamed.\n"
                    },
                    "securityPolicyName": {
                        "type": "string",
                        "description": ". New name to be given to the security policy.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSelectedHostnames:AppSecSelectedHostnames": {
            "description": "**Scopes**: Security configuration\n\nModifies the list of hostnames protected under by a security configuration.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/selected-hostnames](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putselectedhostnames)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst appsecselectedhostnames = new akamai.AppSecSelectedHostnames(\"appsecselectedhostnames\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    hostnames: [\"example.com\"],\n    mode: \"APPEND\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nappsecselectedhostnames = akamai.AppSecSelectedHostnames(\"appsecselectedhostnames\",\n    config_id=configuration.config_id,\n    hostnames=[\"example.com\"],\n    mode=\"APPEND\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var appsecselectedhostnames = new Akamai.AppSecSelectedHostnames(\"appsecselectedhostnames\", new Akamai.AppSecSelectedHostnamesArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Hostnames = \n            {\n                \"example.com\",\n            },\n            Mode = \"APPEND\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecSelectedHostnames(ctx, \"appsecselectedhostnames\", \u0026akamai.AppSecSelectedHostnamesArgs{\n\t\t\tConfigId: pulumi.Int(configuration.ConfigId),\n\t\t\tHostnames: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t},\n\t\t\tMode: pulumi.String(\"APPEND\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the hostnames.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of hostnames to be added or removed from the protected hosts list.\n"
                },
                "mode": {
                    "type": "string",
                    "description": ". Indicates how the `hostnames` array is to be applied. Allowed values are:\n- **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.\n- **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.\n- **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.\n"
                }
            },
            "required": [
                "configId",
                "hostnames",
                "mode"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the hostnames.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". JSON array of hostnames to be added or removed from the protected hosts list.\n"
                },
                "mode": {
                    "type": "string",
                    "description": ". Indicates how the `hostnames` array is to be applied. Allowed values are:\n- **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.\n- **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.\n- **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "hostnames",
                "mode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSelectedHostnames resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the hostnames.\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". JSON array of hostnames to be added or removed from the protected hosts list.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": ". Indicates how the `hostnames` array is to be applied. Allowed values are:\n- **APPEND**. Hosts listed in the `hostnames` array are added to the current list of selected hostnames.\n- **REPLACE**. Hosts listed in the `hostnames`  array overwrite the current list of selected hostnames: the “old” hostnames are replaced by the specified set of hostnames.\n- **REMOVE**, Hosts listed in the `hostnames` array are removed from the current list of select hostnames.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSiemSettings:AppSecSiemSettings": {
            "description": "**Scopes**: Security configuration\n\nModifies SIEM (Security Information and Event Management) integration settings for a security configuration.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/siem](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsiemsettings)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst siemDefinition = akamai.getAppSecSiemDefinitions({\n    siemDefinitionName: \"SIEM Version 01\",\n});\nconst securityPolicies = configuration.then(configuration =\u003e akamai.getAppSecSecurityPolicy({\n    configId: configuration.configId,\n}));\nconst siem = new akamai.AppSecSiemSettings(\"siem\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    enableSiem: true,\n    enableForAllPolicies: false,\n    enableBotmanSiem: true,\n    siemId: siemDefinition.then(siemDefinition =\u003e siemDefinition.id),\n    securityPolicyIds: securityPolicies.then(securityPolicies =\u003e securityPolicies.securityPolicyIdLists),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nsiem_definition = akamai.get_app_sec_siem_definitions(siem_definition_name=\"SIEM Version 01\")\nsecurity_policies = akamai.get_app_sec_security_policy(config_id=configuration.config_id)\nsiem = akamai.AppSecSiemSettings(\"siem\",\n    config_id=configuration.config_id,\n    enable_siem=True,\n    enable_for_all_policies=False,\n    enable_botman_siem=True,\n    siem_id=siem_definition.id,\n    security_policy_ids=security_policies.security_policy_id_lists)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var siemDefinition = Output.Create(Akamai.GetAppSecSiemDefinitions.InvokeAsync(new Akamai.GetAppSecSiemDefinitionsArgs\n        {\n            SiemDefinitionName = \"SIEM Version 01\",\n        }));\n        var securityPolicies = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSecurityPolicy.InvokeAsync(new Akamai.GetAppSecSecurityPolicyArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        var siem = new Akamai.AppSecSiemSettings(\"siem\", new Akamai.AppSecSiemSettingsArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            EnableSiem = true,\n            EnableForAllPolicies = false,\n            EnableBotmanSiem = true,\n            SiemId = siemDefinition.Apply(siemDefinition =\u003e siemDefinition.Id),\n            SecurityPolicyIds = securityPolicies.Apply(securityPolicies =\u003e securityPolicies.SecurityPolicyIdLists),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := \"SIEM Version 01\"\n\t\tsiemDefinition, err := akamai.GetAppSecSiemDefinitions(ctx, \u0026GetAppSecSiemDefinitionsArgs{\n\t\t\tSiemDefinitionName: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsecurityPolicies, err := akamai.LookupAppSecSecurityPolicy(ctx, \u0026GetAppSecSecurityPolicyArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecSiemSettings(ctx, \"siem\", \u0026akamai.AppSecSiemSettingsArgs{\n\t\t\tConfigId:             pulumi.Int(configuration.ConfigId),\n\t\t\tEnableSiem:           pulumi.Bool(true),\n\t\t\tEnableForAllPolicies: pulumi.Bool(false),\n\t\t\tEnableBotmanSiem:     pulumi.Bool(true),\n\t\t\tSiemId:               pulumi.String(siemDefinition.Id),\n\t\t\tSecurityPolicyIds:    interface{}(securityPolicies.SecurityPolicyIdLists),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the updated SIEM integration settings.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the SIEM settings being modified.\n"
                },
                "enableBotmanSiem": {
                    "type": "boolean",
                    "description": ". Set to **true** to include Bot Manager events in your SIEM events; set to **false** to exclude Bot Manager events from your SIEM events.\n"
                },
                "enableForAllPolicies": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable SIEM on all security policies in the security configuration; set to **false** to only enable SIEM on the security policies specified by the `security_policy_ids` argument.\n"
                },
                "enableSiem": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable SIEM; set to **false** to disable SIEM.\n"
                },
                "securityPolicyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JSON array of IDs for the security policies where SIEM integration is to be enabled.\n"
                },
                "siemId": {
                    "type": "integer",
                    "description": ". Unique identifier of the SIEM settings being modified.\n"
                }
            },
            "required": [
                "configId",
                "enableBotmanSiem",
                "enableForAllPolicies",
                "enableSiem",
                "siemId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the SIEM settings being modified.\n"
                },
                "enableBotmanSiem": {
                    "type": "boolean",
                    "description": ". Set to **true** to include Bot Manager events in your SIEM events; set to **false** to exclude Bot Manager events from your SIEM events.\n"
                },
                "enableForAllPolicies": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable SIEM on all security policies in the security configuration; set to **false** to only enable SIEM on the security policies specified by the `security_policy_ids` argument.\n"
                },
                "enableSiem": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable SIEM; set to **false** to disable SIEM.\n"
                },
                "securityPolicyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JSON array of IDs for the security policies where SIEM integration is to be enabled.\n"
                },
                "siemId": {
                    "type": "integer",
                    "description": ". Unique identifier of the SIEM settings being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enableBotmanSiem",
                "enableForAllPolicies",
                "enableSiem",
                "siemId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSiemSettings resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the SIEM settings being modified.\n"
                    },
                    "enableBotmanSiem": {
                        "type": "boolean",
                        "description": ". Set to **true** to include Bot Manager events in your SIEM events; set to **false** to exclude Bot Manager events from your SIEM events.\n"
                    },
                    "enableForAllPolicies": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable SIEM on all security policies in the security configuration; set to **false** to only enable SIEM on the security policies specified by the `security_policy_ids` argument.\n"
                    },
                    "enableSiem": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable SIEM; set to **false** to disable SIEM.\n"
                    },
                    "securityPolicyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "JSON array of IDs for the security policies where SIEM integration is to be enabled.\n"
                    },
                    "siemId": {
                        "type": "integer",
                        "description": ". Unique identifier of the SIEM settings being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSlowPost:AppSecSlowPost": {
            "description": "**Scopes**: Security policy\n\nModifies slow POST protection settings for a security configuration and security policy. Slow POST protections help defend a site against attacks that try to tie up the site by using extremely slow requests and responses.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/slow-post](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putslowpostprotectionsettings)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst slowPost = new akamai.AppSecSlowPost(\"slowPost\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    slowRateAction: \"alert\",\n    slowRateThresholdRate: 10,\n    slowRateThresholdPeriod: 30,\n    durationThresholdTimeout: 20,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nslow_post = akamai.AppSecSlowPost(\"slowPost\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    slow_rate_action=\"alert\",\n    slow_rate_threshold_rate=10,\n    slow_rate_threshold_period=30,\n    duration_threshold_timeout=20)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var slowPost = new Akamai.AppSecSlowPost(\"slowPost\", new Akamai.AppSecSlowPostArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            SlowRateAction = \"alert\",\n            SlowRateThresholdRate = 10,\n            SlowRateThresholdPeriod = 30,\n            DurationThresholdTimeout = 20,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecSlowPost(ctx, \"slowPost\", \u0026akamai.AppSecSlowPostArgs{\n\t\t\tConfigId:                 pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:         pulumi.String(\"gms1_134637\"),\n\t\t\tSlowRateAction:           pulumi.String(\"alert\"),\n\t\t\tSlowRateThresholdRate:    pulumi.Int(10),\n\t\t\tSlowRateThresholdPeriod:  pulumi.Int(30),\n\t\t\tDurationThresholdTimeout: pulumi.Int(20),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the slow POST settings being modified.\n"
                },
                "durationThresholdTimeout": {
                    "type": "integer",
                    "description": ". Maximum amount of time (in seconds) that the first eight kilobytes of the POST body must be received in to avoid triggering the specified action.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the slow POST settings being modified.\n"
                },
                "slowRateAction": {
                    "type": "string",
                    "description": ". Action to be taken if slow POST protection is triggered. Allowed values are:\n- **alert**. Record the event.\n- **abort**. Block the request.\n"
                },
                "slowRateThresholdPeriod": {
                    "type": "integer",
                    "description": ". Amount of time (in seconds) that the server should allow a request before marking the request as being too slow.\n"
                },
                "slowRateThresholdRate": {
                    "type": "integer",
                    "description": ". Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered.\n"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "slowRateAction"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the slow POST settings being modified.\n"
                },
                "durationThresholdTimeout": {
                    "type": "integer",
                    "description": ". Maximum amount of time (in seconds) that the first eight kilobytes of the POST body must be received in to avoid triggering the specified action.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the slow POST settings being modified.\n"
                },
                "slowRateAction": {
                    "type": "string",
                    "description": ". Action to be taken if slow POST protection is triggered. Allowed values are:\n- **alert**. Record the event.\n- **abort**. Block the request.\n"
                },
                "slowRateThresholdPeriod": {
                    "type": "integer",
                    "description": ". Amount of time (in seconds) that the server should allow a request before marking the request as being too slow.\n"
                },
                "slowRateThresholdRate": {
                    "type": "integer",
                    "description": ". Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId",
                "slowRateAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSlowPost resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the slow POST settings being modified.\n"
                    },
                    "durationThresholdTimeout": {
                        "type": "integer",
                        "description": ". Maximum amount of time (in seconds) that the first eight kilobytes of the POST body must be received in to avoid triggering the specified action.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the slow POST settings being modified.\n"
                    },
                    "slowRateAction": {
                        "type": "string",
                        "description": ". Action to be taken if slow POST protection is triggered. Allowed values are:\n- **alert**. Record the event.\n- **abort**. Block the request.\n"
                    },
                    "slowRateThresholdPeriod": {
                        "type": "integer",
                        "description": ". Amount of time (in seconds) that the server should allow a request before marking the request as being too slow.\n"
                    },
                    "slowRateThresholdRate": {
                        "type": "integer",
                        "description": ". Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSlowPostProtection:AppSecSlowPostProtection": {
            "description": "**Scopes**: Security policy\n\nEnables or disables slow POST protection for a security configuration and security policy. Slow POST protections help defend a site against attacks that try to tie up the site by using extremely slow requests and responses.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/protections](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putprotections)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst protection = new akamai.AppSecSlowPostProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    enabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nprotection = akamai.AppSecSlowPostProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    enabled=True)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var protection = new Akamai.AppSecSlowPostProtection(\"protection\", new Akamai.AppSecSlowPostProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            Enabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecSlowPostProtection(ctx, \"protection\", \u0026akamai.AppSecSlowPostProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tEnabled:          pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the current protection settings.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the slow POST protection settings being modified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable slow POST protection; set to **false** to disable slow POST protection.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text Export representation\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the slow POST protection settings being modified.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the slow POST protection settings being modified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable slow POST protection; set to **false** to disable slow POST protection.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the slow POST protection settings being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSlowPostProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the slow POST protection settings being modified.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable slow POST protection; set to **false** to disable slow POST protection.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text Export representation\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the slow POST protection settings being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecThreatIntel:AppSecThreatIntel": {
            "description": "**Scopes**: Security policy\n\nEnables or disables threat intelligence for a security policy. This resource is only available to organizations running the Adaptive Security Engine (ASE) beta Please contact your Akamai representative for more information.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rules/threat-intel](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putthreatintelligence)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst threatIntel = new akamai.AppSecThreatIntel(\"threatIntel\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    threatIntel: \"on\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nthreat_intel = akamai.AppSecThreatIntel(\"threatIntel\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    threat_intel=\"on\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var threatIntel = new Akamai.AppSecThreatIntel(\"threatIntel\", new Akamai.AppSecThreatIntelArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            ThreatIntel = \"on\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecThreatIntel(ctx, \"threatIntel\", \u0026akamai.AppSecThreatIntelArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tThreatIntel:      pulumi.String(\"on\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the threat intelligence protection settings being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the threat intelligence protection settings being modified.\n"
                },
                "threatIntel": {
                    "type": "string",
                    "description": ". Set to `on` to enable threat intelligence protection; set to **off** to disable threat intelligence protection.\n"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "threatIntel"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the threat intelligence protection settings being modified.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the threat intelligence protection settings being modified.\n"
                },
                "threatIntel": {
                    "type": "string",
                    "description": ". Set to `on` to enable threat intelligence protection; set to **off** to disable threat intelligence protection.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId",
                "threatIntel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecThreatIntel resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the threat intelligence protection settings being modified.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the threat intelligence protection settings being modified.\n"
                    },
                    "threatIntel": {
                        "type": "string",
                        "description": ". Set to `on` to enable threat intelligence protection; set to **off** to disable threat intelligence protection.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecVersionNodes:AppSecVersionNodes": {
            "description": "**Scopes**: Security configuration\n\nUpdates the version notes for a security configuration.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/version-notes](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putversionnotes)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst versionNotesAppSecVersionNodes = new akamai.AppSecVersionNodes(\"versionNotesAppSecVersionNodes\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    versionNotes: \"This version enables reputation profiles.\",\n});\nexport const versionNotes = versionNotesAppSecVersionNodes.outputText;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nversion_notes_app_sec_version_nodes = akamai.AppSecVersionNodes(\"versionNotesAppSecVersionNodes\",\n    config_id=configuration.config_id,\n    version_notes=\"This version enables reputation profiles.\")\npulumi.export(\"versionNotes\", version_notes_app_sec_version_nodes.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var versionNotesAppSecVersionNodes = new Akamai.AppSecVersionNodes(\"versionNotesAppSecVersionNodes\", new Akamai.AppSecVersionNodesArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            VersionNotes = \"This version enables reputation profiles.\",\n        });\n        this.VersionNotes = versionNotesAppSecVersionNodes.OutputText;\n    }\n\n    [Output(\"versionNotes\")]\n    public Output\u003cstring\u003e VersionNotes { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tversionNotesAppSecVersionNodes, err := akamai.NewAppSecVersionNodes(ctx, \"versionNotesAppSecVersionNodes\", \u0026akamai.AppSecVersionNodesArgs{\n\t\t\tConfigId:     pulumi.Int(configuration.ConfigId),\n\t\t\tVersionNotes: pulumi.String(\"This version enables reputation profiles.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"versionNotes\", versionNotesAppSecVersionNodes.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the updated version notes.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration whose version notes are being modified.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text Export representation\n"
                },
                "versionNotes": {
                    "type": "string",
                    "description": ". Brief description of the security configuration version.\n"
                }
            },
            "required": [
                "configId",
                "outputText",
                "versionNotes"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration whose version notes are being modified.\n"
                },
                "versionNotes": {
                    "type": "string",
                    "description": ". Brief description of the security configuration version.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "versionNotes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecVersionNodes resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration whose version notes are being modified.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text Export representation\n"
                    },
                    "versionNotes": {
                        "type": "string",
                        "description": ". Brief description of the security configuration version.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecWafMode:AppSecWafMode": {
            "description": "**Scopes**: Security policy\n\nModifies the way your Kona Rule Set rules are updated.\nUse **KRS** mode to update the rule sets manually or **AAG** to have those rule sets automatically updated.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/mode](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putmode)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst wafMode = new akamai.AppSecWafMode(\"wafMode\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    mode: \"KRS\",\n});\nexport const wafModeMode = wafMode.mode;\nexport const wafModeCurrentRuleset = wafMode.currentRuleset;\nexport const wafModeEvalStatus = wafMode.evalStatus;\nexport const wafModeEvalRuleset = wafMode.evalRuleset;\nexport const wafModeEvalExpirationDate = wafMode.evalExpirationDate;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nwaf_mode = akamai.AppSecWafMode(\"wafMode\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    mode=\"KRS\")\npulumi.export(\"wafModeMode\", waf_mode.mode)\npulumi.export(\"wafModeCurrentRuleset\", waf_mode.current_ruleset)\npulumi.export(\"wafModeEvalStatus\", waf_mode.eval_status)\npulumi.export(\"wafModeEvalRuleset\", waf_mode.eval_ruleset)\npulumi.export(\"wafModeEvalExpirationDate\", waf_mode.eval_expiration_date)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var wafMode = new Akamai.AppSecWafMode(\"wafMode\", new Akamai.AppSecWafModeArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            Mode = \"KRS\",\n        });\n        this.WafModeMode = wafMode.Mode;\n        this.WafModeCurrentRuleset = wafMode.CurrentRuleset;\n        this.WafModeEvalStatus = wafMode.EvalStatus;\n        this.WafModeEvalRuleset = wafMode.EvalRuleset;\n        this.WafModeEvalExpirationDate = wafMode.EvalExpirationDate;\n    }\n\n    [Output(\"wafModeMode\")]\n    public Output\u003cstring\u003e WafModeMode { get; set; }\n    [Output(\"wafModeCurrentRuleset\")]\n    public Output\u003cstring\u003e WafModeCurrentRuleset { get; set; }\n    [Output(\"wafModeEvalStatus\")]\n    public Output\u003cstring\u003e WafModeEvalStatus { get; set; }\n    [Output(\"wafModeEvalRuleset\")]\n    public Output\u003cstring\u003e WafModeEvalRuleset { get; set; }\n    [Output(\"wafModeEvalExpirationDate\")]\n    public Output\u003cstring\u003e WafModeEvalExpirationDate { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\twafMode, err := akamai.NewAppSecWafMode(ctx, \"wafMode\", \u0026akamai.AppSecWafModeArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tMode:             pulumi.String(\"KRS\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"wafModeMode\", wafMode.Mode)\n\t\tctx.Export(\"wafModeCurrentRuleset\", wafMode.CurrentRuleset)\n\t\tctx.Export(\"wafModeEvalStatus\", wafMode.EvalStatus)\n\t\tctx.Export(\"wafModeEvalRuleset\", wafMode.EvalRuleset)\n\t\tctx.Export(\"wafModeEvalExpirationDate\", wafMode.EvalExpirationDate)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `current_ruleset` – Versioning information for the current Kona Rule Set.\n- `eval_ruleset`. Versioning information for the Kona Rule Set being evaluated (if applicable) .\n- `eval_status`. Returns **enabled** if an evaluation is currently in progress; otherwise returns **disabled**.\n- `eval_expiration_date`. Date on which the evaluation period ends (if applicable).\n- `output_text`. Tabular report showing the current rule set, WAF mode and evaluation status.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the WAF mode settings being modified.\n"
                },
                "currentRuleset": {
                    "type": "string"
                },
                "evalExpirationDate": {
                    "type": "string"
                },
                "evalRuleset": {
                    "type": "string"
                },
                "evalStatus": {
                    "type": "string"
                },
                "mode": {
                    "type": "string",
                    "description": ". Specifies how Kona Rule Set rules are upgraded. Allowed values are:\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text Export representation\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the WAF mode settings being modified.\n"
                }
            },
            "required": [
                "configId",
                "currentRuleset",
                "evalExpirationDate",
                "evalRuleset",
                "evalStatus",
                "mode",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the WAF mode settings being modified.\n"
                },
                "mode": {
                    "type": "string",
                    "description": ". Specifies how Kona Rule Set rules are upgraded. Allowed values are:\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the WAF mode settings being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "mode",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecWafMode resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the WAF mode settings being modified.\n"
                    },
                    "currentRuleset": {
                        "type": "string"
                    },
                    "evalExpirationDate": {
                        "type": "string"
                    },
                    "evalRuleset": {
                        "type": "string"
                    },
                    "evalStatus": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string",
                        "description": ". Specifies how Kona Rule Set rules are upgraded. Allowed values are:\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text Export representation\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the WAF mode settings being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecWafProtection:AppSecWafProtection": {
            "description": "**Scopes**: Security policy\n\nEnables or disables Web Application Firewall (WAF) protection for a security policy.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/protections](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putprotections)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst protection = new akamai.AppSecWafProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"gms1_134637\",\n    enabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nprotection = akamai.AppSecWafProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    enabled=True)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var protection = new Akamai.AppSecWafProtection(\"protection\", new Akamai.AppSecWafProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"gms1_134637\",\n            Enabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecWafProtection(ctx, \"protection\", \u0026akamai.AppSecWafProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"gms1_134637\"),\n\t\t\tEnabled:          pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the current protection settings.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the WAF protection settings being modified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable WAF protection; set to **false** to disable WAF protection.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "Text Export representation\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the WAF protection settings being modified.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the WAF protection settings being modified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": ". Set to **true** to enable WAF protection; set to **false** to disable WAF protection.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy associated with the WAF protection settings being modified.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecWafProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the WAF protection settings being modified.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": ". Set to **true** to enable WAF protection; set to **false** to disable WAF protection.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "Text Export representation\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the WAF protection settings being modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecWapSelectedHostnames:AppSecWapSelectedHostnames": {
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the hostnames being protected or evaluated.\n"
                },
                "evaluatedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "protectedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy responsible for protecting or evaluating the specified hosts.\n"
                }
            },
            "required": [
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": ". Unique identifier of the security configuration associated with the hostnames being protected or evaluated.\n"
                },
                "evaluatedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "protectedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": ". Unique identifier of the security policy responsible for protecting or evaluating the specified hosts.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecWapSelectedHostnames resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the hostnames being protected or evaluated.\n"
                    },
                    "evaluatedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "protectedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy responsible for protecting or evaluating the specified hosts.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cpCode:CpCode": {
            "description": "The `akamai.CpCode` resource lets you create or reuse content provider (CP) codes.  CP codes track web traffic handled by Akamai servers. Akamai gives you a CP code when you purchase a product. You need this code when you activate associated properties.\n\nYou can create additional CP codes to support more detailed billing and reporting functions.\n\nBy default, the Akamai Provider uses your existing CP code instead of creating a new one.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst cpCode = new akamai.CpCode(\"cpCode\", {\n    contractId: akamai_contract.contract.id,\n    groupId: akamai_group.group.id,\n    productId: \"prd_Object_Delivery\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ncp_code = akamai.CpCode(\"cpCode\",\n    contract_id=akamai_contract[\"contract\"][\"id\"],\n    group_id=akamai_group[\"group\"][\"id\"],\n    product_id=\"prd_Object_Delivery\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var cpCode = new Akamai.CpCode(\"cpCode\", new Akamai.CpCodeArgs\n        {\n            ContractId = akamai_contract.Contract.Id,\n            GroupId = akamai_group.Group.Id,\n            ProductId = \"prd_Object_Delivery\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewCpCode(ctx, \"cpCode\", \u0026akamai.CpCodeArgs{\n\t\t\tContractId: pulumi.Any(akamai_contract.Contract.Id),\n\t\t\tGroupId:    pulumi.Any(akamai_group.Group.Id),\n\t\t\tProductId:  pulumi.String(\"prd_Object_Delivery\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\nHere's a real-life example that includes other data sources as dependencies:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst groupName = \"example group name\";\nconst cpcodeName = \"My CP Code\";\nconst exampleContract = akamai.getContract({\n    groupName: groupName,\n});\nconst exampleGroup = exampleContract.then(exampleContract =\u003e akamai.getGroup({\n    name: groupName,\n    contractId: exampleContract.id,\n}));\nconst exampleCp = new akamai.CpCode(\"exampleCp\", {\n    groupId: exampleGroup.then(exampleGroup =\u003e exampleGroup.id),\n    contractId: exampleContract.then(exampleContract =\u003e exampleContract.id),\n    productId: \"prd_Object_Delivery\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ngroup_name = \"example group name\"\ncpcode_name = \"My CP Code\"\nexample_contract = akamai.get_contract(group_name=group_name)\nexample_group = akamai.get_group(name=group_name,\n    contract_id=example_contract.id)\nexample_cp = akamai.CpCode(\"exampleCp\",\n    group_id=example_group.id,\n    contract_id=example_contract.id,\n    product_id=\"prd_Object_Delivery\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var groupName = \"example group name\";\n        var cpcodeName = \"My CP Code\";\n        var exampleContract = Output.Create(Akamai.GetContract.InvokeAsync(new Akamai.GetContractArgs\n        {\n            GroupName = groupName,\n        }));\n        var exampleGroup = exampleContract.Apply(exampleContract =\u003e Output.Create(Akamai.GetGroup.InvokeAsync(new Akamai.GetGroupArgs\n        {\n            Name = groupName,\n            ContractId = exampleContract.Id,\n        })));\n        var exampleCp = new Akamai.CpCode(\"exampleCp\", new Akamai.CpCodeArgs\n        {\n            GroupId = exampleGroup.Apply(exampleGroup =\u003e exampleGroup.Id),\n            ContractId = exampleContract.Apply(exampleContract =\u003e exampleContract.Id),\n            ProductId = \"prd_Object_Delivery\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tgroupName := \"example group name\"\n\t\t_ := \"My CP Code\"\n\t\topt0 := groupName\n\t\texampleContract, err := akamai.GetContract(ctx, \u0026GetContractArgs{\n\t\t\tGroupName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := groupName\n\t\topt2 := exampleContract.Id\n\t\texampleGroup, err := akamai.GetGroup(ctx, \u0026GetGroupArgs{\n\t\t\tName:       \u0026opt1,\n\t\t\tContractId: \u0026opt2,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewCpCode(ctx, \"exampleCp\", \u0026akamai.CpCodeArgs{\n\t\t\tGroupId:    pulumi.String(exampleGroup.Id),\n\t\t\tContractId: pulumi.String(exampleContract.Id),\n\t\t\tProductId:  pulumi.String(\"prd_Object_Delivery\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThe following arguments are supported:\n\n* `name` - (Required) A descriptive label for the CP code. If you're creating a new CP code, the name can't include commas, underscores, quotes, or any of these special characters: ^ # %.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `product_id` - (Required) A product's unique ID, including the `prd_` prefix.\n\n### Deprecated arguments\n\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `group` - (Deprecated) Replaced by `group_id`. Maintained for legacy purposes.\n* `product` - (Deprecated) Replaced by `product_id`. Maintained for legacy purposes.\n\n## Attributes reference\n\n* `id` - The ID of the CP code.\n\n\n## Import\n\nBasic Usagehcl resource \"akamai_cp_code\" \"example\" {\n\n\n\n # (resource arguments)\n\n } You can import your Akamai CP codes using a comma-delimited string of the CP code, contract, and group IDs. You have to enter the IDs in this order`cpcode_id,contract_id,group_id` For example\n\n```sh\n $ pulumi import akamai:index/cpCode:CpCode example cpc_123,ctr_1-AB123,grp_123\n```\n\n ",
            "properties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "name",
                "product",
                "productId"
            ],
            "inputProperties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpCode resources.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/cpCode:CpCode"
                }
            ]
        },
        "akamai:index/cpsDvEnrollment:CpsDvEnrollment": {
            "description": "Use the `akamai.CpsDvEnrollment` resource to create an enrollment with all the information about your certificate life cycle, from the time you request it, through removal or automatic renewal. You can treat an enrollment as a core container for all the operations you perform within CPS.\n\nYou can use this resource with `akamai.DnsRecord` or other third-party DNS provider to create DNS records, and `akamai.CpsDvValidation` to complete the certificate validation.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = new akamai.CpsDvEnrollment(\"example\", {\n    contractId: \"ctr_1-AB123\",\n    acknowledgePreVerificationWarnings: true,\n    commonName: \"cps-test.example.net\",\n    sans: [\n        \"san1.cps-test.example.net\",\n        \"san2.cps-test.example.net\",\n    ],\n    secureNetwork: \"enhanced-tls\",\n    sniOnly: true,\n    adminContact: {\n        firstName: \"x1\",\n        lastName: \"x2\",\n        phone: \"123123123\",\n        email: \"x1x2@example.net\",\n        addressLineOne: \"150 Broadway\",\n        city: \"Cambridge\",\n        countryCode: \"US\",\n        organization: \"Akamai\",\n        postalCode: \"02142\",\n        region: \"MA\",\n        title: \"Administrator\",\n    },\n    techContact: {\n        firstName: \"x3\",\n        lastName: \"x4\",\n        phone: \"123123123\",\n        email: \"x3x4@akamai.com\",\n        addressLineOne: \"150 Broadway\",\n        city: \"Cambridge\",\n        countryCode: \"US\",\n        organization: \"Akamai\",\n        postalCode: \"02142\",\n        region: \"MA\",\n        title: \"Administrator\",\n    },\n    certificateChainType: \"default\",\n    csr: {\n        countryCode: \"US\",\n        city: \"cambridge\",\n        organization: \"Akamai\",\n        organizationalUnit: \"Dev\",\n        state: \"MA\",\n    },\n    enableMultiStackedCertificates: false,\n    networkConfiguration: {\n        disallowedTlsVersions: [\n            \"TLSv1\",\n            \"TLSv1_1\",\n        ],\n        cloneDnsNames: false,\n        geography: \"core\",\n        ocspStapling: \"on\",\n        preferredCiphers: \"ak-akamai-2020q1\",\n        mustHaveCiphers: \"ak-akamai-2020q1\",\n        quicEnabled: false,\n    },\n    signatureAlgorithm: \"SHA-256\",\n    organization: {\n        name: \"Akamai\",\n        phone: \"123123123\",\n        addressLineOne: \"150 Broadway\",\n        city: \"Cambridge\",\n        countryCode: \"US\",\n        postalCode: \"02142\",\n        region: \"MA\",\n    },\n});\nexport const dnsChallenges = example.dnsChallenges;\nexport const httpChallenges = example.httpChallenges;\nexport const enrollmentId = example.id;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.CpsDvEnrollment(\"example\",\n    contract_id=\"ctr_1-AB123\",\n    acknowledge_pre_verification_warnings=True,\n    common_name=\"cps-test.example.net\",\n    sans=[\n        \"san1.cps-test.example.net\",\n        \"san2.cps-test.example.net\",\n    ],\n    secure_network=\"enhanced-tls\",\n    sni_only=True,\n    admin_contact=akamai.CpsDvEnrollmentAdminContactArgs(\n        first_name=\"x1\",\n        last_name=\"x2\",\n        phone=\"123123123\",\n        email=\"x1x2@example.net\",\n        address_line_one=\"150 Broadway\",\n        city=\"Cambridge\",\n        country_code=\"US\",\n        organization=\"Akamai\",\n        postal_code=\"02142\",\n        region=\"MA\",\n        title=\"Administrator\",\n    ),\n    tech_contact=akamai.CpsDvEnrollmentTechContactArgs(\n        first_name=\"x3\",\n        last_name=\"x4\",\n        phone=\"123123123\",\n        email=\"x3x4@akamai.com\",\n        address_line_one=\"150 Broadway\",\n        city=\"Cambridge\",\n        country_code=\"US\",\n        organization=\"Akamai\",\n        postal_code=\"02142\",\n        region=\"MA\",\n        title=\"Administrator\",\n    ),\n    certificate_chain_type=\"default\",\n    csr=akamai.CpsDvEnrollmentCsrArgs(\n        country_code=\"US\",\n        city=\"cambridge\",\n        organization=\"Akamai\",\n        organizational_unit=\"Dev\",\n        state=\"MA\",\n    ),\n    enable_multi_stacked_certificates=False,\n    network_configuration=akamai.CpsDvEnrollmentNetworkConfigurationArgs(\n        disallowed_tls_versions=[\n            \"TLSv1\",\n            \"TLSv1_1\",\n        ],\n        clone_dns_names=False,\n        geography=\"core\",\n        ocsp_stapling=\"on\",\n        preferred_ciphers=\"ak-akamai-2020q1\",\n        must_have_ciphers=\"ak-akamai-2020q1\",\n        quic_enabled=False,\n    ),\n    signature_algorithm=\"SHA-256\",\n    organization=akamai.CpsDvEnrollmentOrganizationArgs(\n        name=\"Akamai\",\n        phone=\"123123123\",\n        address_line_one=\"150 Broadway\",\n        city=\"Cambridge\",\n        country_code=\"US\",\n        postal_code=\"02142\",\n        region=\"MA\",\n    ))\npulumi.export(\"dnsChallenges\", example.dns_challenges)\npulumi.export(\"httpChallenges\", example.http_challenges)\npulumi.export(\"enrollmentId\", example.id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Akamai.CpsDvEnrollment(\"example\", new Akamai.CpsDvEnrollmentArgs\n        {\n            ContractId = \"ctr_1-AB123\",\n            AcknowledgePreVerificationWarnings = true,\n            CommonName = \"cps-test.example.net\",\n            Sans = \n            {\n                \"san1.cps-test.example.net\",\n                \"san2.cps-test.example.net\",\n            },\n            SecureNetwork = \"enhanced-tls\",\n            SniOnly = true,\n            AdminContact = new Akamai.Inputs.CpsDvEnrollmentAdminContactArgs\n            {\n                FirstName = \"x1\",\n                LastName = \"x2\",\n                Phone = \"123123123\",\n                Email = \"x1x2@example.net\",\n                AddressLineOne = \"150 Broadway\",\n                City = \"Cambridge\",\n                CountryCode = \"US\",\n                Organization = \"Akamai\",\n                PostalCode = \"02142\",\n                Region = \"MA\",\n                Title = \"Administrator\",\n            },\n            TechContact = new Akamai.Inputs.CpsDvEnrollmentTechContactArgs\n            {\n                FirstName = \"x3\",\n                LastName = \"x4\",\n                Phone = \"123123123\",\n                Email = \"x3x4@akamai.com\",\n                AddressLineOne = \"150 Broadway\",\n                City = \"Cambridge\",\n                CountryCode = \"US\",\n                Organization = \"Akamai\",\n                PostalCode = \"02142\",\n                Region = \"MA\",\n                Title = \"Administrator\",\n            },\n            CertificateChainType = \"default\",\n            Csr = new Akamai.Inputs.CpsDvEnrollmentCsrArgs\n            {\n                CountryCode = \"US\",\n                City = \"cambridge\",\n                Organization = \"Akamai\",\n                OrganizationalUnit = \"Dev\",\n                State = \"MA\",\n            },\n            EnableMultiStackedCertificates = false,\n            NetworkConfiguration = new Akamai.Inputs.CpsDvEnrollmentNetworkConfigurationArgs\n            {\n                DisallowedTlsVersions = \n                {\n                    \"TLSv1\",\n                    \"TLSv1_1\",\n                },\n                CloneDnsNames = false,\n                Geography = \"core\",\n                OcspStapling = \"on\",\n                PreferredCiphers = \"ak-akamai-2020q1\",\n                MustHaveCiphers = \"ak-akamai-2020q1\",\n                QuicEnabled = false,\n            },\n            SignatureAlgorithm = \"SHA-256\",\n            Organization = new Akamai.Inputs.CpsDvEnrollmentOrganizationArgs\n            {\n                Name = \"Akamai\",\n                Phone = \"123123123\",\n                AddressLineOne = \"150 Broadway\",\n                City = \"Cambridge\",\n                CountryCode = \"US\",\n                PostalCode = \"02142\",\n                Region = \"MA\",\n            },\n        });\n        this.DnsChallenges = example.DnsChallenges;\n        this.HttpChallenges = example.HttpChallenges;\n        this.EnrollmentId = example.Id;\n    }\n\n    [Output(\"dnsChallenges\")]\n    public Output\u003cstring\u003e DnsChallenges { get; set; }\n    [Output(\"httpChallenges\")]\n    public Output\u003cstring\u003e HttpChallenges { get; set; }\n    [Output(\"enrollmentId\")]\n    public Output\u003cstring\u003e EnrollmentId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := akamai.NewCpsDvEnrollment(ctx, \"example\", \u0026akamai.CpsDvEnrollmentArgs{\n\t\t\tContractId:                         pulumi.String(\"ctr_1-AB123\"),\n\t\t\tAcknowledgePreVerificationWarnings: pulumi.Bool(true),\n\t\t\tCommonName:                         pulumi.String(\"cps-test.example.net\"),\n\t\t\tSans: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"san1.cps-test.example.net\"),\n\t\t\t\tpulumi.String(\"san2.cps-test.example.net\"),\n\t\t\t},\n\t\t\tSecureNetwork: pulumi.String(\"enhanced-tls\"),\n\t\t\tSniOnly:       pulumi.Bool(true),\n\t\t\tAdminContact: \u0026CpsDvEnrollmentAdminContactArgs{\n\t\t\t\tFirstName:      pulumi.String(\"x1\"),\n\t\t\t\tLastName:       pulumi.String(\"x2\"),\n\t\t\t\tPhone:          pulumi.String(\"123123123\"),\n\t\t\t\tEmail:          pulumi.String(\"x1x2@example.net\"),\n\t\t\t\tAddressLineOne: pulumi.String(\"150 Broadway\"),\n\t\t\t\tCity:           pulumi.String(\"Cambridge\"),\n\t\t\t\tCountryCode:    pulumi.String(\"US\"),\n\t\t\t\tOrganization:   pulumi.String(\"Akamai\"),\n\t\t\t\tPostalCode:     pulumi.String(\"02142\"),\n\t\t\t\tRegion:         pulumi.String(\"MA\"),\n\t\t\t\tTitle:          pulumi.String(\"Administrator\"),\n\t\t\t},\n\t\t\tTechContact: \u0026CpsDvEnrollmentTechContactArgs{\n\t\t\t\tFirstName:      pulumi.String(\"x3\"),\n\t\t\t\tLastName:       pulumi.String(\"x4\"),\n\t\t\t\tPhone:          pulumi.String(\"123123123\"),\n\t\t\t\tEmail:          pulumi.String(\"x3x4@akamai.com\"),\n\t\t\t\tAddressLineOne: pulumi.String(\"150 Broadway\"),\n\t\t\t\tCity:           pulumi.String(\"Cambridge\"),\n\t\t\t\tCountryCode:    pulumi.String(\"US\"),\n\t\t\t\tOrganization:   pulumi.String(\"Akamai\"),\n\t\t\t\tPostalCode:     pulumi.String(\"02142\"),\n\t\t\t\tRegion:         pulumi.String(\"MA\"),\n\t\t\t\tTitle:          pulumi.String(\"Administrator\"),\n\t\t\t},\n\t\t\tCertificateChainType: pulumi.String(\"default\"),\n\t\t\tCsr: \u0026CpsDvEnrollmentCsrArgs{\n\t\t\t\tCountryCode:        pulumi.String(\"US\"),\n\t\t\t\tCity:               pulumi.String(\"cambridge\"),\n\t\t\t\tOrganization:       pulumi.String(\"Akamai\"),\n\t\t\t\tOrganizationalUnit: pulumi.String(\"Dev\"),\n\t\t\t\tState:              pulumi.String(\"MA\"),\n\t\t\t},\n\t\t\tEnableMultiStackedCertificates: pulumi.Bool(false),\n\t\t\tNetworkConfiguration: \u0026CpsDvEnrollmentNetworkConfigurationArgs{\n\t\t\t\tDisallowedTlsVersions: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"TLSv1\"),\n\t\t\t\t\tpulumi.String(\"TLSv1_1\"),\n\t\t\t\t},\n\t\t\t\tCloneDnsNames:    pulumi.Bool(false),\n\t\t\t\tGeography:        pulumi.String(\"core\"),\n\t\t\t\tOcspStapling:     pulumi.String(\"on\"),\n\t\t\t\tPreferredCiphers: pulumi.String(\"ak-akamai-2020q1\"),\n\t\t\t\tMustHaveCiphers:  pulumi.String(\"ak-akamai-2020q1\"),\n\t\t\t\tQuicEnabled:      pulumi.Bool(false),\n\t\t\t},\n\t\t\tSignatureAlgorithm: pulumi.String(\"SHA-256\"),\n\t\t\tOrganization: \u0026CpsDvEnrollmentOrganizationArgs{\n\t\t\t\tName:           pulumi.String(\"Akamai\"),\n\t\t\t\tPhone:          pulumi.String(\"123123123\"),\n\t\t\t\tAddressLineOne: pulumi.String(\"150 Broadway\"),\n\t\t\t\tCity:           pulumi.String(\"Cambridge\"),\n\t\t\t\tCountryCode:    pulumi.String(\"US\"),\n\t\t\t\tPostalCode:     pulumi.String(\"02142\"),\n\t\t\t\tRegion:         pulumi.String(\"MA\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"dnsChallenges\", example.DnsChallenges)\n\t\tctx.Export(\"httpChallenges\", example.HttpChallenges)\n\t\tctx.Export(\"enrollmentId\", example.ID())\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThe following arguments are supported:\n\n* `contract_id` - (Required) A contract's ID, optionally with the `ctr_` prefix.\n* `common_name` - (Required) The fully qualified domain name (FQDN) for which you plan to use your certificate. The domain name you specify here must be owned or have legal rights to use the domain by the company you specify as `organization`. The company that owns the domain name must be a legally incorporated entity and be active and in good standing.\n* `sans` - (Optional) Additional common names to create a Subject Alternative Names (SAN) list.\n* `secure_network` - (Required) The type of deployment network you want to use. `standard-tls` deploys your certificate to Akamai's standard secure network, but it isn't PCI compliant. `enhanced-tls` deploys your certificate to Akamai's more secure network with PCI compliance capability.\n* `sni_only` - (Required) Whether you want to enable SNI-only extension for the enrollment. Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present multiple certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid multiple certificates with overlapping SAN names when using SNI-only. You can't change this setting once an enrollment is created.\n* `acknowledge_pre_verification_warnings` - (Optional) Whether you want to automatically acknowledge the validation warnings of the current job state and proceed with the execution of a change.\n* `admin_contact` - (Required) Contact information for the certificate administrator at your company.\n\n    Requires these additional arguments:\n\n      * `first_name` - (Required) The first name of the certificate administrator at your company.\n      * `last_name` - (Required) The last name of the certificate administrator at your company.\n      * `title` - (Optional) The title of the certificate administrator at your company.\n      * `organization` - (Required) The name of your organization.\n      * `email` - (Required) The email address of the administrator who you want to use as a contact at your company.\n      * `phone` - (Required) The phone number of your organization.\n      * `address_line_one` - (Required) The address of your organization.\n      * `address_line_two` - (Optional) The address of your organization.\n      * `city` - (Required) The city where your organization resides.\n      * `region` - (Required) The region of your organization, typically a state or province.\n      * `postal_code` - (Required) The postal code of your organization.\n      * `country_code` - (Required) The code for the counrty where your organization resides.\n* `certificate_chain_type` - (Optional) Certificate trust chain type.\n* `csr` - (Required) \tWhen you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.\n\n    Requires these additional arguments:\n\n      * `country_code` - (Required) The country code for the country where your organization is located.\n      * `city` - (Required) The city where your organization resides.\n      * `organization` - (Required The name of your company or organization. Enter the name as it appears in all legal documents and as it appears in the legal entity filing.\n      * `organizational_unit` - (Required) Your organizational unit.\n      * `state` - (Required) \tYour state or province.\n* `enable_multi_stacked_certificates` - (Optional) Whether to enable an ECDSA certificate in addition to an RSA certificate. CPS automatically performs all certificate operations on both certificates, and uses the best certificate for each client connection to your secure properties. If you are pinning the certificates, you need to pin both the RSA and the ECDSA certificate.\n* `network_configuration` - (Required) The network information and TLS Metadata you want CPS to use to push the completed certificate to the network.\n\n    Requires these additional arguments:\n\n      * `client_mutual_authentication` - (Optional) The configuration for client mutual authentication. Specifies the trust chain that is used to verify client certificates and some configuration options.\n\n        Requires these additional arguments:\n\n         * `send_ca_list_to_client` - (Optional) Whether you want to enable the server to send the certificate authority (CA) list to the client.\n         * `ocsp_enabled` - (Optional) Whether you want to enable the Online Certificate Status Protocol (OCSP) stapling for client certificates.\n         * `set_id` - (Optional) The identifier of the set of trust chains, created in the [Trust Chain Manager](https://developer.akamai.com/api/web_performance/trust_chain_manager/v1.html).\n      * `disallowed_tls_versions` - (Optional) The TLS protocol version to disallow. CPS uses the TLS protocols that Akamai currently supports as a best practice.\n      * `clone_dns_names` - (Optional) Whether CPS should direct traffic using all the SANs you listed in the SANs parameter when you created your enrollment.\n      * `geography` - (Required) Lists where you can deploy the certificate. Either `core` to specify worldwide deployment (including China and Russia), `china+core` to specify worldwide deployment and China, or `russia+core` to specify worldwide deployment and Russia. You can only use the setting to include China and Russia if your Akamai contract specifies your ability to do so and you have approval from the Chinese and Russian government.\n      * `must_have_ciphers` - (Optional) The ciphers to include for the enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set. For more information on cipher profiles, see [Akamai community](https://community.akamai.com/customers/s/article/SSL-TLS-Cipher-Profiles-for-Akamai-Secure-CDNrxdxm).\n      * `ocsp_stapling` - (Optional) Whether to use OCSP stapling for the enrollment, either `on`, `off` or `not-set`. OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. This option allows the visitors on your site to query the Online Certificate Status Protocol (OCSP) server at regular intervals to obtain a signed time-stamped OCSP response. This response must be signed by the CA, not the server, therefore ensuring security. Disable OSCP Stapling if you want visitors to your site to contact the CA directly for an OSCP response. OCSP allows you to obtain the revocation status of a certificate.\n      * `preferred_ciphers` - (Optional) Ciphers that you preferably want to include for the enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set. For more information on cipher profiles, see [Akamai community](https://community.akamai.com/customers/s/article/SSL-TLS-Cipher-Profiles-for-Akamai-Secure-CDNrxdxm).\n      * `quic_enabled` - (Optional) Whether to use the QUIC transport layer network protocol.\n* `signature_algorithm` - (Required) The Secure Hash Algorithm (SHA) function, either `SHA-1` or `SHA-256`.\n* `tech_contact` - (Required) The technical contact within Akamai. This is the person you work closest with at Akamai and who can verify the certificate request. The CA calls this contact if there are any issues with the certificate and they can't reach the `admin_contact`.\n\n    Requires these additional arguments:\n\n      * `first_name` - (Required) The first name of the technical contact at Akamai.\n      * `last_name` - (Required) The last name of the technical contact at Akamai.\n      * `title` - (Optional) The title of the technical contact at Akamai.\n      * `organization` - (Required) The name of the organization in Akamai where your technical contact works.\n      * `email` - (Required) The email address of the technical contact at Akamai, accessible at the `akamai.com` domain.\n      * `phone` - (Required) The phone number of the technical contact at Akamai.\n      * `address_line_one` - (Required) The address for the technical contact at Akamai.\n      * `address_line_two` - (Optional) The address for the technical contact at Akamai.\n      * `city` - (Required) The address for the technical contact at Akamai.\n      * `region` - (Required) The region for the technical contact at Akamai.\n      * `postal_code` - (Required) The postal code for the technical contact at Akamai.\n      * `country_code` - (Required) The country code for the technical contact at Akamai.\n* `organization` - (Required) Your organization information.\n\n    Requires these additional arguments:\n\n      * `name` - (Required) The name of your organization.\n      * `phone` - (Required) The phone number of the administrator who you want to use as a contact at your company.\n      * `address_line_one` - (Required) The address of your organization.\n      * `address_line_two` - (Optional) The address of your organization.\n      * `city` - (Required) The city where your organization resides.\n      * `region` - (Required) The region of your organization, typically a state or province.\n      * `postal_code` - (Required) The postal code of your organization.\n      * `country_code` - (Required) The code for the country where your organization resides.\n\n## Attributes reference\n\nThe resource returns these attributes:\n\n* `registration_authority` - (Required) This value populates automatically with the `lets-encrypt` certificate type and is preserved in the `state` file.\n* `certificate_type` - (Required) This value populates automatically with the `san` certificate type and is preserved in the `state` file.\n* `validation_type` - (Required) This value populates automatically with the `dv` validation type and is preserved in the `state` file.\n* `id` - The unique identifier for this enrollment.\n* `dns_challenges` - The validation challenge for the domains listed in the certificate. To successfully perform the validation, only one challenge for each domain must be complete, either `dns_challenges` or `http_challenges`.\n\n    Returns these additional attributes:\n\n      * `domain` - The domain to validate.\n      * `full_path` - The URL where Akamai publishes `response_body` for Let's Encrypt to validate.\n      * `response_body` - The data Let's Encrypt expects to find served at `full_path` URL.\n* `http_challenges` - The validation challenge for the domains listed in the certificate. To successfully perform the validation, only one challenge for each domain must be complete, either `dns_challenges` or `http_challenges`.\n\n    Returns these additional attributes:\n\n      * `domain` - The domain to validate.\n      * `full_path` - The URL where Akamai publishes `response_body` for Let's Encrypt to validate.\n      * `response_body` - The data Let's Encrypt expects to find served at `full_path` URL.\n\n\n## Import\n\nBasic Usagehcl resource \"akamai_cps_dv_enrollment\" \"example\" { # (resource arguments) } You can import your Akamai DV enrollment using a comma-delimited string of the enrollment ID and\n\n contract ID, optionally with the `ctr_` prefix. You have to enter the IDs in this order`enrollment_id,contract_id` For example\n\n```sh\n $ pulumi import akamai:index/cpsDvEnrollment:CpsDvEnrollment example 12345,1-AB123\n```\n\n ",
            "properties": {
                "acknowledgePreVerificationWarnings": {
                    "type": "boolean"
                },
                "adminContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact"
                },
                "certificateChainType": {
                    "type": "string"
                },
                "certificateType": {
                    "type": "string"
                },
                "commonName": {
                    "type": "string"
                },
                "contractId": {
                    "type": "string"
                },
                "csr": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr"
                },
                "dnsChallenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge"
                    }
                },
                "enableMultiStackedCertificates": {
                    "type": "boolean"
                },
                "httpChallenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge"
                    }
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration"
                },
                "organization": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization"
                },
                "registrationAuthority": {
                    "type": "string"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secureNetwork": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "sniOnly": {
                    "type": "boolean"
                },
                "techContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact"
                },
                "validationType": {
                    "type": "string"
                }
            },
            "required": [
                "adminContact",
                "certificateType",
                "commonName",
                "contractId",
                "csr",
                "dnsChallenges",
                "httpChallenges",
                "networkConfiguration",
                "organization",
                "registrationAuthority",
                "secureNetwork",
                "signatureAlgorithm",
                "sniOnly",
                "techContact",
                "validationType"
            ],
            "inputProperties": {
                "acknowledgePreVerificationWarnings": {
                    "type": "boolean"
                },
                "adminContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact"
                },
                "certificateChainType": {
                    "type": "string"
                },
                "commonName": {
                    "type": "string"
                },
                "contractId": {
                    "type": "string"
                },
                "csr": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr"
                },
                "enableMultiStackedCertificates": {
                    "type": "boolean"
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration"
                },
                "organization": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secureNetwork": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "sniOnly": {
                    "type": "boolean"
                },
                "techContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact"
                }
            },
            "requiredInputs": [
                "adminContact",
                "commonName",
                "contractId",
                "csr",
                "networkConfiguration",
                "organization",
                "secureNetwork",
                "signatureAlgorithm",
                "sniOnly",
                "techContact"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpsDvEnrollment resources.\n",
                "properties": {
                    "acknowledgePreVerificationWarnings": {
                        "type": "boolean"
                    },
                    "adminContact": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact"
                    },
                    "certificateChainType": {
                        "type": "string"
                    },
                    "certificateType": {
                        "type": "string"
                    },
                    "commonName": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "csr": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr"
                    },
                    "dnsChallenges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge"
                        }
                    },
                    "enableMultiStackedCertificates": {
                        "type": "boolean"
                    },
                    "httpChallenges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge"
                        }
                    },
                    "networkConfiguration": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration"
                    },
                    "organization": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization"
                    },
                    "registrationAuthority": {
                        "type": "string"
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "secureNetwork": {
                        "type": "string"
                    },
                    "signatureAlgorithm": {
                        "type": "string"
                    },
                    "sniOnly": {
                        "type": "boolean"
                    },
                    "techContact": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact"
                    },
                    "validationType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cpsDvValidation:CpsDvValidation": {
            "description": "Once you complete the Let's Encrypt challenges, optionally use the `akamai.CpsDvValidation` resource to send the acknowledgement to CPS and inform it that tokens are ready for validation. You can also wait for CPS to check for the tokens, which it does on a regular schedule. Next, CPS automatically deploys the certificate on Staging, and eventually on the Production network.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = new akamai.CpsDvValidation(\"example\", {\n    enrollmentId: akamai_cps_dv_enrollment.example.id,\n    sans: akamai_cps_dv_enrollment.example.sans,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.CpsDvValidation(\"example\",\n    enrollment_id=akamai_cps_dv_enrollment[\"example\"][\"id\"],\n    sans=akamai_cps_dv_enrollment[\"example\"][\"sans\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Akamai.CpsDvValidation(\"example\", new Akamai.CpsDvValidationArgs\n        {\n            EnrollmentId = akamai_cps_dv_enrollment.Example.Id,\n            Sans = akamai_cps_dv_enrollment.Example.Sans,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewCpsDvValidation(ctx, \"example\", \u0026akamai.CpsDvValidationArgs{\n\t\t\tEnrollmentId: pulumi.Any(akamai_cps_dv_enrollment.Example.Id),\n\t\t\tSans:         pulumi.Any(akamai_cps_dv_enrollment.Example.Sans),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThe following arguments are supported:\n\n* `enrollment_id` (Required) - Unique identifier for the DV certificate enrollment.\n* `sans` - (Optional) The Subject Alternative Names (SAN) list for tracking changes on related enrollments. Whenever any SAN changes, the Akamai provider recreates this resource and sends another acknowledgement request to CPS.\n\n## Attributes reference\n\n* `status` - The status of certificate validation.\n",
            "properties": {
                "enrollmentId": {
                    "type": "integer"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "enrollmentId",
                "status"
            ],
            "inputProperties": {
                "enrollmentId": {
                    "type": "integer"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "enrollmentId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpsDvValidation resources.\n",
                "properties": {
                    "enrollmentId": {
                        "type": "integer"
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/dnsRecord:DnsRecord": {
            "description": "Use the `akamai.DnsRecord` resource to configure a DNS record that can integrate with your existing DNS infrastructure.\n\n{{% examples %}}\n## Example Usage\n\nHere are examples of an A record and a CNAME record.\n{{% example %}}\n### An A record example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst origin = new akamai.DnsRecord(\"origin\", {\n    active: true,\n    recordtype: \"A\",\n    targets: [\"192.0.2.42\"],\n    ttl: 30,\n    zone: \"origin.org\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\norigin = akamai.DnsRecord(\"origin\",\n    active=True,\n    recordtype=\"A\",\n    targets=[\"192.0.2.42\"],\n    ttl=30,\n    zone=\"origin.org\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var origin = new Akamai.DnsRecord(\"origin\", new Akamai.DnsRecordArgs\n        {\n            Active = true,\n            Recordtype = \"A\",\n            Targets = \n            {\n                \"192.0.2.42\",\n            },\n            Ttl = 30,\n            Zone = \"origin.org\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewDnsRecord(ctx, \"origin\", \u0026akamai.DnsRecordArgs{\n\t\t\tActive:     pulumi.Bool(true),\n\t\t\tRecordtype: pulumi.String(\"A\"),\n\t\t\tTargets: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"192.0.2.42\"),\n\t\t\t},\n\t\t\tTtl:  pulumi.Int(30),\n\t\t\tZone: pulumi.String(\"origin.org\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% example %}}\n### CNAME Record Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst www = new akamai.DnsRecord(\"www\", {\n    active: true,\n    recordtype: \"CNAME\",\n    targets: \"origin.example.org.edgesuite.net\",\n    ttl: 600,\n    zone: \"example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nwww = akamai.DnsRecord(\"www\",\n    active=True,\n    recordtype=\"CNAME\",\n    targets=\"origin.example.org.edgesuite.net\",\n    ttl=600,\n    zone=\"example.com\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var www = new Akamai.DnsRecord(\"www\", new Akamai.DnsRecordArgs\n        {\n            Active = true,\n            Recordtype = \"CNAME\",\n            Targets = \"origin.example.org.edgesuite.net\",\n            Ttl = 600,\n            Zone = \"example.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewDnsRecord(ctx, \"www\", \u0026akamai.DnsRecordArgs{\n\t\t\tActive:     pulumi.Bool(true),\n\t\t\tRecordtype: pulumi.String(\"CNAME\"),\n\t\t\tTargets:    pulumi.StringArray(\"origin.example.org.edgesuite.net\"),\n\t\t\tTtl:        pulumi.Int(600),\n\t\t\tZone:       pulumi.String(\"example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference [argument-reference]\n\nThis resource supports these arguments for all record types:\n\n* `name` - (Required) The DNS record name. This is the node this DNS record is associated with. Also known as an owner name. \n* `zone` - (Required) The domain zone, including any nested subdomains.  \n* `recordType` - (Required) The DNS record type.  \n* `ttl` - (Required) The time to live (TTL) is a 32-bit signed integer for the time the resource record is cached. \u003cbr /\u003e A value of `0` means that the resource record is not cached. It's only used for the transaction in progress and may be useful for extremely volatile data.  \n\n## Additional arguments by record type\n\nThis section lists additional required and optional arguments for specific record types.\n\n\n### A record\n\nAn A record requires this argument:\n\n* `target` - One or more IPv4 addresses, for example, 192.0.2.0.\n\n### AAAA record\n\nAn AAAA record requires this argument:\n\n* `target` - One or more IPv6 addresses, for example, 2001:0db8::ff00:0042:8329.\n\n### AFSDB record\n\nAn AFSDB record requires these arguments:\n\n* `target` - The domain name of the host having a server for the cell named by the owner name of the resource record.\n* `subtype` - An integer between `0` and `65535` that indicates the type of service provided by the host.\n\n### AKAMAICDN record\n\nAn AKAMAICDN record requires this argument:\n\n* `target` - A DNS name representing the selected edge hostname and domain.\n\n### AKAMAITLC record\n\nNo additional arguments are needed for AKAMAITLC records. This resource returns these computed attributes for this record type:\n\n* `dns_name` - A valid DNS name.\n* `answer_type` - The answer type.\n\n### CAA record\n\nA certificate authority authorization (CAA) record requires this argument:\n\n* `target` - One or more certificate authority authorizations. Each authorization contains three attributes: flags, property tag, and property value.\n\nExample:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n### CERT record\n\nA CERT record requires these arguments:\n\n* `type_value` - A numeric certificate type value.\n* `type_mnemonic` - A mnemonic certificate type value.\n* `keytag` - A value computed for the key embedded in the certificate.\n* `algorithm` - The cryptographic algorithm used to create the signature.\n* `certificate` - Certificate data.\n\n\u003e **Note:** When entering the certificate type, you can enter `type_value`, `type_mnemonic`, or  both arguments. If you use both, `type_mnemonic` takes precedence.\n\n### CNAME record\n\nA CNAME record requires this argument:\n\n* `target `- A domain name that specifies the canonical or primary name for the owner. The owner name is an alias.\n\n### DNSKEY record\n\nA DNSKEY record requires these arguments:\n\n* `flags`\n* `protocol` - Set to `3`. If the value isn't `3`, the DNSKEY resource record is treated as invalid during signature verification.\n* `algorithm` - The public key's cryptographic algorithm. This algorithm determines the format of the public key field.\n* `key` - A Base64 encoded value representing the public key. The format used depends on the `algorithm`.\n\n### DS record\n\nA DS record requires these arguments:\n\n* `keytag` - The key tag of the DNSKEY record that the DS record refers to, in network byte order.\n* `algorithm` - The algorithm number of the DNSKEY resource record referred to by the DS record.\n* `digest_type` - Identifies the algorithm used to construct the digest.\n* `digest` - A base 16 encoded DS record includes a digest of the DNSKEY record it refers to. The digest is conifgured the canonical form of the DNSKEY record's fully qualified owner name with the DNSKEY RDATA, and then applying the digest algorithm.\n\n### HINFO record\n\nA HINFO record requires these arguments:\n\n* `hardware` - The type of hardware the host uses. A machine name or CPU type may be up to 40 characters long and include uppercase letters, digits, hyphens, and slashes. The entry needs to start and to end with an uppercase letter.\n* `software` - The type of software the host uses. A system name may be up to 40 characters long and include uppercase letters, digits, hyphens, and slashes. The entry needs to start with an uppercase letter and end with an uppercase letter or a digit.\n\n### HTTPS Record\n\nThe following fields are required:\n\n* `svc_priority` - Service priority associated with endpoint. Value mist be between 0 and 65535. A piority of 0 enables alias mode. \n* `svc_params` - Space separated list of endpoint parameters. Not allowed if service priority is 0.\n* `target_name` - Domain name of the service endpoint.\n\n### LOC record\n\nA LOC record requires this argument:\n\n* `target` - A geographical location associated with a domain name.\n\n### MX record\n\nAn MX record supports these arguments:\n\n* `target` - (Required) One or more domain names that specify a host willing to act as a mail exchange for the owner name.\n* `priority` - (Optional) The preference value given to this MX record in relation to all other MX records. When a mailer needs to send mail to a certain DNS domain, it first contacts a DNS server for that domain and retrieves all the MX records. It then contacts the mailer with the lowest preference value. This value is ignored if an embedded priority exists in the target.\n* `priority_increment` - (Optional) An auto priority increment when multiple targets are provided with no embedded priority.\n\nSee Working with MX records in the DNS Getting Started Guide for more information.\n\n### NAPTR record\n\nAn NAPTR record requires these arguments:\n\n* `order` - A 16-bit unsigned integer specifying the order in which the NAPTR records need to be processed to ensure the correct ordering of rules. Low numbers are processed before high numbers. Once a NAPTR is found whose rule matches the target, the client shouldn't consider any NAPTRs with a higher value for order (except as noted below for the flagsnapter field).\n* `preference` - A 16-bit unsigned integer that specifies the order in which NAPTR records with equal order values are processed. Low numbers are processed before high numbers.\n* `flagsnaptr` - A character string containing flags that control how fields in the record are rewritten and interpreted. Flags are single alphanumeric characters. \n* `service` - Specifies the services available down this rewrite path.\n* `regexp` - A regular expression string containing a substitution expression. This substitution expression is applied to the original client string in order to construct the next domain name to lookup.\n* `replacement` - Depending on the value of the `flags` attribute, the next NAME to query for NAPTR, SRV, or address records. Enter a fully qualified domain name as the value.\n\n### NS record\n\nAn NS record requires these arguments:\n\n* `target` - One or more domain names that specify authoritative hosts for the specified class and domain.\n\n### NSEC3 record\n\nAn NSEC3 record requires these arguments:\n\n* `algorithm` - The cryptographic hash algorithm used to construct the hash-value.\n* `flags` - Eight one-bit flags you can use to indicate different processing. All undefined flags must be zero.\n* `iterations` - The number of additional times the hash function has been performed.\n* `salt` - The base 16 encoded salt value, which is appended to the original owner name before hashing. Used to defend against pre-calculated dictionary attacks.\n* `next_hashed_owner_name` - Base 32 encoded. The next hashed owner name in hash order. This value is in binary format. Given the ordered set of all hashed owner names, the Next Hashed Owner Name field contains the hash of an owner name that immediately follows the owner name of the given NSEC3 RR.\n* `type_bitmaps` - The resource record set types that exist at the original owner name of the NSEC3 RR.\n\n### NSEC3PARAM record\n\nAn NSEC3PARAM record requires these arguments:\n\n* `algorithm` - The cryptographic hash algorithm used to construct the hash-value.\n* `flags` - Eight one-bit flags that can be used to indicate different processing. All undefined flags must be zero.\n* `iterations` - The number of additional times the hash function has been performed.\n* `salt` - The base 16 encoded salt value, which is appended to the original owner name before hashing in order to defend against pre-calculated dictionary attacks.\n\n### PTR record\n\nA PTR record requires this argument:\n\n* `target` - A domain name that points to some location in the domain name space.\n\n### RP record\n\nAn RP record requires these arguments:\n\n* `mailbox` - A domain name that specifies the mailbox for the responsible person.\n* `txt` - A domain name for which TXT resource records exist.\n\n### RRSIG record\n\nAn RRSIG record requires these arguments:\n\n* `type_covered` - The resource record set type covered by this signature.\n* `algorithm` - Identifies the cryptographic algorithm used to create the signature.\n* `original_ttl` - The TTL of the covered record set as it appears in the authoritative zone.\n* `expiration` - The end point of this signature's validity. The signature can`t be used for authentication past this point in time.\n* `inception` - The start point of this signature's validity. The signature can`t be used for authentication prior to this point in time.\n* `keytag` - The Key Tag field contains the key tag value of the DNSKEY RR that validates this signature, in network byte order.\n* `signer` - The owner of the DNSKEY resource record who validates this signature.\n* `signature` - The base 64 encoded cryptographic signature that covers the RRSIG RDATA and covered record set. Format depends on the TSIG algorithm in use.\n* `labels` - The Labels field specifies the number of labels in the original RRSIG RR owner name. The significance of this field is that a validator uses it to determine whether the answer was synthesized from a wildcard. If so, it can be used to determine what owner name was used in generating the signature.\n\n### SPF record\n\nAn SPF record requires this argument:\n\n* `target` - Indicates which hosts are, and are not, authorized to use a domain name for the “HELO” and “MAIL FROM” identities.\n\n### SRV record\n\nAn SRV record requires these arguments:\n\n* `target` - The domain name of the target host.\n* `priority` - A 16-bit integer that specifies the preference given to this resource record among others at the same owner. Lower values are preferred.\n* `weight` - A server selection mechanism that specifies a relative weight for entries with the same priority. Larger weights are given a proportionately higher probability of being selected. The range of this number is 0–65535, a 16-bit unsigned integer in network byte order. Domain administrators should use Weight 0 when there isn't any server selection to do, to make the RR easier to read for humans. In the presence of records containing weights greater than 0, records with weight 0 should have a very small chance of being selected.\n* `port` - The port on this target of this service. The range of this number is 0–65535, a 16-bit unsigned integer in network byte order.\n\n### SSHFP record\n\nAn SSHFP record requires these arguments:\n\n* `algorithm` - Describes the algorithm of the public key. The following values are assigned: `0` is reserved, `1` is for RSA, `2` is for DSS, and `3` is for ECDSA.\n* `fingerprint_type` - Describes the message-digest algorithm used to calculate the fingerprint of the public key. The following values are assigned: 0 = reserved, 1 = SHA-1, 2 = SHA-256.\n* `fingerprint` - The base 16 encoded fingerprint as calculated over the public key blob. The message-digest algorithm is presumed to produce an opaque octet string output, which is placed as-is in the RDATA fingerprint field.\n\n### SOA record\n\nAn SOA record requires these arguments:\n\n* `name_server` - The domain name of the name server that was the original or primary source of data for this zone.\n* `email_address` - A domain name that specifies the mailbox of this person responsible for this zone.\n* `serial` - The unsigned version number between 0 and 214748364 of the original copy of the zone.\n* `refresh` - A time interval between 0 and 214748364 before the zone should be refreshed.\n* `retry` - A time interval between 0 and 214748364 that should elapse before a failed refresh should be retried.\n* `expiry` - A time value between 0 and 214748364 that specifies the upper limit on the time interval that can elapse before the zone is no longer authoritative.\n* `nxdomain_ttl` - The unsigned minimum TTL between 0 and 214748364 that should be exported with any resource record from this zone.\n\n### SVCB record\n\nAn SVCB record requires these arguments:\n\n* `svc_priority` - Service priority associated with endpoint. Value mist be between 0 and 65535. A piority of 0 enables alias mode.\n* `svc_params` - Space separated list of endpoint parameters. Not allowed if service priority is 0.\n* `target_name` - Domain name of the service endpoint.\n\n### TLSA record\n\nA TLSA record requires these arguments:\n\n* `usage` - Specifies the association used to match the certificate presented in the TLS handshake.\n* `selector` - Specifies the part of the TLS certificate presented by the server that is matched against the association data. \n* `match_type` - Specifies how the certificate association is presented.\n* `certificate` - Specifies the certificate association data to be matched.\n\n### TXT record\n\nA TXT record requires this argument:\n\n* `target` - One or more character strings. TXT resource records hold descriptive text. The semantics of the text depends on the domain where it is found.\n",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "algorithm": {
                    "type": "integer"
                },
                "answerType": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "dnsName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordSha": {
                    "type": "string"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "serial": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "svcParams": {
                    "type": "string"
                },
                "svcPriority": {
                    "type": "integer"
                },
                "targetName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "answerType",
                "dnsName",
                "name",
                "recordSha",
                "recordtype",
                "serial",
                "ttl",
                "zone"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean"
                },
                "algorithm": {
                    "type": "integer"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "svcParams": {
                    "type": "string"
                },
                "svcPriority": {
                    "type": "integer"
                },
                "targetName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "recordtype",
                "ttl",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "algorithm": {
                        "type": "integer"
                    },
                    "answerType": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "digestType": {
                        "type": "integer"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "emailAddress": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "integer"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "fingerprintType": {
                        "type": "integer"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "flagsnaptr": {
                        "type": "string"
                    },
                    "hardware": {
                        "type": "string"
                    },
                    "inception": {
                        "type": "string"
                    },
                    "iterations": {
                        "type": "integer"
                    },
                    "key": {
                        "type": "string"
                    },
                    "keytag": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "integer"
                    },
                    "mailbox": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameServer": {
                        "type": "string"
                    },
                    "nextHashedOwnerName": {
                        "type": "string"
                    },
                    "nxdomainTtl": {
                        "type": "integer"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "originalTtl": {
                        "type": "integer"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "preference": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "priorityIncrement": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "recordSha": {
                        "type": "string"
                    },
                    "recordtype": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "integer"
                    },
                    "regexp": {
                        "type": "string"
                    },
                    "replacement": {
                        "type": "string"
                    },
                    "retry": {
                        "type": "integer"
                    },
                    "salt": {
                        "type": "string"
                    },
                    "selector": {
                        "type": "integer"
                    },
                    "serial": {
                        "type": "integer"
                    },
                    "service": {
                        "type": "string"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "signer": {
                        "type": "string"
                    },
                    "software": {
                        "type": "string"
                    },
                    "subtype": {
                        "type": "integer"
                    },
                    "svcParams": {
                        "type": "string"
                    },
                    "svcPriority": {
                        "type": "integer"
                    },
                    "targetName": {
                        "type": "string"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "txt": {
                        "type": "string"
                    },
                    "typeBitmaps": {
                        "type": "string"
                    },
                    "typeCovered": {
                        "type": "string"
                    },
                    "typeMnemonic": {
                        "type": "string"
                    },
                    "typeValue": {
                        "type": "integer"
                    },
                    "usage": {
                        "type": "integer"
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:edgedns/dnsRecord:DnsRecord"
                }
            ]
        },
        "akamai:index/dnsZone:DnsZone": {
            "properties": {
                "activationState": {
                    "type": "string"
                },
                "aliasCount": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "activationState",
                "aliasCount",
                "contract",
                "type",
                "versionId",
                "zone"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "contract",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZone resources.\n",
                "properties": {
                    "activationState": {
                        "type": "string"
                    },
                    "aliasCount": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "endCustomerId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "signAndServe": {
                        "type": "boolean"
                    },
                    "signAndServeAlgorithm": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "tsigKey": {
                        "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:edgedns/dnsZone:DnsZone"
                }
            ]
        },
        "akamai:index/edgeHostName:EdgeHostName": {
            "description": "The `akamai.EdgeHostName` resource lets you configure a secure edge hostname. Your\nedge hostname determines how requests for your site, app, or content are mapped to\nAkamai edge servers.\n\nAn edge hostname is the CNAME target you use when directing your end user traffic to\nAkamai. Each hostname assigned to a property has a corresponding edge hostname.\n\nAkamai supports three types of edge hostnames, depending on the level of security\nyou need for your traffic: Standard TLS, Enhanced TLS, and Shared Certificate. When\nentering the `edge_hostname` attribute, you need to include a specific domain suffix\nfor your edge hostname type:\n\n| Edge hostname type | Domain suffix |\n|------|-------|\n| Enhanced TLS | edgekey.net |\n| Standard TLS | edgesuite.net |\n| Shared Cert | akamaized.net |\n\nFor example, if you use Standard TLS and have `www.example.com` as a hostname, your edge hostname would be `www.example.com.edgesuite.net`. If you wanted to use Enhanced TLS with the same hostname, your edge hostname would be `www.example.com.edgekey.net`. See the [Property Manager API (PAPI)](https://developer.akamai.com/api/core_features/property_manager/v1.html#createedgehostnames) for more information.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst provider_demo = new akamai.EdgeHostName(\"provider-demo\", {\n    contractId: \"ctr_1-AB123\",\n    edgeHostname: \"www.example.org.edgesuite.net\",\n    groupId: \"grp_123\",\n    productId: \"prd_Object_Delivery\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nprovider_demo = akamai.EdgeHostName(\"provider-demo\",\n    contract_id=\"ctr_1-AB123\",\n    edge_hostname=\"www.example.org.edgesuite.net\",\n    group_id=\"grp_123\",\n    product_id=\"prd_Object_Delivery\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var provider_demo = new Akamai.EdgeHostName(\"provider-demo\", new Akamai.EdgeHostNameArgs\n        {\n            ContractId = \"ctr_1-AB123\",\n            EdgeHostname = \"www.example.org.edgesuite.net\",\n            GroupId = \"grp_123\",\n            ProductId = \"prd_Object_Delivery\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewEdgeHostName(ctx, \"provider_demo\", \u0026akamai.EdgeHostNameArgs{\n\t\t\tContractId:   pulumi.String(\"ctr_1-AB123\"),\n\t\t\tEdgeHostname: pulumi.String(\"www.example.org.edgesuite.net\"),\n\t\t\tGroupId:      pulumi.String(\"grp_123\"),\n\t\t\tProductId:    pulumi.String(\"prd_Object_Delivery\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `name` - (Required) The name of the edge hostname.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `product_id` - (Required) A product's unique ID, including the `prd_` prefix.\n* `edge_hostname` - (Required) One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.\n* `certificate` - (Optional) Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .\n* `ip_behavior` - (Required) Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6. The default value is `IPV4`.\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `group` - (Deprecated) Replaced by `group_id`. Maintained for legacy purposes.\n* `product` - (Deprecated) Replaced by `product_id`. Maintained for legacy purposes.\n\n## Attributes reference\n\nThis resource returns this attribute:\n\n* `ip_behavior` - Returns the IP protocol the hostname will use, either `IPV4` for version 4, IPV6_PERFORMANCE` for version 6, or `IPV6_COMPLIANCE` for both.\n\n\n## Import\n\nBasic Usagehcl resource \"akamai_edge_hostname\" \"example\" {\n\n\n\n # (resource arguments)\n\n } You can import Akamai edge hostnames using a comma-delimited string of edge hostname, contract ID, and group ID. You have to enter the values in this order:\n\n`edge_hostname, contract_id, group_id` For example\n\n```sh\n $ pulumi import akamai:index/edgeHostName:EdgeHostName example ehn_123,ctr_1-AB123,grp_123\n```\n\n ",
            "properties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "edgeHostname",
                "group",
                "groupId",
                "ipBehavior",
                "product",
                "productId"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "edgeHostname",
                "ipBehavior"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeHostName resources.\n",
                "properties": {
                    "certificate": {
                        "type": "integer"
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "edgeHostname": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "ipBehavior": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/edgeHostName:EdgeHostName"
                }
            ]
        },
        "akamai:index/gtmAsmap:GtmAsmap": {
            "description": "Use the `akamai.GtmAsmap` resource to create, configure, and import a GTM Autonomous System (AS) map. AS mapping lets you configure a GTM property that returns a CNAME based on the AS number associated with the requester's IP address. \n\nYou can reuse maps for multiple properties or create new ones. AS maps split the Internet into multiple AS block zones. Properties that use AS maps can specify handout integers for each zone. AS mapping lets you configure a property that directs users to a specific environment or to the origin. \n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:`existing_map_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoAsmap = new akamai.GtmAsmap(\"demo_asmap\", {\n    defaultDatacenter: {\n        datacenterId: 5400,\n        nickname: \"All Other AS numbers\",\n    },\n    domain: \"demo_domain.akadns.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_asmap = akamai.GtmAsmap(\"demoAsmap\",\n    default_datacenter=akamai.GtmAsmapDefaultDatacenterArgs(\n        datacenter_id=5400,\n        nickname=\"All Other AS numbers\",\n    ),\n    domain=\"demo_domain.akadns.net\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoAsmap = new Akamai.GtmAsmap(\"demoAsmap\", new Akamai.GtmAsmapArgs\n        {\n            DefaultDatacenter = new Akamai.Inputs.GtmAsmapDefaultDatacenterArgs\n            {\n                DatacenterId = 5400,\n                Nickname = \"All Other AS numbers\",\n            },\n            Domain = \"demo_domain.akadns.net\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmAsmap(ctx, \"demoAsmap\", \u0026akamai.GtmAsmapArgs{\n\t\t\tDefaultDatacenter: \u0026GtmAsmapDefaultDatacenterArgs{\n\t\t\t\tDatacenterId: pulumi.Int(5400),\n\t\t\t\tNickname:     pulumi.String(\"All Other AS numbers\"),\n\t\t\t},\n\t\t\tDomain: pulumi.String(\"demo_domain.akadns.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) The GTM Domain name for the AS map.\n* `name` - (Required) A descriptive label for the AS map. Properties set up for  AS mapping can use this as reference.\n* `default_datacenter` - (Required) A placeholder for all other AS zones not found in these AS zones. Requires these additional arguments:\n  * `datacenter_id` - (Required) A unique identifier for an existing data center in the domain.\n  * `nickname` - (Required) A descriptive label for all other AS zones, up to 128 characters.\n* `wait_on_complete` - (Optional) A boolean that, if `true`, waits for transaction to complete.\n* `assignment` - (Optional) Contains information about the AS zone groupings of AS IDs. You can have multiple entries with this argument. If used, requires these arguments:\n  * `datacenter_id` - A unique identifier for an existing data center in the domain.\n  * `nickname` - A descriptive label for the group.\n  * `as_numbers` - Specifies an array of AS numbers.\n\n## Schema reference\n\nYou can download the GTM AS Map backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#asmap) page.\n",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmAsmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmASmap:GtmASmap"
                }
            ]
        },
        "akamai:index/gtmCidrmap:GtmCidrmap": {
            "description": "Use the `akamai.GtmCidrmap` resource to create, configure, and import a GTM Classless Inter-Domain Routing (CIDR) map. CIDR mapping uses the IP addresses of the requesting name server to provide IP-specific CNAME entries. CNAMEs let you direct internal users to a specific environment or direct them to the origin. This lets you provide different responses to an internal corporate DNS infrastructure, such as internal test environments and another answer for all other name servers (`default_datacenter`).\n\n CIDR maps split the Internet into multiple CIDR block zones. Properties that use a map can specify a handout CNAME for each zone on the property's editing page. To configure a property for CIDR mapping, your domain needs at least one CIDR map defined. \n \n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:`existing_map_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoCidrmap = new akamai.GtmCidrmap(\"demo_cidrmap\", {\n    defaultDatacenter: {\n        datacenterId: 5400,\n        nickname: \"All Other CIDR Blocks\",\n    },\n    domain: \"demo_domain.akadns.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_cidrmap = akamai.GtmCidrmap(\"demoCidrmap\",\n    default_datacenter=akamai.GtmCidrmapDefaultDatacenterArgs(\n        datacenter_id=5400,\n        nickname=\"All Other CIDR Blocks\",\n    ),\n    domain=\"demo_domain.akadns.net\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoCidrmap = new Akamai.GtmCidrmap(\"demoCidrmap\", new Akamai.GtmCidrmapArgs\n        {\n            DefaultDatacenter = new Akamai.Inputs.GtmCidrmapDefaultDatacenterArgs\n            {\n                DatacenterId = 5400,\n                Nickname = \"All Other CIDR Blocks\",\n            },\n            Domain = \"demo_domain.akadns.net\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmCidrmap(ctx, \"demoCidrmap\", \u0026akamai.GtmCidrmapArgs{\n\t\t\tDefaultDatacenter: \u0026GtmCidrmapDefaultDatacenterArgs{\n\t\t\t\tDatacenterId: pulumi.Int(5400),\n\t\t\t\tNickname:     pulumi.String(\"All Other CIDR Blocks\"),\n\t\t\t},\n\t\t\tDomain: pulumi.String(\"demo_domain.akadns.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) GTM Domain name for the AS Map.\n* `name` - (Required) A descriptive label for the CIDR map, up to 255 characters.\n* `default_datacenter` - (Required) A placeholder for all other CIDR zones not found in these CIDR zones. Requires these additional arguments:\n  * `datacenter_id` - (Required) For each property, an identifier for all other CIDR zones.\n  * `nickname` - (Required) A descriptive label for the all other CIDR blocks.\n* `wait_on_complete` - (Optional) A boolean that, if set to `true`, waits for transaction to complete.\n* `assignment` - (Optional) Contains information about the CIDR zone groupings of CIDR blocks. You can have multiple entries with this argument. If used, requires these additional arguments:\n  * `datacenter_id` - (Optional) A unique identifier for an existing data center in the domain.\n  * `nickname` - (Optional) A descriptive label for the CIDR zone group, up to 256 characters.\n  * `blocks` - (Optional, list) Specifies an array of CIDR blocks.\n\n## Schema reference\n\nYou can download the GTM CIDR Map backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#cidrmap) page.\n",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmCidrmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmCidrmap:GtmCidrmap"
                }
            ]
        },
        "akamai:index/gtmDatacenter:GtmDatacenter": {
            "description": "Use the `akamai.GtmDatacenter` resource to create, configure, and import a GTM data center. A GTM data center represents a customer data center and is also known as a traffic target, a location containing many servers GTM can direct traffic to.\n\nGTM uses data centers to scale load balancing. For example, you might have data centers in both New York and Amsterdam and want to balance load between them. You can configure GTM to send US users to the New York data center and European users to the data center in Amsterdam.\n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:`existing_datacenter_id`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoDatacenter = new akamai.GtmDatacenter(\"demo_datacenter\", {\n    domain: \"demo_domain.akadns.net\",\n    nickname: \"demo_datacenter\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_datacenter = akamai.GtmDatacenter(\"demoDatacenter\",\n    domain=\"demo_domain.akadns.net\",\n    nickname=\"demo_datacenter\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoDatacenter = new Akamai.GtmDatacenter(\"demoDatacenter\", new Akamai.GtmDatacenterArgs\n        {\n            Domain = \"demo_domain.akadns.net\",\n            Nickname = \"demo_datacenter\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmDatacenter(ctx, \"demoDatacenter\", \u0026akamai.GtmDatacenterArgs{\n\t\t\tDomain:   pulumi.String(\"demo_domain.akadns.net\"),\n\t\t\tNickname: pulumi.String(\"demo_datacenter\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) The GTM domain name for the data center.\n* `wait_on_complete` - (Optional) A boolean, that if set to `true`, waits for transaction to complete.\n* `nickname` - (Optional) A descriptive label for the data center.\n* `default_load_object` - (Optional) Specifies the load reporting interface between you and the GTM system. If used, requires these additional arguments:\n  * `load_object` - A load object is a file that provides real-time information about the current load, maximum allowable load, and target load on each resource.\n  * `load_object_port` - Specifies the TCP port to connect to when requesting the load object.\n  * `load_servers` - Specifies a list of servers to request the load object from.\n* `city` - (Optional) The name of the city where the data center is located.\n* `clone_of` - (Optional) Identifies the data center's `datacenter_id` of which this data center is a clone.\n* `cloud_server_targeting` - (Optional) A boolean indicating whether to balance load between two or more servers in a cloud environment.\n* `cloud_server_host_header_override` - (Optional) A boolean that, if set to `true`, Akamai's liveness test agents use the Host header configured in the liveness test.\n* `continent` - (Optional) A two-letter code that specifies the continent where the data center maps to.\n* `country` - (Optional) A two-letter ISO 3166 country code that specifies the country where the data center maps to.\n* `latitude` - (Optional) Specifies the geographical latitude of the data center's position. See also longitude within this object.\n* `longitude` - (Optional) Specifies the geographic longitude of the data center's position. See also latitude within this object.\n* `state_or_province` - (Optional) Specifies a two-letter ISO 3166 country code for the state or province where the data center is located.\n\n## Attribute reference\n\nThis resource returns these computed attributes in the state file:\n\n* `datacenter_id` - A unique identifier for an existing data center in the domain.\n* `ping_interval`\n* `ping_packet_size`\n* `score_penalty`\n* `servermonitor_liveness_count`\n* `servermonitor_load_count`\n* `servermonitor_pool`\n* `virtual` - A boolean indicating whether the data center is virtual or physical, the latter meaning the data center has an Akamai Network Agent installed, and its physical location (`latitude`, `longitude`) is fixed. Either `true` if virtual or `false` if physical.\n\n## Schema reference\n\nYou can download the GTM Data Center backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#datacenter) page.\n",
            "properties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "integer"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "scorePenalty": {
                    "type": "integer"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "virtual": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "datacenterId",
                "domain",
                "pingInterval",
                "pingPacketSize",
                "scorePenalty",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "virtual"
            ],
            "inputProperties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDatacenter resources.\n",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "cloneOf": {
                        "type": "integer"
                    },
                    "cloudServerHostHeaderOverride": {
                        "type": "boolean"
                    },
                    "cloudServerTargeting": {
                        "type": "boolean"
                    },
                    "continent": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "defaultLoadObject": {
                        "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "scorePenalty": {
                        "type": "integer"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "stateOrProvince": {
                        "type": "string"
                    },
                    "virtual": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmDatacenter:GtmDatacenter"
                }
            ]
        },
        "akamai:index/gtmDomain:GtmDomain": {
            "description": "Use the `akamai.GtmDomain` resource to create, configure, and import a GTM Domain, which is a basic building block of a traffic management configuration.\n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demodomain = new akamai.GtmDomain(\"demodomain\", {\n    comment: \"some comment\",\n    contract: \"XXX\",\n    group: \"100\",\n    type: \"basic\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemodomain = akamai.GtmDomain(\"demodomain\",\n    comment=\"some comment\",\n    contract=\"XXX\",\n    group=\"100\",\n    type=\"basic\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demodomain = new Akamai.GtmDomain(\"demodomain\", new Akamai.GtmDomainArgs\n        {\n            Comment = \"some comment\",\n            Contract = \"XXX\",\n            Group = \"100\",\n            Type = \"basic\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmDomain(ctx, \"demodomain\", \u0026akamai.GtmDomainArgs{\n\t\t\tComment:  pulumi.String(\"some comment\"),\n\t\t\tContract: pulumi.String(\"XXX\"),\n\t\t\tGroup:    pulumi.String(\"100\"),\n\t\t\tType:     pulumi.String(\"basic\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `contract` - (Required) If creating a domain, the contract ID.\n* `group` - (Required) If creating a domain, the currently selected group ID.\n* `name` - (Required) The DNS name for a collection of GTM Properties.\n* `type` - (Required) Th type of GTM domain. Options include `failover-only`, `static`, `weighted`, `basic`, or `full`.\n* `wait_on_complete` - (Optional) A boolean that, if set to `true`, waits for transaction to complete.\n* `comment` - (Optional) A descriptive note about changes to the domain. The maximum is 4000 characters.\n* `email_notification_list` - (Optional) A list of email addresses to notify when a change is made to the domain.\n* `default_timeout_penalty` - (Optional) Specifies the timeout penalty score. Default is `25`.\n* `load_imbalance_percentage` - (Optional) Indicates the percentage of load imbalance factor (LIF) for the domain.\n* `default_ssl_client_private_key` - (Optional) Specifies a Base64-encoded private key that corresponds with the TLS certificate for HTTPS, SMTPS, POPS, and TCPS liveness tests.\n* `default_error_penalty` - (Optional) Specifies the download penalty score. The default is `75`. If the download encounters an error, the web agent computes a score that is either the download time in seconds or a penalty score.\n* `cname_coalescing_enabled` - (Optional) A boolean that if set to `true`, GTM collapses CNAME redirections in DNS answers when it knows the target of the CNAME.\n* `load_feedback` - (Optional) A boolean indicating whether one or more measurements of load (resources) are defined by you and supplied by each data center in real time to balance load.\n* `default_ssl_client_certificate` - (Optional) Specifies an optional Base64-encoded certificate that corresponds with the private key for TLS-based liveness tests (HTTPS, SMTPS, POPS, and TCPS).\n* `end_user_mapping_enabled` - (Optional) A boolean indicating whether whether the GTM Domain is using end user client subnet mapping.\n\n## Attribute reference\n\nThis resource returns these computed attributes in the state file:\n\n* `default_unreachable_threshold`\n* `min_pingable_region_fraction`\n* `servermonitor_liveness_count`\n* `round_robin_prefix`\n* `servermonitor_load_count`\n* `ping_interval`\n* `max_ttl`\n* `default_health_max`\n* `map_update_interval`\n* `max_properties`\n* `max_resources`\n* `default_error_penalty`\n* `max_test_timeout`\n* `default_health_multiplier`\n* `servermonitor_pool`\n* `min_ttl`\n* `default_max_unreachable_penalty`\n* `default_health_threshold`\n* `min_test_interval`\n* `ping_packet_size`\n\n## Schema reference\n\nYou can download the GTM Domain backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#domain) page.\n",
            "properties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultHealthMax": {
                    "type": "number"
                },
                "defaultHealthMultiplier": {
                    "type": "number"
                },
                "defaultHealthThreshold": {
                    "type": "number"
                },
                "defaultMaxUnreachablePenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "defaultUnreachableThreshold": {
                    "type": "number"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapUpdateInterval": {
                    "type": "integer"
                },
                "maxProperties": {
                    "type": "integer"
                },
                "maxResources": {
                    "type": "integer"
                },
                "maxTestTimeout": {
                    "type": "number"
                },
                "maxTtl": {
                    "type": "integer"
                },
                "minPingableRegionFraction": {
                    "type": "number"
                },
                "minTestInterval": {
                    "type": "integer"
                },
                "minTtl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "roundRobinPrefix": {
                    "type": "string"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultHealthMax",
                "defaultHealthMultiplier",
                "defaultHealthThreshold",
                "defaultMaxUnreachablePenalty",
                "defaultUnreachableThreshold",
                "mapUpdateInterval",
                "maxProperties",
                "maxResources",
                "maxTestTimeout",
                "maxTtl",
                "minPingableRegionFraction",
                "minTestInterval",
                "minTtl",
                "name",
                "pingInterval",
                "pingPacketSize",
                "roundRobinPrefix",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "type"
            ],
            "inputProperties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDomain resources.\n",
                "properties": {
                    "cnameCoalescingEnabled": {
                        "type": "boolean"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "defaultErrorPenalty": {
                        "type": "integer"
                    },
                    "defaultHealthMax": {
                        "type": "number"
                    },
                    "defaultHealthMultiplier": {
                        "type": "number"
                    },
                    "defaultHealthThreshold": {
                        "type": "number"
                    },
                    "defaultMaxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "defaultSslClientCertificate": {
                        "type": "string"
                    },
                    "defaultSslClientPrivateKey": {
                        "type": "string"
                    },
                    "defaultTimeoutPenalty": {
                        "type": "integer"
                    },
                    "defaultUnreachableThreshold": {
                        "type": "number"
                    },
                    "emailNotificationLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "endUserMappingEnabled": {
                        "type": "boolean"
                    },
                    "group": {
                        "type": "string"
                    },
                    "loadFeedback": {
                        "type": "boolean"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapUpdateInterval": {
                        "type": "integer"
                    },
                    "maxProperties": {
                        "type": "integer"
                    },
                    "maxResources": {
                        "type": "integer"
                    },
                    "maxTestTimeout": {
                        "type": "number"
                    },
                    "maxTtl": {
                        "type": "integer"
                    },
                    "minPingableRegionFraction": {
                        "type": "number"
                    },
                    "minTestInterval": {
                        "type": "integer"
                    },
                    "minTtl": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "roundRobinPrefix": {
                        "type": "string"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmDomain:GtmDomain"
                }
            ]
        },
        "akamai:index/gtmGeomap:GtmGeomap": {
            "description": "Use the `akamai.GtmGeomap` resource to create, configure, and import a GTM Geographic map. Geographic mapping lets you configure a property that returns a CNAME based on the geographic location of the request. \n\nYou can reuse maps for multiple properties or create new ones. To configure a property for geographic mapping, you need to define at least one geographic map for your domain. Each map needs at least two definitions. For example, you can have one definition that maps a set of countries to a specific data center, and a second definition that routes all other traffic. \n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:`existing_map_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoGeomap = new akamai.GtmGeomap(\"demo_geomap\", {\n    defaultDatacenter: {\n        datacenterId: 5400,\n        nickname: \"All Others\",\n    },\n    domain: \"demo_domain.akadns.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_geomap = akamai.GtmGeomap(\"demoGeomap\",\n    default_datacenter=akamai.GtmGeomapDefaultDatacenterArgs(\n        datacenter_id=5400,\n        nickname=\"All Others\",\n    ),\n    domain=\"demo_domain.akadns.net\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoGeomap = new Akamai.GtmGeomap(\"demoGeomap\", new Akamai.GtmGeomapArgs\n        {\n            DefaultDatacenter = new Akamai.Inputs.GtmGeomapDefaultDatacenterArgs\n            {\n                DatacenterId = 5400,\n                Nickname = \"All Others\",\n            },\n            Domain = \"demo_domain.akadns.net\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmGeomap(ctx, \"demoGeomap\", \u0026akamai.GtmGeomapArgs{\n\t\t\tDefaultDatacenter: \u0026GtmGeomapDefaultDatacenterArgs{\n\t\t\t\tDatacenterId: pulumi.Int(5400),\n\t\t\t\tNickname:     pulumi.String(\"All Others\"),\n\t\t\t},\n\t\t\tDomain: pulumi.String(\"demo_domain.akadns.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) GTM Domain name for the Geographic Map.\n* `name` - (Required) A descriptive label for the Geographic map.\n* `default_datacenter` - (Required) A placeholder for all other geographic zones. Requires these additional arguments:\n  * `datacenter_id` - (Required) For each property, an identifier for all other geographic zones.\n  * `nickname` - (Required) A descriptive label for all other geographic zones.\n* `wait_on_complete` - (Optional) A boolean indicating whether to wait for transaction to complete. Set to `true` by default.\n* `assignment` - (Optional) Contains information about the geographic zone groupings of countries. You can have multiple `assignment` arguments. If used, requires these additional arguments:\n  * `datacenter_id` - (Optional) A unique identifier for an existing data center in the domain.\n  * `nickname` - (Optional) A descriptive label for the group.\n  * `countries` - (Optional) Specifies an array of two-letter ISO 3166 country codes, or for finer subdivisions, the two-letter country code and the two-letter stateOrProvince code separated by a forward slash.\n\n## Schema reference\n\nYou can download the GTM Geographic Map backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#geographicmap) page.\n",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmGeomap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmGeomap:GtmGeomap"
                }
            ]
        },
        "akamai:index/gtmProperty:GtmProperty": {
            "description": "Use the `akamai.GtmProperty` resource to create, configure and import a GTM property, a set of IP addresses or CNAMEs that GTM provides in response to DNS queries based on a set of rules.\n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:`existing_property_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoProperty = new akamai.GtmProperty(\"demo_property\", {\n    domain: \"demo_domain.akadns.net\",\n    handoutLimit: 5,\n    handoutMode: \"normal\",\n    scoreAggregationType: \"median\",\n    trafficTargets: [{\n        datacenterId: 3131,\n    }],\n    type: \"weighted-round-robin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_property = akamai.GtmProperty(\"demoProperty\",\n    domain=\"demo_domain.akadns.net\",\n    handout_limit=5,\n    handout_mode=\"normal\",\n    score_aggregation_type=\"median\",\n    traffic_targets=[akamai.GtmPropertyTrafficTargetArgs(\n        datacenter_id=3131,\n    )],\n    type=\"weighted-round-robin\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoProperty = new Akamai.GtmProperty(\"demoProperty\", new Akamai.GtmPropertyArgs\n        {\n            Domain = \"demo_domain.akadns.net\",\n            HandoutLimit = 5,\n            HandoutMode = \"normal\",\n            ScoreAggregationType = \"median\",\n            TrafficTargets = \n            {\n                new Akamai.Inputs.GtmPropertyTrafficTargetArgs\n                {\n                    DatacenterId = 3131,\n                },\n            },\n            Type = \"weighted-round-robin\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmProperty(ctx, \"demoProperty\", \u0026akamai.GtmPropertyArgs{\n\t\t\tDomain:               pulumi.String(\"demo_domain.akadns.net\"),\n\t\t\tHandoutLimit:         pulumi.Int(5),\n\t\t\tHandoutMode:          pulumi.String(\"normal\"),\n\t\t\tScoreAggregationType: pulumi.String(\"median\"),\n\t\t\tTrafficTargets: GtmPropertyTrafficTargetArray{\n\t\t\t\t\u0026GtmPropertyTrafficTargetArgs{\n\t\t\t\t\tDatacenterId: pulumi.Int(3131),\n\t\t\t\t},\n\t\t\t},\n\t\t\tType: pulumi.String(\"weighted-round-robin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) DNS name for the GTM Domain set that includes this Property.\n* `name` - (Required) DNS name for a collection of IP address or CNAME responses. The value, together with the GTM domainName, forms the Property's hostname.\n* `type` - (Required) Specifies the load balancing behavior for the property. Either failover, geographic, cidrmapping, weighted-round-robin, weighted-hashed, weighted-round-robin-load-feedback, qtr, or performance.\n* `score_aggregation_type` - (Required) Specifies how GTM aggregates liveness test scores across different tests, when multiple tests are configured.\n* `handout_limit` - (Required) Indicates the limit for the number of live IPs handed out to a DNS request.\n* `handout_mode` - (Required) Specifies how IPs are returned when more than one IP is alive and available.\n* `traffic_target` - (Optional) Contains information about where to direct data center traffic. You can have multiple `traffic_target` arguments. If used, includes these arguments:\n  * `datacenter_id` - (Optional) A unique identifier for an existing data center in the domain.\n  * `enabled` - (Optional) A boolean indicating whether the traffic target is used. You can also omit the traffic target, which has the same result as the false value.\n  * `weight` - (Optional) Specifies the traffic weight for the target.\n  * `servers` - (Optional) (List) Identifies the IP address or the hostnames of the servers.\n  * `name` - (Optional) An alternative label for the traffic target.\n  * `handout_cname` - (Optional) Specifies an optional data center for the property. Used when there are no servers configured for the property.\n* `liveness_test` - (Optional) Contains information about the liveness tests, which are run periodically to determine whether your servers respond to requests. You can have multiple `liveness_test` arguments. If used, requires these arguments:\n  * `name` - (Required) A descriptive name for the liveness test.\n  * `test_interval` - (Required) Indicates the interval at which the liveness test is run, in seconds. Requires a minimum of 10 seconds.\n  * `test_object_protocol` - (Required) Specifies the test protocol. Possible values include `DNS`, `HTTP`, `HTTPS`, `FTP`, `POP`, `POPS`, `SMTP`, `SMTPS`, `TCP`, or `TCPS`.\n  * `test_timeout` - (Required) Specifies the duration of the liveness test before it fails. The range is from 0.001 to 60 seconds.\n  * `answers_required` - (Optional) If `test_object_protocol` is DNS, enter a boolean value if an answer is needed for the DNS query to be successful.\n  * `disabled` - (Optional) A boolean indicating whether the liveness test is disabled. When disabled, GTM stops running the test, effectively treating it as if it no longer exists.\n  * `disable_nonstandard_port_warning` - (Optional) A boolean that if set to `true`, disables warnings when non-standard ports are used.\n  * `error_penalty` - (Optional) Specifies the score that's reported if the liveness test encounters an error other than timeout, such as connection refused, and 404.\n  * `http_header` - (Optional) Contains HTTP headers to send if the `test_object_protocol` is `http` or `https`. You can have multiple `http_header` entries. Requires these arguments:\n    * `name` - (Optional) Name of HTTP header.\n    * `value` - (Optional) Value of HTTP header.\n  * `http_error3xx` - (Optional) A boolean that if set to `true`, treats a 3xx HTTP response as a failure if the `test_object_protocol` is `http`, `https`, or `ftp`.\n  * `http_error4xx` - (Optional) A boolean that if set to `true`, treats a 4xx HTTP response as a failure if the `test_object_protocol` is `http`, `https`, or `ftp`.\n  * `http_error5xx` - (Optional) A boolean that if set to `true`, treats a 5xx HTTP response as a failure if the `test_object_protocol` is `http`, `https`, or `ftp`.\n  * `peer_certificate_verification` - (Optional) A boolean that if set to `true`, validates the origin certificate. Applies only to tests with `test_object_protocol` of https.\n  * `recursion_requested` - (Optional) A boolean indicating whether the `test_object_protocol` is DNS. The DNS query is recursive.\n  * `request_string` - (Optional) Specifies a request string.\n  * `resource_type` - (Optional) Specifies the query type, if `test_object_protocol` is DNS.\n  * `response_string` - (Optional) Specifies a response string.\n  * `ssl_client_certificate` - (Optional) Indicates a Base64-encoded certificate. SSL client certificates are available for livenessTests that use secure protocols.\n  * `ssl_client_private_key` - (Optional) Indicates a Base64-encoded private key. The private key used to generate or request a certificate for livenessTests can't have a passphrase nor be used for any other purpose.\n  * `test_object` - (Required) Specifies the static text that acts as a stand-in for the data that you're sending on the network.\n  * `test_object_password` - (Optional) Specifies the test object's password. It is required if testObjectProtocol is ftp.\n  * `test_object_port` - (Required) Specifies the port number for the testObject.\n  * `test_object_username` - (Optional) A descriptive name for the testObject.\n  * `timeout_penalty`- (Optional) Specifies the score to be reported if the liveness test times out.\n* `wait_on_complete` - (Optional) A boolean indicating whether to wait for transaction to complete. Set to `true` by default.\n* `failover_delay` - (Optional) Specifies the failover delay in seconds.\n* `failback_delay` - (Optional) Specifies the failback delay in seconds.\n* `ipv6` - (Optional) A boolean that indicates the type of IP address handed out by a GTM property.\n* `stickiness_bonus_percentage` - (Optional) Specifies a percentage used to configure data center affinity.\n* `stickiness_bonus_constant` - (Optional) Specifies a constant used to configure data center affinity.\n* `health_threshold` - (Optional) Configures a cutoff value that is computed from the median scores.\n* `use_computed_targets` - (Optional) For load-feedback domains only, a boolean that indicates whether you want GTM to automatically compute target load.\n* `backup_ip` - (Optional) Specifies a backup IP. When GTM declares that all of the targets are down, the backup IP is handed out. If a backup IP is set, do not set a backup CNAME.\n* `backup_cname` - (Optional) Specifies a backup CNAME. If GTM declares that all of the servers configured for your property are down, the backup CNAME is handed out. If a backup CNAME is set, do not set a backup IP.\n* `balance_by_download_score` - (Optional) A boolean that indicates whether download score based load balancing is enabled.\n* `unreachable_threshold` - (Optional) For performance domains, this specifies a penalty value that's added to liveness test scores when data centers have an aggregated loss fraction higher than this value.\n* `health_multiplier` - (Optional) Configures a cutoff value that is computed from the median scores.\n* `dynamic_ttl` - (Optional) Indicates the TTL in seconds for records that might change dynamically based on liveness and load balancing such as A and AAAA records, and CNAMEs.\n* `max_unreachable_penalty` - (Optional) For performance domains, this specifies a penalty value that's added to liveness test scores when data centers show an aggregated loss fraction higher than the penalty value.\n* `map_name` - (Optional) A descriptive label for a GeographicMap or a CidrMap that's required if the property is either geographic or cidrmapping, in which case mapName needs to reference either an existing GeographicMap or CidrMap in the same domain.\n* `load_imbalance_percentage` - (Optional) Indicates the percent of load imbalance factor (LIF) for the property.\n* `health_max` - (Optional) Defines the absolute limit beyond which IPs are declared unhealthy.\n* `cname` - (Optional) Indicates the fully qualified name aliased to a particular property.\n* `comments` - (Optional) A descriptive note about changes to the domain. The maximum is 4000 characters.\n* `ghost_demand_reporting` - (Optional) Use load estimates from Akamai Ghost utilization messages.\n* `min_live_fraction` - (Optional) Specifies what fraction of the servers need to respond to requests so GTM considers the data center up and able to receive traffic.\n* `static_rr_set` - (Optional) Contains static record sets. You can have multiple `static_rr_set` entries. Requires these arguments:\n  * `type` - (Optional) The record type.\n  * `ttl` - (Optional) The number of seconds that this record should live in a resolver's cache before being refetched.\n  * `rdata` - (Optional) (List) An array of data strings, representing multiple records within a set.\n\n## Attribute reference\n\nThis resource returns these computed attributes in the state file:\n\n* `weighted_hash_bits_for_ipv4`\n* `weighted_hash_bits_for_ipv6`\n\n## Schema reference\n\nYou can download the GTM Property backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#property) page.\n",
            "properties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                },
                "weightedHashBitsForIpv4": {
                    "type": "integer"
                },
                "weightedHashBitsForIpv6": {
                    "type": "integer"
                }
            },
            "required": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "name",
                "scoreAggregationType",
                "type",
                "weightedHashBitsForIpv4",
                "weightedHashBitsForIpv6"
            ],
            "inputProperties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "scoreAggregationType",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmProperty resources.\n",
                "properties": {
                    "backupCname": {
                        "type": "string"
                    },
                    "backupIp": {
                        "type": "string"
                    },
                    "balanceByDownloadScore": {
                        "type": "boolean"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "dynamicTtl": {
                        "type": "integer"
                    },
                    "failbackDelay": {
                        "type": "integer"
                    },
                    "failoverDelay": {
                        "type": "integer"
                    },
                    "ghostDemandReporting": {
                        "type": "boolean"
                    },
                    "handoutLimit": {
                        "type": "integer"
                    },
                    "handoutMode": {
                        "type": "string"
                    },
                    "healthMax": {
                        "type": "number"
                    },
                    "healthMultiplier": {
                        "type": "number"
                    },
                    "healthThreshold": {
                        "type": "number"
                    },
                    "ipv6": {
                        "type": "boolean"
                    },
                    "livenessTests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                        }
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapName": {
                        "type": "string"
                    },
                    "maxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "minLiveFraction": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scoreAggregationType": {
                        "type": "string"
                    },
                    "staticRrSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                        }
                    },
                    "staticTtl": {
                        "type": "integer"
                    },
                    "stickinessBonusConstant": {
                        "type": "integer"
                    },
                    "stickinessBonusPercentage": {
                        "type": "integer"
                    },
                    "trafficTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "unreachableThreshold": {
                        "type": "number"
                    },
                    "useComputedTargets": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    },
                    "weightedHashBitsForIpv4": {
                        "type": "integer"
                    },
                    "weightedHashBitsForIpv6": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmProperty:GtmProperty"
                }
            ]
        },
        "akamai:index/gtmResource:GtmResource": {
            "description": "The `akamai.GtmResource` lets you create, configure, and import a GTM resource. In GTM, a resource is anything you can measure whose scarcity affects load balancing. Examples of resources include bandwidth, CPU load average, database queries per second, or disk operations per second. \n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:\n`existing_resource_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoResource = new akamai.GtmResource(\"demo_resource\", {\n    aggregationType: \"latest\",\n    domain: \"demo_domain.akadns.net\",\n    type: \"XML load object via HTTP\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_resource = akamai.GtmResource(\"demoResource\",\n    aggregation_type=\"latest\",\n    domain=\"demo_domain.akadns.net\",\n    type=\"XML load object via HTTP\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoResource = new Akamai.GtmResource(\"demoResource\", new Akamai.GtmResourceArgs\n        {\n            AggregationType = \"latest\",\n            Domain = \"demo_domain.akadns.net\",\n            Type = \"XML load object via HTTP\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmResource(ctx, \"demoResource\", \u0026akamai.GtmResourceArgs{\n\t\t\tAggregationType: pulumi.String(\"latest\"),\n\t\t\tDomain:          pulumi.String(\"demo_domain.akadns.net\"),\n\t\t\tType:            pulumi.String(\"XML load object via HTTP\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) DNS name for the GTM Domain set that includes this property.\n* `name` - (Required) A descriptive label for the GTM resource.\n* `aggregation_type` - (Required) Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.\n* `type` - (Required) Indicates the kind of `load_object` format used to determine the load on the resource.\n* `wait_on_complete` - (Optional) A boolean indicating whether to wait for transaction to complete. Set to `true` by default.\n* `resource_instance`  - (Optional) (multiple allowed) Contains information about the resources that constrain the properties within the data center. You can have multiple `resource_instance` entries. Requires these arguments: \n  * `datacenter_id` - (Optional) A unique identifier for an existing data center in the domain.\n  * `load_object` - (Optional) Identifies the load object file used to report real-time information about the current load, maximum allowable load, and target load on each resource.\n  * `load_object_port` - (Optional) Specifies the TCP port of the `load_object`.\n  * `load_servers` - (Optional) (List) Specifies a list of servers from which to request the load object.\n  * `use_default_load_object` - (Optional) A boolean that indicates whether a default `load_object` is used for the resources.\n* `host_header` - (Optional) Optionally specifies the host header used when fetching the load object.\n* `least_squares_decay` - (Optional) For internal use only. Unless Akamai indicates otherwise, omit the value or set it to null.\n* `upper_bound` - (Optional) An optional sanity check that specifies the maximum allowed value for any component of the load object.\n* `description` - (Optional) A descriptive note to help you track what the resource constrains.\n* `leader_string` - (Optional) Specifies the text that comes before the `load_object`.\n* `constrained_property` - (Optional) Specifies the name of the property that this resource constrains, enter `**` to constrain all properties.\n* `load_imbalance_percent` - (Optional) Indicates the percent of load imbalance factor (LIF) for the property.\n* `max_u_multiplicative_increment` - (Optional) For Akamai internal use only. You can omit the value or set it to `null`.\n* `decay_rate` - (Optional) For Akamai internal use only. You can omit the value or set it to `null`.\n\n## Schema reference\n\nYou can download the GTM Resource backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#resource) page.\n",
            "properties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "aggregationType",
                "domain",
                "name",
                "type"
            ],
            "inputProperties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "aggregationType",
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmResource resources.\n",
                "properties": {
                    "aggregationType": {
                        "type": "string"
                    },
                    "constrainedProperty": {
                        "type": "string"
                    },
                    "decayRate": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "hostHeader": {
                        "type": "string"
                    },
                    "leaderString": {
                        "type": "string"
                    },
                    "leastSquaresDecay": {
                        "type": "number"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "maxUMultiplicativeIncrement": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resourceInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "upperBound": {
                        "type": "integer"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmResource:GtmResource"
                }
            ]
        },
        "akamai:index/networkList:NetworkList": {
            "description": "Use the `akamai.NetworkList` resource to create a network list, or to modify an existing list.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst networkList = new akamai.NetworkList(\"networkList\", {\n    type: \"IP\",\n    description: \"network list description\",\n    lists: _var.list,\n    mode: \"APPEND\",\n    contractId: \"ABC-123\",\n    groupId: 12345,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nnetwork_list = akamai.NetworkList(\"networkList\",\n    type=\"IP\",\n    description=\"network list description\",\n    lists=var[\"list\"],\n    mode=\"APPEND\",\n    contract_id=\"ABC-123\",\n    group_id=12345)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var networkList = new Akamai.NetworkList(\"networkList\", new Akamai.NetworkListArgs\n        {\n            Type = \"IP\",\n            Description = \"network list description\",\n            Lists = @var.List,\n            Mode = \"APPEND\",\n            ContractId = \"ABC-123\",\n            GroupId = 12345,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewNetworkList(ctx, \"networkList\", \u0026akamai.NetworkListArgs{\n\t\t\tType:        pulumi.String(\"IP\"),\n\t\t\tDescription: pulumi.String(\"network list description\"),\n\t\t\tLists:       pulumi.Any(_var.List),\n\t\t\tMode:        pulumi.String(\"APPEND\"),\n\t\t\tContractId:  pulumi.String(\"ABC-123\"),\n\t\t\tGroupId:     pulumi.Int(12345),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "contractId": {
                    "type": "string",
                    "description": "The contract ID of the network list. If supplied, group_id must also be supplied. The\ncontract_id value of an existing network list may not be modified.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description to be assigned to the network list.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The group ID of the network list. If supplied, contract_id must also be supplied. The\ngroup_id value of an existing network list may not be modified.\n"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ": (Optional) A list of IP addresses or locations to be included in the list, added to an existing list, or\nremoved from an existing list.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "A string specifying the interpretation of the `list` parameter. Must be one of the following:\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the network list.\n"
                },
                "networkListId": {
                    "type": "string",
                    "description": "The ID of the network list.\n"
                },
                "syncPoint": {
                    "type": "integer",
                    "description": "An integer that identifies the current version of the network list; this value is incremented each time\nthe list is modified.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the network list; must be either \"IP\" or \"GEO\".\n"
                },
                "uniqueid": {
                    "type": "string",
                    "description": "uniqueId\n"
                }
            },
            "required": [
                "description",
                "mode",
                "name",
                "networkListId",
                "syncPoint",
                "type",
                "uniqueid"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "The contract ID of the network list. If supplied, group_id must also be supplied. The\ncontract_id value of an existing network list may not be modified.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description to be assigned to the network list.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The group ID of the network list. If supplied, contract_id must also be supplied. The\ngroup_id value of an existing network list may not be modified.\n"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ": (Optional) A list of IP addresses or locations to be included in the list, added to an existing list, or\nremoved from an existing list.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "A string specifying the interpretation of the `list` parameter. Must be one of the following:\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the network list.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the network list; must be either \"IP\" or \"GEO\".\n"
                }
            },
            "requiredInputs": [
                "description",
                "mode",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkList resources.\n",
                "properties": {
                    "contractId": {
                        "type": "string",
                        "description": "The contract ID of the network list. If supplied, group_id must also be supplied. The\ncontract_id value of an existing network list may not be modified.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description to be assigned to the network list.\n"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "The group ID of the network list. If supplied, contract_id must also be supplied. The\ngroup_id value of an existing network list may not be modified.\n"
                    },
                    "lists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ": (Optional) A list of IP addresses or locations to be included in the list, added to an existing list, or\nremoved from an existing list.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "A string specifying the interpretation of the `list` parameter. Must be one of the following:\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name to be assigned to the network list.\n"
                    },
                    "networkListId": {
                        "type": "string",
                        "description": "The ID of the network list.\n"
                    },
                    "syncPoint": {
                        "type": "integer",
                        "description": "An integer that identifies the current version of the network list; this value is incremented each time\nthe list is modified.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the network list; must be either \"IP\" or \"GEO\".\n"
                    },
                    "uniqueid": {
                        "type": "string",
                        "description": "uniqueId\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/networkListActivations:NetworkListActivations": {
            "description": "Use the `akamai.NetworkListActivations` resource to activate a network list in either the STAGING or PRODUCTION\nenvironment.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst networkListsFilter = akamai.getNetworkLists({\n    name: _var.network_list,\n});\nconst activation = new akamai.NetworkListActivations(\"activation\", {\n    networkListId: networkListsFilter.then(networkListsFilter =\u003e networkListsFilter.lists?[0]),\n    network: \"STAGING\",\n    notes: \"TEST Notes\",\n    notificationEmails: [\"user@example.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nnetwork_lists_filter = akamai.get_network_lists(name=var[\"network_list\"])\nactivation = akamai.NetworkListActivations(\"activation\",\n    network_list_id=network_lists_filter.lists[0],\n    network=\"STAGING\",\n    notes=\"TEST Notes\",\n    notification_emails=[\"user@example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var networkListsFilter = Output.Create(Akamai.GetNetworkLists.InvokeAsync(new Akamai.GetNetworkListsArgs\n        {\n            Name = @var.Network_list,\n        }));\n        var activation = new Akamai.NetworkListActivations(\"activation\", new Akamai.NetworkListActivationsArgs\n        {\n            NetworkListId = networkListsFilter.Apply(networkListsFilter =\u003e networkListsFilter.Lists?[0]),\n            Network = \"STAGING\",\n            Notes = \"TEST Notes\",\n            NotificationEmails = \n            {\n                \"user@example.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Network_list\n\t\tnetworkListsFilter, err := akamai.GetNetworkLists(ctx, \u0026GetNetworkListsArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewNetworkListActivations(ctx, \"activation\", \u0026akamai.NetworkListActivationsArgs{\n\t\t\tNetworkListId: pulumi.String(networkListsFilter.Lists[0]),\n\t\t\tNetwork:       pulumi.String(\"STAGING\"),\n\t\t\tNotes:         pulumi.String(\"TEST Notes\"),\n\t\t\tNotificationEmails: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user@example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "activate": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string",
                    "description": "The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to\n`STAGING`.\n"
                },
                "networkListId": {
                    "type": "string",
                    "description": "The ID of the network list to be activated\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A comment describing the activation.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A bracketed, comma-separated list of email addresses that will be notified when the\noperation is complete.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The string `ACTIVATED` if the activation was successful, or a string identifying the reason why the network\nlist was not activated.\n"
                }
            },
            "required": [
                "networkListId",
                "notificationEmails",
                "status"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string",
                    "description": "The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to\n`STAGING`.\n"
                },
                "networkListId": {
                    "type": "string",
                    "description": "The ID of the network list to be activated\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A comment describing the activation.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A bracketed, comma-separated list of email addresses that will be notified when the\noperation is complete.\n"
                }
            },
            "requiredInputs": [
                "networkListId",
                "notificationEmails"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkListActivations resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to\n`STAGING`.\n"
                    },
                    "networkListId": {
                        "type": "string",
                        "description": "The ID of the network list to be activated\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A comment describing the activation.\n"
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A bracketed, comma-separated list of email addresses that will be notified when the\noperation is complete.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The string `ACTIVATED` if the activation was successful, or a string identifying the reason why the network\nlist was not activated.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/networkListDescription:NetworkListDescription": {
            "description": "Use the `akamai.NetworkListDescription` resource to update the name or description of an existing network list.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst networkListDescription = new akamai.NetworkListDescription(\"networkListDescription\", {\n    networkListId: _var.network_list_id,\n    description: \"Test network list updated description\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nnetwork_list_description = akamai.NetworkListDescription(\"networkListDescription\",\n    network_list_id=var[\"network_list_id\"],\n    description=\"Test network list updated description\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var networkListDescription = new Akamai.NetworkListDescription(\"networkListDescription\", new Akamai.NetworkListDescriptionArgs\n        {\n            NetworkListId = @var.Network_list_id,\n            Description = \"Test network list updated description\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewNetworkListDescription(ctx, \"networkListDescription\", \u0026akamai.NetworkListDescriptionArgs{\n\t\t\tNetworkListId: pulumi.Any(_var.Network_list_id),\n\t\t\tDescription:   pulumi.String(\"Test network list updated description\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description to be assigned to the network list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the network list.\n"
                },
                "networkListId": {
                    "type": "string",
                    "description": "The unique ID of the network list to use.\n"
                }
            },
            "required": [
                "description",
                "name",
                "networkListId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description to be assigned to the network list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the network list.\n"
                },
                "networkListId": {
                    "type": "string",
                    "description": "The unique ID of the network list to use.\n"
                }
            },
            "requiredInputs": [
                "description",
                "networkListId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkListDescription resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description to be assigned to the network list.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name to be assigned to the network list.\n"
                    },
                    "networkListId": {
                        "type": "string",
                        "description": "The unique ID of the network list to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/networkListSubscription:NetworkListSubscription": {
            "description": "Use the `akamai.NetworkListSubscription` resource to specify a set of email addresses to be notified of changes to any\nof a set of network lists.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst networkListsFilter = akamai.getNetworkLists({\n    name: _var.network_list,\n});\nconst subscribe = new akamai.NetworkListSubscription(\"subscribe\", {\n    networkLists: networkListsFilter.then(networkListsFilter =\u003e networkListsFilter.lists),\n    recipients: [\"user@example.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nnetwork_lists_filter = akamai.get_network_lists(name=var[\"network_list\"])\nsubscribe = akamai.NetworkListSubscription(\"subscribe\",\n    network_lists=network_lists_filter.lists,\n    recipients=[\"user@example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var networkListsFilter = Output.Create(Akamai.GetNetworkLists.InvokeAsync(new Akamai.GetNetworkListsArgs\n        {\n            Name = @var.Network_list,\n        }));\n        var subscribe = new Akamai.NetworkListSubscription(\"subscribe\", new Akamai.NetworkListSubscriptionArgs\n        {\n            NetworkLists = networkListsFilter.Apply(networkListsFilter =\u003e networkListsFilter.Lists),\n            Recipients = \n            {\n                \"user@example.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Network_list\n\t\tnetworkListsFilter, err := akamai.GetNetworkLists(ctx, \u0026GetNetworkListsArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewNetworkListSubscription(ctx, \"subscribe\", \u0026akamai.NetworkListSubscriptionArgs{\n\t\t\tNetworkLists: interface{}(networkListsFilter.Lists),\n\t\t\tRecipients: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user@example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "networkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list containing one or more IDs of the network lists to which the indicated email\naddresses should be subscribed.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A bracketed, comma-separated list of email addresses that will be notified of changes to any\nof the specified network lists.\n"
                }
            },
            "required": [
                "networkLists",
                "recipients"
            ],
            "inputProperties": {
                "networkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list containing one or more IDs of the network lists to which the indicated email\naddresses should be subscribed.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A bracketed, comma-separated list of email addresses that will be notified of changes to any\nof the specified network lists.\n"
                }
            },
            "requiredInputs": [
                "networkLists",
                "recipients"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkListSubscription resources.\n",
                "properties": {
                    "networkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list containing one or more IDs of the network lists to which the indicated email\naddresses should be subscribed.\n"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A bracketed, comma-separated list of email addresses that will be notified of changes to any\nof the specified network lists.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/property:Property": {
            "description": "The `akamai.Property` resource represents an Akamai property configuration.\nThis resource lets you to create, update, and activate properties on the\nAkamai platform.\n\nAkamai's edge network caches your web assets near to servers that request them.\nA property provides the main way to control how edge servers respond to various\nkinds of requests for those assets. Properties apply rules to a set of hostnames,\nand you can only apply one property at a time to any given hostname. Each property\nis assigned to a product, which determines which behaviors you can use. Each\nproperty's default rule needs a valid content provider (CP) code assigned to bill\nand report for the service.\n\n\u003e **Note** In version 0.10 and earlier of this resource, it also controlled content provider (CP) codes, origin settings, rules, and hostname associations. Starting with version 1.0.0, this logic is broken out into individual resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = new akamai.Property(\"example\", {\n    productId: \"prd_SPM\",\n    contractId: _var.contractid,\n    groupId: _var.groupid,\n    hostnames: [\n        {\n            cnameFrom: \"example.com\",\n            cnameTo: \"example.com.edgekey.net\",\n            certProvisioningType: \"DEFAULT\",\n        },\n        {\n            cnameFrom: \"www.example.com\",\n            cnameTo: \"example.com.edgesuite.net\",\n            certProvisioningType: \"CPS_MANAGED\",\n        },\n    ],\n    ruleFormat: \"v2020-03-04\",\n    rules: data.akamai_property_rules_template.example.json,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.Property(\"example\",\n    product_id=\"prd_SPM\",\n    contract_id=var[\"contractid\"],\n    group_id=var[\"groupid\"],\n    hostnames=[\n        akamai.PropertyHostnameArgs(\n            cname_from=\"example.com\",\n            cname_to=\"example.com.edgekey.net\",\n            cert_provisioning_type=\"DEFAULT\",\n        ),\n        akamai.PropertyHostnameArgs(\n            cname_from=\"www.example.com\",\n            cname_to=\"example.com.edgesuite.net\",\n            cert_provisioning_type=\"CPS_MANAGED\",\n        ),\n    ],\n    rule_format=\"v2020-03-04\",\n    rules=data[\"akamai_property_rules_template\"][\"example\"][\"json\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Akamai.Property(\"example\", new Akamai.PropertyArgs\n        {\n            ProductId = \"prd_SPM\",\n            ContractId = @var.Contractid,\n            GroupId = @var.Groupid,\n            Hostnames = \n            {\n                new Akamai.Inputs.PropertyHostnameArgs\n                {\n                    CnameFrom = \"example.com\",\n                    CnameTo = \"example.com.edgekey.net\",\n                    CertProvisioningType = \"DEFAULT\",\n                },\n                new Akamai.Inputs.PropertyHostnameArgs\n                {\n                    CnameFrom = \"www.example.com\",\n                    CnameTo = \"example.com.edgesuite.net\",\n                    CertProvisioningType = \"CPS_MANAGED\",\n                },\n            },\n            RuleFormat = \"v2020-03-04\",\n            Rules = data.Akamai_property_rules_template.Example.Json,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewProperty(ctx, \"example\", \u0026akamai.PropertyArgs{\n\t\t\tProductId:  pulumi.String(\"prd_SPM\"),\n\t\t\tContractId: pulumi.Any(_var.Contractid),\n\t\t\tGroupId:    pulumi.Any(_var.Groupid),\n\t\t\tHostnames: PropertyHostnameArray{\n\t\t\t\t\u0026PropertyHostnameArgs{\n\t\t\t\t\tCnameFrom:            pulumi.String(\"example.com\"),\n\t\t\t\t\tCnameTo:              pulumi.String(\"example.com.edgekey.net\"),\n\t\t\t\t\tCertProvisioningType: pulumi.String(\"DEFAULT\"),\n\t\t\t\t},\n\t\t\t\t\u0026PropertyHostnameArgs{\n\t\t\t\t\tCnameFrom:            pulumi.String(\"www.example.com\"),\n\t\t\t\t\tCnameTo:              pulumi.String(\"example.com.edgesuite.net\"),\n\t\t\t\t\tCertProvisioningType: pulumi.String(\"CPS_MANAGED\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRuleFormat: pulumi.String(\"v2020-03-04\"),\n\t\t\tRules:      pulumi.Any(data.Akamai_property_rules_template.Example.Json),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `name` - (Required) The property name.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `product_id` - (Required to create, otherwise Optional) A product's unique ID, including the `prd_` prefix.\n* `hostnames` - (Optional) A mapping of public hostnames to edge hostnames. See the `akamai.getPropertyHostnames` data source for details on the necessary DNS configuration.\n\n    \u003e **Note** Starting from version 1.5.0, the `hostnames` argument supports a new block type. If you created your code and state in version 1.4 or earlier, you need to manually update your configuration and replace the previous input for `hostnames` with the new syntax. This error indicates that the state is outdated: `Error: missing expected [`. To fix it, remove `akamai.Property` from the state and import it again.\n\n    Requires these additional arguments:\n\n      * `cname_from` - (Required) A string containing the original origin's hostname. For example, `\"example.org\"`.\n      * `cname_to` - (Required) A string containing the hostname for edge content. For example,  `\"example.org.edgesuite.net\"`.\n      * `cert_provisioning_type` - (Required) The certificate's provisioning type, either the default `CPS_MANAGED` type for the custom certificates you provision with the [Certificate Provisioning System (CPS)](https://learn.akamai.com/en-us/products/core_features/certificate_provisioning_system.html), or `DEFAULT` for certificates provisioned automatically.\n* `rules` - (Optional) A JSON-encoded rule tree for a given property. For this argument, you need to enter a complete JSON rule tree, unless you set up a series of JSON templates. See the `akamai.getPropertyRules` data source.\n* `rule_format` - (Optional) The [rule format](https://developer.akamai.com/api/core_features/property_manager/v1.html#getruleformats) to use. Uses the latest rule format by default.\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `group` - (Deprecated) Replaced by `group_id`. Maintained for legacy purposes.\n* `product` - (Deprecated) Optional argument replaced by the now required `product_id`. Maintained for legacy purposes.\n\n## Attribute reference\n\nThe resource returns these attributes:\n\n* `rule_errors` - The contents of `errors` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.\n* `latest_version` - The version of the property you've created or updated rules for. The Akamai Provider always uses the latest version or creates a new version if latest is not editable.\n* `production_version` - The current version of the property active on the Akamai production network.\n* `staging_version` - The current version of the property active on the Akamai staging network.\n\n### Deprecated attributes\n\n* `rule_warnings` - (Deprecated) Rule warnings are no longer maintained in the state file. You can still see the warnings in logs.\n\n\n## Import\n\nBasic Usagehcl resource \"akamai_property\" \"example\" {\n\n\n\n # (resource arguments)\n\n } You can import the latest Akamai property version by using either the `property_id` or a comma-delimited string of the property, contract, and group IDs. You'll need to enter the string of IDs if the property belongs to multiple groups or contracts. If using the string of IDs, you need to enter them in this order`property_id,contract_id,group_id` To import a specific property version, pass additional parameters, either* `LATEST` to import the latest version of the property, regardless of whether it's active or not. This works the same as providing just the `property_id` or a string of the property, contract, and group IDs, which is the default behavior. * `PRODUCTION`, `PROD`, or `P` to import the latest version activated on the production environment. * `STAGING`, `STAGE`, `STAG`, or `S` to import the latest version activated on the staging environment. * Version number or version number with the `ver_` prefix to import a specific property version. For example `3` and `ver_3` correspond to the same version number. Here are some examples for the latest property version\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123\n```\n\n Or\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,ctr_1-AB123,grp_123\n```\n\n Here are some examples for the latest active property version on the production network\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,P\n```\n\n Or\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,ctr_1-AB123,grp_123,PROD\n```\n\n Here are some examples for the specific property version\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,3\n```\n\n Or\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,ctr_1-AB123,grp_123,ver_3\n```\n\n ",
            "properties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "The setting \"contact\" has been deprecated."
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
                    }
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Property's current latest version number\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "The setting \"origin\" has been deprecated."
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "productionVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in production (zero when not active in production)\n"
                },
                "readVersion": {
                    "type": "integer",
                    "description": "Required property's version to be read\n"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyRuleError:PropertyRuleError"
                    }
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyRuleWarning:PropertyRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "stagingVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "The setting \"variables\" has been deprecated."
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "latestVersion",
                "name",
                "product",
                "productId",
                "productionVersion",
                "readVersion",
                "ruleErrors",
                "ruleFormat",
                "ruleWarnings",
                "rules",
                "stagingVersion"
            ],
            "inputProperties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "The setting \"contact\" has been deprecated."
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
                    }
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "The setting \"origin\" has been deprecated."
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyRuleWarning:PropertyRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "The setting \"variables\" has been deprecated."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Property resources.\n",
                "properties": {
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "The setting \"contact\" has been deprecated."
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID to be assigned to the Property\n"
                    },
                    "cpCode": {
                        "type": "string",
                        "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Group ID to be assigned to the Property\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
                        }
                    },
                    "isSecure": {
                        "type": "boolean",
                        "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "Property's current latest version number\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name to give to the Property (must be unique)\n"
                    },
                    "origins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyOrigin:PropertyOrigin"
                        },
                        "deprecationMessage": "The setting \"origin\" has been deprecated."
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string",
                        "description": "Product ID to be assigned to the Property\n"
                    },
                    "productionVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in production (zero when not active in production)\n"
                    },
                    "readVersion": {
                        "type": "integer",
                        "description": "Required property's version to be read\n"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyRuleError:PropertyRuleError"
                        }
                    },
                    "ruleFormat": {
                        "type": "string",
                        "description": "Specify the rule format version (defaults to latest version available when created)\n"
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyRuleWarning:PropertyRuleWarning"
                        },
                        "deprecationMessage": "Rule warnings will not be set in state anymore"
                    },
                    "rules": {
                        "type": "string",
                        "description": "Property Rules as JSON\n"
                    },
                    "stagingVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                    },
                    "variables": {
                        "type": "string",
                        "deprecationMessage": "The setting \"variables\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/property:Property"
                }
            ]
        },
        "akamai:index/propertyActivation:PropertyActivation": {
            "description": "The `akamai.PropertyActivation` resource lets you activate a property version. An activation deploys the version to either the Akamai staging or production network. You can activate a specific version multiple times if you need to.  \n\nBefore activating on production, activate on staging first. This way you can detect any problems in staging before your changes progress to production.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst email = \"user@example.org\";\nconst ruleFormat = \"v2020-03-04\";\nconst example = new akamai.Property(\"example\", {\n    productId: \"prd_SPM\",\n    contractId: _var.contractid,\n    groupId: _var.groupid,\n    hostnames: {\n        \"example.org\": \"example.org.edgesuite.net\",\n        \"www.example.org\": \"example.org.edgesuite.net\",\n        \"sub.example.org\": \"sub.example.org.edgesuite.net\",\n    },\n    ruleFormat: ruleFormat,\n    rules: fs.readFileSync(`${path.module}/main.json`),\n});\nconst exampleStaging = new akamai.PropertyActivation(\"exampleStaging\", {\n    propertyId: example.id,\n    contacts: [email],\n    version: example.latestVersion,\n    note: \"Sample activation\",\n});\nconst exampleProd = new akamai.PropertyActivation(\"exampleProd\", {\n    propertyId: example.id,\n    network: \"PRODUCTION\",\n    version: 3,\n    contacts: [email],\n}, {\n    dependsOn: [exampleStaging],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nemail = \"user@example.org\"\nrule_format = \"v2020-03-04\"\nexample = akamai.Property(\"example\",\n    product_id=\"prd_SPM\",\n    contract_id=var[\"contractid\"],\n    group_id=var[\"groupid\"],\n    hostnames={\n        \"example.org\": \"example.org.edgesuite.net\",\n        \"www.example.org\": \"example.org.edgesuite.net\",\n        \"sub.example.org\": \"sub.example.org.edgesuite.net\",\n    },\n    rule_format=rule_format,\n    rules=(lambda path: open(path).read())(f\"{path['module']}/main.json\"))\nexample_staging = akamai.PropertyActivation(\"exampleStaging\",\n    property_id=example.id,\n    contacts=[email],\n    version=example.latest_version,\n    note=\"Sample activation\")\nexample_prod = akamai.PropertyActivation(\"exampleProd\",\n    property_id=example.id,\n    network=\"PRODUCTION\",\n    version=3,\n    contacts=[email],\n    opts=pulumi.ResourceOptions(depends_on=[example_staging]))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var email = \"user@example.org\";\n        var ruleFormat = \"v2020-03-04\";\n        var example = new Akamai.Property(\"example\", new Akamai.PropertyArgs\n        {\n            ProductId = \"prd_SPM\",\n            ContractId = @var.Contractid,\n            GroupId = @var.Groupid,\n            Hostnames = \n            {\n                { \"example.org\", \"example.org.edgesuite.net\" },\n                { \"www.example.org\", \"example.org.edgesuite.net\" },\n                { \"sub.example.org\", \"sub.example.org.edgesuite.net\" },\n            },\n            RuleFormat = ruleFormat,\n            Rules = File.ReadAllText($\"{path.Module}/main.json\"),\n        });\n        var exampleStaging = new Akamai.PropertyActivation(\"exampleStaging\", new Akamai.PropertyActivationArgs\n        {\n            PropertyId = example.Id,\n            Contacts = \n            {\n                email,\n            },\n            Version = example.LatestVersion,\n            Note = \"Sample activation\",\n        });\n        var exampleProd = new Akamai.PropertyActivation(\"exampleProd\", new Akamai.PropertyActivationArgs\n        {\n            PropertyId = example.Id,\n            Network = \"PRODUCTION\",\n            Version = 3,\n            Contacts = \n            {\n                email,\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                exampleStaging,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\temail := \"user@example.org\"\n\t\truleFormat := \"v2020-03-04\"\n\t\texample, err := akamai.NewProperty(ctx, \"example\", \u0026akamai.PropertyArgs{\n\t\t\tProductId:  pulumi.String(\"prd_SPM\"),\n\t\t\tContractId: pulumi.Any(_var.Contractid),\n\t\t\tGroupId:    pulumi.Any(_var.Groupid),\n\t\t\tHostnames: PropertyHostnameArray{\n\t\t\t\tExample.org:     \"example.org.edgesuite.net\",\n\t\t\t\tWww.example.org: \"example.org.edgesuite.net\",\n\t\t\t\tSub.example.org: \"sub.example.org.edgesuite.net\",\n\t\t\t},\n\t\t\tRuleFormat: pulumi.String(ruleFormat),\n\t\t\tRules:      readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/main.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleStaging, err := akamai.NewPropertyActivation(ctx, \"exampleStaging\", \u0026akamai.PropertyActivationArgs{\n\t\t\tPropertyId: example.ID(),\n\t\t\tContacts: pulumi.StringArray{\n\t\t\t\tpulumi.String(email),\n\t\t\t},\n\t\t\tVersion: example.LatestVersion,\n\t\t\tNote:    pulumi.String(\"Sample activation\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewPropertyActivation(ctx, \"exampleProd\", \u0026akamai.PropertyActivationArgs{\n\t\t\tPropertyId: example.ID(),\n\t\t\tNetwork:    pulumi.String(\"PRODUCTION\"),\n\t\t\tVersion:    pulumi.Int(3),\n\t\t\tContacts: pulumi.StringArray{\n\t\t\t\tpulumi.String(email),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\texampleStaging,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThe following arguments are supported:\n\n* `property_id` - (Required) The property's unique identifier, including the `prp_` prefix.\n* `contact` - (Required) One or more email addresses to send activation status changes to.\n* `version` - (Required) The property version to activate. Previously this field was optional. It now depends on the `akamai.Property` resource to identify latest instead of calculating it locally.  This association helps keep the dependency tree properly aligned. To always use the latest version, enter this value `{resource}.{resource identifier}.{field name}`. Using the example code above, the entry would be `akamai_property.example.latest_version` since we want the value of the `latest_version` attribute in the `akamai.Property` resource labeled `example`.\n* `network` - (Optional) Akamai network to activate on, either `STAGING` or `PRODUCTION`. `STAGING` is the default.\n* `note` - (Optional) A log message you can assign to the activation request.\n* `auto_acknowledge_rule_warnings` - (Optional) Whether the activation should proceed despite any warnings. By default set to `true`.\n\n### Deprecated arguments\n\n* `property` - (Deprecated) Replaced by `property_id`. Maintained for legacy purposes.\n\n## Attribute reference\n\nThe following attributes are returned:\n\n* `id` - The unique identifier for this activation.\n* `warnings` - The contents of `warnings` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.\n* `errors` - The contents of `errors` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.\n* `activation_id` - The ID given to the activation event while it's in progress.\n* `status` - The property version's activation status on the selected network.\n\n### Deprecated attributes\n\n* `rule_warnings` - (Deprecated) Rule warnings are no longer maintained in the state file. You can still see the warnings in logs.\n",
            "properties": {
                "activationId": {
                    "type": "string"
                },
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "description": "assigns a log message to the activation request\n"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
                    }
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "warnings": {
                    "type": "string"
                }
            },
            "required": [
                "activationId",
                "contacts",
                "errors",
                "property",
                "propertyId",
                "ruleErrors",
                "ruleWarnings",
                "status",
                "version",
                "warnings"
            ],
            "inputProperties": {
                "activationId": {
                    "type": "string"
                },
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "network": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "description": "assigns a log message to the activation request\n"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
                    }
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "contacts",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyActivation resources.\n",
                "properties": {
                    "activationId": {
                        "type": "string"
                    },
                    "autoAcknowledgeRuleWarnings": {
                        "type": "boolean",
                        "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errors": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string",
                        "description": "assigns a log message to the activation request\n"
                    },
                    "property": {
                        "type": "string",
                        "deprecationMessage": "The setting \"property\" has been deprecated."
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
                        }
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                        },
                        "deprecationMessage": "Rule warnings will not be set in state anymore"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "warnings": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/propertyActivation:PropertyActivation"
                }
            ]
        },
        "akamai:index/propertyVariables:PropertyVariables": {
            "properties": {
                "json": {
                    "type": "string",
                    "description": "JSON variables representation\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                }
            },
            "required": [
                "json"
            ],
            "inputProperties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyVariables resources.\n",
                "properties": {
                    "json": {
                        "type": "string",
                        "description": "JSON variables representation\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyVariablesVariable:PropertyVariablesVariable"
                        },
                        "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/propertyVariables:PropertyVariables"
                }
            ]
        },
        "akamai:properties/cpCode:CpCode": {
            "properties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "name",
                "product",
                "productId"
            ],
            "inputProperties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpCode resources.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.CpCode has been deprecated in favor of akamai.CpCode"
        },
        "akamai:properties/edgeHostName:EdgeHostName": {
            "properties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "edgeHostname",
                "group",
                "groupId",
                "ipBehavior",
                "product",
                "productId"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "edgeHostname",
                "ipBehavior"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeHostName resources.\n",
                "properties": {
                    "certificate": {
                        "type": "integer"
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "edgeHostname": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "ipBehavior": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.EdgeHostName has been deprecated in favor of akamai.EdgeHostName"
        },
        "akamai:properties/property:Property": {
            "properties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "The setting \"contact\" has been deprecated."
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyHostname:PropertyHostname"
                    }
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Property's current latest version number\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "The setting \"origin\" has been deprecated."
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "productionVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in production (zero when not active in production)\n"
                },
                "readVersion": {
                    "type": "integer",
                    "description": "Required property's version to be read\n"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyRuleError:PropertyRuleError"
                    }
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyRuleWarning:PropertyRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "stagingVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "The setting \"variables\" has been deprecated."
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "latestVersion",
                "name",
                "product",
                "productId",
                "productionVersion",
                "readVersion",
                "ruleErrors",
                "ruleFormat",
                "ruleWarnings",
                "rules",
                "stagingVersion"
            ],
            "inputProperties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "The setting \"contact\" has been deprecated."
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyHostname:PropertyHostname"
                    }
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "The setting \"origin\" has been deprecated."
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyRuleWarning:PropertyRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "The setting \"variables\" has been deprecated."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Property resources.\n",
                "properties": {
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "The setting \"contact\" has been deprecated."
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID to be assigned to the Property\n"
                    },
                    "cpCode": {
                        "type": "string",
                        "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Group ID to be assigned to the Property\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyHostname:PropertyHostname"
                        }
                    },
                    "isSecure": {
                        "type": "boolean",
                        "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "Property's current latest version number\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name to give to the Property (must be unique)\n"
                    },
                    "origins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyOrigin:PropertyOrigin"
                        },
                        "deprecationMessage": "The setting \"origin\" has been deprecated."
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string",
                        "description": "Product ID to be assigned to the Property\n"
                    },
                    "productionVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in production (zero when not active in production)\n"
                    },
                    "readVersion": {
                        "type": "integer",
                        "description": "Required property's version to be read\n"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyRuleError:PropertyRuleError"
                        }
                    },
                    "ruleFormat": {
                        "type": "string",
                        "description": "Specify the rule format version (defaults to latest version available when created)\n"
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyRuleWarning:PropertyRuleWarning"
                        },
                        "deprecationMessage": "Rule warnings will not be set in state anymore"
                    },
                    "rules": {
                        "type": "string",
                        "description": "Property Rules as JSON\n"
                    },
                    "stagingVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                    },
                    "variables": {
                        "type": "string",
                        "deprecationMessage": "The setting \"variables\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.Property has been deprecated in favor of akamai.Property"
        },
        "akamai:properties/propertyActivation:PropertyActivation": {
            "properties": {
                "activationId": {
                    "type": "string"
                },
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "description": "assigns a log message to the activation request\n"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyActivationRuleError:PropertyActivationRuleError"
                    }
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "warnings": {
                    "type": "string"
                }
            },
            "required": [
                "activationId",
                "contacts",
                "errors",
                "property",
                "propertyId",
                "ruleErrors",
                "ruleWarnings",
                "status",
                "version",
                "warnings"
            ],
            "inputProperties": {
                "activationId": {
                    "type": "string"
                },
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "network": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "description": "assigns a log message to the activation request\n"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyActivationRuleError:PropertyActivationRuleError"
                    }
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "contacts",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyActivation resources.\n",
                "properties": {
                    "activationId": {
                        "type": "string"
                    },
                    "autoAcknowledgeRuleWarnings": {
                        "type": "boolean",
                        "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errors": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string",
                        "description": "assigns a log message to the activation request\n"
                    },
                    "property": {
                        "type": "string",
                        "deprecationMessage": "The setting \"property\" has been deprecated."
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyActivationRuleError:PropertyActivationRuleError"
                        }
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                        },
                        "deprecationMessage": "Rule warnings will not be set in state anymore"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "warnings": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.PropertyActivation has been deprecated in favor of akamai.PropertyActivation"
        },
        "akamai:properties/propertyVariables:PropertyVariables": {
            "properties": {
                "json": {
                    "type": "string",
                    "description": "JSON variables representation\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                }
            },
            "required": [
                "json"
            ],
            "inputProperties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyVariables resources.\n",
                "properties": {
                    "json": {
                        "type": "string",
                        "description": "JSON variables representation\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable"
                        },
                        "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.PropertyVariables has been deprecated in favor of akamai.PropertyVariables"
        },
        "akamai:trafficmanagement/gtmASmap:GtmASmap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmASmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmASmap has been deprecated in favor of akamai.GtmAsmap"
        },
        "akamai:trafficmanagement/gtmCidrmap:GtmCidrmap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmCidrmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmCidrmap has been deprecated in favor of akamai.GtmCidrmap"
        },
        "akamai:trafficmanagement/gtmDatacenter:GtmDatacenter": {
            "properties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "integer"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "scorePenalty": {
                    "type": "integer"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "virtual": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "datacenterId",
                "domain",
                "pingInterval",
                "pingPacketSize",
                "scorePenalty",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "virtual"
            ],
            "inputProperties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDatacenter resources.\n",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "cloneOf": {
                        "type": "integer"
                    },
                    "cloudServerHostHeaderOverride": {
                        "type": "boolean"
                    },
                    "cloudServerTargeting": {
                        "type": "boolean"
                    },
                    "continent": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "defaultLoadObject": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "scorePenalty": {
                        "type": "integer"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "stateOrProvince": {
                        "type": "string"
                    },
                    "virtual": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmDatacenter has been deprecated in favor of akamai.GtmDatacenter"
        },
        "akamai:trafficmanagement/gtmDomain:GtmDomain": {
            "properties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultHealthMax": {
                    "type": "number"
                },
                "defaultHealthMultiplier": {
                    "type": "number"
                },
                "defaultHealthThreshold": {
                    "type": "number"
                },
                "defaultMaxUnreachablePenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "defaultUnreachableThreshold": {
                    "type": "number"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapUpdateInterval": {
                    "type": "integer"
                },
                "maxProperties": {
                    "type": "integer"
                },
                "maxResources": {
                    "type": "integer"
                },
                "maxTestTimeout": {
                    "type": "number"
                },
                "maxTtl": {
                    "type": "integer"
                },
                "minPingableRegionFraction": {
                    "type": "number"
                },
                "minTestInterval": {
                    "type": "integer"
                },
                "minTtl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "roundRobinPrefix": {
                    "type": "string"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultHealthMax",
                "defaultHealthMultiplier",
                "defaultHealthThreshold",
                "defaultMaxUnreachablePenalty",
                "defaultUnreachableThreshold",
                "mapUpdateInterval",
                "maxProperties",
                "maxResources",
                "maxTestTimeout",
                "maxTtl",
                "minPingableRegionFraction",
                "minTestInterval",
                "minTtl",
                "name",
                "pingInterval",
                "pingPacketSize",
                "roundRobinPrefix",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "type"
            ],
            "inputProperties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDomain resources.\n",
                "properties": {
                    "cnameCoalescingEnabled": {
                        "type": "boolean"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "defaultErrorPenalty": {
                        "type": "integer"
                    },
                    "defaultHealthMax": {
                        "type": "number"
                    },
                    "defaultHealthMultiplier": {
                        "type": "number"
                    },
                    "defaultHealthThreshold": {
                        "type": "number"
                    },
                    "defaultMaxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "defaultSslClientCertificate": {
                        "type": "string"
                    },
                    "defaultSslClientPrivateKey": {
                        "type": "string"
                    },
                    "defaultTimeoutPenalty": {
                        "type": "integer"
                    },
                    "defaultUnreachableThreshold": {
                        "type": "number"
                    },
                    "emailNotificationLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "endUserMappingEnabled": {
                        "type": "boolean"
                    },
                    "group": {
                        "type": "string"
                    },
                    "loadFeedback": {
                        "type": "boolean"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapUpdateInterval": {
                        "type": "integer"
                    },
                    "maxProperties": {
                        "type": "integer"
                    },
                    "maxResources": {
                        "type": "integer"
                    },
                    "maxTestTimeout": {
                        "type": "number"
                    },
                    "maxTtl": {
                        "type": "integer"
                    },
                    "minPingableRegionFraction": {
                        "type": "number"
                    },
                    "minTestInterval": {
                        "type": "integer"
                    },
                    "minTtl": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "roundRobinPrefix": {
                        "type": "string"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmDomain has been deprecated in favor of akamai.GtmDomain"
        },
        "akamai:trafficmanagement/gtmGeomap:GtmGeomap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmGeomap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmGeomap has been deprecated in favor of akamai.GtmGeomap"
        },
        "akamai:trafficmanagement/gtmProperty:GtmProperty": {
            "properties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                },
                "weightedHashBitsForIpv4": {
                    "type": "integer"
                },
                "weightedHashBitsForIpv6": {
                    "type": "integer"
                }
            },
            "required": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "name",
                "scoreAggregationType",
                "type",
                "weightedHashBitsForIpv4",
                "weightedHashBitsForIpv6"
            ],
            "inputProperties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "scoreAggregationType",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmProperty resources.\n",
                "properties": {
                    "backupCname": {
                        "type": "string"
                    },
                    "backupIp": {
                        "type": "string"
                    },
                    "balanceByDownloadScore": {
                        "type": "boolean"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "dynamicTtl": {
                        "type": "integer"
                    },
                    "failbackDelay": {
                        "type": "integer"
                    },
                    "failoverDelay": {
                        "type": "integer"
                    },
                    "ghostDemandReporting": {
                        "type": "boolean"
                    },
                    "handoutLimit": {
                        "type": "integer"
                    },
                    "handoutMode": {
                        "type": "string"
                    },
                    "healthMax": {
                        "type": "number"
                    },
                    "healthMultiplier": {
                        "type": "number"
                    },
                    "healthThreshold": {
                        "type": "number"
                    },
                    "ipv6": {
                        "type": "boolean"
                    },
                    "livenessTests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                        }
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapName": {
                        "type": "string"
                    },
                    "maxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "minLiveFraction": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scoreAggregationType": {
                        "type": "string"
                    },
                    "staticRrSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                        }
                    },
                    "staticTtl": {
                        "type": "integer"
                    },
                    "stickinessBonusConstant": {
                        "type": "integer"
                    },
                    "stickinessBonusPercentage": {
                        "type": "integer"
                    },
                    "trafficTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "unreachableThreshold": {
                        "type": "number"
                    },
                    "useComputedTargets": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    },
                    "weightedHashBitsForIpv4": {
                        "type": "integer"
                    },
                    "weightedHashBitsForIpv6": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmProperty has been deprecated in favor of akamai.GtmProperty"
        },
        "akamai:trafficmanagement/gtmResource:GtmResource": {
            "properties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "aggregationType",
                "domain",
                "name",
                "type"
            ],
            "inputProperties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "aggregationType",
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmResource resources.\n",
                "properties": {
                    "aggregationType": {
                        "type": "string"
                    },
                    "constrainedProperty": {
                        "type": "string"
                    },
                    "decayRate": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "hostHeader": {
                        "type": "string"
                    },
                    "leaderString": {
                        "type": "string"
                    },
                    "leastSquaresDecay": {
                        "type": "number"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "maxUMultiplicativeIncrement": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resourceInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "upperBound": {
                        "type": "integer"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmResource has been deprecated in favor of akamai.GtmResource"
        }
    },
    "functions": {
        "akamai:edgedns/getAuthoritiesSet:getAuthoritiesSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getAuthoritiesSet.\n",
                "properties": {
                    "contract": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contract"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthoritiesSet.\n",
                "properties": {
                    "authorities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contract": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authorities",
                    "contract",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.edgedns.getAuthoritiesSet has been deprecated in favor of akamai.getAuthoritiesSet"
        },
        "akamai:edgedns/getDnsRecordSet:getDnsRecordSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "recordType",
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "rdatas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "rdatas",
                    "recordType",
                    "zone",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.edgedns.getDnsRecordSet has been deprecated in favor of akamai.getDnsRecordSet"
        },
        "akamai:index/getAppSecAdvancedSettingsLogging:getAppSecAdvancedSettingsLogging": {
            "description": "**Scopes**: Security configuration; security policy\n\nReturns information about your HTTP header logging controls. By default, information is returned for all the security policies in the configuration; however, you can return data for a single policy by using the `security_policy_id` parameter. The returned information is described in the [ConfigHeaderLog members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#a6d1c316) section of the Application Security API.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/advanced-settings/logging](https://developer.akamai.com/api/cloud_security/application_security/v1.html#gethttpheaderloggingforaconfiguration)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst customRules = configuration.then(configuration =\u003e akamai.getAppSecCustomRules({\n    configId: configuration.configId,\n}));\nexport const customRulesOutputText = customRules.then(customRules =\u003e customRules.outputText);\nexport const customRulesJson = customRules.then(customRules =\u003e customRules.json);\nexport const customRulesConfigId = customRules.then(customRules =\u003e customRules.configId);\nconst specificCustomRule = configuration.then(configuration =\u003e akamai.getAppSecCustomRules({\n    configId: configuration.configId,\n    customRuleId: \"60029316\",\n}));\nexport const specificCustomRuleJson = specificCustomRule.then(specificCustomRule =\u003e specificCustomRule.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\ncustom_rules = akamai.get_app_sec_custom_rules(config_id=configuration.config_id)\npulumi.export(\"customRulesOutputText\", custom_rules.output_text)\npulumi.export(\"customRulesJson\", custom_rules.json)\npulumi.export(\"customRulesConfigId\", custom_rules.config_id)\nspecific_custom_rule = akamai.get_app_sec_custom_rules(config_id=configuration.config_id,\n    custom_rule_id=60029316)\npulumi.export(\"specificCustomRuleJson\", specific_custom_rule.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var customRules = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomRules.InvokeAsync(new Akamai.GetAppSecCustomRulesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.CustomRulesOutputText = customRules.Apply(customRules =\u003e customRules.OutputText);\n        this.CustomRulesJson = customRules.Apply(customRules =\u003e customRules.Json);\n        this.CustomRulesConfigId = customRules.Apply(customRules =\u003e customRules.ConfigId);\n        var specificCustomRule = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomRules.InvokeAsync(new Akamai.GetAppSecCustomRulesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            CustomRuleId = 60029316,\n        })));\n        this.SpecificCustomRuleJson = specificCustomRule.Apply(specificCustomRule =\u003e specificCustomRule.Json);\n    }\n\n    [Output(\"customRulesOutputText\")]\n    public Output\u003cstring\u003e CustomRulesOutputText { get; set; }\n    [Output(\"customRulesJson\")]\n    public Output\u003cstring\u003e CustomRulesJson { get; set; }\n    [Output(\"customRulesConfigId\")]\n    public Output\u003cstring\u003e CustomRulesConfigId { get; set; }\n    [Output(\"specificCustomRuleJson\")]\n    public Output\u003cstring\u003e SpecificCustomRuleJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomRules, err := akamai.GetAppSecCustomRules(ctx, \u0026GetAppSecCustomRulesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customRulesOutputText\", customRules.OutputText)\n\t\tctx.Export(\"customRulesJson\", customRules.Json)\n\t\tctx.Export(\"customRulesConfigId\", customRules.ConfigId)\n\t\topt1 := 60029316\n\t\tspecificCustomRule, err := akamai.GetAppSecCustomRules(ctx, \u0026GetAppSecCustomRulesArgs{\n\t\t\tConfigId:     configuration.ConfigId,\n\t\t\tCustomRuleId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"specificCustomRuleJson\", specificCustomRule.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of information about the logging settings.\n- `output_text`. Tabular report showing the logging settings.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAdvancedSettingsLogging.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the logging settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the logging settings. If not included, information is returned for all your security policies.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAdvancedSettingsLogging.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecAdvancedSettingsPragmaHeader:getAppSecAdvancedSettingsPragmaHeader": {
            "description": "**Scopes**: Security configuration; security policy\n\nReturns pragma header settings information. This HTTP header provides information about such things as: the edge routers used in a transaction; the Akamai IP addresses involved; information about whether a request was cached or not; and so on. By default, pragma headers are removed from all responses.\n\nAdditional information is available from the [PragmaHeader members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#64c92ba1) section of the Application Security API.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/advanced-settings/pragma-header](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getpragmaheaderconfiguration)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst pragmaHeader = configuration.then(configuration =\u003e akamai.getAppSecAdvancedSettingsPragmaHeader({\n    configId: configuration.configId,\n}));\nexport const advancedSettingsPragmaHeaderOutput = pragmaHeader.then(pragmaHeader =\u003e pragmaHeader.outputText);\nexport const advancedSettingsPragmaHeaderJson = pragmaHeader.then(pragmaHeader =\u003e pragmaHeader.json);\nconst policyPragmaHeader = configuration.then(configuration =\u003e akamai.getAppSecAdvancedSettingsPragmaHeader({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const advancedSettingsPolicyPragmaHeaderOutput = policyPragmaHeader.then(policyPragmaHeader =\u003e policyPragmaHeader.outputText);\nexport const advancedSettingsPolicyPragmaHeaderJson = policyPragmaHeader.then(policyPragmaHeader =\u003e policyPragmaHeader.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\npragma_header = akamai.get_app_sec_advanced_settings_pragma_header(config_id=configuration.config_id)\npulumi.export(\"advancedSettingsPragmaHeaderOutput\", pragma_header.output_text)\npulumi.export(\"advancedSettingsPragmaHeaderJson\", pragma_header.json)\npolicy_pragma_header = akamai.get_app_sec_advanced_settings_pragma_header(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"advancedSettingsPolicyPragmaHeaderOutput\", policy_pragma_header.output_text)\npulumi.export(\"advancedSettingsPolicyPragmaHeaderJson\", policy_pragma_header.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var pragmaHeader = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecAdvancedSettingsPragmaHeader.InvokeAsync(new Akamai.GetAppSecAdvancedSettingsPragmaHeaderArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.AdvancedSettingsPragmaHeaderOutput = pragmaHeader.Apply(pragmaHeader =\u003e pragmaHeader.OutputText);\n        this.AdvancedSettingsPragmaHeaderJson = pragmaHeader.Apply(pragmaHeader =\u003e pragmaHeader.Json);\n        var policyPragmaHeader = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecAdvancedSettingsPragmaHeader.InvokeAsync(new Akamai.GetAppSecAdvancedSettingsPragmaHeaderArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.AdvancedSettingsPolicyPragmaHeaderOutput = policyPragmaHeader.Apply(policyPragmaHeader =\u003e policyPragmaHeader.OutputText);\n        this.AdvancedSettingsPolicyPragmaHeaderJson = policyPragmaHeader.Apply(policyPragmaHeader =\u003e policyPragmaHeader.Json);\n    }\n\n    [Output(\"advancedSettingsPragmaHeaderOutput\")]\n    public Output\u003cstring\u003e AdvancedSettingsPragmaHeaderOutput { get; set; }\n    [Output(\"advancedSettingsPragmaHeaderJson\")]\n    public Output\u003cstring\u003e AdvancedSettingsPragmaHeaderJson { get; set; }\n    [Output(\"advancedSettingsPolicyPragmaHeaderOutput\")]\n    public Output\u003cstring\u003e AdvancedSettingsPolicyPragmaHeaderOutput { get; set; }\n    [Output(\"advancedSettingsPolicyPragmaHeaderJson\")]\n    public Output\u003cstring\u003e AdvancedSettingsPolicyPragmaHeaderJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpragmaHeader, err := akamai.LookupAppSecAdvancedSettingsPragmaHeader(ctx, \u0026GetAppSecAdvancedSettingsPragmaHeaderArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"advancedSettingsPragmaHeaderOutput\", pragmaHeader.OutputText)\n\t\tctx.Export(\"advancedSettingsPragmaHeaderJson\", pragmaHeader.Json)\n\t\topt1 := \"gms1_134637\"\n\t\tpolicyPragmaHeader, err := akamai.LookupAppSecAdvancedSettingsPragmaHeader(ctx, \u0026GetAppSecAdvancedSettingsPragmaHeaderArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"advancedSettingsPolicyPragmaHeaderOutput\", policyPragmaHeader.OutputText)\n\t\tctx.Export(\"advancedSettingsPolicyPragmaHeaderJson\", policyPragmaHeader.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of information about the pragma header settings.\n- `output_text`. Tabular report showing the pragma header settings.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAdvancedSettingsPragmaHeader.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the pragma header settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the pragma header settings. If not included, information is returned for all your security policies.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAdvancedSettingsPragmaHeader.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecAdvancedSettingsPrefetch:getAppSecAdvancedSettingsPrefetch": {
            "description": "**Scopes**: Security configuration\n\nReturns information about your prefetch request settings. By default, the Web Application Firewall only inspects external requests: requests originating outside of your firewall or Akamai's edge servers. When prefetch is enabled, however, internal requests – that is, requests between your origin servers and Akamai's edge servers – can also be inspected by the firewall. The returned information is described in the [PrefetchRequest members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#deb7220d) section of the Application Security API.\n\n**Related** **API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/advanced-settings/prefetch](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getprefetchrequestsforaconfiguration)\n\nExample Usage\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst prefetch = configuration.then(configuration =\u003e akamai.getAppSecAdvancedSettingsPrefetch({\n    configId: configuration.configId,\n}));\nexport const advancedSettingsPrefetchOutput = prefetch.then(prefetch =\u003e prefetch.outputText);\nexport const advancedSettingsPrefetchJson = prefetch.then(prefetch =\u003e prefetch.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nprefetch = akamai.get_app_sec_advanced_settings_prefetch(config_id=configuration.config_id)\npulumi.export(\"advancedSettingsPrefetchOutput\", prefetch.output_text)\npulumi.export(\"advancedSettingsPrefetchJson\", prefetch.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var prefetch = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecAdvancedSettingsPrefetch.InvokeAsync(new Akamai.GetAppSecAdvancedSettingsPrefetchArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.AdvancedSettingsPrefetchOutput = prefetch.Apply(prefetch =\u003e prefetch.OutputText);\n        this.AdvancedSettingsPrefetchJson = prefetch.Apply(prefetch =\u003e prefetch.Json);\n    }\n\n    [Output(\"advancedSettingsPrefetchOutput\")]\n    public Output\u003cstring\u003e AdvancedSettingsPrefetchOutput { get; set; }\n    [Output(\"advancedSettingsPrefetchJson\")]\n    public Output\u003cstring\u003e AdvancedSettingsPrefetchJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tprefetch, err := akamai.LookupAppSecAdvancedSettingsPrefetch(ctx, \u0026GetAppSecAdvancedSettingsPrefetchArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"advancedSettingsPrefetchOutput\", prefetch.OutputText)\n\t\tctx.Export(\"advancedSettingsPrefetchJson\", prefetch.Json)\n\t\treturn nil\n\t})\n}\n```\n\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of information about the prefetch request settings.\n- `output_text`. Tabular report showing the prefetch request settings.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAdvancedSettingsPrefetch.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the prefetch settings.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAdvancedSettingsPrefetch.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecApiEndpoints:getAppSecApiEndpoints": {
            "description": "**Scopes**: Security configuration; security policy\n\nReturns information about the API endpoints associated with a security policy or configuration. The returned information is described in the [Endpoint members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#apiendpoint) section of the Application Security API documentation.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/api-endpoints](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getapiendpoints)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst apiEndpoints = pulumi.output(akamai.getAppSecApiEndpoints({\n    apiName: \"Contracts\",\n    configId: 58843,\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\napi_endpoints = akamai.get_app_sec_api_endpoints(api_name=\"Contracts\",\n    config_id=58843)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var apiEndpoints = Output.Create(Akamai.GetAppSecApiEndpoints.InvokeAsync(new Akamai.GetAppSecApiEndpointsArgs\n        {\n            ApiName = \"Contracts\",\n            ConfigId = 58843,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Contracts\"\n\t\t_, err := akamai.GetAppSecApiEndpoints(ctx, \u0026GetAppSecApiEndpointsArgs{\n\t\t\tApiName:  \u0026opt0,\n\t\t\tConfigId: 58843,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `id_list`. List of API endpoint IDs.\n- `json`. JSON-formatted list of information about the API endpoints.\n- `output_text`. Tabular report showing the ID and name of the API endpoints.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecApiEndpoints.\n",
                "properties": {
                    "apiName": {
                        "type": "string",
                        "description": ". Name of the API endpoint you want to return information for. If not included, information is returned for all your API endpoints.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the API endpoints.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the API endpoints. If not included, information is returned for all your security policies.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecApiEndpoints.\n",
                "properties": {
                    "apiName": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "idLists": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "idLists",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecApiRequestConstraints:getAppSecApiRequestConstraints": {
            "description": "**Scopes**: Security policy; API endpoint\n\nReturns information about API endpoint constraints and actions. The returned information is described in the [API Constraints members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getapirequestconstraints) section of the Application Security API.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/api-request-constraints](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getapirequestconstraints)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst apisRequestConstraints = configuration.then(configuration =\u003e akamai.getAppSecApiRequestConstraints({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const apisConstraintsText = apisRequestConstraints.then(apisRequestConstraints =\u003e apisRequestConstraints.outputText);\nexport const apisConstraintsJson = apisRequestConstraints.then(apisRequestConstraints =\u003e apisRequestConstraints.json);\nconst apiRequestConstraints = configuration.then(configuration =\u003e akamai.getAppSecApiRequestConstraints({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n    apiId: 624913,\n}));\nexport const apiConstraintsText = apiRequestConstraints.then(apiRequestConstraints =\u003e apiRequestConstraints.outputText);\nexport const apiConstraintsJson = apiRequestConstraints.then(apiRequestConstraints =\u003e apiRequestConstraints.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\napis_request_constraints = akamai.get_app_sec_api_request_constraints(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"apisConstraintsText\", apis_request_constraints.output_text)\npulumi.export(\"apisConstraintsJson\", apis_request_constraints.json)\napi_request_constraints = akamai.get_app_sec_api_request_constraints(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    api_id=624913)\npulumi.export(\"apiConstraintsText\", api_request_constraints.output_text)\npulumi.export(\"apiConstraintsJson\", api_request_constraints.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var apisRequestConstraints = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecApiRequestConstraints.InvokeAsync(new Akamai.GetAppSecApiRequestConstraintsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.ApisConstraintsText = apisRequestConstraints.Apply(apisRequestConstraints =\u003e apisRequestConstraints.OutputText);\n        this.ApisConstraintsJson = apisRequestConstraints.Apply(apisRequestConstraints =\u003e apisRequestConstraints.Json);\n        var apiRequestConstraints = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecApiRequestConstraints.InvokeAsync(new Akamai.GetAppSecApiRequestConstraintsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n            ApiId = 624913,\n        })));\n        this.ApiConstraintsText = apiRequestConstraints.Apply(apiRequestConstraints =\u003e apiRequestConstraints.OutputText);\n        this.ApiConstraintsJson = apiRequestConstraints.Apply(apiRequestConstraints =\u003e apiRequestConstraints.Json);\n    }\n\n    [Output(\"apisConstraintsText\")]\n    public Output\u003cstring\u003e ApisConstraintsText { get; set; }\n    [Output(\"apisConstraintsJson\")]\n    public Output\u003cstring\u003e ApisConstraintsJson { get; set; }\n    [Output(\"apiConstraintsText\")]\n    public Output\u003cstring\u003e ApiConstraintsText { get; set; }\n    [Output(\"apiConstraintsJson\")]\n    public Output\u003cstring\u003e ApiConstraintsJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tapisRequestConstraints, err := akamai.LookupAppSecApiRequestConstraints(ctx, \u0026GetAppSecApiRequestConstraintsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"apisConstraintsText\", apisRequestConstraints.OutputText)\n\t\tctx.Export(\"apisConstraintsJson\", apisRequestConstraints.Json)\n\t\topt1 := 624913\n\t\tapiRequestConstraints, err := akamai.LookupAppSecApiRequestConstraints(ctx, \u0026GetAppSecApiRequestConstraintsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t\tApiId:            \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"apiConstraintsText\", apiRequestConstraints.OutputText)\n\t\tctx.Export(\"apiConstraintsJson\", apiRequestConstraints.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of information about the APIs, their constraints, and their actions.\n- `output_text`. Tabular report of the APIs, their constraints, and their actions.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecApiRequestConstraints.\n",
                "properties": {
                    "apiId": {
                        "type": "integer",
                        "description": ". Unique identifier of the API endpoint you want to return constraint information for.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the API constraints.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the API constraints.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecApiRequestConstraints.\n",
                "properties": {
                    "apiId": {
                        "type": "integer"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecAttackGroups:getAppSecAttackGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAttackGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string",
                        "description": ". Unique name of the attack group you want to return information for. If not included, information is returned for all your attack groups.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the attack group.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the attack group.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAttackGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string"
                    },
                    "attackGroupAction": {
                        "type": "string"
                    },
                    "conditionException": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "attackGroupAction",
                    "conditionException",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecBypassNetworkLists:getAppSecBypassNetworkLists": {
            "description": "**Scopes**: Security configuration\n\nReturns information about the network lists assigned to the bypass network list; networks on this list are not subject to firewall checking. The returned information is described in the [BypassNetworkList members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#bypassnetworklist) section of the Application Security API.\n\nNote that this data source is only applicable to WAP (Web Application Protector) configurations.\n\n**Related API Endpoint**:[/appsec/v1/configs/{configId}/versions/{versionNumber}/bypass-network-lists](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getbypassnetworklistsforawapconfigversion)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst bypassNetworkLists = configuration.then(configuration =\u003e akamai.getAppSecBypassNetworkLists({\n    configId: configuration.configId,\n}));\nexport const bypassNetworkListsOutput = bypassNetworkLists.then(bypassNetworkLists =\u003e bypassNetworkLists.outputText);\nexport const bypassNetworkListsJson = bypassNetworkLists.then(bypassNetworkLists =\u003e bypassNetworkLists.json);\nexport const bypassNetworkListsIdList = bypassNetworkLists.then(bypassNetworkLists =\u003e bypassNetworkLists.bypassNetworkLists);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nbypass_network_lists = akamai.get_app_sec_bypass_network_lists(config_id=configuration.config_id)\npulumi.export(\"bypassNetworkListsOutput\", bypass_network_lists.output_text)\npulumi.export(\"bypassNetworkListsJson\", bypass_network_lists.json)\npulumi.export(\"bypassNetworkListsIdList\", bypass_network_lists.bypass_network_lists)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var bypassNetworkLists = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecBypassNetworkLists.InvokeAsync(new Akamai.GetAppSecBypassNetworkListsArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.BypassNetworkListsOutput = bypassNetworkLists.Apply(bypassNetworkLists =\u003e bypassNetworkLists.OutputText);\n        this.BypassNetworkListsJson = bypassNetworkLists.Apply(bypassNetworkLists =\u003e bypassNetworkLists.Json);\n        this.BypassNetworkListsIdList = bypassNetworkLists.Apply(bypassNetworkLists =\u003e bypassNetworkLists.BypassNetworkLists);\n    }\n\n    [Output(\"bypassNetworkListsOutput\")]\n    public Output\u003cstring\u003e BypassNetworkListsOutput { get; set; }\n    [Output(\"bypassNetworkListsJson\")]\n    public Output\u003cstring\u003e BypassNetworkListsJson { get; set; }\n    [Output(\"bypassNetworkListsIdList\")]\n    public Output\u003cstring\u003e BypassNetworkListsIdList { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbypassNetworkLists, err := akamai.GetAppSecBypassNetworkLists(ctx, \u0026GetAppSecBypassNetworkListsArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"bypassNetworkListsOutput\", bypassNetworkLists.OutputText)\n\t\tctx.Export(\"bypassNetworkListsJson\", bypassNetworkLists.Json)\n\t\tctx.Export(\"bypassNetworkListsIdList\", bypassNetworkLists.BypassNetworkLists)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `bypass_network_list`. List of network IDs.\n- `json`. JSON-formatted list of information about the bypass networks.\n- `output_text`. Tabular report showing the bypass network list information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecBypassNetworkLists.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the bypass network list.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecBypassNetworkLists.\n",
                "properties": {
                    "bypassNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bypassNetworkLists",
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecConfiguration:getAppSecConfiguration": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecConfiguration.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": ". Name of the security configuration you want to return information for. If not included, information is returned for all your security configurations.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "latestVersion": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "productionVersion": {
                        "type": "integer"
                    },
                    "stagingVersion": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "latestVersion",
                    "outputText",
                    "productionVersion",
                    "stagingVersion",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecConfigurationVersion:getAppSecConfigurationVersion": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecConfigurationVersion.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration you want to return version information for.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": ". Version number of the security configuration you want to return information about. If not included, information about all the security configuration's versions is returned.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecConfigurationVersion.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "latestVersion": {
                        "type": "integer"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "productionStatus": {
                        "type": "string"
                    },
                    "stagingStatus": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "latestVersion",
                    "outputText",
                    "productionStatus",
                    "stagingStatus",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecContractsGroups:getAppSecContractsGroups": {
            "description": "**Scopes**: Contract; group\n\nReturns information about the contracts and groups associated with your account. Among other things, this information is required to create a new security configuration and to return a list of the hostnames available for use in a security policy. The returned information for this data source is described in the [List contracts and groups](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcontractsandgroupswithksdorwaf) of the Application Security API.\n\n**Related API Endpoint**: [/appsec/v1/contracts-groups](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcontractsandgroupswithksdorwaf)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst contractsGroups = akamai.getAppSecContractsGroups({\n    contractid: \"5-2WA382\",\n    groupid: 12198,\n});\nexport const contractsGroupsList = contractsGroups.then(contractsGroups =\u003e contractsGroups.outputText);\nexport const contractsGroupsJson = contractsGroups.then(contractsGroups =\u003e contractsGroups.json);\nexport const contractGroupsDefaultContractid = contractsGroups.then(contractsGroups =\u003e contractsGroups.defaultContractid);\nexport const contractGroupsDefaultGroupid = contractsGroups.then(contractsGroups =\u003e contractsGroups.defaultGroupid);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ncontracts_groups = akamai.get_app_sec_contracts_groups(contractid=\"5-2WA382\",\n    groupid=12198)\npulumi.export(\"contractsGroupsList\", contracts_groups.output_text)\npulumi.export(\"contractsGroupsJson\", contracts_groups.json)\npulumi.export(\"contractGroupsDefaultContractid\", contracts_groups.default_contractid)\npulumi.export(\"contractGroupsDefaultGroupid\", contracts_groups.default_groupid)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var contractsGroups = Output.Create(Akamai.GetAppSecContractsGroups.InvokeAsync(new Akamai.GetAppSecContractsGroupsArgs\n        {\n            Contractid = \"5-2WA382\",\n            Groupid = 12198,\n        }));\n        this.ContractsGroupsList = contractsGroups.Apply(contractsGroups =\u003e contractsGroups.OutputText);\n        this.ContractsGroupsJson = contractsGroups.Apply(contractsGroups =\u003e contractsGroups.Json);\n        this.ContractGroupsDefaultContractid = contractsGroups.Apply(contractsGroups =\u003e contractsGroups.DefaultContractid);\n        this.ContractGroupsDefaultGroupid = contractsGroups.Apply(contractsGroups =\u003e contractsGroups.DefaultGroupid);\n    }\n\n    [Output(\"contractsGroupsList\")]\n    public Output\u003cstring\u003e ContractsGroupsList { get; set; }\n    [Output(\"contractsGroupsJson\")]\n    public Output\u003cstring\u003e ContractsGroupsJson { get; set; }\n    [Output(\"contractGroupsDefaultContractid\")]\n    public Output\u003cstring\u003e ContractGroupsDefaultContractid { get; set; }\n    [Output(\"contractGroupsDefaultGroupid\")]\n    public Output\u003cstring\u003e ContractGroupsDefaultGroupid { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"5-2WA382\"\n\t\topt1 := 12198\n\t\tcontractsGroups, err := akamai.GetAppSecContractsGroups(ctx, \u0026GetAppSecContractsGroupsArgs{\n\t\t\tContractid: \u0026opt0,\n\t\t\tGroupid:    \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"contractsGroupsList\", contractsGroups.OutputText)\n\t\tctx.Export(\"contractsGroupsJson\", contractsGroups.Json)\n\t\tctx.Export(\"contractGroupsDefaultContractid\", contractsGroups.DefaultContractid)\n\t\tctx.Export(\"contractGroupsDefaultGroupid\", contractsGroups.DefaultGroupid)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of contract and group information.\n- `output_text`. Tabular report of contract and group information.\n- `default_contractid`. Default contract ID for the specified contract and group.\n- `default_groupid`. Default group ID for the specified contract and group.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecContractsGroups.\n",
                "properties": {
                    "contractid": {
                        "type": "string",
                        "description": ". Unique identifier of an Akamai contract. If not included, information is returned for all the Akamai contracts associated with your account.\n"
                    },
                    "groupid": {
                        "type": "integer",
                        "description": ". Unique identifier of a contract group. If not included, information is returned for all the groups associated with your account.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecContractsGroups.\n",
                "properties": {
                    "contractid": {
                        "type": "string"
                    },
                    "defaultContractid": {
                        "type": "string"
                    },
                    "defaultGroupid": {
                        "type": "integer"
                    },
                    "groupid": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "defaultContractid",
                    "defaultGroupid",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecCustomDeny:getAppSecCustomDeny": {
            "description": "**Scopes**: Security configuration; custom deny\n\nReturns information about custom deny actions: the returned information is described in the [CustomDeny members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#63df3de3) section of the Application Security API. Custom denies allow you to craft your own error messages or redirect pages to use when HTTP requests are denied.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/custom-rules](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcustomdeny)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst customDenyList = configuration.then(configuration =\u003e akamai.getAppSecCustomDeny({\n    configId: configuration.configId,\n}));\nexport const customDenyListOutput = customDenyList.then(customDenyList =\u003e customDenyList.outputText);\nexport const customDenyListJson = customDenyList.then(customDenyList =\u003e customDenyList.json);\nconst customDeny = configuration.then(configuration =\u003e akamai.getAppSecCustomDeny({\n    configId: configuration.configId,\n    customDenyId: \"deny_custom_64386\",\n}));\nexport const customDenyJson = customDeny.then(customDeny =\u003e customDeny.json);\nexport const customDenyOutput = customDeny.then(customDeny =\u003e customDeny.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\ncustom_deny_list = akamai.get_app_sec_custom_deny(config_id=configuration.config_id)\npulumi.export(\"customDenyListOutput\", custom_deny_list.output_text)\npulumi.export(\"customDenyListJson\", custom_deny_list.json)\ncustom_deny = akamai.get_app_sec_custom_deny(config_id=configuration.config_id,\n    custom_deny_id=\"deny_custom_64386\")\npulumi.export(\"customDenyJson\", custom_deny.json)\npulumi.export(\"customDenyOutput\", custom_deny.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var customDenyList = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomDeny.InvokeAsync(new Akamai.GetAppSecCustomDenyArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.CustomDenyListOutput = customDenyList.Apply(customDenyList =\u003e customDenyList.OutputText);\n        this.CustomDenyListJson = customDenyList.Apply(customDenyList =\u003e customDenyList.Json);\n        var customDeny = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomDeny.InvokeAsync(new Akamai.GetAppSecCustomDenyArgs\n        {\n            ConfigId = configuration.ConfigId,\n            CustomDenyId = \"deny_custom_64386\",\n        })));\n        this.CustomDenyJson = customDeny.Apply(customDeny =\u003e customDeny.Json);\n        this.CustomDenyOutput = customDeny.Apply(customDeny =\u003e customDeny.OutputText);\n    }\n\n    [Output(\"customDenyListOutput\")]\n    public Output\u003cstring\u003e CustomDenyListOutput { get; set; }\n    [Output(\"customDenyListJson\")]\n    public Output\u003cstring\u003e CustomDenyListJson { get; set; }\n    [Output(\"customDenyJson\")]\n    public Output\u003cstring\u003e CustomDenyJson { get; set; }\n    [Output(\"customDenyOutput\")]\n    public Output\u003cstring\u003e CustomDenyOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomDenyList, err := akamai.LookupAppSecCustomDeny(ctx, \u0026GetAppSecCustomDenyArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customDenyListOutput\", customDenyList.OutputText)\n\t\tctx.Export(\"customDenyListJson\", customDenyList.Json)\n\t\topt1 := \"deny_custom_64386\"\n\t\tcustomDeny, err := akamai.LookupAppSecCustomDeny(ctx, \u0026GetAppSecCustomDenyArgs{\n\t\t\tConfigId:     configuration.ConfigId,\n\t\t\tCustomDenyId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customDenyJson\", customDeny.Json)\n\t\tctx.Export(\"customDenyOutput\", customDeny.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of custom deny information.\n- `output_text`. Tabular report of the custom deny information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomDeny.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the custom denies.\n"
                    },
                    "customDenyId": {
                        "type": "string",
                        "description": ". Unique identifier of the custom deny you want to return information for. If not included. information is returned for all your custom denies.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomDeny.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customDenyId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecCustomRuleActions:getAppSecCustomRuleActions": {
            "description": "**Scopes**: Security policy; custom rule\n\nRetrieve information about the actions defined for your custom rules. Custom rules are rules that you create yourself: these rules aren't part of Akamai's Kona Rule Set.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/custom-rules/{ruleId}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcustomruleactions)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst customRuleActionsAppSecCustomRuleActions = configuration.then(configuration =\u003e akamai.getAppSecCustomRuleActions({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const customRuleActions = customRuleActionsAppSecCustomRuleActions.then(customRuleActionsAppSecCustomRuleActions =\u003e customRuleActionsAppSecCustomRuleActions.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\ncustom_rule_actions_app_sec_custom_rule_actions = akamai.get_app_sec_custom_rule_actions(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"customRuleActions\", custom_rule_actions_app_sec_custom_rule_actions.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var customRuleActionsAppSecCustomRuleActions = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomRuleActions.InvokeAsync(new Akamai.GetAppSecCustomRuleActionsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.CustomRuleActions = customRuleActionsAppSecCustomRuleActions.Apply(customRuleActionsAppSecCustomRuleActions =\u003e customRuleActionsAppSecCustomRuleActions.OutputText);\n    }\n\n    [Output(\"customRuleActions\")]\n    public Output\u003cstring\u003e CustomRuleActions { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomRuleActionsAppSecCustomRuleActions, err := akamai.GetAppSecCustomRuleActions(ctx, \u0026GetAppSecCustomRuleActionsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customRuleActions\", customRuleActionsAppSecCustomRuleActions.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the ID, name, and action of the custom rules.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomRuleActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the custom rules.\n"
                    },
                    "customRuleId": {
                        "type": "integer",
                        "description": ". Unique identifier of the custom rule you want to return information for. If not included, action information is returned for all your custom rules.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the custom rules.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomRuleActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customRuleId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecCustomRules:getAppSecCustomRules": {
            "description": "**Scopes**: Security configuration; custom rule\n\nReturns a list of the custom rules defined for a security configuration; you can also use this resource to return information for an individual custom rule. Custom rules are rules you have created yourself and are not part of the Kona Rule Set.\n\n**Related API Endpoint**:[/appsec/v1/configs/{configId}/custom-rules](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcustomrules)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst customRules = configuration.then(configuration =\u003e akamai.getAppSecCustomRules({\n    configId: configuration.configId,\n}));\nexport const customRulesOutputText = customRules.then(customRules =\u003e customRules.outputText);\nexport const customRulesJson = customRules.then(customRules =\u003e customRules.json);\nexport const customRulesConfigId = customRules.then(customRules =\u003e customRules.configId);\nconst specificCustomRule = configuration.then(configuration =\u003e akamai.getAppSecCustomRules({\n    configId: configuration.configId,\n    customRuleId: \"60029316\",\n}));\nexport const specificCustomRuleJson = specificCustomRule.then(specificCustomRule =\u003e specificCustomRule.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\ncustom_rules = akamai.get_app_sec_custom_rules(config_id=configuration.config_id)\npulumi.export(\"customRulesOutputText\", custom_rules.output_text)\npulumi.export(\"customRulesJson\", custom_rules.json)\npulumi.export(\"customRulesConfigId\", custom_rules.config_id)\nspecific_custom_rule = akamai.get_app_sec_custom_rules(config_id=configuration.config_id,\n    custom_rule_id=60029316)\npulumi.export(\"specificCustomRuleJson\", specific_custom_rule.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var customRules = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomRules.InvokeAsync(new Akamai.GetAppSecCustomRulesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.CustomRulesOutputText = customRules.Apply(customRules =\u003e customRules.OutputText);\n        this.CustomRulesJson = customRules.Apply(customRules =\u003e customRules.Json);\n        this.CustomRulesConfigId = customRules.Apply(customRules =\u003e customRules.ConfigId);\n        var specificCustomRule = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomRules.InvokeAsync(new Akamai.GetAppSecCustomRulesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            CustomRuleId = 60029316,\n        })));\n        this.SpecificCustomRuleJson = specificCustomRule.Apply(specificCustomRule =\u003e specificCustomRule.Json);\n    }\n\n    [Output(\"customRulesOutputText\")]\n    public Output\u003cstring\u003e CustomRulesOutputText { get; set; }\n    [Output(\"customRulesJson\")]\n    public Output\u003cstring\u003e CustomRulesJson { get; set; }\n    [Output(\"customRulesConfigId\")]\n    public Output\u003cstring\u003e CustomRulesConfigId { get; set; }\n    [Output(\"specificCustomRuleJson\")]\n    public Output\u003cstring\u003e SpecificCustomRuleJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomRules, err := akamai.GetAppSecCustomRules(ctx, \u0026GetAppSecCustomRulesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customRulesOutputText\", customRules.OutputText)\n\t\tctx.Export(\"customRulesJson\", customRules.Json)\n\t\tctx.Export(\"customRulesConfigId\", customRules.ConfigId)\n\t\topt1 := 60029316\n\t\tspecificCustomRule, err := akamai.GetAppSecCustomRules(ctx, \u0026GetAppSecCustomRulesArgs{\n\t\t\tConfigId:     configuration.ConfigId,\n\t\t\tCustomRuleId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"specificCustomRuleJson\", specificCustomRule.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the ID and name of the custom rule information.\n- `json`. JSON-formatted report of the custom rule information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the custom rules\n"
                    },
                    "customRuleId": {
                        "type": "integer",
                        "description": ". Unique identifier of the custom rule you want to return information for. If not included, information is returned for all your custom rules.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customRuleId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecEval:getAppSecEval": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEval.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEval.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecEvalGroups:getAppSecEvalGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEvalGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string",
                        "description": ". Unique identifier of the evaluation attack group you want to return information for. If not included, information is returned for all your evaluation attack groups.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the evaluation attack group.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the evaluation attack group.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEvalGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string"
                    },
                    "attackGroupAction": {
                        "type": "string"
                    },
                    "conditionException": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "attackGroupAction",
                    "conditionException",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecEvalHostnames:getAppSecEvalHostnames": {
            "description": "**Scopes**: Security configuration\n\nReturns the evaluation hostnames for a configuration. In evaluation mode, you use evaluation hosts to monitor how well your configuration settings protects host traffic. (Note that the evaluation host isn't actually protected, and the host takes no action other than recording the actions it would have taken had it been on the production network).\n\nEvaluation mode for hostnames is only available for organizations running Web Application Protector.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/selected-hostnames/eval-hostnames](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getevaluationhostnames)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst evalHostnamesAppSecEvalHostnames = configuration.then(configuration =\u003e akamai.getAppSecEvalHostnames({\n    configId: configuration.configId,\n}));\nexport const evalHostnames = evalHostnamesAppSecEvalHostnames.then(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.hostnames);\nexport const evalHostnamesOutput = evalHostnamesAppSecEvalHostnames.then(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.outputText);\nexport const evalHostnamesJson = evalHostnamesAppSecEvalHostnames.then(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\neval_hostnames_app_sec_eval_hostnames = akamai.get_app_sec_eval_hostnames(config_id=configuration.config_id)\npulumi.export(\"evalHostnames\", eval_hostnames_app_sec_eval_hostnames.hostnames)\npulumi.export(\"evalHostnamesOutput\", eval_hostnames_app_sec_eval_hostnames.output_text)\npulumi.export(\"evalHostnamesJson\", eval_hostnames_app_sec_eval_hostnames.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var evalHostnamesAppSecEvalHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecEvalHostnames.InvokeAsync(new Akamai.GetAppSecEvalHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.EvalHostnames = evalHostnamesAppSecEvalHostnames.Apply(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.Hostnames);\n        this.EvalHostnamesOutput = evalHostnamesAppSecEvalHostnames.Apply(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.OutputText);\n        this.EvalHostnamesJson = evalHostnamesAppSecEvalHostnames.Apply(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.Json);\n    }\n\n    [Output(\"evalHostnames\")]\n    public Output\u003cstring\u003e EvalHostnames { get; set; }\n    [Output(\"evalHostnamesOutput\")]\n    public Output\u003cstring\u003e EvalHostnamesOutput { get; set; }\n    [Output(\"evalHostnamesJson\")]\n    public Output\u003cstring\u003e EvalHostnamesJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tevalHostnamesAppSecEvalHostnames, err := akamai.LookupAppSecEvalHostnames(ctx, \u0026GetAppSecEvalHostnamesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"evalHostnames\", evalHostnamesAppSecEvalHostnames.Hostnames)\n\t\tctx.Export(\"evalHostnamesOutput\", evalHostnamesAppSecEvalHostnames.OutputText)\n\t\tctx.Export(\"evalHostnamesJson\", evalHostnamesAppSecEvalHostnames.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `hostnames`. List of evaluation hostnames.\n- `json`. JSON-formatted list of evaluation hostnames.\n- `output_text`. Tabular report showing evaluation hostnames.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEvalHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration running in evaluation mode.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEvalHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostnames",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecEvalRules:getAppSecEvalRules": {
            "description": "**Scopes**: Security policy; evaluation rule\n\nReturns the action and the condition-exception information for a rule or set of rules being used in evaluation mode.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/eval-rules](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getevalrules)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst evalRule = configuration.then(configuration =\u003e akamai.getAppSecEvalRules({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n    ruleId: \"60029316\",\n}));\nexport const evalRuleAction = evalRule.then(evalRule =\u003e evalRule.evalRuleAction);\nexport const conditionException = evalRule.then(evalRule =\u003e evalRule.conditionException);\nexport const json = evalRule.then(evalRule =\u003e evalRule.json);\nexport const outputText = evalRule.then(evalRule =\u003e evalRule.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\neval_rule = akamai.get_app_sec_eval_rules(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    rule_id=60029316)\npulumi.export(\"evalRuleAction\", eval_rule.eval_rule_action)\npulumi.export(\"conditionException\", eval_rule.condition_exception)\npulumi.export(\"json\", eval_rule.json)\npulumi.export(\"outputText\", eval_rule.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var evalRule = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecEvalRules.InvokeAsync(new Akamai.GetAppSecEvalRulesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n            RuleId = 60029316,\n        })));\n        this.EvalRuleAction = evalRule.Apply(evalRule =\u003e evalRule.EvalRuleAction);\n        this.ConditionException = evalRule.Apply(evalRule =\u003e evalRule.ConditionException);\n        this.Json = evalRule.Apply(evalRule =\u003e evalRule.Json);\n        this.OutputText = evalRule.Apply(evalRule =\u003e evalRule.OutputText);\n    }\n\n    [Output(\"evalRuleAction\")]\n    public Output\u003cstring\u003e EvalRuleAction { get; set; }\n    [Output(\"conditionException\")]\n    public Output\u003cstring\u003e ConditionException { get; set; }\n    [Output(\"json\")]\n    public Output\u003cstring\u003e Json { get; set; }\n    [Output(\"outputText\")]\n    public Output\u003cstring\u003e OutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := 60029316\n\t\tevalRule, err := akamai.GetAppSecEvalRules(ctx, \u0026GetAppSecEvalRulesArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t\tRuleId:           \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"evalRuleAction\", evalRule.EvalRuleAction)\n\t\tctx.Export(\"conditionException\", evalRule.ConditionException)\n\t\tctx.Export(\"json\", evalRule.Json)\n\t\tctx.Export(\"outputText\", evalRule.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `eval_rule_action`. Action taken anytime the evaluation rule is triggered. Valid values are:\n  - **alert**. Record the event,\n  - **deny**. Reject the request.\n  - **deny_custom_{custom_deny_id}**. The action defined by the custom deny is taken.\n  - **none**. Take no action.\n- `condition_exception`. Conditions and exceptions associated with the rule.\n- `json`. JSON-formatted list of the action and the condition-exception information for the rule. This output is only generated if the `rule_id` argument is included.\n- `output_text`. Tabular report showing the rule action as well as Boolean values indicating whether conditions and exceptions have been configured for the rule.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEvalRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration running in evaluation mode.\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": ". Unique identifier of the evaluation rule you want to return information for. If not included, information is returned for all your evaluation rules.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the evaluation rule.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEvalRules.\n",
                "properties": {
                    "conditionException": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "evalRuleAction": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "conditionException",
                    "configId",
                    "evalRuleAction",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecExportConfiguration:getAppSecExportConfiguration": {
            "description": "**Scopes**: Security configuration and version\n\nReturns comprehensive details about a security configuration, including rate policies, security policies, rules, hostnames, and match targets.\n\n**Related API Endpoint**: [/appsec/v1/export/configs/{configId}/versions/{versionNumber}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getconfigurationversionexport)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst export = Promise.all([configuration, configuration]).then(([configuration, configuration1]) =\u003e akamai.getAppSecExportConfiguration({\n    configId: configuration.configId,\n    version: configuration1.latestVersion,\n    searches: [\n        \"securityPolicies\",\n        \"selectedHosts\",\n    ],\n}));\nexport const json = _export.then(_export =\u003e _export.json);\nexport const text = _export.then(_export =\u003e _export.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nexport = akamai.get_app_sec_export_configuration(config_id=configuration.config_id,\n    version=configuration.latest_version,\n    searches=[\n        \"securityPolicies\",\n        \"selectedHosts\",\n    ])\npulumi.export(\"json\", export.json)\npulumi.export(\"text\", export.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var export = Output.Tuple(configuration, configuration).Apply(values =\u003e\n        {\n            var configuration = values.Item1;\n            var configuration1 = values.Item2;\n            return Output.Create(Akamai.GetAppSecExportConfiguration.InvokeAsync(new Akamai.GetAppSecExportConfigurationArgs\n            {\n                ConfigId = configuration.ConfigId,\n                Version = configuration1.LatestVersion,\n                Searches = \n                {\n                    \"securityPolicies\",\n                    \"selectedHosts\",\n                },\n            }));\n        });\n        this.Json = export.Apply(export =\u003e export.Json);\n        this.Text = export.Apply(export =\u003e export.OutputText);\n    }\n\n    [Output(\"json\")]\n    public Output\u003cstring\u003e Json { get; set; }\n    [Output(\"text\")]\n    public Output\u003cstring\u003e Text { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texport, err := akamai.GetAppSecExportConfiguration(ctx, \u0026GetAppSecExportConfigurationArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tVersion:  configuration.LatestVersion,\n\t\t\tSearches: []string{\n\t\t\t\t\"securityPolicies\",\n\t\t\t\t\"selectedHosts\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"json\", export.Json)\n\t\tctx.Export(\"text\", export.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. Complete set of information about the specified security configuration version in JSON format. Includes the types available for the `search` parameter as well as additional fields such as `createDate` and `createdBy`.\n- `output_text`. Tabular report showing the types of data specified in the `search` parameter. Valid only if the `search` parameter references at least one type.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecExportConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration you want to return information for.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". JSON array of strings specifying the types of information to be retrieved. Allowed values include:\n\u003e - **AdvancedSettingsLogging**\n\u003e - **AdvancedSettingsPrefetch**\n\u003e - **ApiRequestConstraints**\n\u003e - **AttackGroup**\n\u003e - **AttackGroupConditionException**\n\u003e - **Eval**\n\u003e - **EvalRuleConditionException**\n\u003e - **CustomDeny**\n\u003e - **CustomRule**\n\u003e - **CustomRuleAction**\n\u003e - **IPGeoFirewall**\n\u003e - **MatchTarget**\n\u003e - **PenaltyBox**\n\u003e - **RatePolicy**\n\u003e - **RatePolicyAction**\n\u003e - **ReputationProfile**\n\u003e - **ReputationProfileAction**\n\u003e - **Rule**\n\u003e - **RuleConditionException**\n\u003e - **SecurityPolicy**\n\u003e - **SiemSettings**\n\u003e - **SlowPost**\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": ". Version number of the security configuration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecExportConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecFailoverHostnames:getAppSecFailoverHostnames": {
            "description": "**Scopes**: Security configuration\n\nReturns a list of the failover hostnames in a configuration. The returned information is described in the [List failover hostnames](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getfailoverhostnames) section of the Application Security API.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/failover-hostnames](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getfailoverhostnames)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst failoverHostnamesAppSecFailoverHostnames = configuration.then(configuration =\u003e akamai.getAppSecFailoverHostnames({\n    configId: configuration.configId,\n}));\nexport const failoverHostnames = failoverHostnamesAppSecFailoverHostnames.then(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.hostnames);\nexport const failoverHostnamesOutput = failoverHostnamesAppSecFailoverHostnames.then(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.outputText);\nexport const failoverHostnamesJson = failoverHostnamesAppSecFailoverHostnames.then(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nfailover_hostnames_app_sec_failover_hostnames = akamai.get_app_sec_failover_hostnames(config_id=configuration.config_id)\npulumi.export(\"failoverHostnames\", failover_hostnames_app_sec_failover_hostnames.hostnames)\npulumi.export(\"failoverHostnamesOutput\", failover_hostnames_app_sec_failover_hostnames.output_text)\npulumi.export(\"failoverHostnamesJson\", failover_hostnames_app_sec_failover_hostnames.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var failoverHostnamesAppSecFailoverHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecFailoverHostnames.InvokeAsync(new Akamai.GetAppSecFailoverHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.FailoverHostnames = failoverHostnamesAppSecFailoverHostnames.Apply(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.Hostnames);\n        this.FailoverHostnamesOutput = failoverHostnamesAppSecFailoverHostnames.Apply(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.OutputText);\n        this.FailoverHostnamesJson = failoverHostnamesAppSecFailoverHostnames.Apply(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.Json);\n    }\n\n    [Output(\"failoverHostnames\")]\n    public Output\u003cstring\u003e FailoverHostnames { get; set; }\n    [Output(\"failoverHostnamesOutput\")]\n    public Output\u003cstring\u003e FailoverHostnamesOutput { get; set; }\n    [Output(\"failoverHostnamesJson\")]\n    public Output\u003cstring\u003e FailoverHostnamesJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfailoverHostnamesAppSecFailoverHostnames, err := akamai.GetAppSecFailoverHostnames(ctx, \u0026GetAppSecFailoverHostnamesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"failoverHostnames\", failoverHostnamesAppSecFailoverHostnames.Hostnames)\n\t\tctx.Export(\"failoverHostnamesOutput\", failoverHostnamesAppSecFailoverHostnames.OutputText)\n\t\tctx.Export(\"failoverHostnamesJson\", failoverHostnamesAppSecFailoverHostnames.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `hostnames`. List of the failover hostnames.\n- `json`. JSON-formatted list of the failover hostnames.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecFailoverHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the failover hosts.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecFailoverHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostnames",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecHostnameCoverage:getAppSecHostnameCoverage": {
            "description": "**Scopes**: Individual account\n\nReturns information about the hostnames associated with your account; the returned data includes the hostname's protections, activation status, and other summary information. This information is described in the [HostnameCoverage members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getfailoverhostnames) section of the Application Security API.\n\n**Related API Endpoint**: [/appsec/v1/hostname-coverage](https://developer.akamai.com/api/cloud_security/application_security/v1.html#gethostnamecoverage)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst hostnameCoverage = akamai.getAppSecHostnameCoverage({});\nexport const hostnameCoverageListJson = hostnameCoverage.then(hostnameCoverage =\u003e hostnameCoverage.json);\nexport const hostnameCoverageListOutput = hostnameCoverage.then(hostnameCoverage =\u003e hostnameCoverage.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nhostname_coverage = akamai.get_app_sec_hostname_coverage()\npulumi.export(\"hostnameCoverageListJson\", hostname_coverage.json)\npulumi.export(\"hostnameCoverageListOutput\", hostname_coverage.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var hostnameCoverage = Output.Create(Akamai.GetAppSecHostnameCoverage.InvokeAsync());\n        this.HostnameCoverageListJson = hostnameCoverage.Apply(hostnameCoverage =\u003e hostnameCoverage.Json);\n        this.HostnameCoverageListOutput = hostnameCoverage.Apply(hostnameCoverage =\u003e hostnameCoverage.OutputText);\n    }\n\n    [Output(\"hostnameCoverageListJson\")]\n    public Output\u003cstring\u003e HostnameCoverageListJson { get; set; }\n    [Output(\"hostnameCoverageListOutput\")]\n    public Output\u003cstring\u003e HostnameCoverageListOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\thostnameCoverage, err := akamai.GetAppSecHostnameCoverage(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"hostnameCoverageListJson\", hostnameCoverage.Json)\n\t\tctx.Export(\"hostnameCoverageListOutput\", hostnameCoverage.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of the hostname coverage information.\n- `output_text`. Tabular report of the hostname coverage information.\n",
            "outputs": {
                "description": "A collection of values returned by getAppSecHostnameCoverage.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecHostnameCoverageMatchTargets:getAppSecHostnameCoverageMatchTargets": {
            "description": "**Scopes**: Hostname\n\nReturns information about the API and website match targets used to protect a hostname. The returned information is described in the [Get the hostname coverage match targets](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getfailoverhostnames) section of the Application Security API.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/hostname-coverage/match-targets?hostname={host}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#gethostnamecoveragematchtargets)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst matchTargets = configuration.then(configuration =\u003e akamai.getAppSecHostnameCoverageMatchTargets({\n    configId: configuration.configId,\n    hostname: \"documentation.akamai.com\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nmatch_targets = akamai.get_app_sec_hostname_coverage_match_targets(config_id=configuration.config_id,\n    hostname=\"documentation.akamai.com\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var matchTargets = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecHostnameCoverageMatchTargets.InvokeAsync(new Akamai.GetAppSecHostnameCoverageMatchTargetsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            Hostname = \"documentation.akamai.com\",\n        })));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.GetAppSecHostnameCoverageMatchTargets(ctx, \u0026GetAppSecHostnameCoverageMatchTargetsArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tHostname: \"documentation.akamai.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of the coverage information.\n- `output_text`. Tabular report of the coverage information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecHostnameCoverageMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostname": {
                        "type": "string",
                        "description": ". Name of the host you want to return information for. You can only return information for a single host and hostname at a time.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostname"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecHostnameCoverageMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostname",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecHostnameCoverageOverlapping:getAppSecHostnameCoverageOverlapping": {
            "description": "**Scopes**: Security configuration; hostname\n\nReturns information about any other configuration versions that contain a hostname found in the current configuration version. The returned information is described in the [List hostname overlaps](https://developer.akamai.com/api/cloud_security/application_security/v1.html#gethostnamecoverageoverlapping) section of the Application Security API.\n\n**Related API Endpoint**:[/appsec/v1/configs/{configId}/versions/{versionNumber}/hostname-coverage/overlapping?hostname={host}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#gethostnamecoverageoverlapping)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst test = configuration.then(configuration =\u003e akamai.getAppSecHostnameCoverageOverlapping({\n    configId: configuration.configId,\n    hostname: \"documentation.akamai.com\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\ntest = akamai.get_app_sec_hostname_coverage_overlapping(config_id=configuration.config_id,\n    hostname=\"documentation.akamai.com\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var test = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecHostnameCoverageOverlapping.InvokeAsync(new Akamai.GetAppSecHostnameCoverageOverlappingArgs\n        {\n            ConfigId = configuration.ConfigId,\n            Hostname = \"documentation.akamai.com\",\n        })));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.GetAppSecHostnameCoverageOverlapping(ctx, \u0026GetAppSecHostnameCoverageOverlappingArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tHostname: \"documentation.akamai.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of the overlap information.\n- `output_text`. Tabular report of the overlap information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecHostnameCoverageOverlapping.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration you want to return information for.\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": ". Name of the host you want to return information for.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostname"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecHostnameCoverageOverlapping.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostname",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecIPGeo:getAppSecIPGeo": {
            "description": "**Scopes**: Security configuration; security policy\n\nReturns information about the network lists used in the IP/Geo Firewall settings; also returns the firewall `mode`, which indicates whether devices on the geographic or IP address lists are allowed through the firewall or are blocked by the firewall.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/ip-geo-firewall](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getipgeofirewall)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst ipGeo = configuration.then(configuration =\u003e akamai.getAppSecIPGeo({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const ipGeoMode = ipGeo.then(ipGeo =\u003e ipGeo.mode);\nexport const geoNetworkLists = ipGeo.then(ipGeo =\u003e ipGeo.geoNetworkLists);\nexport const ipNetworkLists = ipGeo.then(ipGeo =\u003e ipGeo.ipNetworkLists);\nexport const exceptionIpNetworkLists = ipGeo.then(ipGeo =\u003e ipGeo.exceptionIpNetworkLists);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nip_geo = akamai.get_app_sec_ip_geo(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"ipGeoMode\", ip_geo.mode)\npulumi.export(\"geoNetworkLists\", ip_geo.geo_network_lists)\npulumi.export(\"ipNetworkLists\", ip_geo.ip_network_lists)\npulumi.export(\"exceptionIpNetworkLists\", ip_geo.exception_ip_network_lists)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var ipGeo = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecIPGeo.InvokeAsync(new Akamai.GetAppSecIPGeoArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.IpGeoMode = ipGeo.Apply(ipGeo =\u003e ipGeo.Mode);\n        this.GeoNetworkLists = ipGeo.Apply(ipGeo =\u003e ipGeo.GeoNetworkLists);\n        this.IpNetworkLists = ipGeo.Apply(ipGeo =\u003e ipGeo.IpNetworkLists);\n        this.ExceptionIpNetworkLists = ipGeo.Apply(ipGeo =\u003e ipGeo.ExceptionIpNetworkLists);\n    }\n\n    [Output(\"ipGeoMode\")]\n    public Output\u003cstring\u003e IpGeoMode { get; set; }\n    [Output(\"geoNetworkLists\")]\n    public Output\u003cstring\u003e GeoNetworkLists { get; set; }\n    [Output(\"ipNetworkLists\")]\n    public Output\u003cstring\u003e IpNetworkLists { get; set; }\n    [Output(\"exceptionIpNetworkLists\")]\n    public Output\u003cstring\u003e ExceptionIpNetworkLists { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipGeo, err := akamai.LookupAppSecIPGeo(ctx, \u0026GetAppSecIPGeoArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ipGeoMode\", ipGeo.Mode)\n\t\tctx.Export(\"geoNetworkLists\", ipGeo.GeoNetworkLists)\n\t\tctx.Export(\"ipNetworkLists\", ipGeo.IpNetworkLists)\n\t\tctx.Export(\"exceptionIpNetworkLists\", ipGeo.ExceptionIpNetworkLists)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `mode`. Specifies the action taken by the IP/Geo firewall. Valid values are:\n  - **block**. Networks on the IP and geographic network lists are prevented from passing through the firewall.\n  - **allow**.  Networks on the IP and geographic network lists are allowed to pass through the firewall.\n- `geo_network_lists`. Network lists blocked or allowed based on geographic location.\n- `ip_network_lists`. Network lists blocked or allowed based on IP address.\n- `exception_ip_network_lists`. Network lists allowed through the firewall regardless of the values assigned to the `mode`, `geo_network_lists`, and `ip_network_lists` parameters.\n- `output_text`. Tabular report of the IP/Geo firewall settings.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecIPGeo.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the IP/Geo lists.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the IP/Geo lists. If not included, information is returned for all your security policies.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecIPGeo.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "exceptionIpNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "geoNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mode": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "exceptionIpNetworkLists",
                    "geoNetworkLists",
                    "ipNetworkLists",
                    "mode",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecMatchTargets:getAppSecMatchTargets": {
            "description": "**Scopes**: Security configuration; match target\n\nReturns information about your match targets. Match targets determine which security policy should apply to an API, hostname or path.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/match-targets{?policyId,includeChildObjectName}](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getmatchtargets)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst matchTargetsAppSecMatchTargets = configuration.then(configuration =\u003e akamai.getAppSecMatchTargets({\n    configId: configuration.configId,\n}));\nexport const matchTargets = matchTargetsAppSecMatchTargets.then(matchTargetsAppSecMatchTargets =\u003e matchTargetsAppSecMatchTargets.outputText);\nconst matchTarget = configuration.then(configuration =\u003e akamai.getAppSecMatchTargets({\n    configId: configuration.configId,\n    matchTargetId: \"2712938\",\n}));\nexport const matchTargetOutput = matchTarget.then(matchTarget =\u003e matchTarget.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nmatch_targets_app_sec_match_targets = akamai.get_app_sec_match_targets(config_id=configuration.config_id)\npulumi.export(\"matchTargets\", match_targets_app_sec_match_targets.output_text)\nmatch_target = akamai.get_app_sec_match_targets(config_id=configuration.config_id,\n    match_target_id=2712938)\npulumi.export(\"matchTargetOutput\", match_target.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var matchTargetsAppSecMatchTargets = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecMatchTargets.InvokeAsync(new Akamai.GetAppSecMatchTargetsArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.MatchTargets = matchTargetsAppSecMatchTargets.Apply(matchTargetsAppSecMatchTargets =\u003e matchTargetsAppSecMatchTargets.OutputText);\n        var matchTarget = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecMatchTargets.InvokeAsync(new Akamai.GetAppSecMatchTargetsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            MatchTargetId = 2712938,\n        })));\n        this.MatchTargetOutput = matchTarget.Apply(matchTarget =\u003e matchTarget.OutputText);\n    }\n\n    [Output(\"matchTargets\")]\n    public Output\u003cstring\u003e MatchTargets { get; set; }\n    [Output(\"matchTargetOutput\")]\n    public Output\u003cstring\u003e MatchTargetOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmatchTargetsAppSecMatchTargets, err := akamai.GetAppSecMatchTargets(ctx, \u0026GetAppSecMatchTargetsArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"matchTargets\", matchTargetsAppSecMatchTargets.OutputText)\n\t\topt1 := 2712938\n\t\tmatchTarget, err := akamai.GetAppSecMatchTargets(ctx, \u0026GetAppSecMatchTargetsArgs{\n\t\t\tConfigId:      configuration.ConfigId,\n\t\t\tMatchTargetId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"matchTargetOutput\", matchTarget.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the ID and security policy ID of your match targets.\n- `json`. JSON-formatted list of the match target information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the match targets.\n"
                    },
                    "matchTargetId": {
                        "type": "integer",
                        "description": ". Unique identifier of the match target you want to return information for. If not included, information is returned for all your match targets.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchTargetId": {
                        "type": "integer"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecPenaltyBox:getAppSecPenaltyBox": {
            "description": "**Scopes**: Security policy\n\nReturns penalty box settings for the specified security policy. When using automated attack groups, and when the penalty box is enabled, clients that trigger an attack group are placed in the “penalty box.” That means that, for the next 10 minutes, all requests from that client are ignored.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/penalty-box](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getpenaltybox)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst penaltyBox = configuration.then(configuration =\u003e akamai.getAppSecPenaltyBox({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const penaltyBoxAction = penaltyBox.then(penaltyBox =\u003e penaltyBox.action);\nexport const penaltyBoxEnabled = penaltyBox.then(penaltyBox =\u003e penaltyBox.enabled);\nexport const penaltyBoxText = penaltyBox.then(penaltyBox =\u003e penaltyBox.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\npenalty_box = akamai.get_app_sec_penalty_box(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"penaltyBoxAction\", penalty_box.action)\npulumi.export(\"penaltyBoxEnabled\", penalty_box.enabled)\npulumi.export(\"penaltyBoxText\", penalty_box.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var penaltyBox = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecPenaltyBox.InvokeAsync(new Akamai.GetAppSecPenaltyBoxArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.PenaltyBoxAction = penaltyBox.Apply(penaltyBox =\u003e penaltyBox.Action);\n        this.PenaltyBoxEnabled = penaltyBox.Apply(penaltyBox =\u003e penaltyBox.Enabled);\n        this.PenaltyBoxText = penaltyBox.Apply(penaltyBox =\u003e penaltyBox.OutputText);\n    }\n\n    [Output(\"penaltyBoxAction\")]\n    public Output\u003cstring\u003e PenaltyBoxAction { get; set; }\n    [Output(\"penaltyBoxEnabled\")]\n    public Output\u003cstring\u003e PenaltyBoxEnabled { get; set; }\n    [Output(\"penaltyBoxText\")]\n    public Output\u003cstring\u003e PenaltyBoxText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpenaltyBox, err := akamai.LookupAppSecPenaltyBox(ctx, \u0026GetAppSecPenaltyBoxArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"penaltyBoxAction\", penaltyBox.Action)\n\t\tctx.Export(\"penaltyBoxEnabled\", penaltyBox.Enabled)\n\t\tctx.Export(\"penaltyBoxText\", penaltyBox.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `action`. Action taken any time the penalty box is triggered. Valid values are:\n  - **alert**. Record the event.\n  - **deny**. The request is blocked.\n  - **deny_custom_{custom_deny_id}**. The action defined by the custom deny is taken.\n  - **none**. Take no action.\n- `enabled`. If **true**, penalty box protection is enabled. If **false**, penalty box protection is disabled.\n- `output_text`. Tabular report of penalty box protection settings.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecPenaltyBox.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the penalty box settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the penalty box settings.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecPenaltyBox.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "configId",
                    "enabled",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecRatePolicies:getAppSecRatePolicies": {
            "description": "**Scopes**: Security configuration; rate policy\n\nReturns information about your rate policies. Rate polices help you monitor and moderate the number and rate of all the requests you receive; in turn, this helps you prevent your website from being overwhelmed by a dramatic, and unexpected, surge in traffic.\n\n**Related API Endpoint:** [/appsec/v1/configs/{configId}/versions/{versionNumber}/rate-policies](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getratepolicies)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst ratePolicies = configuration.then(configuration =\u003e akamai.getAppSecRatePolicies({\n    configId: configuration.configId,\n}));\nexport const ratePoliciesOutput = ratePolicies.then(ratePolicies =\u003e ratePolicies.outputText);\nexport const ratePoliciesJson = ratePolicies.then(ratePolicies =\u003e ratePolicies.json);\nconst ratePolicy = configuration.then(configuration =\u003e akamai.getAppSecRatePolicies({\n    configId: configuration.configId,\n    ratePolicyId: \"122149\",\n}));\nexport const ratePolicyJson = ratePolicy.then(ratePolicy =\u003e ratePolicy.json);\nexport const ratePolicyOutput = ratePolicy.then(ratePolicy =\u003e ratePolicy.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nrate_policies = akamai.get_app_sec_rate_policies(config_id=configuration.config_id)\npulumi.export(\"ratePoliciesOutput\", rate_policies.output_text)\npulumi.export(\"ratePoliciesJson\", rate_policies.json)\nrate_policy = akamai.get_app_sec_rate_policies(config_id=configuration.config_id,\n    rate_policy_id=122149)\npulumi.export(\"ratePolicyJson\", rate_policy.json)\npulumi.export(\"ratePolicyOutput\", rate_policy.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var ratePolicies = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecRatePolicies.InvokeAsync(new Akamai.GetAppSecRatePoliciesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.RatePoliciesOutput = ratePolicies.Apply(ratePolicies =\u003e ratePolicies.OutputText);\n        this.RatePoliciesJson = ratePolicies.Apply(ratePolicies =\u003e ratePolicies.Json);\n        var ratePolicy = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecRatePolicies.InvokeAsync(new Akamai.GetAppSecRatePoliciesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            RatePolicyId = 122149,\n        })));\n        this.RatePolicyJson = ratePolicy.Apply(ratePolicy =\u003e ratePolicy.Json);\n        this.RatePolicyOutput = ratePolicy.Apply(ratePolicy =\u003e ratePolicy.OutputText);\n    }\n\n    [Output(\"ratePoliciesOutput\")]\n    public Output\u003cstring\u003e RatePoliciesOutput { get; set; }\n    [Output(\"ratePoliciesJson\")]\n    public Output\u003cstring\u003e RatePoliciesJson { get; set; }\n    [Output(\"ratePolicyJson\")]\n    public Output\u003cstring\u003e RatePolicyJson { get; set; }\n    [Output(\"ratePolicyOutput\")]\n    public Output\u003cstring\u003e RatePolicyOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tratePolicies, err := akamai.GetAppSecRatePolicies(ctx, \u0026GetAppSecRatePoliciesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ratePoliciesOutput\", ratePolicies.OutputText)\n\t\tctx.Export(\"ratePoliciesJson\", ratePolicies.Json)\n\t\topt1 := 122149\n\t\tratePolicy, err := akamai.GetAppSecRatePolicies(ctx, \u0026GetAppSecRatePoliciesArgs{\n\t\t\tConfigId:     configuration.ConfigId,\n\t\t\tRatePolicyId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ratePolicyJson\", ratePolicy.Json)\n\t\tctx.Export(\"ratePolicyOutput\", ratePolicy.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the ID and name of the rate policies.\n- `json`. JSON-formatted list of the rate policy information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRatePolicies.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the rate policies.\n"
                    },
                    "ratePolicyId": {
                        "type": "integer",
                        "description": ". Unique identifier of the rate policy you want to return information for. If not included, information is returned for all your rate policies.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRatePolicies.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "ratePolicyId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecRatePolicyActions:getAppSecRatePolicyActions": {
            "description": "**Scopes**: Security policy; rate policy\n\nReturns information about your rate policy actions, Actions specify what happens any time a rate policy is triggered: the issue could be ignored, the request could be denied, or an alert could be generated.\n\n**Related API Endpoint:** [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rate-policies](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getratepolicyactions)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst ratePolicyActionsAppSecRatePolicyActions = configuration.then(configuration =\u003e akamai.getAppSecRatePolicyActions({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const ratePolicyActions = ratePolicyActionsAppSecRatePolicyActions.then(ratePolicyActionsAppSecRatePolicyActions =\u003e ratePolicyActionsAppSecRatePolicyActions.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nrate_policy_actions_app_sec_rate_policy_actions = akamai.get_app_sec_rate_policy_actions(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"ratePolicyActions\", rate_policy_actions_app_sec_rate_policy_actions.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var ratePolicyActionsAppSecRatePolicyActions = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecRatePolicyActions.InvokeAsync(new Akamai.GetAppSecRatePolicyActionsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.RatePolicyActions = ratePolicyActionsAppSecRatePolicyActions.Apply(ratePolicyActionsAppSecRatePolicyActions =\u003e ratePolicyActionsAppSecRatePolicyActions.OutputText);\n    }\n\n    [Output(\"ratePolicyActions\")]\n    public Output\u003cstring\u003e RatePolicyActions { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tratePolicyActionsAppSecRatePolicyActions, err := akamai.GetAppSecRatePolicyActions(ctx, \u0026GetAppSecRatePolicyActionsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ratePolicyActions\", ratePolicyActionsAppSecRatePolicyActions.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing the ID, IPv4 action, and IPv6 action of the rate policies.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRatePolicyActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the rate policies and rate policy actions.\n"
                    },
                    "ratePolicyId": {
                        "type": "integer",
                        "description": ". Unique identifier of the rate policy you want to return action information for. If not included, action information is returned for all your rate policies.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the rate policies and rate policy actions.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRatePolicyActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "ratePolicyId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecReputationProfileActions:getAppSecReputationProfileActions": {
            "description": "## akamai.getAppSecReputationProfileActions\n\n**Scopes**: Security policy; reputation profile\n\nReturns action information for your reputation profiles. Actions specify what happens any time a profile is triggered: the issue could be ignored, the request could be denied, or an alert could be generated.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/reputation-profiles](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getreputationprofileactions)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst reputationProfileActions = configuration.then(configuration =\u003e akamai.getAppSecReputationProfileActions({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const reputationProfileActionsText = reputationProfileActions.then(reputationProfileActions =\u003e reputationProfileActions.outputText);\nexport const reputationProfileActionsJson = reputationProfileActions.then(reputationProfileActions =\u003e reputationProfileActions.json);\nconst reputationProfileActions2AppSecReputationProfileActions = configuration.then(configuration =\u003e akamai.getAppSecReputationProfileActions({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n    reputationProfileId: \"12345\",\n}));\nexport const reputationProfileActions2 = reputationProfileActions.then(reputationProfileActions =\u003e reputationProfileActions.action);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nreputation_profile_actions = akamai.get_app_sec_reputation_profile_actions(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"reputationProfileActionsText\", reputation_profile_actions.output_text)\npulumi.export(\"reputationProfileActionsJson\", reputation_profile_actions.json)\nreputation_profile_actions2_app_sec_reputation_profile_actions = akamai.get_app_sec_reputation_profile_actions(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\",\n    reputation_profile_id=12345)\npulumi.export(\"reputationProfileActions2\", reputation_profile_actions.action)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var reputationProfileActions = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecReputationProfileActions.InvokeAsync(new Akamai.GetAppSecReputationProfileActionsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.ReputationProfileActionsText = reputationProfileActions.Apply(reputationProfileActions =\u003e reputationProfileActions.OutputText);\n        this.ReputationProfileActionsJson = reputationProfileActions.Apply(reputationProfileActions =\u003e reputationProfileActions.Json);\n        var reputationProfileActions2AppSecReputationProfileActions = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecReputationProfileActions.InvokeAsync(new Akamai.GetAppSecReputationProfileActionsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n            ReputationProfileId = 12345,\n        })));\n        this.ReputationProfileActions2 = reputationProfileActions.Apply(reputationProfileActions =\u003e reputationProfileActions.Action);\n    }\n\n    [Output(\"reputationProfileActionsText\")]\n    public Output\u003cstring\u003e ReputationProfileActionsText { get; set; }\n    [Output(\"reputationProfileActionsJson\")]\n    public Output\u003cstring\u003e ReputationProfileActionsJson { get; set; }\n    [Output(\"reputationProfileActions2\")]\n    public Output\u003cstring\u003e ReputationProfileActions2 { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treputationProfileActions, err := akamai.GetAppSecReputationProfileActions(ctx, \u0026GetAppSecReputationProfileActionsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationProfileActionsText\", reputationProfileActions.OutputText)\n\t\tctx.Export(\"reputationProfileActionsJson\", reputationProfileActions.Json)\n\t\topt1 := 12345\n\t\t_, err = akamai.GetAppSecReputationProfileActions(ctx, \u0026GetAppSecReputationProfileActionsArgs{\n\t\t\tConfigId:            configuration.ConfigId,\n\t\t\tSecurityPolicyId:    \"gms1_134637\",\n\t\t\tReputationProfileId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationProfileActions2\", reputationProfileActions.Action)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `action`. Action taken any time the reputation profile is triggered. Valid values are:\n  - **alert**. Record the event.\n  - **deny**. Block the request.\n  - **deny_custom_{custom_deny_id}**. The action defined by the custom deny is taken.\n  - **none**. Take no action.\n- `json`. JSON-formatted report of the reputation profile action information.\n- `output_text`. Tabular report of the reputation profile action information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecReputationProfileActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the reputation profiles.\n"
                    },
                    "reputationProfileId": {
                        "type": "integer",
                        "description": ". Unique identifier of the reputation profile you want to return information for. If not included, information is returned for all your reputation profiles.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the reputation profiles.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecReputationProfileActions.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "reputationProfileId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecReputationProfileAnalysis:getAppSecReputationProfileAnalysis": {
            "description": "**Scopes**: Security policy\n\nReturns information about the following two reputation analysis settings:\n\n- `forwardToHTTPHeader`. When enabled, client reputation information associated with a request is forwarded to origin servers by using an HTTP header.\n- `forwardSharedIPToHTTPHeaderAndSIEM`. When enabled, both the HTTP header and SIEM integration events include a value indicating that the IP addresses is shared address.\n\nThe returned information is described in the [ReputationAnalysis members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#f06bb20c) section of the Application Security API.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/reputation-analysis](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getreputationanalysis)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst reputationAnalysis = configuration.then(configuration =\u003e akamai.getAppSecReputationProfileAnalysis({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const reputationAnalysisText = reputationAnalysis.then(reputationAnalysis =\u003e reputationAnalysis.outputText);\nexport const reputationAnalysisJson = reputationAnalysis.then(reputationAnalysis =\u003e reputationAnalysis.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nreputation_analysis = akamai.get_app_sec_reputation_profile_analysis(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"reputationAnalysisText\", reputation_analysis.output_text)\npulumi.export(\"reputationAnalysisJson\", reputation_analysis.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var reputationAnalysis = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecReputationProfileAnalysis.InvokeAsync(new Akamai.GetAppSecReputationProfileAnalysisArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.ReputationAnalysisText = reputationAnalysis.Apply(reputationAnalysis =\u003e reputationAnalysis.OutputText);\n        this.ReputationAnalysisJson = reputationAnalysis.Apply(reputationAnalysis =\u003e reputationAnalysis.Json);\n    }\n\n    [Output(\"reputationAnalysisText\")]\n    public Output\u003cstring\u003e ReputationAnalysisText { get; set; }\n    [Output(\"reputationAnalysisJson\")]\n    public Output\u003cstring\u003e ReputationAnalysisJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treputationAnalysis, err := akamai.LookupAppSecReputationProfileAnalysis(ctx, \u0026GetAppSecReputationProfileAnalysisArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationAnalysisText\", reputationAnalysis.OutputText)\n\t\tctx.Export(\"reputationAnalysisJson\", reputationAnalysis.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of the reputation analysis settings.\n- `output_text`. Tabular report showing the reputation analysis settings.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecReputationProfileAnalysis.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the reputation profile analysis settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the reputation profile analysis settings.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecReputationProfileAnalysis.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecReputationProfiles:getAppSecReputationProfiles": {
            "description": "**Scopes**: Security configuration; reputation profile\n\nReturns information about your reputation profiles. Reputation profiles grade the security risk of an IP address based on previous activities associated with that address. Depending on the reputation score, and depending on how your configuration has been set up, requests from a specific IP address can trigger an alert, or even be blocked.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/reputation-profiles](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getreputationprofiles)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst reputationProfiles = configuration.then(configuration =\u003e akamai.getAppSecReputationProfiles({\n    configId: configuration.configId,\n}));\nexport const reputationProfilesOutput = reputationProfiles.then(reputationProfiles =\u003e reputationProfiles.outputText);\nexport const reputationProfilesJson = reputationProfiles.then(reputationProfiles =\u003e reputationProfiles.json);\nconst reputationProfile = configuration.then(configuration =\u003e akamai.getAppSecReputationProfiles({\n    configId: configuration.configId,\n    reputationProfileId: \"12345\",\n}));\nexport const reputationProfileJson = reputationProfile.then(reputationProfile =\u003e reputationProfile.json);\nexport const reputationProfileOutput = reputationProfile.then(reputationProfile =\u003e reputationProfile.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nreputation_profiles = akamai.get_app_sec_reputation_profiles(config_id=configuration.config_id)\npulumi.export(\"reputationProfilesOutput\", reputation_profiles.output_text)\npulumi.export(\"reputationProfilesJson\", reputation_profiles.json)\nreputation_profile = akamai.get_app_sec_reputation_profiles(config_id=configuration.config_id,\n    reputation_profile_id=12345)\npulumi.export(\"reputationProfileJson\", reputation_profile.json)\npulumi.export(\"reputationProfileOutput\", reputation_profile.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var reputationProfiles = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.ReputationProfilesOutput = reputationProfiles.Apply(reputationProfiles =\u003e reputationProfiles.OutputText);\n        this.ReputationProfilesJson = reputationProfiles.Apply(reputationProfiles =\u003e reputationProfiles.Json);\n        var reputationProfile = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            ReputationProfileId = 12345,\n        })));\n        this.ReputationProfileJson = reputationProfile.Apply(reputationProfile =\u003e reputationProfile.Json);\n        this.ReputationProfileOutput = reputationProfile.Apply(reputationProfile =\u003e reputationProfile.OutputText);\n    }\n\n    [Output(\"reputationProfilesOutput\")]\n    public Output\u003cstring\u003e ReputationProfilesOutput { get; set; }\n    [Output(\"reputationProfilesJson\")]\n    public Output\u003cstring\u003e ReputationProfilesJson { get; set; }\n    [Output(\"reputationProfileJson\")]\n    public Output\u003cstring\u003e ReputationProfileJson { get; set; }\n    [Output(\"reputationProfileOutput\")]\n    public Output\u003cstring\u003e ReputationProfileOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treputationProfiles, err := akamai.GetAppSecReputationProfiles(ctx, \u0026GetAppSecReputationProfilesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationProfilesOutput\", reputationProfiles.OutputText)\n\t\tctx.Export(\"reputationProfilesJson\", reputationProfiles.Json)\n\t\topt1 := 12345\n\t\treputationProfile, err := akamai.GetAppSecReputationProfiles(ctx, \u0026GetAppSecReputationProfilesArgs{\n\t\t\tConfigId:            configuration.ConfigId,\n\t\t\tReputationProfileId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationProfileJson\", reputationProfile.Json)\n\t\tctx.Export(\"reputationProfileOutput\", reputationProfile.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report of the details about the specified reputation profile or profiles.\n- `json`. JSON-formatted report of the details about the specified reputation profile or profiles.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecReputationProfiles.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the reputation profiles.\n"
                    },
                    "reputationProfileId": {
                        "type": "integer",
                        "description": ". Unique identifier of the reputation profile you want to return information for. If not included, information is returned for all your reputation profiles.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecReputationProfiles.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "reputationProfileId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecRuleUpgradeDetails:getAppSecRuleUpgradeDetails": {
            "description": "**Scopes**: Security policy\n\nReturns information indicating which of your Kona Rule Sets (if any) need to be updated. A value of **false** indicates that no updates are required.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rules/upgrade-details](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getupgradedetails)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst upgradeDetails = configuration.then(configuration =\u003e akamai.getAppSecRuleUpgradeDetails({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const upgradeDetailsText = upgradeDetails.then(upgradeDetails =\u003e upgradeDetails.outputText);\nexport const upgradeDetailsJson = upgradeDetails.then(upgradeDetails =\u003e upgradeDetails.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nupgrade_details = akamai.get_app_sec_rule_upgrade_details(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"upgradeDetailsText\", upgrade_details.output_text)\npulumi.export(\"upgradeDetailsJson\", upgrade_details.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var upgradeDetails = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecRuleUpgradeDetails.InvokeAsync(new Akamai.GetAppSecRuleUpgradeDetailsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.UpgradeDetailsText = upgradeDetails.Apply(upgradeDetails =\u003e upgradeDetails.OutputText);\n        this.UpgradeDetailsJson = upgradeDetails.Apply(upgradeDetails =\u003e upgradeDetails.Json);\n    }\n\n    [Output(\"upgradeDetailsText\")]\n    public Output\u003cstring\u003e UpgradeDetailsText { get; set; }\n    [Output(\"upgradeDetailsJson\")]\n    public Output\u003cstring\u003e UpgradeDetailsJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tupgradeDetails, err := akamai.GetAppSecRuleUpgradeDetails(ctx, \u0026GetAppSecRuleUpgradeDetailsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"upgradeDetailsText\", upgradeDetails.OutputText)\n\t\tctx.Export(\"upgradeDetailsJson\", upgradeDetails.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report showing changes (additions and deletions) to the rules for the specified security policy.\n- `json`. JSON-formatted list of the changes (additions and deletions) to the rules for the specified security policy.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRuleUpgradeDetails.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the Kona Rule Sets.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the Kona Rule Sets.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRuleUpgradeDetails.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecRules:getAppSecRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the rules.\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": ". Unique identifier of the Kona Rule Set rule you want to return information for. If not included, information is returned for all your KRS rules.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the rules.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRules.\n",
                "properties": {
                    "conditionException": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "ruleAction": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "conditionException",
                    "configId",
                    "json",
                    "outputText",
                    "ruleAction",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSecurityPolicy:getAppSecSecurityPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSecurityPolicy.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the security policies.\n- `security_policy_name`. (Optional). Name of the security policy you want to return information for (be sure to reference the policy name and not the policy ID). If not included, information is returned for all your security policies.\n"
                    },
                    "securityPolicyName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSecurityPolicy.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "securityPolicyIdLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityPolicyName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "securityPolicyIdLists",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSecurityPolicyProtections:getAppSecSecurityPolicyProtections": {
            "description": "**Scopes**: Security policy\n\nReturns information about the protections in effect for the specified security policy.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/protections](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getprotections)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst protections = configuration.then(configuration =\u003e akamai.getAppSecSecurityPolicyProtections({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const protectionsJson = protections.then(protections =\u003e protections.json);\nexport const protectionsApplyApiConstraints = protections.then(protections =\u003e protections.applyApiConstraints);\nexport const protectionsApplyApplicationLayerControls = protections.then(protections =\u003e protections.applyApplicationLayerControls);\nexport const protectionsApplyBotmanControls = protections.then(protections =\u003e protections.applyBotmanControls);\nexport const protectionsApplyNetworkLayerControls = protections.then(protections =\u003e protections.applyNetworkLayerControls);\nexport const protectionsApplyRateControls = protections.then(protections =\u003e protections.applyRateControls);\nexport const protectionsApplyReputationControls = protections.then(protections =\u003e protections.applyReputationControls);\nexport const protectionsApplySlowPostControls = protections.then(protections =\u003e protections.applySlowPostControls);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nprotections = akamai.get_app_sec_security_policy_protections(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"protectionsJson\", protections.json)\npulumi.export(\"protectionsApplyApiConstraints\", protections.apply_api_constraints)\npulumi.export(\"protectionsApplyApplicationLayerControls\", protections.apply_application_layer_controls)\npulumi.export(\"protectionsApplyBotmanControls\", protections.apply_botman_controls)\npulumi.export(\"protectionsApplyNetworkLayerControls\", protections.apply_network_layer_controls)\npulumi.export(\"protectionsApplyRateControls\", protections.apply_rate_controls)\npulumi.export(\"protectionsApplyReputationControls\", protections.apply_reputation_controls)\npulumi.export(\"protectionsApplySlowPostControls\", protections.apply_slow_post_controls)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var protections = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSecurityPolicyProtections.InvokeAsync(new Akamai.GetAppSecSecurityPolicyProtectionsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.ProtectionsJson = protections.Apply(protections =\u003e protections.Json);\n        this.ProtectionsApplyApiConstraints = protections.Apply(protections =\u003e protections.ApplyApiConstraints);\n        this.ProtectionsApplyApplicationLayerControls = protections.Apply(protections =\u003e protections.ApplyApplicationLayerControls);\n        this.ProtectionsApplyBotmanControls = protections.Apply(protections =\u003e protections.ApplyBotmanControls);\n        this.ProtectionsApplyNetworkLayerControls = protections.Apply(protections =\u003e protections.ApplyNetworkLayerControls);\n        this.ProtectionsApplyRateControls = protections.Apply(protections =\u003e protections.ApplyRateControls);\n        this.ProtectionsApplyReputationControls = protections.Apply(protections =\u003e protections.ApplyReputationControls);\n        this.ProtectionsApplySlowPostControls = protections.Apply(protections =\u003e protections.ApplySlowPostControls);\n    }\n\n    [Output(\"protectionsJson\")]\n    public Output\u003cstring\u003e ProtectionsJson { get; set; }\n    [Output(\"protectionsApplyApiConstraints\")]\n    public Output\u003cstring\u003e ProtectionsApplyApiConstraints { get; set; }\n    [Output(\"protectionsApplyApplicationLayerControls\")]\n    public Output\u003cstring\u003e ProtectionsApplyApplicationLayerControls { get; set; }\n    [Output(\"protectionsApplyBotmanControls\")]\n    public Output\u003cstring\u003e ProtectionsApplyBotmanControls { get; set; }\n    [Output(\"protectionsApplyNetworkLayerControls\")]\n    public Output\u003cstring\u003e ProtectionsApplyNetworkLayerControls { get; set; }\n    [Output(\"protectionsApplyRateControls\")]\n    public Output\u003cstring\u003e ProtectionsApplyRateControls { get; set; }\n    [Output(\"protectionsApplyReputationControls\")]\n    public Output\u003cstring\u003e ProtectionsApplyReputationControls { get; set; }\n    [Output(\"protectionsApplySlowPostControls\")]\n    public Output\u003cstring\u003e ProtectionsApplySlowPostControls { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tprotections, err := akamai.GetAppSecSecurityPolicyProtections(ctx, \u0026GetAppSecSecurityPolicyProtectionsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"protectionsJson\", protections.Json)\n\t\tctx.Export(\"protectionsApplyApiConstraints\", protections.ApplyApiConstraints)\n\t\tctx.Export(\"protectionsApplyApplicationLayerControls\", protections.ApplyApplicationLayerControls)\n\t\tctx.Export(\"protectionsApplyBotmanControls\", protections.ApplyBotmanControls)\n\t\tctx.Export(\"protectionsApplyNetworkLayerControls\", protections.ApplyNetworkLayerControls)\n\t\tctx.Export(\"protectionsApplyRateControls\", protections.ApplyRateControls)\n\t\tctx.Export(\"protectionsApplyReputationControls\", protections.ApplyReputationControls)\n\t\tctx.Export(\"protectionsApplySlowPostControls\", protections.ApplySlowPostControls)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned and how that returned information is formatted:\n\n- `apply_application_layer_controls`. Returns **true** if application layer controls are enabled; returns **false** if they are not.\n- `apply_network_layer_controls`. Returns **true** if network layer controls are enabled; returns **false** if they are not.\n- `apply_rate_controls`. Returns **true** if rate controls are enabled; returns **false** if they are not.\n- `apply_reputation_controls`. Returns **true** if reputation controls are enabled; returns **false** if they are not.\n- `apply_botman_controls`. Returns **true** if Bot Manager controls are enabled; returns **false** if they are not.\n- `apply_api_constraints`. Returns **true** if API constraints are enabled; returns **false** if they are not.\n- `apply_slow_post_controls`. Returns **true** if slow POST controls are enabled; returns **false** if they are not.\n- `json`. JSON-formatted list showing the status of the protection settings.\n- `output_text`. Tabular report showing the status of the protection settings\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSecurityPolicyProtections.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the security policy protections.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy you want to return protections information for.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSecurityPolicyProtections.\n",
                "properties": {
                    "applyApiConstraints": {
                        "type": "boolean"
                    },
                    "applyApplicationLayerControls": {
                        "type": "boolean"
                    },
                    "applyBotmanControls": {
                        "type": "boolean"
                    },
                    "applyNetworkLayerControls": {
                        "type": "boolean"
                    },
                    "applyRateControls": {
                        "type": "boolean"
                    },
                    "applyReputationControls": {
                        "type": "boolean"
                    },
                    "applySlowPostControls": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "applyApiConstraints",
                    "applyApplicationLayerControls",
                    "applyBotmanControls",
                    "applyNetworkLayerControls",
                    "applyRateControls",
                    "applyReputationControls",
                    "applySlowPostControls",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSelectableHostnames:getAppSecSelectableHostnames": {
            "description": "**Scopes**: Security configuration; contract; group\n\nReturns the list of hostnames that can be (but aren't yet) protected by a security configuration. You can specify the set of hostnames to be retrieved either by supplying the name of a security configuration or by supplying an Akamai group ID and contract ID.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/selectable-hostnames](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getavailablehostnames)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst selectableHostnamesAppSecSelectableHostnames = configuration.then(configuration =\u003e akamai.getAppSecSelectableHostnames({\n    configId: configuration.configId,\n}));\nexport const selectableHostnames = selectableHostnamesAppSecSelectableHostnames.then(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.hostnames);\nexport const selectableHostnamesJson = selectableHostnamesAppSecSelectableHostnames.then(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.hostnamesJson);\nexport const selectableHostnamesOutputText = selectableHostnamesAppSecSelectableHostnames.then(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.outputText);\nconst selectableHostnamesForCreateConfigurationAppSecSelectableHostnames = akamai.getAppSecSelectableHostnames({\n    contractId: \"5-2WA382\",\n    groupId: 12198,\n});\nexport const selectableHostnamesForCreateConfiguration = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.then(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.hostnames);\nexport const selectableHostnamesForCreateConfigurationJson = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.then(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.hostnamesJson);\nexport const selectableHostnamesForCreateConfigurationOutputText = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.then(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nselectable_hostnames_app_sec_selectable_hostnames = akamai.get_app_sec_selectable_hostnames(config_id=configuration.config_id)\npulumi.export(\"selectableHostnames\", selectable_hostnames_app_sec_selectable_hostnames.hostnames)\npulumi.export(\"selectableHostnamesJson\", selectable_hostnames_app_sec_selectable_hostnames.hostnames_json)\npulumi.export(\"selectableHostnamesOutputText\", selectable_hostnames_app_sec_selectable_hostnames.output_text)\nselectable_hostnames_for_create_configuration_app_sec_selectable_hostnames = akamai.get_app_sec_selectable_hostnames(contract_id=\"5-2WA382\",\n    group_id=12198)\npulumi.export(\"selectableHostnamesForCreateConfiguration\", selectable_hostnames_for_create_configuration_app_sec_selectable_hostnames.hostnames)\npulumi.export(\"selectableHostnamesForCreateConfigurationJson\", selectable_hostnames_for_create_configuration_app_sec_selectable_hostnames.hostnames_json)\npulumi.export(\"selectableHostnamesForCreateConfigurationOutputText\", selectable_hostnames_for_create_configuration_app_sec_selectable_hostnames.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var selectableHostnamesAppSecSelectableHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSelectableHostnames.InvokeAsync(new Akamai.GetAppSecSelectableHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.SelectableHostnames = selectableHostnamesAppSecSelectableHostnames.Apply(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.Hostnames);\n        this.SelectableHostnamesJson = selectableHostnamesAppSecSelectableHostnames.Apply(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.HostnamesJson);\n        this.SelectableHostnamesOutputText = selectableHostnamesAppSecSelectableHostnames.Apply(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.OutputText);\n        var selectableHostnamesForCreateConfigurationAppSecSelectableHostnames = Output.Create(Akamai.GetAppSecSelectableHostnames.InvokeAsync(new Akamai.GetAppSecSelectableHostnamesArgs\n        {\n            ContractId = \"5-2WA382\",\n            GroupId = 12198,\n        }));\n        this.SelectableHostnamesForCreateConfiguration = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Apply(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Hostnames);\n        this.SelectableHostnamesForCreateConfigurationJson = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Apply(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.HostnamesJson);\n        this.SelectableHostnamesForCreateConfigurationOutputText = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Apply(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.OutputText);\n    }\n\n    [Output(\"selectableHostnames\")]\n    public Output\u003cstring\u003e SelectableHostnames { get; set; }\n    [Output(\"selectableHostnamesJson\")]\n    public Output\u003cstring\u003e SelectableHostnamesJson { get; set; }\n    [Output(\"selectableHostnamesOutputText\")]\n    public Output\u003cstring\u003e SelectableHostnamesOutputText { get; set; }\n    [Output(\"selectableHostnamesForCreateConfiguration\")]\n    public Output\u003cstring\u003e SelectableHostnamesForCreateConfiguration { get; set; }\n    [Output(\"selectableHostnamesForCreateConfigurationJson\")]\n    public Output\u003cstring\u003e SelectableHostnamesForCreateConfigurationJson { get; set; }\n    [Output(\"selectableHostnamesForCreateConfigurationOutputText\")]\n    public Output\u003cstring\u003e SelectableHostnamesForCreateConfigurationOutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := configuration.ConfigId\n\t\tselectableHostnamesAppSecSelectableHostnames, err := akamai.GetAppSecSelectableHostnames(ctx, \u0026GetAppSecSelectableHostnamesArgs{\n\t\t\tConfigId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"selectableHostnames\", selectableHostnamesAppSecSelectableHostnames.Hostnames)\n\t\tctx.Export(\"selectableHostnamesJson\", selectableHostnamesAppSecSelectableHostnames.HostnamesJson)\n\t\tctx.Export(\"selectableHostnamesOutputText\", selectableHostnamesAppSecSelectableHostnames.OutputText)\n\t\tselectableHostnamesForCreateConfigurationAppSecSelectableHostnames, err := akamai.GetAppSecSelectableHostnames(ctx, \u0026GetAppSecSelectableHostnamesArgs{\n\t\t\tContractId: \"5-2WA382\",\n\t\t\tGroupId:    12198,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"selectableHostnamesForCreateConfiguration\", selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Hostnames)\n\t\tctx.Export(\"selectableHostnamesForCreateConfigurationJson\", selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.HostnamesJson)\n\t\tctx.Export(\"selectableHostnamesForCreateConfigurationOutputText\", selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `hostnames`. List of selectable hostnames.\n- `hostnames_json`. JSON-formatted list of selectable hostnames.\n- `output_text`. Tabular report of the selectable hostnames showing the name and config_id of the security configuration under which the host is protected in production.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSelectableHostnames.\n",
                "properties": {
                    "activeInProduction": {
                        "type": "boolean"
                    },
                    "activeInStaging": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration you want to return hostname information for. If not included, information is returned for all your security configurations. Note that argument can't be used with either the `contractid` or the `groupid` arguments.\n"
                    },
                    "contractid": {
                        "type": "string",
                        "description": ". Unique identifier of the Akamai contract you want to return hostname information for. If not included, information is returned for all the Akamai contracts associated with your account. Note that this argument can't be used with the `config_id` argument.\n"
                    },
                    "groupid": {
                        "type": "integer",
                        "description": ". Unique identifier of the contract group you want to return hostname information for. If not included, information is returned for all your contract groups. (Or, if you include the `contractid` argument, all the groups associated with the specified contract.) Note that this argument can't be used with the `config_id` argument.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSelectableHostnames.\n",
                "properties": {
                    "activeInProduction": {
                        "type": "boolean"
                    },
                    "activeInStaging": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "contractid": {
                        "type": "string"
                    },
                    "groupid": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hostnamesJson": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "hostnames",
                    "hostnamesJson",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSelectedHostnames:getAppSecSelectedHostnames": {
            "description": "**Scopes**: Security configuration\n\nReturns a list of the hostnames currently protected by the specified security configuration.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/selected-hostnames](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getselectedhostnames)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst selectedHostnamesAppSecSelectedHostnames = configuration.then(configuration =\u003e akamai.getAppSecSelectedHostnames({\n    configId: configuration.configId,\n}));\nexport const selectedHostnames = selectedHostnamesAppSecSelectedHostnames.then(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.hostnames);\nexport const selectedHostnamesJson = selectedHostnamesAppSecSelectedHostnames.then(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.hostnamesJson);\nexport const selectedHostnamesOutputText = selectedHostnamesAppSecSelectedHostnames.then(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nselected_hostnames_app_sec_selected_hostnames = akamai.get_app_sec_selected_hostnames(config_id=configuration.config_id)\npulumi.export(\"selectedHostnames\", selected_hostnames_app_sec_selected_hostnames.hostnames)\npulumi.export(\"selectedHostnamesJson\", selected_hostnames_app_sec_selected_hostnames.hostnames_json)\npulumi.export(\"selectedHostnamesOutputText\", selected_hostnames_app_sec_selected_hostnames.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var selectedHostnamesAppSecSelectedHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSelectedHostnames.InvokeAsync(new Akamai.GetAppSecSelectedHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.SelectedHostnames = selectedHostnamesAppSecSelectedHostnames.Apply(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.Hostnames);\n        this.SelectedHostnamesJson = selectedHostnamesAppSecSelectedHostnames.Apply(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.HostnamesJson);\n        this.SelectedHostnamesOutputText = selectedHostnamesAppSecSelectedHostnames.Apply(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.OutputText);\n    }\n\n    [Output(\"selectedHostnames\")]\n    public Output\u003cstring\u003e SelectedHostnames { get; set; }\n    [Output(\"selectedHostnamesJson\")]\n    public Output\u003cstring\u003e SelectedHostnamesJson { get; set; }\n    [Output(\"selectedHostnamesOutputText\")]\n    public Output\u003cstring\u003e SelectedHostnamesOutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tselectedHostnamesAppSecSelectedHostnames, err := akamai.LookupAppSecSelectedHostnames(ctx, \u0026GetAppSecSelectedHostnamesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"selectedHostnames\", selectedHostnamesAppSecSelectedHostnames.Hostnames)\n\t\tctx.Export(\"selectedHostnamesJson\", selectedHostnamesAppSecSelectedHostnames.HostnamesJson)\n\t\tctx.Export(\"selectedHostnamesOutputText\", selectedHostnamesAppSecSelectedHostnames.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `hostnames`. List of selected hostnames.\n- `hostnames_json`. JSON-formatted list of selected hostnames.\n- `output_text`. Tabular report of the selected hostnames.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the protected hosts.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hostnamesJson": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostnames",
                    "hostnamesJson",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSiemDefinitions:getAppSecSiemDefinitions": {
            "description": "**Scopes**: SIEM definition\n\nReturns information about your SIEM (Security Information and Event Management) versions. The returned information is described in the [Get SIEM versions](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getsiemversions) section of the Application Security API.\n\n**Related API Endpoint**: [/appsec/v1/siem-definitions](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getsiemversions)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst siemDefinitions = akamai.getAppSecSiemDefinitions({});\nexport const siemDefinitionsJson = siemDefinitions.then(siemDefinitions =\u003e siemDefinitions.json);\nexport const siemDefinitionsOutput = siemDefinitions.then(siemDefinitions =\u003e siemDefinitions.outputText);\nconst siemDefinition = akamai.getAppSecSiemDefinitions({\n    siemDefinitionName: \"SIEM Version 01\",\n});\nexport const siemDefinitionId = siemDefinition.then(siemDefinition =\u003e siemDefinition.id);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nsiem_definitions = akamai.get_app_sec_siem_definitions()\npulumi.export(\"siemDefinitionsJson\", siem_definitions.json)\npulumi.export(\"siemDefinitionsOutput\", siem_definitions.output_text)\nsiem_definition = akamai.get_app_sec_siem_definitions(siem_definition_name=\"SIEM Version 01\")\npulumi.export(\"siemDefinitionId\", siem_definition.id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var siemDefinitions = Output.Create(Akamai.GetAppSecSiemDefinitions.InvokeAsync());\n        this.SiemDefinitionsJson = siemDefinitions.Apply(siemDefinitions =\u003e siemDefinitions.Json);\n        this.SiemDefinitionsOutput = siemDefinitions.Apply(siemDefinitions =\u003e siemDefinitions.OutputText);\n        var siemDefinition = Output.Create(Akamai.GetAppSecSiemDefinitions.InvokeAsync(new Akamai.GetAppSecSiemDefinitionsArgs\n        {\n            SiemDefinitionName = \"SIEM Version 01\",\n        }));\n        this.SiemDefinitionId = siemDefinition.Apply(siemDefinition =\u003e siemDefinition.Id);\n    }\n\n    [Output(\"siemDefinitionsJson\")]\n    public Output\u003cstring\u003e SiemDefinitionsJson { get; set; }\n    [Output(\"siemDefinitionsOutput\")]\n    public Output\u003cstring\u003e SiemDefinitionsOutput { get; set; }\n    [Output(\"siemDefinitionId\")]\n    public Output\u003cstring\u003e SiemDefinitionId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tsiemDefinitions, err := akamai.GetAppSecSiemDefinitions(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"siemDefinitionsJson\", siemDefinitions.Json)\n\t\tctx.Export(\"siemDefinitionsOutput\", siemDefinitions.OutputText)\n\t\topt0 := \"SIEM Version 01\"\n\t\tsiemDefinition, err := akamai.GetAppSecSiemDefinitions(ctx, \u0026GetAppSecSiemDefinitionsArgs{\n\t\t\tSiemDefinitionName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"siemDefinitionId\", siemDefinition.Id)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of the SIEM version information.\n- `output_text`. Tabular report showing the ID and name of each SIEM version.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSiemDefinitions.\n",
                "properties": {
                    "siemDefinitionName": {
                        "type": "string",
                        "description": ". Name of the SIEM definition you want to return information for. If not included, information is returned for all your SIEM definitions.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSiemDefinitions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "siemDefinitionName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSiemSettings:getAppSecSiemSettings": {
            "description": "**Scopes**: Security configuration\n\nReturns the SIEM (Security Event and Information Management) settings for a security configuration. The returned information is described in the [SIEM members](https://developer.akamai.com/api/cloud_security/application_security/v1.html#d8470aff) section of the Application Security API.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/siem](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getsiemsettings)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst siemSettings = configuration.then(configuration =\u003e akamai.getAppSecSiemSettings({\n    configId: configuration.configId,\n}));\nexport const siemSettingsJson = siemSettings.then(siemSettings =\u003e siemSettings.json);\nexport const siemSettingsOutput = siemSettings.then(siemSettings =\u003e siemSettings.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nsiem_settings = akamai.get_app_sec_siem_settings(config_id=configuration.config_id)\npulumi.export(\"siemSettingsJson\", siem_settings.json)\npulumi.export(\"siemSettingsOutput\", siem_settings.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var siemSettings = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSiemSettings.InvokeAsync(new Akamai.GetAppSecSiemSettingsArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.SiemSettingsJson = siemSettings.Apply(siemSettings =\u003e siemSettings.Json);\n        this.SiemSettingsOutput = siemSettings.Apply(siemSettings =\u003e siemSettings.OutputText);\n    }\n\n    [Output(\"siemSettingsJson\")]\n    public Output\u003cstring\u003e SiemSettingsJson { get; set; }\n    [Output(\"siemSettingsOutput\")]\n    public Output\u003cstring\u003e SiemSettingsOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsiemSettings, err := akamai.LookupAppSecSiemSettings(ctx, \u0026GetAppSecSiemSettingsArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"siemSettingsJson\", siemSettings.Json)\n\t\tctx.Export(\"siemSettingsOutput\", siemSettings.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list of the SIEM setting information.\n- `output_text`. Tabular report showing the SIEM setting information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSiemSettings.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration you want to return information for.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSiemSettings.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSlowPost:getAppSecSlowPost": {
            "description": "**Scopes**: Security policy\n\nReturns the slow POST protection settings for the specified security configuration and policy. Slow POST protections help defend a site against attacks that try to tie up the site by using extremely slow requests and responses: the idea is to keep the site occupied waiting for these requests and responses to finish instead of being occupied with new (and legitimate) transactions.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/slow-post](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getslowpostprotectionsettings)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst slowPost = configuration.then(configuration =\u003e akamai.getAppSecSlowPost({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const slowPostOutputText = slowPost.then(slowPost =\u003e slowPost.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nslow_post = akamai.get_app_sec_slow_post(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"slowPostOutputText\", slow_post.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var slowPost = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSlowPost.InvokeAsync(new Akamai.GetAppSecSlowPostArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.SlowPostOutputText = slowPost.Apply(slowPost =\u003e slowPost.OutputText);\n    }\n\n    [Output(\"slowPostOutputText\")]\n    public Output\u003cstring\u003e SlowPostOutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tslowPost, err := akamai.LookupAppSecSlowPost(ctx, \u0026GetAppSecSlowPostArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"slowPostOutputText\", slowPost.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `output_text`. Tabular report including the following:\n  - **ACTION**. Action taken any time slow POST protection is triggered. Valid values are:\n    - **alert**. Record the event.\n    - **abort**. Block the request.\n  - **SLOW_RATE_THRESHOLD RATE**. Average rate (in bytes per second over the specified time period) allowed before the specified action is triggered.\n  - **SLOW_RATE_THRESHOLD PERIOD**. Amount of time (in seconds) that the server should allow a request before marking the request as being too slow\n  - **DURATION_THRESHOLD TIMEOUT**. Maximum amount of time (in seconds) that the first eight kilobytes of the POST body must be received in order to avoid triggering the specified action.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSlowPost.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the slow POST settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the slow POST settings.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSlowPost.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecThreatIntel:getAppSecThreatIntel": {
            "description": "**Scopes**: Security policy\n\nReturns threat intelligence settings for a security policy Note that this data source is only available to organizations running the Adaptive Security Engine (ASE) beta. For more information on ASE, please contact your Akamai representative.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/rules/threat-intel](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getthreatintelligence)l\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst threatIntelAppSecThreatIntel = configuration.then(configuration =\u003e akamai.getAppSecThreatIntel({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const threatIntel = threatIntelAppSecThreatIntel.then(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.threatIntel);\nexport const json = threatIntelAppSecThreatIntel.then(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.json);\nexport const outputText = threatIntelAppSecThreatIntel.then(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nthreat_intel_app_sec_threat_intel = akamai.get_app_sec_threat_intel(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"threatIntel\", threat_intel_app_sec_threat_intel.threat_intel)\npulumi.export(\"json\", threat_intel_app_sec_threat_intel.json)\npulumi.export(\"outputText\", threat_intel_app_sec_threat_intel.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var threatIntelAppSecThreatIntel = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecThreatIntel.InvokeAsync(new Akamai.GetAppSecThreatIntelArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.ThreatIntel = threatIntelAppSecThreatIntel.Apply(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.ThreatIntel);\n        this.Json = threatIntelAppSecThreatIntel.Apply(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.Json);\n        this.OutputText = threatIntelAppSecThreatIntel.Apply(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.OutputText);\n    }\n\n    [Output(\"threatIntel\")]\n    public Output\u003cstring\u003e ThreatIntel { get; set; }\n    [Output(\"json\")]\n    public Output\u003cstring\u003e Json { get; set; }\n    [Output(\"outputText\")]\n    public Output\u003cstring\u003e OutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tthreatIntelAppSecThreatIntel, err := akamai.LookupAppSecThreatIntel(ctx, \u0026GetAppSecThreatIntelArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"threatIntel\", threatIntelAppSecThreatIntel.ThreatIntel)\n\t\tctx.Export(\"json\", threatIntelAppSecThreatIntel.Json)\n\t\tctx.Export(\"outputText\", threatIntelAppSecThreatIntel.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `threat_intel`. Reports the threat Intelligence setting, either **on** or **off**.\n- `json`. JSON-formatted threat intelligence report\n- `output_text`. Tabular report of the threat intelligence information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecThreatIntel.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the threat intelligence settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the threat intelligence settings.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecThreatIntel.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "threatIntel": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "threatIntel",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecVersionNotes:getAppSecVersionNotes": {
            "description": "**Scopes**: Security configuration\n\nReturns the most recent version notes for a security configuration.\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/version-notes](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getversionnotes)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst versionNotes = configuration.then(configuration =\u003e akamai.getAppSecVersionNotes({\n    configId: configuration.configId,\n}));\nexport const versionNotesText = versionNotes.then(versionNotes =\u003e versionNotes.outputText);\nexport const versionNotesJson = versionNotes.then(versionNotes =\u003e versionNotes.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nversion_notes = akamai.get_app_sec_version_notes(config_id=configuration.config_id)\npulumi.export(\"versionNotesText\", version_notes.output_text)\npulumi.export(\"versionNotesJson\", version_notes.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var versionNotes = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecVersionNotes.InvokeAsync(new Akamai.GetAppSecVersionNotesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.VersionNotesText = versionNotes.Apply(versionNotes =\u003e versionNotes.OutputText);\n        this.VersionNotesJson = versionNotes.Apply(versionNotes =\u003e versionNotes.Json);\n    }\n\n    [Output(\"versionNotesText\")]\n    public Output\u003cstring\u003e VersionNotesText { get; set; }\n    [Output(\"versionNotesJson\")]\n    public Output\u003cstring\u003e VersionNotesJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tversionNotes, err := akamai.GetAppSecVersionNotes(ctx, \u0026GetAppSecVersionNotesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"versionNotesText\", versionNotes.OutputText)\n\t\tctx.Export(\"versionNotesJson\", versionNotes.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `json`. JSON-formatted list showing the version notes.\n- `output_text`. Tabular report showing the version notes.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecVersionNotes.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration you want to return information for.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecVersionNotes.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecWafMode:getAppSecWafMode": {
            "description": "**Scopes**: Security policy\n\nReturns information about how the Kona Rule Set rules associated with a security configuration and security policy are updated. The WAF (Web Application Firewall) mode determines whether Kona Rule Sets are automatically updated as part of automated attack groups (`mode = AAG`) or whether you must periodically check for new rules and then manually update those rules yourself (`mode = KRS`).\n\n**Related API Endpoint**: [/appsec/v1/configs/{configId}/versions/{versionNumber}/security-policies/{policyId}/mode](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getmode)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst wafMode = configuration.then(configuration =\u003e akamai.getAppSecWafMode({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const wafModeMode = wafMode.then(wafMode =\u003e wafMode.mode);\nexport const wafModeCurrentRuleset = wafMode.then(wafMode =\u003e wafMode.currentRuleset);\nexport const wafModeEvalStatus = wafMode.then(wafMode =\u003e wafMode.evalStatus);\nexport const wafModeEvalRuleset = wafMode.then(wafMode =\u003e wafMode.evalRuleset);\nexport const wafModeEvalExpirationDate = wafMode.then(wafMode =\u003e wafMode.evalExpirationDate);\nexport const wafModeText = wafMode.then(wafMode =\u003e wafMode.outputText);\nexport const wafModeJson = wafMode.then(wafMode =\u003e wafMode.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nwaf_mode = akamai.get_app_sec_waf_mode(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"wafModeMode\", waf_mode.mode)\npulumi.export(\"wafModeCurrentRuleset\", waf_mode.current_ruleset)\npulumi.export(\"wafModeEvalStatus\", waf_mode.eval_status)\npulumi.export(\"wafModeEvalRuleset\", waf_mode.eval_ruleset)\npulumi.export(\"wafModeEvalExpirationDate\", waf_mode.eval_expiration_date)\npulumi.export(\"wafModeText\", waf_mode.output_text)\npulumi.export(\"wafModeJson\", waf_mode.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var wafMode = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecWafMode.InvokeAsync(new Akamai.GetAppSecWafModeArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.WafModeMode = wafMode.Apply(wafMode =\u003e wafMode.Mode);\n        this.WafModeCurrentRuleset = wafMode.Apply(wafMode =\u003e wafMode.CurrentRuleset);\n        this.WafModeEvalStatus = wafMode.Apply(wafMode =\u003e wafMode.EvalStatus);\n        this.WafModeEvalRuleset = wafMode.Apply(wafMode =\u003e wafMode.EvalRuleset);\n        this.WafModeEvalExpirationDate = wafMode.Apply(wafMode =\u003e wafMode.EvalExpirationDate);\n        this.WafModeText = wafMode.Apply(wafMode =\u003e wafMode.OutputText);\n        this.WafModeJson = wafMode.Apply(wafMode =\u003e wafMode.Json);\n    }\n\n    [Output(\"wafModeMode\")]\n    public Output\u003cstring\u003e WafModeMode { get; set; }\n    [Output(\"wafModeCurrentRuleset\")]\n    public Output\u003cstring\u003e WafModeCurrentRuleset { get; set; }\n    [Output(\"wafModeEvalStatus\")]\n    public Output\u003cstring\u003e WafModeEvalStatus { get; set; }\n    [Output(\"wafModeEvalRuleset\")]\n    public Output\u003cstring\u003e WafModeEvalRuleset { get; set; }\n    [Output(\"wafModeEvalExpirationDate\")]\n    public Output\u003cstring\u003e WafModeEvalExpirationDate { get; set; }\n    [Output(\"wafModeText\")]\n    public Output\u003cstring\u003e WafModeText { get; set; }\n    [Output(\"wafModeJson\")]\n    public Output\u003cstring\u003e WafModeJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\twafMode, err := akamai.LookupAppSecWafMode(ctx, \u0026GetAppSecWafModeArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"wafModeMode\", wafMode.Mode)\n\t\tctx.Export(\"wafModeCurrentRuleset\", wafMode.CurrentRuleset)\n\t\tctx.Export(\"wafModeEvalStatus\", wafMode.EvalStatus)\n\t\tctx.Export(\"wafModeEvalRuleset\", wafMode.EvalRuleset)\n\t\tctx.Export(\"wafModeEvalExpirationDate\", wafMode.EvalExpirationDate)\n\t\tctx.Export(\"wafModeText\", wafMode.OutputText)\n\t\tctx.Export(\"wafModeJson\", wafMode.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned, and how that returned information is formatted:\n\n- `mode`. Security policy mode, either **KRS** (update manually) or **AAG** (update automatically), For organizations running the Adaptive Security Engine (ASE) beta, you'll get back **ASE_AUTO** for automatic updates or **ASE_MANUAL** for manual updates. Please contact your Akamai representative to learn more about ASE.\n- `current_ruleset`. Current ruleset version and the ISO 8601 date the version was introduced.\n- `eval_status`. Specifies whether evaluation mode is enabled or disabled.\n- `eval_ruleset`. Evaluation ruleset version and the ISO 8601 date the evaluation began.\n- `eval_expiration_date`. ISO 8601 timestamp indicating when evaluation mode expires. Valid only if `eval_status` is set to **enabled**.\n- `output_text`. Tabular report of the mode information.\n- `json`. JSON-formatted list of the mode information.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecWafMode.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the Kona Rule Set rules.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the Kona Rule Set rules.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecWafMode.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "currentRuleset": {
                        "type": "string"
                    },
                    "evalExpirationDate": {
                        "type": "string"
                    },
                    "evalRuleset": {
                        "type": "string"
                    },
                    "evalStatus": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "currentRuleset",
                    "evalExpirationDate",
                    "evalRuleset",
                    "evalStatus",
                    "json",
                    "mode",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecWapSelectedHostnames:getAppSecWapSelectedHostnames": {
            "description": "**Scopes**: Security policy\n\nReturns hostnames currently protected or being evaluated by a configuration and security policy.\nThis resource is available only to organizations running Web Application Protector (WAP).\nNote that the WAP selected hostnames feature is currently in beta.\nPlease contact your Akamai representative for more information.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Documentation\",\n});\nconst wapSelectedHostnames = configuration.then(configuration =\u003e akamai.getAppSecWapSelectedHostnames({\n    configId: configuration.configId,\n    securityPolicyId: \"gms1_134637\",\n}));\nexport const protectedHostnames = wapSelectedHostnames.then(wapSelectedHostnames =\u003e wapSelectedHostnames.protectedHosts);\nexport const evaluatedHostnames = wapSelectedHostnames.then(wapSelectedHostnames =\u003e wapSelectedHostnames.evaluatedHosts);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Documentation\")\nwap_selected_hostnames = akamai.get_app_sec_wap_selected_hostnames(config_id=configuration.config_id,\n    security_policy_id=\"gms1_134637\")\npulumi.export(\"protectedHostnames\", wap_selected_hostnames.protected_hosts)\npulumi.export(\"evaluatedHostnames\", wap_selected_hostnames.evaluated_hosts)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Documentation\",\n        }));\n        var wapSelectedHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecWapSelectedHostnames.InvokeAsync(new Akamai.GetAppSecWapSelectedHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"gms1_134637\",\n        })));\n        this.ProtectedHostnames = wapSelectedHostnames.Apply(wapSelectedHostnames =\u003e wapSelectedHostnames.ProtectedHosts);\n        this.EvaluatedHostnames = wapSelectedHostnames.Apply(wapSelectedHostnames =\u003e wapSelectedHostnames.EvaluatedHosts);\n    }\n\n    [Output(\"protectedHostnames\")]\n    public Output\u003cstring\u003e ProtectedHostnames { get; set; }\n    [Output(\"evaluatedHostnames\")]\n    public Output\u003cstring\u003e EvaluatedHostnames { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Documentation\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\twapSelectedHostnames, err := akamai.LookupAppSecWapSelectedHostnames(ctx, \u0026GetAppSecWapSelectedHostnamesArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"gms1_134637\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"protectedHostnames\", wapSelectedHostnames.ProtectedHosts)\n\t\tctx.Export(\"evaluatedHostnames\", wapSelectedHostnames.EvaluatedHosts)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Output Options\n\nThe following options can be used to determine the information returned and how that returned information is formatted:\n\n- `protected_hostnames`. List of hostnames currently protected under the security configuration and security policy.\n- `evaluated_hostnames`. List of hostnames currently being evaluated under the security configuration and security policy.\n- `hostnames_json`. JSON-formatted report of the protected and evaluated hostnames.\n- `output_text`. Tabular reports of the protected and evaluated hostnames.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecWapSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": ". Unique identifier of the security configuration associated with the hostnames.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": ". Unique identifier of the security policy associated with the hostnames.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecWapSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "evaluatedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchTargets": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "protectedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "selectedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "evaluatedHosts",
                    "json",
                    "matchTargets",
                    "outputText",
                    "protectedHosts",
                    "securityPolicyId",
                    "selectedHosts",
                    "id"
                ]
            }
        },
        "akamai:index/getAuthoritiesSet:getAuthoritiesSet": {
            "description": "Use the `akamai.getAuthoritiesSet` data source to retrieve a contract's authorities set. You use the authorities set when creating new zones.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = pulumi.output(akamai.getAuthoritiesSet({\n    contract: \"ctr_1-AB123\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.get_authorities_set(contract=\"ctr_1-AB123\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Akamai.GetAuthoritiesSet.InvokeAsync(new Akamai.GetAuthoritiesSetArgs\n        {\n            Contract = \"ctr_1-AB123\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.GetAuthoritiesSet(ctx, \u0026GetAuthoritiesSetArgs{\n\t\t\tContract: \"ctr_1-AB123\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports this argument:\n\n* `contract` - (Required) The contract ID.\n\n## Attributes reference\n\nThis data source supports this attribute:\n\n* `authorities` - A list of authorities.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAuthoritiesSet.\n",
                "properties": {
                    "contract": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contract"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthoritiesSet.\n",
                "properties": {
                    "authorities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contract": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authorities",
                    "contract",
                    "id"
                ]
            }
        },
        "akamai:index/getContract:getContract": {
            "description": "Use the `akamai.getContract` data source to find a contract ID.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst exampleContract = pulumi.output(akamai.getContract({\n    groupName: \"example group name\",\n}));\nconst exampleProperty = new akamai.Property(\"example\", {\n    contractId: \"\",\n    \"data.akamai_contract.example.id\": [{}],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source requires one of these group arguments to return contract information: \n  * `group_name` - The name of the group containing the contract. \n  * `group_id` - The unique ID of the group containing the contract, including the  `grp_` prefix.\n  * `group` - (Deprecated) Either the group ID or the group name that includes the contract. You can't use this argument with `group_id` and `group_name`.\n\n## Attributes reference\n\n* `id` - The contract's unique ID, including the `ctr_` prefix.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getContract.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getContract.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groupId",
                    "groupName",
                    "id"
                ]
            }
        },
        "akamai:index/getContracts:getContracts": {
            "description": "Use the `akamai.getContracts` data source to list contracts associated with the [EdgeGrid API client token](https://developer.akamai.com/getting-started/edgegrid) you're using. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nReturn contracts associated with the EdgeGrid API client token currently used for authentication:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst my-example = akamai.getContracts({});\nexport const propertyMatch = my_example;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nmy_example = akamai.get_contracts()\npulumi.export(\"propertyMatch\", my_example)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_example = Output.Create(Akamai.GetContracts.InvokeAsync());\n        this.PropertyMatch = my_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmy_example, err := akamai.GetContracts(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"propertyMatch\", my_example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThere are no arguments available for this data source.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `contracts` - A list of supported contracts, with the following properties:\n  * `contract_id` - The contract's unique ID, including the `ctr_` prefix.\n  * `contract_type_name` - The type of contract, either `DIRECT_CUSTOMER`, `INDIRECT_CUSTOMER`, `PARENT_CUSTOMER`, `REFERRAL_PARTNER`, `TIER_1_RESELLER`, `VAR_CUSTOMER`, `VALUE_ADDED_RESELLER`, `PARTNER`, `PORTAL_PARTNER`, `STREAMING_RESELLER`, `AKAMAI_INTERNAL`, or `UNKNOWN`.\n",
            "outputs": {
                "description": "A collection of values returned by getContracts.\n",
                "properties": {
                    "contracts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getContractsContract:getContractsContract"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "contracts",
                    "id"
                ]
            }
        },
        "akamai:index/getCpCode:getCpCode": {
            "description": "Use the `akamai.CpCode` data source to retrieve the ID for a content provider (CP) code.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = pulumi.output(akamai.getCpCode({\n    contractId: \"ctr_1-AB123\",\n    groupId: \"grp_123\",\n    name: \"my cpcode name\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.get_cp_code(contract_id=\"ctr_1-AB123\",\n    group_id=\"grp_123\",\n    name=\"my cpcode name\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Akamai.GetCpCode.InvokeAsync(new Akamai.GetCpCodeArgs\n        {\n            ContractId = \"ctr_1-AB123\",\n            GroupId = \"grp_123\",\n            Name = \"my cpcode name\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"ctr_1-AB123\"\n\t\topt1 := \"grp_123\"\n\t\t_, err := akamai.LookupCpCode(ctx, \u0026GetCpCodeArgs{\n\t\t\tContractId: \u0026opt0,\n\t\t\tGroupId:    \u0026opt1,\n\t\t\tName:       \"my cpcode name\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\nHere's a real-world example that includes other data sources as dependencies:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst groupName = \"example group name\";\nconst cpcodeName = \"My CP code Name\";\nconst exampleContract = akamai.getContract({\n    groupName: groupName,\n});\nconst exampleGroup = exampleContract.then(exampleContract =\u003e akamai.getGroup({\n    groupName: groupName,\n    contractId: exampleContract.id,\n}));\nconst exampleCpCode = Promise.all([exampleGroup, exampleContract]).then(([exampleGroup, exampleContract]) =\u003e akamai.getCpCode({\n    name: cpcodeName,\n    groupId: exampleGroup.id,\n    contractId: exampleContract.id,\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ngroup_name = \"example group name\"\ncpcode_name = \"My CP code Name\"\nexample_contract = akamai.get_contract(group_name=group_name)\nexample_group = akamai.get_group(group_name=group_name,\n    contract_id=example_contract.id)\nexample_cp_code = akamai.get_cp_code(name=cpcode_name,\n    group_id=example_group.id,\n    contract_id=example_contract.id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var groupName = \"example group name\";\n        var cpcodeName = \"My CP code Name\";\n        var exampleContract = Output.Create(Akamai.GetContract.InvokeAsync(new Akamai.GetContractArgs\n        {\n            GroupName = groupName,\n        }));\n        var exampleGroup = exampleContract.Apply(exampleContract =\u003e Output.Create(Akamai.GetGroup.InvokeAsync(new Akamai.GetGroupArgs\n        {\n            GroupName = groupName,\n            ContractId = exampleContract.Id,\n        })));\n        var exampleCpCode = Output.Tuple(exampleGroup, exampleContract).Apply(values =\u003e\n        {\n            var exampleGroup = values.Item1;\n            var exampleContract = values.Item2;\n            return Output.Create(Akamai.GetCpCode.InvokeAsync(new Akamai.GetCpCodeArgs\n            {\n                Name = cpcodeName,\n                GroupId = exampleGroup.Id,\n                ContractId = exampleContract.Id,\n            }));\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tgroupName := \"example group name\"\n\t\tcpcodeName := \"My CP code Name\"\n\t\topt0 := groupName\n\t\texampleContract, err := akamai.GetContract(ctx, \u0026GetContractArgs{\n\t\t\tGroupName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := groupName\n\t\topt2 := exampleContract.Id\n\t\texampleGroup, err := akamai.GetGroup(ctx, \u0026GetGroupArgs{\n\t\t\tGroupName:  \u0026opt1,\n\t\t\tContractId: \u0026opt2,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt3 := exampleGroup.Id\n\t\topt4 := exampleContract.Id\n\t\t_, err = akamai.LookupCpCode(ctx, \u0026GetCpCodeArgs{\n\t\t\tName:       cpcodeName,\n\t\t\tGroupId:    \u0026opt3,\n\t\t\tContractId: \u0026opt4,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports these arguments:\n\n* `name` - (Required) The name of the CP code.\n* `group_id` - (Required) The group's unique ID, including the `grp_` prefix.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n\n### Deprecated arguments\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `group` - (Deprecated) Replaced by `group_id`. Maintained for legacy purposes.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `id` - The ID of the CP code, including the `cpc_` prefix.\n* `product_ids` - An array of product IDs associated with this CP code. Each ID returned includes the `prd_` prefix.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contract",
                    "contractId",
                    "group",
                    "groupId",
                    "name",
                    "productIds",
                    "id"
                ]
            }
        },
        "akamai:index/getDnsRecordSet:getDnsRecordSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "recordType",
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "rdatas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "rdatas",
                    "recordType",
                    "zone",
                    "id"
                ]
            }
        },
        "akamai:index/getGroup:getGroup": {
            "description": "Use the `akamai.getGroup` data source to get a group by name.\n\nEach account features a hierarchy of groups, which control access to your\nAkamai configurations and help consolidate reporting functions, typically\nmapping to an organizational hierarchy. Using either Control Center or the\n[Identity Management: User Administration API](https://developer.akamai.com/en-us/api/core_features/identity_management_user_admin/v2.html),\naccount administrators can assign properties to specific groups, each with\nits own set of users and accompanying roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst exampleGroup = pulumi.output(akamai.getGroup({\n    contractId: \"\",\n    \"data.akamai_contract.example.id\": [{}],\n    groupName: \"example group name\",\n}));\nconst exampleContract = pulumi.output(akamai.getContract({\n    groupName: \"example group name\",\n}));\nconst exampleProperty = new akamai.Property(\"example\", {\n    \"data.akamai_group.example.id\": [{}],\n    groupId: \"\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports these arguments:\n\n* `group_name` - (Required) The group name.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n\n### Deprecated arguments\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `name` -  (Deprecated) Replaced by `group_name`. Maintained for legacy purposes.\n\n## Attributes reference\n\nThis data source returns this attribute:\n\n* `id` - The group's unique ID, including the `grp_` prefix.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "deprecationMessage": "The setting \"name\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "deprecationMessage": "The setting \"name\" has been deprecated."
                    }
                },
                "type": "object",
                "required": [
                    "contract",
                    "contractId",
                    "groupName",
                    "name",
                    "id"
                ]
            }
        },
        "akamai:index/getGroups:getGroups": {
            "description": "Use the `akamai.getGroups` data source to list groups associated with the [EdgeGrid API client token](https://developer.akamai.com/getting-started/edgegrid) you're using.\n\n## Basic usage\n\nReturn groups associated with the EdgeGrid API client token you're using:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst my-example = akamai.getGroups({});\nexport const propertyMatch = my_example;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nmy_example = akamai.get_groups()\npulumi.export(\"propertyMatch\", my_example)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var my_example = Output.Create(Akamai.GetGroups.InvokeAsync());\n        this.PropertyMatch = my_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmy_example, err := akamai.GetGroups(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"propertyMatch\", my_example)\n\t\treturn nil\n\t})\n}\n```\n\n## Argument reference\n\nThere are no arguments available for this data source.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `groups` - A list of supported groups, with the following attributes:\n  * `group_id` - A group's unique ID, including the `grp_` prefix.\n  * `group_name` - The name of the group.\n  * `parent_group_id` - The ID of the parent group, if applicable.\n  * `contract_ids` - An array of strings listing the contract IDs for each group.\n",
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGroupsGroup:getGroupsGroup"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "akamai:index/getGtmDefaultDatacenter:getGtmDefaultDatacenter": {
            "description": "Use the `akamai.getGtmDefaultDatacenter` data source to retrieve the default data center, ID, and nickname.\n\n## Argument reference\n\nThis data source supports these arguments:\n\n* `domain` - (Required)\n* `datacenter` - (Optional) The default is `5400`.\n\n## Attributes reference\n\nThis data source supports these attributes:\n\n* `id` - The data resource ID. Enter in this format: `\u003cdomain\u003e:default_datacenter:\u003cdatacenter_id\u003e`.\n* `datacenter_id` - The default data center ID.\n* `nickname` - The default data center nickname.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nickname": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "domain",
                    "nickname",
                    "id"
                ]
            }
        },
        "akamai:index/getNetworkLists:getNetworkLists": {
            "description": "Use the `akamai.getNetworkLists` data source to retrieve information about the available network lists,\noptionally filtered by list type or based on a search string. The information available is described\n[here](https://developer.akamai.com/api/cloud_security/network_lists/v2.html#getlists). \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst networkLists = akamai.getNetworkLists({});\nexport const networkListsText = networkLists.then(networkLists =\u003e networkLists.outputText);\nexport const networkListsJson = networkLists.then(networkLists =\u003e networkLists.json);\nexport const networkListsList = networkLists.then(networkLists =\u003e networkLists.lists);\nconst networkListsFilter = akamai.getNetworkLists({\n    name: \"Test Whitelist\",\n    type: \"IP\",\n});\nexport const networkListsFilterText = networkListsFilter.then(networkListsFilter =\u003e networkListsFilter.outputText);\nexport const networkListsFilterJson = networkListsFilter.then(networkListsFilter =\u003e networkListsFilter.json);\nexport const networkListsFilterList = networkListsFilter.then(networkListsFilter =\u003e networkListsFilter.lists);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nnetwork_lists = akamai.get_network_lists()\npulumi.export(\"networkListsText\", network_lists.output_text)\npulumi.export(\"networkListsJson\", network_lists.json)\npulumi.export(\"networkListsList\", network_lists.lists)\nnetwork_lists_filter = akamai.get_network_lists(name=\"Test Whitelist\",\n    type=\"IP\")\npulumi.export(\"networkListsFilterText\", network_lists_filter.output_text)\npulumi.export(\"networkListsFilterJson\", network_lists_filter.json)\npulumi.export(\"networkListsFilterList\", network_lists_filter.lists)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var networkLists = Output.Create(Akamai.GetNetworkLists.InvokeAsync());\n        this.NetworkListsText = networkLists.Apply(networkLists =\u003e networkLists.OutputText);\n        this.NetworkListsJson = networkLists.Apply(networkLists =\u003e networkLists.Json);\n        this.NetworkListsList = networkLists.Apply(networkLists =\u003e networkLists.Lists);\n        var networkListsFilter = Output.Create(Akamai.GetNetworkLists.InvokeAsync(new Akamai.GetNetworkListsArgs\n        {\n            Name = \"Test Whitelist\",\n            Type = \"IP\",\n        }));\n        this.NetworkListsFilterText = networkListsFilter.Apply(networkListsFilter =\u003e networkListsFilter.OutputText);\n        this.NetworkListsFilterJson = networkListsFilter.Apply(networkListsFilter =\u003e networkListsFilter.Json);\n        this.NetworkListsFilterList = networkListsFilter.Apply(networkListsFilter =\u003e networkListsFilter.Lists);\n    }\n\n    [Output(\"networkListsText\")]\n    public Output\u003cstring\u003e NetworkListsText { get; set; }\n    [Output(\"networkListsJson\")]\n    public Output\u003cstring\u003e NetworkListsJson { get; set; }\n    [Output(\"networkListsList\")]\n    public Output\u003cstring\u003e NetworkListsList { get; set; }\n    [Output(\"networkListsFilterText\")]\n    public Output\u003cstring\u003e NetworkListsFilterText { get; set; }\n    [Output(\"networkListsFilterJson\")]\n    public Output\u003cstring\u003e NetworkListsFilterJson { get; set; }\n    [Output(\"networkListsFilterList\")]\n    public Output\u003cstring\u003e NetworkListsFilterList { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnetworkLists, err := akamai.GetNetworkLists(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"networkListsText\", networkLists.OutputText)\n\t\tctx.Export(\"networkListsJson\", networkLists.Json)\n\t\tctx.Export(\"networkListsList\", networkLists.Lists)\n\t\topt0 := \"Test Whitelist\"\n\t\topt1 := \"IP\"\n\t\tnetworkListsFilter, err := akamai.GetNetworkLists(ctx, \u0026GetNetworkListsArgs{\n\t\t\tName: \u0026opt0,\n\t\t\tType: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"networkListsFilterText\", networkListsFilter.OutputText)\n\t\tctx.Export(\"networkListsFilterJson\", networkListsFilter.Json)\n\t\tctx.Export(\"networkListsFilterList\", networkListsFilter.Lists)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkLists.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of a specific network list to retrieve. If not supplied, information about all network\nlists will be returned.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of network lists to be retrieved; must be either \"IP\" or \"GEO\". If not supplied,\ninformation about both types will be returned.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkLists.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of information about the specified network list(s).\n"
                    },
                    "lists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list containing the IDs of the specified network lists(s).\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the network list information.\n"
                    },
                    "type": {
                        "type": "string"
                    },
                    "uniqueid": {
                        "type": "string",
                        "description": "The ID of the indicated list (if the `name` argument was supplied).\n"
                    }
                },
                "type": "object",
                "required": [
                    "json",
                    "lists",
                    "outputText",
                    "uniqueid",
                    "id"
                ]
            }
        },
        "akamai:index/getProperties:getProperties": {
            "description": "Use the `akamai.getProperties` data source to query and retrieve the list of properties for a group and contract\nbased on the [EdgeGrid API client token](https://developer.akamai.com/getting-started/edgegrid) you're using.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nReturn properties associated with the EdgeGrid API client token currently used for authentication:\n\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const myPropertyList = data.akamai_properties.example;\n```\n```python\nimport pulumi\n\npulumi.export(\"myPropertyList\", data[\"akamai_properties\"][\"example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.MyPropertyList = data.Akamai_properties.Example;\n    }\n\n    [Output(\"myPropertyList\")]\n    public Output\u003cstring\u003e MyPropertyList { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"myPropertyList\", data.Akamai_properties.Example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports these arguments:\n\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n\n## Attributes reference\n\nThis data source returns this attribute:\n\n* `properties` - A list of properties available for the contract and group IDs provided.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProperties.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperties.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertiesProperty:getPropertiesProperty"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "properties",
                    "id"
                ]
            }
        },
        "akamai:index/getProperty:getProperty": {
            "description": "Use the `akamai.Property` data source to query and list the property ID and rule tree based on the property name.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThis example returns the property ID and rule tree based on the property name and optional version argument:\n\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = akamai.getProperty({\n    name: \"terraform-demo\",\n    version: \"1\",\n});\nexport const myPropertyID = example;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.get_property(name=\"terraform-demo\",\n    version=1)\npulumi.export(\"myPropertyID\", example)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Akamai.GetProperty.InvokeAsync(new Akamai.GetPropertyArgs\n        {\n            Name = \"terraform-demo\",\n            Version = 1,\n        }));\n        this.MyPropertyID = example;\n    }\n\n    [Output(\"myPropertyID\")]\n    public Output\u003cstring\u003e MyPropertyID { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := 1\n\t\texample, err := akamai.LookupProperty(ctx, \u0026GetPropertyArgs{\n\t\t\tName:    \"terraform-demo\",\n\t\t\tVersion: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"myPropertyID\", example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports these arguments:\n\n* `name` - (Required) The property name.\n* `version` - (Optional) The version of the property whose ID you want to list.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `property_ID` - A property's unique identifier, including the `prp_` prefix.\n* `rules` - A JSON-encoded rule tree for a given property.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProperty.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperty.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "rules",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyHostnames:getPropertyHostnames": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyHostnames.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyHostnames.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyHostnamesHostname:getPropertyHostnamesHostname"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "hostnames",
                    "propertyId",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyProducts:getPropertyProducts": {
            "description": "Use the `akamai.getPropertyProducts` data source to list the products included on a contract.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThis example returns products associated with the [EdgeGrid client token](https://developer.akamai.com/getting-started/edgegrid) for a given contract:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_property_products[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_property_products\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_property_products.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_property_products.My-example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports this argument:\n\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `products` - A list of supported products for the contract, including:\n  * `product_id` - The product's unique ID, including the `prd_` prefix.\n  * `product_name` - A string containing the product name.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyProducts.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyProducts.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyProductsProduct:getPropertyProductsProduct"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "products",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyRuleFormats:getPropertyRuleFormats": {
            "description": "Use the `akamai.getPropertyRuleFormats` data source to query the list of\nknown rule formats.\nYou use rule formats to [freeze](https://developer.akamai.com/api/core_features/property_manager/v1.html#freezerf) or\n[update](https://developer.akamai.com/api/core_features/property_manager/v1.html#updaterf) the versioned set of behaviors\nand criteria a rule tree invokes. Without this mechanism, behaviors and criteria\nwould update automatically and generate unexpected errors.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nUse this example to list available property rule formats:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_property_rule_formats[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_property_rule_formats\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_property_rule_formats.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_property_rule_formats.My-example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThere are no arguments available for this data source.\n",
            "outputs": {
                "description": "A collection of values returned by getPropertyRuleFormats.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ruleFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "ruleFormats",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyRules:getPropertyRules": {
            "description": "Use the `akamai.getPropertyRules` data source to query and retrieve the rule tree of\nan existing property version. This data source lets you search across the contracts\nand groups you have access to.\n\n## Basic usage\n\nThis example returns the rule tree for version 3 of a property based on the selected contract and group:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_property_rules[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_property_rules\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_property_rules.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_property_rules.My-example)\n\t\treturn nil\n\t})\n}\n```\n\n## Argument reference\n\nThis data source supports these arguments:\n\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `property_id` - (Required) A property's unique ID, including the `prp_` prefix.\n* `version` - (Optional) The version to return. Returns the latest version by default.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `rules` - A JSON-encoded rule tree for the property.\n* `errors` - A list of validation errors for the rule tree object returned. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the Property Manager API documentation.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "errors",
                    "groupId",
                    "propertyId",
                    "rules",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyRulesTemplate:getPropertyRulesTemplate": {
            "description": "The `akamai.getPropertyRulesTemplate` data source lets you configure a rule tree through the use of JSON template files. A rule tree is a nested block of property\nrules in JSON format that include match criteria and behaviors.\n\nWith this data source you define the location of the JSON template files and provide information about any user-defined variables included within the templates.\n\nThe template format used in this data source matches those used in the [Property Manager CLI](https://learn.akamai.com/en-us/learn_akamai/getting_started_with_akamai_developers/developer_tools/getstartedpmcli.html#addanewsnippet).\n\nYou can pass user-defined variables by supplying either:\n\n* paths to `variableDefinitions.json` and `variables.json` with syntax used in Property Manager CLI, or\n* a set of provider variables.\n\n## Referencing sub-files from a template\n\nYou can split each template out into a series of smaller template files. To add\nthem to this data source, you need to include them in the currently loaded file,\nwhich corresponds to the value in the `template_file` argument.  For example, to\ninclude `example-file.json` from the `property-snippets` directory, use this syntax\nincluding the quotes: `\"#include:example-file.json\"`.  Make sure the `property-snippets` folder contains only `.json` files.\nAll files are resolved in relation to the directory that contains the starting template file.\n\n## Inserting variables in a template\n\nYou can also add variables to a template by using a string like `“${env.\u003cvariableName\u003e}\"`. You'll need the quotes here too.  \nThese variables follow the format used in the [Property Manager CLI](https://github.com/akamai/cli-property-manager#update-the-variabledefinitions-file).  They differ from the provider variables which should resolve normally.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n## Argument reference\n\n* `template_file` - (Required) The absolute path to your top-level JSON template file. The top-level template combines smaller, nested JSON templates to form your property rule tree.\n* `variables` - (Optional) A definition of a variable. Variables aren't required and you can use multiple ones if needed. This argument conflicts with the `variable_definition_file` and `variable_values_file` arguments. A `variables` block includes:\n    * `name` - The name of the variable used in template.\n    * `type` - The type of variable: `string`, `number`, `bool`, or `jsonBlock`.\n    * `value` - The value of the variable passed as a string.\n* `variable_definition_file` - (Optional) The absolute path to the file containing variable definitions and defaults. This file follows the syntax used in the [Property Manager CLI](https://github.com/akamai/cli-property-manager). This argument is required if you set `variable_values_file` and conflicts with `variables`.\n* `variable_values_file` - (Optional) The absolute path to the file containing variable values. This file follows the syntax used in the Property Manager CLI. This argument is required if you set `variable_definition_file` and conflicts with `variables`.\n\n## Attributes reference\n\nThis data source returns this attribute:\n\n* `json` - The fully expanded template with variables and all nested templates resolved.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRulesTemplate.\n",
                "properties": {
                    "templateFile": {
                        "type": "string"
                    },
                    "varDefinitionFile": {
                        "type": "string"
                    },
                    "varValuesFile": {
                        "type": "string"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "templateFile"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRulesTemplate.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "templateFile": {
                        "type": "string"
                    },
                    "varDefinitionFile": {
                        "type": "string"
                    },
                    "varValuesFile": {
                        "type": "string"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "json",
                    "templateFile",
                    "id"
                ]
            }
        },
        "akamai:properties/getCpCode:getCpCode": {
            "inputs": {
                "description": "A collection of arguments for invoking getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contract",
                    "contractId",
                    "group",
                    "groupId",
                    "name",
                    "productIds",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.properties.getCpCode has been deprecated in favor of akamai.getCpCode"
        },
        "akamai:properties/getProperty:getProperty": {
            "inputs": {
                "description": "A collection of arguments for invoking getProperty.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperty.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "rules",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.properties.getProperty has been deprecated in favor of akamai.getProperty"
        },
        "akamai:properties/getPropertyRules:getPropertyRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "errors",
                    "groupId",
                    "propertyId",
                    "rules",
                    "version",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.properties.getPropertyRules has been deprecated in favor of akamai.getPropertyRules"
        },
        "akamai:trafficmanagement/getGtmDefaultDatacenter:getGtmDefaultDatacenter": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nickname": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "domain",
                    "nickname",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.trafficmanagement.getGtmDefaultDatacenter has been deprecated in favor of akamai.getGtmDefaultDatacenter"
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "akamai": "Akamai"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing akamai cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/akamai/terraform-provider-akamai)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-akamai` repo](https://github.com/pulumi/pulumi-akamai/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`akamai/terraform-provider-akamai` repo](https://github.com/akamai/terraform-provider-akamai/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/akamai/terraform-provider-akamai)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-akamai` repo](https://github.com/pulumi/pulumi-akamai/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`akamai/terraform-provider-akamai` repo](https://github.com/akamai/terraform-provider-akamai/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}